[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[project]
name = "commizard"
dynamic = ["version"]
authors = [
    { name = "Chungzter", email = "freezycry@protonmail.com" },
]
description = "The commit writing Wizard Assistant"
dependencies = [
    "rich>=13.9.0,<=14.1.0",
    "requests>=2.32.2,<=2.32.5",
    "pyperclip>=1.8.0,<=1.9.0",
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = "MIT"
license-files = ["LICENSE"]
keywords = [
    "Commit message helper",
    "commit assistant",
    "git",
    "AI assistant",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<=8.4.2",
    "pytest-cov>=4.0.0,<=7.0.0",
    "ruff>=0.1.0,<=0.13.3",
    "mypy>=1.0.0,<=1.18.2",
]

[project.urls]
Homepage = "https://github.com/Chungzter/CommiZard"
Issues = "https://github.com/Chungzter/CommiZard/issues"

[project.scripts]
commizard = "commizard.cli:main"

[tool.hatch.version]
path = "src/commizard/__init__.py"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = "tests"

[tool.ruff]
line-length = 80

[tool.ruff.lint]
extend-select = [
    "E",   # Pycodestyle errors (style issues)
    "W",   # Pycodestyle warnings (style issues)
    "I",   # isort – import ordering checks
    "N",   # PEP8 Naming – naming conventions
    "UP",  # Pyupgrade – upgrades syntax to newer Python versions
    "S",   # Flake8-bandit – security issues
    "BLE", # Flake8-blind-except – flags bare excepts
    "B",   # Flake8-bugbear – common bug patterns
    "A",   # Flake8-builtins – misuse of Python built-in names
    "C4",  # Flake8-comprehensions – best practices in comprehensions
    "PIE", # Flake8-pie – Python improvement suggestions
    "RSE", # Flake8-raise – proper raise statement usage
    "SLF", # Flake8-self – flags instance methods that don't use self
    "SIM", # Flake8-simplify – code simplification hints
    "TC",  # Flake8-type-checking – proper import of typing in type checks
    "PTH", # Flake8-use-pathlib – encourages pathlib over os.path
    "RUF", # Ruff-specific rules – additional Ruff checks
]

ignore = [
    "S311", # Standard PRNGs are not suitable for security/cryptographic purposes
    "E501", # Checks for lines that exceed the specified maximum character length.
    "S607", # Starting a process with a partial executable path
]

[tool.ruff.format]
line-ending = "lf"
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = [
    "S101",  # Checks for uses of the assert keyword
]

[[tool.mypy.overrides]]
module = [
    "requests",
    "pyperclip",
]
ignore_missing_imports = true
