Metadata-Version: 2.4
Name: db4e
Version: 0.48.1
Summary: A unified Monero XMR mining dashboard for deployment, operation and real-time analytics.
License: GPL-3.0-or-later
License-File: LICENSE
Keywords: monero,mining,textual,dashboard,analytics
Author: Nadim-Daniel Ghaznavi
Author-email: nghaznavi@gmail.com
Requires-Python: >=3.10,<3.12
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: System :: Monitoring
Requires-Dist: PyYAML (>=6.0.2,<7.0.0)
Requires-Dist: fastapi (>=0.119.0,<0.120.0)
Requires-Dist: httpx (>=0.28.1,<0.29.0)
Requires-Dist: loguru (>=0.7.3,<0.8.0)
Requires-Dist: myloginpath (>=0.0.4,<0.0.5)
Requires-Dist: orjson (>=3.10.15,<4.0.0)
Requires-Dist: plotext (>=5.3.2,<6.0.0)
Requires-Dist: psutil (>=7.0.0,<8.0.0)
Requires-Dist: pydantic (>=2.12.2,<3.0.0)
Requires-Dist: pymongo (>=4.13.2,<5.0.0)
Requires-Dist: pytest-asyncio (>=1.2.0,<2.0.0)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Requires-Dist: rich (>=14.0.0,<15.0.0)
Requires-Dist: sqlite-utils (>=3.35,<4.0)
Requires-Dist: textual-dev (>=1.7.0,<2.0.0)
Requires-Dist: textual-plot (>=0.8.0,<0.9.0)
Requires-Dist: textual-plotext (>=1.0.1,<2.0.0)
Requires-Dist: textual[syntax] (>=6.0.0,<7.0.0)
Requires-Dist: tomli_w (>=1.2.0,<2.0.0)
Requires-Dist: uvicorn (>=0.37.0,<0.38.0)
Requires-Dist: zstandard (>=0.23.0,<0.24.0)
Project-URL: Homepage, https://github.com/NadimGhaznavi/Db4E
Project-URL: Repository, https://github.com/NadimGhaznavi/Db4E
Description-Content-Type: text/markdown

# Welcome

This is the home of **Db4E**, the **Database 4 Everything** project — A unified Monero XMR mining dashboard for deployment, operation and real-time analytics.

Db4E aims to be simple enough for new miners and flexible enough for advanced users. It’s still under active development, but the foundations are solid — and thanks to the [Textual Rapid Application Framework](https://textual.textualize.io/), progress is astonishingly fast.

**Now available on [PyPI](https://pypi.org/project/db4e/):**  

```shell
pip install db4e
```

---

# Features Today

* 🎉 First official PyPI production release — now you can `pip install db4e`!
* 🛠️ Deployment manager with smooth vendor directory handling and update workflows.
* 🖥️ Fully integrated Textual-based TUI with interactive forms — no more manual command-line config.
* 🔒 Built-in security architecture with sudoers-based privilege management.
* 🧩 Modular design for future-proof upgrades of Monerod, P2Pool, and XMRig.
* ✅ Active development in Git branches, keeping `main` clean and stable.


The [https://xmr.osoyalce.com/](https://xmr.osoyalce.com/) site is generated by the old *Db4E* application. It houses live data from a small Monero XMR Mining farm and gives you a sense of what historical reporting can deliver.

---

# MongoDB Backend

Db4E includes a **MongoDB backend** to store historical mining data, logs, and configuration. The Db4E service runs continuously, monitors P2Pool logs and API responses, and writes structured records into MongoDB. That data powers features like [historical reports](https://xmr.osoyalce.com/pages/Reports.html) and the [interactive TUI](/pages/db4e-tui.py.html).


---

# Technology Stack

Db4E runs on [Debian Linux](https://www.debian.org/) and includes the following core components:

* [Db4E core application](https://github.com/NadimGhaznavi/Db4E) — built with the [Textual](https://textual.textualize.io/) RAD framework.
* [Monero Daemon (monerod)](https://www.getmonero.org/).
* [P2Pool daemon](https://github.com/SChernykh/p2pool).
* [XMRig](https://xmrig.com/) mining software.
* [MongoDB](https://www.mongodb.com/) for historical data storage.
* [systemd](https://en.wikipedia.org/wiki/Systemd) for service management.

---

# Release Management

For details on how development and releases are structured, see the  
[Git Branching Strategy](/pages/Git-Branching-Strategy.html) and  
[Git Commit Standard](/pages/Git-Commit-Standard.html).

---

# Getting Started

Refer to the [Getting Started](pages/Getting-Started.html) for detailed step on deploying Db4E.

---

# Coming Soon

* 📈  Rich historical data tracking for mining performance and yield.
* 🧙  Plotext-based terminal analytics directly in the TUI.
* 📢  PyPI release checking — automatic version notifications.
* 🔒  Full security architecture documentation.
* 🐞  Full unit + integration testing suite and CI/CD integration.
* 🕵️  Community building and open contributions — feedback welcomed!

---

# Community Feedback

*Questions? Ideas? Feedback?* Please go to the *db4e* project's [Discussions](https://github.com/NadimGhaznavi/db4e/discussions) page or checkout my [Blog](https://blog.osoyalce.com/).

---

# Donations

If you find Db4E useful, please consider [donating](/pages/Donations.html) to help support its ongoing development. Every contribution helps!



