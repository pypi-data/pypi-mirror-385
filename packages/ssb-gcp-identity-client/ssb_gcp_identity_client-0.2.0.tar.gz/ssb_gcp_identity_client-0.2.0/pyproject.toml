[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "ssb-gcp-identity-client"
version = "0.2.0"
description = "SSB GCP Identity Client"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Joachim Holst", email = "oho@ssb.no" }
]
maintainers = [
    { name = "Statistics Norway, Data collection platform Department (722)" }
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "click>=8.0.1",
    "google-auth>=2.25.0",
    "google-cloud-storage>=2.10.0"
]
dynamic = ["classifiers"]

[project.urls]
homepage = "https://github.com/statisticsnorway/ssb-gcp-identity-client"
repository = "https://github.com/statisticsnorway/ssb-gcp-identity-client"
documentation = "https://statisticsnorway.github.io/ssb-gcp-identity-client"
Changelog = "https://github.com/statisticsnorway/ssb-gcp-identity-client/releases"

[project.scripts]
ssb-gcp-identity-client = "ssb_gcp_identity_client.__main__:main"

[tool.poetry]
name = "ssb-gcp-identity-client"
classifiers = ["Development Status :: 3 - Alpha"]
requires-poetry = ">=2.0"

[tool.poetry.group.dev.dependencies]
pygments = ">=2.10.0"
black = { extras = ["jupyter"], version = ">=23.1.0" }
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
furo = ">=2021.11.12"
mypy = ">=0.930"
pre-commit = ">=3.0.0"
pre-commit-hooks = ">=4.1.0"
ruff = ">=0.0.284"
pytest = ">=6.2.5"
sphinx = ">=6.2.1"
sphinx-autobuild = ">=2021.3.14"
sphinx-autodoc-typehints = ">=1.24.0"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }
deptry = ">=0.23.0"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.9"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["ssb_gcp_identity_client", "tests"]
relative_files = true

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.deptry.per_rule_ignores]
DEP001 = ["nox", "nox_poetry"]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
force-exclude = true
show-fixes = true
src = ["src", "tests"]
target-version = "py311"
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
extend-exclude = [
    "__pycache__",
    "old",
    ".ipynb_checkpoints",
    "noxfile.py",
    "docs/conf.py",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN202",
    "ANN401",
    "D100",
    "D205",
    "FBT001",
    "FBT002",
    "E402",
    "E501",
    "S105",
    "PLR2004",
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "validator", "root_validator", "pydantic.validator"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"**/tests/*" = [
    "ANN001", "ANN002", "ANN003", "ANN201", "ANN204", "ANN205", "ANN206",
    "D100", "D101", "D102", "D103", "S101"
]
