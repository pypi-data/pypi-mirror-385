name: Test Suite
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

# Explicitly grant the `secrets.GITHUB_TOKEN` no permissions.
permissions: {}

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.10"
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        with:
          extra_args: --all-files --show-diff-on-failure

  unit-and-integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      # https://stackoverflow.com/a/64592785
      - name: neo4j 4 instance setup
        run: |
          docker run --detach \
            --name neo4j-4 \
            --env NEO4J_AUTH=none \
            --publish 7474:7474 \
            --publish 7473:7473 \
            --publish 7687:7687 \
            neo4j:4.4-community
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --frozen --all-extras --dev
      - name: Wait for neo4j 4 to be ready
        timeout-minutes: 1
        run: (docker logs -f neo4j-4 & ) | grep -q Started
      - name: run test_unit
        run: make test_unit
      - name: run test_integration
        run: make test_integration

  unit-and-integration-tests-neo4j5:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      # https://stackoverflow.com/a/64592785
      - name: neo4j 5 setup
        run: |
          docker run --detach \
            --name neo4j-5 \
            --env NEO4J_AUTH=none \
            --publish 7474:7474 \
            --publish 7473:7473 \
            --publish 7687:7687 \
            neo4j:5
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --frozen --all-extras --dev
      - name: Wait for neo4j 5 to be ready
        timeout-minutes: 1
        run: (docker logs -f neo4j-5 & ) | grep -q Started
      - name: run test_unit
        run:  make test_unit
      - name: run test_integration
        run: make test_integration

  # Test that the docker image builds successfully on each commit
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: dev.Dockerfile
          push: false # only build the image, don't push it anywhere
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
