[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ragora"
dynamic = ["version"]
description = "A RAG system for creating knowledge bases from different document formats"
readme = "README.pypi.md"
license = "MIT"
authors = [
    {name = "Vahid Lari", email = "vahid.lari@gmail.com"},
]
maintainers = [
    {name = "Vahid Lari", email = "vahid.lari@gmail.com"},
]
keywords = [
    "rag", "retrieval-augmented-generation", "nlp", 
    "machine-learning", "vector-database", "weaviate", "embeddings"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0", 
    "scikit-learn>=1.3.0",
    "sentence-transformers>=2.2.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "weaviate-client>=3.25.0",
    "pylatexenc>=2.10",
    "regex>=2023.0.0",
    "nltk>=3.8.0",
    "spacy>=3.6.0",
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "notebook>=7.0.0",
]

[project.scripts]
ragora = "ragora.cli:main"

[project.urls]
Homepage = "https://github.com/vahidlari/aiapps"
Repository = "https://github.com/vahidlari/aiapps"
Issues = "https://github.com/vahidlari/aiapps/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["ragora*"]

[tool.setuptools.package-data]
ragora = [
    "config/*.yaml",
    "config/*.yml",
    "examples/*.py",
    "examples/latex_samples/*.tex",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ragora"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=ragora",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.setuptools_scm]
write_to = "ragora/_version.py"
write_to_template = """\"\"\"Version information for the ragora package.\"\"\"

__version__ = "{version}"
__version_info__ = tuple(map(int, __version__.split(".")))
"""
