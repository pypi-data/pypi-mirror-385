[metadata]
name = monai-weekly
author = MONAI Consortium
author_email = monai.contact@gmail.com
url = https://monai.io/
description = AI Toolkit for Healthcare Imaging
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
platforms = OS Independent
license = Apache License 2.0
license_files = 
	LICENSE
project_urls = 
	Documentation=https://docs.monai.io/
	Bug Tracker=https://github.com/Project-MONAI/MONAI/issues
	Source Code=https://github.com/Project-MONAI/MONAI
classifiers = 
	Intended Audience :: Developers
	Intended Audience :: Education
	Intended Audience :: Science/Research
	Intended Audience :: Healthcare Industry
	Programming Language :: C++
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: Scientific/Engineering
	Topic :: Scientific/Engineering :: Artificial Intelligence
	Topic :: Scientific/Engineering :: Medical Science Apps.
	Topic :: Scientific/Engineering :: Information Analysis
	Topic :: Software Development
	Topic :: Software Development :: Libraries
	Typing :: Typed

[options]
python_requires = >= 3.9
setup_requires = 
	torch
	ninja
	packaging
install_requires = 
	torch>=2.4.1
	numpy>=1.24,<3.0

[options.extras_require]
all = 
	nibabel
	ninja
	scikit-image>=0.14.2
	scipy>=1.12.0; python_version >= '3.9'
	pillow
	tensorboard
	gdown>=4.7.3
	pytorch-ignite==0.4.11
	torchio
	torchvision
	itk>=5.2
	tqdm>=4.47.0
	lmdb
	psutil
	cucim-cu12; platform_system == "Linux" and python_version >= '3.9' and python_version <= '3.10'
	openslide-python
	openslide-bin
	tifffile; platform_system == "Linux" or platform_system == "Darwin"
	imagecodecs; platform_system == "Linux" or platform_system == "Darwin"
	pandas
	einops
	transformers>=4.36.0, <4.41.0; python_version <= '3.10'
	mlflow>=2.12.2
	clearml>=1.10.0rc0
	matplotlib>=3.6.3
	tensorboardX
	pyyaml
	fire
	jsonschema
	pynrrd
	pydicom
	h5py
	nni; platform_system == "Linux" and "arm" not in platform_machine and "aarch" not in platform_machine
	optuna
	onnx>=1.13.0
	onnxruntime; python_version <= '3.10'
	zarr
	lpips==0.1.4
	nvidia-ml-py
	huggingface_hub
	pyamg>=5.0.0, <5.3.0
nibabel = 
	nibabel
ninja = 
	ninja
skimage = 
	scikit-image>=0.14.2
scipy = 
	scipy>=1.12.0; python_version >= '3.9'
pillow = 
	pillow!=8.3.0
tensorboard = 
	tensorboard
gdown = 
	gdown>=4.7.3
ignite = 
	pytorch-ignite==0.4.11
torchio = 
	torchio
torchvision = 
	torchvision
itk = 
	itk>=5.2
tqdm = 
	tqdm>=4.47.0
lmdb = 
	lmdb
psutil = 
	psutil
cucim = 
	cucim-cu12; platform_system == "Linux" and python_version >= '3.9' and python_version <= '3.10'
openslide = 
	openslide-python
	openslide-bin
tifffile = 
	tifffile; platform_system == "Linux" or platform_system == "Darwin"
imagecodecs = 
	imagecodecs; platform_system == "Linux" or platform_system == "Darwin"
pandas = 
	pandas
einops = 
	einops
transformers = 
	transformers>=4.36.0, <4.41.0; python_version <= '3.10'
mlflow = 
	mlflow>=2.12.2
matplotlib = 
	matplotlib>=3.6.3
clearml = 
	clearml
tensorboardX = 
	tensorboardX
pyyaml = 
	pyyaml
fire = 
	fire
packaging = 
	packaging
jsonschema = 
	jsonschema
pynrrd = 
	pynrrd
pydicom = 
	pydicom
h5py = 
	h5py
nni = 
	nni; platform_system == "Linux" and "arm" not in platform_machine and "aarch" not in platform_machine
optuna = 
	optuna
onnx = 
	onnx>=1.13.0
	onnxruntime; python_version <= '3.10'
zarr = 
	zarr
lpips = 
	lpips==0.1.4
pynvml = 
	nvidia-ml-py
polygraphy = 
	polygraphy
huggingface_hub = 
	huggingface_hub
pyamg = 
	pyamg>=5.0.0, <5.3.0

[flake8]
select = B,C,E,F,N,P,T4,W,B9
max_line_length = 120
ignore = 
	E203
	E501
	E741
	W503
	W504
	C408
	N812
	B023
	B905
	B028
	B907
	B908
	B036
	E704
per_file_ignores = __init__.py: F401, __main__.py: F401
exclude = *.pyi,.git,.eggs,monai/_version.py,versioneer.py,venv,.venv,_version.py

[isort]
known_first_party = monai
profile = black
line_length = 120
skip = .git, .eggs, venv, .venv, versioneer.py, _version.py, conf.py, monai/__init__.py
skip_glob = *.pyi
add_imports = from __future__ import annotations
append_only = true

[versioneer]
VCS = git
style = pep440
versionfile_source = monai/_version.py
versionfile_build = monai/_version.py
tag_prefix = 
parentdir_prefix = 

[mypy]
ignore_missing_imports = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = False
warn_return_any = True
strict_equality = True
show_column_numbers = True
show_error_codes = True
pretty = False
warn_unused_configs = True
extra_checks = True
exclude = venv/

[mypy-versioneer]
ignore_errors = True

[mypy-monai._version]
ignore_errors = True

[mypy-monai.eggs]
ignore_errors = True

[mypy-monai.*]
check_untyped_defs = True
disallow_untyped_decorators = True

[mypy-monai.visualize.*,monai.utils.*,monai.optimizers.*,monai.losses.*,monai.inferers.*,monai.config.*,monai._extensions.*,monai.fl.*,monai.engines.*,monai.handlers.*,monai.auto3dseg.*,monai.bundle.*,monai.metrics.*,monai.apps.*]
disallow_incomplete_defs = True

[coverage:run]
concurrency = multiprocessing
source = .
data_file = .coverage/.coverage
omit = setup.py

[coverage:report]
exclude_lines = 
	pragma: no cover
	if TYPE_CHECKING:
	raise NotImplementedError
	if __name__ == .__main__.:
show_missing = True
skip_covered = True

[coverage:xml]
output = coverage.xml

[egg_info]
tag_build = 
tag_date = 0

