# coding: utf-8

"""
    Infrahub-API

    Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hyperstack.api.clusters_api import ClustersApi


class TestClustersApi(unittest.TestCase):
    """ClustersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ClustersApi()

    def tearDown(self) -> None:
        pass

    def test_attempt_to_manually_reconcile_a_cluster(self) -> None:
        """Test case for attempt_to_manually_reconcile_a_cluster

        Reconcile a cluster
        """
        pass

    def test_create_cluster(self) -> None:
        """Test case for create_cluster

        Create Cluster
        """
        pass

    def test_create_node(self) -> None:
        """Test case for create_node

        Create Node
        """
        pass

    def test_create_node_group(self) -> None:
        """Test case for create_node_group

        Create a node group in a cluster
        """
        pass

    def test_delete_a_cluster(self) -> None:
        """Test case for delete_a_cluster

        Delete a cluster
        """
        pass

    def test_delete_a_node_group(self) -> None:
        """Test case for delete_a_node_group

        Delete a node group
        """
        pass

    def test_delete_cluster_node(self) -> None:
        """Test case for delete_cluster_node

        Delete Cluster Node
        """
        pass

    def test_fetch_cluster_name_availability(self) -> None:
        """Test case for fetch_cluster_name_availability

        Fetch cluster name availability
        """
        pass

    def test_get_cluster_master_flavors(self) -> None:
        """Test case for get_cluster_master_flavors

        Get Cluster Master Flavors
        """
        pass

    def test_get_cluster_nodes(self) -> None:
        """Test case for get_cluster_nodes

        Get Cluster Nodes
        """
        pass

    def test_get_cluster_versions(self) -> None:
        """Test case for get_cluster_versions

        List Cluster Versions
        """
        pass

    def test_getting_cluster_detail(self) -> None:
        """Test case for getting_cluster_detail

        Getting Cluster Detail
        """
        pass

    def test_list_clusters(self) -> None:
        """Test case for list_clusters

        List Clusters
        """
        pass

    def test_list_node_groups(self) -> None:
        """Test case for list_node_groups

        List node groups for a cluster
        """
        pass

    def test_retrieve_a_node_group(self) -> None:
        """Test case for retrieve_a_node_group

        Retrieve a node group in a cluster
        """
        pass

    def test_update_a_node_group(self) -> None:
        """Test case for update_a_node_group

        Update a node group in a cluster
        """
        pass


if __name__ == '__main__':
    unittest.main()
