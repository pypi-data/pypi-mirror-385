#  SPDX-License-Identifier: Apache-2.0
#  SPDX-FileCopyrightText: Copyright the Vortex contributors

from datetime import date, datetime
from typing import TypeAlias, final

from typing_extensions import override

from .dtype import DType
from .scalar import ScalarPyType

IntoExpr: TypeAlias = Expr | int | str | date | datetime | None

@final
class Expr:
    @override
    def __eq__(self, other: IntoExpr) -> Expr: ...  # pyright: ignore[reportIncompatibleMethodOverride]
    @override
    def __ne__(self, other: IntoExpr) -> Expr: ...  # pyright: ignore[reportIncompatibleMethodOverride]
    def __lt__(self, other: IntoExpr) -> Expr: ...
    def __le__(self, other: IntoExpr) -> Expr: ...
    def __gt__(self, other: IntoExpr) -> Expr: ...
    def __ge__(self, other: IntoExpr) -> Expr: ...
    def __and__(self, other: IntoExpr) -> Expr: ...
    def __or__(self, other: IntoExpr) -> Expr: ...

def column(name: str) -> Expr: ...
def root() -> Expr: ...
def literal(dtype: DType, value: ScalarPyType) -> Expr: ...
def not_(child: Expr) -> Expr: ...
def and_(left: Expr, right: Expr) -> Expr: ...
