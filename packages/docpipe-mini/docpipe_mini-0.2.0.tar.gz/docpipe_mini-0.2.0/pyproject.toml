[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "docpipe-mini"
version = "0.2.0"
description = "Minimal document-to-jsonl serializer with coordinates for AI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DocPipe Team", email = "team@docpipe.ai"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
keywords = ["pdf", "document", "serialization", "jsonl", "ai", "coordinates"]
requires-python = ">=3.11"

# Core dependencies: ZERO third-party dependencies
dependencies = [
    "langchain>=0.3.27",
    "langchain-neo4j>=0.5.0",
    "langchain-openai>=0.3.35",
    "mem0ai>=1.0.0",
    "pymupdf>=1.26.5",
    "rank-bm25>=0.2.2",
]

# Optional extras for specific formats
[project.optional-dependencies]
# PDF processing (pypdfium2 - BSD license, ~11MB)
pdf = ["pypdfium2>=4.18.0"]

# PDF processing with PyMuPDF (AGPL license, ~11MB) - faster alternative
pdf-fast = ["pymupdf>=1.23.0"]

# DOCX processing (python-docx - MIT license, ~3MB)
docx = ["python-docx>=0.8.11"]

# XLSX processing (openpyxl - MIT license, ~2MB)
xlsx = ["openpyxl>=3.1.0"]

# Image processing (Pillow - HPND license, ~3MB)
image = ["Pillow>=10.0.0"]

# CLI dependencies (optional)
cli = [
    "typer>=0.9.0",
    "rich>=13.0.0",
]

# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-benchmark>=4.0.0",
    "mypy>=1.8.0",
    "types-PyYAML>=6.0.0",
    "ruff>=0.1.0",
    "pypdfium2>=4.18.0",  # For testing PDF processing
    "typer>=0.9.0",
    "rich>=13.0.0",
]

# All dependencies for full testing
all = [
    "docpipe-mini[pdf,docx,xlsx,image,cli,dev]"
]

[[tool.uv.index]]
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
default = true

[project.urls]
Homepage = "https://github.com/docpipe/docpipe-mini"
Repository = "https://github.com/docpipe/docpipe-mini"
Documentation = "https://docpipe-mini.readthedocs.io"
Issues = "https://github.com/docpipe/docpipe-mini/issues"

[project.scripts]
docpipe-mini = "docpipe:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["src/docpipe"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CLAUDE.md",
    "/pyproject.toml",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pypdfium2.*",
    "pymupdf.*",
    "PIL.*",
    "python_docx.*",
    "openpyxl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmarks (run with '-m benchmark')",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011", "B018"]
