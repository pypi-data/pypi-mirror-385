============= PyAPI >>'Al_sg225.ncmat'<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "#\n"
CPP>      "# Aluminium (Al, fcc, cubic, SG-225 / Fm-3m)\n"
CPP>      "#\n"
CPP>      "# Under usual conditions this phase exists from 0 to 933K.\n"
CPP>      "#\n"
CPP>      "# Structure converted with ncrystal_onlinedb2ncmat from:\n"
CPP>      "#\n"
CPP>      "#    \"Second edition. Interscience Publishers,\n"
CPP>      "#     New York, Cubic closest packed, ccp, structure\"\n"
CPP>      "#    Wyckoff R W G (1963)\n"
CPP>      "#    Crystallography Open Database entry 9008460\n"
CPP>      "#    https://www.crystallography.net/cod/9008460.html\n"
CPP>      "#\n"
CPP>      "# This crystal structure is also compatible with structure obtained from:\n"
CPP>      "#\n"
CPP>      "#   https://www.crystallography.net/cod/9012428.html\n"
CPP>      "#   https://www.crystallography.net/cod/9011602.html\n"
CPP>      "#   https://www.crystallography.net/cod/9012002.html\n"
CPP>      <<<SNIPPED 36 LINES, MD5=9f2a4e667bc76c810ed19d55d450954a>>>
CPP>      "    .654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n"
CPP>      "    .68327 .687962 .693084 .698207 .703766 .710271 .716775 .72328 .73082 .738646\n"
CPP>      "    .746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n"
CPP>      "    .798529 .79508 .774768 .71273 .67965 .649939 .627278 .607527 .590861 .57517\n"
CPP>      "    .561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n"
CPP>      "    .46898 .460042 .451104 .442408 .434216 .426025 .415941 .403984 .39053\n"
CPP>      "    .375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n"
CPP>      "    .373214 .372782 .372351 .37192 .371412 .370855 .370298 .369741 .368973\n"
CPP>      "    .367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n"
CPP>      "    .354458 .352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n"
CPP>      "    .322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .247663\n"
CPP>      "    .243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n"
CPP>      "    .337849 .366583 .394604 .428828 .466863 .508577 .555451 .617322 .679027\n"
CPP>      "    .79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n"
CPP>      "    .979429 .895711 .774741 .718589 .672154 .631992 .596623 .565164 .537389\n"
CPP>      "    .509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n"
CPP>      "    .289068 .261524 .233749 .20274 .16795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'Al_sg225.ncmat', compact=True<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat (compact form without comments)
CPP>    const char * textdata =
CPP>      "NCMAT v5\n@CELL\ncubic 4.04958\n@SPACEGROUP\n225\n@ATOMPOSITIONS\nAl 0 1/2 1/2\nAl 0 0 0\nAl 1/2 1/2 0\nAl 1/2 0 1/2\n@DYNINFO\nelemen"
CPP>      "t Al\nfraction 1\ntype vdos\nvdos_egrid .00485015 .0398222\nvdos_density .013232 .0141193 .0150065 .0158938 .0167811 .0176684 .0185557"
CPP>      "\n.0195536 .020725 .0218964 .0230678 .0242392 .0254106 .0265808 .027748\n.0289152 .0300825 .0312497 .032417 .0338129 .0352559 .0366988"
CPP>      " .0381418\n.0395847 .0412955 .043043 .0447906 .0465382 .0482858 .0500848 .0519404\n.0537959 .0556515 .057507 .0593626 .0613858 .063822"
CPP>      "6 .0662593 .0686961\n.0711328 .0735696 .0760063 .0785759 .081366 .0841561 .0869462 .0897363\n.0925265 .0954792 .0987494 .10202 .10529 "
CPP>      ".10856 .11183 .115538 .119309\n.12308 .126851 .130875 .135268 .139661 .144055 .148448 .152842 .157573\n.162305 .167036 .171767 .176499"
CPP>      " .18201 .187579 .193147 .198833 .20494\n.211048 .217155 .223262 .229369 .236467 .243837 .251208 .258578 .266432\n.275333 .284233 .2931"
CPP>      "33 .303592 .314275 .324959 .335642 .349394 .363213\n.377789 .396045 .414301 .439971 .471089 .514605 .610025 .707931 .696698\n.687436 ."
CPP>      "679569 .672862 .667612 .662494 .65946 .656426 .653391 .651511\n.649818 .648548 .648291 .648033 .648114 .648959 .649803 .650648 .652271"
CPP>      "\n.654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n.68327 .687962 .693084 .698207 .703766 .710271 .716775 .7232"
CPP>      "8 .73082 .738646\n.746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n.798529 .79508 .774768 .71273 .67965 .64993"
CPP>      "9 .627278 .607527 .590861 .57517\n.561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n.46898 .460042 .451104 .4424"
CPP>      "08 .434216 .426025 .415941 .403984 .39053\n.375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n.373214 .372782 .37"
CPP>      "2351 .37192 .371412 .370855 .370298 .369741 .368973\n.367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n.354458 "
CPP>      ".352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n.322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .24766"
CPP>      "3\n.243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n.337849 .366583 .394604 .428828 .466863 .508577 .555451 .6"
CPP>      "17322 .679027\n.79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n.979429 .895711 .774741 .718589 .672154 .6319"
CPP>      "92 .596623 .565164 .537389\n.509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n.289068 .261524 .233749 .20274 .1"
CPP>      "6795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'NCMAT v5\n# Here is a comment\n@DENSITY\n  1 g_per_cm3#And another one\n@DYNINFO\n  element H\n  fraction 1\n  type vdosdebye\n  debye_temp 300\n'<< ====================
Caught expected NCBadInput('Can not accept unnamed text data when converting to C++ code, since a string key will be needed in the code.')
============= PyAPI >>'NCMAT v5\n# Here is a comment\n@DENSITY\n  1 g_per_cm3#And another one\n@DYNINFO\n  element H\n  fraction 1\n  type vdosdebye\n  debye_temp 300\n'<< ====================
Caught expected NCBadInput('Can not accept unnamed text data when converting to C++ code, since a string key will be needed in the code.')
============= PyAPI >>TextData(dummyAl.ncmat, uid=2, 136 chars)<< ====================
ncmat2cpp : Processing dummyAl.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File dummyAl.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "# Here is a comment\n"
CPP>      "@DENSITY\n"
CPP>      "  1 g_per_cm3#And another one\n"
CPP>      "@DYNINFO\n"
CPP>      "  element H\n"
CPP>      "  fraction 1\n"
CPP>      "  type vdosdebye\n"
CPP>      "  debye_temp 300\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("dummyAl.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>AnyTextData('some_name.ncmat', 136 chars, MD5=b8aab69bcedb0b1ef4dfe0320ac62cab)<< ====================
ncmat2cpp : Processing some_name.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File some_name.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "# Here is a comment\n"
CPP>      "@DENSITY\n"
CPP>      "  1 g_per_cm3#And another one\n"
CPP>      "@DYNINFO\n"
CPP>      "  element H\n"
CPP>      "  fraction 1\n"
CPP>      "  type vdosdebye\n"
CPP>      "  debye_temp 300\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("some_name.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'LiquidHeavyWaterD2O_T293.6K.ncmat'<< ====================
ncmat2cpp : Processing LiquidHeavyWaterD2O_T293.6K.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>#include <array>
CPP>#include <cstdint>
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File LiquidHeavyWaterD2O_T293.6K.ncmat (too large for string literals)
CPP>    static const std::array<std::uint8_t,1560967> rawdata {
CPP>      78,67,77,65,84,32,118,53,10,35,10,35,32,72,101,97,118,121,32,119,97,116,101,114,32,40,68,50,79,41,32,98,97,115,101,100,32,111,110,32,69,
CPP>      78,68,70,47,66,45,86,73,73,73,46,48,32,115,99,97,116,116,101,114,105,110,103,32,107,101,114,110,101,108,115,32,98,121,32,74,46,73,46,32,
CPP>      77,97,114,113,117,101,122,10,35,32,68,97,109,105,97,110,44,32,101,116,46,32,97,108,46,32,40,115,101,101,32,98,101,108,111,119,32,102,111,
CPP>      114,32,114,101,102,101,114,101,110,99,101,115,41,46,32,80,108,101,97,115,101,32,99,104,101,99,107,32,116,104,101,32,64,68,69,78,83,73,84,
CPP>      89,10,35,32,99,97,114,101,102,117,108,108,121,32,98,101,108,111,119,44,32,97,115,32,116,104,101,32,100,101,110,115,105,116,121,32,111,102,
CPP>      32,108,105,113,117,105,100,32,119,97,116,101,114,32,100,101,112,101,110,100,115,32,111,110,32,116,104,101,32,109,97,116,101,114,105,97,
CPP>      108,10,35,32,112,114,101,115,115,117,114,101,46,10,35,10,35,32,78,111,116,105,99,101,58,32,84,104,105,115,32,78,67,77,65,84,32,102,105,
CPP>      108,101,32,105,115,32,118,97,108,105,100,32,97,116,32,84,61,50,57,51,46,54,75,32,111,110,108,121,46,32,79,116,104,101,114,32,102,105,108,
CPP>      101,115,32,97,108,116,101,114,110,97,116,105,118,101,108,121,32,112,114,111,118,105,100,101,10,35,32,116,104,101,32,115,97,109,101,32,109,
CPP>      97,116,101,114,105,97,108,32,97,116,32,116,101,109,112,101,114,97,116,117,114,101,115,58,10,35,10,35,32,32,32,32,32,32,32,50,56,51,46,54,
CPP>      75,32,51,48,48,46,48,75,32,51,50,51,46,54,75,32,51,53,48,46,48,75,32,51,55,51,46,54,75,32,52,48,48,46,48,75,32,52,50,51,46,54,75,10,35,
CPP>      32,32,32,32,32,32,32,52,53,48,46,48,75,32,52,55,51,46,54,75,32,53,48,48,46,48,75,32,53,50,51,46,54,75,32,53,53,48,46,48,75,32,53,55,51,
CPP>      46,54,75,32,54,48,48,46,48,75,10,35,32,32,32,32,32,32,32,54,50,51,46,54,75,10,35,10,35,32,73,110,32,99,97,115,101,32,121,111,117,114,32,
CPP>      108,111,99,97,108,32,105,110,115,116,97,108,108,97,116,105,111,110,32,100,111,101,115,32,110,111,116,32,112,114,111,118,105,100,101,32,
CPP>      97,108,108,32,116,104,101,115,101,32,102,105,108,101,115,44,32,116,104,101,121,32,99,97,110,32,98,101,10,35,32,100,111,119,110,108,111,
CPP>      97,100,101,100,32,102,114,111,109,58,32,104,116,116,112,115,58,47,47,103,105,116,104,117,98,46,99,111,109,47,109,99,116,111,111,108,115,
CPP>      47,110,99,114,121,115,116,97,108,45,101,120,116,114,97,47,116,114,101,101,47,72,69,65,68,47,100,97,116,97,10,35,10,64,83,84,65,84,69,79,
CPP>      <<<SNIPPED 35218 LINES, MD5=4c413318dd985f7e536448a32a701bc6>>>
CPP>      46,49,52,56,49,54,101,45,51,55,10,32,32,52,46,48,55,56,53,55,101,45,51,55,32,53,46,50,52,56,54,52,101,45,51,55,32,54,46,55,48,54,55,51,
CPP>      101,45,51,55,32,56,46,53,49,49,54,56,101,45,51,55,32,49,46,48,55,51,49,50,101,45,51,54,32,49,46,51,52,52,49,56,101,45,51,54,32,49,46,54,
CPP>      55,50,57,54,101,45,51,54,10,32,32,50,46,48,54,57,51,53,101,45,51,54,32,50,46,53,52,51,54,101,45,51,54,32,51,46,49,48,55,50,53,101,45,51,
CPP>      54,32,51,46,55,55,50,57,55,101,45,51,54,32,52,46,53,53,52,51,49,101,45,51,54,32,48,114,51,55,57,32,50,46,54,57,49,50,52,101,45,51,56,32,
CPP>      51,46,54,49,51,53,50,101,45,51,56,10,32,32,52,46,56,49,53,48,56,101,45,51,56,32,54,46,51,54,56,55,50,101,45,51,56,32,56,46,51,54,50,54,
CPP>      49,101,45,51,56,32,49,46,48,57,48,50,54,101,45,51,55,32,49,46,52,49,50,48,53,101,45,51,55,32,49,46,56,49,53,54,49,101,45,51,55,32,50,46,
CPP>      51,49,56,54,49,101,45,51,55,10,32,32,50,46,57,52,49,52,101,45,51,55,32,51,46,55,48,55,49,55,101,45,51,55,32,52,46,54,52,50,52,101,45,51,
CPP>      55,32,53,46,55,55,56,48,54,101,45,51,55,32,55,46,49,52,53,55,56,101,45,51,55,32,56,46,55,56,50,53,52,101,45,51,55,32,49,46,48,55,50,57,
CPP>      50,101,45,51,54,10,32,32,49,46,51,48,50,57,56,101,45,51,54,32,48,114,51,56,51,32,50,46,50,49,48,48,54,101,45,51,56,32,50,46,56,57,57,53,
CPP>      55,101,45,51,56,32,51,46,55,55,57,56,101,45,51,56,32,52,46,56,57,48,49,51,101,45,51,56,32,54,46,50,56,51,52,54,101,45,51,56,32,56,46,48,
CPP>      50,48,52,101,45,51,56,10,32,32,49,46,48,49,55,48,57,101,45,51,55,32,49,46,50,56,49,53,51,101,45,51,55,32,49,46,54,48,53,48,51,101,45,51,
CPP>      55,32,49,46,57,57,55,49,53,101,45,51,55,32,50,46,52,54,57,52,56,101,45,51,55,32,51,46,48,51,53,48,49,101,45,51,55,32,51,46,55,48,55,57,
CPP>      55,101,45,51,55,10,32,32,48,114,51,56,56,32,50,46,49,55,53,51,57,101,45,51,56,32,50,46,55,55,53,52,55,101,45,51,56,32,51,46,53,49,56,51,
CPP>      50,101,45,51,56,32,52,46,52,51,51,57,49,101,45,51,56,32,53,46,53,53,48,56,50,101,45,51,56,32,54,46,57,48,53,52,49,101,45,51,56,32,56,46,
CPP>      53,51,56,56,49,101,45,51,56,10,32,32,49,46,48,52,57,54,52,101,45,51,55,32,48,114,51,57,52,32,50,46,51,56,52,57,101,45,51,56,32,50,46,57,
CPP>      52,56,56,52,101,45,51,56,32,48,114,52,55,53,50,48,10,0};
CPP>    const char * textdata = (const char*)(&rawdata[0]);
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("LiquidHeavyWaterD2O_T293.6K.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'Al_sg225.ncmat', 'stdlib::LiquidHeavyWaterD2O_T293.6K.ncmat', compact=True<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
ncmat2cpp : Processing LiquidHeavyWaterD2O_T293.6K.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>#include <array>
CPP>#include <cstdint>
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat (compact form without comments)
CPP>    const char * textdata =
CPP>      "NCMAT v5\n@CELL\ncubic 4.04958\n@SPACEGROUP\n225\n@ATOMPOSITIONS\nAl 0 1/2 1/2\nAl 0 0 0\nAl 1/2 1/2 0\nAl 1/2 0 1/2\n@DYNINFO\nelemen"
CPP>      "t Al\nfraction 1\ntype vdos\nvdos_egrid .00485015 .0398222\nvdos_density .013232 .0141193 .0150065 .0158938 .0167811 .0176684 .0185557"
CPP>      "\n.0195536 .020725 .0218964 .0230678 .0242392 .0254106 .0265808 .027748\n.0289152 .0300825 .0312497 .032417 .0338129 .0352559 .0366988"
CPP>      " .0381418\n.0395847 .0412955 .043043 .0447906 .0465382 .0482858 .0500848 .0519404\n.0537959 .0556515 .057507 .0593626 .0613858 .063822"
CPP>      "6 .0662593 .0686961\n.0711328 .0735696 .0760063 .0785759 .081366 .0841561 .0869462 .0897363\n.0925265 .0954792 .0987494 .10202 .10529 "
CPP>      ".10856 .11183 .115538 .119309\n.12308 .126851 .130875 .135268 .139661 .144055 .148448 .152842 .157573\n.162305 .167036 .171767 .176499"
CPP>      " .18201 .187579 .193147 .198833 .20494\n.211048 .217155 .223262 .229369 .236467 .243837 .251208 .258578 .266432\n.275333 .284233 .2931"
CPP>      "33 .303592 .314275 .324959 .335642 .349394 .363213\n.377789 .396045 .414301 .439971 .471089 .514605 .610025 .707931 .696698\n.687436 ."
CPP>      "679569 .672862 .667612 .662494 .65946 .656426 .653391 .651511\n.649818 .648548 .648291 .648033 .648114 .648959 .649803 .650648 .652271"
CPP>      "\n.654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n.68327 .687962 .693084 .698207 .703766 .710271 .716775 .7232"
CPP>      "8 .73082 .738646\n.746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n.798529 .79508 .774768 .71273 .67965 .64993"
CPP>      "9 .627278 .607527 .590861 .57517\n.561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n.46898 .460042 .451104 .4424"
CPP>      "08 .434216 .426025 .415941 .403984 .39053\n.375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n.373214 .372782 .37"
CPP>      "2351 .37192 .371412 .370855 .370298 .369741 .368973\n.367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n.354458 "
CPP>      ".352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n.322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .24766"
CPP>      "3\n.243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n.337849 .366583 .394604 .428828 .466863 .508577 .555451 .6"
CPP>      "17322 .679027\n.79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n.979429 .895711 .774741 .718589 .672154 .6319"
CPP>      "92 .596623 .565164 .537389\n.509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n.289068 .261524 .233749 .20274 .1"
CPP>      "6795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>  {
CPP>    // File LiquidHeavyWaterD2O_T293.6K.ncmat (compact form without comments) (too large for string literals)
CPP>    static const std::array<std::uint8_t,1560967> rawdata {
CPP>      78,67,77,65,84,32,118,53,10,35,10,35,32,72,101,97,118,121,32,119,97,116,101,114,32,40,68,50,79,41,32,98,97,115,101,100,32,111,110,32,69,
CPP>      78,68,70,47,66,45,86,73,73,73,46,48,32,115,99,97,116,116,101,114,105,110,103,32,107,101,114,110,101,108,115,32,98,121,32,74,46,73,46,32,
CPP>      77,97,114,113,117,101,122,10,35,32,68,97,109,105,97,110,44,32,101,116,46,32,97,108,46,32,40,115,101,101,32,98,101,108,111,119,32,102,111,
CPP>      114,32,114,101,102,101,114,101,110,99,101,115,41,46,32,80,108,101,97,115,101,32,99,104,101,99,107,32,116,104,101,32,64,68,69,78,83,73,84,
CPP>      89,10,35,32,99,97,114,101,102,117,108,108,121,32,98,101,108,111,119,44,32,97,115,32,116,104,101,32,100,101,110,115,105,116,121,32,111,102,
CPP>      32,108,105,113,117,105,100,32,119,97,116,101,114,32,100,101,112,101,110,100,115,32,111,110,32,116,104,101,32,109,97,116,101,114,105,97,
CPP>      108,10,35,32,112,114,101,115,115,117,114,101,46,10,35,10,35,32,78,111,116,105,99,101,58,32,84,104,105,115,32,78,67,77,65,84,32,102,105,
CPP>      108,101,32,105,115,32,118,97,108,105,100,32,97,116,32,84,61,50,57,51,46,54,75,32,111,110,108,121,46,32,79,116,104,101,114,32,102,105,108,
CPP>      101,115,32,97,108,116,101,114,110,97,116,105,118,101,108,121,32,112,114,111,118,105,100,101,10,35,32,116,104,101,32,115,97,109,101,32,109,
CPP>      97,116,101,114,105,97,108,32,97,116,32,116,101,109,112,101,114,97,116,117,114,101,115,58,10,35,10,35,32,32,32,32,32,32,32,50,56,51,46,54,
CPP>      75,32,51,48,48,46,48,75,32,51,50,51,46,54,75,32,51,53,48,46,48,75,32,51,55,51,46,54,75,32,52,48,48,46,48,75,32,52,50,51,46,54,75,10,35,
CPP>      32,32,32,32,32,32,32,52,53,48,46,48,75,32,52,55,51,46,54,75,32,53,48,48,46,48,75,32,53,50,51,46,54,75,32,53,53,48,46,48,75,32,53,55,51,
CPP>      46,54,75,32,54,48,48,46,48,75,10,35,32,32,32,32,32,32,32,54,50,51,46,54,75,10,35,10,35,32,73,110,32,99,97,115,101,32,121,111,117,114,32,
CPP>      108,111,99,97,108,32,105,110,115,116,97,108,108,97,116,105,111,110,32,100,111,101,115,32,110,111,116,32,112,114,111,118,105,100,101,32,
CPP>      97,108,108,32,116,104,101,115,101,32,102,105,108,101,115,44,32,116,104,101,121,32,99,97,110,32,98,101,10,35,32,100,111,119,110,108,111,
CPP>      97,100,101,100,32,102,114,111,109,58,32,104,116,116,112,115,58,47,47,103,105,116,104,117,98,46,99,111,109,47,109,99,116,111,111,108,115,
CPP>      47,110,99,114,121,115,116,97,108,45,101,120,116,114,97,47,116,114,101,101,47,72,69,65,68,47,100,97,116,97,10,35,10,64,83,84,65,84,69,79,
CPP>      70,77,65,84,84,69,82,10,32,32,108,105,113,117,105,100,10,64,68,69,78,83,73,84,89,10,32,32,35,78,66,58,32,68,101,110,115,105,116,121,32,
CPP>      100,101,112,101,110,100,115,32,111,110,32,112,114,101,115,115,117,114,101,32,40,118,97,108,117,101,32,104,101,114,101,32,112,114,111,118,
CPP>      105,100,101,100,32,98,121,32,101,110,103,105,110,101,101,114,105,110,103,116,111,111,108,98,111,120,46,99,111,109,41,58,10,32,32,49,46,
CPP>      49,48,53,50,54,32,103,95,112,101,114,95,99,109,51,32,35,40,97,116,32,49,97,116,109,32,112,114,101,115,115,117,114,101,41,10,64,68,89,78,
CPP>      73,78,70,79,10,32,32,35,32,83,99,97,116,116,101,114,105,110,103,32,107,101,114,110,101,108,32,102,111,114,32,68,32,64,32,50,57,51,46,54,
CPP>      75,32,101,120,116,114,97,99,116,101,100,32,102,114,111,109,32,116,115,108,45,68,105,110,68,50,79,46,101,110,100,102,10,32,32,35,10,32,32,
CPP>      <<<SNIPPED 35212 LINES, MD5=2b313c95e7ec3f19e7c5c464629ae3d2>>>
CPP>      46,49,52,56,49,54,101,45,51,55,10,32,32,52,46,48,55,56,53,55,101,45,51,55,32,53,46,50,52,56,54,52,101,45,51,55,32,54,46,55,48,54,55,51,
CPP>      101,45,51,55,32,56,46,53,49,49,54,56,101,45,51,55,32,49,46,48,55,51,49,50,101,45,51,54,32,49,46,51,52,52,49,56,101,45,51,54,32,49,46,54,
CPP>      55,50,57,54,101,45,51,54,10,32,32,50,46,48,54,57,51,53,101,45,51,54,32,50,46,53,52,51,54,101,45,51,54,32,51,46,49,48,55,50,53,101,45,51,
CPP>      54,32,51,46,55,55,50,57,55,101,45,51,54,32,52,46,53,53,52,51,49,101,45,51,54,32,48,114,51,55,57,32,50,46,54,57,49,50,52,101,45,51,56,32,
CPP>      51,46,54,49,51,53,50,101,45,51,56,10,32,32,52,46,56,49,53,48,56,101,45,51,56,32,54,46,51,54,56,55,50,101,45,51,56,32,56,46,51,54,50,54,
CPP>      49,101,45,51,56,32,49,46,48,57,48,50,54,101,45,51,55,32,49,46,52,49,50,48,53,101,45,51,55,32,49,46,56,49,53,54,49,101,45,51,55,32,50,46,
CPP>      51,49,56,54,49,101,45,51,55,10,32,32,50,46,57,52,49,52,101,45,51,55,32,51,46,55,48,55,49,55,101,45,51,55,32,52,46,54,52,50,52,101,45,51,
CPP>      55,32,53,46,55,55,56,48,54,101,45,51,55,32,55,46,49,52,53,55,56,101,45,51,55,32,56,46,55,56,50,53,52,101,45,51,55,32,49,46,48,55,50,57,
CPP>      50,101,45,51,54,10,32,32,49,46,51,48,50,57,56,101,45,51,54,32,48,114,51,56,51,32,50,46,50,49,48,48,54,101,45,51,56,32,50,46,56,57,57,53,
CPP>      55,101,45,51,56,32,51,46,55,55,57,56,101,45,51,56,32,52,46,56,57,48,49,51,101,45,51,56,32,54,46,50,56,51,52,54,101,45,51,56,32,56,46,48,
CPP>      50,48,52,101,45,51,56,10,32,32,49,46,48,49,55,48,57,101,45,51,55,32,49,46,50,56,49,53,51,101,45,51,55,32,49,46,54,48,53,48,51,101,45,51,
CPP>      55,32,49,46,57,57,55,49,53,101,45,51,55,32,50,46,52,54,57,52,56,101,45,51,55,32,51,46,48,51,53,48,49,101,45,51,55,32,51,46,55,48,55,57,
CPP>      55,101,45,51,55,10,32,32,48,114,51,56,56,32,50,46,49,55,53,51,57,101,45,51,56,32,50,46,55,55,53,52,55,101,45,51,56,32,51,46,53,49,56,51,
CPP>      50,101,45,51,56,32,52,46,52,51,51,57,49,101,45,51,56,32,53,46,53,53,48,56,50,101,45,51,56,32,54,46,57,48,53,52,49,101,45,51,56,32,56,46,
CPP>      53,51,56,56,49,101,45,51,56,10,32,32,49,46,48,52,57,54,52,101,45,51,55,32,48,114,51,57,52,32,50,46,51,56,52,57,101,45,51,56,32,50,46,57,
CPP>      52,56,56,52,101,45,51,56,32,48,114,52,55,53,50,48,10,0};
CPP>    const char * textdata = (const char*)(&rawdata[0]);
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("LiquidHeavyWaterD2O_T293.6K.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'stdlib::Al_sg225.ncmat'<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "#\n"
CPP>      "# Aluminium (Al, fcc, cubic, SG-225 / Fm-3m)\n"
CPP>      "#\n"
CPP>      "# Under usual conditions this phase exists from 0 to 933K.\n"
CPP>      "#\n"
CPP>      "# Structure converted with ncrystal_onlinedb2ncmat from:\n"
CPP>      "#\n"
CPP>      "#    \"Second edition. Interscience Publishers,\n"
CPP>      "#     New York, Cubic closest packed, ccp, structure\"\n"
CPP>      "#    Wyckoff R W G (1963)\n"
CPP>      "#    Crystallography Open Database entry 9008460\n"
CPP>      "#    https://www.crystallography.net/cod/9008460.html\n"
CPP>      "#\n"
CPP>      "# This crystal structure is also compatible with structure obtained from:\n"
CPP>      "#\n"
CPP>      "#   https://www.crystallography.net/cod/9012428.html\n"
CPP>      "#   https://www.crystallography.net/cod/9011602.html\n"
CPP>      "#   https://www.crystallography.net/cod/9012002.html\n"
CPP>      <<<SNIPPED 36 LINES, MD5=9f2a4e667bc76c810ed19d55d450954a>>>
CPP>      "    .654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n"
CPP>      "    .68327 .687962 .693084 .698207 .703766 .710271 .716775 .72328 .73082 .738646\n"
CPP>      "    .746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n"
CPP>      "    .798529 .79508 .774768 .71273 .67965 .649939 .627278 .607527 .590861 .57517\n"
CPP>      "    .561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n"
CPP>      "    .46898 .460042 .451104 .442408 .434216 .426025 .415941 .403984 .39053\n"
CPP>      "    .375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n"
CPP>      "    .373214 .372782 .372351 .37192 .371412 .370855 .370298 .369741 .368973\n"
CPP>      "    .367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n"
CPP>      "    .354458 .352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n"
CPP>      "    .322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .247663\n"
CPP>      "    .243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n"
CPP>      "    .337849 .366583 .394604 .428828 .466863 .508577 .555451 .617322 .679027\n"
CPP>      "    .79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n"
CPP>      "    .979429 .895711 .774741 .718589 .672154 .631992 .596623 .565164 .537389\n"
CPP>      "    .509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n"
CPP>      "    .289068 .261524 .233749 .20274 .16795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >><< ====================
Caught expected NCBadInput('No files or text data provided')
============= CLI >>--help<< ====================
usage: ncrystal_ncmat2cpp [-h] [--compact] [--validate] [--name NAME]
                          [--regfctname REGFCTNAME]
                          [--include INCLUDE [INCLUDE ...]] [--width WIDTH]
                          [--outfile OUTFILE]
                          FILE [FILE ...]

Script which can be used to embed the content of .ncmat files (or actually any
ASCII/UTF8 excoded text files) directly into a C++ library. It does so by
reading the .ncmat files and creating C++ code which keeps the contents of the
files in static strings, and registers those strings with NCrystal, using the
original filename as key. Naturally, those file must be compiled along with
the rest of the C++ library, and the enclosing function must be invoked.

positional arguments:
  FILE                  One or more NCMAT (or other text) files. They will be
                        registered with a key equal to their filename (without
                        preceding directory name), which must therefore be
                        unique in the list

options:
  -h, --help            show this help message and exit
  --compact, -c         Set this option to strip all comments and excess
                        whitespace from the file data before embedding as C++
                        code.
  --validate, -v        If specified input files will be validated by
                        confirming that they can be loaded with NCrystal. For
                        this to work, the NCrystal python module must be
                        available.
  --name, -n NAME       Name of C++ function to create which must be called in
                        order to register the data with NCrystal. If desired,
                        it can contain namespace(s), e.g. a value of
                        "MyNameSpace::myFunction" will create a function "void
                        myFunction()" in the namespace "MyNameSpace.
  --regfctname REGFCTNAME
                        Name of C++ function used to register string objects
                        with NCrystal.
  --include INCLUDE [INCLUDE ...]
                        One or more extra include statements for the top of
                        the file. The file NCrystal/core/NCDefs.hh will always
                        be included by default (prevent this by adding a
                        special entry 'no-ncrystal-includes' to the list).
  --width, -w WIDTH     Wrap C++ code at this column width. Ignored for text
                        files <~60KB unless running with --compact.
  --outfile, -o OUTFILE
                        Name of output file (default: stdout)

===========================================
============= CLI >>SrF2_sg225_StrontiumFluoride.ncmat -o stdout<< ====================
ncmat2cpp : Processing SrF2_sg225_StrontiumFluoride.ncmat
// Code automatically generated by NCrystal/ncmat2cpp

#include "NCrystal/core/NCDefs.hh"

namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }

void registerNCMATData()
{
  {
    // File SrF2_sg225_StrontiumFluoride.ncmat
    const char * textdata =
      "NCMAT v5\n"
      "#\n"
      "# Strontium fluoride (SrF2, cubic, SG-225 / Fm-3m)\n"
      "#\n"
      "# Valid temperatures for this structure are 0 to 1460K.\n"
      "#\n"
      "# Structure converted with ncrystal_onlinedb2ncmat from:\n"
      "#\n"
      "#    \"Second edition. Interscience Publishers, New York, Fluorite structure\"\n"
      "#    Wyckoff R W G (1963)\n"
      "#    Crystallography Open Database entry 9009043\n"
      "#    https://www.crystallography.net/cod/9009043.html\n"
      "#\n"
      "# This crystal structure is also compatible with structure obtained from\n"
      "# https://www.materialsproject.org/materials/mp-981\n"
      "#\n"
      "# The VDOS curves were calculated using Phonopy[1] input files from[2] and\n"
      "# OCLIMAX[3] software by Kemal Ramic from ESS Spallation Physics group.\n"
      "#\n"
      "# References:\n"
      "#  [1]: \"First principles phonon calculations in materials science\",\n"
      "#        Atsushi Togo and Isao Tanaka, Scr. Mater., 108, 1-5 (2015)\n"
      "#  [2]: Kyoto University database of phonon calculations.\n"
      "#       Files for CaO taken from:\n"
      "#       http://phonondb.mtl.kyoto-u.ac.jp/ph20180417/d000/mp-981.html\n"
      "#  [3]: Cheng, Y. Q.; Kolesnikov, A. I.; Ramirez-Cuesta, A. J., \"Calculation\n"
      "#       of the Thermal Neutron Scattering Cross-Section of Solids Using OCLIMAX\".\n"
      "#       Journal of Chemical Theory and Computation 2020, 16 (8), 5212-5217.\n"
      "#\n"
      "@CELL\n"
      "  cubic 5.7996\n"
      "@SPACEGROUP\n"
      "  225\n"
      "@ATOMPOSITIONS\n"
      "  Sr 0 0 0\n"
      "  Sr 0 1/2 1/2\n"
      "  Sr 1/2 0 1/2\n"
      "  Sr 1/2 1/2 0\n"
      "  F 1/4 1/4 1/4\n"
      "  F 1/4 3/4 3/4\n"
      "  F 3/4 1/4 3/4\n"
      "  F 3/4 3/4 1/4\n"
      "  F 1/4 3/4 1/4\n"
      "  F 1/4 1/4 3/4\n"
      "  F 3/4 3/4 3/4\n"
      "  F 3/4 1/4 1/4\n"
      "@DYNINFO\n"
      "  element  F\n"
      "  fraction 2/3\n"
      "  type     vdos\n"
      "  vdos_egrid .00724975 .0479984\n"
      "  vdos_density .0185146 .0211562 .0245448 .0265251 .0260254 .0277547 .0308514\n"
      "    .0342983 .0349455 .0373604 .0434251 .0500604 .0511101 .0533924 .0655404\n"
      "    .0810992 .0942574 .100044 .0982308 .0897421 .0787555 .070588 .0655822\n"
      "    .0639975 .062876 .0600767 .0568578 .0518574 .0479017 .0494611 .0507247\n"
      "    .0473599 .0435142 .0406324 .0394499 .0399581 .0384729 .0358277 .035467\n"
      "    .0368671 .0380684 .0372807 .0358846 .0366154 .0370751 .0363822 .0377073\n"
      "    .0437679 .0596878 .0878505 .121511 .149835 .164721 .165313 .158969 .156208\n"
      "    .166248 .179031 .172545 .150571 .133972 .133892 .155326 .203721 .276298\n"
      "    .352227 .404786 .429318 .444703 .467004 .493076 .515356 .528631 .532101\n"
      "    .541153 .561362 .569071 .555698 .537477 .517807 .498265 .490533 .487089\n"
      "    .47197 .463164 .47839 .492414 .49202 .505864 .531897 .525921 .486891 .462121\n"
      "    .473606 .507031 .537221 .534325 .498234 .461811 .436168 .415627 .406251\n"
      "    .403877 .401656 .413604 .444132 .481287 .525346 .590183 .691863 .826541\n"
      "    .950404 1 .954138 .850257 .723113 .579062 .425964 .281367 .16224 .0804598\n"
      "    .0372275 .0228433 .0268242 .0432465 .0657459 .0851793 .0956038 .0992716\n"
      "    .103553 .113615 .128831 .146507 .168358 .202737 .258865 .332113 .393867\n"
      "    .410552 .378236 .324136 .275062 .239031 .212273 .189768 .168562 .147898\n"
      "    .12893 .113146 .100791 .091157 .0831119 .0753717 .0675376 .0600818 .0530275\n"
      "    .0460456 .0391425 .0320108 .0240405 .015682 .00851383 .00373593 .00129427\n"
      "@DYNINFO\n"
      "  element  Sr\n"
      "  fraction 1/3\n"
      "  type     vdos\n"
      "  vdos_egrid .00724975 .0479984\n"
      "  vdos_density .0946798 .110202 .129552 .141199 .140432 .152196 .172818 .195913\n"
      "    .20249 .22343 .268492 .317522 .336133 .371225 .488477 .665765 .855086\n"
      "    .975792 1 .945841 .868639 .821107 .788874 .768106 .751688 .734427 .716035\n"
      "    .686406 .659063 .670578 .680617 .652196 .616282 .566822 .499947 .437621\n"
      "    .381249 .337617 .325233 .338508 .351016 .33933 .316729 .315173 .319861\n"
      "    .310387 .305218 .307748 .299928 .282131 .272551 .273773 .280955 .311051\n"
      "    .366688 .435305 .539701 .656523 .68241 .595337 .491374 .438918 .434602\n"
      "    .460835 .481575 .462498 .416058 .367002 .323836 .296122 .287908 .28352\n"
      "    .268742 .247574 .231116 .224281 .221142 .213587 .199067 .179253 .15888\n"
      "    .142355 .131391 .12388 .116617 .110398 .107649 .108154 .111492 .115028\n"
      "    .111775 .0998722 .0857569 .0744661 .0655065 .055852 .0440602 .0333025\n"
      "    .0268552 .023416 .0208055 .0191555 .0184479 .0180732 .0188892 .0218196\n"
      "    .0259437 .029021 .0294589 .0285242 .0287729 .0303649 .0312771 .0303267\n"
      "    .0283354 .0270729 .0270652 .0260526 .0217694 .0156107 .0108087 .00874924\n"
      "    .00911855 .0120236 .0176459 .0241835 .0284718 .0291934 .028168 .0282282\n"
      "    .0305625 .0341372 .0373522 .0399055 .0427969 .0467285 .0506564 .0522497\n"
      "    .0503617 .0464239 .0426456 .0398536 .0376853 .0357793 .0340497 .0323865\n"
      "    .0307447 .029308 .0282125 .0273022 .0263022 .0250178 .0234198 .0217181\n"
      "    .020093 .0183956 .0164617 .0143566 .0120087 .00919184 .00608781 .00334328\n"
      "    .0014787 .000514694\n";
    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("SrF2_sg225_StrontiumFluoride.ncmat",textdata);
  }
}
===========================================
============= CLI >>-o stdout<< ====================
Caught expected ArgumentError('the following arguments are required: FILE')
Testing work_in_tmpdir()
work_in_tmpdir() gave no errors (which is good)
============= CLI >>somefile.ncmat -o bla.cc<< ====================
ncmat2cpp : Processing somefile.ncmat
Wrote: bla.cc
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerNCMATData()
CPP>{
CPP>  {
CPP>    // File somefile.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "# Here is a comment\n"
CPP>      "@DENSITY\n"
CPP>      "  1 g_per_cm3#And another one\n"
CPP>      "@DYNINFO\n"
CPP>      "  element H\n"
CPP>      "  fraction 1\n"
CPP>      "  type vdosdebye\n"
CPP>      "  debye_temp 300\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("somefile.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= CLI >>somefile.ncmat -o stdout<< ====================
ncmat2cpp : Processing somefile.ncmat
// Code automatically generated by NCrystal/ncmat2cpp

#include "NCrystal/core/NCDefs.hh"

namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }

void registerNCMATData()
{
  {
    // File somefile.ncmat
    const char * textdata =
      "NCMAT v5\n"
      "# Here is a comment\n"
      "@DENSITY\n"
      "  1 g_per_cm3#And another one\n"
      "@DYNINFO\n"
      "  element H\n"
      "  fraction 1\n"
      "  type vdosdebye\n"
      "  debye_temp 300\n";
    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("somefile.ncmat",textdata);
  }
}
===========================================
============= CLI >>Al_sg225.ncmat -o foo.cc<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
Wrote: foo.cc
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerNCMATData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "#\n"
CPP>      "# Aluminium (Al, fcc, cubic, SG-225 / Fm-3m)\n"
CPP>      "#\n"
CPP>      "# Under usual conditions this phase exists from 0 to 933K.\n"
CPP>      "#\n"
CPP>      "# Structure converted with ncrystal_onlinedb2ncmat from:\n"
CPP>      "#\n"
CPP>      "#    \"Second edition. Interscience Publishers,\n"
CPP>      "#     New York, Cubic closest packed, ccp, structure\"\n"
CPP>      "#    Wyckoff R W G (1963)\n"
CPP>      "#    Crystallography Open Database entry 9008460\n"
CPP>      "#    https://www.crystallography.net/cod/9008460.html\n"
CPP>      "#\n"
CPP>      "# This crystal structure is also compatible with structure obtained from:\n"
CPP>      "#\n"
CPP>      "#   https://www.crystallography.net/cod/9012428.html\n"
CPP>      "#   https://www.crystallography.net/cod/9011602.html\n"
CPP>      "#   https://www.crystallography.net/cod/9012002.html\n"
CPP>      <<<SNIPPED 36 LINES, MD5=9f2a4e667bc76c810ed19d55d450954a>>>
CPP>      "    .654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n"
CPP>      "    .68327 .687962 .693084 .698207 .703766 .710271 .716775 .72328 .73082 .738646\n"
CPP>      "    .746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n"
CPP>      "    .798529 .79508 .774768 .71273 .67965 .649939 .627278 .607527 .590861 .57517\n"
CPP>      "    .561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n"
CPP>      "    .46898 .460042 .451104 .442408 .434216 .426025 .415941 .403984 .39053\n"
CPP>      "    .375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n"
CPP>      "    .373214 .372782 .372351 .37192 .371412 .370855 .370298 .369741 .368973\n"
CPP>      "    .367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n"
CPP>      "    .354458 .352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n"
CPP>      "    .322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .247663\n"
CPP>      "    .243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n"
CPP>      "    .337849 .366583 .394604 .428828 .466863 .508577 .555451 .617322 .679027\n"
CPP>      "    .79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n"
CPP>      "    .979429 .895711 .774741 .718589 .672154 .631992 .596623 .565164 .537389\n"
CPP>      "    .509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n"
CPP>      "    .289068 .261524 .233749 .20274 .16795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= CLI >>Al_sg225.ncmat -o foo.cc<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
Wrote: foo.cc
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerNCMATData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "#\n"
CPP>      "# Aluminium (Al, fcc, cubic, SG-225 / Fm-3m)\n"
CPP>      "#\n"
CPP>      "# Under usual conditions this phase exists from 0 to 933K.\n"
CPP>      "#\n"
CPP>      "# Structure converted with ncrystal_onlinedb2ncmat from:\n"
CPP>      "#\n"
CPP>      "#    \"Second edition. Interscience Publishers,\n"
CPP>      "#     New York, Cubic closest packed, ccp, structure\"\n"
CPP>      "#    Wyckoff R W G (1963)\n"
CPP>      "#    Crystallography Open Database entry 9008460\n"
CPP>      "#    https://www.crystallography.net/cod/9008460.html\n"
CPP>      "#\n"
CPP>      "# This crystal structure is also compatible with structure obtained from:\n"
CPP>      "#\n"
CPP>      "#   https://www.crystallography.net/cod/9012428.html\n"
CPP>      "#   https://www.crystallography.net/cod/9011602.html\n"
CPP>      "#   https://www.crystallography.net/cod/9012002.html\n"
CPP>      <<<SNIPPED 36 LINES, MD5=9f2a4e667bc76c810ed19d55d450954a>>>
CPP>      "    .654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n"
CPP>      "    .68327 .687962 .693084 .698207 .703766 .710271 .716775 .72328 .73082 .738646\n"
CPP>      "    .746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n"
CPP>      "    .798529 .79508 .774768 .71273 .67965 .649939 .627278 .607527 .590861 .57517\n"
CPP>      "    .561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n"
CPP>      "    .46898 .460042 .451104 .442408 .434216 .426025 .415941 .403984 .39053\n"
CPP>      "    .375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n"
CPP>      "    .373214 .372782 .372351 .37192 .371412 .370855 .370298 .369741 .368973\n"
CPP>      "    .367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n"
CPP>      "    .354458 .352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n"
CPP>      "    .322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .247663\n"
CPP>      "    .243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n"
CPP>      "    .337849 .366583 .394604 .428828 .466863 .508577 .555451 .617322 .679027\n"
CPP>      "    .79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n"
CPP>      "    .979429 .895711 .774741 .718589 .672154 .631992 .596623 .565164 .537389\n"
CPP>      "    .509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n"
CPP>      "    .289068 .261524 .233749 .20274 .16795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= CLI >>./Al_sg225.ncmat -o foo2.cc<< ====================
Caught expected NCFileNotFound('No such file: "./Al_sg225.ncmat"')
============= CLI >>stdlib::Al_sg225.ncmat -o foo3.cc<< ====================
ncmat2cpp : Processing Al_sg225.ncmat
Wrote: foo3.cc
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerNCMATData()
CPP>{
CPP>  {
CPP>    // File Al_sg225.ncmat
CPP>    const char * textdata =
CPP>      "NCMAT v5\n"
CPP>      "#\n"
CPP>      "# Aluminium (Al, fcc, cubic, SG-225 / Fm-3m)\n"
CPP>      "#\n"
CPP>      "# Under usual conditions this phase exists from 0 to 933K.\n"
CPP>      "#\n"
CPP>      "# Structure converted with ncrystal_onlinedb2ncmat from:\n"
CPP>      "#\n"
CPP>      "#    \"Second edition. Interscience Publishers,\n"
CPP>      "#     New York, Cubic closest packed, ccp, structure\"\n"
CPP>      "#    Wyckoff R W G (1963)\n"
CPP>      "#    Crystallography Open Database entry 9008460\n"
CPP>      "#    https://www.crystallography.net/cod/9008460.html\n"
CPP>      "#\n"
CPP>      "# This crystal structure is also compatible with structure obtained from:\n"
CPP>      "#\n"
CPP>      "#   https://www.crystallography.net/cod/9012428.html\n"
CPP>      "#   https://www.crystallography.net/cod/9011602.html\n"
CPP>      "#   https://www.crystallography.net/cod/9012002.html\n"
CPP>      <<<SNIPPED 36 LINES, MD5=9f2a4e667bc76c810ed19d55d450954a>>>
CPP>      "    .654251 .656231 .658385 .660883 .66338 .666831 .670734 .674636 .678939\n"
CPP>      "    .68327 .687962 .693084 .698207 .703766 .710271 .716775 .72328 .73082 .738646\n"
CPP>      "    .746472 .755309 .764205 .773061 .781132 .789068 .794645 .797985 .798822\n"
CPP>      "    .798529 .79508 .774768 .71273 .67965 .649939 .627278 .607527 .590861 .57517\n"
CPP>      "    .561495 .54884 .537956 .527173 .516685 .506197 .496343 .487181 .478019\n"
CPP>      "    .46898 .460042 .451104 .442408 .434216 .426025 .415941 .403984 .39053\n"
CPP>      "    .375124 .372167 .371561 .37199 .372419 .372847 .373079 .373154 .373228\n"
CPP>      "    .373214 .372782 .372351 .37192 .371412 .370855 .370298 .369741 .368973\n"
CPP>      "    .367973 .366974 .365974 .364975 .363901 .362208 .360515 .358822 .356884\n"
CPP>      "    .354458 .352031 .349604 .347178 .34379 .340173 .336555 .332841 .327735\n"
CPP>      "    .322629 .317522 .311459 .304041 .296623 .287643 .278031 .260712 .247663\n"
CPP>      "    .243349 .241651 .241493 .245625 .252347 .260515 .272178 .288183 .308977\n"
CPP>      "    .337849 .366583 .394604 .428828 .466863 .508577 .555451 .617322 .679027\n"
CPP>      "    .79657 .954686 .930006 .908781 .916995 .932774 .950737 .968525 .988039 1\n"
CPP>      "    .979429 .895711 .774741 .718589 .672154 .631992 .596623 .565164 .537389\n"
CPP>      "    .509862 .484214 .458806 .434668 .410583 .386357 .362131 .337836 .313452\n"
CPP>      "    .289068 .261524 .233749 .20274 .16795 .125961 .0770796 .0135243 0\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Al_sg225.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= CLI >>gasmix::Ar/1gcm3/20K -o foo4.cc<< ====================
ncmat2cpp : Processing Ar/20K/1gcm3
Wrote: foo4.cc
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerNCMATData()
CPP>{
CPP>  {
CPP>    // File Ar/20K/1gcm3
CPP>    const char * textdata =
CPP>      "NCMAT v7\n"
CPP>      "#\n"
CPP>      "# Automatically generated NCMAT data for gas mixture\n"
CPP>      "#\n"
CPP>      "# Request: \"gasmix::Ar/20K/1gcm3\"\n"
CPP>      "#\n"
CPP>      "# Resulting gas parameters:\n"
CPP>      "#\n"
CPP>      "#  T   = 20K\n"
CPP>      "#  P   = 4162678.1645272519Pa\n"
CPP>      "#  Rho = 1000kg/m^3\n"
CPP>      "#\n"
CPP>      "@STATEOFMATTER\n"
CPP>      "  gas\n"
CPP>      "@TEMPERATURE\n"
CPP>      "  20\n"
CPP>      "@DENSITY\n"
CPP>      "  1000 kg_per_m3\n"
CPP>      "@DYNINFO\n"
CPP>      "  element  Ar\n"
CPP>      "  fraction 1\n"
CPP>      "  type     freegas\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Ar/20K/1gcm3",textdata);
CPP>  }
CPP>}
===========================================
============= CLI >>gasmix::Ar/1gcm3/20K -o foo4.cc --compact<< ====================
ncmat2cpp : Processing Ar/20K/1gcm3
Wrote: foo4.cc
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>
CPP>namespace NCRYSTAL_NAMESPACE { void registerInMemoryStaticFileData(const std::string&,const char*); }
CPP>
CPP>void registerNCMATData()
CPP>{
CPP>  {
CPP>    // File Ar/20K/1gcm3 (compact form without comments)
CPP>    const char * textdata =
CPP>      "NCMAT v7\n@STATEOFMATTER\ngas\n@TEMPERATURE\n20\n@DENSITY\n1000 kg_per_m3\n"
CPP>      "@DYNINFO\nelement Ar\nfraction 1\ntype freegas\n";
CPP>    ::NCRYSTAL_NAMESPACE::registerInMemoryStaticFileData("Ar/20K/1gcm3",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'dummyAl.ncmat', compact=True, cppfunctionname='somefctname', extra_includes=['SomeHeader.hh'], regfctname='Some::Name::Space::some_reg_fct', validate=True, width=30<< ====================
ncmat2cpp : Processing dummyAl.ncmat
Trying to validate: dummyAl.ncmat
  -> OK
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>#include "SomeHeader.hh"
CPP>
CPP>namespace Some { namespace Name { namespace Space { void some_reg_fct(); } } }
CPP>
CPP>void somefctname()
CPP>{
CPP>  {
CPP>    // File dummyAl.ncmat (compact form without comments)
CPP>    const char * textdata =
CPP>      "NCMAT v5\n@DENSITY\n1 g_"
CPP>      "per_cm3\n@DYNINFO\neleme"
CPP>      "nt H\nfraction 1\ntype v"
CPP>      "dosdebye\ndebye_temp 300"
CPP>      "\n";
CPP>    ::Some::Name::Space::some_reg_fct("dummyAl.ncmat",textdata);
CPP>  }
CPP>}
===========================================
============= PyAPI >>'dummyAl.ncmat', compact=True, cppfunctionname='somefctname', extra_includes=['SomeHeader.hh'], quiet=True, regfctname='Some::Name::Space::some_reg_fct', validate=True, width=30<< ====================
CPP>// Code automatically generated by NCrystal/ncmat2cpp
CPP>
CPP>#include "NCrystal/core/NCDefs.hh"
CPP>#include "SomeHeader.hh"
CPP>
CPP>namespace Some { namespace Name { namespace Space { void some_reg_fct(); } } }
CPP>
CPP>void somefctname()
CPP>{
CPP>  {
CPP>    // File dummyAl.ncmat (compact form without comments)
CPP>    const char * textdata =
CPP>      "NCMAT v5\n@DENSITY\n1 g_"
CPP>      "per_cm3\n@DYNINFO\neleme"
CPP>      "nt H\nfraction 1\ntype v"
CPP>      "dosdebye\ndebye_temp 300"
CPP>      "\n";
CPP>    ::Some::Name::Space::some_reg_fct("dummyAl.ncmat",textdata);
CPP>  }
CPP>}
===========================================
