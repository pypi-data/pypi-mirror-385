"""Example demonstrating create_generic_pipeline_row_model function."""

from datafast.schema.config import GenericPipelineDatasetConfig
from datafast.utils import create_generic_pipeline_row_model

# Test with multiple input, forward, and output columns
config = GenericPipelineDatasetConfig(
    hf_dataset_name="imdb",
    input_columns=["text"],
    forward_columns=["label"],
    output_columns=["translation", "question"],
    prompts=["Analyze: {text}. Generate {num_samples} translation of the movie review in {language} and a follow-up question someone may ask about it."],
    num_samples_per_prompt=1,
    languages={"fr": "French", "es": "Spanish"}
)

# Create the dynamic row model
DynamicRowModel = create_generic_pipeline_row_model(config)

# Print the model schema to see all fields
print("Dynamic Row Model Schema:")
print(DynamicRowModel.model_json_schema())

# Create an example instance to show the structure
example_row = DynamicRowModel(
    # Input columns (from source data)
    text="This movie was amazing!",
    label="positive",
    
    # Output columns (generated by LLM)
    translation="Ce film Ã©tait trop bien",
    question="Qu'est ce qui t'a plu?",
    
    # System fields
    model_id="gpt-5-mini-2025-08-07",
    language="fr"
)

print("\nExample row instance:")
print(example_row.model_dump_json(indent=2))

# Test with minimal configuration (no forward columns, default output)
minimal_config = GenericPipelineDatasetConfig(
    hf_dataset_name="imdb",
    input_columns=["text"],
    prompts=["Create {num_samples} summary in {language} of the move review : {text}"],
    num_samples_per_prompt=1,
)

MinimalRowModel = create_generic_pipeline_row_model(minimal_config)

print("\nMinimal Row Model Schema:")
print(MinimalRowModel.model_json_schema())

minimal_example = MinimalRowModel(
    text="This is a test text",
    generated_text="This is a generated summary",
    model_id="gpt-4"
)

print("\nMinimal example row:")
print(minimal_example.model_dump_json(indent=2))
