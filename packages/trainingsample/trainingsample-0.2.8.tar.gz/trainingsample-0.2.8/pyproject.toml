[build-system]
build-backend = "maturin"
requires = ["maturin>=1.0,<2.0"]

[project]
authors = [{name = "bghira", email = "bghira@users.noreply.github.com"}]
classifiers = [
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy"
]
dependencies = ["numpy>=1.21.0", "pillow>=8.0.0"]
description = "High-performance Rust reimplementation of GIL-blocking video/image operations"
license = {text = "MIT"}
name = "trainingsample"
requires-python = ">=3.11"
version = "0.2.8"

[project.optional-dependencies]
dev = ["pytest>=6.0", "pytest-benchmark", "maturin>=1.0,<2.0", "pre-commit"]

[tool.black]
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 88
target-version = ['py311']

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.maturin]
features = ["pyo3/extension-module", "python-bindings", "opencv", "simd"]
module-name = "trainingsample"

[tool.poetry.group.dev.dependencies]
pytest-benchmark = "^5.1.0"

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers"
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "benchmark: marks tests as benchmarks"
]
minversion = "6.0"
python_classes = ["Test*"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
testpaths = ["tests"]
