# Production Docker Compose configuration
version: '3.8'

services:
  devstudio-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: devstudio-mcp-prod
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MCP_LOG_LEVEL=WARNING
      - RECORDING_OUTPUT_DIR=/app/recordings
      - MAX_RECORDING_DURATION=3600
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      - STORAGE_BUCKET=${STORAGE_BUCKET:-}
      - STORAGE_REGION=${STORAGE_REGION:-}
    volumes:
      - recordings-data:/app/recordings
      - logs-data:/app/logs
    restart: always
    networks:
      - prod-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "python", "-c", "import devstudio_mcp; print('healthy')"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: devstudio-redis-prod
    volumes:
      - redis-prod-data:/data
    restart: always
    networks:
      - prod-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: devstudio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs-data:/var/log/nginx
    restart: always
    networks:
      - prod-network
    depends_on:
      - devstudio-mcp

  # Log aggregation
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: devstudio-filebeat
    user: root
    volumes:
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - logs-data:/app/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    networks:
      - prod-network
    depends_on:
      - devstudio-mcp

volumes:
  recordings-data:
    driver: local
  logs-data:
    driver: local
  redis-prod-data:
    driver: local

networks:
  prod-network:
    driver: bridge