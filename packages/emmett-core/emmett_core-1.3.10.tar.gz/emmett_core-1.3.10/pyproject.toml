[project]
name = 'emmett-core'
authors = [
    { name = 'Giovanni Barillari', email = 'g@baro.dev' }
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: MacOS',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3.14',
    'Programming Language :: Python :: Free Threading :: 2 - Beta',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Programming Language :: Python',
    'Programming Language :: Rust',
    'Topic :: Internet :: WWW/HTTP',
]

dynamic = [
    'description',
    'keywords',
    'license',
    'readme',
    'version',
]

requires-python = '>=3.9'
dependencies = []

[project.optional-dependencies]
granian = ['granian~=2.1']
orjson = ['orjson~=3.10']
rapidjson = ['python-rapidjson~=1.20']
reload = ['granian[reload]~=2.1']

all = ['emmett-core[rapidjson,reload]']

[project.urls]
Homepage = 'https://emmett.sh'
Funding = 'https://github.com/sponsors/gi0baro'
Source = 'https://github.com/emmett-framework/core'

[dependency-groups]
build = [
    'maturin~=1.8',
]
lint = [
    'ruff~=0.9',
]
test = [
    'pytest~=8.3.2',
    'pytest-asyncio~=0.24.0',
]

all = [
    { include-group = 'build' },
    { include-group = 'lint' },
    { include-group = 'test' },
]

[build-system]
requires = ['maturin>=1.8.0,<2']
build-backend = 'maturin'

[tool.maturin]
module-name = 'emmett_core._emmett_core'
bindings = 'pyo3'

[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = 'double'

[tool.ruff.lint]
extend-select = [
    # E and F are enabled by default
    'B',      # flake8-bugbear
    'C4',     # flake8-comprehensions
    'C90',    # mccabe
    'I',      # isort
    'N',      # pep8-naming
    'Q',      # flake8-quotes
    'RUF100', # ruff (unused noqa)
    'S',      # flake8-bandit
    'W',      # pycodestyle
]
extend-ignore = [
    'B006', # mutable function args are fine
    'B008', # function calls in args defaults are fine
    'B009', # getattr with constants is fine
    'B034', # re.split won't confuse us
    'B904', # rising without from is fine
    'E731', # assigning lambdas is fine
    'N801', # leave to us class naming
    'N802', # leave to us method naming
    'N806', # leave to us var naming
    'N818', # leave to us exceptions naming
    'S101', # assert is fine
    'S110', # pass on exceptions is fine
]
mccabe = { max-complexity = 24 }

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2
known-first-party = ['emmett_core', 'tests']

[tool.ruff.lint.per-file-ignores]
'emmett_core/_emmett_core.pyi' = ['I001']
'tests/**' = ['B018', 'S110', 'S501']

[tool.pytest.ini_options]
asyncio_mode = 'auto'

[tool.uv]
package = false
