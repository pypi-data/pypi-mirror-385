name: Build and Publish

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+a[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+b[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * SUN"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install hatch
        run: pipx install hatch
      - name: Build sdist and wheel
        run: hatch build --clean
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
    environment:
      name: publish
      url: https://pypi.org/p/param-lsp
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  vscode:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    environment:
      name: publish
      url: https://marketplace.visualstudio.com/items?itemName=hoxbro.param-lsp
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
          token: ${{ secrets.PAT_TOKEN }}
      - name: Fetching tags
        id: vars
        run: |
          echo "::group::Fetching tags"
          git fetch --prune --tags -f
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      - name: Bump package version
        if: |
          (github.event_name == 'workflow_dispatch' && (github.event.inputs.target == 'dev' || github.event.inputs.target == 'main')) ||
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
        run: |
          cd editors/vscode
          # Bump minor version
          NEW_VERSION=$(npm version --no-git-tag-version minor)
          echo "Bumped package.json version to: $NEW_VERSION"

          # Configure git for commit
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Commit the version change
          git add package.json package-lock.json
          git commit -m "chore: bump VS Code extension version to $NEW_VERSION" || echo "No changes to commit"
      - name: Ready
        run: |
          cd editors/vscode
          npm install
      - name: Pre-release
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'dev') ||
          (github.event_name == 'push' && (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          cd editors/vscode
          npm run publish-pre
      - name: Release
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'main') ||
          (github.event_name == 'push' && !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          cd editors/vscode
          npm run publish
      - name: Push version update
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          # Push the commit back to the repository
          git push origin HEAD:main || echo "No changes to push"
