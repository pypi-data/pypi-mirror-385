[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "param-lsp"
readme = "README.md"
license = "MIT"
description = "Param Language Server Protocol"
requires-python = ">=3.10"
keywords = ["lsp", "param", "holoviz"]
dynamic = ["version"]
authors = [{ name = "Simon Hansen" }]
maintainers = [{ name = "Simon Hansen" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: OS Independent",
]
dependencies = [
    "pygls",
    "lsprotocol",
    "platformdirs",
    "tree-sitter>=0.25.0",
    "tree-sitter-python>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/hoxbro/param-lsp"
Source = "https://github.com/hoxbro/param-lsp"

[project.scripts]
param-lsp = "param_lsp.__main__:main"

[project.optional-dependencies]
jupyter = ["jupyterlab-lsp"]

[dependency-groups]
dev = [
    "debugpy",
    "pytest",
    "setuptools_scm",
    "holoviews",
    "panel",
    "param",
    "param-lsp[jupyter]",
    "basedpyright",
]
docs = ["mkdocs", "mkdocs-material", "mkdocstrings[python]"]

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "no-guess-dev" }

[tool.hatch.build.hooks.vcs]
version-file = "src/param_lsp/_version.py"

[tool.hatch.build.targets.wheel.shared-data]
"editors/jupyter/param-lsp-jupyter.json" = "etc/jupyter/jupyter_server_config.d/param-lsp-jupyter.json"

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers", "--color=yes"]
minversion = "7"
xfail_strict = true
log_cli_level = "INFO"
filterwarnings = [
    "error",
    "ignore:'_UnionGenericAlias' is deprecated and slated for removal in Python 3.17:DeprecationWarning",
    "ignore:unclosed event loop:ResourceWarning",
]

[tool.ruff]
line-length = 99
fix = true

[tool.ruff.lint]
select = [
    "B",
    "C4",
    "E",
    "EM",
    "F",
    "FLY",
    "I",
    "ICN",
    "ISC",
    "PERF",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "RUF",
    "S",
    "SIM",
    "TC",
    "TID",
    "UP",
    "W",
    "YTT",
]

ignore = [
    "E402", # Module level import not at top of file
    "E501", # Line to long
    "E731", # Do not assign a lambda expression, use a def
    "E741", # Ambiguous variable name
    "PERF203", # Try/except inside loop
    "PLC0415", # No top level imports
    "PLR09", # Branches
    "PLR2004", # magic-value-comparison
]
extend-unsafe-fixes = [
    "F401", # unused imports
    "F841", # unused variables
]

[tool.ruff.lint.per-file-ignores]
"example*" = ["I002"]
"tests/**/*" = ["S101"]
"docs/**" = ["I002"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
known-first-party = ["param_lsp"]

[tool.pyright]
include = ["**/*.py"]

typeCheckingMode = "standard"

reportMissingImports = false
