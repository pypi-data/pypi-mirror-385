[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "evolib"
version = "0.2.0b3dev19"
description = "A modular framework for evolutionary strategies and neuroevolution."
authors = [
    { name = "EvoLib", email = "evolib@dismail.de" }
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy >=1.24",
    "pyyaml >=6.0",
    "pandas >=2.3.0",
    "pydantic >= 2.7,<3.0",
    "graphviz>=0.20.1",
    "evonet>=0.1.0.dev5,<0.2",
    "matplotlib >=3.10",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Intended Audience :: Education"
]

[project.optional-dependencies]
dev = [
    "mypy",
    "types-PyYAML",
    "ray",
    "gymnasium",
    "imageio",
    "Box2D"
]
docs = [
  "sphinx",
  "sphinx-rtd-theme",
  "myst-parser",
]
test = [
  "pytest>=8",
  "pytest-cov>=5",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["evolib*"]

[tool.setuptools.package-data]
"evolib" = ["py.typed"]

# Tool-Konfigurationen
[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["evolib"]
src_paths = ["evolib"]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]
warn_unused_ignores = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88
pre-summary-newline = true

[tool.pylint]
max-line-length = 88
disable = [
    "missing-docstring",
    "invalid-name",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals"
]

[tool.pytest.ini_options]
addopts = "-q --cov=evolib --cov-report=term-missing:skip-covered --cov-branch"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.coverage.run]
branch = true
source = ["evolib"]

[tool.coverage.report]
#fail_under = 80
skip_covered = true
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "if __name__ == \"__main__\":",
  "raise NotImplementedError",
]


[pydantic-mypy]
init_typed = true
warn_untyped_fields = true
warn_required_dynamic_aliases = true
