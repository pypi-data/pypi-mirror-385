[project]
name = "playwright-ui5-select"
version = "0.0.19"
description = "Use UI5 selectors with Playwright"
readme = "README.md"
authors = [
    { name = "James", email = "jyfchen57@yahoo.com.au" }
]
requires-python = ">=3.9"
dependencies = []
license = "MIT"
license-files = ["LICEN[CS]E*"]

[project.urls]
Repository = "https://github.com/JamesYFC/playwright-ui5-select"

[dependency-groups]
dev = [
    "basedpyright>=1.29.2",
    "pre-commit>=4.2.0",
    "pytest-playwright>=0.7.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
exclude = ["tests"]

[tool.basedpyright]
venvPath = ".venv"
reportIncompatibleUnannotatedOverride = "error"
reportUnannotatedClassAttribute = "none"
reportUnusedCallResult = false

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = ["src/playwright_ui5_select/tests"]
addopts = "--browser chromium"

[tool.bumpversion]
current_version = "0.0.19"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = ["uv sync", "git add pyproject.toml uv.lock"]
post_commit_hooks = []
