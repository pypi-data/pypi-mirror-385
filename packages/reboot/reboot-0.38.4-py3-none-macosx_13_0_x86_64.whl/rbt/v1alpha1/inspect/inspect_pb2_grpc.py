# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.api import httpbody_pb2 as google_dot_api_dot_httpbody__pb2
from rbt.v1alpha1.inspect import inspect_pb2 as rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2


class InspectStub(object):
    """//////////////////////////////////////////////////////////////////////

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStateTypes = channel.unary_stream(
                '/rbt.v1alpha1.inspect.Inspect/GetStateTypes',
                request_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateTypesRequest.SerializeToString,
                response_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateTypesResponse.FromString,
                _registered_method=True)
        self.GetStateIds = channel.unary_stream(
                '/rbt.v1alpha1.inspect.Inspect/GetStateIds',
                request_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateIdsRequest.SerializeToString,
                response_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateIdsResponse.FromString,
                _registered_method=True)
        self.GetState = channel.unary_stream(
                '/rbt.v1alpha1.inspect.Inspect/GetState',
                request_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateRequest.SerializeToString,
                response_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateResponse.FromString,
                _registered_method=True)
        self.WebDashboard = channel.unary_unary(
                '/rbt.v1alpha1.inspect.Inspect/WebDashboard',
                request_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.WebDashboardRequest.SerializeToString,
                response_deserializer=google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
                _registered_method=True)


class InspectServicer(object):
    """//////////////////////////////////////////////////////////////////////

    """

    def GetStateTypes(self, request, context):
        """The list of state types in an application is static, however, we
        make this a streaming RPC so that the client can hear when it
        disconnects from the server and retry its call. Disconnects can
        mean that a new version of the app may have been deployed, and the
        state types may have changed, and the retry will ensure that the
        client gets the latest list.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStateIds(self, request, context):
        """Get state IDs for a given state type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetState(self, request, context):
        """Get the data for a single state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WebDashboard(self, request, context):
        """Serve a web dashboard. Uses `HttpBody` to return arbitrary content (HTML,
        JS) to callers; see `httpbody.proto` for more details.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InspectServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStateTypes': grpc.unary_stream_rpc_method_handler(
                    servicer.GetStateTypes,
                    request_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateTypesRequest.FromString,
                    response_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateTypesResponse.SerializeToString,
            ),
            'GetStateIds': grpc.unary_stream_rpc_method_handler(
                    servicer.GetStateIds,
                    request_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateIdsRequest.FromString,
                    response_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateIdsResponse.SerializeToString,
            ),
            'GetState': grpc.unary_stream_rpc_method_handler(
                    servicer.GetState,
                    request_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateRequest.FromString,
                    response_serializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateResponse.SerializeToString,
            ),
            'WebDashboard': grpc.unary_unary_rpc_method_handler(
                    servicer.WebDashboard,
                    request_deserializer=rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.WebDashboardRequest.FromString,
                    response_serializer=google_dot_api_dot_httpbody__pb2.HttpBody.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rbt.v1alpha1.inspect.Inspect', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('rbt.v1alpha1.inspect.Inspect', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Inspect(object):
    """//////////////////////////////////////////////////////////////////////

    """

    @staticmethod
    def GetStateTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/rbt.v1alpha1.inspect.Inspect/GetStateTypes',
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateTypesRequest.SerializeToString,
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStateIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/rbt.v1alpha1.inspect.Inspect/GetStateIds',
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateIdsRequest.SerializeToString,
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateIdsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/rbt.v1alpha1.inspect.Inspect/GetState',
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateRequest.SerializeToString,
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.GetStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WebDashboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/rbt.v1alpha1.inspect.Inspect/WebDashboard',
            rbt_dot_v1alpha1_dot_inspect_dot_inspect__pb2.WebDashboardRequest.SerializeToString,
            google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
