"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.struct_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class DynamicOtConfig(google.protobuf.message.Message):
    """[#protodoc-title: Dynamically loadable OpenTracing tracer]

    DynamicOtConfig is used to dynamically load a tracer from a shared library
    that implements the `OpenTracing dynamic loading API
    <https://github.com/opentracing/opentracing-cpp>`_.
    [#extension: envoy.tracers.dynamic_ot]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIBRARY_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    library: builtins.str
    """Dynamic library implementing the `OpenTracing API
    <https://github.com/opentracing/opentracing-cpp>`_.
    """
    @property
    def config(self) -> google.protobuf.struct_pb2.Struct:
        """The configuration to use when creating a tracer from the given dynamic
        library.
        """

    def __init__(
        self,
        *,
        library: builtins.str = ...,
        config: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["config", b"config", "library", b"library"]) -> None: ...

global___DynamicOtConfig = DynamicOtConfig
