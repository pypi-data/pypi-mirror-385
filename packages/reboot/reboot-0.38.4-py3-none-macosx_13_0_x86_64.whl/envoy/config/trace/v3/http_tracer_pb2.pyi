"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Tracing(google.protobuf.message.Message):
    """[#protodoc-title: Tracing]
    Tracing :ref:`architecture overview <arch_overview_tracing>`.

    The tracing configuration specifies settings for an HTTP tracer provider used by Envoy.

    Envoy may support other tracers in the future, but right now the HTTP tracer is the only one
    supported.

    .. attention::

      Use of this message type has been deprecated in favor of direct use of
      :ref:`Tracing.Http <envoy_v3_api_msg_config.trace.v3.Tracing.Http>`.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Http(google.protobuf.message.Message):
        """Configuration for an HTTP tracer provider used by Envoy.

        The configuration is defined by the
        :ref:`HttpConnectionManager.Tracing <envoy_v3_api_msg_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing>`
        :ref:`provider <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.provider>`
        field.
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        TYPED_CONFIG_FIELD_NUMBER: builtins.int
        name: builtins.str
        """The name of the HTTP trace driver to instantiate. The name must match a
        supported HTTP trace driver.
        See the :ref:`extensions listed in typed_config below <extension_category_envoy.tracers>` for the default list of the HTTP trace driver.
        """
        @property
        def typed_config(self) -> google.protobuf.any_pb2.Any: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            typed_config: google.protobuf.any_pb2.Any | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["config_type", b"config_type", "typed_config", b"typed_config"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["config_type", b"config_type", "name", b"name", "typed_config", b"typed_config"]) -> None: ...
        def WhichOneof(self, oneof_group: typing.Literal["config_type", b"config_type"]) -> typing.Literal["typed_config"] | None: ...

    HTTP_FIELD_NUMBER: builtins.int
    @property
    def http(self) -> global___Tracing.Http:
        """Provides configuration for the HTTP tracer."""

    def __init__(
        self,
        *,
        http: global___Tracing.Http | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["http", b"http"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["http", b"http"]) -> None: ...

global___Tracing = Tracing
