"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import envoy.config.core.v3.extension_pb2
import envoy.config.core.v3.udp_socket_config_pb2
import envoy.config.listener.v3.quic_config_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class UdpListenerConfig(google.protobuf.message.Message):
    """[#protodoc-title: UDP listener config]
    Listener :ref:`configuration overview <config_listeners>`

    [#next-free-field: 9]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOWNSTREAM_SOCKET_CONFIG_FIELD_NUMBER: builtins.int
    QUIC_OPTIONS_FIELD_NUMBER: builtins.int
    UDP_PACKET_PACKET_WRITER_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def downstream_socket_config(self) -> envoy.config.core.v3.udp_socket_config_pb2.UdpSocketConfig:
        """UDP socket configuration for the listener. The default for
        :ref:`prefer_gro <envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro>` is false for
        listener sockets. If receiving a large amount of datagrams from a small number of sources, it
        may be worthwhile to enable this option after performance testing.
        """

    @property
    def quic_options(self) -> envoy.config.listener.v3.quic_config_pb2.QuicProtocolOptions:
        """Configuration for QUIC protocol. If empty, QUIC will not be enabled on this listener. Set
        to the default object to enable QUIC without modifying any additional options.
        """

    @property
    def udp_packet_packet_writer_config(self) -> envoy.config.core.v3.extension_pb2.TypedExtensionConfig:
        """Configuration for the UDP packet writer. If empty, HTTP/3 will use GSO if available
        (:ref:`UdpDefaultWriterFactory <envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory>`)
        or the default kernel sendmsg if not,
        (:ref:`UdpDefaultWriterFactory <envoy_v3_api_msg_extensions.udp_packet_writer.v3.UdpDefaultWriterFactory>`)
        and raw UDP will use kernel sendmsg.
        [#extension-category: envoy.udp_packet_writer]
        """

    def __init__(
        self,
        *,
        downstream_socket_config: envoy.config.core.v3.udp_socket_config_pb2.UdpSocketConfig | None = ...,
        quic_options: envoy.config.listener.v3.quic_config_pb2.QuicProtocolOptions | None = ...,
        udp_packet_packet_writer_config: envoy.config.core.v3.extension_pb2.TypedExtensionConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["downstream_socket_config", b"downstream_socket_config", "quic_options", b"quic_options", "udp_packet_packet_writer_config", b"udp_packet_packet_writer_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["downstream_socket_config", b"downstream_socket_config", "quic_options", b"quic_options", "udp_packet_packet_writer_config", b"udp_packet_packet_writer_config"]) -> None: ...

global___UdpListenerConfig = UdpListenerConfig

@typing.final
class ActiveRawUdpListenerConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ActiveRawUdpListenerConfig = ActiveRawUdpListenerConfig
