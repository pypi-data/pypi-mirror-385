"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import xds.type.matcher.v3.matcher_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ServerNameMatcher(google.protobuf.message.Message):
    """[#protodoc-title: Server name matcher]

    Matches a fully qualified server name against a set of domain
    names with optional wildcards.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DomainMatcher(google.protobuf.message.Message):
        """Specifies a set of exact and wildcard domains and a match action. The
        wildcard symbol ``*`` must appear at most once as the left-most part of
        the domain on a dot border. The wildcard matches one or more non-empty
        domain parts.
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DOMAINS_FIELD_NUMBER: builtins.int
        ON_MATCH_FIELD_NUMBER: builtins.int
        @property
        def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """A non-empty set of domain names with optional wildcards, e.g.
            ``www.example.com``, ``*.com``, or ``*``.
            """

        @property
        def on_match(self) -> xds.type.matcher.v3.matcher_pb2.Matcher.OnMatch:
            """Match action to apply when the server name matches any of the domain
            names in the matcher.
            """

        def __init__(
            self,
            *,
            domains: collections.abc.Iterable[builtins.str] | None = ...,
            on_match: xds.type.matcher.v3.matcher_pb2.Matcher.OnMatch | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["on_match", b"on_match"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["domains", b"domains", "on_match", b"on_match"]) -> None: ...

    DOMAIN_MATCHERS_FIELD_NUMBER: builtins.int
    @property
    def domain_matchers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServerNameMatcher.DomainMatcher]:
        """Match a server name by multiple domain matchers. Each domain, exact or
        wildcard, must appear at most once across all the domain matchers.

        The server name will be matched against all wildcard domains starting from
        the longest suffix, i.e. ``www.example.com`` input will be first matched
        against ``www.example.com``, then ``*.example.com``, then ``*.com``, then
        ``*``, until the associated matcher action accepts the input. Note that
        wildcards must be on a dot border, and values like ``*w.example.com`` are
        invalid.
        """

    def __init__(
        self,
        *,
        domain_matchers: collections.abc.Iterable[global___ServerNameMatcher.DomainMatcher] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["domain_matchers", b"domain_matchers"]) -> None: ...

global___ServerNameMatcher = ServerNameMatcher
