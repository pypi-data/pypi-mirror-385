"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import envoy.type.matcher.v3.string_pb2
import envoy.type.matcher.v3.struct_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class NodeMatcher(google.protobuf.message.Message):
    """[#protodoc-title: Node matcher]

    Specifies the way to match a Node.
    The match follows AND semantics.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    NODE_METADATAS_FIELD_NUMBER: builtins.int
    @property
    def node_id(self) -> envoy.type.matcher.v3.string_pb2.StringMatcher:
        """Specifies match criteria on the node id."""

    @property
    def node_metadatas(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.type.matcher.v3.struct_pb2.StructMatcher]:
        """Specifies match criteria on the node metadata."""

    def __init__(
        self,
        *,
        node_id: envoy.type.matcher.v3.string_pb2.StringMatcher | None = ...,
        node_metadatas: collections.abc.Iterable[envoy.type.matcher.v3.struct_pb2.StructMatcher] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["node_id", b"node_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["node_id", b"node_id", "node_metadatas", b"node_metadatas"]) -> None: ...

global___NodeMatcher = NodeMatcher
