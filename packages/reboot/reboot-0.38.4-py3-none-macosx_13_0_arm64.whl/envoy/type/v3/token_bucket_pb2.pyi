"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TokenBucket(google.protobuf.message.Message):
    """[#protodoc-title: Token bucket]

    Configures a token bucket, typically used for rate limiting.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_TOKENS_FIELD_NUMBER: builtins.int
    TOKENS_PER_FILL_FIELD_NUMBER: builtins.int
    FILL_INTERVAL_FIELD_NUMBER: builtins.int
    max_tokens: builtins.int
    """The maximum tokens that the bucket can hold. This is also the number of tokens that the bucket
    initially contains.
    """
    @property
    def tokens_per_fill(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The number of tokens added to the bucket during each fill interval. If not specified, defaults
        to a single token.
        """

    @property
    def fill_interval(self) -> google.protobuf.duration_pb2.Duration:
        """The fill interval that tokens are added to the bucket. During each fill interval
        ``tokens_per_fill`` are added to the bucket. The bucket will never contain more than
        ``max_tokens`` tokens.
        """

    def __init__(
        self,
        *,
        max_tokens: builtins.int = ...,
        tokens_per_fill: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        fill_interval: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["fill_interval", b"fill_interval", "tokens_per_fill", b"tokens_per_fill"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fill_interval", b"fill_interval", "max_tokens", b"max_tokens", "tokens_per_fill", b"tokens_per_fill"]) -> None: ...

global___TokenBucket = TokenBucket
