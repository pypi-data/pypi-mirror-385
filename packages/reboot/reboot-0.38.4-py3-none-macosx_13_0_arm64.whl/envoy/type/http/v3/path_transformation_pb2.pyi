"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class PathTransformation(google.protobuf.message.Message):
    """PathTransformation defines an API to apply a sequence of operations that can be used to alter
    text before it is used for matching or routing. Multiple actions can be applied in the same
    Transformation, forming a sequential pipeline. The transformations will be performed in the order
    that they appear.

    This API is a work in progress.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Operation(google.protobuf.message.Message):
        """A type of operation to alter text."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class NormalizePathRFC3986(google.protobuf.message.Message):
            """Should text be normalized according to RFC 3986? This typically is used for path headers
            before any processing of requests by HTTP filters or routing. This applies percent-encoded
            normalization and path segment normalization. Fails on characters disallowed in URLs
            (e.g. NULLs). See `Normalization and Comparison
            <https://tools.ietf.org/html/rfc3986#section-6>`_ for details of normalization. Note that
            this options does not perform `case normalization
            <https://tools.ietf.org/html/rfc3986#section-6.2.2.1>`_
            """

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            def __init__(
                self,
            ) -> None: ...

        @typing.final
        class MergeSlashes(google.protobuf.message.Message):
            """Determines if adjacent slashes are merged into one. A common use case is for a request path
            header. Using this option in ``:ref: PathNormalizationOptions
            <envoy_v3_api_msg_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.PathNormalizationOptions>``
            will allow incoming requests with path ``//dir///file`` to match against route with ``prefix``
            match set to ``/dir``. When using for header transformations, note that slash merging is not
            part of `HTTP spec <https://tools.ietf.org/html/rfc3986>`_ and is provided for convenience.
            """

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            def __init__(
                self,
            ) -> None: ...

        NORMALIZE_PATH_RFC_3986_FIELD_NUMBER: builtins.int
        MERGE_SLASHES_FIELD_NUMBER: builtins.int
        @property
        def normalize_path_rfc_3986(self) -> global___PathTransformation.Operation.NormalizePathRFC3986:
            """Enable path normalization per RFC 3986."""

        @property
        def merge_slashes(self) -> global___PathTransformation.Operation.MergeSlashes:
            """Enable merging adjacent slashes."""

        def __init__(
            self,
            *,
            normalize_path_rfc_3986: global___PathTransformation.Operation.NormalizePathRFC3986 | None = ...,
            merge_slashes: global___PathTransformation.Operation.MergeSlashes | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["merge_slashes", b"merge_slashes", "normalize_path_rfc_3986", b"normalize_path_rfc_3986", "operation_specifier", b"operation_specifier"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["merge_slashes", b"merge_slashes", "normalize_path_rfc_3986", b"normalize_path_rfc_3986", "operation_specifier", b"operation_specifier"]) -> None: ...
        def WhichOneof(self, oneof_group: typing.Literal["operation_specifier", b"operation_specifier"]) -> typing.Literal["normalize_path_rfc_3986", "merge_slashes"] | None: ...

    OPERATIONS_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PathTransformation.Operation]:
        """A list of operations to apply. Transformations will be performed in the order that they appear."""

    def __init__(
        self,
        *,
        operations: collections.abc.Iterable[global___PathTransformation.Operation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["operations", b"operations"]) -> None: ...

global___PathTransformation = PathTransformation
