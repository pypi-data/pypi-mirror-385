"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import envoy.config.core.v3.base_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class LightstepConfig(google.protobuf.message.Message):
    """[#protodoc-title: LightStep tracer]

    Configuration for the LightStep tracer.
    [#extension: envoy.tracers.lightstep]
    [#not-implemented-hide:]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _PropagationMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _PropagationModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LightstepConfig._PropagationMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ENVOY: LightstepConfig._PropagationMode.ValueType  # 0
        """Propagate trace context in the single header x-ot-span-context."""
        LIGHTSTEP: LightstepConfig._PropagationMode.ValueType  # 1
        """Propagate trace context using LightStep's native format."""
        B3: LightstepConfig._PropagationMode.ValueType  # 2
        """Propagate trace context using the b3 format."""
        TRACE_CONTEXT: LightstepConfig._PropagationMode.ValueType  # 3
        """Propagation trace context using the w3 trace-context standard."""

    class PropagationMode(_PropagationMode, metaclass=_PropagationModeEnumTypeWrapper):
        """Available propagation modes"""

    ENVOY: LightstepConfig.PropagationMode.ValueType  # 0
    """Propagate trace context in the single header x-ot-span-context."""
    LIGHTSTEP: LightstepConfig.PropagationMode.ValueType  # 1
    """Propagate trace context using LightStep's native format."""
    B3: LightstepConfig.PropagationMode.ValueType  # 2
    """Propagate trace context using the b3 format."""
    TRACE_CONTEXT: LightstepConfig.PropagationMode.ValueType  # 3
    """Propagation trace context using the w3 trace-context standard."""

    COLLECTOR_CLUSTER_FIELD_NUMBER: builtins.int
    ACCESS_TOKEN_FILE_FIELD_NUMBER: builtins.int
    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    PROPAGATION_MODES_FIELD_NUMBER: builtins.int
    collector_cluster: builtins.str
    """The cluster manager cluster that hosts the LightStep collectors."""
    access_token_file: builtins.str
    """File containing the access token to the `LightStep
    <https://lightstep.com/>`_ API.
    """
    @property
    def access_token(self) -> envoy.config.core.v3.base_pb2.DataSource:
        """Access token to the `LightStep <https://lightstep.com/>`_ API."""

    @property
    def propagation_modes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___LightstepConfig.PropagationMode.ValueType]:
        """Propagation modes to use by LightStep's tracer."""

    def __init__(
        self,
        *,
        collector_cluster: builtins.str = ...,
        access_token_file: builtins.str = ...,
        access_token: envoy.config.core.v3.base_pb2.DataSource | None = ...,
        propagation_modes: collections.abc.Iterable[global___LightstepConfig.PropagationMode.ValueType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["access_token", b"access_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["access_token", b"access_token", "access_token_file", b"access_token_file", "collector_cluster", b"collector_cluster", "propagation_modes", b"propagation_modes"]) -> None: ...

global___LightstepConfig = LightstepConfig
