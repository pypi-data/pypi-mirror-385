"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import rbt.v1alpha1.tasks_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class PersistenceVersion(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    version: builtins.int
    def __init__(
        self,
        *,
        version: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["version", b"version"]) -> None: ...

global___PersistenceVersion = PersistenceVersion

@typing.final
class ShardInfo(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHARD_ID_FIELD_NUMBER: builtins.int
    SHARD_FIRST_KEY_FIELD_NUMBER: builtins.int
    shard_id: builtins.str
    shard_first_key: builtins.bytes
    def __init__(
        self,
        *,
        shard_id: builtins.str = ...,
        shard_first_key: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["shard_first_key", b"shard_first_key", "shard_id", b"shard_id"]) -> None: ...

global___ShardInfo = ShardInfo

@typing.final
class ConsensusInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHARD_INFOS_FIELD_NUMBER: builtins.int
    @property
    def shard_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ShardInfo]: ...
    def __init__(
        self,
        *,
        shard_infos: collections.abc.Iterable[global___ShardInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["shard_infos", b"shard_infos"]) -> None: ...

global___ConsensusInfo = ConsensusInfo

@typing.final
class Actor(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    STATE_REF_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    state_ref: builtins.str
    state: builtins.bytes
    """We make 'state' explicitly optional because we use 'Actor' both as a way
    to identify an actor instance by the tuple (state_type, state_ref) and as a
    container for passing around the state associated with the actor identified
    by that tuple.
    """
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        state_ref: builtins.str = ...,
        state: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_state", b"_state", "state", b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_state", b"_state", "state", b"state", "state_ref", b"state_ref", "state_type", b"state_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_state", b"_state"]) -> typing.Literal["state"] | None: ...

global___Actor = Actor

@typing.final
class Transaction(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    Sidecar specific transaction message, not used by the 'Coordinator'
    or 'Participant' services defined in 'transactions.proto'.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    STATE_REF_FIELD_NUMBER: builtins.int
    TRANSACTION_IDS_FIELD_NUMBER: builtins.int
    COORDINATOR_STATE_TYPE_FIELD_NUMBER: builtins.int
    COORDINATOR_STATE_REF_FIELD_NUMBER: builtins.int
    PREPARED_FIELD_NUMBER: builtins.int
    UNCOMMITTED_TASKS_FIELD_NUMBER: builtins.int
    UNCOMMITTED_IDEMPOTENT_MUTATIONS_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    state_ref: builtins.str
    coordinator_state_type: builtins.str
    coordinator_state_ref: builtins.str
    prepared: builtins.bool
    """During recovery any transactions that were not prepared must
    abort because rocksdb only persists transactions that have been
    prepared.

    TODO(benh): consider a more robust approach in the future that
    persists each state update such that transactions can still be
    prepared/committed even after a participant restarts.
    """
    @property
    def transaction_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def uncommitted_tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Task]:
        """Tasks that will need to be dispatched if the transaction commits."""

    @property
    def uncommitted_idempotent_mutations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdempotentMutation]:
        """Uncommitted idempotent mutations made within this transaction."""

    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        state_ref: builtins.str = ...,
        transaction_ids: collections.abc.Iterable[builtins.bytes] | None = ...,
        coordinator_state_type: builtins.str = ...,
        coordinator_state_ref: builtins.str = ...,
        prepared: builtins.bool = ...,
        uncommitted_tasks: collections.abc.Iterable[global___Task] | None = ...,
        uncommitted_idempotent_mutations: collections.abc.Iterable[global___IdempotentMutation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["coordinator_state_ref", b"coordinator_state_ref", "coordinator_state_type", b"coordinator_state_type", "prepared", b"prepared", "state_ref", b"state_ref", "state_type", b"state_type", "transaction_ids", b"transaction_ids", "uncommitted_idempotent_mutations", b"uncommitted_idempotent_mutations", "uncommitted_tasks", b"uncommitted_tasks"]) -> None: ...

global___Transaction = Transaction

@typing.final
class Task(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    NOTE: Tasks are exported as JSON in backups, as well as on disk in the
    sidecar.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Status:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Task._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Task._Status.ValueType  # 0
        PENDING: Task._Status.ValueType  # 1
        COMPLETED: Task._Status.ValueType  # 2

    class Status(_Status, metaclass=_StatusEnumTypeWrapper): ...
    UNKNOWN: Task.Status.ValueType  # 0
    PENDING: Task.Status.ValueType  # 1
    COMPLETED: Task.Status.ValueType  # 2

    TASK_ID_FIELD_NUMBER: builtins.int
    METHOD_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    ITERATION_FIELD_NUMBER: builtins.int
    method: builtins.str
    status: global___Task.Status.ValueType
    request: builtins.bytes
    """Serialized proto message."""
    iteration: builtins.int
    """For control loops, the number of iterations the task has completed."""
    @property
    def task_id(self) -> rbt.v1alpha1.tasks_pb2.TaskId: ...
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def response(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def error(self) -> google.protobuf.any_pb2.Any: ...
    def __init__(
        self,
        *,
        task_id: rbt.v1alpha1.tasks_pb2.TaskId | None = ...,
        method: builtins.str = ...,
        status: global___Task.Status.ValueType = ...,
        request: builtins.bytes = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        response: google.protobuf.any_pb2.Any | None = ...,
        error: google.protobuf.any_pb2.Any | None = ...,
        iteration: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_timestamp", b"_timestamp", "error", b"error", "response", b"response", "response_or_error", b"response_or_error", "task_id", b"task_id", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_timestamp", b"_timestamp", "error", b"error", "iteration", b"iteration", "method", b"method", "request", b"request", "response", b"response", "response_or_error", b"response_or_error", "status", b"status", "task_id", b"task_id", "timestamp", b"timestamp"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_timestamp", b"_timestamp"]) -> typing.Literal["timestamp"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["response_or_error", b"response_or_error"]) -> typing.Literal["response", "error"] | None: ...

global___Task = Task

@typing.final
class Participants(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    NOTE: "wrapper" message of all the transaction participants for
    storing in database.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class StateRefs(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        STATE_REFS_FIELD_NUMBER: builtins.int
        @property
        def state_refs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        def __init__(
            self,
            *,
            state_refs: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["state_refs", b"state_refs"]) -> None: ...

    @typing.final
    class ShouldCommitEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Participants.StateRefs: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Participants.StateRefs | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class ShouldAbortEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Participants.StateRefs: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Participants.StateRefs | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SHOULD_COMMIT_FIELD_NUMBER: builtins.int
    SHOULD_ABORT_FIELD_NUMBER: builtins.int
    @property
    def should_commit(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Participants.StateRefs]:
        """Participants that we should commit, keyed by state type."""

    @property
    def should_abort(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Participants.StateRefs]:
        """Participants that we should abort, keyed by state type."""

    def __init__(
        self,
        *,
        should_commit: collections.abc.Mapping[builtins.str, global___Participants.StateRefs] | None = ...,
        should_abort: collections.abc.Mapping[builtins.str, global___Participants.StateRefs] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["should_abort", b"should_abort", "should_commit", b"should_commit"]) -> None: ...

global___Participants = Participants

@typing.final
class IdempotentMutation(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    NOTE: IdempotentMutations are exported as JSON in backups, as
    well as on disk in the sidecar.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    STATE_REF_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    TASK_IDS_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    """NOTE: The state_type and state_ref were added in persistence version 1
    to allow mutations to be partitioned during import/export.
    """
    state_ref: builtins.str
    key: builtins.bytes
    response: builtins.bytes
    """TODO(benh): also store the request, or a hash of the request if
    that is smaller, so that we can validate when idempotent mutations
    are made with the same idempotency key but a different request.

    oneof request {
      bytes request = 3;
      bytes request_hash = 4;
    }
    """
    @property
    def task_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[rbt.v1alpha1.tasks_pb2.TaskId]:
        """Any tasks that were scheduled as part of this mutation."""

    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        state_ref: builtins.str = ...,
        key: builtins.bytes = ...,
        response: builtins.bytes = ...,
        task_ids: collections.abc.Iterable[rbt.v1alpha1.tasks_pb2.TaskId] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "response", b"response", "state_ref", b"state_ref", "state_type", b"state_type", "task_ids", b"task_ids"]) -> None: ...

global___IdempotentMutation = IdempotentMutation

@typing.final
class ColocatedRangeRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    A request for a range of colocated data of a particular type, where `start` <
    `end`. Returns results in ascending key order.

    The start key is inclusive and the end key is exclusive. If the start or
    end are unset, then the range is unbounded in that direction.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    PARENT_STATE_REF_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    TRANSACTION_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    """The state machine type that is being scanned: this corresponds to the
    column family that we will scan in.
    """
    parent_state_ref: builtins.str
    """The parent state machine id that we will range in. Must be non-empty.
    Note: The type of the parent state machine id is not relevant currently,
    because data is not interleaved. All data of a particular state_type is
    always stored in a type-specific column family.
    """
    start: builtins.str
    """The optional start and end of the range within the parent_state_ref."""
    end: builtins.str
    limit: builtins.int
    """A required limit on the count of records returned, to avoid exhausting
    memory in the client or server. A zero limit is not special cased: no
    records will be returned for `limit=0`.
    """
    @property
    def transaction(self) -> global___Transaction: ...
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        parent_state_ref: builtins.str = ...,
        start: builtins.str | None = ...,
        end: builtins.str | None = ...,
        limit: builtins.int = ...,
        transaction: global___Transaction | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_end", b"_end", "_start", b"_start", "_transaction", b"_transaction", "end", b"end", "start", b"start", "transaction", b"transaction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_end", b"_end", "_start", b"_start", "_transaction", b"_transaction", "end", b"end", "limit", b"limit", "parent_state_ref", b"parent_state_ref", "start", b"start", "state_type", b"state_type", "transaction", b"transaction"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_end", b"_end"]) -> typing.Literal["end"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_start", b"_start"]) -> typing.Literal["start"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_transaction", b"_transaction"]) -> typing.Literal["transaction"] | None: ...

global___ColocatedRangeRequest = ColocatedRangeRequest

@typing.final
class ColocatedRangeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """NOTE: We do not use a `map`, because it does not preserve order."""

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[builtins.str] | None = ...,
        values: collections.abc.Iterable[builtins.bytes] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys", "values", b"values"]) -> None: ...

global___ColocatedRangeResponse = ColocatedRangeResponse

@typing.final
class ColocatedReverseRangeRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    A request for a range of colocated data of a particular type, where `start` >
    `end`. Returns results in descending key order.

    The start key is inclusive and the end key is exclusive. If the start or
    end are unset, then the range is unbounded in that direction.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    PARENT_STATE_REF_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    TRANSACTION_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    """The state machine type that is being scanned: this corresponds to the
    column family that we will scan in.
    """
    parent_state_ref: builtins.str
    """The parent state machine id that we will range in. Must be non-empty.
    Note: The type of the parent state machine id is not relevant currently,
    because data is not interleaved. All data of a particular state_type is
    always stored in a type-specific column family.
    """
    start: builtins.str
    """The optional start and end of the range within the parent_state_ref."""
    end: builtins.str
    limit: builtins.int
    """A required limit on the count of records returned, to avoid exhausting
    memory in the client or server. A zero limit is not special cased: no
    records will be returned for `limit=0`.
    """
    @property
    def transaction(self) -> global___Transaction: ...
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        parent_state_ref: builtins.str = ...,
        start: builtins.str | None = ...,
        end: builtins.str | None = ...,
        limit: builtins.int = ...,
        transaction: global___Transaction | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_end", b"_end", "_start", b"_start", "_transaction", b"_transaction", "end", b"end", "start", b"start", "transaction", b"transaction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_end", b"_end", "_start", b"_start", "_transaction", b"_transaction", "end", b"end", "limit", b"limit", "parent_state_ref", b"parent_state_ref", "start", b"start", "state_type", b"state_type", "transaction", b"transaction"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_end", b"_end"]) -> typing.Literal["end"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_start", b"_start"]) -> typing.Literal["start"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_transaction", b"_transaction"]) -> typing.Literal["transaction"] | None: ...

global___ColocatedReverseRangeRequest = ColocatedReverseRangeRequest

@typing.final
class ColocatedReverseRangeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """NOTE: We do not use a `map`, because it does not preserve order."""

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[builtins.str] | None = ...,
        values: collections.abc.Iterable[builtins.bytes] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys", "values", b"values"]) -> None: ...

global___ColocatedReverseRangeResponse = ColocatedReverseRangeResponse

@typing.final
class FindRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Key(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        STATE_REF_FIELD_NUMBER: builtins.int
        EXCLUSIVE_FIELD_NUMBER: builtins.int
        state_ref: builtins.str
        """The state_ref at which to start scanning. Does not need to be an
        existing state_ref; it may for example be a prefix of a state_ref
        that the caller is interested in. Can be empty, in which case the
        first `limit` state refs will be returned.
        """
        exclusive: builtins.bool
        """If true, do not include `state_ref` in the range to search. This
        is useful for paginated searches; the caller may specify the last
        state reference they've seen as their `state_ref`.
        """
        def __init__(
            self,
            *,
            state_ref: builtins.str = ...,
            exclusive: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["exclusive", b"exclusive", "state_ref", b"state_ref"]) -> None: ...

    STATE_TYPE_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    UNTIL_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    """The state type that is being scanned: this corresponds to the
    column family that we will scan in. Must be an existing state type.
    """
    limit: builtins.int
    """A required limit on the count of records returned, to avoid
    exhausting memory in the client or server. A zero limit is not
    special cased: no records will be returned for `limit=0`.
    """
    @property
    def start(self) -> global___FindRequest.Key:
        """Return the first `limit` entries starting from this key. Useful
        for forward pagination.
        """

    @property
    def until(self) -> global___FindRequest.Key:
        """Return the last `limit` entries before this key. Useful for
        backwards pagination.
        """

    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        start: global___FindRequest.Key | None = ...,
        until: global___FindRequest.Key | None = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["direction", b"direction", "start", b"start", "until", b"until"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["direction", b"direction", "limit", b"limit", "start", b"start", "state_type", b"state_type", "until", b"until"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["direction", b"direction"]) -> typing.Literal["start", "until"] | None: ...

global___FindRequest = FindRequest

@typing.final
class FindResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_REFS_FIELD_NUMBER: builtins.int
    @property
    def state_refs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        state_refs: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state_refs", b"state_refs"]) -> None: ...

global___FindResponse = FindResponse

@typing.final
class LoadRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTORS_FIELD_NUMBER: builtins.int
    TASK_IDS_FIELD_NUMBER: builtins.int
    @property
    def actors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Actor]:
        """Invariant: actor's 'state' is expected to be unset."""

    @property
    def task_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[rbt.v1alpha1.tasks_pb2.TaskId]: ...
    def __init__(
        self,
        *,
        actors: collections.abc.Iterable[global___Actor] | None = ...,
        task_ids: collections.abc.Iterable[rbt.v1alpha1.tasks_pb2.TaskId] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["actors", b"actors", "task_ids", b"task_ids"]) -> None: ...

global___LoadRequest = LoadRequest

@typing.final
class LoadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTORS_FIELD_NUMBER: builtins.int
    TASKS_FIELD_NUMBER: builtins.int
    @property
    def actors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Actor]:
        """Invariant: actor's 'state' is expected to be set, although it may be empty."""

    @property
    def tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Task]: ...
    def __init__(
        self,
        *,
        actors: collections.abc.Iterable[global___Actor] | None = ...,
        tasks: collections.abc.Iterable[global___Task] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["actors", b"actors", "tasks", b"tasks"]) -> None: ...

global___LoadResponse = LoadResponse

@typing.final
class ColocatedUpsert(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////

    A special cased (#2983) colocated upsert.

    TODO: Merge with `actor_upserts` when we support colocation of arbitrary
    state machines. See #2983.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    key: builtins.str
    value: builtins.bytes
    """If the value is unset, then the key will be deleted."""
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        key: builtins.str = ...,
        value: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_value", b"_value", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_value", b"_value", "key", b"key", "state_type", b"state_type", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_value", b"_value"]) -> typing.Literal["value"] | None: ...

global___ColocatedUpsert = ColocatedUpsert

@typing.final
class StoreRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTOR_UPSERTS_FIELD_NUMBER: builtins.int
    TASK_UPSERTS_FIELD_NUMBER: builtins.int
    COLOCATED_UPSERTS_FIELD_NUMBER: builtins.int
    TRANSACTION_FIELD_NUMBER: builtins.int
    IDEMPOTENT_MUTATION_FIELD_NUMBER: builtins.int
    ENSURE_STATE_TYPES_CREATED_FIELD_NUMBER: builtins.int
    SYNC_FIELD_NUMBER: builtins.int
    sync: builtins.bool
    @property
    def actor_upserts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Actor]:
        """Invariant: actor's 'state' is expected to be set, although it may be empty."""

    @property
    def task_upserts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Task]: ...
    @property
    def colocated_upserts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ColocatedUpsert]: ...
    @property
    def transaction(self) -> global___Transaction: ...
    @property
    def idempotent_mutation(self) -> global___IdempotentMutation: ...
    @property
    def ensure_state_types_created(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        actor_upserts: collections.abc.Iterable[global___Actor] | None = ...,
        task_upserts: collections.abc.Iterable[global___Task] | None = ...,
        colocated_upserts: collections.abc.Iterable[global___ColocatedUpsert] | None = ...,
        transaction: global___Transaction | None = ...,
        idempotent_mutation: global___IdempotentMutation | None = ...,
        ensure_state_types_created: collections.abc.Iterable[builtins.str] | None = ...,
        sync: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_idempotent_mutation", b"_idempotent_mutation", "_transaction", b"_transaction", "idempotent_mutation", b"idempotent_mutation", "transaction", b"transaction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_idempotent_mutation", b"_idempotent_mutation", "_transaction", b"_transaction", "actor_upserts", b"actor_upserts", "colocated_upserts", b"colocated_upserts", "ensure_state_types_created", b"ensure_state_types_created", "idempotent_mutation", b"idempotent_mutation", "sync", b"sync", "task_upserts", b"task_upserts", "transaction", b"transaction"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_idempotent_mutation", b"_idempotent_mutation"]) -> typing.Literal["idempotent_mutation"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_transaction", b"_transaction"]) -> typing.Literal["transaction"] | None: ...

global___StoreRequest = StoreRequest

@typing.final
class StoreResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StoreResponse = StoreResponse

@typing.final
class RecoverRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class StateTagsByStateTypeEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    STATE_TAGS_BY_STATE_TYPE_FIELD_NUMBER: builtins.int
    @property
    def state_tags_by_state_type(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Mapping from fully qualified state type names to state tags (as defined in
        `rebootdev.aio.types`). Used to implement backwards compatibility from
        persistence version 0 to version 1.
        """

    def __init__(
        self,
        *,
        state_tags_by_state_type: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state_tags_by_state_type", b"state_tags_by_state_type"]) -> None: ...

global___RecoverRequest = RecoverRequest

@typing.final
class RecoverResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class PreparedCoordinatorTransactionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Participants: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Participants | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PENDING_TASKS_FIELD_NUMBER: builtins.int
    PARTICIPANT_TRANSACTIONS_FIELD_NUMBER: builtins.int
    PREPARED_COORDINATOR_TRANSACTIONS_FIELD_NUMBER: builtins.int
    IDEMPOTENT_MUTATIONS_FIELD_NUMBER: builtins.int
    @property
    def pending_tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Task]: ...
    @property
    def participant_transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Transaction]: ...
    @property
    def prepared_coordinator_transactions(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Participants]:
        """Transaction UUID -> Participants for every transaction that a
        coordinator completed the prepare phase of two phase commit.

        NOTE: because a map key can not be bytes we pass a stringified
        UUID where as other places we pass the UUID in its bytes form.
        """

    @property
    def idempotent_mutations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdempotentMutation]: ...
    def __init__(
        self,
        *,
        pending_tasks: collections.abc.Iterable[global___Task] | None = ...,
        participant_transactions: collections.abc.Iterable[global___Transaction] | None = ...,
        prepared_coordinator_transactions: collections.abc.Mapping[builtins.str, global___Participants] | None = ...,
        idempotent_mutations: collections.abc.Iterable[global___IdempotentMutation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["idempotent_mutations", b"idempotent_mutations", "participant_transactions", b"participant_transactions", "pending_tasks", b"pending_tasks", "prepared_coordinator_transactions", b"prepared_coordinator_transactions"]) -> None: ...

global___RecoverResponse = RecoverResponse

@typing.final
class TransactionParticipantPrepareRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    STATE_REF_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    state_ref: builtins.str
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        state_ref: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state_ref", b"state_ref", "state_type", b"state_type"]) -> None: ...

global___TransactionParticipantPrepareRequest = TransactionParticipantPrepareRequest

@typing.final
class TransactionParticipantPrepareResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TransactionParticipantPrepareResponse = TransactionParticipantPrepareResponse

@typing.final
class TransactionParticipantCommitRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    STATE_REF_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    state_ref: builtins.str
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        state_ref: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state_ref", b"state_ref", "state_type", b"state_type"]) -> None: ...

global___TransactionParticipantCommitRequest = TransactionParticipantCommitRequest

@typing.final
class TransactionParticipantCommitResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TransactionParticipantCommitResponse = TransactionParticipantCommitResponse

@typing.final
class TransactionParticipantAbortRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    STATE_REF_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    state_ref: builtins.str
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
        state_ref: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state_ref", b"state_ref", "state_type", b"state_type"]) -> None: ...

global___TransactionParticipantAbortRequest = TransactionParticipantAbortRequest

@typing.final
class TransactionParticipantAbortResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TransactionParticipantAbortResponse = TransactionParticipantAbortResponse

@typing.final
class TransactionCoordinatorPreparedRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSACTION_ID_FIELD_NUMBER: builtins.int
    PARTICIPANTS_FIELD_NUMBER: builtins.int
    transaction_id: builtins.bytes
    @property
    def participants(self) -> global___Participants: ...
    def __init__(
        self,
        *,
        transaction_id: builtins.bytes = ...,
        participants: global___Participants | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["participants", b"participants"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["participants", b"participants", "transaction_id", b"transaction_id"]) -> None: ...

global___TransactionCoordinatorPreparedRequest = TransactionCoordinatorPreparedRequest

@typing.final
class TransactionCoordinatorPreparedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TransactionCoordinatorPreparedResponse = TransactionCoordinatorPreparedResponse

@typing.final
class TransactionCoordinatorCleanupRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSACTION_ID_FIELD_NUMBER: builtins.int
    transaction_id: builtins.bytes
    def __init__(
        self,
        *,
        transaction_id: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["transaction_id", b"transaction_id"]) -> None: ...

global___TransactionCoordinatorCleanupRequest = TransactionCoordinatorCleanupRequest

@typing.final
class TransactionCoordinatorCleanupResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TransactionCoordinatorCleanupResponse = TransactionCoordinatorCleanupResponse

@typing.final
class ExportRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_TYPE_FIELD_NUMBER: builtins.int
    state_type: builtins.str
    def __init__(
        self,
        *,
        state_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["state_type", b"state_type"]) -> None: ...

global___ExportRequest = ExportRequest

@typing.final
class ExportItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTOR_FIELD_NUMBER: builtins.int
    TASK_FIELD_NUMBER: builtins.int
    IDEMPOTENT_MUTATION_FIELD_NUMBER: builtins.int
    @property
    def actor(self) -> global___Actor: ...
    @property
    def task(self) -> global___Task: ...
    @property
    def idempotent_mutation(self) -> global___IdempotentMutation: ...
    def __init__(
        self,
        *,
        actor: global___Actor | None = ...,
        task: global___Task | None = ...,
        idempotent_mutation: global___IdempotentMutation | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["actor", b"actor", "idempotent_mutation", b"idempotent_mutation", "item", b"item", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["actor", b"actor", "idempotent_mutation", b"idempotent_mutation", "item", b"item", "task", b"task"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["item", b"item"]) -> typing.Literal["actor", "task", "idempotent_mutation"] | None: ...

global___ExportItem = ExportItem

@typing.final
class ExportResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExportItem]: ...
    def __init__(
        self,
        *,
        items: collections.abc.Iterable[global___ExportItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["items", b"items"]) -> None: ...

global___ExportResponse = ExportResponse
