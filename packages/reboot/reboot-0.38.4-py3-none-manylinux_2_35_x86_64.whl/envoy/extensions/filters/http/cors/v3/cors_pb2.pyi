"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import envoy.config.core.v3.base_pb2
import envoy.type.matcher.v3.string_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Cors(google.protobuf.message.Message):
    """[#protodoc-title: Cors]
    CORS Filter :ref:`configuration overview <config_http_filters_cors>`.
    [#extension: envoy.filters.http.cors]

    Cors filter config.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Cors = Cors

@typing.final
class CorsPolicy(google.protobuf.message.Message):
    """[#next-free-field: 10]"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOW_ORIGIN_STRING_MATCH_FIELD_NUMBER: builtins.int
    ALLOW_METHODS_FIELD_NUMBER: builtins.int
    ALLOW_HEADERS_FIELD_NUMBER: builtins.int
    EXPOSE_HEADERS_FIELD_NUMBER: builtins.int
    MAX_AGE_FIELD_NUMBER: builtins.int
    ALLOW_CREDENTIALS_FIELD_NUMBER: builtins.int
    FILTER_ENABLED_FIELD_NUMBER: builtins.int
    SHADOW_ENABLED_FIELD_NUMBER: builtins.int
    ALLOW_PRIVATE_NETWORK_ACCESS_FIELD_NUMBER: builtins.int
    allow_methods: builtins.str
    """Specifies the content for the ``access-control-allow-methods`` header."""
    allow_headers: builtins.str
    """Specifies the content for the ``access-control-allow-headers`` header."""
    expose_headers: builtins.str
    """Specifies the content for the ``access-control-expose-headers`` header."""
    max_age: builtins.str
    """Specifies the content for the ``access-control-max-age`` header."""
    @property
    def allow_origin_string_match(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.type.matcher.v3.string_pb2.StringMatcher]:
        """Specifies string patterns that match allowed origins. An origin is allowed if any of the
        string matchers match.
        """

    @property
    def allow_credentials(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Specifies whether the resource allows credentials."""

    @property
    def filter_enabled(self) -> envoy.config.core.v3.base_pb2.RuntimeFractionalPercent:
        """Specifies the % of requests for which the CORS filter is enabled.

        If neither ``filter_enabled``, nor ``shadow_enabled`` are specified, the CORS
        filter will be enabled for 100% of the requests.

        If :ref:`runtime_key <envoy_v3_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key>` is
        specified, Envoy will lookup the runtime key to get the percentage of requests to filter.
        """

    @property
    def shadow_enabled(self) -> envoy.config.core.v3.base_pb2.RuntimeFractionalPercent:
        """Specifies the % of requests for which the CORS policies will be evaluated and tracked, but not
        enforced.

        This field is intended to be used when ``filter_enabled`` is off. That field have to explicitly disable
        the filter in order for this setting to take effect.

        If :ref:`runtime_key <envoy_v3_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key>` is specified,
        Envoy will lookup the runtime key to get the percentage of requests for which it will evaluate
        and track the request's ``Origin`` to determine if it's valid but will not enforce any policies.
        """

    @property
    def allow_private_network_access(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Specify whether allow requests whose target server's IP address is more private than that from
        which the request initiator was fetched.

        More details refer to https://developer.chrome.com/blog/private-network-access-preflight.
        """

    def __init__(
        self,
        *,
        allow_origin_string_match: collections.abc.Iterable[envoy.type.matcher.v3.string_pb2.StringMatcher] | None = ...,
        allow_methods: builtins.str = ...,
        allow_headers: builtins.str = ...,
        expose_headers: builtins.str = ...,
        max_age: builtins.str = ...,
        allow_credentials: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        filter_enabled: envoy.config.core.v3.base_pb2.RuntimeFractionalPercent | None = ...,
        shadow_enabled: envoy.config.core.v3.base_pb2.RuntimeFractionalPercent | None = ...,
        allow_private_network_access: google.protobuf.wrappers_pb2.BoolValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["allow_credentials", b"allow_credentials", "allow_private_network_access", b"allow_private_network_access", "filter_enabled", b"filter_enabled", "shadow_enabled", b"shadow_enabled"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allow_credentials", b"allow_credentials", "allow_headers", b"allow_headers", "allow_methods", b"allow_methods", "allow_origin_string_match", b"allow_origin_string_match", "allow_private_network_access", b"allow_private_network_access", "expose_headers", b"expose_headers", "filter_enabled", b"filter_enabled", "max_age", b"max_age", "shadow_enabled", b"shadow_enabled"]) -> None: ...

global___CorsPolicy = CorsPolicy
