"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import envoy.config.core.v3.grpc_service_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import opencensus.proto.trace.v1.trace_config_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class OpenCensusConfig(google.protobuf.message.Message):
    """[#protodoc-title: OpenCensus tracer]

    Configuration for the OpenCensus tracer.
    [#next-free-field: 15]
    [#extension: envoy.tracers.opencensus]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TraceContext:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TraceContextEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OpenCensusConfig._TraceContext.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NONE: OpenCensusConfig._TraceContext.ValueType  # 0
        """No-op default, no trace context is utilized."""
        TRACE_CONTEXT: OpenCensusConfig._TraceContext.ValueType  # 1
        """W3C Trace-Context format "traceparent:" header."""
        GRPC_TRACE_BIN: OpenCensusConfig._TraceContext.ValueType  # 2
        """Binary "grpc-trace-bin:" header."""
        CLOUD_TRACE_CONTEXT: OpenCensusConfig._TraceContext.ValueType  # 3
        """"X-Cloud-Trace-Context:" header."""
        B3: OpenCensusConfig._TraceContext.ValueType  # 4
        """X-B3-* headers."""

    class TraceContext(_TraceContext, metaclass=_TraceContextEnumTypeWrapper): ...
    NONE: OpenCensusConfig.TraceContext.ValueType  # 0
    """No-op default, no trace context is utilized."""
    TRACE_CONTEXT: OpenCensusConfig.TraceContext.ValueType  # 1
    """W3C Trace-Context format "traceparent:" header."""
    GRPC_TRACE_BIN: OpenCensusConfig.TraceContext.ValueType  # 2
    """Binary "grpc-trace-bin:" header."""
    CLOUD_TRACE_CONTEXT: OpenCensusConfig.TraceContext.ValueType  # 3
    """"X-Cloud-Trace-Context:" header."""
    B3: OpenCensusConfig.TraceContext.ValueType  # 4
    """X-B3-* headers."""

    TRACE_CONFIG_FIELD_NUMBER: builtins.int
    STDOUT_EXPORTER_ENABLED_FIELD_NUMBER: builtins.int
    STACKDRIVER_EXPORTER_ENABLED_FIELD_NUMBER: builtins.int
    STACKDRIVER_PROJECT_ID_FIELD_NUMBER: builtins.int
    STACKDRIVER_ADDRESS_FIELD_NUMBER: builtins.int
    STACKDRIVER_GRPC_SERVICE_FIELD_NUMBER: builtins.int
    ZIPKIN_EXPORTER_ENABLED_FIELD_NUMBER: builtins.int
    ZIPKIN_URL_FIELD_NUMBER: builtins.int
    OCAGENT_EXPORTER_ENABLED_FIELD_NUMBER: builtins.int
    OCAGENT_ADDRESS_FIELD_NUMBER: builtins.int
    OCAGENT_GRPC_SERVICE_FIELD_NUMBER: builtins.int
    INCOMING_TRACE_CONTEXT_FIELD_NUMBER: builtins.int
    OUTGOING_TRACE_CONTEXT_FIELD_NUMBER: builtins.int
    stdout_exporter_enabled: builtins.bool
    """Enables the stdout exporter if set to true. This is intended for debugging
    purposes.
    """
    stackdriver_exporter_enabled: builtins.bool
    """Enables the Stackdriver exporter if set to true. The project_id must also
    be set.
    """
    stackdriver_project_id: builtins.str
    """The Cloud project_id to use for Stackdriver tracing."""
    stackdriver_address: builtins.str
    """(optional) By default, the Stackdriver exporter will connect to production
    Stackdriver. If stackdriver_address is non-empty, it will instead connect
    to this address, which is in the gRPC format:
    https://github.com/grpc/grpc/blob/master/doc/naming.md
    """
    zipkin_exporter_enabled: builtins.bool
    """Enables the Zipkin exporter if set to true. The url and service name must
    also be set. This is deprecated, prefer to use Envoy's :ref:`native Zipkin
    tracer <envoy_v3_api_msg_config.trace.v3.ZipkinConfig>`.
    """
    zipkin_url: builtins.str
    """The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans". This is
    deprecated, prefer to use Envoy's :ref:`native Zipkin tracer
    <envoy_v3_api_msg_config.trace.v3.ZipkinConfig>`.
    """
    ocagent_exporter_enabled: builtins.bool
    """Enables the OpenCensus Agent exporter if set to true. The ocagent_address or
    ocagent_grpc_service must also be set.
    """
    ocagent_address: builtins.str
    """The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
    format: https://github.com/grpc/grpc/blob/master/doc/naming.md
    [#comment:TODO: deprecate this field]
    """
    @property
    def trace_config(self) -> opencensus.proto.trace.v1.trace_config_pb2.TraceConfig:
        """Configures tracing, e.g. the sampler, max number of annotations, etc."""

    @property
    def stackdriver_grpc_service(self) -> envoy.config.core.v3.grpc_service_pb2.GrpcService:
        """(optional) The gRPC server that hosts Stackdriver tracing service. Only
        Google gRPC is supported. If :ref:`target_uri <envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri>`
        is not provided, the default production Stackdriver address will be used.
        """

    @property
    def ocagent_grpc_service(self) -> envoy.config.core.v3.grpc_service_pb2.GrpcService:
        """(optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
        This is only used if the ocagent_address is left empty.
        """

    @property
    def incoming_trace_context(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___OpenCensusConfig.TraceContext.ValueType]:
        """List of incoming trace context headers we will accept. First one found
        wins.
        """

    @property
    def outgoing_trace_context(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___OpenCensusConfig.TraceContext.ValueType]:
        """List of outgoing trace context headers we will produce."""

    def __init__(
        self,
        *,
        trace_config: opencensus.proto.trace.v1.trace_config_pb2.TraceConfig | None = ...,
        stdout_exporter_enabled: builtins.bool = ...,
        stackdriver_exporter_enabled: builtins.bool = ...,
        stackdriver_project_id: builtins.str = ...,
        stackdriver_address: builtins.str = ...,
        stackdriver_grpc_service: envoy.config.core.v3.grpc_service_pb2.GrpcService | None = ...,
        zipkin_exporter_enabled: builtins.bool = ...,
        zipkin_url: builtins.str = ...,
        ocagent_exporter_enabled: builtins.bool = ...,
        ocagent_address: builtins.str = ...,
        ocagent_grpc_service: envoy.config.core.v3.grpc_service_pb2.GrpcService | None = ...,
        incoming_trace_context: collections.abc.Iterable[global___OpenCensusConfig.TraceContext.ValueType] | None = ...,
        outgoing_trace_context: collections.abc.Iterable[global___OpenCensusConfig.TraceContext.ValueType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["ocagent_grpc_service", b"ocagent_grpc_service", "stackdriver_grpc_service", b"stackdriver_grpc_service", "trace_config", b"trace_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["incoming_trace_context", b"incoming_trace_context", "ocagent_address", b"ocagent_address", "ocagent_exporter_enabled", b"ocagent_exporter_enabled", "ocagent_grpc_service", b"ocagent_grpc_service", "outgoing_trace_context", b"outgoing_trace_context", "stackdriver_address", b"stackdriver_address", "stackdriver_exporter_enabled", b"stackdriver_exporter_enabled", "stackdriver_grpc_service", b"stackdriver_grpc_service", "stackdriver_project_id", b"stackdriver_project_id", "stdout_exporter_enabled", b"stdout_exporter_enabled", "trace_config", b"trace_config", "zipkin_exporter_enabled", b"zipkin_exporter_enabled", "zipkin_url", b"zipkin_url"]) -> None: ...

global___OpenCensusConfig = OpenCensusConfig
