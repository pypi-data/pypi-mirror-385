"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ZipkinConfig(google.protobuf.message.Message):
    """[#protodoc-title: Zipkin tracer]

    Configuration for the Zipkin tracer.
    [#extension: envoy.tracers.zipkin]
    [#next-free-field: 8]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _CollectorEndpointVersion:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CollectorEndpointVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ZipkinConfig._CollectorEndpointVersion.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE: ZipkinConfig._CollectorEndpointVersion.ValueType  # 0
        """Zipkin API v1, JSON over HTTP.
        [#comment: The default implementation of Zipkin client before this field is added was only v1
        and the way user configure this was by not explicitly specifying the version. Consequently,
        before this is added, the corresponding Zipkin collector expected to receive v1 payload.
        Hence the motivation of adding HTTP_JSON_V1 as the default is to avoid a breaking change when
        user upgrading Envoy with this change. Furthermore, we also immediately deprecate this field,
        since in Zipkin realm this v1 version is considered to be not preferable anymore.]
        """
        HTTP_JSON: ZipkinConfig._CollectorEndpointVersion.ValueType  # 1
        """Zipkin API v2, JSON over HTTP."""
        HTTP_PROTO: ZipkinConfig._CollectorEndpointVersion.ValueType  # 2
        """Zipkin API v2, protobuf over HTTP."""
        GRPC: ZipkinConfig._CollectorEndpointVersion.ValueType  # 3
        """[#not-implemented-hide:]"""

    class CollectorEndpointVersion(_CollectorEndpointVersion, metaclass=_CollectorEndpointVersionEnumTypeWrapper):
        """Available Zipkin collector endpoint versions."""

    DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE: ZipkinConfig.CollectorEndpointVersion.ValueType  # 0
    """Zipkin API v1, JSON over HTTP.
    [#comment: The default implementation of Zipkin client before this field is added was only v1
    and the way user configure this was by not explicitly specifying the version. Consequently,
    before this is added, the corresponding Zipkin collector expected to receive v1 payload.
    Hence the motivation of adding HTTP_JSON_V1 as the default is to avoid a breaking change when
    user upgrading Envoy with this change. Furthermore, we also immediately deprecate this field,
    since in Zipkin realm this v1 version is considered to be not preferable anymore.]
    """
    HTTP_JSON: ZipkinConfig.CollectorEndpointVersion.ValueType  # 1
    """Zipkin API v2, JSON over HTTP."""
    HTTP_PROTO: ZipkinConfig.CollectorEndpointVersion.ValueType  # 2
    """Zipkin API v2, protobuf over HTTP."""
    GRPC: ZipkinConfig.CollectorEndpointVersion.ValueType  # 3
    """[#not-implemented-hide:]"""

    COLLECTOR_CLUSTER_FIELD_NUMBER: builtins.int
    COLLECTOR_ENDPOINT_FIELD_NUMBER: builtins.int
    TRACE_ID_128BIT_FIELD_NUMBER: builtins.int
    SHARED_SPAN_CONTEXT_FIELD_NUMBER: builtins.int
    COLLECTOR_ENDPOINT_VERSION_FIELD_NUMBER: builtins.int
    COLLECTOR_HOSTNAME_FIELD_NUMBER: builtins.int
    SPLIT_SPANS_FOR_REQUEST_FIELD_NUMBER: builtins.int
    collector_cluster: builtins.str
    """The cluster manager cluster that hosts the Zipkin collectors."""
    collector_endpoint: builtins.str
    """The API endpoint of the Zipkin service where the spans will be sent. When
    using a standard Zipkin installation.
    """
    trace_id_128bit: builtins.bool
    """Determines whether a 128bit trace id will be used when creating a new
    trace instance. The default value is false, which will result in a 64 bit trace id being used.
    """
    collector_endpoint_version: global___ZipkinConfig.CollectorEndpointVersion.ValueType
    """Determines the selected collector endpoint version."""
    collector_hostname: builtins.str
    """Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
    that require a specific hostname. Defaults to :ref:`collector_cluster <envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster>` above.
    """
    split_spans_for_request: builtins.bool
    """If this is set to true, then Envoy will be treated as an independent hop in trace chain. A complete span pair will be created for a single
    request. Server span will be created for the downstream request and client span will be created for the related upstream request.
    This should be set to true in the following cases:

    * The Envoy Proxy is used as gateway or ingress.
    * The Envoy Proxy is used as sidecar but inbound traffic capturing or outbound traffic capturing is disabled.
    * Any case that the `start_child_span of router <envoy_v3_api_field_extensions.filters.http.router.v3.Router.start_child_span>` is set to true.

    .. attention::

      If this is set to true, then the
      :ref:`start_child_span of router <envoy_v3_api_field_extensions.filters.http.router.v3.Router.start_child_span>`
      SHOULD be set to true also to ensure the correctness of trace chain.
    """
    @property
    def shared_span_context(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Determines whether client and server spans will share the same span context.
        The default value is true.
        """

    def __init__(
        self,
        *,
        collector_cluster: builtins.str = ...,
        collector_endpoint: builtins.str = ...,
        trace_id_128bit: builtins.bool = ...,
        shared_span_context: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        collector_endpoint_version: global___ZipkinConfig.CollectorEndpointVersion.ValueType = ...,
        collector_hostname: builtins.str = ...,
        split_spans_for_request: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["shared_span_context", b"shared_span_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["collector_cluster", b"collector_cluster", "collector_endpoint", b"collector_endpoint", "collector_endpoint_version", b"collector_endpoint_version", "collector_hostname", b"collector_hostname", "shared_span_context", b"shared_span_context", "split_spans_for_request", b"split_spans_for_request", "trace_id_128bit", b"trace_id_128bit"]) -> None: ...

global___ZipkinConfig = ZipkinConfig
