"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import envoy.config.core.v3.address_pb2
import envoy.config.core.v3.base_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.struct_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class XRayConfig(google.protobuf.message.Message):
    """[#protodoc-title: AWS X-Ray Tracer Configuration]
    Configuration for AWS X-Ray tracer

    [#extension: envoy.tracers.xray]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class SegmentFields(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ORIGIN_FIELD_NUMBER: builtins.int
        AWS_FIELD_NUMBER: builtins.int
        origin: builtins.str
        """The type of AWS resource, e.g. "AWS::AppMesh::Proxy"."""
        @property
        def aws(self) -> google.protobuf.struct_pb2.Struct:
            """AWS resource metadata dictionary.
            See: `X-Ray Segment Document documentation <https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html#api-segmentdocuments-aws>`__
            """

        def __init__(
            self,
            *,
            origin: builtins.str = ...,
            aws: google.protobuf.struct_pb2.Struct | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["aws", b"aws"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["aws", b"aws", "origin", b"origin"]) -> None: ...

    DAEMON_ENDPOINT_FIELD_NUMBER: builtins.int
    SEGMENT_NAME_FIELD_NUMBER: builtins.int
    SAMPLING_RULE_MANIFEST_FIELD_NUMBER: builtins.int
    SEGMENT_FIELDS_FIELD_NUMBER: builtins.int
    segment_name: builtins.str
    """The name of the X-Ray segment."""
    @property
    def daemon_endpoint(self) -> envoy.config.core.v3.address_pb2.SocketAddress:
        """The UDP endpoint of the X-Ray Daemon where the spans will be sent.
        If this value is not set, the default value of 127.0.0.1:2000 will be used.
        """

    @property
    def sampling_rule_manifest(self) -> envoy.config.core.v3.base_pb2.DataSource:
        """The location of a local custom sampling rules JSON file.
        For an example of the sampling rules see:
        `X-Ray SDK documentation
        <https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-go-configuration.html#xray-sdk-go-configuration-sampling>`_
        """

    @property
    def segment_fields(self) -> global___XRayConfig.SegmentFields:
        """Optional custom fields to be added to each trace segment.
        see: `X-Ray Segment Document documentation
        <https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html>`__
        """

    def __init__(
        self,
        *,
        daemon_endpoint: envoy.config.core.v3.address_pb2.SocketAddress | None = ...,
        segment_name: builtins.str = ...,
        sampling_rule_manifest: envoy.config.core.v3.base_pb2.DataSource | None = ...,
        segment_fields: global___XRayConfig.SegmentFields | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["daemon_endpoint", b"daemon_endpoint", "sampling_rule_manifest", b"sampling_rule_manifest", "segment_fields", b"segment_fields"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["daemon_endpoint", b"daemon_endpoint", "sampling_rule_manifest", b"sampling_rule_manifest", "segment_fields", b"segment_fields", "segment_name", b"segment_name"]) -> None: ...

global___XRayConfig = XRayConfig
