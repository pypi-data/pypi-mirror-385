"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import envoy.config.core.v3.base_pb2
import envoy.config.core.v3.config_source_pb2
import envoy.config.route.v3.route_components_pb2
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class RouteConfiguration(google.protobuf.message.Message):
    """[#protodoc-title: HTTP route configuration]
    * Routing :ref:`architecture overview <arch_overview_http_routing>`
    * HTTP :ref:`router filter <config_http_filters_router>`

    [#next-free-field: 17]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class TypedPerFilterConfigEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.any_pb2.Any: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.any_pb2.Any | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    VIRTUAL_HOSTS_FIELD_NUMBER: builtins.int
    VHDS_FIELD_NUMBER: builtins.int
    INTERNAL_ONLY_HEADERS_FIELD_NUMBER: builtins.int
    RESPONSE_HEADERS_TO_ADD_FIELD_NUMBER: builtins.int
    RESPONSE_HEADERS_TO_REMOVE_FIELD_NUMBER: builtins.int
    REQUEST_HEADERS_TO_ADD_FIELD_NUMBER: builtins.int
    REQUEST_HEADERS_TO_REMOVE_FIELD_NUMBER: builtins.int
    MOST_SPECIFIC_HEADER_MUTATIONS_WINS_FIELD_NUMBER: builtins.int
    VALIDATE_CLUSTERS_FIELD_NUMBER: builtins.int
    MAX_DIRECT_RESPONSE_BODY_SIZE_BYTES_FIELD_NUMBER: builtins.int
    CLUSTER_SPECIFIER_PLUGINS_FIELD_NUMBER: builtins.int
    REQUEST_MIRROR_POLICIES_FIELD_NUMBER: builtins.int
    IGNORE_PORT_IN_HOST_MATCHING_FIELD_NUMBER: builtins.int
    IGNORE_PATH_PARAMETERS_IN_PATH_MATCHING_FIELD_NUMBER: builtins.int
    TYPED_PER_FILTER_CONFIG_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the route configuration. For example, it might match
    :ref:`route_config_name
    <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.Rds.route_config_name>` in
    :ref:`envoy_v3_api_msg_extensions.filters.network.http_connection_manager.v3.Rds`.
    """
    most_specific_header_mutations_wins: builtins.bool
    """By default, headers that should be added/removed are evaluated from most to least specific:

    * route level
    * virtual host level
    * connection manager level

    To allow setting overrides at the route or virtual host level, this order can be reversed
    by setting this option to true. Defaults to false.
    """
    ignore_port_in_host_matching: builtins.bool
    """By default, port in :authority header (if any) is used in host matching.
    With this option enabled, Envoy will ignore the port number in the :authority header (if any) when picking VirtualHost.
    NOTE: this option will not strip the port number (if any) contained in route config
    :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost`.domains field.
    """
    ignore_path_parameters_in_path_matching: builtins.bool
    """Ignore path-parameters in path-matching.
    Before RFC3986, URI were like(RFC1808): <scheme>://<net_loc>/<path>;<params>?<query>#<fragment>
    Envoy by default takes ":path" as "<path>;<params>".
    For users who want to only match path on the "<path>" portion, this option should be true.
    """
    @property
    def virtual_hosts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.route.v3.route_components_pb2.VirtualHost]:
        """An array of virtual hosts that make up the route table."""

    @property
    def vhds(self) -> global___Vhds:
        """An array of virtual hosts will be dynamically loaded via the VHDS API.
        Both ``virtual_hosts`` and ``vhds`` fields will be used when present. ``virtual_hosts`` can be used
        for a base routing table or for infrequently changing virtual hosts. ``vhds`` is used for
        on-demand discovery of virtual hosts. The contents of these two fields will be merged to
        generate a routing table for a given RouteConfiguration, with ``vhds`` derived configuration
        taking precedence.
        """

    @property
    def internal_only_headers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optionally specifies a list of HTTP headers that the connection manager
        will consider to be internal only. If they are found on external requests they will be cleaned
        prior to filter invocation. See :ref:`config_http_conn_man_headers_x-envoy-internal` for more
        information.
        """

    @property
    def response_headers_to_add(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.HeaderValueOption]:
        """Specifies a list of HTTP headers that should be added to each response that
        the connection manager encodes. Headers specified at this level are applied
        after headers from any enclosed :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost` or
        :ref:`envoy_v3_api_msg_config.route.v3.RouteAction`. For more information, including details on
        header value syntax, see the documentation on :ref:`custom request headers
        <config_http_conn_man_headers_custom_request_headers>`.
        """

    @property
    def response_headers_to_remove(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Specifies a list of HTTP headers that should be removed from each response
        that the connection manager encodes.
        """

    @property
    def request_headers_to_add(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.HeaderValueOption]:
        """Specifies a list of HTTP headers that should be added to each request
        routed by the HTTP connection manager. Headers specified at this level are
        applied after headers from any enclosed :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost` or
        :ref:`envoy_v3_api_msg_config.route.v3.RouteAction`. For more information, including details on
        header value syntax, see the documentation on :ref:`custom request headers
        <config_http_conn_man_headers_custom_request_headers>`.
        """

    @property
    def request_headers_to_remove(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Specifies a list of HTTP headers that should be removed from each request
        routed by the HTTP connection manager.
        """

    @property
    def validate_clusters(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """An optional boolean that specifies whether the clusters that the route
        table refers to will be validated by the cluster manager. If set to true
        and a route refers to a non-existent cluster, the route table will not
        load. If set to false and a route refers to a non-existent cluster, the
        route table will load and the router filter will return a 404 if the route
        is selected at runtime. This setting defaults to true if the route table
        is statically defined via the :ref:`route_config
        <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.route_config>`
        option. This setting default to false if the route table is loaded dynamically via the
        :ref:`rds
        <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.rds>`
        option. Users may wish to override the default behavior in certain cases (for example when
        using CDS with a static route table).
        """

    @property
    def max_direct_response_body_size_bytes(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The maximum bytes of the response :ref:`direct response body
        <envoy_v3_api_field_config.route.v3.DirectResponseAction.body>` size. If not specified the default
        is 4096.

        .. warning::

          Envoy currently holds the content of :ref:`direct response body
          <envoy_v3_api_field_config.route.v3.DirectResponseAction.body>` in memory. Be careful setting
          this to be larger than the default 4KB, since the allocated memory for direct response body
          is not subject to data plane buffering controls.
        """

    @property
    def cluster_specifier_plugins(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.route.v3.route_components_pb2.ClusterSpecifierPlugin]:
        """A list of plugins and their configurations which may be used by a
        :ref:`cluster specifier plugin name <envoy_v3_api_field_config.route.v3.RouteAction.cluster_specifier_plugin>`
        within the route. All ``extension.name`` fields in this list must be unique.
        """

    @property
    def request_mirror_policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.route.v3.route_components_pb2.RouteAction.RequestMirrorPolicy]:
        """Specify a set of default request mirroring policies which apply to all routes under its virtual hosts.
        Note that policies are not merged, the most specific non-empty one becomes the mirror policies.
        """

    @property
    def typed_per_filter_config(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.any_pb2.Any]:
        """The typed_per_filter_config field can be used to provide RouteConfiguration level per filter config.
        The key should match the :ref:`filter config name
        <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpFilter.name>`.
        The canonical filter name (e.g., ``envoy.filters.http.buffer`` for the HTTP buffer filter) can also
        be used for the backwards compatibility. If there is no entry referred by the filter config name, the
        entry referred by the canonical filter name will be provided to the filters as fallback.

        Use of this field is filter specific;
        see the :ref:`HTTP filter documentation <config_http_filters>` for if and how it is utilized.
        [#comment: An entry's value may be wrapped in a
        :ref:`FilterConfig<envoy_v3_api_msg_config.route.v3.FilterConfig>`
        message to specify additional options.]
        """

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        virtual_hosts: collections.abc.Iterable[envoy.config.route.v3.route_components_pb2.VirtualHost] | None = ...,
        vhds: global___Vhds | None = ...,
        internal_only_headers: collections.abc.Iterable[builtins.str] | None = ...,
        response_headers_to_add: collections.abc.Iterable[envoy.config.core.v3.base_pb2.HeaderValueOption] | None = ...,
        response_headers_to_remove: collections.abc.Iterable[builtins.str] | None = ...,
        request_headers_to_add: collections.abc.Iterable[envoy.config.core.v3.base_pb2.HeaderValueOption] | None = ...,
        request_headers_to_remove: collections.abc.Iterable[builtins.str] | None = ...,
        most_specific_header_mutations_wins: builtins.bool = ...,
        validate_clusters: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        max_direct_response_body_size_bytes: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        cluster_specifier_plugins: collections.abc.Iterable[envoy.config.route.v3.route_components_pb2.ClusterSpecifierPlugin] | None = ...,
        request_mirror_policies: collections.abc.Iterable[envoy.config.route.v3.route_components_pb2.RouteAction.RequestMirrorPolicy] | None = ...,
        ignore_port_in_host_matching: builtins.bool = ...,
        ignore_path_parameters_in_path_matching: builtins.bool = ...,
        typed_per_filter_config: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["max_direct_response_body_size_bytes", b"max_direct_response_body_size_bytes", "validate_clusters", b"validate_clusters", "vhds", b"vhds"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster_specifier_plugins", b"cluster_specifier_plugins", "ignore_path_parameters_in_path_matching", b"ignore_path_parameters_in_path_matching", "ignore_port_in_host_matching", b"ignore_port_in_host_matching", "internal_only_headers", b"internal_only_headers", "max_direct_response_body_size_bytes", b"max_direct_response_body_size_bytes", "most_specific_header_mutations_wins", b"most_specific_header_mutations_wins", "name", b"name", "request_headers_to_add", b"request_headers_to_add", "request_headers_to_remove", b"request_headers_to_remove", "request_mirror_policies", b"request_mirror_policies", "response_headers_to_add", b"response_headers_to_add", "response_headers_to_remove", b"response_headers_to_remove", "typed_per_filter_config", b"typed_per_filter_config", "validate_clusters", b"validate_clusters", "vhds", b"vhds", "virtual_hosts", b"virtual_hosts"]) -> None: ...

global___RouteConfiguration = RouteConfiguration

@typing.final
class Vhds(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_SOURCE_FIELD_NUMBER: builtins.int
    @property
    def config_source(self) -> envoy.config.core.v3.config_source_pb2.ConfigSource:
        """Configuration source specifier for VHDS."""

    def __init__(
        self,
        *,
        config_source: envoy.config.core.v3.config_source_pb2.ConfigSource | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config_source", b"config_source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["config_source", b"config_source"]) -> None: ...

global___Vhds = Vhds
