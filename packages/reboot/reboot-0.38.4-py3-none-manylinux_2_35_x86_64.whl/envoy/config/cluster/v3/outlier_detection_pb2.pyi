"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class OutlierDetection(google.protobuf.message.Message):
    """[#protodoc-title: Outlier detection]

    See the :ref:`architecture overview <arch_overview_outlier_detection>` for
    more information on outlier detection.
    [#next-free-field: 23]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONSECUTIVE_5XX_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    BASE_EJECTION_TIME_FIELD_NUMBER: builtins.int
    MAX_EJECTION_PERCENT_FIELD_NUMBER: builtins.int
    ENFORCING_CONSECUTIVE_5XX_FIELD_NUMBER: builtins.int
    ENFORCING_SUCCESS_RATE_FIELD_NUMBER: builtins.int
    SUCCESS_RATE_MINIMUM_HOSTS_FIELD_NUMBER: builtins.int
    SUCCESS_RATE_REQUEST_VOLUME_FIELD_NUMBER: builtins.int
    SUCCESS_RATE_STDEV_FACTOR_FIELD_NUMBER: builtins.int
    CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER: builtins.int
    ENFORCING_CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER: builtins.int
    SPLIT_EXTERNAL_LOCAL_ORIGIN_ERRORS_FIELD_NUMBER: builtins.int
    CONSECUTIVE_LOCAL_ORIGIN_FAILURE_FIELD_NUMBER: builtins.int
    ENFORCING_CONSECUTIVE_LOCAL_ORIGIN_FAILURE_FIELD_NUMBER: builtins.int
    ENFORCING_LOCAL_ORIGIN_SUCCESS_RATE_FIELD_NUMBER: builtins.int
    FAILURE_PERCENTAGE_THRESHOLD_FIELD_NUMBER: builtins.int
    ENFORCING_FAILURE_PERCENTAGE_FIELD_NUMBER: builtins.int
    ENFORCING_FAILURE_PERCENTAGE_LOCAL_ORIGIN_FIELD_NUMBER: builtins.int
    FAILURE_PERCENTAGE_MINIMUM_HOSTS_FIELD_NUMBER: builtins.int
    FAILURE_PERCENTAGE_REQUEST_VOLUME_FIELD_NUMBER: builtins.int
    MAX_EJECTION_TIME_FIELD_NUMBER: builtins.int
    MAX_EJECTION_TIME_JITTER_FIELD_NUMBER: builtins.int
    split_external_local_origin_errors: builtins.bool
    """Determines whether to distinguish local origin failures from external errors. If set to true
    the following configuration parameters are taken into account:
    :ref:`consecutive_local_origin_failure<envoy_v3_api_field_config.cluster.v3.OutlierDetection.consecutive_local_origin_failure>`,
    :ref:`enforcing_consecutive_local_origin_failure<envoy_v3_api_field_config.cluster.v3.OutlierDetection.enforcing_consecutive_local_origin_failure>`
    and
    :ref:`enforcing_local_origin_success_rate<envoy_v3_api_field_config.cluster.v3.OutlierDetection.enforcing_local_origin_success_rate>`.
    Defaults to false.
    """
    @property
    def consecutive_5xx(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The number of consecutive server-side error responses (for HTTP traffic,
        5xx responses; for TCP traffic, connection failures; for Redis, failure to
        respond PONG; etc.) before a consecutive 5xx ejection occurs. Defaults to 5.
        """

    @property
    def interval(self) -> google.protobuf.duration_pb2.Duration:
        """The time interval between ejection analysis sweeps. This can result in
        both new ejections as well as hosts being returned to service. Defaults
        to 10000ms or 10s.
        """

    @property
    def base_ejection_time(self) -> google.protobuf.duration_pb2.Duration:
        """The base time that a host is ejected for. The real time is equal to the
        base time multiplied by the number of times the host has been ejected and is
        capped by :ref:`max_ejection_time<envoy_v3_api_field_config.cluster.v3.OutlierDetection.max_ejection_time>`.
        Defaults to 30000ms or 30s.
        """

    @property
    def max_ejection_percent(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The maximum % of an upstream cluster that can be ejected due to outlier
        detection. Defaults to 10% but will eject at least one host regardless of the value.
        """

    @property
    def enforcing_consecutive_5xx(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status
        is detected through consecutive 5xx. This setting can be used to disable
        ejection or to ramp it up slowly. Defaults to 100.
        """

    @property
    def enforcing_success_rate(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status
        is detected through success rate statistics. This setting can be used to
        disable ejection or to ramp it up slowly. Defaults to 100.
        """

    @property
    def success_rate_minimum_hosts(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The number of hosts in a cluster that must have enough request volume to
        detect success rate outliers. If the number of hosts is less than this
        setting, outlier detection via success rate statistics is not performed
        for any host in the cluster. Defaults to 5.
        """

    @property
    def success_rate_request_volume(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The minimum number of total requests that must be collected in one
        interval (as defined by the interval duration above) to include this host
        in success rate based outlier detection. If the volume is lower than this
        setting, outlier detection via success rate statistics is not performed
        for that host. Defaults to 100.
        """

    @property
    def success_rate_stdev_factor(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """This factor is used to determine the ejection threshold for success rate
        outlier ejection. The ejection threshold is the difference between the
        mean success rate, and the product of this factor and the standard
        deviation of the mean success rate: mean - (stdev *
        success_rate_stdev_factor). This factor is divided by a thousand to get a
        double. That is, if the desired factor is 1.9, the runtime value should
        be 1900. Defaults to 1900.
        """

    @property
    def consecutive_gateway_failure(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The number of consecutive gateway failures (502, 503, 504 status codes)
        before a consecutive gateway failure ejection occurs. Defaults to 5.
        """

    @property
    def enforcing_consecutive_gateway_failure(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status
        is detected through consecutive gateway failures. This setting can be
        used to disable ejection or to ramp it up slowly. Defaults to 0.
        """

    @property
    def consecutive_local_origin_failure(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The number of consecutive locally originated failures before ejection
        occurs. Defaults to 5. Parameter takes effect only when
        :ref:`split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
        is set to true.
        """

    @property
    def enforcing_consecutive_local_origin_failure(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status
        is detected through consecutive locally originated failures. This setting can be
        used to disable ejection or to ramp it up slowly. Defaults to 100.
        Parameter takes effect only when
        :ref:`split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
        is set to true.
        """

    @property
    def enforcing_local_origin_success_rate(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status
        is detected through success rate statistics for locally originated errors.
        This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
        Parameter takes effect only when
        :ref:`split_external_local_origin_errors<envoy_v3_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors>`
        is set to true.
        """

    @property
    def failure_percentage_threshold(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The failure percentage to use when determining failure percentage-based outlier detection. If
        the failure percentage of a given host is greater than or equal to this value, it will be
        ejected. Defaults to 85.
        """

    @property
    def enforcing_failure_percentage(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status is detected through
        failure percentage statistics. This setting can be used to disable ejection or to ramp it up
        slowly. Defaults to 0.

        [#next-major-version: setting this without setting failure_percentage_threshold should be
        invalid in v4.]
        """

    @property
    def enforcing_failure_percentage_local_origin(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The % chance that a host will be actually ejected when an outlier status is detected through
        local-origin failure percentage statistics. This setting can be used to disable ejection or to
        ramp it up slowly. Defaults to 0.
        """

    @property
    def failure_percentage_minimum_hosts(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
        If the total number of hosts in the cluster is less than this value, failure percentage-based
        ejection will not be performed. Defaults to 5.
        """

    @property
    def failure_percentage_request_volume(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """The minimum number of total requests that must be collected in one interval (as defined by the
        interval duration above) to perform failure percentage-based ejection for this host. If the
        volume is lower than this setting, failure percentage-based ejection will not be performed for
        this host. Defaults to 50.
        """

    @property
    def max_ejection_time(self) -> google.protobuf.duration_pb2.Duration:
        """The maximum time that a host is ejected for. See :ref:`base_ejection_time<envoy_v3_api_field_config.cluster.v3.OutlierDetection.base_ejection_time>`
        for more information. If not specified, the default value (300000ms or 300s) or
        :ref:`base_ejection_time<envoy_v3_api_field_config.cluster.v3.OutlierDetection.base_ejection_time>` value is applied, whatever is larger.
        """

    @property
    def max_ejection_time_jitter(self) -> google.protobuf.duration_pb2.Duration:
        """The maximum amount of jitter to add to the ejection time, in order to prevent
        a 'thundering herd' effect where all proxies try to reconnect to host at the same time.
        See :ref:`max_ejection_time_jitter<envoy_v3_api_field_config.cluster.v3.OutlierDetection.base_ejection_time>`
        Defaults to 0s.
        """

    def __init__(
        self,
        *,
        consecutive_5xx: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        interval: google.protobuf.duration_pb2.Duration | None = ...,
        base_ejection_time: google.protobuf.duration_pb2.Duration | None = ...,
        max_ejection_percent: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_consecutive_5xx: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_success_rate: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        success_rate_minimum_hosts: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        success_rate_request_volume: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        success_rate_stdev_factor: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        consecutive_gateway_failure: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_consecutive_gateway_failure: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        split_external_local_origin_errors: builtins.bool = ...,
        consecutive_local_origin_failure: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_consecutive_local_origin_failure: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_local_origin_success_rate: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        failure_percentage_threshold: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_failure_percentage: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        enforcing_failure_percentage_local_origin: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        failure_percentage_minimum_hosts: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        failure_percentage_request_volume: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
        max_ejection_time: google.protobuf.duration_pb2.Duration | None = ...,
        max_ejection_time_jitter: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["base_ejection_time", b"base_ejection_time", "consecutive_5xx", b"consecutive_5xx", "consecutive_gateway_failure", b"consecutive_gateway_failure", "consecutive_local_origin_failure", b"consecutive_local_origin_failure", "enforcing_consecutive_5xx", b"enforcing_consecutive_5xx", "enforcing_consecutive_gateway_failure", b"enforcing_consecutive_gateway_failure", "enforcing_consecutive_local_origin_failure", b"enforcing_consecutive_local_origin_failure", "enforcing_failure_percentage", b"enforcing_failure_percentage", "enforcing_failure_percentage_local_origin", b"enforcing_failure_percentage_local_origin", "enforcing_local_origin_success_rate", b"enforcing_local_origin_success_rate", "enforcing_success_rate", b"enforcing_success_rate", "failure_percentage_minimum_hosts", b"failure_percentage_minimum_hosts", "failure_percentage_request_volume", b"failure_percentage_request_volume", "failure_percentage_threshold", b"failure_percentage_threshold", "interval", b"interval", "max_ejection_percent", b"max_ejection_percent", "max_ejection_time", b"max_ejection_time", "max_ejection_time_jitter", b"max_ejection_time_jitter", "success_rate_minimum_hosts", b"success_rate_minimum_hosts", "success_rate_request_volume", b"success_rate_request_volume", "success_rate_stdev_factor", b"success_rate_stdev_factor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["base_ejection_time", b"base_ejection_time", "consecutive_5xx", b"consecutive_5xx", "consecutive_gateway_failure", b"consecutive_gateway_failure", "consecutive_local_origin_failure", b"consecutive_local_origin_failure", "enforcing_consecutive_5xx", b"enforcing_consecutive_5xx", "enforcing_consecutive_gateway_failure", b"enforcing_consecutive_gateway_failure", "enforcing_consecutive_local_origin_failure", b"enforcing_consecutive_local_origin_failure", "enforcing_failure_percentage", b"enforcing_failure_percentage", "enforcing_failure_percentage_local_origin", b"enforcing_failure_percentage_local_origin", "enforcing_local_origin_success_rate", b"enforcing_local_origin_success_rate", "enforcing_success_rate", b"enforcing_success_rate", "failure_percentage_minimum_hosts", b"failure_percentage_minimum_hosts", "failure_percentage_request_volume", b"failure_percentage_request_volume", "failure_percentage_threshold", b"failure_percentage_threshold", "interval", b"interval", "max_ejection_percent", b"max_ejection_percent", "max_ejection_time", b"max_ejection_time", "max_ejection_time_jitter", b"max_ejection_time_jitter", "split_external_local_origin_errors", b"split_external_local_origin_errors", "success_rate_minimum_hosts", b"success_rate_minimum_hosts", "success_rate_request_volume", b"success_rate_request_volume", "success_rate_stdev_factor", b"success_rate_stdev_factor"]) -> None: ...

global___OutlierDetection = OutlierDetection
