"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import envoy.config.core.v3.base_pb2
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.empty_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GrpcService(google.protobuf.message.Message):
    """[#protodoc-title: gRPC services]

    gRPC service configuration. This is used by :ref:`ApiConfigSource
    <envoy_v3_api_msg_config.core.v3.ApiConfigSource>` and filter configurations.
    [#next-free-field: 6]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EnvoyGrpc(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CLUSTER_NAME_FIELD_NUMBER: builtins.int
        AUTHORITY_FIELD_NUMBER: builtins.int
        cluster_name: builtins.str
        """The name of the upstream gRPC cluster. SSL credentials will be supplied
        in the :ref:`Cluster <envoy_v3_api_msg_config.cluster.v3.Cluster>` :ref:`transport_socket
        <envoy_v3_api_field_config.cluster.v3.Cluster.transport_socket>`.
        """
        authority: builtins.str
        """The ``:authority`` header in the grpc request. If this field is not set, the authority header value will be ``cluster_name``.
        Note that this authority does not override the SNI. The SNI is provided by the transport socket of the cluster.
        """
        def __init__(
            self,
            *,
            cluster_name: builtins.str = ...,
            authority: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["authority", b"authority", "cluster_name", b"cluster_name"]) -> None: ...

    @typing.final
    class GoogleGrpc(google.protobuf.message.Message):
        """[#next-free-field: 9]"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class SslCredentials(google.protobuf.message.Message):
            """See https://grpc.io/grpc/cpp/structgrpc_1_1_ssl_credentials_options.html."""

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            ROOT_CERTS_FIELD_NUMBER: builtins.int
            PRIVATE_KEY_FIELD_NUMBER: builtins.int
            CERT_CHAIN_FIELD_NUMBER: builtins.int
            @property
            def root_certs(self) -> envoy.config.core.v3.base_pb2.DataSource:
                """PEM encoded server root certificates."""

            @property
            def private_key(self) -> envoy.config.core.v3.base_pb2.DataSource:
                """PEM encoded client private key."""

            @property
            def cert_chain(self) -> envoy.config.core.v3.base_pb2.DataSource:
                """PEM encoded client certificate chain."""

            def __init__(
                self,
                *,
                root_certs: envoy.config.core.v3.base_pb2.DataSource | None = ...,
                private_key: envoy.config.core.v3.base_pb2.DataSource | None = ...,
                cert_chain: envoy.config.core.v3.base_pb2.DataSource | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["cert_chain", b"cert_chain", "private_key", b"private_key", "root_certs", b"root_certs"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["cert_chain", b"cert_chain", "private_key", b"private_key", "root_certs", b"root_certs"]) -> None: ...

        @typing.final
        class GoogleLocalCredentials(google.protobuf.message.Message):
            """Local channel credentials. Only UDS is supported for now.
            See https://github.com/grpc/grpc/pull/15909.
            """

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            def __init__(
                self,
            ) -> None: ...

        @typing.final
        class ChannelCredentials(google.protobuf.message.Message):
            """See https://grpc.io/docs/guides/auth.html#credential-types to understand Channel and Call
            credential types.
            """

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            SSL_CREDENTIALS_FIELD_NUMBER: builtins.int
            GOOGLE_DEFAULT_FIELD_NUMBER: builtins.int
            LOCAL_CREDENTIALS_FIELD_NUMBER: builtins.int
            @property
            def ssl_credentials(self) -> global___GrpcService.GoogleGrpc.SslCredentials: ...
            @property
            def google_default(self) -> google.protobuf.empty_pb2.Empty:
                """https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61"""

            @property
            def local_credentials(self) -> global___GrpcService.GoogleGrpc.GoogleLocalCredentials: ...
            def __init__(
                self,
                *,
                ssl_credentials: global___GrpcService.GoogleGrpc.SslCredentials | None = ...,
                google_default: google.protobuf.empty_pb2.Empty | None = ...,
                local_credentials: global___GrpcService.GoogleGrpc.GoogleLocalCredentials | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["credential_specifier", b"credential_specifier", "google_default", b"google_default", "local_credentials", b"local_credentials", "ssl_credentials", b"ssl_credentials"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["credential_specifier", b"credential_specifier", "google_default", b"google_default", "local_credentials", b"local_credentials", "ssl_credentials", b"ssl_credentials"]) -> None: ...
            def WhichOneof(self, oneof_group: typing.Literal["credential_specifier", b"credential_specifier"]) -> typing.Literal["ssl_credentials", "google_default", "local_credentials"] | None: ...

        @typing.final
        class CallCredentials(google.protobuf.message.Message):
            """[#next-free-field: 8]"""

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            @typing.final
            class ServiceAccountJWTAccessCredentials(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                JSON_KEY_FIELD_NUMBER: builtins.int
                TOKEN_LIFETIME_SECONDS_FIELD_NUMBER: builtins.int
                json_key: builtins.str
                token_lifetime_seconds: builtins.int
                def __init__(
                    self,
                    *,
                    json_key: builtins.str = ...,
                    token_lifetime_seconds: builtins.int = ...,
                ) -> None: ...
                def ClearField(self, field_name: typing.Literal["json_key", b"json_key", "token_lifetime_seconds", b"token_lifetime_seconds"]) -> None: ...

            @typing.final
            class GoogleIAMCredentials(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
                AUTHORITY_SELECTOR_FIELD_NUMBER: builtins.int
                authorization_token: builtins.str
                authority_selector: builtins.str
                def __init__(
                    self,
                    *,
                    authorization_token: builtins.str = ...,
                    authority_selector: builtins.str = ...,
                ) -> None: ...
                def ClearField(self, field_name: typing.Literal["authority_selector", b"authority_selector", "authorization_token", b"authorization_token"]) -> None: ...

            @typing.final
            class MetadataCredentialsFromPlugin(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                NAME_FIELD_NUMBER: builtins.int
                TYPED_CONFIG_FIELD_NUMBER: builtins.int
                name: builtins.str
                @property
                def typed_config(self) -> google.protobuf.any_pb2.Any: ...
                def __init__(
                    self,
                    *,
                    name: builtins.str = ...,
                    typed_config: google.protobuf.any_pb2.Any | None = ...,
                ) -> None: ...
                def HasField(self, field_name: typing.Literal["config_type", b"config_type", "typed_config", b"typed_config"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing.Literal["config_type", b"config_type", "name", b"name", "typed_config", b"typed_config"]) -> None: ...
                def WhichOneof(self, oneof_group: typing.Literal["config_type", b"config_type"]) -> typing.Literal["typed_config"] | None: ...

            @typing.final
            class StsService(google.protobuf.message.Message):
                """Security token service configuration that allows Google gRPC to
                fetch security token from an OAuth 2.0 authorization server.
                See https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16 and
                https://github.com/grpc/grpc/pull/19587.
                [#next-free-field: 10]
                """

                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                TOKEN_EXCHANGE_SERVICE_URI_FIELD_NUMBER: builtins.int
                RESOURCE_FIELD_NUMBER: builtins.int
                AUDIENCE_FIELD_NUMBER: builtins.int
                SCOPE_FIELD_NUMBER: builtins.int
                REQUESTED_TOKEN_TYPE_FIELD_NUMBER: builtins.int
                SUBJECT_TOKEN_PATH_FIELD_NUMBER: builtins.int
                SUBJECT_TOKEN_TYPE_FIELD_NUMBER: builtins.int
                ACTOR_TOKEN_PATH_FIELD_NUMBER: builtins.int
                ACTOR_TOKEN_TYPE_FIELD_NUMBER: builtins.int
                token_exchange_service_uri: builtins.str
                """URI of the token exchange service that handles token exchange requests.
                [#comment:TODO(asraa): Add URI validation when implemented. Tracked by
                https://github.com/bufbuild/protoc-gen-validate/issues/303]
                """
                resource: builtins.str
                """Location of the target service or resource where the client
                intends to use the requested security token.
                """
                audience: builtins.str
                """Logical name of the target service where the client intends to
                use the requested security token.
                """
                scope: builtins.str
                """The desired scope of the requested security token in the
                context of the service or resource where the token will be used.
                """
                requested_token_type: builtins.str
                """Type of the requested security token."""
                subject_token_path: builtins.str
                """The path of subject token, a security token that represents the
                identity of the party on behalf of whom the request is being made.
                """
                subject_token_type: builtins.str
                """Type of the subject token."""
                actor_token_path: builtins.str
                """The path of actor token, a security token that represents the identity
                of the acting party. The acting party is authorized to use the
                requested security token and act on behalf of the subject.
                """
                actor_token_type: builtins.str
                """Type of the actor token."""
                def __init__(
                    self,
                    *,
                    token_exchange_service_uri: builtins.str = ...,
                    resource: builtins.str = ...,
                    audience: builtins.str = ...,
                    scope: builtins.str = ...,
                    requested_token_type: builtins.str = ...,
                    subject_token_path: builtins.str = ...,
                    subject_token_type: builtins.str = ...,
                    actor_token_path: builtins.str = ...,
                    actor_token_type: builtins.str = ...,
                ) -> None: ...
                def ClearField(self, field_name: typing.Literal["actor_token_path", b"actor_token_path", "actor_token_type", b"actor_token_type", "audience", b"audience", "requested_token_type", b"requested_token_type", "resource", b"resource", "scope", b"scope", "subject_token_path", b"subject_token_path", "subject_token_type", b"subject_token_type", "token_exchange_service_uri", b"token_exchange_service_uri"]) -> None: ...

            ACCESS_TOKEN_FIELD_NUMBER: builtins.int
            GOOGLE_COMPUTE_ENGINE_FIELD_NUMBER: builtins.int
            GOOGLE_REFRESH_TOKEN_FIELD_NUMBER: builtins.int
            SERVICE_ACCOUNT_JWT_ACCESS_FIELD_NUMBER: builtins.int
            GOOGLE_IAM_FIELD_NUMBER: builtins.int
            FROM_PLUGIN_FIELD_NUMBER: builtins.int
            STS_SERVICE_FIELD_NUMBER: builtins.int
            access_token: builtins.str
            """Access token credentials.
            https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d.
            """
            google_refresh_token: builtins.str
            """Google refresh token credentials.
            https://grpc.io/grpc/cpp/namespacegrpc.html#a96901c997b91bc6513b08491e0dca37c.
            """
            @property
            def google_compute_engine(self) -> google.protobuf.empty_pb2.Empty:
                """Google Compute Engine credentials.
                https://grpc.io/grpc/cpp/namespacegrpc.html#a6beb3ac70ff94bd2ebbd89b8f21d1f61
                """

            @property
            def service_account_jwt_access(self) -> global___GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials:
                """Service Account JWT Access credentials.
                https://grpc.io/grpc/cpp/namespacegrpc.html#a92a9f959d6102461f66ee973d8e9d3aa.
                """

            @property
            def google_iam(self) -> global___GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials:
                """Google IAM credentials.
                https://grpc.io/grpc/cpp/namespacegrpc.html#a9fc1fc101b41e680d47028166e76f9d0.
                """

            @property
            def from_plugin(self) -> global___GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin:
                """Custom authenticator credentials.
                https://grpc.io/grpc/cpp/namespacegrpc.html#a823c6a4b19ffc71fb33e90154ee2ad07.
                https://grpc.io/docs/guides/auth.html#extending-grpc-to-support-other-authentication-mechanisms.
                """

            @property
            def sts_service(self) -> global___GrpcService.GoogleGrpc.CallCredentials.StsService:
                """Custom security token service which implements OAuth 2.0 token exchange.
                https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16
                See https://github.com/grpc/grpc/pull/19587.
                """

            def __init__(
                self,
                *,
                access_token: builtins.str = ...,
                google_compute_engine: google.protobuf.empty_pb2.Empty | None = ...,
                google_refresh_token: builtins.str = ...,
                service_account_jwt_access: global___GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials | None = ...,
                google_iam: global___GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials | None = ...,
                from_plugin: global___GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin | None = ...,
                sts_service: global___GrpcService.GoogleGrpc.CallCredentials.StsService | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["access_token", b"access_token", "credential_specifier", b"credential_specifier", "from_plugin", b"from_plugin", "google_compute_engine", b"google_compute_engine", "google_iam", b"google_iam", "google_refresh_token", b"google_refresh_token", "service_account_jwt_access", b"service_account_jwt_access", "sts_service", b"sts_service"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["access_token", b"access_token", "credential_specifier", b"credential_specifier", "from_plugin", b"from_plugin", "google_compute_engine", b"google_compute_engine", "google_iam", b"google_iam", "google_refresh_token", b"google_refresh_token", "service_account_jwt_access", b"service_account_jwt_access", "sts_service", b"sts_service"]) -> None: ...
            def WhichOneof(self, oneof_group: typing.Literal["credential_specifier", b"credential_specifier"]) -> typing.Literal["access_token", "google_compute_engine", "google_refresh_token", "service_account_jwt_access", "google_iam", "from_plugin", "sts_service"] | None: ...

        @typing.final
        class ChannelArgs(google.protobuf.message.Message):
            """Channel arguments."""

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            @typing.final
            class Value(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                STRING_VALUE_FIELD_NUMBER: builtins.int
                INT_VALUE_FIELD_NUMBER: builtins.int
                string_value: builtins.str
                int_value: builtins.int
                def __init__(
                    self,
                    *,
                    string_value: builtins.str = ...,
                    int_value: builtins.int = ...,
                ) -> None: ...
                def HasField(self, field_name: typing.Literal["int_value", b"int_value", "string_value", b"string_value", "value_specifier", b"value_specifier"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing.Literal["int_value", b"int_value", "string_value", b"string_value", "value_specifier", b"value_specifier"]) -> None: ...
                def WhichOneof(self, oneof_group: typing.Literal["value_specifier", b"value_specifier"]) -> typing.Literal["string_value", "int_value"] | None: ...

            @typing.final
            class ArgsEntry(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor

                KEY_FIELD_NUMBER: builtins.int
                VALUE_FIELD_NUMBER: builtins.int
                key: builtins.str
                @property
                def value(self) -> global___GrpcService.GoogleGrpc.ChannelArgs.Value: ...
                def __init__(
                    self,
                    *,
                    key: builtins.str = ...,
                    value: global___GrpcService.GoogleGrpc.ChannelArgs.Value | None = ...,
                ) -> None: ...
                def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

            ARGS_FIELD_NUMBER: builtins.int
            @property
            def args(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___GrpcService.GoogleGrpc.ChannelArgs.Value]:
                """See grpc_types.h GRPC_ARG #defines for keys that work here."""

            def __init__(
                self,
                *,
                args: collections.abc.Mapping[builtins.str, global___GrpcService.GoogleGrpc.ChannelArgs.Value] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing.Literal["args", b"args"]) -> None: ...

        TARGET_URI_FIELD_NUMBER: builtins.int
        CHANNEL_CREDENTIALS_FIELD_NUMBER: builtins.int
        CALL_CREDENTIALS_FIELD_NUMBER: builtins.int
        STAT_PREFIX_FIELD_NUMBER: builtins.int
        CREDENTIALS_FACTORY_NAME_FIELD_NUMBER: builtins.int
        CONFIG_FIELD_NUMBER: builtins.int
        PER_STREAM_BUFFER_LIMIT_BYTES_FIELD_NUMBER: builtins.int
        CHANNEL_ARGS_FIELD_NUMBER: builtins.int
        target_uri: builtins.str
        """The target URI when using the `Google C++ gRPC client
        <https://github.com/grpc/grpc>`_. SSL credentials will be supplied in
        :ref:`channel_credentials <envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.channel_credentials>`.
        """
        stat_prefix: builtins.str
        """The human readable prefix to use when emitting statistics for the gRPC
        service.

        .. csv-table::
           :header: Name, Type, Description
           :widths: 1, 1, 2

           streams_total, Counter, Total number of streams opened
           streams_closed_<gRPC status code>, Counter, Total streams closed with <gRPC status code>
        """
        credentials_factory_name: builtins.str
        """The name of the Google gRPC credentials factory to use. This must have been registered with
        Envoy. If this is empty, a default credentials factory will be used that sets up channel
        credentials based on other configuration parameters.
        """
        @property
        def channel_credentials(self) -> global___GrpcService.GoogleGrpc.ChannelCredentials: ...
        @property
        def call_credentials(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GrpcService.GoogleGrpc.CallCredentials]:
            """A set of call credentials that can be composed with `channel credentials
            <https://grpc.io/docs/guides/auth.html#credential-types>`_.
            """

        @property
        def config(self) -> google.protobuf.struct_pb2.Struct:
            """Additional configuration for site-specific customizations of the Google
            gRPC library.
            """

        @property
        def per_stream_buffer_limit_bytes(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """How many bytes each stream can buffer internally.
            If not set an implementation defined default is applied (1MiB).
            """

        @property
        def channel_args(self) -> global___GrpcService.GoogleGrpc.ChannelArgs:
            """Custom channels args."""

        def __init__(
            self,
            *,
            target_uri: builtins.str = ...,
            channel_credentials: global___GrpcService.GoogleGrpc.ChannelCredentials | None = ...,
            call_credentials: collections.abc.Iterable[global___GrpcService.GoogleGrpc.CallCredentials] | None = ...,
            stat_prefix: builtins.str = ...,
            credentials_factory_name: builtins.str = ...,
            config: google.protobuf.struct_pb2.Struct | None = ...,
            per_stream_buffer_limit_bytes: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
            channel_args: global___GrpcService.GoogleGrpc.ChannelArgs | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["channel_args", b"channel_args", "channel_credentials", b"channel_credentials", "config", b"config", "per_stream_buffer_limit_bytes", b"per_stream_buffer_limit_bytes"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["call_credentials", b"call_credentials", "channel_args", b"channel_args", "channel_credentials", b"channel_credentials", "config", b"config", "credentials_factory_name", b"credentials_factory_name", "per_stream_buffer_limit_bytes", b"per_stream_buffer_limit_bytes", "stat_prefix", b"stat_prefix", "target_uri", b"target_uri"]) -> None: ...

    ENVOY_GRPC_FIELD_NUMBER: builtins.int
    GOOGLE_GRPC_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    INITIAL_METADATA_FIELD_NUMBER: builtins.int
    @property
    def envoy_grpc(self) -> global___GrpcService.EnvoyGrpc:
        """Envoy's in-built gRPC client.
        See the :ref:`gRPC services overview <arch_overview_grpc_services>`
        documentation for discussion on gRPC client selection.
        """

    @property
    def google_grpc(self) -> global___GrpcService.GoogleGrpc:
        """`Google C++ gRPC client <https://github.com/grpc/grpc>`_
        See the :ref:`gRPC services overview <arch_overview_grpc_services>`
        documentation for discussion on gRPC client selection.
        """

    @property
    def timeout(self) -> google.protobuf.duration_pb2.Duration:
        """The timeout for the gRPC request. This is the timeout for a specific
        request.
        """

    @property
    def initial_metadata(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.HeaderValue]:
        """Additional metadata to include in streams initiated to the GrpcService. This can be used for
        scenarios in which additional ad hoc authorization headers (e.g. ``x-foo-bar: baz-key``) are to
        be injected. For more information, including details on header value syntax, see the
        documentation on :ref:`custom request headers
        <config_http_conn_man_headers_custom_request_headers>`.
        """

    def __init__(
        self,
        *,
        envoy_grpc: global___GrpcService.EnvoyGrpc | None = ...,
        google_grpc: global___GrpcService.GoogleGrpc | None = ...,
        timeout: google.protobuf.duration_pb2.Duration | None = ...,
        initial_metadata: collections.abc.Iterable[envoy.config.core.v3.base_pb2.HeaderValue] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["envoy_grpc", b"envoy_grpc", "google_grpc", b"google_grpc", "target_specifier", b"target_specifier", "timeout", b"timeout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["envoy_grpc", b"envoy_grpc", "google_grpc", b"google_grpc", "initial_metadata", b"initial_metadata", "target_specifier", b"target_specifier", "timeout", b"timeout"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["target_specifier", b"target_specifier"]) -> typing.Literal["envoy_grpc", "google_grpc"] | None: ...

global___GrpcService = GrpcService
