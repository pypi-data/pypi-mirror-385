"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TypedExtensionConfig(google.protobuf.message.Message):
    """[#protodoc-title: Extension configuration]

    Message type for extension configuration.
    [#next-major-version: revisit all existing typed_config that doesn't use this wrapper.].
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPED_CONFIG_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of an extension. This is not used to select the extension, instead
    it serves the role of an opaque identifier.
    """
    @property
    def typed_config(self) -> google.protobuf.any_pb2.Any:
        """The typed config for the extension. The type URL will be used to identify
        the extension. In the case that the type URL is ``xds.type.v3.TypedStruct``
        (or, for historical reasons, ``udpa.type.v1.TypedStruct``), the inner type
        URL of ``TypedStruct`` will be utilized. See the
        :ref:`extension configuration overview
        <config_overview_extension_configuration>` for further details.
        """

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        typed_config: google.protobuf.any_pb2.Any | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["typed_config", b"typed_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "typed_config", b"typed_config"]) -> None: ...

global___TypedExtensionConfig = TypedExtensionConfig
