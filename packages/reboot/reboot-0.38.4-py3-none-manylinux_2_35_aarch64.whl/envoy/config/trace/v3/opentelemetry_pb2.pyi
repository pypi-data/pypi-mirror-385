"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import envoy.config.core.v3.grpc_service_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class OpenTelemetryConfig(google.protobuf.message.Message):
    """[#protodoc-title: OpenTelemetry tracer]

    Configuration for the OpenTelemetry tracer.
     [#extension: envoy.tracers.opentelemetry]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GRPC_SERVICE_FIELD_NUMBER: builtins.int
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    service_name: builtins.str
    """The name for the service. This will be populated in the ResourceSpan Resource attributes.
    If it is not provided, it will default to "unknown_service:envoy".
    """
    @property
    def grpc_service(self) -> envoy.config.core.v3.grpc_service_pb2.GrpcService:
        """The upstream gRPC cluster that will receive OTLP traces.
        Note that the tracer drops traces if the server does not read data fast enough.
        This field can be left empty to disable reporting traces to the collector.
        """

    def __init__(
        self,
        *,
        grpc_service: envoy.config.core.v3.grpc_service_pb2.GrpcService | None = ...,
        service_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["grpc_service", b"grpc_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["grpc_service", b"grpc_service", "service_name", b"service_name"]) -> None: ...

global___OpenTelemetryConfig = OpenTelemetryConfig
