{
    "$defs": {
        "AddgeneIdSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by an Addgene id",
            "properties": {
                "addgene_sequence_type": {
                    "$ref": "#/$defs/AddgeneSequenceType"
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The id of the sequence in the repository",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sequence_file_url": {
                    "description": "The URL of a sequence file",
                    "pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "AddgeneIdSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "AddgeneIdSource",
            "type": "object"
        },
        "AddgeneSequenceType": {
            "description": "",
            "enum": [
                "depositor-full",
                "addgene-full"
            ],
            "title": "AddgeneSequenceType",
            "type": "string"
        },
        "AnnotationReport": {
            "additionalProperties": false,
            "description": "Represents a report of an annotation step",
            "properties": {
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "AnnotationReport"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "title": "AnnotationReport",
            "type": "object"
        },
        "AnnotationSource": {
            "additionalProperties": false,
            "description": "Represents a computational step in which sequence features are annotated in a sequence",
            "properties": {
                "annotation_report": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/AnnotationReport"
                            },
                            {
                                "$ref": "#/$defs/PlannotateAnnotationReport"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "annotation_tool": {
                    "$ref": "#/$defs/AnnotationTool"
                },
                "annotation_tool_version": {
                    "description": "The version of the annotation tool",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "AnnotationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "annotation_tool",
                "id"
            ],
            "title": "AnnotationSource",
            "type": "object"
        },
        "AnnotationTool": {
            "description": "",
            "enum": [
                "plannotate"
            ],
            "title": "AnnotationTool",
            "type": "string"
        },
        "AssemblyFragment": {
            "additionalProperties": false,
            "description": "Represents a fragment in an assembly",
            "properties": {
                "left_location": {
                    "pattern": "^(\\d+)\\.\\.(\\d+)$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "reverse_complemented": {
                    "description": "Whether the sequence is reverse complemented in the assembly",
                    "type": "boolean"
                },
                "right_location": {
                    "pattern": "^(\\d+)\\.\\.(\\d+)$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sequence": {
                    "description": "The input sequence",
                    "type": "integer"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "AssemblyFragment"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "reverse_complemented",
                "sequence"
            ],
            "title": "AssemblyFragment",
            "type": "object"
        },
        "AssemblySource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is an assembly of other sequences",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "AssemblySource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "AssemblySource",
            "type": "object"
        },
        "AssociatedFile": {
            "additionalProperties": false,
            "description": "Represents a file associated with a sequence",
            "properties": {
                "file_name": {
                    "description": "The name of the file",
                    "type": "string"
                },
                "file_type": {
                    "$ref": "#/$defs/AssociatedFileType",
                    "description": "The type of file"
                },
                "sequence_id": {
                    "description": "The sequence this file is associated with",
                    "type": "integer"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "AssociatedFile"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence_id",
                "file_name",
                "file_type"
            ],
            "title": "AssociatedFile",
            "type": "object"
        },
        "AssociatedFileType": {
            "description": "",
            "enum": [
                "Sequencing file"
            ],
            "title": "AssociatedFileType",
            "type": "string"
        },
        "BenchlingUrlSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by a Benchling URL",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The url of the gb file associated with the sequence",
                    "pattern": "^https:\\/\\/benchling\\.com\\/.+\\.gb$",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "BenchlingUrlSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "BenchlingUrlSource",
            "type": "object"
        },
        "CRISPRSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by CRISPR",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "CRISPRSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "CRISPRSource",
            "type": "object"
        },
        "CloningStrategy": {
            "additionalProperties": false,
            "description": "Represents a cloning strategy",
            "properties": {
                "backend_version": {
                    "description": "The version of the backend that was used to generate this cloning strategy",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "description": {
                    "description": "A description of the cloning strategy",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "files": {
                    "description": "Files associated with this cloning strategy",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/AssociatedFile"
                            },
                            {
                                "$ref": "#/$defs/SequencingFile"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "frontend_version": {
                    "description": "The version of the frontend that was used to generate this cloning strategy",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "primers": {
                    "description": "The primers that are used in the cloning strategy",
                    "items": {
                        "$ref": "#/$defs/Primer"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "schema_version": {
                    "description": "The version of the schema that was used to generate this cloning strategy",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sequences": {
                    "description": "The sequences that are used in the cloning strategy",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/TemplateSequence"
                            },
                            {
                                "$ref": "#/$defs/TextFileSequence"
                            },
                            {
                                "$ref": "#/$defs/Primer"
                            }
                        ]
                    },
                    "type": "array"
                },
                "sources": {
                    "description": "The sources of the sequences that are used in the cloning strategy",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/DatabaseSource"
                            },
                            {
                                "$ref": "#/$defs/CollectionSource"
                            },
                            {
                                "$ref": "#/$defs/ManuallyTypedSource"
                            },
                            {
                                "$ref": "#/$defs/UploadedFileSource"
                            },
                            {
                                "$ref": "#/$defs/RepositoryIdSource"
                            },
                            {
                                "$ref": "#/$defs/GenomeCoordinatesSource"
                            },
                            {
                                "$ref": "#/$defs/SequenceCutSource"
                            },
                            {
                                "$ref": "#/$defs/AssemblySource"
                            },
                            {
                                "$ref": "#/$defs/OligoHybridizationSource"
                            },
                            {
                                "$ref": "#/$defs/PolymeraseExtensionSource"
                            },
                            {
                                "$ref": "#/$defs/AnnotationSource"
                            },
                            {
                                "$ref": "#/$defs/ReverseComplementSource"
                            },
                            {
                                "$ref": "#/$defs/PCRSource"
                            },
                            {
                                "$ref": "#/$defs/LigationSource"
                            },
                            {
                                "$ref": "#/$defs/HomologousRecombinationSource"
                            },
                            {
                                "$ref": "#/$defs/GibsonAssemblySource"
                            },
                            {
                                "$ref": "#/$defs/InFusionSource"
                            },
                            {
                                "$ref": "#/$defs/OverlapExtensionPCRLigationSource"
                            },
                            {
                                "$ref": "#/$defs/InVivoAssemblySource"
                            },
                            {
                                "$ref": "#/$defs/RestrictionAndLigationSource"
                            },
                            {
                                "$ref": "#/$defs/GatewaySource"
                            },
                            {
                                "$ref": "#/$defs/CreLoxRecombinationSource"
                            },
                            {
                                "$ref": "#/$defs/CRISPRSource"
                            },
                            {
                                "$ref": "#/$defs/RestrictionEnzymeDigestionSource"
                            },
                            {
                                "$ref": "#/$defs/AddgeneIdSource"
                            },
                            {
                                "$ref": "#/$defs/WekWikGeneIdSource"
                            },
                            {
                                "$ref": "#/$defs/SEVASource"
                            },
                            {
                                "$ref": "#/$defs/BenchlingUrlSource"
                            },
                            {
                                "$ref": "#/$defs/SnapGenePlasmidSource"
                            },
                            {
                                "$ref": "#/$defs/EuroscarfSource"
                            },
                            {
                                "$ref": "#/$defs/IGEMSource"
                            },
                            {
                                "$ref": "#/$defs/OpenDNACollectionsSource"
                            }
                        ]
                    },
                    "type": "array"
                }
            },
            "required": [
                "sequences",
                "sources"
            ],
            "title": "CloningStrategy",
            "type": "object"
        },
        "Collection": {
            "description": "",
            "enum": [
                "AddgenePlasmid",
                "OligoPair"
            ],
            "title": "Collection",
            "type": "string"
        },
        "CollectionOption": {
            "additionalProperties": false,
            "description": "Represents an option in a collection",
            "properties": {
                "info": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CollectionOptionInfo"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Additional information about this option"
                },
                "name": {
                    "description": "A human-readable name for a thing",
                    "type": "string"
                },
                "source": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DatabaseSource"
                        },
                        {
                            "$ref": "#/$defs/CollectionSource"
                        },
                        {
                            "$ref": "#/$defs/ManuallyTypedSource"
                        },
                        {
                            "$ref": "#/$defs/UploadedFileSource"
                        },
                        {
                            "$ref": "#/$defs/RepositoryIdSource"
                        },
                        {
                            "$ref": "#/$defs/GenomeCoordinatesSource"
                        },
                        {
                            "$ref": "#/$defs/SequenceCutSource"
                        },
                        {
                            "$ref": "#/$defs/AssemblySource"
                        },
                        {
                            "$ref": "#/$defs/OligoHybridizationSource"
                        },
                        {
                            "$ref": "#/$defs/PolymeraseExtensionSource"
                        },
                        {
                            "$ref": "#/$defs/AnnotationSource"
                        },
                        {
                            "$ref": "#/$defs/ReverseComplementSource"
                        },
                        {
                            "$ref": "#/$defs/PCRSource"
                        },
                        {
                            "$ref": "#/$defs/LigationSource"
                        },
                        {
                            "$ref": "#/$defs/HomologousRecombinationSource"
                        },
                        {
                            "$ref": "#/$defs/GibsonAssemblySource"
                        },
                        {
                            "$ref": "#/$defs/InFusionSource"
                        },
                        {
                            "$ref": "#/$defs/OverlapExtensionPCRLigationSource"
                        },
                        {
                            "$ref": "#/$defs/InVivoAssemblySource"
                        },
                        {
                            "$ref": "#/$defs/RestrictionAndLigationSource"
                        },
                        {
                            "$ref": "#/$defs/GatewaySource"
                        },
                        {
                            "$ref": "#/$defs/CreLoxRecombinationSource"
                        },
                        {
                            "$ref": "#/$defs/CRISPRSource"
                        },
                        {
                            "$ref": "#/$defs/RestrictionEnzymeDigestionSource"
                        },
                        {
                            "$ref": "#/$defs/AddgeneIdSource"
                        },
                        {
                            "$ref": "#/$defs/WekWikGeneIdSource"
                        },
                        {
                            "$ref": "#/$defs/SEVASource"
                        },
                        {
                            "$ref": "#/$defs/BenchlingUrlSource"
                        },
                        {
                            "$ref": "#/$defs/SnapGenePlasmidSource"
                        },
                        {
                            "$ref": "#/$defs/EuroscarfSource"
                        },
                        {
                            "$ref": "#/$defs/IGEMSource"
                        },
                        {
                            "$ref": "#/$defs/OpenDNACollectionsSource"
                        }
                    ],
                    "description": "The source of the sequence for this option"
                }
            },
            "required": [
                "name",
                "source"
            ],
            "title": "CollectionOption",
            "type": "object"
        },
        "CollectionOptionInfo": {
            "additionalProperties": false,
            "description": "Additional information about a collection option",
            "properties": {
                "description": {
                    "description": "A description of the option",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "resistance": {
                    "description": "The antibiotic resistance of the plasmid",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "$ref": "#/$defs/CollectionOptionType",
                    "description": "The type of the option, this is redundant with the type of the source, and could be removed."
                },
                "well": {
                    "description": "The well position in the kit plate",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "title": "CollectionOptionInfo",
            "type": "object"
        },
        "CollectionOptionType": {
            "description": "",
            "enum": [
                "OligoPair",
                "AddgenePlasmid"
            ],
            "title": "CollectionOptionType",
            "type": "string"
        },
        "CollectionSource": {
            "additionalProperties": false,
            "description": "Represents a collection of possible sources in a template",
            "properties": {
                "category_id": {
                    "description": "The identifier of the category of the part in the template",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "description": {
                    "description": "A description of the category",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "image": {
                    "description": "URL and size of the image representing this category. For images with size specification, this is a list with two elements: [url, size].",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "options": {
                    "description": "The options available in this category.",
                    "items": {
                        "$ref": "#/$defs/CollectionOption"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "title": {
                    "description": "The title of the category",
                    "type": "string"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "CollectionSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "title",
                "id"
            ],
            "title": "CollectionSource",
            "type": "object"
        },
        "CreLoxRecombinationSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by Cre - Lox recombination",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "CreLoxRecombinationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "CreLoxRecombinationSource",
            "type": "object"
        },
        "DatabaseSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by a database id",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "DatabaseSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "database_id",
                "id"
            ],
            "title": "DatabaseSource",
            "type": "object"
        },
        "EuroscarfSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence from the Euroscarf plasmid library",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The id of the plasmid in the Euroscarf plasmid library",
                    "pattern": "^P\\d+$",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "EuroscarfSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "EuroscarfSource",
            "type": "object"
        },
        "GatewayReactionType": {
            "description": "",
            "enum": [
                "LR",
                "BP"
            ],
            "title": "GatewayReactionType",
            "type": "string"
        },
        "GatewaySource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by Gateway cloning",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "greedy": {
                    "description": "Whether to use a greedy consensus sequence for att sites (see https://github.com/manulera/GateWayMine)",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "reaction_type": {
                    "$ref": "#/$defs/GatewayReactionType"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "GatewaySource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "reaction_type",
                "id"
            ],
            "title": "GatewaySource",
            "type": "object"
        },
        "GenomeCoordinatesSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by genome coordinates, requested from NCBI",
            "properties": {
                "assembly_accession": {
                    "description": "The accession of the assembly",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "end": {
                    "description": "The ending coordinate (1-based) of the sequence in the sequence accession",
                    "type": "integer"
                },
                "gene_id": {
                    "description": "The gene id of the sequence",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "locus_tag": {
                    "description": "The locus tag of the sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sequence_accession": {
                    "description": "The accession of the sequence",
                    "type": "string"
                },
                "start": {
                    "description": "The starting coordinate (1-based) of the sequence in the sequence accession",
                    "type": "integer"
                },
                "strand": {
                    "description": "The strand of the sequence in the sequence accession, should be 1 or -1",
                    "type": "integer"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "GenomeCoordinatesSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence_accession",
                "start",
                "end",
                "strand",
                "id"
            ],
            "title": "GenomeCoordinatesSource",
            "type": "object"
        },
        "GibsonAssemblySource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by Gibson assembly",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "GibsonAssemblySource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "GibsonAssemblySource",
            "type": "object"
        },
        "HomologousRecombinationSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by homologous recombination",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "HomologousRecombinationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "HomologousRecombinationSource",
            "type": "object"
        },
        "IGEMSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence from an iGEM collection",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The unique identifier of the sequence in the iGEM collection (for now, {part_id}-{plasmid_backbone})",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sequence_file_url": {
                    "description": "The URL of the sequence file, for now github repository",
                    "pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$",
                    "type": "string"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "IGEMSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence_file_url",
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "IGEMSource",
            "type": "object"
        },
        "InFusionSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by In-Fusion cloning by Takara Bio",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "InFusionSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "InFusionSource",
            "type": "object"
        },
        "InVivoAssemblySource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by in vivo assembly. Algorithmically equivalent to Gibson assembly.",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "InVivoAssemblySource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "InVivoAssemblySource",
            "type": "object"
        },
        "LigationSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by ligation with sticky or blunt ends.",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "LigationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "LigationSource",
            "type": "object"
        },
        "ManuallyTypedSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is manually typed by the user",
            "properties": {
                "circular": {
                    "description": "Whether the sequence is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "overhang_crick_3prime": {
                    "description": "Taken from pydna's `dseq::ovhg`An integer describing the length of the crick strand overhang in the 5' of the molecule, or 3' of the crick strand",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "overhang_watson_3prime": {
                    "description": "The equivalent of `overhang_crick_3prime` but for the watson strand",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "ManuallyTypedSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "user_input": {
                    "pattern": "^[acgtACGT]+$",
                    "type": "string"
                }
            },
            "required": [
                "user_input",
                "id"
            ],
            "title": "ManuallyTypedSource",
            "type": "object"
        },
        "NamedThing": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": [
                        "integer",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "NamedThing",
            "type": "object"
        },
        "OligoHybridizationSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by oligo hybridization",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "overhang_crick_3prime": {
                    "description": "Taken from pydna's `dseq::ovhg`An integer describing the length of the crick strand overhang in the 5' of the molecule, or 3' of the crick strand",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "OligoHybridizationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "OligoHybridizationSource",
            "type": "object"
        },
        "OpenDNACollectionsSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence from the Open DNA collections",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "Subpath of the sequence in the Open DNA collections repository",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sequence_file_url": {
                    "description": "The URL of a sequence file",
                    "pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "OpenDNACollectionsSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "OpenDNACollectionsSource",
            "type": "object"
        },
        "OverlapExtensionPCRLigationSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by ligation of PCR products as part of overlap extension PCR. Algorithmically equivalent to Gibson assembly.",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "OverlapExtensionPCRLigationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "OverlapExtensionPCRLigationSource",
            "type": "object"
        },
        "PCRSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by PCR",
            "properties": {
                "add_primer_features": {
                    "description": "Whether to add primer features to the PCR product",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "PCRSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "PCRSource",
            "type": "object"
        },
        "PlannotateAnnotationReport": {
            "additionalProperties": false,
            "description": "Represents a report of an annotation step using Plannotate",
            "properties": {
                "Description": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Feature": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Type": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "database": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "end_location": {
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "fragment": {
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "full_length_of_feature_in_db": {
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "length_of_found_feature": {
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "percent_identity": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "percent_match_length": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "sequence": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sseqid": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "start_location": {
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "strand": {
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "PlannotateAnnotationReport"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "title": "PlannotateAnnotationReport",
            "type": "object"
        },
        "PolymeraseExtensionSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by polymerase extension",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "PolymeraseExtensionSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "PolymeraseExtensionSource",
            "type": "object"
        },
        "Primer": {
            "additionalProperties": false,
            "description": "An oligonucleotide or primer",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "name": {
                    "description": "A human-readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sequence": {
                    "pattern": "^[acgtACGT]+$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "Primer"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "Primer",
            "type": "object"
        },
        "RepositoryIdSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by a repository id",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The id of the sequence in the repository",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "RepositoryIdSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "RepositoryIdSource",
            "type": "object"
        },
        "RepositoryName": {
            "description": "",
            "enum": [
                "addgene",
                "genbank",
                "benchling",
                "snapgene",
                "euroscarf",
                "igem",
                "wekwikgene",
                "seva",
                "open_dna_collections"
            ],
            "title": "RepositoryName",
            "type": "string"
        },
        "RestrictionAndLigationSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is generated by restriction and ligation",
            "properties": {
                "circular": {
                    "description": "Whether the assembly is circular or not",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "restriction_enzymes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "RestrictionAndLigationSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "restriction_enzymes",
                "id"
            ],
            "title": "RestrictionAndLigationSource",
            "type": "object"
        },
        "RestrictionEnzymeDigestionSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is a subfragment of another sequence, generated by sequence cutting using restriction enzymes.",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "left_edge": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RestrictionSequenceCut"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "right_edge": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RestrictionSequenceCut"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "RestrictionEnzymeDigestionSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "RestrictionEnzymeDigestionSource",
            "type": "object"
        },
        "RestrictionSequenceCut": {
            "additionalProperties": false,
            "description": "Represents a cut in a DNA sequence that is made by a restriction enzyme",
            "properties": {
                "cut_watson": {
                    "description": "The position of the cut in the watson strand. The cut is made before the base at this position (zero-based), so that cut position 1 cuts after the first base.",
                    "type": "integer"
                },
                "overhang": {
                    "description": "The length of the overhang that is left after the cut. It can be negative, same meaning as in pydna's `dseq::ovhg` and biopython's `Bio.Restriction.RestrictionType.ovhg`.",
                    "type": "integer"
                },
                "restriction_enzyme": {
                    "type": "string"
                }
            },
            "required": [
                "restriction_enzyme",
                "cut_watson",
                "overhang"
            ],
            "title": "RestrictionSequenceCut",
            "type": "object"
        },
        "ReverseComplementSource": {
            "additionalProperties": false,
            "description": "Represents the in-silico transformation of a sequence into its reverse complement",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "ReverseComplementSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "ReverseComplementSource",
            "type": "object"
        },
        "SEVASource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by a SEVA id",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The SEVA plasmid name",
                    "pattern": "^pSEVA\\d+.*$",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sequence_file_url": {
                    "description": "The URL of the sequence file, which can refer to a a gb file hosted on the SEVA website or an entry in the NCBI.",
                    "pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$",
                    "type": "string"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "SEVASource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence_file_url",
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "SEVASource",
            "type": "object"
        },
        "SequenceCut": {
            "additionalProperties": false,
            "description": "Represents a cut in a DNA sequence",
            "properties": {
                "cut_watson": {
                    "description": "The position of the cut in the watson strand. The cut is made before the base at this position (zero-based), so that cut position 1 cuts after the first base.",
                    "type": "integer"
                },
                "overhang": {
                    "description": "The length of the overhang that is left after the cut. It can be negative, same meaning as in pydna's `dseq::ovhg` and biopython's `Bio.Restriction.RestrictionType.ovhg`.",
                    "type": "integer"
                }
            },
            "required": [
                "cut_watson",
                "overhang"
            ],
            "title": "SequenceCut",
            "type": "object"
        },
        "SequenceCutSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is a subfragment of another sequence, generated by sequence cutting.",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "left_edge": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SequenceCut"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "right_edge": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SequenceCut"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "SequenceCutSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "SequenceCutSource",
            "type": "object"
        },
        "SequenceFileFormat": {
            "description": "",
            "enum": [
                "fasta",
                "genbank",
                "snapgene",
                "embl"
            ],
            "title": "SequenceFileFormat",
            "type": "string"
        },
        "SequencingFile": {
            "additionalProperties": false,
            "description": "Represents a sequencing file and its alignment to a sequence",
            "properties": {
                "alignment": {
                    "description": "The alignment of the sequencing read to the sequence. List of strings representing aligned sequences.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_name": {
                    "description": "The name of the file",
                    "type": "string"
                },
                "file_type": {
                    "$ref": "#/$defs/AssociatedFileType",
                    "description": "The type of file"
                },
                "sequence_id": {
                    "description": "The sequence this file is associated with",
                    "type": "integer"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "SequencingFile"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "alignment",
                "sequence_id",
                "file_name",
                "file_type"
            ],
            "title": "SequencingFile",
            "type": "object"
        },
        "SnapGenePlasmidSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence from the SnapGene plasmid library identified by a SnapGene subpath of https://www.snapgene.com/plasmids/",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The subpath of the plasmid in the SnapGene plasmid library. Requesting the plasmid is possible with https://www.snapgene.com/local/fetch.php?set={category_path}&plasmid={plasmid['subpath']} where category_path is the left part of the subpath before the first / and plasmid is the subpath after the /.",
                    "pattern": "^.+\\/.+$",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "SnapGenePlasmidSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "SnapGenePlasmidSource",
            "type": "object"
        },
        "SourceInput": {
            "additionalProperties": false,
            "description": "Represents an input to a source",
            "properties": {
                "sequence": {
                    "description": "The input sequence",
                    "type": "integer"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "SourceInput"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence"
            ],
            "title": "SourceInput",
            "type": "object"
        },
        "TemplateSequence": {
            "additionalProperties": false,
            "description": "Represents a sequence that is part of a template, where the actual sequence content will be determined by the user's actions",
            "properties": {
                "circular": {
                    "description": "Whether the sequence is circular or linear",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "primer_design": {
                    "description": "Can be used to indicate the intended primer design for this sequence in the template",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "TemplateSequence"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "id"
            ],
            "title": "TemplateSequence",
            "type": "object"
        },
        "TextFileSequence": {
            "additionalProperties": false,
            "description": "A sequence (may have features) defined by the content of a text file",
            "properties": {
                "file_content": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "overhang_crick_3prime": {
                    "description": "Taken from pydna's `dseq::ovhg`An integer describing the length of the crick strand overhang in the 5' of the molecule, or 3' of the crick strand",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "overhang_watson_3prime": {
                    "description": "The equivalent of `overhang_crick_3prime` but for the watson strand",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "sequence_file_format": {
                    "$ref": "#/$defs/SequenceFileFormat",
                    "description": "The format of a sequence file"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "TextFileSequence"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence_file_format",
                "id"
            ],
            "title": "TextFileSequence",
            "type": "object"
        },
        "UploadedFileSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is uploaded as a file",
            "properties": {
                "circularize": {
                    "description": "Whether the sequence should be circularized (FASTA only)",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "coordinates": {
                    "description": "If provided, coordinates within the sequence of the file to extract a subsequence",
                    "pattern": "^(\\d+)\\.\\.(\\d+)$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "file_name": {
                    "description": "The name of the file",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "index_in_file": {
                    "description": "The index of the sequence in the file",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "sequence_file_format": {
                    "$ref": "#/$defs/SequenceFileFormat",
                    "description": "The format of a sequence file"
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "UploadedFileSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "sequence_file_format",
                "id"
            ],
            "title": "UploadedFileSource",
            "type": "object"
        },
        "WekWikGeneIdSource": {
            "additionalProperties": false,
            "description": "Represents the source of a sequence that is identified by a WeKwikGene id",
            "properties": {
                "database_id": {
                    "description": "The id of an entity in a database",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for a thing",
                    "type": "integer"
                },
                "input": {
                    "description": "The inputs to this source. If the source represents external import of a sequence, it's empty.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/SourceInput"
                            },
                            {
                                "$ref": "#/$defs/AssemblyFragment"
                            }
                        ]
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "output_name": {
                    "description": "Used to specify the name of the output sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "repository_id": {
                    "description": "The id of the gene in the WeKwikGene database",
                    "pattern": "^\\d+$",
                    "type": "string"
                },
                "repository_name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sequence_file_url": {
                    "description": "The URL of a sequence file",
                    "pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "Designates the class",
                    "enum": [
                        "WekWikGeneIdSource"
                    ],
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "repository_id",
                "repository_name",
                "id"
            ],
            "title": "WekWikGeneIdSource",
            "type": "object"
        }
    },
    "$id": "https://opencloning.github.io/OpenCloning_LinkML",
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "additionalProperties": true,
    "metamodel_version": "1.7.0",
    "title": "OpenCloning_LinkML",
    "type": "object",
    "version": null
}
