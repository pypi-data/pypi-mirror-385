[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gitflow-analytics"
dynamic = ["version"]
description = "Analyze Git repositories for developer productivity insights"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Bob Matyas", email = "bobmatnyc@gmail.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Quality Assurance",
]
keywords = ["git", "analytics", "productivity", "metrics", "development"]

dependencies = [
    "click>=8.1",
    "gitpython>=3.1",
    "pygithub>=2.0",
    "tqdm>=4.65",
    "sqlalchemy>=2.0",
    "pandas>=2.0",
    "pyyaml>=6.0",
    "python-dateutil>=2.8",
    "python-dotenv>=1.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
    # Qualitative analysis dependencies
    "spacy>=3.7.0",
    "scikit-learn>=1.3.0",
    "openai>=1.30.0",
    "tiktoken>=0.7.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "black>=23.0",
    "isort>=5.0",
    "bandit[toml]>=1.7",
    "safety>=2.0",
    "python-semantic-release>=8.0.0",
    "types-PyYAML>=6.0",
    "types-requests>=2.28",
]

github = [
    "pygithub>=1.58",
]

all = [
    "gitflow-analytics[github]",
]

[project.scripts]
gitflow-analytics = "gitflow_analytics.cli:main"
gfa = "gitflow_analytics.cli:main"

[project.urls]
Homepage = "https://github.com/bobmatnyc/gitflow-analytics"
Documentation = "https://github.com/bobmatnyc/gitflow-analytics/blob/main/README.md"
Repository = "https://github.com/bobmatnyc/gitflow-analytics"
Issues = "https://github.com/bobmatnyc/gitflow-analytics/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "gitflow_analytics._version.__version__"}

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = ["E501"]  # Line too long - handled by formatter

[tool.black]
line-length = 100
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
ignore_missing_imports = true
allow_untyped_calls = true
allow_untyped_decorators = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=gitflow_analytics --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.semantic_release]
version_variables = [
    "src/gitflow_analytics/_version.py:__version__",
]
build_command = "pip install build && python -m build"
major_on_zero = false
tag_format = "v{version}"
upload_to_vcs_release = true
upload_to_pypi = false  # Handled separately in release workflow

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.commit_parser_options]
allowed_tags = ["feat", "fix", "docs", "style", "refactor", "perf", "test", "chore", "ci", "build"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "docs", "style", "refactor", "chore", "ci", "build", "test"]

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "^Merge pull request .*",
    "^Merge branch .*",
    "^chore\\(release\\): .*",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test