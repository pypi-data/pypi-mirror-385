[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


# 移除 Poetry 配置，统一使用 project.optional-dependencies

[tool.poetry.group.dev.dependencies]
pyarrow = "^21.0.0"
pytest = "^8.4.2"
pytest-asyncio = "^1.2.0"
pytest-cov = "^7.0.0"
pytest-timeout = "^2.4.0"

[project]
name = "aiecs"
version = "1.3.1"
description = "AI Execute Services - A middleware framework for AI-powered task execution and tool orchestration"
authors = [
    {name = "AIECS Team", email = "iretbl@gmail.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10,<3.13"
keywords = ["ai", "middleware", "llm", "orchestration", "async", "tools"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Framework :: Celery",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # =============================================================================
    # Core Web Framework and API Dependencies
    # =============================================================================
    "fastapi (>=0.115.12,<0.116.0)",                # Modern, fast web framework for building APIs
    "httpx (>=0.28.1,<0.29.0)",                     # Async HTTP client for Python
    "uvicorn[standard] (>=0.34.2,<0.35.0)",         # ASGI server for FastAPI and WebSocket support
    "python-dotenv (>=1.1.0,<2.0.0)",               # Environment variable management from .env files
    "pydantic (>=2.11.5,<3.0.0)",                   # Data validation and settings management
    "pydantic-settings (>=2.9.1,<3.0.0)",           # Settings management for Pydantic v2
    "cachetools (>=5.0.0,<6.0.0)",                  # Caching utilities and decorators
    "typing-extensions (>=4.13.2,<5.0.0)",          # Extended typing capabilities for older Python versions
    "aiofiles (>=24.1.0,<25.0.0)",                  # Async file operations support

    # =============================================================================
    # Task Queue and Messaging
    # =============================================================================
    "celery (>=5.5.2,<6.0.0)",                      # Distributed task queue for background processing
    "redis (>=6.2.0,<7.0.0)",                       # In-memory data store used as Celery broker/backend
    "python-socketio (>=5.13.0,<6.0.0)",            # WebSocket implementation for real-time communication
    "python-engineio (>=4.12.1,<5.0.0)",            # Engine.IO implementation for Socket.IO
    "tenacity (>=9.1.2,<10.0.0)",                   # Retry library with exponential backoff strategies
    "flower (>=2.0.1,<3.0.0)",                      # Web-based monitoring tool for Celery

    # =============================================================================
    # AI and LLM Services
    # =============================================================================
    "openai (>=1.68.2,<1.76.0)",                    # OpenAI API client for GPT models
    "google-cloud-aiplatform (>=1.80.0,<2.0.0)",    # Google Cloud AI Platform with Vertex AI (updated to latest)
    "google-generativeai (>=0.8.0,<1.0.0)",         # Google Generative AI SDK for Gemini models
    "google-api-python-client (>=2.108.0,<3.0.0)",  # Google API Python Client for Custom Search
    "google-auth (>=2.25.0,<3.0.0)",                # Google authentication library
    "google-auth-httplib2 (>=0.2.0,<1.0.0)",        # HTTP transport for Google Auth
    "google-auth-oauthlib (>=1.2.0,<2.0.0)",        # OAuth 2.0 support for Google Auth
    "langchain (>=0.3.26,<0.4.0)",                  # Framework for developing LLM applications
    "langgraph (>=0.5.3,<0.6.0)",                   # Graph-based state machine for LangChain
    "weasel (==0.4.1)",                              # SpaCy's configuration system

    # =============================================================================
    # Natural Language Processing
    # =============================================================================
    "spacy (>=3.8.7,<4.0.0)",                       # Industrial-strength NLP library
    "rake-nltk (>=1.0.6,<2.0.0)",                   # Rapid Automatic Keyword Extraction
    # "transformers (>=4.56.1,<5.0.0)",             # Installation requirements are costly and temporarily disabled
    # "torch (>=2.8.0,<3.0.0)",                     # Installation requirements are costly and temporarily disabled

    # =============================================================================
    # Data Processing and Analysis
    # =============================================================================
    "numpy (>=2.2.6,<3.0.0)",                       # Fundamental package for numerical computing
    "pandas (>=2.2.3,<3.0.0)",                      # Data analysis and manipulation library
    "scipy (>=1.15.3,<2.0.0)",                      # Scientific computing library
    "scikit-learn (>=1.5.0,<2.0.0)",                # Machine learning library
    "statsmodels (>=0.14.4,<0.15.0)",               # Statistical models and tests
    "pyreadstat (>=1.2.9,<2.0.0)",                  # Read/write SAS, SPSS, and Stata files
    "tabulate (>=0.9.0,<0.10.0)",                   # Pretty-print tabular data

    # =============================================================================
    # Document Processing and Office Files
    # =============================================================================
    "python-docx (>=1.1.2,<2.0.0)",                 # Microsoft Word document processing
    "python-pptx (>=1.0.2,<2.0.0)",                 # Microsoft PowerPoint document processing
    "openpyxl (>=3.1.5,<4.0.0)",                    # Excel file reading and writing
    "pdfplumber (>=0.11.7,<0.12.0)",                # PDF text extraction and analysis
    "pdfminer-six (==20250506)",                    # PDF parsing and text extraction
    "tika (>=2.6.0,<3.0.0)",                        # Content analysis toolkit for document parsing

    # =============================================================================
    # Data Visualization and Reporting
    # =============================================================================
    "matplotlib (>=3.10.3,<4.0.0)",                 # Comprehensive plotting library
    "seaborn (>=0.13.2,<0.14.0)",                   # Statistical data visualization
    "jinja2 (>=3.1.6,<4.0.0)",                      # Template engine for report generation

    # =============================================================================
    # Web Scraping and Content Extraction
    # =============================================================================
    "beautifulsoup4 (>=4.13.4,<5.0.0)",             # HTML/XML parsing library
    "lxml (>=5.4.0,<6.0.0)",                        # Fast XML and HTML processing
    "playwright (>=1.52.0,<2.0.0)",                 # Browser automation for dynamic content
    "pytesseract (>=0.3.13,<0.4.0)",                # OCR (Optical Character Recognition) wrapper
    "pillow (>=11.2.1,<12.0.0)",                    # Image processing library (PIL fork)
    "scrapy (>=2.13.3,<3.0.0)",                     # 

    # =============================================================================
    # Configuration and Data Formats
    # =============================================================================
    "pyyaml (>=6.0.2,<7.0.0)",                      # YAML parser and emitter
    "markdown (>=3.8,<4.0)",                        # Markdown parser and converter
    "bleach (>=6.2.0,<7.0.0)",                      # HTML sanitizing library

    # =============================================================================
    # Database and Storage
    # =============================================================================
    "sqlalchemy (>=2.0.41,<3.0.0)",                 # SQL toolkit and ORM
    "asyncpg (>=0.30.0,<1.0.0)",                    # PostgreSQL async driver

    # =============================================================================
    # Monitoring, Metrics, and Observability
    # =============================================================================
    "prometheus-client (>=0.21.1,<1.0.0)",          # Prometheus metrics client
    "jaeger-client (>=4.8.0,<5.0.0)",               # Jaeger distributed tracing client
    "opentracing (>=2.4.0,<3.0.0)",                 # OpenTracing API for distributed tracing
    "psutil (>=7.0.0,<8.0.0)",                      # System and process monitoring utilities
]

# 开发依赖项 - 移动到 optional-dependencies，use `pip install aiecs[dev]`
[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",                               # Testing framework
    "pytest-asyncio>=1.0.0",                       # Async testing support
    "pytest-cov>=4.0.0",                           # Coverage reporting for pytest
    "pytest-xdist>=3.0.0",                         # Parallel test execution
    "pytest-mock>=3.10.0",                         # Mock fixtures for pytest
    "black>=25.1.0",                               # Code formatter
    "flake8>=7.2.0",                               # Code linter
    "mypy>=1.15.0",                                # Static type checker
    "bump-pydantic>=0.8.0",
]

[project.urls]
"Homepage" = "https://github.com/aiecs-team/aiecs"
"Bug Tracker" = "https://github.com/aiecs-team/aiecs/issues"
"Documentation" = "https://aiecs.readthedocs.io"

[project.scripts]
aiecs = "aiecs.__main__:main"
aiecs-version = "aiecs.scripts.aid.version_manager:main"
aiecs-patch-weasel = "aiecs.scripts.dependance_patch.fix_weasel.fix_weasel_validator:main"
aiecs-download-nlp-data = "aiecs.scripts.dependance_check.download_nlp_data:main"
aiecs-check-deps = "aiecs.scripts.dependance_check.dependency_checker:main"
aiecs-quick-check = "aiecs.scripts.dependance_check.quick_dependency_check:main"
aiecs-fix-deps = "aiecs.scripts.dependance_check.dependency_fixer:main"
aiecs-tools-check-annotations = "aiecs.scripts.tools_develop.check_type_annotations:main"
aiecs-tools-validate-schemas = "aiecs.scripts.tools_develop.validate_tool_schemas:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aiecs*"]
exclude = ["test*", "tests*", "htmlcov*", "*.log"]

[tool.setuptools.package-data]
aiecs = ["scripts/*.md", "scripts/*.sh"]

[tool.setuptools]
py-modules = []

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

# Pytest configuration
[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "asyncio: marks tests as async",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security tests",
    "performance: marks tests as performance tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::pytest.PytestUnknownMarkWarning"
]
