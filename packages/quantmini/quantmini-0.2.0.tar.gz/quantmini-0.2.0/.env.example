# Environment Variables for QuantMini Pipeline
# Copy this file to .env and customize for your environment

# ============================================================================
# DATA PATHS
# ============================================================================
# Root directory for all data storage (parquet, qlib, metadata, cache)
# This should point to a fast storage location (SSD recommended)
# Examples:
#   - External drive on macOS: /Volumes/sandisk/quantmini-data/ticker_lookup
#   - External drive on Linux: /mnt/storage/quantmini-data/ticker_lookup
#   - Default (current directory): ./data
DATA_ROOT=/Volumes/sandisk/quantmini-data/ticker_lookup

# ============================================================================
# PIPELINE CONFIGURATION
# ============================================================================
# Processing mode: adaptive, streaming, batch, or parallel
# 'adaptive' auto-selects based on system capabilities (recommended)
PIPELINE_MODE=adaptive

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Maximum memory usage in GB (override auto-detection)
# MAX_MEMORY_GB=20

# ============================================================================
# POLYGON.IO CREDENTIALS
# ============================================================================
# Your Polygon.io API key (required for REST API data refresh)
# Get your key from: https://polygon.io/dashboard/api-keys
POLYGON_API_KEY=your_api_key_here

# Note: S3 flat files credentials are configured in config/credentials.yaml
# The API key here is used for REST API endpoints (quantmini api commands)

# ============================================================================
# OPTIONAL OVERRIDES
# ============================================================================
# Override config directory (default: ./config)
# CONFIG_ROOT=./config

# Override log directory (default: ./logs)
# LOG_ROOT=./logs

# Override max workers for parallel processing
# MAX_WORKERS=8

# Override chunk size for streaming mode
# CHUNK_SIZE=10000
