from __future__ import annotations
import ngsolve as ngs
import ngsolve.comp
import ngsolve.fem
import ngsolve.krylovspace
from typing import Union
__all__: list[str] = ['CrankNicolson', 'ImplicitEuler', 'Newmark', 'Union', 'ngs']
class CrankNicolson:
    def Integrate(self, u_start: ngsolve.comp.GridFunction, end_time: float, start_time: float | None = None, newton_args: dict | None = None, callback: typing.Callable | None = None):
        ...
    def Step(self, u: ngsolve.comp.GridFunction, dt: float | None = None, newton_args: dict | None = None):
        ...
    def __init__(self, equation: ngsolve.comp.SumOfIntegrals, dt: float | ngsolve.fem.Parameter, time: ngsolve.fem.Parameter = ..., pc_cls: typing.Type = ngsolve.comp.MultiGridPreconditioner, pc_args: dict | None = None, lin_solver_cls: typing.Type = ngsolve.krylovspace.CGSolver, lin_solver_args: dict | None = None):
        ...
class ImplicitEuler:
    def Integrate(self, u_start: ngsolve.comp.GridFunction, end_time: float, start_time: float | None = None, newton_args: dict | None = None, callback: typing.Callable | None = None):
        ...
    def Step(self, u: ngsolve.comp.GridFunction, dt: float | None = None, newton_args: dict | None = None):
        ...
    def __init__(self, equation: ngsolve.comp.SumOfIntegrals, dt: float | ngsolve.fem.Parameter, time: ngsolve.fem.Parameter = ..., pc_cls: typing.Type = ngsolve.comp.MultiGridPreconditioner, pc_args: dict | None = None, lin_solver_cls: typing.Type = ngsolve.krylovspace.CGSolver, lin_solver_args: dict | None = None):
        ...
class Newmark:
    def Integrate(self, u: ngsolve.comp.GridFunction, end_time: float, v: ngsolve.comp.GridFunction | None = None, a: ngsolve.comp.GridFunction | None = None, start_time: float | None = None, newton_args: dict | None = None, callback: typing.Callable | None = None):
        ...
    def Step(self, u: ngsolve.comp.GridFunction, v: ngsolve.comp.GridFunction, a: ngsolve.comp.GridFunction, dt: float | None = None, newton_args: dict | None = None):
        ...
    def __init__(self, equation: ngsolve.comp.SumOfIntegrals, dt: float | ngsolve.fem.Parameter, time: ngsolve.fem.Parameter = ..., pc_cls: typing.Type = ngsolve.comp.MultiGridPreconditioner, pc_args: dict | None = None, lin_solver_cls: typing.Type = ngsolve.krylovspace.CGSolver, lin_solver_args: dict | None = None):
        ...
