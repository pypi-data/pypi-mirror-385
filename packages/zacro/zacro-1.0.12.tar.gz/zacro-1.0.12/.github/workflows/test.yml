name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Install Formatting Tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff flake8
        rustup component add rustfmt clippy
    - name: Check Python Formatting
      run: |
        ruff check .
        flake8 .
    - name: Check Rust Formatting
      run: |
        cargo fmt --check
        cargo clippy -- -D warnings

  test-python:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin pytest
    - name: Build and install package
      run: |
        pip install -e .
    - name: Run tests
      run: |
        python -m pytest tests/ -v

  test-rust:
    name: Test Rust on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Run Rust tests
      run: |
        cargo test --lib

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # https://github.com/actions/runner-images
        # Note: macos-13 is deprecated and will be retired by December 4, 2025
        # Using macos-15-intel for Intel x86_64 architecture testing
        # macos-latest (ARM-based Apple Silicon) for general testing
        # https://github.blog/changelog/2025-09-19-github-actions-macos-13-runner-image-is-closing-down/
        os: [ubuntu-latest, windows-latest, macos-15-intel, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "cp38-win32 cp39-win32 cp310-win32 cp311-win32 cp312-win32 *-win32 *-musllinux* *-manylinux_i686"
          CIBW_BEFORE_ALL_LINUX: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source ~/.cargo/env"
          CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"
          CIBW_BEFORE_ALL_MACOS: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && source ~/.cargo/env"
          CIBW_ENVIRONMENT_MACOS: "PATH=$HOME/.cargo/bin:$PATH"
          CIBW_BEFORE_ALL_WINDOWS: "choco install rust -y"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
