[project]
name = "uncontrol"
version = "0.3.2"
authors = [
    { name = "Frank Hennige", email = "frank@hennige-it.de" },
]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = "AGPL-3.0-or-later"
license-files = ["LICENSE"]
dependencies = [
    "cryptography>=46.0.2",
    "django-bootstrap5>=25.2",
    "django-htmx>=1.26.0",
    "htmx-components>=0.1.9",
    "python-gnupg>=0.5.5",
]

[project.urls]
Homepage = "https://github.com/FrankHennige/uncontrol"
Issues = "https://github.com/FrankHennige/uncontrol/issues"


[tool.hatch.build]
sources = ["src"]

[dependency-groups]
test = [
    "black>=25.9.0",
    "isort>=6.1.0",
    "mypy>=1.18.2",
    "pydot>=4.0.1",
    "pylint>=3.3.9",
    "pyparsing>=3.2.5",
    "python-semantic-release>=10.4.1",
    "ruff>=0.13.3",
]
container = [
    "django>=4.2.25",
    "django-extensions>=4.1",
    "gunicorn>=23.0.0",
]

[project.optional-dependencies]
build = ["uv ~= 0.8.24"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
uncontrol = ["*.html", "**/*.html"]

[tool.semantic_release]
build_command = """
    python -m pip install -e '.[build]'
    uv lock --upgrade-package "$PACKAGE_NAME"
    git add uv.lock
    uv build
"""
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
upload_to_pypi = true
upload_to_release = true
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

