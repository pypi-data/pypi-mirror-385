[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
# Configure the package directory (tell it that everything is in src/)
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[project]
name = "qflux"
version = "0.0.4"
description = "qflux is a package for running quantum dynamics calculations on quantum devices."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "requests",
    "importlib-metadata",
    "qiskit>=2.0.0",
    "qiskit-aer>=0.17.0",
    "qiskit-algorithms>=0.3.1",
    "qiskit-ibm-runtime>=0.37.0",
    "tomli>=2.2.1",
    "matplotlib>=3.10",
    "numpy>=2.0",
    "pylatexenc>=2.10",
    "qutip>=5.0",
    "scipy",
    "tqdm",
    "graycode>=1.0.5"
]
authors = [
           { name = "Brandon Allen", email = "brandon.allen@yale.edu" },
           { name = "Delmar Cabral", email = "delmar.azevedocabral@yale.edu" },
           { name = "Alexander Soudackov", email = "alexander.soudackov@yale.edu"},
           { name = "Anton Morgunov", email = "anton@ischemist.com" }]
license = { text = "MIT" }
keywords = ["Quantum Computing", "chemistry", "quantum dynamics"]

[project.urls]
Homepage = "https://github.com/batistagroup/qflux"
Issues = "https://github.com/batistagroup/qflux/issues"
Documentation = "https://qflux.batistalab.com"

[project.optional-dependencies]
dev = [
    "ipykernel>=6.29.5",
    "rich>=13.9.4",
    "pre-commit>=4.1.0",
    "ruff>=0.9.6",
    "pytest>=8.3.4",
    "mypy>=1.15.0",
    "mkdocs>=1.6.1",
    "mkdocstrings-python>=1.15.0",
    "material-plausible-plugin>=0.3.0",
    "mkdocs-material>=9.6.4",
    "types-tqdm>=4.67.0.20241221",
]
gqme = ["mpsqd"]

[tool.mypy]
strict = true
ignore_missing_imports = true
exclude = ["tests"]
disable_error_code = ["unused-ignore"]

[[tool.mypy.overrides]]
# RDKit is not typed, so we ignore all errors in it
module = ["rdkit-stubs.*", "rdkit.*"]
ignore_errors = true

[tool.ruff]
line-length = 120
lint.select = [
    "E",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
]


# Section below is pretty standard logger configuration

[tool.logging]
version = 1
disable_existing_loggers = false

[tool.logging.formatters.standard]
format = "%(asctime)s [%(levelname)s] %(name)s (%(module)s:%(lineno)d): %(message)s"
datefmt = "%Y-%m-%d %H:%M:%S"

[tool.logging.handlers.console]
class = "logging.StreamHandler"
formatter = "standard"
stream = "ext://sys.stdout"

[tool.logging.loggers.qflux]
handlers = ["console"]
propagate = false
level = "INFO"
