{
  "title": "Flywheel Gear Manifest",
  "description": "The manifest expected to exist at /flywheel/v0/manifest.json in a gear image.",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "definitions": {
    "directive": {
      "oneOf": [
        {
          "$ref": "http://json-schema.org/draft-04/schema"
        }
      ],
      "description": "A schema directive."
    },
    "config-directive": {
      "allOf": [
        {
          "$ref": "http://json-schema.org/draft-04/schema"
        },
        {
          "properties": {
            "type": {
              "enum": [
                "string",
                "integer",
                "number",
                "boolean",
                "array"
              ]
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "not": {
            "required": [
              "default",
              "optional"
            ]
          }
        }
      ],
      "description": "A config schema directive."
    },
    "uriOrEmpty": {
      "type": "string",
      "maxLength": 1000,
      "anyOf": [
        {
          "format": "uri"
        },
        {
          "maxLength": 0
        }
      ],
      "description": "A valid URI, or empty string."
    },
    "classification": {
      "type": "object",
      "properties": {
        "function": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Conversion",
              "Curation",
              "Quality Assurance",
              "Utility",
              "Export",
              "Report",
              "Image Processing - Cardiac",
              "Image Processing - Diffusion",
              "Image Processing - Digital Pathology",
              "Image Processing - Functional",
              "Image Processing - Musculoskeletal",
              "Image Processing - Other",
              "Image Processing - Perfusion",
              "Image Processing - Segmentation",
              "Image Processing - Spectroscopy",
              "Image Processing - Structural",
              "Other"
            ]
          },
          "description": "The function category of the gear."
        },
        "modality": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AR",
              "AS",
              "ASMT",
              "AU",
              "BDUS",
              "BI",
              "BMD",
              "CD",
              "CF",
              "CP",
              "CR",
              "CS",
              "CT",
              "DD",
              "DF",
              "DG",
              "DM",
              "DOC",
              "DS",
              "DX",
              "EC",
              "ECG",
              "EEG",
              "EPS",
              "ES",
              "FID",
              "FP",
              "FS",
              "GM",
              "HD",
              "KO",
              "LEN",
              "LP",
              "LS",
              "MA",
              "MEG",
              "MG",
              "MR",
              "MS",
              "NIRS",
              "NM",
              "OAM",
              "OCT",
              "OT",
              "PT",
              "PR",
              "PX",
              "REG",
              "RESP",
              "RF",
              "RG",
              "RTDOSE",
              "RTIMAGE",
              "RTPLAN",
              "RTRECORD",
              "RTSTRUCT",
              "RWV",
              "SC",
              "SEG",
              "SM",
              "SMR",
              "SR",
              "SRF",
              "ST",
              "STAIN",
              "TG",
              "US",
              "VA",
              "VF",
              "XA",
              "XC",
              "Any",
              "Other"
            ]
          },
          "description": "The modality category of the gear"
        },
        "organ": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Adrenal",
              "Anus",
              "Appendix",
              "Biliary Tree",
              "Bladder",
              "Bone Marrow",
              "Brain",
              "Breast",
              "Esophagus",
              "Eyes",
              "Gallbladder",
              "Heart",
              "Kidney",
              "Large Bowel",
              "Liver",
              "Lung",
              "Ovary",
              "Pancreas",
              "Prostate",
              "Rectum",
              "Salivary Glands",
              "Skin",
              "Small Bowel",
              "Spleen",
              "Stomach",
              "Thyroid",
              "Uterus",
              "Multiple",
              "Other",
              "Any"
            ]
          },
          "description": "The organ category of the gear."
        },
        "species": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Animal",
              "Human",
              "Phantom",
              "Other",
              "Any"
            ]
          },
          "description": "The species category of the gear."
        },
        "therapeutic_area": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Cardiology/Vascular Disease",
              "Dental and Oral Health",
              "Dermatology",
              "Devices",
              "Endocrinology",
              "Family Medicine",
              "Gastroenterology",
              "Gene Therapy",
              "Genetic Disease",
              "Hematology",
              "Hepatology",
              "Immunology",
              "Infectious Disease",
              "Internal Medicine",
              "Musculoskeletal",
              "Nephrology",
              "Neurology",
              "Nutrition and Weight Loss",
              "Obstetrics & Gynecology",
              "Oncology",
              "Ophthalmology",
              "Orthopedics",
              "Otolaryngology",
              "Pediatrics & Neonatology",
              "Pharmacology & Toxicology",
              "Plastic Surgery",
              "Podiatry",
              "Psychiatry/Psychology",
              "Pulmonary/Respiratory Disease",
              "Rheumatology",
              "Sleep Medicine",
              "Trauma",
              "Urology",
              "Multiple",
              "Other",
              "Any"
            ]
          },
          "description": "The therapeutic area category of the gear."
        }
      },
      "description": "Classification categories for the gear used in the gear-exchange portal."
    }
  },
  "properties": {
    "author": {
      "type": "string",
      "maxLength": 100,
      "description": "The author of this gear."
    },
    "maintainer": {
      "type": "string",
      "maxLength": 100,
      "description": "(optional) The maintainer of this gear. Can be used to distinguish the algorithm author from the gear maintainer."
    },
    "cite": {
      "type": "string",
      "maxLength": 5000,
      "description": "(optional) Any citations relevant to the algorithm(s) or work present in the gear."
    },
    "config": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/config-directive"
      },
      "description": "Schema snippets describing the options this gear consumes. Not currently processed."
    },
    "custom": {
      "type": "object",
      "properties": {
        "flywheel": {
          "type": "object",
          "properties": {
            "classification": {
              "$ref": "#/definitions/classification"
            },
            "suite": {
              "type": "string",
              "description": "The suite the gear belongs to (used in the gear selection UI and gear-exchange portal)."
            },
            "show-job": {
              "type": "boolean",
              "description": "If set to true, the job ID is exposed in the config.json under job.id."
            },
            "invalid": {
              "type": "boolean",
              "description": "If set to true, this disables a gear from running entirely."
            },
            "module": {
              "type": "string",
              "description": "Requests a specific module to execute this gear. Currently only 'runsc' is respected."
            }
          }
        },
        "gear-builder": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "The category of the gear for the gear-builder."
            },
            "image": {
              "type": "string",
              "description": "The Docker image name for the gear-builder."
            }
          }
        }
      },
      "description": "A place for gear authors to put arbitrary information."
    },
    "description": {
      "type": "string",
      "maxLength": 5000,
      "description": "A brief description of the gear's purpose. Ideally 1-4 sentences."
    },
    "environment": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Environment variables that should be set for the gear."
    },
    "command": {
      "type": "string",
      "description": "If provided, the starting command for the gear, rather than /flywheel/v0/run. Will be templated according to the spec."
    },
    "inputs": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "enum": [
                  "file"
                ],
                "description": "The type of gear input."
              },
              "description": {
                "type": "string",
                "description": "Hackaround for description not technically being a schema directive"
              },
              "optional": {
                "type": "boolean",
                "description": "Allow the gear to mark an input file as optional."
              }
            },
            "required": [
              "base"
            ],
            "additionalProperties": {
              "$ref": "#/definitions/directive"
            },
            "description": "A file input, optionally using schema snippets to further refine the type of file taken."
          },
          {
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "enum": [
                  "context"
                ],
                "description": "The type of gear input."
              },
              "description": {
                "type": "string",
                "description": "Hackaround for description not technically being a schema directive"
              }
            },
            "required": [
              "base"
            ],
            "additionalProperties": false,
            "description": "A contextual input, retrieved from the environment on launch."
          },
          {
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "enum": [
                  "api-key"
                ],
                "description": "The type of gear input."
              },
              "description": {
                "type": "string",
                "description": "Hackaround for description not technically being a schema directive"
              },
              "read-only": {
                "type": "boolean",
                "description": "Requests that the provisioned API key be only allowed read access."
              }
            },
            "required": [
              "base"
            ],
            "additionalProperties": false,
            "description": "An api-key input for accessing data with an SDK."
          }
        ]
      },
      "description": "Schema snippets describing the inputs this gear consumes."
    },
    "output_configuration": {
      "type": "object",
      "properties": {
        "enforce_file_version_match": {
          "type": "boolean",
          "description": "Force file version match when engine is modifying a file",
          "default": false
        }
      },
      "description": "A configuration for outputs"
    },
    "capabilities": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "A set of features the gear requires to run (for example, networking)."
    },
    "label": {
      "type": "string",
      "maxLength": 100,
      "description": "The human-friendly name of this gear."
    },
    "license": {
      "type": "string",
      "enum": [
        "AFL-1.1",
        "AFL-1.2",
        "AFL-2.0",
        "AFL-2.1",
        "AFL-3.0",
        "APL-1.0",
        "Apache-1.1",
        "Apache-2.0",
        "APSL-1.0",
        "APSL-1.1",
        "APSL-1.2",
        "APSL-2.0",
        "Artistic-1.0",
        "Artistic-1.0-Perl",
        "Artistic-1.0-cl8",
        "Artistic-2.0",
        "AAL",
        "BSL-1.0",
        "BSD-2-Clause",
        "BSD-3-Clause",
        "0BSD",
        "CECILL-2.1",
        "CNRI-Python",
        "CDDL-1.0",
        "CPAL-1.0",
        "CPL-1.0",
        "CATOSL-1.1",
        "CUA-OPL-1.0",
        "EPL-1.0",
        "ECL-1.0",
        "ECL-2.0",
        "EFL-1.0",
        "EFL-2.0",
        "Entessa",
        "EUDatagrid",
        "EUPL-1.1",
        "Fair",
        "Flywheel MSA",
        "Frameworx-1.0",
        "AGPL-3.0",
        "GPL-2.0",
        "GPL-3.0",
        "LGPL-2.1",
        "LGPL-3.0",
        "LGPL-2.0",
        "HPND",
        "IPL-1.0",
        "Intel",
        "IPA",
        "ISC",
        "LPPL-1.3c",
        "LiLiQ-P-1.1",
        "LiLiQ-Rplus-1.1",
        "LiLiQ-R-1.1",
        "LPL-1.02",
        "LPL-1.0",
        "MS-PL",
        "MS-RL",
        "MirOS",
        "MIT",
        "Motosoto",
        "MPL-1.0",
        "MPL-1.1",
        "MPL-2.0",
        "MPL-2.0-no-copyleft-exception",
        "Multics",
        "NASA-1.3",
        "Naumen",
        "NGPL",
        "Nokia",
        "NPOSL-3.0",
        "NTP",
        "OCLC-2.0",
        "OGTSL",
        "OSL-1.0",
        "OSL-2.0",
        "OSL-2.1",
        "OSL-3.0",
        "OSET-PL-2.1",
        "PHP-3.0",
        "PostgreSQL",
        "Python-2.0",
        "QPL-1.0",
        "RPSL-1.0",
        "RPL-1.1",
        "RPL-1.5",
        "RSCPL",
        "OFL-1.1",
        "SimPL-2.0",
        "Sleepycat",
        "SISSL",
        "SPL-1.0",
        "Watcom-1.0",
        "UPL-1.0",
        "NCSA",
        "VSL-1.0",
        "W3C",
        "Xnet",
        "Zlib",
        "ZPL-2.0",
        "Other"
      ],
      "description": "The name of the license that applies to this gear. Must be an OSI-approved SPDX license string or 'Other'. Ref: https://spdx.org/licenses Example: apache-2.0"
    },
    "name": {
      "type": "string",
      "maxLength": 100,
      "pattern": "^[a-z0-9\\-]+$",
      "description": "The identification of this gear."
    },
    "source": {
      "$ref": "#/definitions/uriOrEmpty",
      "description": "Where to go for the source algorithm that the gear is wrapping, if applicable. Just point to the URL value if not applicable."
    },
    "url": {
      "$ref": "#/definitions/uriOrEmpty",
      "description": "The URL where to go to learn more about the gear. You can leave this blank."
    },
    "version": {
      "type": "string",
      "maxLength": 100,
      "description": "A human-friendly string explaining the release version of this gear. Example: 3.2.1"
    },
    "flywheel": {
      "description": "A currently-unused key. Ignored if present."
    }
  },
  "required": [
    "author",
    "config",
    "description",
    "inputs",
    "label",
    "license",
    "name",
    "source",
    "url",
    "version"
  ],
  "additionalProperties": false
}
