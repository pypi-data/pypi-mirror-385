[project]
name = "shared-call-py"
version = "0.1.2"
description = "Request coalescing for Python - eliminate redundant work and protect your systems from thundering herds"
authors = [
    {name = "SohamRatnaparkhi",email = "soham.ratnaparkhi@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-asyncio = "^1.2.0"
pytest-cov = "^7.0.0"
ruff = "^0.14.1"
black = "^25.9.0"
mypy = "^1.18.2"
build = "^1.3.0"
twine = "^6.2.0"

[tool.ruff]
line-length = 100
target-version = "py312"
include = ["src/**/*.py", "tests/**/*.py"]
exclude = [".git", "__pycache__", "build", "dist", ".venv"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "RUF",    # Ruff-specific rules
    "SIM",    # flake8-simplify
    "LOG",    # flake8-logging
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "PERF",   # Perflint
    "FURB",   # refurb
    "ASYNC",  # flake8-async
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "E203",   # whitespace before ':'
    "UP045"
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]  # Use of assert in tests is fine

[tool.ruff.lint.isort]
known-first-party = ["shared_call_py"]
known-third-party = ["pytest"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.lint.pylint]
max-args = 5
max-branches = 12
max-statements = 50

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
show_missing = true

[project.urls]
Homepage = "https://github.com/SohamRatnaparkhi/shared-call-py"
Repository = "https://github.com/SohamRatnaparkhi/shared-call-py"