[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "tno.quantum.optimization.qubo.solvers"
description = "QUBO solvers"
readme = "README.md"
authors = [{ name = "TNO Quantum Code Lab", email = "tnoquantum@tno.nl" }]
maintainers = [{ name = "TNO Quantum Code Lab", email = "tnoquantum@tno.nl" }]
keywords = ["TNO", "Quantum", "Optimization", "QUBO", "Solvers"]
license = { text = "Apache License, Version 2.0" }
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Typing :: Typed",
]
urls = { Homepage = "https://github.com/TNO-Quantum/", Documentation = "https://github.com/TNO-Quantum/", Source = "https://github.com/TNO-Quantum/optimization.qubo.solvers" }
dynamic = ["version"]
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "tno.quantum.utils~=5.0",
     "tno.quantum.optimization.qubo.components~=1.0,>=1.0.2",
]

[project.optional-dependencies]
dwave = [
    "dwave-system>=1.30",
    "dwave-hybrid>=0.6.14",
    "dwave-samplers>=1.4",
    "dwave-preprocessing>=0.6.8",
]
qubovert = ["qubovert~=1.1"]
dqo = [
    "torch",
    "pennylane",
    "tqdm",
    "matplotlib",
]
# During development it is not recommended to use `pip install .[all]` as local changes
# in the optionals are not reflected. Consider explicitly installing all dependencies via
# `pip installl .[dwave,qubovert,dqo]`.
all = ["tno.quantum.optimization.qubo.solvers[dwave,qubovert,dqo]"]
tests = [
    "pennylane-lightning",
    "pytest>=8.1.1",
    "pytest-cov>=4.1.0",
    "tomlkit",
    "tno.quantum.optimization.qubo.solvers[all]",
    "tno.quantum.optimization.qubo.preprocessors~=1.0",
]

[tool.setuptools]
platforms = ["any"]

[tool.setuptools.dynamic]
version = { attr = "tno.quantum.optimization.qubo.solvers.__version__" }

[tool.setuptools.package-data]
"*" = ["py.typed"]
