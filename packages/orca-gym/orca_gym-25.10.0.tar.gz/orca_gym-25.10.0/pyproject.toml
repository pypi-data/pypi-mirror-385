[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "orca-gym"
version = "25.10.0"
description = "OrcaGym Core - Cloud-native robotics simulation platform compatible with Gymnasium API"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "松应科技", email = "huangwei@orca3d.cn"}
]
keywords = ["robotics", "simulation", "reinforcement-learning", "gymnasium", "mujoco"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Core dependencies only - for orca_gym core modules (core, environment, protos, scene, utils)
dependencies = [
    "numpy>=2.0.0",
    "scipy",
    "scipy-stubs",
    "grpcio==1.66.1",
    "grpcio-tools==1.66.1",
    "gymnasium>=1.0.0",
    "mujoco>=3.3.0",
    "aiofiles",
]

[project.urls]
Homepage = "https://github.com/openverse-orca/OrcaGym"
Documentation = "https://github.com/openverse-orca/OrcaGym"
Repository = "https://github.com/openverse-orca/OrcaGym"
"Bug Tracker" = "https://github.com/openverse-orca/OrcaGym/issues"

# Optional dependencies for additional features
[project.optional-dependencies]
# Development tools
dev = [
    "pytest",
    "pytest-cov",
    "flake8",
    "black",
    "mypy",
]

# RL training with stable-baselines3
rl = [
    "stable-baselines3>=2.3.2",
    "sb3_contrib>=2.3.0",
    "tensorboard",
]

# Imitation learning and dataset handling
imitation = [
    "h5py",
    "opencv-python",
    "tqdm",
]

# Input devices (keyboard, joystick)
devices = [
    "pygame>=2.6.0",
]

# Camera and sensor support
sensors = [
    "websockets",
    "av",
    "opencv-python",
    "matplotlib",
]

# Tools and utilities
tools = [
    "pyyaml",
    "trimesh",
    "requests",
    "tqdm",
]

# Adapters for robomimic
robomimic = [
    "h5py",
    "termcolor",
    "opencv-python",
]

# Adapters for robosuite
robosuite = [
    "numba",
]

# All optional dependencies
all = [
    "stable-baselines3>=2.3.2",
    "sb3_contrib>=2.3.0",
    "tensorboard",
    "h5py",
    "opencv-python",
    "tqdm",
    "pygame>=2.6.0",
    "websockets",
    "av",
    "matplotlib",
    "pyyaml",
    "trimesh",
    "requests",
    "termcolor",
    "numba",
    "flask",
]

[tool.setuptools.packages.find]
# Only include orca_gym package, exclude examples, envs, doc, 3rd_party
include = ["orca_gym*"]
exclude = ["examples*", "envs*", "doc*", "3rd_party*", "tests*"]

[tool.setuptools.package-data]
orca_gym = ["*.proto", "py.typed"]
