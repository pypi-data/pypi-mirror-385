[tool.poetry]
name = "dev-tools-eagle-test"
version = "0.4.0"
description = "Implements LangGraph based agents following the CoALA framework."
authors = ["Pedro Henrique Thompson Furtado <pedrothompson@petrobras.com.br>"]
readme = "README.md"
packages = [{ include = "eagle"}]  

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
langchain = ">=1.0.0"
langchain-openai = ">=1.0.0"
langchain-community = ">=0.4"
langchain-core = ">=1.0.0"
langgraph = ">=1.0.0"
langsmith = ">=0.1.17"
numpy = ">1.26.4, <2.2.6"
tenacity = ">= 8.4.0, <9.0.0"
async-timeout = ">=4.0.0, <5.0.0"
SQLAlchemy = ">=1.4, <2.0.42"
aiohttp = ">=3.8.3, <3.12.7"
osisoft-pidevclub-piwebapi-thompsonp17 = ">=1.2.0"
python-levenshtein = ">=0.25.1"
pyvis = ">=0.3.2"
networkx = ">=3.4.2"
scikit-learn = ">=1.5.0"
matplotlib = ">=3.10.0"
plotly = ">=6.0.0"
ipywidgets = ">=8.1.3"
lark = ">=1.1.9"
pyarrow = ">=16.1.0"
fastparquet = ">=2024.5.0"
openpyxl = ">=3.1.4"
tabulate = ">=0.9.0"
requests = ">=2.32.5"
jupyterlab = ">=4.4.2"
pandas = ">=2.3.3"
jinja2 = ">=3.1.5"
restrictedpython = ">=7.0"
func-timeout = ">=4.3.5"
python-dotenv = ">=1.0.1"
opensearch-py = ">=2.7.1, <4.0.0"
filelock = ">=3.17.0"
pydantic = ">=2.10.6"
xlrd = ">=2.0.1"
arxiv = ">=2.1.3"
duckduckgo-search = ">=8.0.1"
yfinance = ">=0.2.59"
curl-cffi = ">=0.10.0"
jupyter-contrib-nbextensions = ">=0.7.0"
pypdf = "^6.0.0"
dash = "^3.2.0"
dash-bootstrap-components = "^2.0.4"
dash-html-components = "^2.0.0"
pdf2image = "^1.17.0"
kaleido = "^1.1.0"
poppler-utils = "^0.1.0"
neo4j = "^6.0.2"

[[tool.poetry.source]]
name = "nexuspetrobras"
url = "https://nexus.petrobras.com.br/repository/pypi-proxy/simple"

[[tool.poetry.source]]
name = "nexuspetrobras-internal-snapshots"
url = "https://nexus.petrobras.com.br/repository/pypi-internal-snapshots/simple"

[[tool.poetry.source]]
name = "nexuspetrobras-internal"
url = "https://nexus.petrobras.com.br/repository/pypi-internal/simple"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
coverage = "^7.6.1"
pytest-ordering = "^0.6"
pytest-asyncio = "^0.26.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
faulthandler_timeout = 10000
markers = [
    "last: marks a test as the last one.",
    "first: marks a test as the first one."
]

[tool.coverage.run]
branch = true
source = ["smartassistant_tools"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
