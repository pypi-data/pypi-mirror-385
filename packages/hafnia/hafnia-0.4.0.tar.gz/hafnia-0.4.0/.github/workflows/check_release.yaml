name: Check Release and Publish
on:
  workflow_call:
    inputs:
      package-version:
        required: true
        type: string
    outputs:
      make_release:
        description: "Whether to create a new release"
        value: ${{ jobs.release.outputs.make_release }}

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      make_release: ${{ steps.check_release.outputs.make_release }}
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v5.0.0
        with:
            name: python-package
            path: dist/

      - name: Verify package files
        run: |
          if [ -z "$(ls -A dist/)" ]; then
              echo "❌ No package files found in the artifact"
              exit 1
          fi
          echo "✅ Found the following package files:"
          ls -la dist/

      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ inputs.package-version }}"
          echo "Checking if release tag exists: $TAG"

          if gh release view "$TAG" --repo="$GITHUB_REPOSITORY" &>/dev/null; then
            echo "Release $TAG already exists. Skipping release creation."
            echo "make_release=false" >> $GITHUB_OUTPUT
          else
            echo "Release does not exist. Will create new release."
            echo "make_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check_release.outputs.make_release == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ inputs.package-version }}"
          echo "Creating release tag: $TAG"
          
          gh release create "$TAG" --repo="$GITHUB_REPOSITORY" \
            --title="${GITHUB_REPOSITORY#*/} ${{ inputs.package-version }}" \
            --generate-notes
