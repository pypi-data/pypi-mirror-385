name: openghg_defs workflow

on:
  push:
    tags:
      - "*"
  pull_request:
    branches: [main, devel]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Install dev requirements
        run: |
          pip install -r requirements-dev.txt
      - name: Install package
        run: |
          pip install .
      - name: Run tests
        run: |
          pytest .

  release_testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-') && contains(github.ref_name, '.')
    environment:
      name: testpypi
      url: https://test.pypi.org/p/openghg-defs
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build backend
        run: python3 -m pip install build --user

      - name: Build distributions
        run: python3 -m build

      - name: Publish to Test PyPI (via Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1

  release_pypi:
    name: Build and publish Python distributions üì¶ to PyPI (PEP 621, Trusted Publishing)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-') && contains(github.ref_name, '.')
    environment: 
      name: pypi
      url: https://pypi.org/p/openghg-defs
    permissions:
      id-token: write  # Required for Trusted Publishing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build backend
        run: python3 -m pip install build --user

      - name: Build distributions
        run: python3 -m build

      - name: Publish to PyPI (via Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1

  release_conda:
    name: Build and publish conda package
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@422500192359a097648154e8db4e39bdb6c6eed7
        with:
          init-shell: bash

      - name: Build the conda package
        run: |
          micromamba create -n openghg_build anaconda-client boa -c conda-forge -y
          micromamba activate openghg_build

          VERSION=${GITHUB_REF_NAME}  # e.g., 0.0.5
          mkdir ${{ github.workspace }}/build

          # Pass version into meta.yaml via env var
          PKG_VERSION=$VERSION conda mambabuild \
            --croot ${{ github.workspace }}/build \
            recipes \
            -c conda-forge

          BUILD_DIR=${GITHUB_WORKSPACE}/build
          BUILD=$(find "$BUILD_DIR" -name '*.tar.bz2')

          anaconda --token "$ANACONDA_TOKEN" upload --user openghg "$BUILD"
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
