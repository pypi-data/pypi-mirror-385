stages:
  - test
  - deploy

pre-commit:
  image: registry.cern.ch/docker.io/library/python:3.9
  stage: test
  before_script:
    - pip install pre-commit
    # TODO: There should be a proper way of doing this
    - curl -o lb-check-copyright "https://gitlab.cern.ch/lhcb-core/LbDevTools/raw/master/LbDevTools/SourceTools.py?inline=false"
    - chmod +x lb-check-copyright
  script:
    - pre-commit run --all-files
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
      - ${PRE_COMMIT_HOME}

# test:
#   stage: test
#   image: 'registry.cern.ch/docker.io/library/python:$PY_VER'

#   script:
#     - pip install '.[testing]'
#     - pytest -vvv

#   parallel:
#     matrix:
#       - PY_VER: ["3.6", "3.8", "3.9"]

test:
  image: registry.cern.ch/docker.io/condaforge/mambaforge
  stage: test
  before_script:
    - mamba env create --name test-env --file environment.yaml
    - eval "$(python -m conda shell.bash hook)"
    - conda activate test-env
    - pip install '.[testing]'
  script:
    - pytest -vvv --cov --cov-report term --cov-report xml:coverage.xml

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test-build:
  stage: test
  image: registry.cern.ch/docker.io/library/python:3.9
  before_script:
    - pip install build
  script:
    - python -m build



# Packaging step
deploy-packages:
  stage: deploy
  only:
    - tags@lhcb-dpa/analysis-productions/lbapcommon
  image: registry.cern.ch/docker.io/library/python:3.9
  before_script:
    - pip install build twine
  script:
    - python -m build
    - if [ -z "$TWINE_PASSWORD" ] ; then echo "Set TWINE_PASSWORD in CI variables" ; exit 1 ; fi
    - twine upload -u __token__ dist/*
