[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "wise-decision-engine"
version = "0.1.9"
authors = [
    {name = "Five Acts", email = "dev@five-acts.com"},
]
description = "Uma abstração moderna e inteligente para zen-engine com otimizações avançadas para Spark/Databricks"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Database",
]
keywords = ["zen-engine", "databricks", "spark", "decision-engine", "schema-inference"]

dependencies = [
    "zen-engine>=0.1.0",
    "pandas>=1.3.0",
    "pyspark>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0",
    "pytest-mock>=3.0",
    "testcontainers>=3.4.0",
]
security = [
    "safety>=1.10.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/five-acts/wise-decision-engine"
Repository = "https://github.com/five-acts/wise-decision-engine.git"
Documentation = "https://github.com/five-acts/wise-decision-engine/wiki"
"Bug Tracker" = "https://github.com/five-acts/wise-decision-engine/issues"
Changelog = "https://github.com/five-acts/wise-decision-engine/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
include = ["wise_decision_engine*"]
exclude = ["tests*", "examples*", "demos*", "development_notes*", "archive*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["wise_decision_engine"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "examples/*",
    "demos/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".tox",
    ".venv",
    "venv",
]

[tool.bandit]
exclude_dirs = ["tests", "examples", "demos"]
skips = ["B101"]  # Skip assert_used test