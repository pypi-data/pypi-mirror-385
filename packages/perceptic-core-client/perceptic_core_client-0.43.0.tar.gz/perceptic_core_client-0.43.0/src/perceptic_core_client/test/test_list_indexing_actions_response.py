# coding: utf-8

"""
    perceptic-core-server API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1-SNAPSHOT
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perceptic_core_client.models.list_indexing_actions_response import ListIndexingActionsResponse

class TestListIndexingActionsResponse(unittest.TestCase):
    """ListIndexingActionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListIndexingActionsResponse:
        """Test ListIndexingActionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListIndexingActionsResponse`
        """
        model = ListIndexingActionsResponse()
        if include_optional:
            return ListIndexingActionsResponse(
                actions = [
                    perceptic_core_client.models.indexing_action_dto.IndexingActionDto(
                        action_type = 'INDEX', 
                        target_uri = '', 
                        target_minimum_version = 56, 
                        status = 'PENDING', 
                        error_message = '', 
                        executed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        reason = '', )
                    ],
                total_actions = 56,
                next_offset = 56,
                pending_count = 56,
                executing_count = 56,
                succeeded_count = 56,
                failed_count = 56,
                index_count = 56,
                delete_count = 56
            )
        else:
            return ListIndexingActionsResponse(
        )
        """

    def testListIndexingActionsResponse(self):
        """Test ListIndexingActionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
