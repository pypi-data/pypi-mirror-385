# coding: utf-8

"""
    perceptic-core-server API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1-SNAPSHOT
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from perceptic_core_client.models.json_node import JsonNode

class TestJsonNode(unittest.TestCase):
    """JsonNode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonNode:
        """Test JsonNode
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonNode`
        """
        model = JsonNode()
        if include_optional:
            return JsonNode(
                empty = True,
                value_node = True,
                container_node = True,
                missing_node = True,
                array = True,
                object = True,
                node_type = 'ARRAY',
                pojo = True,
                number = True,
                integral_number = True,
                floating_point_number = True,
                short = True,
                int = True,
                long = True,
                var_float = True,
                double = True,
                big_decimal = True,
                big_integer = True,
                textual = True,
                boolean = True,
                null = True,
                binary = True
            )
        else:
            return JsonNode(
        )
        """

    def testJsonNode(self):
        """Test JsonNode"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
