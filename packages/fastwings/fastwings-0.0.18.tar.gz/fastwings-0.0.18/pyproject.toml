# ======================================================================
# Build System Configuration
# ======================================================================
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# ======================================================================
# Project Metadata
# ======================================================================
[project]
name = "fastwings"
version = "0.0.18"
description = "Provides several modules that help improve web application development using FastAPI"
readme = "README.md"
keywords = ["fastwings", "fastapi_base", "fastapi_utils", "fastapi_helper", "fastapi"]
authors = [
    { name = "Dao Quang Duy", email = "duydaoquang12@gmail.com" },
]
maintainers = [
    { name = "Rabiloo Developers", email = "oss@rabiloo.com" },
]
license = { text = "The MIT License" }
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 2 - Pre-Alpha",
]

# Core dependencies (from install_requires)
dependencies = [
    "loguru==0.7.3",
    "pydantic-settings==2.11.0",
    "inflect==7.5.0",
    "sqlmodel==0.0.27"
]

# Optional dependencies (from extras_require)
[project.optional-dependencies]
dev = [
    "ruff",
    "typos",
    "mypy",
    "pytest",
    "coverage",
    "pytest-cov",
    "pytest-mock",
    "pytest-asyncio",
    "httpx",
    "numpy==2.2.6",
]

logger-logstash = [
    "python-logstash==0.4.8"
]
logger-ggchat = [
    "requests==2.32.5"
]
logger = [
    "fastwings[logger-logstash]",
    "fastwings[logger-ggchat]"
]

db-pg = [
    "SQLAlchemy==2.0.43",
    "tenacity==9.1.2",
    "psycopg2-binary==2.9.10",
]
db-asyncpg = [
    "SQLAlchemy==2.0.43",
    "tenacity==9.1.2",
    "psycopg2-binary==2.9.10",
    "asyncpg==0.30.0",
]
db-my = [
    "SQLAlchemy==2.0.43",
    "tenacity==9.1.2",
    "PyMySQL==1.1.2"
]
db-asyncmy = [
    "SQLAlchemy==2.0.43",
    "asyncmy==0.2.10",
]
db = [
    "fastwings[db-pg]",
    "fastwings[db-asyncpg]",
    "fastwings[db-my]",
    "fastwings[db-asyncmy]",
]
fastapi = [
    "fastapi==0.119.0",
    "fastapi_health==0.4.0",
    "passlib==1.7.4",
    "python-multipart==0.0.20",
    "bcrypt==4.3.0",
    "python-jose==3.5.0",
    "uvicorn[standard]==0.37.0",
]

all = [
    "fastwings[logger]",
    "fastwings[db]",
    "fastwings[fastapi]",
]

[project.urls]
"Homepage" = "https://github.com/rabiloo/fastapi-base"
"Repository" = "https://github.com/rabiloo/fastapi-base"
"Bug Tracker" = "https://github.com/rabiloo/fastapi-base/issues"

# ======================================================================
# Ruff Linter and Formatter Configuration
# ======================================================================
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
extend-select = [
    # pycodestyle
    "E",
    "W",
    "D",
    # Pyflakes
    "F",
    # isort
    "I",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-builtins
    "A",
    # flake8-bandit
    "S",
    # flake8-logging-format
    "G",
    # mccabe complexity checks
    "C90"
]
ignore = [
    # f-string format
    "UP032",
    # logging-f-string format
    "G004",
    # undocumented-public-package
    "D104",
]

[tool.ruff.lint.isort]
known-first-party = ["rag", "tests"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D100", "D101"]
"*_test.py" = ["S101", "D100", "D101"]
"test_*.py" = ["S101", "D100", "D101"]

"examples/*" = ["D100"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


# ======================================================================
# Typos Spell Checker Configuration
# ======================================================================
[tool.typos.files]
extend-exclude = []

[tool.typos.default]
binary = false
check-filename = true
check-file = true
unicode = true
ignore-hex = true

[tool.typos.default.extend-identifiers]

[tool.typos.default.extend-words]
aadd = "aadd"
embedd = "embedd"
nin = "nin"

[tool.typos.type.py]

[tool.typos.type.py.extend-identifiers]

[tool.typos.type.py.extend-words]

# ======================================================================
# Mypy Static Type Checker Configuration
# ======================================================================
[tool.mypy]
python_version = "3.10"

# --- Strictness Settings ---
check_untyped_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_any_generics = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false

# --- Import Following ---
follow_imports = "normal"

# --- Reporting Settings ---
show_error_codes = true
show_column_numbers = true
show_traceback = true

# --- Per-module Overrides ---
# This is how [mypy-module.*] sections are translated.

[[tool.mypy.overrides]]
module = [
    # Logging & Monitoring
    "loguru.*",
    "logstash.*",
    # Async & Concurrency
    "asyncio.*",
    "asyncpg.*",
    # Web Framework & API
    "fastapi_health.*",
    "pydantic.*",
    "sqlmodel.*",
    "requests.*",
    # Security & Authentication
    "jose.*",
    "passlib.*",
    # Build & Performance
    "setuptools.*",
    "Cython.*",
    "isort.*",
]
ignore_missing_imports = true

# ======================================================================
# Coverage Configuration
# ======================================================================
[tool.coverage.run]
branch = true
source = ["fastwings"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    # Don't complain about abstract methods, they aren't run;
    "@(abc\\.)?abstractmethod"
]
show_missing = true
skip_covered = true

[tool.coverage.xml]
output = "coverage-reports/coverage.xml"