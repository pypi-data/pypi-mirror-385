version: '2'
rules:
- id: flip-comparison
  description: Moves variables from the right side to the left side of comparisons
  explanation: |
    It is a coding convention that when doing comparisons to a numeric constant, the
    number should be on the right and the variable on the left. Having things be
    consistent in this way makes the code easier to read.
  language:
  - javascript
  - typescript
  tags:
  - default
  any:
  - pattern: |
      ${left} == ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} == ${left}
  - pattern: |
      ${left} === ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} === ${left}
  - pattern: |
      ${left} != ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} != ${left}
  - pattern: |
      ${left} !== ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} !== ${left}
  - pattern: |
      ${left} > ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} < ${left}
  - pattern: |
      ${left} < ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} > ${left}
  - pattern: |
      ${left} >= ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} <= ${left}
  - pattern: |
      ${left} <= ${right}
    condition: left.is_numeric_literal() and not right.is_numeric_literal()
    replacement: |
      ${right} >= ${left}
  tests:
  - match: 1 == a
    expect: a == 1
  - match: 3.14 > b
    expect: b < 3.14
  - no-match: 1 == 2
  - no-match: c == d
