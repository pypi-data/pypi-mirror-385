version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile
    container_name: {{APP_NAME}}-backend
    ports:
      - "{{BACKEND_PORT}}:{{BACKEND_PORT}}"
    environment:
      - DATABASE_URL={{DATABASE_URL}}
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:{{FRONTEND_PORT}}
      - JWT_SECRET=${JWT_SECRET:-dev-secret}
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/__pycache__
    depends_on:
      - db
      - redis
    networks:
      - {{APP_NAME}}-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.frontend
    container_name: {{APP_NAME}}-frontend
    ports:
      - "{{FRONTEND_PORT}}:80"
    environment:
      - REACT_APP_API_URL=http://localhost:{{BACKEND_PORT}}
    depends_on:
      - backend
    networks:
      - {{APP_NAME}}-network
    restart: unless-stopped

  db:
    image: {{DATABASE_IMAGE}}
    container_name: {{APP_NAME}}-db
    environment:
      {{#IF_POSTGRES}}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-{{APP_NAME}}}
      {{/IF_POSTGRES}}
      {{#IF_MYSQL}}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root}
      - MYSQL_DATABASE=${DB_NAME:-{{APP_NAME}}}
      - MYSQL_USER=${DB_USER:-user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-password}
      {{/IF_MYSQL}}
    volumes:
      - {{APP_NAME}}_db_data:/var/lib/{{DATABASE_TYPE}}/data
    ports:
      - "{{DATABASE_PORT}}:{{DATABASE_PORT}}"
    networks:
      - {{APP_NAME}}-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: {{APP_NAME}}-redis
    command: redis-server --appendonly yes
    volumes:
      - {{APP_NAME}}_redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - {{APP_NAME}}-network
    restart: unless-stopped

  {{#IF_NGINX}}
  nginx:
    image: nginx:alpine
    container_name: {{APP_NAME}}-nginx
    volumes:
      - ./deployment/configs/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - {{APP_NAME}}-network
    restart: unless-stopped
  {{/IF_NGINX}}

networks:
  {{APP_NAME}}-network:
    driver: bridge

volumes:
  {{APP_NAME}}_db_data:
  {{APP_NAME}}_redis_data: