name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

{{#IF_NODE}}
    - name: Run npm audit
      if: hashFiles('package-lock.json') != ''
      run: |
        npm audit --audit-level=moderate || true
        npm audit fix --force --audit-level=moderate || true
{{/IF_NODE}}

{{#IF_PYTHON}}
    - name: Run Python security checks
      if: hashFiles('**/*.py') != ''
      run: |
        pip install safety bandit
        safety check || true
        bandit -r . -f json -o bandit-results.json || true
{{/IF_PYTHON}}

    - name: Check for secrets
      run: |
        # Check for hardcoded secrets
        if git diff HEAD~1..HEAD | grep -iE "(password|secret|key|token).*=.*['\"]" | grep -v ".example"; then
          echo "::warning::Potential secrets detected in recent commits"
        fi

    - name: Upload security results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Create security report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let comment = '## ðŸ”’ Security Scan Results\n\n';

          // Add scan results summary
          comment += 'âœ… Security scan completed\n';
          comment += '{{SECURITY_CHECKS|Standard checks passed}}\n';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });