# Contract Test Specification
# Task: {{TASK_ID}} - {{TASK_DESC}}
# Layer: {{LAYER}}
# Category: {{CATEGORY}}
# Generated: $(date -Iseconds)

name: "{{TASK_ID}} Contract Test"
description: "Contract validation for {{TASK_DESC}}"

provider:
  name: "Service Provider"
  version: "1.0.0"

consumer:
  name: "Service Consumer"
  version: "1.0.0"

interactions:
  - description: "Valid request/response contract"
    request:
      method: "POST"
      path: "/api/endpoint"
      headers:
        Content-Type: "application/json"
      body:
        # TODO: Define request schema
        type: object
        properties:
          field1:
            type: string
            required: true
          field2:
            type: number
            required: false

    response:
      status: 200
      headers:
        Content-Type: "application/json"
      body:
        # TODO: Define response schema
        type: object
        properties:
          id:
            type: string
            required: true
          result:
            type: object
            required: true

  - description: "Error response contract"
    request:
      method: "POST"
      path: "/api/endpoint"
      headers:
        Content-Type: "application/json"
      body:
        # Invalid request
        type: object
        properties:
          invalid_field:
            type: string

    response:
      status: 400
      headers:
        Content-Type: "application/json"
      body:
        type: object
        properties:
          error:
            type: string
            required: true
          details:
            type: array
            required: false

validation_rules:
  - name: "Response time"
    type: "performance"
    threshold: "< 500ms"

  - name: "Schema compliance"
    type: "structure"
    strict: true

  - name: "Backward compatibility"
    type: "compatibility"
    level: "must"

metadata:
  task_id: "{{TASK_ID}}"
  layer: "{{LAYER}}"
  category: "{{CATEGORY}}"
  generated: "$(date -Iseconds)"