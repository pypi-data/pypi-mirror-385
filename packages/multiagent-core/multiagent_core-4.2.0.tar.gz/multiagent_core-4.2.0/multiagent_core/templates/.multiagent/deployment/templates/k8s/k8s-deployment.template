apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{APP_NAME}}-deployment
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
    version: {{VERSION}}
spec:
  replicas: {{REPLICAS}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{APP_NAME}}
  template:
    metadata:
      labels:
        app: {{APP_NAME}}
        version: {{VERSION}}
    spec:
      containers:
      - name: {{APP_NAME}}
        image: {{IMAGE_REGISTRY}}/{{APP_NAME}}:{{VERSION}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{PORT}}
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{APP_NAME}}-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: {{APP_NAME}}-config
              key: redis-url
        - name: LOG_LEVEL
          value: "{{LOG_LEVEL}}"
        resources:
          requests:
            memory: "{{MEMORY_REQUEST}}"
            cpu: "{{CPU_REQUEST}}"
          limits:
            memory: "{{MEMORY_LIMIT}}"
            cpu: "{{CPU_LIMIT}}"
        livenessProbe:
          httpGet:
            path: /health
            port: {{PORT}}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: {{PORT}}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{APP_NAME}}-config
      imagePullSecrets:
      - name: {{IMAGE_PULL_SECRET}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{APP_NAME}}-service
  namespace: {{NAMESPACE}}
  labels:
    app: {{APP_NAME}}
spec:
  type: {{SERVICE_TYPE}}
  ports:
  - port: {{SERVICE_PORT}}
    targetPort: {{PORT}}
    protocol: TCP
    name: http
  selector:
    app: {{APP_NAME}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{APP_NAME}}-config
  namespace: {{NAMESPACE}}
data:
  redis-url: "redis://{{APP_NAME}}-redis:6379"
  app.conf: |
    LOG_LEVEL={{LOG_LEVEL}}
    ENVIRONMENT={{ENVIRONMENT}}
    MAX_CONNECTIONS={{MAX_CONNECTIONS}}