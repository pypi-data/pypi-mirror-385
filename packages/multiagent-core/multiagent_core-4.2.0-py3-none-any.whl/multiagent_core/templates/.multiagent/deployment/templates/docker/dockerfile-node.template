# Node.js Application Dockerfile Template
FROM node:{{NODE_VERSION}}-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
{{#IF_YARN}}COPY yarn.lock ./{{/IF_YARN}}

# Install dependencies
{{#IF_YARN}}
RUN yarn install --frozen-lockfile
{{ELSE}}
RUN npm ci
{{/IF_YARN}}

# Copy source code
COPY . .

# Build if needed
{{#IF_BUILD}}
RUN npm run build
{{/IF_BUILD}}

# Production stage
FROM node:{{NODE_VERSION}}-alpine

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy from builder
COPY --from=builder --chown=nodejs:nodejs /app .

USER nodejs

# Environment
ENV NODE_ENV=production \
    PORT={{PORT}}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node healthcheck.js || exit 1

EXPOSE {{PORT}}

CMD ["node", "{{ENTRY_POINT}}"]