# pyproject.toml
[build-system]
requires = ["setuptools", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[project]
name = "gridr"
version = "0.4.3"
description = "Geometric and Radiometric Image Data Resampling"
authors = [ {name="CNES", email="gridr-cnes@cnes.fr"} ]
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",    
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
  "numpy>=1.25",
  "scipy>=1.10.1",
  "rasterio>=1.3.11",
  "typing_extensions>=4.15.0",
]

[project.urls]
Homepage = "https://gridr.readthedocs.io"
Documentation = "https://gridr.readthedocs.io/en/latest/"
Repository = "https://github.com/CNES/gridr"
Issues = "https://github.com/CNES/gridr/issues"
Changelog = "https://github.com/CNES/gridr/blob/main/CHANGELOG.md"


[tool.setuptools.packages]
# Pure Python packages/modules
find = { where = ["python"] }

[[tool.setuptools-rust.ext-modules]]
# Private Rust extension module to be nested into the Python package
# The last part of the target name (i.e. "_libgridr") has to match lib.name in Cargo.toml
target = "gridr.cdylib._libgridr"
path = "rust/gridr/Cargo.toml"
binding = "PyO3"
# Build extra options are passed through the DIST_EXTRA_CONFIG environment variable
# This is used for abi3 wheel build
# See Makefile option


[tool.black]
# https://github.com/psf/black
line-length = 100 
include = '\.pyi?$'
exclude = "(.eggs|.git|.mypy_cache|.nox|.tox|_build|build|dist.*|venv.*|doc|docs|notebooks|benchmark)"

[tool.isort]
profile = 'black'
line_length = 100 
known_third_party = [ "dask" ]

[tool.flake8]
exclude = [".git", "venv*", "doc", "docs", "notebooks", "benchmark", "build", "dist*" ]
extend-ignore = ["E203", "W503"]
max-complexity = 27
max-line-length = 100
select = ["E", "F", "W", "C", "B9", "C4", "B"]

