[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-dispatcher"
version = "1.0.0"
description = "Intelligent LLM dispatching with performance-based routing, multimodal support, streaming, monitoring, and comprehensive analytics"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ashhadahsan", email = "ashhadahsan@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.8"
keywords = [
    "llm",
    "ai",
    "openai",
    "anthropic",
    "google",
    "machine-learning",
    "nlp",
    "routing",
    "dispatch",
    "multimodal",
    "streaming",
    "monitoring",
    "analytics",
    "caching",
]
dependencies = [
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "tenacity>=8.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "tiktoken>=0.5.0",
    "pillow>=9.0.0",
    "pydub>=0.25.0",
    "numpy>=1.21.0",
    "datasets>=2.0.0",
    "evaluate>=0.4.0",
    "rouge-score>=0.1.2",
    "sacrebleu>=2.3.0",
    "bert-score>=0.3.13",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "asyncio-mqtt>=0.11.0",
    "redis>=4.5.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "bcrypt>=4.0.0",
    "cryptography>=41.0.0",
    "tqdm>=4.0.0",
    "regex>=2022.1.18",
    "charset-normalizer>=2.0.0",
    "urllib3>=1.21.1",
    "certifi>=2017.4.17",
    "anyio>=3.5.0",
    "distro>=1.7.0",
    "httpx>=0.23.0",
    "jiter>=0.4.0",
    "sniffio",
    "typing-extensions>=4.11.0",
    "annotated-types>=0.6.0",
    "pydantic-core>=2.33.0",
    "typing-inspection>=0.4.0",
    "idna>=2.8",
    "docstring-parser>=0.15.0",
    "google-ai-generativelanguage>=0.6.15",
    "google-api-core>=2.25.0",
    "google-api-python-client>=2.182.0",
    "google-auth>=2.15.0",
    "protobuf>=5.29.0",
    "proto-plus>=1.22.3",
    "googleapis-common-protos>=1.56.2",
    "grpcio>=1.33.2",
    "grpcio-status>=1.33.2",
    "cachetools>=2.0.0",
    "pyasn1-modules>=0.2.1",
    "rsa>=3.1.4",
    "pyasn1>=0.1.3",
    "httplib2>=0.19.0",
    "google-auth-httplib2>=0.2.0",
    "uritemplate>=3.0.1",
    "pyparsing>=3.0.4",
    # Audio processing
    "librosa>=0.9.0",
    "soundfile>=0.12.0",
    # Quality evaluation and benchmarking
    "ragas>=0.1.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-google-genai>=0.1.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-minify-plugin>=0.7.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-social-plugin>=0.1.0",
]
benchmark = [
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "accelerate>=0.20.0",
    "datasets>=2.0.0",
    "evaluate>=0.4.0",
]

[project.urls]
Homepage = "https://github.com/ashhadahsan/llm-dispatcher"
Repository = "https://github.com/ashhadahsan/llm-dispatcher"
Documentation = "https://llm-dispatcher.readthedocs.io"
"Bug Tracker" = "https://github.com/ashhadahsan/llm-dispatcher/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=llm_dispatcher --cov-report=html --cov-report=term-missing --cov-report=xml"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/llm_dispatcher"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
