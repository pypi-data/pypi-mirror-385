#
# Sample Docker Compose environment file for the Onionprobe monitoring node.
#
# Copyright (C) 2022 The Tor Project, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Enforces the project name if needed
#COMPOSE_PROJECT_NAME=onionprobe

# The container runtime
# Either "docker" or "podman"
#CONTAINER_RUNTIME=docker

# Set this to the UID and GID of the user running the container service
# This sets proper permissions for the configurator service to write
# into the config folder.
#CONTAINER_UID=1000
#CONTAINER_GID=1000

# Select which services should start
#COMPOSE_PROFILES=all

# Specify the address where services will listen for connections
# By default, services are accessible only from localhost or through Onion
# Services.
#ONIONPROBE_LISTEN_ADDR=127.0.0.1

# Specify which Onionprobe configuration file to use
# Path is relative to the Onionprobe repository
#ONIONPROBE_CONFIG=contrib/tpo.yaml

# Specify the Prometheus config to use
# Path is relative to the Onionprobe repository
#PROMETHEUS_CONFIG=configs/prometheus/prometheus.yml

# Specify the Prometheus rules file to use
# Path is relative to the Onionprobe repository
#PROMETHEUS_RULES=configs/prometheus/prometheus-rules.yml

# Set the Prometheus external URL
#PROMETHEUS_WEB_EXTERNAL_URL=http://localhost:9090

# Specify the Alertmanager config to use
# Path is relative to the Onionprobe repository
#ALERTMANAGER_CONFIG=configs/alertmanager/alertmanager.yml

# Path is relative to the Onionprobe repository
# Specify the configurator to use
#CONFIGURATOR_ENTRYPOINT=packages/tpo.py

# Specify custom configurator arguments
#CONFIGURATOR_PARAMS=--loop --wait 240 --config_overrides rounds=20 --output_folder /srv/onionprobe/contrib --config_template /srv/onionprobe/configs/tor.yaml

# Grafana PostgreSQL database password
#GRAFANA_DATABASE_PASSWORD=unsafe-password-please-change

# Specify the folder where Grafana provisioning data is available
# Path is relative to the Onionprobe repository
#GRAFANA_PROVISIONING=configs/grafana/provisioning

# Enable this to allow Grafana to send email
#GRAFANA_SMTP_ENABLED=false

# Grafana SMTP host
#GRAFANA_SMTP_HOST=localhost:25

# Grafana SMTP user
#GRAFANA_SMTP_USER=

# Grafana SMTP password
#GRAFANA_SMTP_PASSWORD=

# Grafana Start TLS policy
#GRAFANA_SMTP_STARTTLS_POLICY=

# Grafana domain
#GRAFANA_SERVER_DOMAIN=

# Grafana root URL
#
# It's recommended to set this variable once Grafana's .onion address is available.
# This ensures proper Grafana behavior behind a proxy, like proper WebSocket
# connections, and seems to avoid some NS_BINDING_ABORTED errors in the
# browser.
#
# Check https://github.com/grafana/grafana/issues/36929#issuecomment-883237258
#       https://grafana.com/docs/grafana/latest/setup-grafana/set-up-grafana-live/#request-origin-check
#       https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#root_url
#GRAFANA_SERVER_ROOT_URL=

# Toggle Grafana anonymous statistics submission
#GRAFANA_ANALYTICS_REPORTING_ENABLED=false

# Whether to automatically check for Grafana updates
#GRAFANA_ANALYTICS_CHECK_FOR_UPDATES=false

# Whether to automatically check for Grafana plugin updates
#GRAFANA_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES=false

# Whether to enable alpha plugins
#GRAFANA_PLUGINS_ENABLE_ALPHA=false

# Default Grafana dashboard
# See https://grafana.com/docs/grafana/latest/administration/preferences/change-home-dashboard/
#GRAFANA_HOME_DASHBOARD=configs/grafana/home.json

# Default mountpoint for the Grafana dashboard file
#GRAFANA_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/home.json
