# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class ResponseErrorEvent(UncheckedBaseModel):
    type: typing.Literal["error"] = pydantic.Field(default="error")
    """
    Event type
    """

    code: str = pydantic.Field()
    """
    Error code
    """

    message: str = pydantic.Field()
    """
    Error message
    """

    param: typing.Optional[str] = pydantic.Field(default=None)
    """
    Parameter that caused the error
    """

    sequence_number: float = pydantic.Field()
    """
    Sequence number of the event
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
