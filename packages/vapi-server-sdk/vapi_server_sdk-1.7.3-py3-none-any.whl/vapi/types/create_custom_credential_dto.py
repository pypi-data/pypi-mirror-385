# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .create_custom_credential_dto_authentication_plan import CreateCustomCredentialDtoAuthenticationPlan


class CreateCustomCredentialDto(UncheckedBaseModel):
    provider: typing.Literal["custom-credential"] = "custom-credential"
    authentication_plan: typing_extensions.Annotated[
        CreateCustomCredentialDtoAuthenticationPlan, FieldMetadata(alias="authenticationPlan")
    ] = pydantic.Field()
    """
    This is the authentication plan. Supports OAuth2 RFC 6749, HMAC signing, and Bearer authentication.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    This is the name of credential. This is just for your reference.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
