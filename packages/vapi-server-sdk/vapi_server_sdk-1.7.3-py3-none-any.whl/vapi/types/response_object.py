# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .response_object_status import ResponseObjectStatus
from .response_output_message import ResponseOutputMessage


class ResponseObject(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for this Response
    """

    object: typing.Literal["response"] = pydantic.Field(default="response")
    """
    The object type
    """

    created_at: float = pydantic.Field()
    """
    Unix timestamp (in seconds) of when this Response was created
    """

    status: ResponseObjectStatus = pydantic.Field()
    """
    Status of the response
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message if the response failed
    """

    output: typing.List[ResponseOutputMessage] = pydantic.Field()
    """
    Output messages from the model
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
