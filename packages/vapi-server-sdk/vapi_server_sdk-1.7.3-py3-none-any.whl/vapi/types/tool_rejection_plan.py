# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .tool_rejection_plan_conditions_item import ToolRejectionPlanConditionsItem


class ToolRejectionPlan(UncheckedBaseModel):
    conditions: typing.Optional[typing.List[ToolRejectionPlanConditionsItem]] = pydantic.Field(default=None)
    """
    This is the list of conditions that must be evaluated.
    
    Usage:
    - If all conditions match (AND logic), the tool call is rejected.
    - For OR logic at the top level, use a single 'group' condition with operator: 'OR'.
    
    @default [] - Empty array means tool always executes
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .group_condition import GroupCondition  # noqa: E402, F401, I001

update_forward_refs(ToolRejectionPlan)
