# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .web_chat_output_item import WebChatOutputItem


class WebChat(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    This is the unique identifier for the chat.
    """

    session_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sessionId")] = pydantic.Field(
        default=None
    )
    """
    This is the ID of the session for the chat. Send it in the next chat request to continue the conversation.
    """

    output: typing.List[WebChatOutputItem] = pydantic.Field()
    """
    This is the output messages generated by the system in response to the input.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
