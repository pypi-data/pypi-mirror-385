# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class RecordingConsent(UncheckedBaseModel):
    type: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    This is the type of recording consent.
    """

    granted_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="grantedAt")] = (
        pydantic.Field(default=None)
    )
    """
    This is the date and time the recording consent was granted.
    If not specified, it means the recording consent was not granted.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
