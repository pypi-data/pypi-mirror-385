# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class CreateChatStreamResponse(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    This is the unique identifier for the streaming response.
    """

    session_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sessionId")] = pydantic.Field(
        default=None
    )
    """
    This is the ID of the session that will be used for the chat.
    Helps track conversation context across multiple messages.
    """

    path: str = pydantic.Field()
    """
    This is the path to the content being updated.
    Format: `chat.output[{contentIndex}].content` where contentIndex identifies the specific content item.
    """

    delta: str = pydantic.Field()
    """
    This is the incremental content chunk being streamed.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
