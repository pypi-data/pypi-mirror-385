# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .node_artifact_messages_item import NodeArtifactMessagesItem


class NodeArtifact(UncheckedBaseModel):
    messages: typing.Optional[typing.List[NodeArtifactMessagesItem]] = pydantic.Field(default=None)
    """
    These are the messages that were spoken during the node.
    """

    node_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="nodeName")] = pydantic.Field(
        default=None
    )
    """
    This is the node name.
    """

    variable_values: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]], FieldMetadata(alias="variableValues")
    ] = pydantic.Field(default=None)
    """
    These are the variable values that were extracted from the node.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
