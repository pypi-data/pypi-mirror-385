# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .workflow_google_model_model import WorkflowGoogleModelModel


class WorkflowGoogleModel(UncheckedBaseModel):
    provider: typing.Literal["google"] = pydantic.Field(default="google")
    """
    This is the provider of the model (`google`).
    """

    model: WorkflowGoogleModelModel = pydantic.Field()
    """
    This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
    """

    temperature: typing.Optional[float] = pydantic.Field(default=None)
    """
    This is the temperature of the model.
    """

    max_tokens: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="maxTokens")] = pydantic.Field(
        default=None
    )
    """
    This is the max tokens of the model.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
