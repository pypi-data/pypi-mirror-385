# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .eval_run_result_messages_item import EvalRunResultMessagesItem
from .eval_run_result_status import EvalRunResultStatus


class EvalRunResult(UncheckedBaseModel):
    status: EvalRunResultStatus = pydantic.Field()
    """
    This is the status of the eval run result.
    The status is only 'pass' or 'fail' for an eval run result.
    Currently, An eval is considered `pass` only if all the Assistant Judge messages are evaluated to pass.
    """

    messages: typing.List[EvalRunResultMessagesItem] = pydantic.Field()
    """
    This is the messages of the eval run result.
    It contains the user/system messages
    """

    started_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="startedAt")] = pydantic.Field()
    """
    This is the start time of the eval run result.
    """

    ended_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="endedAt")] = pydantic.Field()
    """
    This is the end time of the eval run result.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
