# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .message_target_role import MessageTargetRole


class MessageTarget(UncheckedBaseModel):
    role: typing.Optional[MessageTargetRole] = pydantic.Field(default=None)
    """
    This is the role of the message to target.
    
    If not specified, will find the position in the message history ignoring role (effectively `any`).
    """

    position: typing.Optional[float] = pydantic.Field(default=None)
    """
    This is the position of the message to target.
    - Negative numbers: Count from end (-1 = most recent, -2 = second most recent)
    - 0: First/oldest message in history
    - Positive numbers: Specific position (0-indexed from start)
    
    @default -1 (most recent message)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
