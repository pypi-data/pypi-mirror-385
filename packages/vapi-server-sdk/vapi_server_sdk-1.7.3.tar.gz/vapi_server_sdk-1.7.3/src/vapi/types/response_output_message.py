# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .response_output_message_status import ResponseOutputMessageStatus
from .response_output_text import ResponseOutputText


class ResponseOutputMessage(UncheckedBaseModel):
    id: str = pydantic.Field()
    """
    The unique ID of the output message
    """

    content: typing.List[ResponseOutputText] = pydantic.Field()
    """
    Content of the output message
    """

    role: typing.Literal["assistant"] = pydantic.Field(default="assistant")
    """
    The role of the output message
    """

    status: ResponseOutputMessageStatus = pydantic.Field()
    """
    The status of the message
    """

    type: typing.Literal["message"] = pydantic.Field(default="message")
    """
    The type of the output message
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
