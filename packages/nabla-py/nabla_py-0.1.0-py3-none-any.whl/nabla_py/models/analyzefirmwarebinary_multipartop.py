"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import io
from nabla_py.types import BaseModel
from nabla_py.utils import FieldMetadata, MultipartFormMetadata
import pydantic
from typing import IO, Optional, Union
from typing_extensions import Annotated, NotRequired, TypedDict


class FileTypedDict(TypedDict):
    file_name: str
    content: Union[bytes, IO[bytes], io.BufferedReader]
    content_type: NotRequired[str]


class File(BaseModel):
    file_name: Annotated[
        str, pydantic.Field(alias="fileName"), FieldMetadata(multipart=True)
    ]

    content: Annotated[
        Union[bytes, IO[bytes], io.BufferedReader],
        pydantic.Field(alias=""),
        FieldMetadata(multipart=MultipartFormMetadata(content=True)),
    ]

    content_type: Annotated[
        Optional[str],
        pydantic.Field(alias="Content-Type"),
        FieldMetadata(multipart=True),
    ] = None


class AnalyzeFirmwareBinaryMultipartRequestTypedDict(TypedDict):
    name: NotRequired[str]
    r"""Name for the firmware analysis"""
    file: NotRequired[FileTypedDict]
    r"""Firmware binary file"""


class AnalyzeFirmwareBinaryMultipartRequest(BaseModel):
    name: Annotated[Optional[str], FieldMetadata(multipart=True)] = None
    r"""Name for the firmware analysis"""

    file: Annotated[
        Optional[File], FieldMetadata(multipart=MultipartFormMetadata(file=True))
    ] = None
    r"""Firmware binary file"""
