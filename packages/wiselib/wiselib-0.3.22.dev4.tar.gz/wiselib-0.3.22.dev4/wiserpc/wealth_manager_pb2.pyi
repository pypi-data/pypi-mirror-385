"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _WatchEventType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WatchEventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WatchEventType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    HEARTBEAT: _WatchEventType.ValueType  # 0
    SWAP_UPDATE: _WatchEventType.ValueType  # 1
    TRADE_ACTIVITY_UPDATE: _WatchEventType.ValueType  # 2

class WatchEventType(_WatchEventType, metaclass=_WatchEventTypeEnumTypeWrapper): ...

HEARTBEAT: WatchEventType.ValueType  # 0
SWAP_UPDATE: WatchEventType.ValueType  # 1
TRADE_ACTIVITY_UPDATE: WatchEventType.ValueType  # 2
global___WatchEventType = WatchEventType

@typing.final
class TradeActivity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOTAL_BOUGHT_FIELD_NUMBER: builtins.int
    TOTAL_SOLD_FIELD_NUMBER: builtins.int
    TOTAL_BOUGHT_USD_FIELD_NUMBER: builtins.int
    TOTAL_SOLD_USD_FIELD_NUMBER: builtins.int
    BALANCE_FIELD_NUMBER: builtins.int
    TOTAL_ASSET_BOUGHT_FIELD_NUMBER: builtins.int
    TOTAL_ASSET_SOLD_FIELD_NUMBER: builtins.int
    AVG_BUY_PRICE_FIELD_NUMBER: builtins.int
    AVG_SELL_PRICE_FIELD_NUMBER: builtins.int
    AVG_BUY_PRICE_USD_FIELD_NUMBER: builtins.int
    AVG_SELL_PRICE_USD_FIELD_NUMBER: builtins.int
    SYMBOL_SLUG_FIELD_NUMBER: builtins.int
    total_bought: builtins.str
    total_sold: builtins.str
    total_bought_usd: builtins.str
    total_sold_usd: builtins.str
    balance: builtins.str
    total_asset_bought: builtins.str
    total_asset_sold: builtins.str
    avg_buy_price: builtins.str
    avg_sell_price: builtins.str
    avg_buy_price_usd: builtins.str
    avg_sell_price_usd: builtins.str
    symbol_slug: builtins.str
    def __init__(
        self,
        *,
        total_bought: builtins.str = ...,
        total_sold: builtins.str = ...,
        total_bought_usd: builtins.str = ...,
        total_sold_usd: builtins.str = ...,
        balance: builtins.str = ...,
        total_asset_bought: builtins.str = ...,
        total_asset_sold: builtins.str = ...,
        avg_buy_price: builtins.str | None = ...,
        avg_sell_price: builtins.str | None = ...,
        avg_buy_price_usd: builtins.str | None = ...,
        avg_sell_price_usd: builtins.str | None = ...,
        symbol_slug: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_avg_buy_price", b"_avg_buy_price", "_avg_buy_price_usd", b"_avg_buy_price_usd", "_avg_sell_price", b"_avg_sell_price", "_avg_sell_price_usd", b"_avg_sell_price_usd", "avg_buy_price", b"avg_buy_price", "avg_buy_price_usd", b"avg_buy_price_usd", "avg_sell_price", b"avg_sell_price", "avg_sell_price_usd", b"avg_sell_price_usd"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_avg_buy_price", b"_avg_buy_price", "_avg_buy_price_usd", b"_avg_buy_price_usd", "_avg_sell_price", b"_avg_sell_price", "_avg_sell_price_usd", b"_avg_sell_price_usd", "avg_buy_price", b"avg_buy_price", "avg_buy_price_usd", b"avg_buy_price_usd", "avg_sell_price", b"avg_sell_price", "avg_sell_price_usd", b"avg_sell_price_usd", "balance", b"balance", "symbol_slug", b"symbol_slug", "total_asset_bought", b"total_asset_bought", "total_asset_sold", b"total_asset_sold", "total_bought", b"total_bought", "total_bought_usd", b"total_bought_usd", "total_sold", b"total_sold", "total_sold_usd", b"total_sold_usd"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_avg_buy_price", b"_avg_buy_price"]) -> typing.Literal["avg_buy_price"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_avg_buy_price_usd", b"_avg_buy_price_usd"]) -> typing.Literal["avg_buy_price_usd"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_avg_sell_price", b"_avg_sell_price"]) -> typing.Literal["avg_sell_price"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_avg_sell_price_usd", b"_avg_sell_price_usd"]) -> typing.Literal["avg_sell_price_usd"] | None: ...

global___TradeActivity = TradeActivity

@typing.final
class Swap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    QUOTE_SLUG_FIELD_NUMBER: builtins.int
    BASE_SLUG_FIELD_NUMBER: builtins.int
    NETWORK_SLUG_FIELD_NUMBER: builtins.int
    TRADING_VOLUME_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    FROM_AMOUNT_FIELD_NUMBER: builtins.int
    TO_AMOUNT_FIELD_NUMBER: builtins.int
    WALLET_ADDRESS_FIELD_NUMBER: builtins.int
    PNL_USD_PERCENT_FIELD_NUMBER: builtins.int
    PNL_USD_FIELD_NUMBER: builtins.int
    PNL_QUOTE_PERCENT_FIELD_NUMBER: builtins.int
    PNL_QUOTE_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    TRANSACTION_LINK_FIELD_NUMBER: builtins.int
    TRANSACTION_HASH_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    FAIL_REASON_FIELD_NUMBER: builtins.int
    key: builtins.str
    quote_slug: builtins.str
    base_slug: builtins.str
    network_slug: builtins.str
    trading_volume: builtins.str
    side: builtins.str
    from_amount: builtins.str
    to_amount: builtins.str
    wallet_address: builtins.str
    pnl_usd_percent: builtins.str
    pnl_usd: builtins.str
    pnl_quote_percent: builtins.str
    pnl_quote: builtins.str
    created_at: builtins.str
    transaction_link: builtins.str
    transaction_hash: builtins.str
    status: builtins.str
    fail_reason: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        quote_slug: builtins.str = ...,
        base_slug: builtins.str = ...,
        network_slug: builtins.str = ...,
        trading_volume: builtins.str = ...,
        side: builtins.str = ...,
        from_amount: builtins.str = ...,
        to_amount: builtins.str = ...,
        wallet_address: builtins.str = ...,
        pnl_usd_percent: builtins.str = ...,
        pnl_usd: builtins.str = ...,
        pnl_quote_percent: builtins.str = ...,
        pnl_quote: builtins.str = ...,
        created_at: builtins.str = ...,
        transaction_link: builtins.str = ...,
        transaction_hash: builtins.str = ...,
        status: builtins.str = ...,
        fail_reason: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["base_slug", b"base_slug", "created_at", b"created_at", "fail_reason", b"fail_reason", "from_amount", b"from_amount", "key", b"key", "network_slug", b"network_slug", "pnl_quote", b"pnl_quote", "pnl_quote_percent", b"pnl_quote_percent", "pnl_usd", b"pnl_usd", "pnl_usd_percent", b"pnl_usd_percent", "quote_slug", b"quote_slug", "side", b"side", "status", b"status", "to_amount", b"to_amount", "trading_volume", b"trading_volume", "transaction_hash", b"transaction_hash", "transaction_link", b"transaction_link", "wallet_address", b"wallet_address"]) -> None: ...

global___Swap = Swap

@typing.final
class WatchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERNAME_FIELD_NUMBER: builtins.int
    SYMBOL_SLUG_FIELD_NUMBER: builtins.int
    username: builtins.str
    symbol_slug: builtins.str
    def __init__(
        self,
        *,
        username: builtins.str = ...,
        symbol_slug: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_symbol_slug", b"_symbol_slug", "symbol_slug", b"symbol_slug"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_symbol_slug", b"_symbol_slug", "symbol_slug", b"symbol_slug", "username", b"username"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_symbol_slug", b"_symbol_slug"]) -> typing.Literal["symbol_slug"] | None: ...

global___WatchRequest = WatchRequest

@typing.final
class WatchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    ACTIVITY_PAYLOAD_FIELD_NUMBER: builtins.int
    SWAP_PAYLOAD_FIELD_NUMBER: builtins.int
    type: global___WatchEventType.ValueType
    @property
    def activity_payload(self) -> global___TradeActivity: ...
    @property
    def swap_payload(self) -> global___Swap: ...
    def __init__(
        self,
        *,
        type: global___WatchEventType.ValueType = ...,
        activity_payload: global___TradeActivity | None = ...,
        swap_payload: global___Swap | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_activity_payload", b"_activity_payload", "_swap_payload", b"_swap_payload", "activity_payload", b"activity_payload", "swap_payload", b"swap_payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_activity_payload", b"_activity_payload", "_swap_payload", b"_swap_payload", "activity_payload", b"activity_payload", "swap_payload", b"swap_payload", "type", b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_activity_payload", b"_activity_payload"]) -> typing.Literal["activity_payload"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_swap_payload", b"_swap_payload"]) -> typing.Literal["swap_payload"] | None: ...

global___WatchResponse = WatchResponse
