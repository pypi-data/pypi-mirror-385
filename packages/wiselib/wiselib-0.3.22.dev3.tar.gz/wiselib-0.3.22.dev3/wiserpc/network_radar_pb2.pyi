"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Empty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Empty = Empty

@typing.final
class TrenchStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROTOCOLS_FIELD_NUMBER: builtins.int
    MIN_BOUNDING_CURVE_FIELD_NUMBER: builtins.int
    MAX_BOUNDING_CURVE_FIELD_NUMBER: builtins.int
    SEARCH_KEYWORDS_FIELD_NUMBER: builtins.int
    EXCLUDE_KEYWORDS_FIELD_NUMBER: builtins.int
    BURNT_FIELD_NUMBER: builtins.int
    DEVNOTSOLD_FIELD_NUMBER: builtins.int
    DEVSOLDALL_FIELD_NUMBER: builtins.int
    NOMINT_FIELD_NUMBER: builtins.int
    SAFETOPHOLDER_FIELD_NUMBER: builtins.int
    MIN_RISK_FIELD_NUMBER: builtins.int
    MAX_RISK_FIELD_NUMBER: builtins.int
    MIN_AGE_FIELD_NUMBER: builtins.int
    MAX_AGE_FIELD_NUMBER: builtins.int
    MIN_LIQUIDITY_FIELD_NUMBER: builtins.int
    MAX_LIQUIDITY_FIELD_NUMBER: builtins.int
    MIN_VOLUME_FIELD_NUMBER: builtins.int
    MAX_VOLUME_FIELD_NUMBER: builtins.int
    MIN_MARKETCAP_FIELD_NUMBER: builtins.int
    MAX_MARKETCAP_FIELD_NUMBER: builtins.int
    MIN_TRANSACTIONS_FIELD_NUMBER: builtins.int
    MAX_TRANSACTIONS_FIELD_NUMBER: builtins.int
    MIN_BUYS_FIELD_NUMBER: builtins.int
    MAX_BUYS_FIELD_NUMBER: builtins.int
    MIN_SELLS_FIELD_NUMBER: builtins.int
    MAX_SELLS_FIELD_NUMBER: builtins.int
    MIN_LIQUIDITY_CHANGE_PERCENT_FIELD_NUMBER: builtins.int
    MAX_LIQUIDITY_CHANGE_PERCENT_FIELD_NUMBER: builtins.int
    HASTWITTER_FIELD_NUMBER: builtins.int
    HASWEBSITE_FIELD_NUMBER: builtins.int
    HASTELEGRAM_FIELD_NUMBER: builtins.int
    ATLEASTONESOCIAL_FIELD_NUMBER: builtins.int
    MIN_HOLDERS_FIELD_NUMBER: builtins.int
    MAX_HOLDERS_FIELD_NUMBER: builtins.int
    min_bounding_curve: builtins.float
    max_bounding_curve: builtins.float
    burnt: builtins.bool
    devNotSold: builtins.bool
    devSoldAll: builtins.bool
    noMint: builtins.bool
    safeTopHolder: builtins.bool
    min_risk: builtins.float
    max_risk: builtins.float
    min_age: builtins.int
    max_age: builtins.int
    min_liquidity: builtins.int
    max_liquidity: builtins.int
    min_volume: builtins.int
    max_volume: builtins.int
    min_marketcap: builtins.int
    max_marketcap: builtins.int
    min_transactions: builtins.int
    max_transactions: builtins.int
    min_buys: builtins.int
    max_buys: builtins.int
    min_sells: builtins.int
    max_sells: builtins.int
    min_liquidity_change_percent: builtins.int
    max_liquidity_change_percent: builtins.int
    hasTwitter: builtins.bool
    hasWebsite: builtins.bool
    hasTelegram: builtins.bool
    atLeastOneSocial: builtins.bool
    min_holders: builtins.int
    max_holders: builtins.int
    @property
    def protocols(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def search_keywords(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def exclude_keywords(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        protocols: collections.abc.Iterable[builtins.str] | None = ...,
        min_bounding_curve: builtins.float | None = ...,
        max_bounding_curve: builtins.float | None = ...,
        search_keywords: collections.abc.Iterable[builtins.str] | None = ...,
        exclude_keywords: collections.abc.Iterable[builtins.str] | None = ...,
        burnt: builtins.bool | None = ...,
        devNotSold: builtins.bool | None = ...,
        devSoldAll: builtins.bool | None = ...,
        noMint: builtins.bool | None = ...,
        safeTopHolder: builtins.bool | None = ...,
        min_risk: builtins.float | None = ...,
        max_risk: builtins.float | None = ...,
        min_age: builtins.int | None = ...,
        max_age: builtins.int | None = ...,
        min_liquidity: builtins.int | None = ...,
        max_liquidity: builtins.int | None = ...,
        min_volume: builtins.int | None = ...,
        max_volume: builtins.int | None = ...,
        min_marketcap: builtins.int | None = ...,
        max_marketcap: builtins.int | None = ...,
        min_transactions: builtins.int | None = ...,
        max_transactions: builtins.int | None = ...,
        min_buys: builtins.int | None = ...,
        max_buys: builtins.int | None = ...,
        min_sells: builtins.int | None = ...,
        max_sells: builtins.int | None = ...,
        min_liquidity_change_percent: builtins.int | None = ...,
        max_liquidity_change_percent: builtins.int | None = ...,
        hasTwitter: builtins.bool | None = ...,
        hasWebsite: builtins.bool | None = ...,
        hasTelegram: builtins.bool | None = ...,
        atLeastOneSocial: builtins.bool | None = ...,
        min_holders: builtins.int | None = ...,
        max_holders: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_atLeastOneSocial", b"_atLeastOneSocial", "_burnt", b"_burnt", "_devNotSold", b"_devNotSold", "_devSoldAll", b"_devSoldAll", "_hasTelegram", b"_hasTelegram", "_hasTwitter", b"_hasTwitter", "_hasWebsite", b"_hasWebsite", "_max_age", b"_max_age", "_max_bounding_curve", b"_max_bounding_curve", "_max_buys", b"_max_buys", "_max_holders", b"_max_holders", "_max_liquidity", b"_max_liquidity", "_max_liquidity_change_percent", b"_max_liquidity_change_percent", "_max_marketcap", b"_max_marketcap", "_max_risk", b"_max_risk", "_max_sells", b"_max_sells", "_max_transactions", b"_max_transactions", "_max_volume", b"_max_volume", "_min_age", b"_min_age", "_min_bounding_curve", b"_min_bounding_curve", "_min_buys", b"_min_buys", "_min_holders", b"_min_holders", "_min_liquidity", b"_min_liquidity", "_min_liquidity_change_percent", b"_min_liquidity_change_percent", "_min_marketcap", b"_min_marketcap", "_min_risk", b"_min_risk", "_min_sells", b"_min_sells", "_min_transactions", b"_min_transactions", "_min_volume", b"_min_volume", "_noMint", b"_noMint", "_safeTopHolder", b"_safeTopHolder", "atLeastOneSocial", b"atLeastOneSocial", "burnt", b"burnt", "devNotSold", b"devNotSold", "devSoldAll", b"devSoldAll", "hasTelegram", b"hasTelegram", "hasTwitter", b"hasTwitter", "hasWebsite", b"hasWebsite", "max_age", b"max_age", "max_bounding_curve", b"max_bounding_curve", "max_buys", b"max_buys", "max_holders", b"max_holders", "max_liquidity", b"max_liquidity", "max_liquidity_change_percent", b"max_liquidity_change_percent", "max_marketcap", b"max_marketcap", "max_risk", b"max_risk", "max_sells", b"max_sells", "max_transactions", b"max_transactions", "max_volume", b"max_volume", "min_age", b"min_age", "min_bounding_curve", b"min_bounding_curve", "min_buys", b"min_buys", "min_holders", b"min_holders", "min_liquidity", b"min_liquidity", "min_liquidity_change_percent", b"min_liquidity_change_percent", "min_marketcap", b"min_marketcap", "min_risk", b"min_risk", "min_sells", b"min_sells", "min_transactions", b"min_transactions", "min_volume", b"min_volume", "noMint", b"noMint", "safeTopHolder", b"safeTopHolder"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_atLeastOneSocial", b"_atLeastOneSocial", "_burnt", b"_burnt", "_devNotSold", b"_devNotSold", "_devSoldAll", b"_devSoldAll", "_hasTelegram", b"_hasTelegram", "_hasTwitter", b"_hasTwitter", "_hasWebsite", b"_hasWebsite", "_max_age", b"_max_age", "_max_bounding_curve", b"_max_bounding_curve", "_max_buys", b"_max_buys", "_max_holders", b"_max_holders", "_max_liquidity", b"_max_liquidity", "_max_liquidity_change_percent", b"_max_liquidity_change_percent", "_max_marketcap", b"_max_marketcap", "_max_risk", b"_max_risk", "_max_sells", b"_max_sells", "_max_transactions", b"_max_transactions", "_max_volume", b"_max_volume", "_min_age", b"_min_age", "_min_bounding_curve", b"_min_bounding_curve", "_min_buys", b"_min_buys", "_min_holders", b"_min_holders", "_min_liquidity", b"_min_liquidity", "_min_liquidity_change_percent", b"_min_liquidity_change_percent", "_min_marketcap", b"_min_marketcap", "_min_risk", b"_min_risk", "_min_sells", b"_min_sells", "_min_transactions", b"_min_transactions", "_min_volume", b"_min_volume", "_noMint", b"_noMint", "_safeTopHolder", b"_safeTopHolder", "atLeastOneSocial", b"atLeastOneSocial", "burnt", b"burnt", "devNotSold", b"devNotSold", "devSoldAll", b"devSoldAll", "exclude_keywords", b"exclude_keywords", "hasTelegram", b"hasTelegram", "hasTwitter", b"hasTwitter", "hasWebsite", b"hasWebsite", "max_age", b"max_age", "max_bounding_curve", b"max_bounding_curve", "max_buys", b"max_buys", "max_holders", b"max_holders", "max_liquidity", b"max_liquidity", "max_liquidity_change_percent", b"max_liquidity_change_percent", "max_marketcap", b"max_marketcap", "max_risk", b"max_risk", "max_sells", b"max_sells", "max_transactions", b"max_transactions", "max_volume", b"max_volume", "min_age", b"min_age", "min_bounding_curve", b"min_bounding_curve", "min_buys", b"min_buys", "min_holders", b"min_holders", "min_liquidity", b"min_liquidity", "min_liquidity_change_percent", b"min_liquidity_change_percent", "min_marketcap", b"min_marketcap", "min_risk", b"min_risk", "min_sells", b"min_sells", "min_transactions", b"min_transactions", "min_volume", b"min_volume", "noMint", b"noMint", "protocols", b"protocols", "safeTopHolder", b"safeTopHolder", "search_keywords", b"search_keywords"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_atLeastOneSocial", b"_atLeastOneSocial"]) -> typing.Literal["atLeastOneSocial"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_burnt", b"_burnt"]) -> typing.Literal["burnt"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_devNotSold", b"_devNotSold"]) -> typing.Literal["devNotSold"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_devSoldAll", b"_devSoldAll"]) -> typing.Literal["devSoldAll"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_hasTelegram", b"_hasTelegram"]) -> typing.Literal["hasTelegram"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_hasTwitter", b"_hasTwitter"]) -> typing.Literal["hasTwitter"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_hasWebsite", b"_hasWebsite"]) -> typing.Literal["hasWebsite"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_age", b"_max_age"]) -> typing.Literal["max_age"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_bounding_curve", b"_max_bounding_curve"]) -> typing.Literal["max_bounding_curve"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_buys", b"_max_buys"]) -> typing.Literal["max_buys"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_holders", b"_max_holders"]) -> typing.Literal["max_holders"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_liquidity", b"_max_liquidity"]) -> typing.Literal["max_liquidity"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_liquidity_change_percent", b"_max_liquidity_change_percent"]) -> typing.Literal["max_liquidity_change_percent"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_marketcap", b"_max_marketcap"]) -> typing.Literal["max_marketcap"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_risk", b"_max_risk"]) -> typing.Literal["max_risk"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_sells", b"_max_sells"]) -> typing.Literal["max_sells"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_transactions", b"_max_transactions"]) -> typing.Literal["max_transactions"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_max_volume", b"_max_volume"]) -> typing.Literal["max_volume"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_age", b"_min_age"]) -> typing.Literal["min_age"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_bounding_curve", b"_min_bounding_curve"]) -> typing.Literal["min_bounding_curve"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_buys", b"_min_buys"]) -> typing.Literal["min_buys"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_holders", b"_min_holders"]) -> typing.Literal["min_holders"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_liquidity", b"_min_liquidity"]) -> typing.Literal["min_liquidity"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_liquidity_change_percent", b"_min_liquidity_change_percent"]) -> typing.Literal["min_liquidity_change_percent"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_marketcap", b"_min_marketcap"]) -> typing.Literal["min_marketcap"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_risk", b"_min_risk"]) -> typing.Literal["min_risk"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_sells", b"_min_sells"]) -> typing.Literal["min_sells"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_transactions", b"_min_transactions"]) -> typing.Literal["min_transactions"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_min_volume", b"_min_volume"]) -> typing.Literal["min_volume"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_noMint", b"_noMint"]) -> typing.Literal["noMint"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_safeTopHolder", b"_safeTopHolder"]) -> typing.Literal["safeTopHolder"] | None: ...

global___TrenchStreamRequest = TrenchStreamRequest

@typing.final
class TrenchStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Result(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SYMBOL_FIELD_NUMBER: builtins.int
        NETWORK_DATA_FIELD_NUMBER: builtins.int
        VALIDATEDDATA_FIELD_NUMBER: builtins.int
        SECURITYDATA_FIELD_NUMBER: builtins.int
        SOCIALS_FIELD_NUMBER: builtins.int
        @property
        def symbol(self) -> global___Symbol: ...
        @property
        def network_data(self) -> global___NetworkData: ...
        @property
        def validatedData(self) -> global___ValidationData: ...
        @property
        def securityData(self) -> global___SecurityData: ...
        @property
        def socials(self) -> global___SymbolSocailAddresses: ...
        def __init__(
            self,
            *,
            symbol: global___Symbol | None = ...,
            network_data: global___NetworkData | None = ...,
            validatedData: global___ValidationData | None = ...,
            securityData: global___SecurityData | None = ...,
            socials: global___SymbolSocailAddresses | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["network_data", b"network_data", "securityData", b"securityData", "socials", b"socials", "symbol", b"symbol", "validatedData", b"validatedData"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["network_data", b"network_data", "securityData", b"securityData", "socials", b"socials", "symbol", b"symbol", "validatedData", b"validatedData"]) -> None: ...

    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TrenchStreamResponse.Result]: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___TrenchStreamResponse.Result] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["results", b"results"]) -> None: ...

global___TrenchStreamResponse = TrenchStreamResponse

@typing.final
class CoinDetailStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASE_FIELD_NUMBER: builtins.int
    QUOTE_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    base: builtins.str
    quote: builtins.str
    network: builtins.str
    def __init__(
        self,
        *,
        base: builtins.str | None = ...,
        quote: builtins.str | None = ...,
        network: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_base", b"_base", "_network", b"_network", "_quote", b"_quote", "base", b"base", "network", b"network", "quote", b"quote"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_base", b"_base", "_network", b"_network", "_quote", b"_quote", "base", b"base", "network", b"network", "quote", b"quote"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_base", b"_base"]) -> typing.Literal["base"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_network", b"_network"]) -> typing.Literal["network"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_quote", b"_quote"]) -> typing.Literal["quote"] | None: ...

global___CoinDetailStreamRequest = CoinDetailStreamRequest

@typing.final
class CoinDetailStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    NETWORK_DATA_FIELD_NUMBER: builtins.int
    VALIDATEDDATA_FIELD_NUMBER: builtins.int
    SECURITYDATA_FIELD_NUMBER: builtins.int
    SOCIALS_FIELD_NUMBER: builtins.int
    RISK_DATA_FIELD_NUMBER: builtins.int
    DEV_DATA_FIELD_NUMBER: builtins.int
    @property
    def symbol(self) -> global___Symbol: ...
    @property
    def network_data(self) -> global___NetworkData: ...
    @property
    def validatedData(self) -> global___ValidationData: ...
    @property
    def securityData(self) -> global___SecurityData: ...
    @property
    def socials(self) -> global___SymbolSocailAddresses: ...
    @property
    def risk_data(self) -> global___RiskData: ...
    @property
    def dev_data(self) -> global___DevData: ...
    def __init__(
        self,
        *,
        symbol: global___Symbol | None = ...,
        network_data: global___NetworkData | None = ...,
        validatedData: global___ValidationData | None = ...,
        securityData: global___SecurityData | None = ...,
        socials: global___SymbolSocailAddresses | None = ...,
        risk_data: global___RiskData | None = ...,
        dev_data: global___DevData | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["dev_data", b"dev_data", "network_data", b"network_data", "risk_data", b"risk_data", "securityData", b"securityData", "socials", b"socials", "symbol", b"symbol", "validatedData", b"validatedData"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["dev_data", b"dev_data", "network_data", b"network_data", "risk_data", b"risk_data", "securityData", b"securityData", "socials", b"socials", "symbol", b"symbol", "validatedData", b"validatedData"]) -> None: ...

global___CoinDetailStreamResponse = CoinDetailStreamResponse

@typing.final
class Symbol(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SLUG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    EXCHANGE_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    BASE_FIELD_NUMBER: builtins.int
    QUOTE_FIELD_NUMBER: builtins.int
    POOL_ADDRESS_FIELD_NUMBER: builtins.int
    IMAGE_URL_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CONTRACT_ADDRESS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ABBREVIATION_FIELD_NUMBER: builtins.int
    slug: builtins.str
    name: builtins.str
    network: builtins.str
    exchange: builtins.str
    active: builtins.bool
    base: builtins.str
    quote: builtins.str
    pool_address: builtins.str
    image_url: builtins.str
    created_at: builtins.str
    contract_address: builtins.str
    description: builtins.str
    abbreviation: builtins.str
    def __init__(
        self,
        *,
        slug: builtins.str = ...,
        name: builtins.str = ...,
        network: builtins.str = ...,
        exchange: builtins.str = ...,
        active: builtins.bool = ...,
        base: builtins.str = ...,
        quote: builtins.str = ...,
        pool_address: builtins.str = ...,
        image_url: builtins.str = ...,
        created_at: builtins.str = ...,
        contract_address: builtins.str = ...,
        description: builtins.str = ...,
        abbreviation: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["abbreviation", b"abbreviation", "active", b"active", "base", b"base", "contract_address", b"contract_address", "created_at", b"created_at", "description", b"description", "exchange", b"exchange", "image_url", b"image_url", "name", b"name", "network", b"network", "pool_address", b"pool_address", "quote", b"quote", "slug", b"slug"]) -> None: ...

global___Symbol = Symbol

@typing.final
class SymbolSocailAddresses(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TWITTER_FIELD_NUMBER: builtins.int
    TELEGRAM_FIELD_NUMBER: builtins.int
    WEBSITE_FIELD_NUMBER: builtins.int
    twitter: builtins.str
    telegram: builtins.str
    website: builtins.str
    def __init__(
        self,
        *,
        twitter: builtins.str = ...,
        telegram: builtins.str = ...,
        website: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["telegram", b"telegram", "twitter", b"twitter", "website", b"website"]) -> None: ...

global___SymbolSocailAddresses = SymbolSocailAddresses

@typing.final
class NetworkData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MARKETCAP_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    TOTALBUY_FIELD_NUMBER: builtins.int
    TOTALSELL_FIELD_NUMBER: builtins.int
    BOUNDINGCURVE_FIELD_NUMBER: builtins.int
    TOTALSUPPLY_FIELD_NUMBER: builtins.int
    VOLUME24_FIELD_NUMBER: builtins.int
    BUY24_FIELD_NUMBER: builtins.int
    SELL24_FIELD_NUMBER: builtins.int
    marketCap: builtins.str
    volume: builtins.str
    totalBuy: builtins.int
    totalSell: builtins.int
    boundingCurve: builtins.float
    totalSupply: builtins.str
    volume24: builtins.str
    buy24: builtins.int
    sell24: builtins.int
    def __init__(
        self,
        *,
        marketCap: builtins.str = ...,
        volume: builtins.str = ...,
        totalBuy: builtins.int = ...,
        totalSell: builtins.int = ...,
        boundingCurve: builtins.float = ...,
        totalSupply: builtins.str = ...,
        volume24: builtins.str = ...,
        buy24: builtins.int = ...,
        sell24: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["boundingCurve", b"boundingCurve", "buy24", b"buy24", "marketCap", b"marketCap", "sell24", b"sell24", "totalBuy", b"totalBuy", "totalSell", b"totalSell", "totalSupply", b"totalSupply", "volume", b"volume", "volume24", b"volume24"]) -> None: ...

global___NetworkData = NetworkData

@typing.final
class ValidationData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUMBEROFHOLDERS_FIELD_NUMBER: builtins.int
    BOUNDLEHOLDING_FIELD_NUMBER: builtins.int
    TOP10HOLDING_FIELD_NUMBER: builtins.int
    SNIPERSHOLDING_FIELD_NUMBER: builtins.int
    DEVHOLDING_FIELD_NUMBER: builtins.int
    INSIDERHOLDING_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    numberOfHolders: builtins.int
    boundleHolding: builtins.int
    top10Holding: builtins.int
    snipersHolding: builtins.int
    devHolding: builtins.int
    insiderHolding: builtins.int
    @property
    def protocol(self) -> global___Protocol: ...
    def __init__(
        self,
        *,
        numberOfHolders: builtins.int = ...,
        boundleHolding: builtins.int = ...,
        top10Holding: builtins.int = ...,
        snipersHolding: builtins.int = ...,
        devHolding: builtins.int = ...,
        insiderHolding: builtins.int = ...,
        protocol: global___Protocol | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["protocol", b"protocol"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["boundleHolding", b"boundleHolding", "devHolding", b"devHolding", "insiderHolding", b"insiderHolding", "numberOfHolders", b"numberOfHolders", "protocol", b"protocol", "snipersHolding", b"snipersHolding", "top10Holding", b"top10Holding"]) -> None: ...

global___ValidationData = ValidationData

@typing.final
class SecurityData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MINTABLE_FIELD_NUMBER: builtins.int
    FREEZABLE_FIELD_NUMBER: builtins.int
    LP_BURNED_FIELD_NUMBER: builtins.int
    RUGGED_FIELD_NUMBER: builtins.int
    mintable: builtins.bool
    freezable: builtins.bool
    lp_burned: builtins.bool
    rugged: builtins.bool
    def __init__(
        self,
        *,
        mintable: builtins.bool = ...,
        freezable: builtins.bool = ...,
        lp_burned: builtins.bool = ...,
        rugged: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["freezable", b"freezable", "lp_burned", b"lp_burned", "mintable", b"mintable", "rugged", b"rugged"]) -> None: ...

global___SecurityData = SecurityData

@typing.final
class RiskData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RISK_PERCENT_FIELD_NUMBER: builtins.int
    RISKS_FIELD_NUMBER: builtins.int
    risk_percent: builtins.float
    @property
    def risks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Risk]: ...
    def __init__(
        self,
        *,
        risk_percent: builtins.float = ...,
        risks: collections.abc.Iterable[global___Risk] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["risk_percent", b"risk_percent", "risks", b"risks"]) -> None: ...

global___RiskData = RiskData

@typing.final
class Risk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SCORE_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    name: builtins.str
    value: builtins.str
    description: builtins.str
    score: builtins.int
    level: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value: builtins.str = ...,
        description: builtins.str = ...,
        score: builtins.int = ...,
        level: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "level", b"level", "name", b"name", "score", b"score", "value", b"value"]) -> None: ...

global___Risk = Risk

@typing.final
class DevData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDRESS_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    address: builtins.str
    @property
    def tokens(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DevToken]: ...
    def __init__(
        self,
        *,
        address: builtins.str = ...,
        tokens: collections.abc.Iterable[global___DevToken] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "tokens", b"tokens"]) -> None: ...

global___DevData = DevData

@typing.final
class DevToken(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDRESS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    MARKET_CAP_FIELD_NUMBER: builtins.int
    address: builtins.str
    created_at: builtins.str
    market_cap: builtins.float
    def __init__(
        self,
        *,
        address: builtins.str = ...,
        created_at: builtins.str = ...,
        market_cap: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "created_at", b"created_at", "market_cap", b"market_cap"]) -> None: ...

global___DevToken = DevToken

@typing.final
class ProtocolResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NEW_BORN_PROTOCOLS_FIELD_NUMBER: builtins.int
    FINAL_STRETCH_PROTOCOLS_FIELD_NUMBER: builtins.int
    MIGRATED_PROTOCOLS_FIELD_NUMBER: builtins.int
    @property
    def new_born_protocols(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Protocol]: ...
    @property
    def final_stretch_protocols(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Protocol]: ...
    @property
    def migrated_protocols(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Protocol]: ...
    def __init__(
        self,
        *,
        new_born_protocols: collections.abc.Iterable[global___Protocol] | None = ...,
        final_stretch_protocols: collections.abc.Iterable[global___Protocol] | None = ...,
        migrated_protocols: collections.abc.Iterable[global___Protocol] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["final_stretch_protocols", b"final_stretch_protocols", "migrated_protocols", b"migrated_protocols", "new_born_protocols", b"new_born_protocols"]) -> None: ...

global___ProtocolResponse = ProtocolResponse

@typing.final
class Protocol(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LOGO_FIELD_NUMBER: builtins.int
    name: builtins.str
    logo: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        logo: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["logo", b"logo", "name", b"name"]) -> None: ...

global___Protocol = Protocol

@typing.final
class TopTraderStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORK_FIELD_NUMBER: builtins.int
    WINDOW_FIELD_NUMBER: builtins.int
    RESOLUTION_FIELD_NUMBER: builtins.int
    TOKEN_ADDRESS_FIELD_NUMBER: builtins.int
    SLUG_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    network: builtins.str
    window: builtins.int
    resolution: builtins.str
    token_address: builtins.str
    slug: builtins.str
    page: builtins.int
    page_size: builtins.int
    def __init__(
        self,
        *,
        network: builtins.str = ...,
        window: builtins.int = ...,
        resolution: builtins.str = ...,
        token_address: builtins.str | None = ...,
        slug: builtins.str | None = ...,
        page: builtins.int | None = ...,
        page_size: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_page", b"_page", "_page_size", b"_page_size", "_slug", b"_slug", "_token_address", b"_token_address", "page", b"page", "page_size", b"page_size", "slug", b"slug", "token_address", b"token_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_page", b"_page", "_page_size", b"_page_size", "_slug", b"_slug", "_token_address", b"_token_address", "network", b"network", "page", b"page", "page_size", b"page_size", "resolution", b"resolution", "slug", b"slug", "token_address", b"token_address", "window", b"window"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page", b"_page"]) -> typing.Literal["page"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page_size", b"_page_size"]) -> typing.Literal["page_size"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_slug", b"_slug"]) -> typing.Literal["slug"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_token_address", b"_token_address"]) -> typing.Literal["token_address"] | None: ...

global___TopTraderStreamRequest = TopTraderStreamRequest

@typing.final
class TopHolderStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORK_FIELD_NUMBER: builtins.int
    TOKEN_ADDRESS_FIELD_NUMBER: builtins.int
    SLUG_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    network: builtins.str
    token_address: builtins.str
    slug: builtins.str
    page: builtins.int
    page_size: builtins.int
    def __init__(
        self,
        *,
        network: builtins.str = ...,
        token_address: builtins.str | None = ...,
        slug: builtins.str | None = ...,
        page: builtins.int | None = ...,
        page_size: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_page", b"_page", "_page_size", b"_page_size", "_slug", b"_slug", "_token_address", b"_token_address", "page", b"page", "page_size", b"page_size", "slug", b"slug", "token_address", b"token_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_page", b"_page", "_page_size", b"_page_size", "_slug", b"_slug", "_token_address", b"_token_address", "network", b"network", "page", b"page", "page_size", b"page_size", "slug", b"slug", "token_address", b"token_address"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page", b"_page"]) -> typing.Literal["page"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page_size", b"_page_size"]) -> typing.Literal["page_size"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_slug", b"_slug"]) -> typing.Literal["slug"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_token_address", b"_token_address"]) -> typing.Literal["token_address"] | None: ...

global___TopHolderStreamRequest = TopHolderStreamRequest

@typing.final
class TokenUpdateStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORK_FIELD_NUMBER: builtins.int
    TOKEN_ADDRESS_FIELD_NUMBER: builtins.int
    RESOLUTION_FIELD_NUMBER: builtins.int
    network: builtins.str
    token_address: builtins.str
    resolution: builtins.str
    def __init__(
        self,
        *,
        network: builtins.str = ...,
        token_address: builtins.str = ...,
        resolution: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["network", b"network", "resolution", b"resolution", "token_address", b"token_address"]) -> None: ...

global___TokenUpdateStreamRequest = TokenUpdateStreamRequest

@typing.final
class WalletUpdate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WALLET_ADDRESS_FIELD_NUMBER: builtins.int
    NUM_BUYS_FIELD_NUMBER: builtins.int
    NUM_SELLS_FIELD_NUMBER: builtins.int
    NUM_INFLOWS_FIELD_NUMBER: builtins.int
    NUM_OUTFLOWS_FIELD_NUMBER: builtins.int
    NUM_WIN_FIELD_NUMBER: builtins.int
    NUM_LOSS_FIELD_NUMBER: builtins.int
    AVERAGE_BUY_FIELD_NUMBER: builtins.int
    VOLUME_BUYS_FIELD_NUMBER: builtins.int
    VOLUME_SELLS_FIELD_NUMBER: builtins.int
    REALIZED_PNL_FIELD_NUMBER: builtins.int
    VOLUME_INFLOW_FIELD_NUMBER: builtins.int
    VOLUME_OUTFLOW_FIELD_NUMBER: builtins.int
    BALANCE_FIELD_NUMBER: builtins.int
    BALANCE_FIRST_FIELD_NUMBER: builtins.int
    PNL_FIELD_NUMBER: builtins.int
    AMOUNT_BUYS_FIELD_NUMBER: builtins.int
    AMOUNT_SELLS_FIELD_NUMBER: builtins.int
    AMOUNT_INFLOW_FIELD_NUMBER: builtins.int
    AMOUNT_OUTFLOW_FIELD_NUMBER: builtins.int
    wallet_address: builtins.str
    num_buys: builtins.int
    num_sells: builtins.int
    num_inflows: builtins.int
    num_outflows: builtins.int
    num_win: builtins.int
    num_loss: builtins.int
    average_buy: builtins.float
    volume_buys: builtins.float
    volume_sells: builtins.float
    realized_pnl: builtins.float
    volume_inflow: builtins.float
    volume_outflow: builtins.float
    balance: builtins.float
    balance_first: builtins.float
    pnl: builtins.float
    amount_buys: builtins.float
    amount_sells: builtins.float
    amount_inflow: builtins.float
    amount_outflow: builtins.float
    def __init__(
        self,
        *,
        wallet_address: builtins.str = ...,
        num_buys: builtins.int = ...,
        num_sells: builtins.int = ...,
        num_inflows: builtins.int = ...,
        num_outflows: builtins.int = ...,
        num_win: builtins.int = ...,
        num_loss: builtins.int = ...,
        average_buy: builtins.float = ...,
        volume_buys: builtins.float = ...,
        volume_sells: builtins.float = ...,
        realized_pnl: builtins.float = ...,
        volume_inflow: builtins.float = ...,
        volume_outflow: builtins.float = ...,
        balance: builtins.float = ...,
        balance_first: builtins.float = ...,
        pnl: builtins.float = ...,
        amount_buys: builtins.float = ...,
        amount_sells: builtins.float = ...,
        amount_inflow: builtins.float = ...,
        amount_outflow: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["amount_buys", b"amount_buys", "amount_inflow", b"amount_inflow", "amount_outflow", b"amount_outflow", "amount_sells", b"amount_sells", "average_buy", b"average_buy", "balance", b"balance", "balance_first", b"balance_first", "num_buys", b"num_buys", "num_inflows", b"num_inflows", "num_loss", b"num_loss", "num_outflows", b"num_outflows", "num_sells", b"num_sells", "num_win", b"num_win", "pnl", b"pnl", "realized_pnl", b"realized_pnl", "volume_buys", b"volume_buys", "volume_inflow", b"volume_inflow", "volume_outflow", b"volume_outflow", "volume_sells", b"volume_sells", "wallet_address", b"wallet_address"]) -> None: ...

global___WalletUpdate = WalletUpdate

@typing.final
class TokenUpdateStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_ADDRESS_FIELD_NUMBER: builtins.int
    RESOLUTION_FIELD_NUMBER: builtins.int
    RELATED_AT_FIELD_NUMBER: builtins.int
    NUM_BUYS_FIELD_NUMBER: builtins.int
    NUM_SELLS_FIELD_NUMBER: builtins.int
    TOTAL_NUM_BUYS_FIELD_NUMBER: builtins.int
    TOTAL_NUM_SELLS_FIELD_NUMBER: builtins.int
    BUY_VOLUME_FIELD_NUMBER: builtins.int
    TOTAL_BUY_VOLUME_FIELD_NUMBER: builtins.int
    SELL_VOLUME_FIELD_NUMBER: builtins.int
    TOTAL_SELL_VOLUME_FIELD_NUMBER: builtins.int
    TRADING_VOLUME_FIELD_NUMBER: builtins.int
    TOTAL_TRADING_VOLUME_FIELD_NUMBER: builtins.int
    BASE_LIQUIDITY_FIELD_NUMBER: builtins.int
    token_address: builtins.str
    resolution: builtins.str
    num_buys: builtins.int
    num_sells: builtins.int
    total_num_buys: builtins.int
    total_num_sells: builtins.int
    buy_volume: builtins.float
    total_buy_volume: builtins.float
    sell_volume: builtins.float
    total_sell_volume: builtins.float
    trading_volume: builtins.float
    total_trading_volume: builtins.float
    base_liquidity: builtins.float
    @property
    def related_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        token_address: builtins.str = ...,
        resolution: builtins.str = ...,
        related_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        num_buys: builtins.int = ...,
        num_sells: builtins.int = ...,
        total_num_buys: builtins.int = ...,
        total_num_sells: builtins.int = ...,
        buy_volume: builtins.float = ...,
        total_buy_volume: builtins.float = ...,
        sell_volume: builtins.float = ...,
        total_sell_volume: builtins.float = ...,
        trading_volume: builtins.float = ...,
        total_trading_volume: builtins.float = ...,
        base_liquidity: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["related_at", b"related_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["base_liquidity", b"base_liquidity", "buy_volume", b"buy_volume", "num_buys", b"num_buys", "num_sells", b"num_sells", "related_at", b"related_at", "resolution", b"resolution", "sell_volume", b"sell_volume", "token_address", b"token_address", "total_buy_volume", b"total_buy_volume", "total_num_buys", b"total_num_buys", "total_num_sells", b"total_num_sells", "total_sell_volume", b"total_sell_volume", "total_trading_volume", b"total_trading_volume", "trading_volume", b"trading_volume"]) -> None: ...

global___TokenUpdateStreamResponse = TokenUpdateStreamResponse

@typing.final
class TopTraderStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WALLETS_FIELD_NUMBER: builtins.int
    @property
    def wallets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WalletUpdate]: ...
    def __init__(
        self,
        *,
        wallets: collections.abc.Iterable[global___WalletUpdate] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["wallets", b"wallets"]) -> None: ...

global___TopTraderStreamResponse = TopTraderStreamResponse

@typing.final
class TopHolderStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WALLETS_FIELD_NUMBER: builtins.int
    @property
    def wallets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WalletUpdate]: ...
    def __init__(
        self,
        *,
        wallets: collections.abc.Iterable[global___WalletUpdate] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["wallets", b"wallets"]) -> None: ...

global___TopHolderStreamResponse = TopHolderStreamResponse
