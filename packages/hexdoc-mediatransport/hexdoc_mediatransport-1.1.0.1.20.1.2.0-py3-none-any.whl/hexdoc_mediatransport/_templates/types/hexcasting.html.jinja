{% set d = mediatransport.diagrams.context("mediatransport.book.protocol") %}

<h3>{{d.tl("stdtypes")}}</h3>

<h4>{{d.tl("garbage")}}</h4>
<p>{{d.tl("garbage.description")}}</p>
{{d.dia([
  (1, 'literal', 'ff')
])}}

<h4>{{d.tl("truefalse")}}</h4>
<div class="diagram-sbs">
{{d.dia([
  (1, 'literal', '02')
])}}
{{d.dia([
  (1, 'literal', '03')
])}}
</div>

<h4>{{d.tl("null")}}</h4>
{{d.dia([
  (1, 'literal', '04')
])}}

<h4>{{d.tl("double")}}</h4>
<p>{{d.tl("double.description")}}</p>
{{d.dia([
  (1, 'literal', '05'),
  (8, 'sym', 'double_value')
])}}

<h4>{{d.tl("pattern")}}</h4>
<p>{{d.tl("pattern.description")}}</p>
<ul>
<li>{{d.tl("pattern.1")}}</li>
<li>{{d.tl("pattern.2")}}</li>
<li>{{d.tl("pattern.3")}}</li>
</ul>
{{d.dia([
  (1, 'literal', '06'),
  (1, 'sym', 'dir'),
  (4, 'sym', 'pattern_len'),
  (('pattern_len', '*1'), 'sym', 'angles'),
])}}

<h4>{{d.tl("vec3")}}</h4>
<p>{{d.tl("vec3.description")}}</p>
{{d.dia([
  (1, 'literal', '07'),
  (8, 'sym', 'vec_x'),
  (8, 'sym', 'vec_y'),
  (8, 'sym', 'vec_z'),
])}}

<h4>{{d.tl("list")}}</h4>
<p>{{d.tl("list.description")}}</p>
{{d.dia([
  (1, 'literal', '08'),
  (4, 'sym', 'list_len'),
  (None, 'sym', 'list_iotas'),
])}}
<p class="mediatransport-callout -warning">
  {{d.tl("list.warning")}}
</p>
