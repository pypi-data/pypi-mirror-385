# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .templates_create_agents_from_template_response_agents_item_memory_agent_type import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryAgentType,
)
from .templates_create_agents_from_template_response_agents_item_memory_blocks_item import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryBlocksItem,
)
from .templates_create_agents_from_template_response_agents_item_memory_file_blocks import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryFileBlocks,
)
from .templates_create_agents_from_template_response_agents_item_memory_prompt_template import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryPromptTemplate,
)


class TemplatesCreateAgentsFromTemplateResponseAgentsItemMemory(UncheckedBaseModel):
    agent_type: typing.Optional[TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryAgentType] = None
    blocks: typing.List[TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryBlocksItem]
    file_blocks: typing.Optional[TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryFileBlocks] = None
    prompt_template: typing.Optional[TemplatesCreateAgentsFromTemplateResponseAgentsItemMemoryPromptTemplate] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
