# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .update_assistant_message_content import UpdateAssistantMessageContent


class UpdateAssistantMessage(UncheckedBaseModel):
    message_type: typing.Optional[typing.Literal["assistant_message"]] = None
    content: UpdateAssistantMessageContent = pydantic.Field()
    """
    The message content sent by the assistant (can be a string or an array of content parts)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
