# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .letta_message_content_union import LettaMessageContentUnion


class LettaSerializeSchemasPydanticAgentSchemaMessageSchema(UncheckedBaseModel):
    created_at: str
    group_id: typing.Optional[str] = None
    model: typing.Optional[str] = None
    name: typing.Optional[str] = None
    role: str
    content: typing.List[LettaMessageContentUnion]
    tool_call_id: typing.Optional[str] = None
    tool_calls: typing.List[typing.Optional[typing.Any]]
    tool_returns: typing.List[typing.Optional[typing.Any]]
    updated_at: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
