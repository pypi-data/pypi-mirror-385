# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .block import Block
from .file_block import FileBlock
from .memory_agent_type import MemoryAgentType


class Memory(UncheckedBaseModel):
    """
    Represents the in-context memory (i.e. Core memory) of the agent. This includes both the `Block` objects (labelled by sections), as well as tools to edit the blocks.
    """

    agent_type: typing.Optional[MemoryAgentType] = pydantic.Field(default=None)
    """
    Agent type controlling prompt rendering.
    """

    blocks: typing.List[Block] = pydantic.Field()
    """
    Memory blocks contained in the agent's in-context memory
    """

    file_blocks: typing.Optional[typing.List[FileBlock]] = pydantic.Field(default=None)
    """
    Special blocks representing the agent's in-context memory of an attached file
    """

    prompt_template: typing.Optional[str] = pydantic.Field(default=None)
    """
    Deprecated. Ignored for performance.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
