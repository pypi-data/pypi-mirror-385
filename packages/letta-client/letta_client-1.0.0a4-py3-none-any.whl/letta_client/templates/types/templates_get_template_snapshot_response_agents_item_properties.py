# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .templates_get_template_snapshot_response_agents_item_properties_reasoning_effort import (
    TemplatesGetTemplateSnapshotResponseAgentsItemPropertiesReasoningEffort,
)
from .templates_get_template_snapshot_response_agents_item_properties_verbosity_level import (
    TemplatesGetTemplateSnapshotResponseAgentsItemPropertiesVerbosityLevel,
)


class TemplatesGetTemplateSnapshotResponseAgentsItemProperties(UncheckedBaseModel):
    enable_reasoner: typing.Optional[bool] = None
    put_inner_thoughts_in_kwargs: typing.Optional[bool] = None
    context_window_limit: typing.Optional[float] = None
    max_tokens: typing.Optional[float] = None
    max_reasoning_tokens: typing.Optional[float] = None
    max_files_open: typing.Optional[float] = None
    message_buffer_autoclear: typing.Optional[bool] = None
    verbosity_level: typing.Optional[TemplatesGetTemplateSnapshotResponseAgentsItemPropertiesVerbosityLevel] = None
    reasoning_effort: typing.Optional[TemplatesGetTemplateSnapshotResponseAgentsItemPropertiesReasoningEffort] = None
    per_file_view_window_char_limit: typing.Optional[float] = None
    temperature: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
