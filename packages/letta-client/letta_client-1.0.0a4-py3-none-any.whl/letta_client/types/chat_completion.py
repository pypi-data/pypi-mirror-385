# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .chat_completion_service_tier import ChatCompletionServiceTier
from .choice import Choice
from .completion_usage import CompletionUsage


class ChatCompletion(UncheckedBaseModel):
    id: str
    choices: typing.List[Choice]
    created: int
    model: str
    object: typing.Literal["chat.completion"] = "chat.completion"
    service_tier: typing.Optional[ChatCompletionServiceTier] = None
    system_fingerprint: typing.Optional[str] = None
    usage: typing.Optional[CompletionUsage] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
