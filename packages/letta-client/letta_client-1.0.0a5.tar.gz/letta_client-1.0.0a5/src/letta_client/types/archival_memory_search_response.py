# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .archival_memory_search_result import ArchivalMemorySearchResult


class ArchivalMemorySearchResponse(UncheckedBaseModel):
    results: typing.List[ArchivalMemorySearchResult] = pydantic.Field()
    """
    List of search results matching the query
    """

    count: int = pydantic.Field()
    """
    Total number of results returned
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
