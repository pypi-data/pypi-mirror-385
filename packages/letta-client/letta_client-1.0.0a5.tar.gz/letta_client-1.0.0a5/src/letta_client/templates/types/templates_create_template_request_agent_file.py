# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel


class TemplatesCreateTemplateRequestAgentFile(UncheckedBaseModel):
    """
    Create a template from an uploaded agent file
    """

    type: typing.Literal["agent_file"] = "agent_file"
    agent_file: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    The agent file to use as a template, this should be a JSON file exported from the platform
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional custom name for the template. If not provided, a random name will be generated.
    """

    update_existing_tools: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If true, update existing custom tools source_code and json_schema (source_type cannot be changed)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
