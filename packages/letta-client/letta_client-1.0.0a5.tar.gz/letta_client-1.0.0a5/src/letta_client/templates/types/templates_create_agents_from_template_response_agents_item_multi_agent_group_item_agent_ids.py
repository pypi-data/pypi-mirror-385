# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_base_template_id import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsBaseTemplateId,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_deployment_id import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsDeploymentId,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_hidden import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsHidden,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_last_processed_message_id import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsLastProcessedMessageId,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_manager_agent_id import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsManagerAgentId,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_manager_type import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsManagerType,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_max_message_buffer_length import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsMaxMessageBufferLength,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_max_turns import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsMaxTurns,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_min_message_buffer_length import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsMinMessageBufferLength,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_project_id import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsProjectId,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_shared_block_ids import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsSharedBlockIds,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_sleeptime_agent_frequency import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsSleeptimeAgentFrequency,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_template_id import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsTemplateId,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_termination_token import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsTerminationToken,
)
from .templates_create_agents_from_template_response_agents_item_multi_agent_group_item_agent_ids_turns_counter import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsTurnsCounter,
)


class TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIds(UncheckedBaseModel):
    id: str
    manager_type: TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsManagerType
    agent_ids: typing.List[str]
    description: str
    project_id: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsProjectId
    ] = None
    template_id: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsTemplateId
    ] = None
    base_template_id: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsBaseTemplateId
    ] = None
    deployment_id: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsDeploymentId
    ] = None
    shared_block_ids: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsSharedBlockIds
    ] = None
    manager_agent_id: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsManagerAgentId
    ] = None
    termination_token: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsTerminationToken
    ] = None
    max_turns: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsMaxTurns
    ] = None
    sleeptime_agent_frequency: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsSleeptimeAgentFrequency
    ] = None
    turns_counter: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsTurnsCounter
    ] = None
    last_processed_message_id: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsLastProcessedMessageId
    ] = None
    max_message_buffer_length: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsMaxMessageBufferLength
    ] = None
    min_message_buffer_length: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsMinMessageBufferLength
    ] = None
    hidden: typing.Optional[TemplatesCreateAgentsFromTemplateResponseAgentsItemMultiAgentGroupItemAgentIdsHidden] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
