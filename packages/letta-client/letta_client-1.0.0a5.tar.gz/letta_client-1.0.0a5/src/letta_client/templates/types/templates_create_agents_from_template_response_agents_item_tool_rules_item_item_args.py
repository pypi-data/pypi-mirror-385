# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .templates_create_agents_from_template_response_agents_item_tool_rules_item_item_args_args import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsArgs,
)
from .templates_create_agents_from_template_response_agents_item_tool_rules_item_item_args_prompt_template import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsPromptTemplate,
)
from .templates_create_agents_from_template_response_agents_item_tool_rules_item_item_args_type import (
    TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsType,
)


class TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgs(UncheckedBaseModel):
    tool_name: str
    type: typing.Optional[TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsType] = None
    prompt_template: typing.Optional[
        TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsPromptTemplate
    ] = None
    args: typing.Optional[TemplatesCreateAgentsFromTemplateResponseAgentsItemToolRulesItemItemArgsArgs] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
