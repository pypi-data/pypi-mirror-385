# Generated by ariadne-codegen

from .base_operation import GraphQLField


class AddAtomEventResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddAtomEventResultGraphQLField":
        self._alias = alias
        return self


class AddDatasetEventResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddDatasetEventResultGraphQLField":
        self._alias = alias
        return self


class AddProgramUserResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddProgramUserResultGraphQLField":
        self._alias = alias
        return self


class AddSequenceEventResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddSequenceEventResultGraphQLField":
        self._alias = alias
        return self


class AddSlewEventResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddSlewEventResultGraphQLField":
        self._alias = alias
        return self


class AddStepEventResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddStepEventResultGraphQLField":
        self._alias = alias
        return self


class AddTimeChargeCorrectionResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddTimeChargeCorrectionResultGraphQLField":
        self._alias = alias
        return self


class AllocationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AllocationGraphQLField":
        self._alias = alias
        return self


class AtomEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AtomEventGraphQLField":
        self._alias = alias
        return self


class AtomRecordGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AtomRecordGraphQLField":
        self._alias = alias
        return self


class AtomRecordSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AtomRecordSelectResultGraphQLField":
        self._alias = alias
        return self


class BandedTimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BandedTimeGraphQLField":
        self._alias = alias
        return self


class CalculatedBandedTimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CalculatedBandedTimeGraphQLField":
        self._alias = alias
        return self


class BiasGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BiasGraphQLField":
        self._alias = alias
        return self


class CallForProposalsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CallForProposalsGraphQLField":
        self._alias = alias
        return self


class CallForProposalsPartnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CallForProposalsPartnerGraphQLField":
        self._alias = alias
        return self


class CallsForProposalsSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CallsForProposalsSelectResultGraphQLField":
        self._alias = alias
        return self


class CategorizedTimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CategorizedTimeGraphQLField":
        self._alias = alias
        return self


class CategorizedTimeRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CategorizedTimeRangeGraphQLField":
        self._alias = alias
        return self


class CalculatedCategorizedTimeRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CalculatedCategorizedTimeRangeGraphQLField":
        self._alias = alias
        return self


class ChangeProgramUserRoleResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeProgramUserRoleResultGraphQLField":
        self._alias = alias
        return self


class CloneObservationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloneObservationResultGraphQLField":
        self._alias = alias
        return self


class CloneTargetResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloneTargetResultGraphQLField":
        self._alias = alias
        return self


class ChronicleEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChronicleEntryGraphQLField":
        self._alias = alias
        return self


class ConditionsEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConditionsEntryGraphQLField":
        self._alias = alias
        return self


class ConditionsMeasurementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConditionsMeasurementGraphQLField":
        self._alias = alias
        return self


class ConditionsIntuitionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConditionsIntuitionGraphQLField":
        self._alias = alias
        return self


class ConditionsExpectationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConditionsExpectationGraphQLField":
        self._alias = alias
        return self


class AddConditionsEntryResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddConditionsEntryResultGraphQLField":
        self._alias = alias
        return self


class CoordinateLimitsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CoordinateLimitsGraphQLField":
        self._alias = alias
        return self


class CreateCallForProposalsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCallForProposalsResultGraphQLField":
        self._alias = alias
        return self


class CreateObservationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateObservationResultGraphQLField":
        self._alias = alias
        return self


class CreateProgramNoteResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProgramNoteResultGraphQLField":
        self._alias = alias
        return self


class CreateProgramResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProgramResultGraphQLField":
        self._alias = alias
        return self


class CreateProposalResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProposalResultGraphQLField":
        self._alias = alias
        return self


class CreateTargetResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateTargetResultGraphQLField":
        self._alias = alias
        return self


class DarkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DarkGraphQLField":
        self._alias = alias
        return self


class DateIntervalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DateIntervalGraphQLField":
        self._alias = alias
        return self


class DeleteProgramUserResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProgramUserResultGraphQLField":
        self._alias = alias
        return self


class DeleteProposalResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProposalResultGraphQLField":
        self._alias = alias
        return self


class EmailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailGraphQLField":
        self._alias = alias
        return self


class GcalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GcalGraphQLField":
        self._alias = alias
        return self


class GmosCcdModeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosCcdModeGraphQLField":
        self._alias = alias
        return self


class GmosCustomMaskGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosCustomMaskGraphQLField":
        self._alias = alias
        return self


class GmosNodAndShuffleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNodAndShuffleGraphQLField":
        self._alias = alias
        return self


class GmosNorthAtomGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthAtomGraphQLField":
        self._alias = alias
        return self


class GmosNorthDynamicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthDynamicGraphQLField":
        self._alias = alias
        return self


class GmosNorthExecutionConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthExecutionConfigGraphQLField":
        self._alias = alias
        return self


class GmosNorthExecutionSequenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthExecutionSequenceGraphQLField":
        self._alias = alias
        return self


class GmosNorthFpuGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthFpuGraphQLField":
        self._alias = alias
        return self


class GmosNorthGratingConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthGratingConfigGraphQLField":
        self._alias = alias
        return self


class GmosNorthStaticGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthStaticGraphQLField":
        self._alias = alias
        return self


class GmosNorthStepGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthStepGraphQLField":
        self._alias = alias
        return self


class GmosSouthAtomGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthAtomGraphQLField":
        self._alias = alias
        return self


class GmosSouthDynamicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthDynamicGraphQLField":
        self._alias = alias
        return self


class GmosSouthExecutionConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthExecutionConfigGraphQLField":
        self._alias = alias
        return self


class GmosSouthExecutionSequenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthExecutionSequenceGraphQLField":
        self._alias = alias
        return self


class GmosSouthFpuGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthFpuGraphQLField":
        self._alias = alias
        return self


class GmosSouthGratingConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthGratingConfigGraphQLField":
        self._alias = alias
        return self


class GmosSouthStaticGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthStaticGraphQLField":
        self._alias = alias
        return self


class GmosSouthStepGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthStepGraphQLField":
        self._alias = alias
        return self


class CloneGroupResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloneGroupResultGraphQLField":
        self._alias = alias
        return self


class UserInvitationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserInvitationGraphQLField":
        self._alias = alias
        return self


class CreateUserInvitationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateUserInvitationResultGraphQLField":
        self._alias = alias
        return self


class RedeemUserInvitationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RedeemUserInvitationResultGraphQLField":
        self._alias = alias
        return self


class RevokeUserInvitationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RevokeUserInvitationResultGraphQLField":
        self._alias = alias
        return self


class LinkUserResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkUserResultGraphQLField":
        self._alias = alias
        return self


class ObservationEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservationEditGraphQLField":
        self._alias = alias
        return self


class ConfigurationRequestEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationRequestEditGraphQLField":
        self._alias = alias
        return self


class OffsetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OffsetGraphQLField":
        self._alias = alias
        return self


class PartnerLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PartnerLinkGraphQLField":
        self._alias = alias
        return self


class HasPartnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HasPartnerGraphQLField":
        self._alias = alias
        return self


class HasNonPartnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HasNonPartnerGraphQLField":
        self._alias = alias
        return self


class HasUnspecifiedPartnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HasUnspecifiedPartnerGraphQLField":
        self._alias = alias
        return self


class PartnerSplitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PartnerSplitGraphQLField":
        self._alias = alias
        return self


class ProgramEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramEditGraphQLField":
        self._alias = alias
        return self


class ProgramUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramUserGraphQLField":
        self._alias = alias
        return self


class ProposalTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProposalTypeGraphQLField":
        self._alias = alias
        return self


class ClassicalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClassicalGraphQLField":
        self._alias = alias
        return self


class DemoScienceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DemoScienceGraphQLField":
        self._alias = alias
        return self


class DirectorsTimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DirectorsTimeGraphQLField":
        self._alias = alias
        return self


class FastTurnaroundGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FastTurnaroundGraphQLField":
        self._alias = alias
        return self


class LargeProgramGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LargeProgramGraphQLField":
        self._alias = alias
        return self


class PoorWeatherGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PoorWeatherGraphQLField":
        self._alias = alias
        return self


class QueueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QueueGraphQLField":
        self._alias = alias
        return self


class SystemVerificationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemVerificationGraphQLField":
        self._alias = alias
        return self


class RecordAtomResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordAtomResultGraphQLField":
        self._alias = alias
        return self


class RecordDatasetResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordDatasetResultGraphQLField":
        self._alias = alias
        return self


class RecordGmosNorthStepResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordGmosNorthStepResultGraphQLField":
        self._alias = alias
        return self


class RecordGmosNorthVisitResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordGmosNorthVisitResultGraphQLField":
        self._alias = alias
        return self


class RecordGmosSouthStepResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordGmosSouthStepResultGraphQLField":
        self._alias = alias
        return self


class RecordGmosSouthVisitResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordGmosSouthVisitResultGraphQLField":
        self._alias = alias
        return self


class ResetAcquisitionResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ResetAcquisitionResultGraphQLField":
        self._alias = alias
        return self


class ScienceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ScienceGraphQLField":
        self._alias = alias
        return self


class SmartGcalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SmartGcalGraphQLField":
        self._alias = alias
        return self


class SetAllocationsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetAllocationsResultGraphQLField":
        self._alias = alias
        return self


class SetupTimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetupTimeGraphQLField":
        self._alias = alias
        return self


class SetGuideTargetNameResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetGuideTargetNameResultGraphQLField":
        self._alias = alias
        return self


class SetProgramReferenceResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetProgramReferenceResultGraphQLField":
        self._alias = alias
        return self


class SetProposalStatusResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetProposalStatusResultGraphQLField":
        self._alias = alias
        return self


class StepConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StepConfigGraphQLField":
        self._alias = alias
        return self


class ObscalcUpdateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObscalcUpdateGraphQLField":
        self._alias = alias
        return self


class ExecutionEventAddedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExecutionEventAddedGraphQLField":
        self._alias = alias
        return self


class DatasetEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetEditGraphQLField":
        self._alias = alias
        return self


class TargetEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetEditGraphQLField":
        self._alias = alias
        return self


class GroupEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupEditGraphQLField":
        self._alias = alias
        return self


class TelescopeConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TelescopeConfigGraphQLField":
        self._alias = alias
        return self


class UpdateAsterismsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateAsterismsResultGraphQLField":
        self._alias = alias
        return self


class UpdateAttachmentsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateAttachmentsResultGraphQLField":
        self._alias = alias
        return self


class UpdateCallsForProposalsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCallsForProposalsResultGraphQLField":
        self._alias = alias
        return self


class UpdateDatasetsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateDatasetsResultGraphQLField":
        self._alias = alias
        return self


class UpdateGroupsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateGroupsResultGraphQLField":
        self._alias = alias
        return self


class UpdateObservationsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateObservationsResultGraphQLField":
        self._alias = alias
        return self


class UpdateConfigurationRequestsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateConfigurationRequestsResultGraphQLField":
        self._alias = alias
        return self


class UpdateProgramUsersResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProgramUsersResultGraphQLField":
        self._alias = alias
        return self


class UpdateProgramNotesResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProgramNotesResultGraphQLField":
        self._alias = alias
        return self


class UpdateProgramsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProgramsResultGraphQLField":
        self._alias = alias
        return self


class UpdateProposalResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProposalResultGraphQLField":
        self._alias = alias
        return self


class UpdateTargetsResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTargetsResultGraphQLField":
        self._alias = alias
        return self


class OffsetPGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OffsetPGraphQLField":
        self._alias = alias
        return self


class AirMassRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AirMassRangeGraphQLField":
        self._alias = alias
        return self


class AngleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AngleGraphQLField":
        self._alias = alias
        return self


class AsterismGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AsterismGroupGraphQLField":
        self._alias = alias
        return self


class AsterismGroupSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AsterismGroupSelectResultGraphQLField":
        self._alias = alias
        return self


class AttachmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AttachmentGraphQLField":
        self._alias = alias
        return self


class BandBrightnessIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BandBrightnessIntegratedGraphQLField":
        self._alias = alias
        return self


class BandBrightnessSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BandBrightnessSurfaceGraphQLField":
        self._alias = alias
        return self


class BandNormalizedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BandNormalizedGraphQLField":
        self._alias = alias
        return self


class BandNormalizedIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BandNormalizedIntegratedGraphQLField":
        self._alias = alias
        return self


class BandNormalizedSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BandNormalizedSurfaceGraphQLField":
        self._alias = alias
        return self


class CatalogInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CatalogInfoGraphQLField":
        self._alias = alias
        return self


class ConstraintSetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConstraintSetGraphQLField":
        self._alias = alias
        return self


class ConstraintSetGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConstraintSetGroupGraphQLField":
        self._alias = alias
        return self


class ConstraintSetGroupSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConstraintSetGroupSelectResultGraphQLField":
        self._alias = alias
        return self


class CoordinatesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CoordinatesGraphQLField":
        self._alias = alias
        return self


class DatasetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetGraphQLField":
        self._alias = alias
        return self


class DatasetChronicleEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetChronicleEntryGraphQLField":
        self._alias = alias
        return self


class DatasetChronicleEntrySelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetChronicleEntrySelectResultGraphQLField":
        self._alias = alias
        return self


class DatasetEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetEventGraphQLField":
        self._alias = alias
        return self


class DatasetReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetReferenceGraphQLField":
        self._alias = alias
        return self


class DatasetSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetSelectResultGraphQLField":
        self._alias = alias
        return self


class DeclinationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeclinationGraphQLField":
        self._alias = alias
        return self


class ElevationRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ElevationRangeGraphQLField":
        self._alias = alias
        return self


class EmissionLineIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmissionLineIntegratedGraphQLField":
        self._alias = alias
        return self


class EmissionLineSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmissionLineSurfaceGraphQLField":
        self._alias = alias
        return self


class EmissionLinesIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmissionLinesIntegratedGraphQLField":
        self._alias = alias
        return self


class EmissionLinesSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmissionLinesSurfaceGraphQLField":
        self._alias = alias
        return self


class ExecutionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExecutionGraphQLField":
        self._alias = alias
        return self


class ExecutionConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExecutionConfigGraphQLField":
        self._alias = alias
        return self


class ExecutionEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExecutionEventGraphQLField":
        self._alias = alias
        return self


class ExecutionEventSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExecutionEventSelectResultGraphQLField":
        self._alias = alias
        return self


class ExecutionDigestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExecutionDigestGraphQLField":
        self._alias = alias
        return self


class CalculatedExecutionDigestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CalculatedExecutionDigestGraphQLField":
        self._alias = alias
        return self


class ExposureTimeModeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExposureTimeModeGraphQLField":
        self._alias = alias
        return self


class Flamingos2ExecutionConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2ExecutionConfigGraphQLField":
        self._alias = alias
        return self


class Flamingos2ExecutionSequenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2ExecutionSequenceGraphQLField":
        self._alias = alias
        return self


class Flamingos2StaticGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2StaticGraphQLField":
        self._alias = alias
        return self


class RecordFlamingos2StepResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordFlamingos2StepResultGraphQLField":
        self._alias = alias
        return self


class RecordFlamingos2VisitResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecordFlamingos2VisitResultGraphQLField":
        self._alias = alias
        return self


class Flamingos2AtomGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2AtomGraphQLField":
        self._alias = alias
        return self


class Flamingos2StepGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2StepGraphQLField":
        self._alias = alias
        return self


class Flamingos2DynamicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2DynamicGraphQLField":
        self._alias = alias
        return self


class Flamingos2FpuMaskGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2FpuMaskGraphQLField":
        self._alias = alias
        return self


class Flamingos2CustomMaskGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2CustomMaskGraphQLField":
        self._alias = alias
        return self


class Flamingos2LongSlitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Flamingos2LongSlitGraphQLField":
        self._alias = alias
        return self


class FilterTypeMetaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FilterTypeMetaGraphQLField":
        self._alias = alias
        return self


class TimeAndCountExposureTimeModeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeAndCountExposureTimeModeGraphQLField":
        self._alias = alias
        return self


class FluxDensityContinuumIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FluxDensityContinuumIntegratedGraphQLField":
        self._alias = alias
        return self


class FluxDensityContinuumSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FluxDensityContinuumSurfaceGraphQLField":
        self._alias = alias
        return self


class FluxDensityEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FluxDensityEntryGraphQLField":
        self._alias = alias
        return self


class GaussianSourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GaussianSourceGraphQLField":
        self._alias = alias
        return self


class GmosNorthLongSlitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthLongSlitGraphQLField":
        self._alias = alias
        return self


class GmosNorthImagingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosNorthImagingGraphQLField":
        self._alias = alias
        return self


class GmosSouthLongSlitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthLongSlitGraphQLField":
        self._alias = alias
        return self


class GmosSouthImagingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GmosSouthImagingGraphQLField":
        self._alias = alias
        return self


class GoaPropertiesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GoaPropertiesGraphQLField":
        self._alias = alias
        return self


class GroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupGraphQLField":
        self._alias = alias
        return self


class GroupElementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupElementGraphQLField":
        self._alias = alias
        return self


class CreateGroupResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateGroupResultGraphQLField":
        self._alias = alias
        return self


class GuideAvailabilityPeriodGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GuideAvailabilityPeriodGraphQLField":
        self._alias = alias
        return self


class GuideEnvironmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GuideEnvironmentGraphQLField":
        self._alias = alias
        return self


class GuideTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GuideTargetGraphQLField":
        self._alias = alias
        return self


class HourAngleRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HourAngleRangeGraphQLField":
        self._alias = alias
        return self


class SpectroscopyConfigOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectroscopyConfigOptionGraphQLField":
        self._alias = alias
        return self


class SpectroscopyConfigOptionGmosNorthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectroscopyConfigOptionGmosNorthGraphQLField":
        self._alias = alias
        return self


class SpectroscopyConfigOptionGmosSouthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectroscopyConfigOptionGmosSouthGraphQLField":
        self._alias = alias
        return self


class SpectroscopyConfigOptionFlamingos2GraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectroscopyConfigOptionFlamingos2GraphQLField":
        self._alias = alias
        return self


class ImagingScienceRequirementsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ImagingScienceRequirementsGraphQLField":
        self._alias = alias
        return self


class ImagingConfigOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ImagingConfigOptionGraphQLField":
        self._alias = alias
        return self


class ImagingConfigOptionGmosNorthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ImagingConfigOptionGmosNorthGraphQLField":
        self._alias = alias
        return self


class ImagingConfigOptionGmosSouthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ImagingConfigOptionGmosSouthGraphQLField":
        self._alias = alias
        return self


class ItcResultSetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ItcResultSetGraphQLField":
        self._alias = alias
        return self


class SignalToNoiseAtGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SignalToNoiseAtGraphQLField":
        self._alias = alias
        return self


class ItcResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ItcResultGraphQLField":
        self._alias = alias
        return self


class LineFluxIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LineFluxIntegratedGraphQLField":
        self._alias = alias
        return self


class LineFluxSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LineFluxSurfaceGraphQLField":
        self._alias = alias
        return self


class NonsiderealGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NonsiderealGraphQLField":
        self._alias = alias
        return self


class TimingWindowRepeatGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimingWindowRepeatGraphQLField":
        self._alias = alias
        return self


class TimingWindowEndAtGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimingWindowEndAtGraphQLField":
        self._alias = alias
        return self


class TimingWindowEndAfterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimingWindowEndAfterGraphQLField":
        self._alias = alias
        return self


class TimingWindowEndUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "TimingWindowEndUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "TimingWindowEndUnion":
        self._alias = alias
        return self


class TimingWindowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimingWindowGraphQLField":
        self._alias = alias
        return self


class ObservationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservationGraphQLField":
        self._alias = alias
        return self


class ConfigurationTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationTargetGraphQLField":
        self._alias = alias
        return self


class ConfigurationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationGraphQLField":
        self._alias = alias
        return self


class ConfigurationConditionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationConditionsGraphQLField":
        self._alias = alias
        return self


class ConfigurationObservingModeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationObservingModeGraphQLField":
        self._alias = alias
        return self


class ConfigurationGmosNorthLongSlitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationGmosNorthLongSlitGraphQLField":
        self._alias = alias
        return self


class ConfigurationGmosSouthLongSlitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationGmosSouthLongSlitGraphQLField":
        self._alias = alias
        return self


class ConfigurationGmosNorthImagingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationGmosNorthImagingGraphQLField":
        self._alias = alias
        return self


class ConfigurationGmosSouthImagingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationGmosSouthImagingGraphQLField":
        self._alias = alias
        return self


class ConfigurationFlamingos2LongSlitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationFlamingos2LongSlitGraphQLField":
        self._alias = alias
        return self


class ConfigurationRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationRequestGraphQLField":
        self._alias = alias
        return self


class ItcGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ItcGraphQLField":
        self._alias = alias
        return self


class ObservationSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservationSelectResultGraphQLField":
        self._alias = alias
        return self


class ConfigurationRequestSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigurationRequestSelectResultGraphQLField":
        self._alias = alias
        return self


class ObservationReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservationReferenceGraphQLField":
        self._alias = alias
        return self


class ObservationValidationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservationValidationGraphQLField":
        self._alias = alias
        return self


class ParallaxGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ParallaxGraphQLField":
        self._alias = alias
        return self


class PosAngleConstraintGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PosAngleConstraintGraphQLField":
        self._alias = alias
        return self


class ProgramGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramGraphQLField":
        self._alias = alias
        return self


class ProgramNoteGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramNoteGraphQLField":
        self._alias = alias
        return self


class ProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramReferenceGraphQLField":
        self._alias = alias
        return self


class CalibrationProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CalibrationProgramReferenceGraphQLField":
        self._alias = alias
        return self


class CommissioningProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommissioningProgramReferenceGraphQLField":
        self._alias = alias
        return self


class EngineeringProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EngineeringProgramReferenceGraphQLField":
        self._alias = alias
        return self


class ExampleProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExampleProgramReferenceGraphQLField":
        self._alias = alias
        return self


class LibraryProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LibraryProgramReferenceGraphQLField":
        self._alias = alias
        return self


class MonitoringProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MonitoringProgramReferenceGraphQLField":
        self._alias = alias
        return self


class ScienceProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ScienceProgramReferenceGraphQLField":
        self._alias = alias
        return self


class SystemProgramReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemProgramReferenceGraphQLField":
        self._alias = alias
        return self


class ProgramNoteSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramNoteSelectResultGraphQLField":
        self._alias = alias
        return self


class ProgramSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramSelectResultGraphQLField":
        self._alias = alias
        return self


class ProgramUserSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProgramUserSelectResultGraphQLField":
        self._alias = alias
        return self


class ProperMotionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProperMotionGraphQLField":
        self._alias = alias
        return self


class ProperMotionDeclinationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProperMotionDeclinationGraphQLField":
        self._alias = alias
        return self


class ProperMotionRAGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProperMotionRAGraphQLField":
        self._alias = alias
        return self


class ProposalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProposalGraphQLField":
        self._alias = alias
        return self


class ProposalReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProposalReferenceGraphQLField":
        self._alias = alias
        return self


class ProposalStatusMetaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProposalStatusMetaGraphQLField":
        self._alias = alias
        return self


class RadialVelocityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RadialVelocityGraphQLField":
        self._alias = alias
        return self


class RightAscensionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RightAscensionGraphQLField":
        self._alias = alias
        return self


class ObservingModeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservingModeGraphQLField":
        self._alias = alias
        return self


class ObservingModeGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservingModeGroupGraphQLField":
        self._alias = alias
        return self


class ObservingModeGroupSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservingModeGroupSelectResultGraphQLField":
        self._alias = alias
        return self


class ScienceRequirementsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ScienceRequirementsGraphQLField":
        self._alias = alias
        return self


class ScienceRequirementsGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ScienceRequirementsGroupGraphQLField":
        self._alias = alias
        return self


class ScienceRequirementsGroupSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ScienceRequirementsGroupSelectResultGraphQLField":
        self._alias = alias
        return self


class SequenceDigestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SequenceDigestGraphQLField":
        self._alias = alias
        return self


class SequenceEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SequenceEventGraphQLField":
        self._alias = alias
        return self


class SiderealGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SiderealGraphQLField":
        self._alias = alias
        return self


class SignalToNoiseExposureTimeModeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SignalToNoiseExposureTimeModeGraphQLField":
        self._alias = alias
        return self


class SiteCoordinateLimitsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SiteCoordinateLimitsGraphQLField":
        self._alias = alias
        return self


class SlewEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlewEventGraphQLField":
        self._alias = alias
        return self


class SourceProfileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SourceProfileGraphQLField":
        self._alias = alias
        return self


class SpectralDefinitionIntegratedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectralDefinitionIntegratedGraphQLField":
        self._alias = alias
        return self


class SpectralDefinitionSurfaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectralDefinitionSurfaceGraphQLField":
        self._alias = alias
        return self


class SpectroscopyScienceRequirementsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpectroscopyScienceRequirementsGraphQLField":
        self._alias = alias
        return self


class StepEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StepEventGraphQLField":
        self._alias = alias
        return self


class ConfigChangeEstimateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConfigChangeEstimateGraphQLField":
        self._alias = alias
        return self


class AllConfigChangeEstimatesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AllConfigChangeEstimatesGraphQLField":
        self._alias = alias
        return self


class DatasetEstimateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetEstimateGraphQLField":
        self._alias = alias
        return self


class DetectorEstimateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DetectorEstimateGraphQLField":
        self._alias = alias
        return self


class AllDetectorEstimatesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AllDetectorEstimatesGraphQLField":
        self._alias = alias
        return self


class StepEstimateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StepEstimateGraphQLField":
        self._alias = alias
        return self


class StepRecordGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StepRecordGraphQLField":
        self._alias = alias
        return self


class StepRecordSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StepRecordSelectResultGraphQLField":
        self._alias = alias
        return self


class TargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetGraphQLField":
        self._alias = alias
        return self


class OpportunityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OpportunityGraphQLField":
        self._alias = alias
        return self


class RightAscensionArcGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RightAscensionArcGraphQLField":
        self._alias = alias
        return self


class DeclinationArcGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeclinationArcGraphQLField":
        self._alias = alias
        return self


class RegionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RegionGraphQLField":
        self._alias = alias
        return self


class TargetEnvironmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetEnvironmentGraphQLField":
        self._alias = alias
        return self


class TargetEnvironmentGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetEnvironmentGroupGraphQLField":
        self._alias = alias
        return self


class TargetEnvironmentGroupSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetEnvironmentGroupSelectResultGraphQLField":
        self._alias = alias
        return self


class TargetGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetGroupGraphQLField":
        self._alias = alias
        return self


class TargetGroupSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetGroupSelectResultGraphQLField":
        self._alias = alias
        return self


class TargetSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TargetSelectResultGraphQLField":
        self._alias = alias
        return self


class TimeChargeCorrectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeCorrectionGraphQLField":
        self._alias = alias
        return self


class TimeChargeDiscountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeDiscountGraphQLField":
        self._alias = alias
        return self


class TimeChargeDaylightDiscountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeDaylightDiscountGraphQLField":
        self._alias = alias
        return self


class TimeChargeNoDataDiscountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeNoDataDiscountGraphQLField":
        self._alias = alias
        return self


class TimeChargeOverlapDiscountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeOverlapDiscountGraphQLField":
        self._alias = alias
        return self


class TimeChargeQaDiscountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeQaDiscountGraphQLField":
        self._alias = alias
        return self


class TimeChargeInvoiceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeChargeInvoiceGraphQLField":
        self._alias = alias
        return self


class TimeSpanGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeSpanGraphQLField":
        self._alias = alias
        return self


class TimestampIntervalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimestampIntervalGraphQLField":
        self._alias = alias
        return self


class UnlinkUserResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlinkUserResultGraphQLField":
        self._alias = alias
        return self


class UnnormalizedSedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnnormalizedSedGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserProfileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserProfileGraphQLField":
        self._alias = alias
        return self


class VisitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VisitGraphQLField":
        self._alias = alias
        return self


class VisitSelectResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VisitSelectResultGraphQLField":
        self._alias = alias
        return self


class WavelengthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WavelengthGraphQLField":
        self._alias = alias
        return self


class WavelengthDitherGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WavelengthDitherGraphQLField":
        self._alias = alias
        return self


class OffsetQGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OffsetQGraphQLField":
        self._alias = alias
        return self


class ObservationWorkflowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ObservationWorkflowGraphQLField":
        self._alias = alias
        return self


class CalculatedObservationWorkflowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CalculatedObservationWorkflowGraphQLField":
        self._alias = alias
        return self
