[project]
name = "dana-python"
version = "1.1.10"
readme = "README.md"
description = "API Client (SDK) for DANA APIs based on https://dashboard.dana.id/api-docs"
license = "Apache-2.0"
requires-python = ">3.9.1"
authors = [
  { name = "DANA Package Manager ", email = "package-manager@dana.id" },
]
maintainers = [
    { name = "DANA Package Manager ", email = "package-manager@dana.id" }
]
keywords = ["DANA", "DANA ID Docs", "DANA SDK", "DANA Python", "DANA API Client", "DANA Python API Client", "DANA Python SDK"]
dependencies = [
  "annotated-types==0.7.0",
  "cffi==1.17.1",
  "cryptography>=44.0.2,<46.0.0",
  "pycparser==2.22",
  "pydantic>=2.10.6,<3.0.0",
  "pydantic-core>=2.27.2,<3.0.0",
  "python-dateutil==2.9.0.post0",
  "six==1.17.0",
  "typing-extensions>=4.12.2,<5.0.0",
  "urllib3>=2.3.0,<3.0.0"
]

[project.urls]
homepage = "https://dashboard.dana.id/api-docs"
repository = "https://github.com/dana-id/dana-python"

[tool.setuptools.dynamic]
readme = {file=["README.md", "docs/PaymentGatewayApi.md"], content-type="text/markdown"}

[tool.poetry]
include = ["LICENSE", "README.md", "docs/*.md"]
packages = [{ include = "dana" }]

[tool.poetry.group.dev.dependencies]
pytest = ">= 7.2.1"
pytest-cov = ">= 2.8.1"
tox = ">= 3.9.0"
flake8 = ">= 4.0.0"
types-python-dateutil = ">= 2.8.19.14"
mypy = ">= 1.5"


[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["dana*"]

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.mypy]
files = [
  "dana",
  #"test",  # auto-generated tests
  "tests", # hand-written tests
]
# TODO: enable "strict" once all these individual checks are passing
# strict = true

# List from: https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

## Getting these passing should be easy
strict_equality = true
extra_checks = true

## Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

## These shouldn't be too much additional work, but may be tricky to
## get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

### These next few are various gradations of forcing use of type annotations
#disallow_untyped_calls = true
#disallow_incomplete_defs = true
#disallow_untyped_defs = true
#
### This one isn't too hard to get passing, but return on investment is lower
#no_implicit_reexport = true
#
### This one can be tricky to get passing if you use a lot of untyped libraries
#warn_return_any = true

[[tool.mypy.overrides]]
module = [
  "dana.utils",
]
warn_unused_ignores = true
strict_equality = true
extra_checks = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_reexport = true
warn_return_any = true
