[tool.poetry]
name = "qtrade-lib"
version = "0.1.3"
description = "A Python library for backtesting trading strategies and applying reinforcement learning to trading."
authors = ["Guan Guan <guanguan1114@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/gguan/qtrade"
repository = "https://github.com/gguan/qtrade"
keywords = ["trading", "backtesting", "reinforcement learning"]
packages = [{ include = "qtrade" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = "*"
pandas = "*"
scipy = ">=1.6.0"
matplotlib = ">=3.3.0"
bokeh = ">=3.3.0"
tqdm = ">=4.0.0"
gymnasium = ">=1.0.0"
mplfinance = ">=0.12.10b0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.0.0"
pytest = "^7.0.0"

[tool.poetry.scripts]
qtrade = "qtrade.cli:main"

[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Same as Black.
line-length = 127
# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# See https://beta.ruff.rs/docs/rules/
select = ["E", "F", "B", "UP", "C90", "RUF"]
# B028: Ignore explicit stacklevel`
# RUF013: Too many false positives (implicit optional)
ignore = ["B028", "RUF013", "F821", "B027", "RUF012"]

[tool.ruff.lint.per-file-ignores]
# Default implementation in abstract methods
"./stable_baselines3/common/callbacks.py" = ["B027"]
"./stable_baselines3/common/noise.py" = ["B027"]
# ClassVar, implicit optional check not needed for tests
"./tests/*.py" = ["RUF012", "RUF013"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 15

[tool.black]
line-length = 127

[tool.coverage.run]
disable_warnings = ["couldnt-parse"]
branch = false
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError()",
    "if typing.TYPE_CHECKING:",
]
