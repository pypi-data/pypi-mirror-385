"""
Geode-Implicit Python binding
"""
from __future__ import annotations
import opengeode.lib64.opengeode_py_mesh
import opengeode.lib64.opengeode_py_model
import opengeode_geosciences.lib64.opengeode_geosciences_py_explicit
import opengeode_geosciences.lib64.opengeode_geosciences_py_implicit
__all__: list[str] = ['GridScalarFunctionExpliciter2D', 'GridScalarFunctionExpliciter3D', 'ImplicitExplicitationLibrary', 'ImplicitStructuralModelHorizonExpliciter', 'SolidMeshScalarFunctionExpliciter']
class GridScalarFunctionExpliciter2D:
    def __init__(self, arg0: opengeode.lib64.opengeode_py_mesh.Grid2D, arg1: str) -> None:
        ...
    def add_one_scalar_isovalue(self, arg0: float) -> None:
        ...
    def add_scalar_isovalues(self, arg0: list[float]) -> None:
        ...
    def build_section(self) -> opengeode.lib64.opengeode_py_model.Section:
        ...
class GridScalarFunctionExpliciter3D:
    def __init__(self, arg0: opengeode.lib64.opengeode_py_mesh.Grid3D, arg1: str) -> None:
        ...
    def add_one_scalar_isovalue(self, arg0: float) -> None:
        ...
    def add_scalar_isovalues(self, arg0: list[float]) -> None:
        ...
    def build_brep(self) -> opengeode.lib64.opengeode_py_model.BRep:
        ...
class ImplicitExplicitationLibrary:
    @staticmethod
    def initialize() -> None:
        ...
class ImplicitStructuralModelHorizonExpliciter:
    def __init__(self, arg0: opengeode_geosciences.lib64.opengeode_geosciences_py_implicit.ImplicitStructuralModel) -> None:
        ...
    def build(self) -> None:
        ...
    def explicit_all_horizons(self) -> None:
        ...
    def explicit_horizon(self, arg0: opengeode_geosciences.lib64.opengeode_geosciences_py_explicit.Horizon3D) -> None:
        ...
class SolidMeshScalarFunctionExpliciter:
    def __init__(self, arg0: opengeode.lib64.opengeode_py_mesh.TetrahedralSolid3D, arg1: str) -> None:
        ...
    def add_one_scalar_isovalue(self, arg0: float) -> None:
        ...
    def add_scalar_isovalues(self, arg0: list[float]) -> None:
        ...
    def build_brep(self) -> opengeode.lib64.opengeode_py_model.BRep:
        ...
