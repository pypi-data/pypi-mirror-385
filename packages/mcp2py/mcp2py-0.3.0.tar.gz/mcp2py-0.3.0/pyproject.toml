[project]
name = "mcp2py"
dynamic = ["version"]
description = "Turn any MCP server into a Python module"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    { name = "Maxime Rivest", email = "mrive052@gmail.com" }
]
keywords = ["mcp", "model-context-protocol", "ai", "llm", "tools"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "mcp>=1.18.0",       # Official MCP Python SDK
    "litellm>=1.0.0",    # For sampling (Phase 3)
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "mypy>=1.8.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/maximerivest/mcp2py"
Documentation = "https://github.com/maximerivest/mcp2py#readme"
Repository = "https://github.com/maximerivest/mcp2py"
Issues = "https://github.com/maximerivest/mcp2py/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/mcp2py/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.mypy]
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=mcp2py --cov-report=term-missing"

[dependency-groups]
dev = [
    "anthropic>=0.71.0",
    "dspy>=3.0.3",
    "ipykernel>=7.0.1",
    "ipython>=9.6.0",
    "jupyter>=1.1.1",
    "openai>=2.5.0",
]

