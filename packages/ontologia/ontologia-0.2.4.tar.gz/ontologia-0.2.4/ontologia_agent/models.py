"""Shared data models for ontologia agents."""

from __future__ import annotations

from dataclasses import dataclass
from pathlib import Path

from pydantic import BaseModel, Field


class FileChange(BaseModel):
    """Describe a file the agent intends to create or modify."""

    path: str = Field(..., description="Path relative to the project root")
    contents: str = Field(..., description="New file contents encoded as UTF-8 text")
    description: str | None = Field(
        None, description="Optional short explanation of the purpose of this file"
    )


class AgentPlan(BaseModel):
    """Structured plan generated by the agent."""

    summary: str = Field(..., description="One sentence summary of the plan")
    branch_name: str = Field(..., description="Git branch that should be created")
    commit_message: str = Field(..., description="Commit message for the changes")
    files: list[FileChange] = Field(default_factory=list)

    def is_empty(self) -> bool:
        return not self.files


@dataclass(slots=True)
class ProjectState:
    """Represents the local project configuration used by the agent."""

    name: str
    root_path: Path
    api_url: str
    mcp_url: str
    agent_token: str
    model_name: str = "openai:gpt-4o-mini"
