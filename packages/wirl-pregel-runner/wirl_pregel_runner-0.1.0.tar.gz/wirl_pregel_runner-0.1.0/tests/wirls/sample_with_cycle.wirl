workflow SampleRAGWorkflow {

  metadata {
    description: "Sample RAG workflow"
    owner: "sample_team"
    version: "1.0"
  }

  inputs {
    String query
  }

  outputs {
    String final_answer = FinalAnswer.final_answer
  }

  cycle RetrieveLoop {
    inputs {
        String query = query
        String next_query_aspect = RetrieveResultsCheck.next_query_aspect?
    }
    outputs {
        List<Chunk> final_chunks = Retrieve.chunks
        Bool need_filtering = Retrieve.need_filtering
    }
    node QueryExtender {
        call query_extender
        inputs {
           String query = RetrieveLoop.query
           String add_query_aspect = RetrieveLoop.next_query_aspect?
        }
        outputs {
           String extended_query
        }
    }

    node Retrieve {
        call retrieve_from_web
        inputs {
           String extended_query = QueryExtender.extended_query
        }
        outputs {
           (append) List<Chunk> chunks
           Bool need_filtering
        }
    }

    node RetrieveResultsCheck {
        call retrieve_results_check
        inputs {
           List<Chunk> chunks = Retrieve.chunks
        }
        outputs {
           Bool is_enough
           String next_query_aspect?
        }
    }
    guard {
      inputs {
        Bool is_enough = RetrieveResultsCheck.is_enough
      }
      when {
        RetrieveResultsCheck.is_enough
      }
    }
    max_iterations: 4
  }

  node FilterChunks {
    call filter_chunks
    inputs {
      String query       = query
      Bool need_filtering = RetrieveLoop.need_filtering
      List<Chunk> chunks = RetrieveLoop.final_chunks
    }
    when {
      RetrieveLoop.need_filtering
    }
    const {
      llm_model: "gpt-4o"
    }
    outputs {
      List<Chunk> filtered_chunks
      String filtered_chunks_summary?
    }
  }

  node FinalAnswer {
    call final_answer_generation
    inputs {
      String query        = query
      Bool need_filtering = RetrieveLoop.need_filtering
      List<Chunk> filtered_chunks = FilterChunks.filtered_chunks?
      List<Chunk> retrieved_chunks = RetrieveLoop.final_chunks?
      String filtered_chunks_summary = FilterChunks.filtered_chunks_summary?
    }
    when {
      RetrieveLoop.need_filtering and FilterChunks.filtered_chunks or not RetrieveLoop.need_filtering
    }
    outputs {
      String final_answer
    }
  }
}
