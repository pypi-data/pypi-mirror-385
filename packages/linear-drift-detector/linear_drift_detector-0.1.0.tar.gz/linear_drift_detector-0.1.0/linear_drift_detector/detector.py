# -*- coding: utf-8 -*-
"""Untitled167.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14aeQxaNK81_zn9AgR0z7w-uEud-jO3Mw
"""

# linear_drift_detector/detector.py

import numpy as np
import pandas as pd
import statsmodels.api as sm
from scipy.stats import norm


def linear_coefficient_shift(X_train, y_train, X_prod, y_prod_prediction):
    """
    Detect concept shift using coefficient changes in OLS models
    fitted on training vs. production data.
    """
    if X_train.shape != X_prod.shape:
        raise ValueError("X_train and X_prod must have the same shape for fair comparison.")

    X_train_const = sm.add_constant(X_train)
    X_prod_const = sm.add_constant(X_prod)

    model_train = sm.OLS(y_train, X_train_const).fit()
    model_prod = sm.OLS(y_prod_prediction, X_prod_const).fit()

    coef_train = np.asarray(model_train.params)
    coef_prod = np.asarray(model_prod.params)
    coef_diff = coef_prod - coef_train
    l2_distance = np.linalg.norm(coef_diff)

    se_train = np.asarray(model_train.bse)
    se_prod = np.asarray(model_prod.bse)
    z_values = (coef_prod - coef_train) / np.sqrt(se_train**2 + se_prod**2)
    p_values = 2 * (1 - norm.cdf(np.abs(z_values)))

    index = model_train.params.index if hasattr(model_train.params, "index") else [f"b{i}" for i in range(len(coef_train))]
    z_table = pd.DataFrame({
        "coef_train": coef_train,
        "coef_prod": coef_prod,
        "diff": coef_diff,
        "z_value": z_values,
        "p_value": p_values
    }, index=index)

    return {
        "coef_train": coef_train,
        "coef_prod": coef_prod,
        "coef_diff": coef_diff,
        "l2_distance": l2_distance,
        "z_test": z_table
    }