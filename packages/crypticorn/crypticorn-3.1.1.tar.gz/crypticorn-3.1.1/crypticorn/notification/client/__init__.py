# coding: utf-8

# flake8: noqa

"""
Notifications API

API for notification delivery system

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

__version__ = "1.0.0"

# Define package exports
__all__ = [
    "NotificationsApi",
    "SettingsApi",
    "StatusApi",
    "TemplatesApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "Broadcast",
    "BroadcastCreate",
    "BroadcastRecipient",
    "BroadcastUpdate",
    "DashboardActionButton",
    "DashboardField",
    "DashboardNotification",
    "DashboardNotificationUpdate",
    "ErrorResponse",
    "NotificationCreate",
    "PaginatedResponseDashboardNotification",
    "Template",
    "UITemplate",
    "UserSetting",
    "UserSettingCreate",
    "UserSettingUpdate",
]

# import apis into sdk package
from crypticorn.notification.client.api.notifications_api import (
    NotificationsApi as NotificationsApi,
)
from crypticorn.notification.client.api.settings_api import SettingsApi as SettingsApi
from crypticorn.notification.client.api.status_api import StatusApi as StatusApi
from crypticorn.notification.client.api.templates_api import (
    TemplatesApi as TemplatesApi,
)
from crypticorn.notification.client.api_client import ApiClient as ApiClient

# import ApiClient
from crypticorn.notification.client.api_response import ApiResponse as ApiResponse
from crypticorn.notification.client.configuration import Configuration as Configuration
from crypticorn.notification.client.exceptions import (
    ApiAttributeError as ApiAttributeError,
)
from crypticorn.notification.client.exceptions import ApiException as ApiException
from crypticorn.notification.client.exceptions import ApiKeyError as ApiKeyError
from crypticorn.notification.client.exceptions import ApiTypeError as ApiTypeError
from crypticorn.notification.client.exceptions import ApiValueError as ApiValueError
from crypticorn.notification.client.exceptions import (
    OpenApiException as OpenApiException,
)

# import models into sdk package
from crypticorn.notification.client.models.broadcast import Broadcast as Broadcast
from crypticorn.notification.client.models.broadcast_create import (
    BroadcastCreate as BroadcastCreate,
)
from crypticorn.notification.client.models.broadcast_recipient import (
    BroadcastRecipient as BroadcastRecipient,
)
from crypticorn.notification.client.models.broadcast_update import (
    BroadcastUpdate as BroadcastUpdate,
)
from crypticorn.notification.client.models.dashboard_action_button import (
    DashboardActionButton as DashboardActionButton,
)
from crypticorn.notification.client.models.dashboard_field import (
    DashboardField as DashboardField,
)
from crypticorn.notification.client.models.dashboard_notification import (
    DashboardNotification as DashboardNotification,
)
from crypticorn.notification.client.models.dashboard_notification_update import (
    DashboardNotificationUpdate as DashboardNotificationUpdate,
)
from crypticorn.notification.client.models.error_response import (
    ErrorResponse as ErrorResponse,
)
from crypticorn.notification.client.models.notification_create import (
    NotificationCreate as NotificationCreate,
)
from crypticorn.notification.client.models.paginated_response_dashboard_notification import (
    PaginatedResponseDashboardNotification as PaginatedResponseDashboardNotification,
)
from crypticorn.notification.client.models.template import Template as Template
from crypticorn.notification.client.models.ui_template import UITemplate as UITemplate
from crypticorn.notification.client.models.user_setting import (
    UserSetting as UserSetting,
)
from crypticorn.notification.client.models.user_setting_create import (
    UserSettingCreate as UserSettingCreate,
)
from crypticorn.notification.client.models.user_setting_update import (
    UserSettingUpdate as UserSettingUpdate,
)
