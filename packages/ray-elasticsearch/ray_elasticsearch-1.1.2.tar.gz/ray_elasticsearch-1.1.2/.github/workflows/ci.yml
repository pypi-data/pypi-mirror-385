name: CI

on:
  push:

jobs:
  python-build:
    name: "üèóÔ∏è Build Python wheels"
    strategy:
      matrix:
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v5
      - name: "üß∞ Install Python"
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: "üß∞ Install dependencies"
        run: pip install build twine
      - name: "üèóÔ∏è Build Python wheels"
        run: python -m build
      - name: "üß™ Check package bundles"
        run: twine check dist/*
      - name: "üì§ Upload Python wheels"
        uses: actions/upload-artifact@v4
        if: matrix.python == '3.13'
        with:
          name: wheels
          path: dist
  python-code-check:
    name: üîç Check Python code
    strategy:
      matrix:
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        elasticsearch:
          - "7"
          - "7-major"
          - "7-dsl"
          - "7-dsl-major"
          - "7-pydantic"
          - "7-pydantic-major"
          - "8"
          - "8-major"
          - "8-dsl"
          - "8-dsl-major"
          - "8-pydantic"
          - "8-pydantic-major"
        exclude:
          - python: "3.9"
            elasticsearch: "7-pydantic"
          - python: "3.9"
            elasticsearch: "7-pydantic-major"
          - python: "3.9"
            elasticsearch: "8-pydantic"
          - python: "3.9"
            elasticsearch: "8-pydantic-major"
          - python: "3.10"
            elasticsearch: "7-pydantic"
          - python: "3.10"
            elasticsearch: "7-pydantic-major"
          - python: "3.10"
            elasticsearch: "8-pydantic"
          - python: "3.10"
            elasticsearch: "8-pydantic-major"
    runs-on: ubuntu-latest
    steps:
      - name: üì• Check-out
        uses: actions/checkout@v5
      - name: üß∞ Install Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: üß∞ Install dependencies
        run: pip install .[tests,tests-es${{ matrix.elasticsearch }}]
      - name: üîç Check Python code
        run: ruff check .
  python-typing:
    name: "üîç Check Python static typing"
    strategy:
      matrix:
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        elasticsearch:
          - "7"
          - "7-major"
          - "7-dsl"
          - "7-dsl-major"
          - "7-pydantic"
          - "7-pydantic-major"
          - "8"
          - "8-major"
          - "8-dsl"
          - "8-dsl-major"
          - "8-pydantic"
          - "8-pydantic-major"
        exclude:
          - python: "3.9"
            elasticsearch: "7-pydantic"
          - python: "3.9"
            elasticsearch: "7-pydantic-major"
          - python: "3.9"
            elasticsearch: "8-pydantic"
          - python: "3.9"
            elasticsearch: "8-pydantic-major"
          - python: "3.10"
            elasticsearch: "7-pydantic"
          - python: "3.10"
            elasticsearch: "7-pydantic-major"
          - python: "3.10"
            elasticsearch: "8-pydantic"
          - python: "3.10"
            elasticsearch: "8-pydantic-major"
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v5
      - name: "üß∞ Install Python"
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: "üß∞ Install dependencies"
        run: pip install .[tests,tests-es${{ matrix.elasticsearch }}]
      - name: "üîç Check Python static typing"
        run: mypy .
  python-test:
    name: "üß™ Test Python code"
    strategy:
      matrix:
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        elasticsearch:
          - "7"
          - "7-major"
          - "7-dsl"
          - "7-dsl-major"
          - "7-pydantic"
          - "7-pydantic-major"
          - "8"
          - "8-major"
          - "8-dsl"
          - "8-dsl-major"
          - "8-pydantic"
          - "8-pydantic-major"
        exclude:
          - python: "3.9"
            elasticsearch: "7-pydantic"
          - python: "3.9"
            elasticsearch: "7-pydantic-major"
          - python: "3.9"
            elasticsearch: "8-pydantic"
          - python: "3.9"
            elasticsearch: "8-pydantic-major"
          - python: "3.10"
            elasticsearch: "7-pydantic"
          - python: "3.10"
            elasticsearch: "7-pydantic-major"
          - python: "3.10"
            elasticsearch: "8-pydantic"
          - python: "3.10"
            elasticsearch: "8-pydantic-major"
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v5
      - name: "üß∞ Install Python"
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: "üß∞ Install dependencies"
        run: pip install .[tests,tests-es${{ matrix.elasticsearch }}]
      - name: "üß™ Test Python code"
        run: pytest --cov --cov-report=xml .
      - name: "üì§ Upload coverage to Codecov"
        uses: codecov/codecov-action@v5
        if: matrix.python == '3.13'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  python-publish:
    name: "üöÄ Publish Python wheels"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - python-build
      - python-code-check
      - python-typing
      - python-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v5
      - name: "üì• Download Python wheels"
        uses: actions/download-artifact@v5
        with:
          name: wheels
          path: dist
      - name: "üöÄ Publish Python wheels"
        uses: pypa/gh-action-pypi-publish@release/v1
  github-release:
    name: "üöÄ Create GitHub release"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - python-build
      - python-code-check
      - python-typing
      - python-test
      - python-publish
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v5
      - name: "üì• Download Python wheels"
        uses: actions/download-artifact@v5
        with:
          name: wheels
          path: dist
      - name: "üöÄ Create GitHub release"
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: dist/*
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
          generate_release_notes: true
