# coding: utf-8

"""
TrueFoundry ML API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from truefoundry.ml._autogen.client.models.subject import Subject
from truefoundry.pydantic_v1 import BaseModel, Field, StrictInt, StrictStr


class RunInfoDto(BaseModel):
    """
    RunInfoDto
    """

    run_uuid: StrictStr = Field(...)
    run_id: StrictStr = Field(...)
    experiment_id: StrictStr = Field(...)
    name: StrictStr = Field(...)
    fqn: StrictStr = Field(...)
    user_id: Optional[StrictStr] = None
    created_by_subject: Subject = Field(...)
    status: StrictStr = Field(...)
    start_time: Optional[StrictInt] = None
    end_time: Optional[StrictInt] = None
    artifact_uri: Optional[StrictStr] = None
    lifecycle_stage: Optional[StrictStr] = None
    description: Optional[StrictStr] = None
    __properties = [
        "run_uuid",
        "run_id",
        "experiment_id",
        "name",
        "fqn",
        "user_id",
        "created_by_subject",
        "status",
        "start_time",
        "end_time",
        "artifact_uri",
        "lifecycle_stage",
        "description",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> RunInfoDto:
        """Create an instance of RunInfoDto from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        # override the default output from truefoundry.pydantic_v1 by calling `to_dict()` of created_by_subject
        if self.created_by_subject:
            _dict["created_by_subject"] = self.created_by_subject.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> RunInfoDto:
        """Create an instance of RunInfoDto from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return RunInfoDto.parse_obj(obj)

        _obj = RunInfoDto.parse_obj(
            {
                "run_uuid": obj.get("run_uuid"),
                "run_id": obj.get("run_id"),
                "experiment_id": obj.get("experiment_id"),
                "name": obj.get("name"),
                "fqn": obj.get("fqn"),
                "user_id": obj.get("user_id"),
                "created_by_subject": Subject.from_dict(obj.get("created_by_subject"))
                if obj.get("created_by_subject") is not None
                else None,
                "status": obj.get("status"),
                "start_time": obj.get("start_time"),
                "end_time": obj.get("end_time"),
                "artifact_uri": obj.get("artifact_uri"),
                "lifecycle_stage": obj.get("lifecycle_stage"),
                "description": obj.get("description"),
            }
        )
        return _obj
