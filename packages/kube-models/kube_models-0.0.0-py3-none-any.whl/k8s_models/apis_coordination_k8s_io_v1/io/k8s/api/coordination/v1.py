# generated by puzl.cloud generator:
#   filename:  apis__coordination.k8s.io__v1_openapi.json
#   timestamp: 2025-10-20T15:38:45+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from datetime import datetime, timezone
from typing import ClassVar, List, Set

from k8s_models.const import *
from k8s_models.loader import *
from k8s_models.loader import LazyLoadModel
from k8s_models.resource import *

from ...apimachinery.pkg.apis.meta.v1 import ListMeta, MicroTime, ObjectMeta


@dataclass(kw_only=True, frozen=True)
class LeaseSpec(LazyLoadModel):
    acquireTime: MicroTime | None = None
    holderIdentity: str | None = None
    leaseDurationSeconds: int | None = None
    leaseTransitions: int | None = None
    preferredHolder: str | None = None
    renewTime: MicroTime | None = None
    strategy: str | None = None


@dataclass(kw_only=True, frozen=True)
class Lease(K8sResource):
    apiVersion: str = 'coordination.k8s.io/v1'
    kind: str = 'Lease'
    metadata: ObjectMeta = field(default_factory=ObjectMeta)
    spec: LeaseSpec | None = None
    api_path_: ClassVar[str] = (
        'apis/coordination.k8s.io/v1/namespaces/{namespace}/leases'
    )
    plural_: ClassVar[str] = 'leases'
    is_namespaced_: ClassVar[bool] = False
    group_: ClassVar[Optional[str]] = 'coordination.k8s.io'
    apiVersion_: ClassVar[str] = 'coordination.k8s.io/v1'
    kind_: ClassVar[str] = 'Lease'
    patch_strategies_: ClassVar[Set[PatchRequestType]] = {
        'application/merge-patch+json',
        'application/json-patch+json',
        'application/apply-patch+yaml',
        'application/strategic-merge-patch+json',
        'application/apply-patch+cbor',
    }


@dataclass(kw_only=True, frozen=True)
class LeaseList(LazyLoadModel):
    items: List[Lease]
    apiVersion: str = 'coordination.k8s.io/v1'
    kind: str = 'LeaseList'
    metadata: ListMeta = field(default_factory=ObjectMeta)
