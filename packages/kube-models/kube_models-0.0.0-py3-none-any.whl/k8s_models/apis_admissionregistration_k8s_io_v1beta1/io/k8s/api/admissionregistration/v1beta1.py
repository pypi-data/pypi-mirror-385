# generated by puzl.cloud generator:
#   filename:  apis__admissionregistration.k8s.io__v1beta1_openapi.json
#   timestamp: 2025-10-20T15:38:46+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from datetime import datetime, timezone
from typing import ClassVar, List, Set

from k8s_models.const import *
from k8s_models.loader import *
from k8s_models.loader import LazyLoadModel
from k8s_models.resource import *

from ...apimachinery.pkg.apis.meta.v1 import LabelSelector, ListMeta, ObjectMeta


@dataclass(kw_only=True, frozen=True)
class ApplyConfiguration(LazyLoadModel):
    expression: str | None = None


@dataclass(kw_only=True, frozen=True)
class JSONPatch(LazyLoadModel):
    expression: str | None = None


@dataclass(kw_only=True, frozen=True)
class MatchCondition(LazyLoadModel):
    expression: str
    name: str


@dataclass(kw_only=True, frozen=True)
class Mutation(LazyLoadModel):
    patchType: str
    applyConfiguration: ApplyConfiguration | None = None
    jsonPatch: JSONPatch | None = None


@dataclass(kw_only=True, frozen=True)
class NamedRuleWithOperations(LazyLoadModel):
    apiGroups: List[str] | None = None
    apiVersions: List[str] | None = None
    operations: List[str] | None = None
    resourceNames: List[str] | None = None
    resources: List[str] | None = None
    scope: str | None = None


@dataclass(kw_only=True, frozen=True)
class ParamKind(LazyLoadModel):
    apiVersion: str | None = None
    kind: str | None = None


@dataclass(kw_only=True, frozen=True)
class Variable(LazyLoadModel):
    expression: str
    name: str


@dataclass(kw_only=True, frozen=True)
class MatchResources(LazyLoadModel):
    excludeResourceRules: List[NamedRuleWithOperations] | None = None
    matchPolicy: str | None = None
    namespaceSelector: LabelSelector | None = None
    objectSelector: LabelSelector | None = None
    resourceRules: List[NamedRuleWithOperations] | None = None


@dataclass(kw_only=True, frozen=True)
class MutatingAdmissionPolicySpec(LazyLoadModel):
    failurePolicy: str | None = None
    matchConditions: List[MatchCondition] = field(
        default_factory=list,
        metadata={
            'x-kubernetes-patch-strategy': 'merge',
            'x-kubernetes-patch-merge-key': 'name',
        },
    )
    matchConstraints: MatchResources | None = None
    mutations: List[Mutation] | None = None
    paramKind: ParamKind | None = None
    reinvocationPolicy: str | None = None
    variables: List[Variable] | None = None


@dataclass(kw_only=True, frozen=True)
class ParamRef(LazyLoadModel):
    name: str | None = None
    namespace: str | None = None
    parameterNotFoundAction: str | None = None
    selector: LabelSelector | None = None


@dataclass(kw_only=True, frozen=True)
class MutatingAdmissionPolicy(K8sResource):
    apiVersion: str = 'admissionregistration.k8s.io/v1beta1'
    kind: str = 'MutatingAdmissionPolicy'
    metadata: ObjectMeta = field(default_factory=ObjectMeta)
    spec: MutatingAdmissionPolicySpec | None = None
    api_path_: ClassVar[str] = (
        'apis/admissionregistration.k8s.io/v1beta1/mutatingadmissionpolicies'
    )
    plural_: ClassVar[str] = 'mutatingadmissionpolicies'
    is_namespaced_: ClassVar[bool] = False
    group_: ClassVar[Optional[str]] = 'admissionregistration.k8s.io'
    apiVersion_: ClassVar[str] = 'admissionregistration.k8s.io/v1beta1'
    kind_: ClassVar[str] = 'MutatingAdmissionPolicy'
    patch_strategies_: ClassVar[Set[PatchRequestType]] = {
        'application/merge-patch+json',
        'application/json-patch+json',
        'application/apply-patch+yaml',
        'application/strategic-merge-patch+json',
        'application/apply-patch+cbor',
    }


@dataclass(kw_only=True, frozen=True)
class MutatingAdmissionPolicyBindingSpec(LazyLoadModel):
    matchResources: MatchResources | None = None
    paramRef: ParamRef | None = None
    policyName: str | None = None


@dataclass(kw_only=True, frozen=True)
class MutatingAdmissionPolicyList(LazyLoadModel):
    items: List[MutatingAdmissionPolicy]
    apiVersion: str = 'admissionregistration.k8s.io/v1beta1'
    kind: str = 'MutatingAdmissionPolicyList'
    metadata: ListMeta = field(default_factory=ObjectMeta)


@dataclass(kw_only=True, frozen=True)
class MutatingAdmissionPolicyBinding(K8sResource):
    apiVersion: str = 'admissionregistration.k8s.io/v1beta1'
    kind: str = 'MutatingAdmissionPolicyBinding'
    metadata: ObjectMeta = field(default_factory=ObjectMeta)
    spec: MutatingAdmissionPolicyBindingSpec | None = None
    api_path_: ClassVar[str] = (
        'apis/admissionregistration.k8s.io/v1beta1/mutatingadmissionpolicybindings'
    )
    plural_: ClassVar[str] = 'mutatingadmissionpolicybindings'
    is_namespaced_: ClassVar[bool] = False
    group_: ClassVar[Optional[str]] = 'admissionregistration.k8s.io'
    apiVersion_: ClassVar[str] = 'admissionregistration.k8s.io/v1beta1'
    kind_: ClassVar[str] = 'MutatingAdmissionPolicyBinding'
    patch_strategies_: ClassVar[Set[PatchRequestType]] = {
        'application/merge-patch+json',
        'application/json-patch+json',
        'application/apply-patch+yaml',
        'application/strategic-merge-patch+json',
        'application/apply-patch+cbor',
    }


@dataclass(kw_only=True, frozen=True)
class MutatingAdmissionPolicyBindingList(LazyLoadModel):
    items: List[MutatingAdmissionPolicyBinding]
    apiVersion: str = 'admissionregistration.k8s.io/v1beta1'
    kind: str = 'MutatingAdmissionPolicyBindingList'
    metadata: ListMeta = field(default_factory=ObjectMeta)
