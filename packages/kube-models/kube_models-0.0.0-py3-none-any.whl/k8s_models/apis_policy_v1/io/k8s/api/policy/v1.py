# generated by puzl.cloud generator:
#   filename:  apis__policy__v1_openapi.json
#   timestamp: 2025-10-20T15:38:46+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from datetime import datetime, timezone
from typing import ClassVar, Dict, List, Set

from k8s_models.const import *
from k8s_models.loader import *
from k8s_models.loader import LazyLoadModel
from k8s_models.resource import *

from ...apimachinery.pkg.apis.meta.v1 import (
    Condition,
    LabelSelector,
    ListMeta,
    ObjectMeta,
    Time,
)
from ...apimachinery.pkg.util.intstr import IntOrString


@dataclass(kw_only=True, frozen=True)
class PodDisruptionBudgetSpec(LazyLoadModel):
    maxUnavailable: IntOrString | None = None
    minAvailable: IntOrString | None = None
    selector: LabelSelector = field(
        default_factory=dict, metadata={'x-kubernetes-patch-strategy': 'replace'}
    )
    unhealthyPodEvictionPolicy: str | None = None


@dataclass(kw_only=True, frozen=True)
class PodDisruptionBudgetStatus(LazyLoadModel):
    currentHealthy: int
    desiredHealthy: int
    disruptionsAllowed: int
    expectedPods: int
    conditions: List[Condition] = field(
        default_factory=list,
        metadata={
            'x-kubernetes-patch-strategy': 'merge',
            'x-kubernetes-patch-merge-key': 'type',
        },
    )
    disruptedPods: Dict[str, Time] | None = None
    observedGeneration: int | None = None


@dataclass(kw_only=True, frozen=True)
class PodDisruptionBudget(K8sResource):
    apiVersion: str = 'policy/v1'
    kind: str = 'PodDisruptionBudget'
    metadata: ObjectMeta = field(default_factory=ObjectMeta)
    spec: PodDisruptionBudgetSpec | None = None
    status: PodDisruptionBudgetStatus | None = None
    api_path_: ClassVar[str] = (
        'apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets'
    )
    plural_: ClassVar[str] = 'poddisruptionbudgets'
    is_namespaced_: ClassVar[bool] = False
    group_: ClassVar[Optional[str]] = 'policy'
    apiVersion_: ClassVar[str] = 'policy/v1'
    kind_: ClassVar[str] = 'PodDisruptionBudget'
    patch_strategies_: ClassVar[Set[PatchRequestType]] = {
        'application/merge-patch+json',
        'application/json-patch+json',
        'application/apply-patch+yaml',
        'application/strategic-merge-patch+json',
        'application/apply-patch+cbor',
    }


@dataclass(kw_only=True, frozen=True)
class PodDisruptionBudgetList(LazyLoadModel):
    items: List[PodDisruptionBudget]
    apiVersion: str = 'policy/v1'
    kind: str = 'PodDisruptionBudgetList'
    metadata: ListMeta = field(default_factory=ObjectMeta)
