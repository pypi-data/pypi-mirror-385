# generated by https://github.com/puzl-cloud/kubesdk
#   filename:  apis__coordination.k8s.io__v1alpha1_openapi.json
#   timestamp: 2025-10-21T10:16:56+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from datetime import datetime, timezone
from typing import ClassVar, List, Set

from kube_models.const import *
from kube_models.loader import *
from kube_models.loader import LazyLoadModel
from kube_models.resource import *

from ...apimachinery.pkg.apis.meta.v1 import ListMeta, MicroTime, ObjectMeta


@dataclass(kw_only=True, frozen=True)
class LeaseCandidateSpec(LazyLoadModel):
    leaseName: str
    preferredStrategies: List[str]
    binaryVersion: str | None = None
    emulationVersion: str | None = None
    pingTime: MicroTime | None = None
    renewTime: MicroTime | None = None


@dataclass(kw_only=True, frozen=True)
class LeaseCandidate(K8sResource):
    apiVersion: str = 'coordination.k8s.io/v1alpha1'
    kind: str = 'LeaseCandidate'
    metadata: ObjectMeta = field(default_factory=ObjectMeta)
    spec: LeaseCandidateSpec | None = None
    api_path_: ClassVar[str] = (
        'apis/coordination.k8s.io/v1alpha1/namespaces/{namespace}/leasecandidates'
    )
    plural_: ClassVar[str] = 'leasecandidates'
    is_namespaced_: ClassVar[bool] = False
    group_: ClassVar[Optional[str]] = 'coordination.k8s.io'
    apiVersion_: ClassVar[str] = 'coordination.k8s.io/v1alpha1'
    kind_: ClassVar[str] = 'LeaseCandidate'
    patch_strategies_: ClassVar[Set[PatchRequestType]] = {
        'application/apply-patch+yaml',
        'application/json-patch+json',
        'application/strategic-merge-patch+json',
        'application/merge-patch+json',
    }


@dataclass(kw_only=True, frozen=True)
class LeaseCandidateList(LazyLoadModel):
    items: List[LeaseCandidate]
    apiVersion: str = 'coordination.k8s.io/v1alpha1'
    kind: str = 'LeaseCandidateList'
    metadata: ListMeta = field(default_factory=ObjectMeta)
