# generated by https://github.com/puzl-cloud/kubesdk
#   filename:  apis__certificates.k8s.io__v1_openapi.json
#   timestamp: 2025-10-21T10:17:19+00:00

from __future__ import annotations

from dataclasses import dataclass, field
from datetime import datetime, timezone
from typing import ClassVar, Dict, List, Set

from kube_models.const import *
from kube_models.loader import *
from kube_models.loader import LazyLoadModel
from kube_models.resource import *

from ...apimachinery.pkg.apis.meta.v1 import ListMeta, ObjectMeta, Time


@dataclass(kw_only=True, frozen=True)
class CertificateSigningRequestSpec(LazyLoadModel):
    request: str
    signerName: str
    expirationSeconds: int | None = None
    extra: Dict[str, List[str]] | None = None
    groups: List[str] | None = None
    uid: str | None = None
    usages: List[str] | None = None
    username: str | None = None


@dataclass(kw_only=True, frozen=True)
class CertificateSigningRequestCondition(LazyLoadModel):
    status: str
    type: str
    lastTransitionTime: Time | None = None
    lastUpdateTime: Time | None = None
    message: str | None = None
    reason: str | None = None


@dataclass(kw_only=True, frozen=True)
class CertificateSigningRequestStatus(LazyLoadModel):
    certificate: str | None = None
    conditions: List[CertificateSigningRequestCondition] | None = None


@dataclass(kw_only=True, frozen=True)
class CertificateSigningRequest(K8sResource):
    spec: CertificateSigningRequestSpec
    apiVersion: str = 'certificates.k8s.io/v1'
    kind: str = 'CertificateSigningRequest'
    metadata: ObjectMeta = field(default_factory=ObjectMeta)
    status: CertificateSigningRequestStatus | None = None
    api_path_: ClassVar[str] = 'apis/certificates.k8s.io/v1/certificatesigningrequests'
    plural_: ClassVar[str] = 'certificatesigningrequests'
    is_namespaced_: ClassVar[bool] = False
    group_: ClassVar[Optional[str]] = 'certificates.k8s.io'
    apiVersion_: ClassVar[str] = 'certificates.k8s.io/v1'
    kind_: ClassVar[str] = 'CertificateSigningRequest'
    patch_strategies_: ClassVar[Set[PatchRequestType]] = {
        'application/json-patch+json',
        'application/merge-patch+json',
        'application/strategic-merge-patch+json',
        'application/apply-patch+cbor',
        'application/apply-patch+yaml',
    }


@dataclass(kw_only=True, frozen=True)
class CertificateSigningRequestList(LazyLoadModel):
    items: List[CertificateSigningRequest]
    apiVersion: str = 'certificates.k8s.io/v1'
    kind: str = 'CertificateSigningRequestList'
    metadata: ListMeta = field(default_factory=ObjectMeta)
