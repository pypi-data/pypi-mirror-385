[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "assertlang"
version = "0.1.1"
description = "Executable contracts for multi-agent systems - deterministic coordination across frameworks and languages"
requires-python = ">=3.9"
readme = "README.md"
authors = [{ name = "AssertLang Contributors", email = "hello@assertlang.dev" }]
dependencies = [
  "requests>=2.31.0",
  "tomli>=2.0.0; python_version<'3.11'",
  "tomli-w>=1.0.0",
  "pyyaml>=6.0.0",
  "jsonschema>=4.0.0",
]

[project.scripts]
asl = "assertlang.cli:main"

[project.urls]
Homepage = "https://github.com/AssertLang/AssertLang"
Documentation = "https://github.com/AssertLang/AssertLang/tree/main/docs"
Repository = "https://github.com/AssertLang/AssertLang"
"Bug Tracker" = "https://github.com/AssertLang/AssertLang/issues"
Changelog = "https://github.com/AssertLang/AssertLang/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.1.0",
  "pytest-mock>=3.12.0",
  "black>=23.10.0",
  "flake8>=6.1.0",
  "mypy>=1.6.0",
  "ipython>=8.17.0",
  "ipdb>=0.13.13",
  "click>=8.0.0",
]

[tool.ruff]
line-length = 100
select = ["E", "F", "I"]
ignore = []

[tool.setuptools]
packages = { find = { exclude = ["tests", "tests.*", "examples", "examples.*"] } }

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["assertlang"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | \.eggs
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["assertlang"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
