{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://assertlang.dev/schemas/toolgen.spec.schema.json",
  "title": "Promptware Tool Generator Spec",
  "type": "object",
  "required": ["tool"],
  "properties": {
    "tool": {
      "type": "object",
      "required": ["id", "name", "summary", "category", "version"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z0-9-]+$"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "summary": {
          "type": "string",
          "minLength": 1
        },
        "category": {
          "type": "string",
          "enum": [
            "input-output",
            "data",
            "control-flow",
            "lifecycle",
            "specialized"
          ]
        },
        "version": {
          "type": "string",
          "pattern": "^v[0-9]+$"
        }
      },
      "additionalProperties": false
    },
    "envelope": {
      "type": "object",
      "properties": {
        "capabilities": {"type": "boolean"},
        "health": {"type": "boolean"},
        "streaming": {"type": "boolean"},
        "long_running": {"type": "boolean"}
      },
      "additionalProperties": false
    },
    "schema": {
      "type": "object",
      "properties": {
        "shared_fields": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "lang",
              "adapter",
              "runtime",
              "limits",
              "deps",
              "egress",
              "env",
              "cwd"
            ]
          },
          "uniqueItems": true
        },
        "request": {
          "$ref": "https://json-schema.org/draft/2020-12/schema"
        },
        "response": {
          "$ref": "https://json-schema.org/draft/2020-12/schema"
        }
      },
      "additionalProperties": false
    },
    "operations": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "summary"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-z0-9-]+$"
          },
          "summary": {
            "type": "string",
            "minLength": 1
          },
          "example": {
            "type": "object",
            "properties": {
              "request": {"type": "object"},
              "response": {"type": "object"}
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "adapters": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["language", "template"],
        "properties": {
          "language": {
            "type": "string",
            "enum": [
              "python",
              "node",
              "nextjs",
              "go",
              "rust",
              "java",
              "dotnet",
              "cpp"
            ]
          },
          "template": {
            "type": "string",
            "minLength": 1
          },
          "entry": {
            "type": "string",
            "minLength": 1
          },
          "deps": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "policy": {
      "type": "object",
      "properties": {
        "network": {
          "type": "string",
          "enum": ["deny", "allow", "allowlist"]
        },
        "filesystem": {
          "type": "string",
          "enum": ["deny", "read", "write", "readwrite"]
        },
        "secrets": {
          "type": "string",
          "enum": ["deny", "allow"]
        },
        "retry": {
          "type": "object",
          "properties": {
            "max_attempts": {
              "type": "integer",
              "minimum": 1
            },
            "backoff_ms": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "timeout_sec": {
          "type": "integer",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "telemetry": {
      "type": "object",
      "properties": {
        "emit": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["channel"],
            "properties": {
              "channel": {
                "type": "string",
                "minLength": 1
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "testing": {
      "type": "object",
      "properties": {
        "cases": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["description", "request"],
            "properties": {
              "description": {
                "type": "string",
                "minLength": 1
              },
              "request": {
                "type": "object"
              },
              "expect": {
                "type": "object"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "docs": {
      "type": "object",
      "properties": {
        "quickstart": {"type": "string"},
        "examples": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["title", "code"],
            "properties": {
              "title": {
                "type": "string",
                "minLength": 1
              },
              "code": {
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "marketplace": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "maturity": {
          "type": "string",
          "enum": ["alpha", "beta", "ga"]
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
