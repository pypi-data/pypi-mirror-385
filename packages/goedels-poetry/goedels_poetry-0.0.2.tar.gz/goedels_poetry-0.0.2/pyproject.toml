[project]
name = "goedels-poetry"
version = "0.0.2"
description = "A recursive, reflective POETRY algorithm variant using Goedel-Prover-V2"
authors = [{ name = "Kelly J Davis", email = "kdavis@alum.mit.edu" }]
readme = "README.md"
license = "Apache-2.0"
keywords = ['python']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "jinja2>=3.1.6",
    "kimina-ast-client>=0.2.2",
    "langchain-core>=0.3.77",
    "langchain-ollama>=0.3.10",
    "langchain-openai>=0.3.34",
    "langgraph>=0.6.8",
    "ollama>=0.6.0",
    "rich>=14.1.0",
    "tqdm>=4.67.1",
    "typer>=0.19.2",
    "typing-extensions>=4.15.0",
]

[project.urls]
Homepage = "https://KellyJDavis.github.io/goedels-poetry/"
Repository = "https://github.com/KellyJDavis/goedels-poetry"
Documentation = "https://KellyJDavis.github.io/goedels-poetry/"

[project.scripts]
goedels_poetry = "goedels_poetry.cli:app"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "types-tqdm>=4.67.0.20250809",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    # Integration test dependencies (required to run kimina-lean-server locally)
    "fastapi>=0.115.13",
    "uvicorn>=0.34.3",
    "psutil>=7.0.0",
    "prisma>=0.15.0",
    "google-cloud-logging>=3.12.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["goedels_poetry"]
artifacts = [
    "goedels_poetry/data/config.ini",
    "goedels_poetry/data/prompts/*.md",
]

[tool.mypy]
files = ["goedels_poetry"]
python_version = "3.11"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Use X | Y for type annotations (requires Python 3.10+, we support 3.9)
    "UP007",
    # Use X | None for type annotations (requires Python 3.10+, we support 3.9)
    "UP045",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"goedels_poetry/cli.py" = ["B008"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["goedels_poetry"]

[tool.deptry]
root = ["goedels_poetry"]
exclude = [
    "\\.venv/.*",
    "dist/.*",
    "site/.*",
    "tests/.*",
]
