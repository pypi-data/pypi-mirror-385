name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI
# ref: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
# This workflow builds the distribution and uploads it to PyPI and TestPyPI
# It will only publish to PyPI when the head has a tag starting with 'v'.concurrency:
# This workflow is configured to start after a 'New release' workflow has been run ('workflow_run').
on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_run:
    workflows:
      - New release
    branches:
      - main
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.tag_info.outputs.tag }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          # Fetch full history for setuptools-scm
          fetch-depth: 0
          ref: main
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          version: "0.8.22"

      - name: Build a binary wheel and a source tarball
        run: uv build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - id: tag_info
        name: Tag info
        run: echo "tag=$(git tag --points-at HEAD)" >> $GITHUB_OUTPUT

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    if: startsWith(needs.build.outputs.TAG, 'v') # only publish to PyPI when the head has a version tag
    environment:
      name: pypi
      url: https://pypi.org/p/async-kernel
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if: github.event_name == 'push'
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/async-kernel

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  replace-release-files:
    name: Replace github release files
    needs:
      - build
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(needs.build.outputs.TAG, 'v') # only upload if there is a release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          # Fetch full history for setuptools-scm
          fetch-depth: 0
          ref: main
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Upload assets to release
        # ref: https://cli.github.com/manual/gh_release_upload
        run: gh release upload ${{needs.build.outputs.TAG}} ./dist/* --clobber
