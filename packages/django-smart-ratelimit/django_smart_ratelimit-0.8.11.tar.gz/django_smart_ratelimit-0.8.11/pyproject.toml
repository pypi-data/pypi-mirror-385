[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-smart-ratelimit"
dynamic = ["version"]
description = "A flexible and efficient rate limiting library for Django applications"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["django", "rate-limiting", "redis", "middleware", "decorator"]
authors = [
    {name = "Yasser Shkeir", email = "shkeiryasser@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "Django>=3.2",
    "redis>=4.0",
]

[project.optional-dependencies]
mongodb = [
    "pymongo>=4.0",
]
jwt = [
    "PyJWT>=2.0",
]
redis = [
    "redis>=4.0",
    "hiredis>=2.0",
]
all = [
    "pymongo>=4.0",
    "PyJWT>=2.0",
    "hiredis>=2.0",
]
dev = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "flake8-docstrings>=1.7",
    "isort>=5.0",
    "mypy>=1.0",
    "pre-commit>=2.20",
    "django-stubs>=4.0",
    "types-redis>=4.0",
    "safety>=2.0",
    "bandit>=1.7",
    "build>=0.8",
    "twine>=4.0",
    "PyJWT>=2.0",
    "bump2version>=1.0",
]

[project.urls]
Homepage = "https://github.com/YasserShkeir/django-smart-ratelimit"
Documentation = "https://django-smart-ratelimit.readthedocs.io"
Repository = "https://github.com/YasserShkeir/django-smart-ratelimit"
Issues = "https://github.com/YasserShkeir/django-smart-ratelimit/issues"
Discussions = "https://github.com/YasserShkeir/django-smart-ratelimit/discussions"
Changelog = "https://github.com/YasserShkeir/django-smart-ratelimit/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "django_smart_ratelimit/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/django_smart_ratelimit",
    "/tests",
    "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["django_smart_ratelimit"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["django_smart_ratelimit"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
strict_optional = true
strict_equality = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "django_smart_ratelimit.backends.redis_backend",
    "django_smart_ratelimit.backends.mongodb",
    "tests.*",
    "examples.*",
]
ignore_errors = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "U100", "U101"]
per-file-ignores = [
    "tests/*:F811",
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "venv",
    "migrations",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "django_smart_ratelimit"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.bumpversion]
current_version = "0.8.11"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
commit = true
tag = true
tag_name = "v{new_version}"
tag_message = "Release v{new_version}"
message = "bump: version {current_version} â†’ {new_version}"

[[tool.bumpversion.files]]
filename = "django_smart_ratelimit/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = """## [Unreleased]

## [{new_version}] - {now:%Y-%m-%d}"""
