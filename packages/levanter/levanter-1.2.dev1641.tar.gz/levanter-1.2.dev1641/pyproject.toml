[build-system]
requires = ["uv_build>=0.7.19,<0.10.0"]
build-backend = "uv_build"

[project]
name = "levanter"
version = "1.2.dev1641"
description = "Scalable Training for Foundation Models with Named Tensors and JAX"
readme = "README.md"
requires-python = ">=3.11"

authors = [
    { name = "David Hall", email = "dlwh@cs.stanford.edu" },
    { name = "Jason Wang", email = "jsywang@cs.stanford.edu" },
    { name = "Ahmed Ahmed" },
    { name = "Ivan Zhou", email = "ivanz@stanford.edu" },
    { name = "Will Held" },
    { name = "Virginia Adams" },
]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
]

dependencies = [
    "haliax>=1.4.dev443",
    "equinox>=0.11.7,!=0.12.0",
    "jax>=0.6.2,!=0.7.0,!=0.7.1",
    "jaxtyping>=0.2.34",
    "tokenizers>=0.15.2",
    "transformers>=4.53.0,<5.0",
    "optax>=0.1.9",
    "wandb>=0.17.8",
    "draccus>=0.11.5",
    "pyarrow>=11.0.0",
    "zstandard>=0.18.0",
    "datasets>=3.1.0,<5.0",
    "gcsfs>=2024.2,<2026",
    "braceexpand>=0.1.7",
    "jmp>=0.0.3",
    "fsspec[http]>=2024.2,<2026",
    "tensorstore>=0.1.73",
    "pytimeparse>=1.1.8",
    "humanfriendly==10.0",
    "safetensors[numpy]>=0.4.2,<0.7.0",
    "matplotlib>=3.7.0",
    "tblib>=1.7.0,<4.0.0",
    "dataclasses-json~=0.6.4",
    "ray[default]>=2.34.0",
    "pydantic<3",
    "filelock~=3.13",
    "async-lru~=2.0",
    "tqdm-loggable>=0.2",
    "deepdiff",
    "lenses",
    "jinja2",  # needed for apply_chat_template
    "protobuf>=6,<7",  # ensure TB/XProf compatibility; avoid 7+ due to ray
  # "lm-eval==0.4.2",
  # "lm-eval @ git+https://github.com/dlwh/lm-evaluation-harness.git@no_torch"
]

[project.urls]
Homepage = "https://github.com/stanford-crfm/levanter"
"Bug Tracker" = "https://github.com/stanford-crfm/levanter/issues"

[project.optional-dependencies]
gpu = ["jax[cuda12]>=0.6.2"]
tpu = ["jax[tpu]>=0.6.2"]
torch_test = [
  "torch>=2.7.0",
  "peft>=0.12.0",
]
profiling = [
    "xprof",
  # TensorBoard UI for viewing traces and profiles
  "tensorboard>=2.16",
  # Writer used by the TensorBoard tracker implementation
  "tensorboardX>=2.6",
]
serve = [
  "fastapi>=0.100.0",
  "uvicorn[standard]>=0.23.0",
  "openai>=1.0.0",
]

lm_eval = [
  "lm-eval",
]

gcp = [
    "google-api-python-client>=2.175.0",
    "google-cloud-storage",
    "google-cloud-storage-transfer",
    "google-auth",
]

[dependency-groups]
test = [
  "pytest",
  "pytest-forked",
  "pytest-asyncio",
  "soundfile",
  "librosa",
  "tensorboardX>=2.6",
  "chex>=0.1.86",
  "httpx>=0.28.1",
  "pytest-profiling>=1.8.1",
  "trackio",
]

docs = [
  "mkdocs>=1.4.3",
  "mkdocs-material>=7.3.3",
  "mkdocstrings>=0.22.0",
  "mkdocs-literate-nav>=0.6.0",
  "mkdocs-macros-plugin>=0.7.0",
  "mkdocstrings-python>=1.1.2",
  "mkdocs-include-markdown-plugin",
  "pymdown-extensions",
  "pygments",
]

dev = [
  "pygments",
  "pre-commit",
  "click>=8.0.0",
  "prompt_toolkit>=3.0.0",
]

[tool.uv]
default-groups = ["test", "docs", "dev"]
conflicts = [
  [
    { extra = "gpu" },
    { extra = "tpu" },
  ],
]  # Never solve for both GPU and TPU at once

[tool.ruff]
line-length = 119
target-version = "1.2.dev1641"
extend-exclude = ["scripts/"]

[tool.ruff.lint]
ignore = [
  "E203", "E501", "W605", "F821", "E266", "F722", "E731", "E741"
]

[tool.black]
line-length = 119
target-version = ["py311"]

[tool.mypy]
python_version = "1.2.dev1641"
mypy_path = ["src"]

[tool.mypy-haliax.core]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["src", "tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "entry: marks tests as entry point tests (deselect with '-m \"not entry\"')",
    "ray: marks tests that require Ray (deselect with '-m \"not ray\"')",
]
asyncio_default_fixture_loop_scope = "function"
