# coding: utf-8

"""
    Fiscal document service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cloudbeds_fiscal_document.models.allocate_receipt_payment_request import AllocateReceiptPaymentRequest

class TestAllocateReceiptPaymentRequest(unittest.TestCase):
    """AllocateReceiptPaymentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AllocateReceiptPaymentRequest:
        """Test AllocateReceiptPaymentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AllocateReceiptPaymentRequest`
        """
        model = AllocateReceiptPaymentRequest()
        if include_optional:
            return AllocateReceiptPaymentRequest(
                allocations = [
                    cloudbeds_fiscal_document.models.receipt_transaction_allocation.ReceiptTransactionAllocation(
                        transaction_id = 56, 
                        amount = 1.337, )
                    ],
                receipt_id = 56
            )
        else:
            return AllocateReceiptPaymentRequest(
                allocations = [
                    cloudbeds_fiscal_document.models.receipt_transaction_allocation.ReceiptTransactionAllocation(
                        transaction_id = 56, 
                        amount = 1.337, )
                    ],
                receipt_id = 56,
        )
        """

    def testAllocateReceiptPaymentRequest(self):
        """Test AllocateReceiptPaymentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
