# coding: utf-8

"""
    Fiscal document service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cloudbeds_fiscal_document.models.fiscal_document_recipient import FiscalDocumentRecipient

class TestFiscalDocumentRecipient(unittest.TestCase):
    """FiscalDocumentRecipient unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FiscalDocumentRecipient:
        """Test FiscalDocumentRecipient
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FiscalDocumentRecipient`
        """
        model = FiscalDocumentRecipient()
        if include_optional:
            return FiscalDocumentRecipient(
                id = '',
                first_name = '',
                last_name = '',
                email = '',
                type = 'COMPANY',
                address = cloudbeds_fiscal_document.models.recipient_address.RecipientAddress(
                    address1 = '', 
                    address2 = '', 
                    city = '', 
                    state = '', 
                    zip_code = '', 
                    country = '', ),
                tax = cloudbeds_fiscal_document.models.recipient_tax_info.RecipientTaxInfo(
                    id = '', ),
                country_data = {
                    'key' : None
                    }
            )
        else:
            return FiscalDocumentRecipient(
        )
        """

    def testFiscalDocumentRecipient(self):
        """Test FiscalDocumentRecipient"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
