{"version":3,"file":"VMCPInstallPage-DbWP5Nh8.js","sources":["../../src/pages/VMCPInstallPage.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useRouter } from '@/hooks/useRouter';\nimport posthog from 'posthog-js';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Container, \n  Server, \n  Zap, \n  Download, \n  Loader2, \n  Link as LinkIcon,\n  MessageSquare,\n  GitFork,\n  Info\n} from 'lucide-react';\nimport { newApi } from '@/lib/new-api';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/contexts/auth-context';\nimport { FaviconIcon } from '@/components/ui/favicon-icon';\nimport VMCPDetailsDisplay from '@/components/vmcp/VMCPDetailsDisplay';\n\nexport default function VMCPInstallPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { success, error: toastError } = useToast();\n  const { user, loading: authLoading, isAuthenticated } = useAuth();\n  \n  const [vmcpId, setVmcpId] = useState<string>('');\n  const [vmcpType, setVmcpType] = useState<string>('public');\n  const [vmcpData, setVmcpData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [installing, setInstalling] = useState(false);\n\n\n  // Helper function to detect if icon is URL or base64\n  const isIconUrl = (icon: string) => {\n    return icon.startsWith('http://') || icon.startsWith('https://');\n  };\n\n  // Helper function to get icon source\n  const getIconSource = (vmcp: any) => {\n    if (vmcp.metadata?.icon) {\n      return isIconUrl(vmcp.metadata.icon) \n        ? vmcp.metadata.icon \n        : `data:image/png;base64,${vmcp.metadata.icon}`;\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    // Redirect to login if not authenticated and not loading\n    if (!authLoading && !isAuthenticated) {\n      router.push('/login');\n      return;\n    }\n  }, [authLoading, isAuthenticated, router]);\n\n  useEffect(() => {\n    if (params.vmcp_id && params.vmcp_type) {\n      setVmcpId(params.vmcp_id as string);\n      setVmcpType(params.vmcp_type as string);\n      loadVMCPData(params.vmcp_id as string, params.vmcp_type as string);\n    }\n  }, [params.vmcp_id, params.vmcp_type]);\n\n  const loadVMCPData = async (id: string, type: string) => {\n    try {\n      setLoading(true);\n      const accessToken = localStorage.getItem('access_token');\n      if (!accessToken) {\n        toastError('Please log in to install vMCPs');\n        router.push('/login');\n        return;\n      }\n\n      let response;\n      response = await newApi.getPublicVMCPDetails(id, accessToken);\n\n      if (response.success && response.data) {\n        setVmcpData(response.data);\n      } else {\n        toastError(`Failed to load ${type} vMCP details`);\n        router.push('/vmcp');\n      }\n    } catch (error) {\n      toastError('Failed to load vMCP details');\n      router.push('/vmcp');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const installVMCP = async () => {\n    try {\n      posthog.capture('vmcp_install_initiated', {\n        vmcp_id: vmcpId,\n        vmcp_type: vmcpType,\n        vmcp_name: vmcpData?.name,\n      });\n      setInstalling(true);\n      console.log('üîß vmcpData:', vmcpData);\n      const accessToken = localStorage.getItem('access_token');\n      if (!accessToken) {\n        toastError('Please log in to install vMCPs');\n        router.push('/login');\n        return;\n      }\n      console.log('üîß setting up installVMCP:', accessToken);\n\n      // Send the VMCPConfig directly as-is, just add remote tag\n      const vmcpConfig = {\n        ...vmcpData,\n        user_id: user?.id || '',\n        // is_public: false, // Always install as private\n        // is_wellknown: vmcpType === 'wellknown', // Mark if it's from well-known\n        // upstream_id: vmcpData.id, // Track the upstream ID\n        // upstream_type: vmcpType, // Track the upstream type\n        // tags: [...(vmcpData.tags || []), 'remote'] // Add remote tag\n      };\n\n      console.log('üîß Calling installVMCP with vmcpId:', vmcpId);\n      const result = await newApi.installVMCP(vmcpId, accessToken);\n      console.log('üîß installVMCP result:', result);\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to install vMCP');\n      }\n\n      success('vMCP installed successfully!');\n      \n      // Redirect to vMCP page\n      router.push('/vmcp');\n      \n    } catch (error) {\n      console.error('‚ùå Error installing vMCP:', error);\n      toastError(error instanceof Error ? error.message : 'Unknown error');\n    } finally {\n      setInstalling(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen text-foreground flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"h-8 w-8 animate-spin rounded-full border-2 border-primary border-t-transparent mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Loading vMCP details...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!vmcpData) {\n    return (\n      <div className=\"min-h-screen text-foreground flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-destructive\">vMCP not found</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen\">\n      <div className=\"max-w-6xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <div className=\"h-10 w-10 rounded-lg bg-gradient-to-br from-primary/20 to-primary/10 flex items-center justify-center relative overflow-hidden\">\n              {getIconSource(vmcpData) ? (\n                <img\n                  src={getIconSource(vmcpData)} \n                  alt={`${vmcpData.name} icon`}\n                  className=\"h-7 w-7 object-contain\"\n                />\n              ) : (\n                <Container className=\"h-5 w-5 text-primary\" />\n              )}\n            </div>\n            <div className=\"flex-1\">\n              <h1 className=\"text-2xl font-bold mb-1\">\n                Install {vmcpType === 'wellknown' ? 'Well-Known' : 'Public'} vMCP\n              </h1>\n              <p className=\"text-sm text-muted-foreground\">\n                Review and install {vmcpData.name} to your account\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* vMCP Overview Card */}\n        <Card className=\"mb-6\">\n          <CardHeader className=\"pb-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <CardTitle className=\"text-xl\">{vmcpData.name}</CardTitle>\n                <CardDescription className=\"text-sm mt-1\">\n                  {vmcpData.description || 'No description available'}\n                </CardDescription>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {/* Servers */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <Server className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.vmcp_config?.selected_servers?.length || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">MCP Servers</div>\n              </div>\n              \n              {/* Tools */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <Zap className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.total_tools || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">Tools</div>\n              </div>\n              \n              {/* Resources */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <LinkIcon className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.total_resources || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">Resources</div>\n              </div>\n              \n              {/* Prompts */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <MessageSquare className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.total_prompts || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">Prompts</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Detailed Information */}\n        <VMCPDetailsDisplay \n          vmcpData={vmcpData}\n          vmcpType={vmcpType}\n          isRemoteVMCP={false}\n          showExpandableLists={true}\n        />\n\n\n\n        {/* Information Section */}\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Info className=\"h-5 w-5 text-blue-500\" />\n              Installation Information\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <p className=\"text-sm text-muted-foreground\">\n                This vMCP will be installed as a <strong>read-only copy</strong>. After installation, you will only be able to edit:\n              </p>\n              <ul className=\"text-sm text-muted-foreground space-y-1 ml-4\">\n                <li>‚Ä¢ Server authentication settings in the MCP Servers tab</li>\n                <li>‚Ä¢ Environment variable values</li>\n              </ul>\n              <p className=\"text-sm text-muted-foreground\">\n                To make a fully editable copy, you can fork this vMCP after installation.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-center gap-4 mt-8\">\n          <Button\n            onClick={installVMCP}\n            disabled={installing}\n            size=\"lg\"\n            className=\"px-8 py-3\"\n          >\n            {installing ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Installing...\n              </>\n            ) : (\n              <>\n                <Download className=\"h-4 w-4 mr-2\" />\n                Install vMCP\n              </>\n            )}\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"lg\"\n            className=\"px-8 py-3\"\n            disabled\n            title=\"Fork functionality coming soon\"\n          >\n            <GitFork className=\"h-4 w-4 mr-2\" />\n            Fork vMCP\n          </Button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n"],"names":["VMCPInstallPage","params","useParams","router","useRouter","success","toastError","useToast","user","authLoading","isAuthenticated","useAuth","vmcpId","setVmcpId","useState","vmcpType","setVmcpType","vmcpData","setVmcpData","loading","setLoading","installing","setInstalling","isIconUrl","icon","getIconSource","vmcp","useEffect","loadVMCPData","id","type","accessToken","response","newApi","installVMCP","posthog","vmcpConfig","result","error","jsxs","jsx","Container","Card","CardHeader","CardTitle","CardDescription","CardContent","Server","Zap","LinkIcon","MessageSquare","VMCPDetailsDisplay","Info","Button","Fragment","Loader2","Download","GitFork"],"mappings":"uuBAyBA,SAAwBA,IAAkB,CACxC,MAAMC,EAASC,EAAA,EACTC,EAASC,EAAA,EACT,CAAE,QAAAC,EAAS,MAAOC,CAAA,EAAeC,EAAA,EACjC,CAAE,KAAAC,EAAM,QAASC,EAAa,gBAAAC,CAAA,EAAoBC,EAAA,EAElD,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAiB,EAAE,EACzC,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAiB,QAAQ,EACnD,CAACG,EAAUC,CAAW,EAAIJ,EAAAA,SAAc,IAAI,EAC5C,CAACK,EAASC,CAAU,EAAIN,EAAAA,SAAS,EAAI,EACrC,CAACO,EAAYC,CAAa,EAAIR,EAAAA,SAAS,EAAK,EAI5CS,EAAaC,GACVA,EAAK,WAAW,SAAS,GAAKA,EAAK,WAAW,UAAU,EAI3DC,EAAiBC,GACjBA,EAAK,UAAU,KACVH,EAAUG,EAAK,SAAS,IAAI,EAC/BA,EAAK,SAAS,KACd,yBAAyBA,EAAK,SAAS,IAAI,GAE1C,KAGTC,EAAAA,UAAU,IAAM,CAEd,GAAI,CAAClB,GAAe,CAACC,EAAiB,CACpCP,EAAO,KAAK,QAAQ,EACpB,MACF,CACF,EAAG,CAACM,EAAaC,EAAiBP,CAAM,CAAC,EAEzCwB,EAAAA,UAAU,IAAM,CACV1B,EAAO,SAAWA,EAAO,YAC3BY,EAAUZ,EAAO,OAAiB,EAClCe,EAAYf,EAAO,SAAmB,EACtC2B,EAAa3B,EAAO,QAAmBA,EAAO,SAAmB,EAErE,EAAG,CAACA,EAAO,QAASA,EAAO,SAAS,CAAC,EAErC,MAAM2B,EAAe,MAAOC,EAAYC,IAAiB,CACvD,GAAI,CACFV,EAAW,EAAI,EACf,MAAMW,EAAc,aAAa,QAAQ,cAAc,EACvD,GAAI,CAACA,EAAa,CAChBzB,EAAW,gCAAgC,EAC3CH,EAAO,KAAK,QAAQ,EACpB,MACF,CAEA,IAAI6B,EACJA,EAAW,MAAMC,EAAO,qBAAqBJ,EAAIE,CAAW,EAExDC,EAAS,SAAWA,EAAS,KAC/Bd,EAAYc,EAAS,IAAI,GAEzB1B,EAAW,kBAAkBwB,CAAI,eAAe,EAChD3B,EAAO,KAAK,OAAO,EAEvB,MAAgB,CACdG,EAAW,6BAA6B,EACxCH,EAAO,KAAK,OAAO,CACrB,QAAA,CACEiB,EAAW,EAAK,CAClB,CACF,EAEMc,EAAc,SAAY,CAC9B,GAAI,CACFC,EAAQ,QAAQ,yBAA0B,CACxC,QAASvB,EACT,UAAWG,EACX,UAAWE,GAAU,IAAA,CACtB,EACDK,EAAc,EAAI,EAClB,QAAQ,IAAI,eAAgBL,CAAQ,EACpC,MAAMc,EAAc,aAAa,QAAQ,cAAc,EACvD,GAAI,CAACA,EAAa,CAChBzB,EAAW,gCAAgC,EAC3CH,EAAO,KAAK,QAAQ,EACpB,MACF,CACA,QAAQ,IAAI,6BAA8B4B,CAAW,EAGrD,MAAMK,EAAa,CACjB,GAAGnB,EACH,QAAST,GAAM,IAAM,EAAA,EAQvB,QAAQ,IAAI,sCAAuCI,CAAM,EACzD,MAAMyB,EAAS,MAAMJ,EAAO,YAAYrB,EAAQmB,CAAW,EAG3D,GAFA,QAAQ,IAAI,yBAA0BM,CAAM,EAExC,CAACA,EAAO,QACV,MAAM,IAAI,MAAMA,EAAO,OAAS,wBAAwB,EAG1DhC,EAAQ,8BAA8B,EAGtCF,EAAO,KAAK,OAAO,CAErB,OAASmC,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAC/ChC,EAAWgC,aAAiB,MAAQA,EAAM,QAAU,eAAe,CACrE,QAAA,CACEhB,EAAc,EAAK,CACrB,CACF,EAEA,OAAIH,QAEC,MAAA,CAAI,UAAU,gEACb,SAAAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,6FAAA,CAA8F,EAC7GA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,yBAAA,CAAuB,CAAA,CAAA,CAC9D,CAAA,CACF,EAICvB,QAWF,MAAA,CAAI,UAAU,eACb,SAAAsB,EAAAA,KAAC,MAAA,CAAI,UAAU,wBAEb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,OACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAC,MAAC,MAAA,CAAI,UAAU,iIACZ,SAAAf,EAAcR,CAAQ,EACrBuB,EAAAA,IAAC,MAAA,CACC,IAAKf,EAAcR,CAAQ,EAC3B,IAAK,GAAGA,EAAS,IAAI,QACrB,UAAU,wBAAA,CAAA,EAGZuB,EAAAA,IAACC,EAAA,CAAU,UAAU,uBAAuB,CAAA,CAEhD,EACAF,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,0BAA0B,SAAA,CAAA,WAC7BxB,IAAa,YAAc,aAAe,SAAS,OAAA,EAC9D,EACAwB,EAAAA,KAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,CAAA,sBACvBtB,EAAS,KAAK,kBAAA,CAAA,CACpC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAsB,EAAAA,KAACG,EAAA,CAAK,UAAU,OACd,SAAA,CAAAF,EAAAA,IAACG,EAAA,CAAW,UAAU,OACpB,SAAAH,EAAAA,IAAC,OAAI,UAAU,oCACb,gBAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAACI,EAAA,CAAU,UAAU,UAAW,SAAA3B,EAAS,KAAK,QAC7C4B,EAAA,CAAgB,UAAU,eACxB,SAAA5B,EAAS,aAAe,0BAAA,CAC3B,CAAA,CAAA,CACF,EACF,EACF,QACC6B,EAAA,CAAY,UAAU,OACrB,SAAAP,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAACO,EAAA,CAAO,UAAU,mCAAA,CAAoC,EACtDP,EAAAA,IAAC,OAAI,UAAU,oBAAqB,WAAS,aAAa,kBAAkB,QAAU,CAAA,CAAE,EACxFA,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,aAAA,CAAW,CAAA,EAC5D,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAACQ,EAAA,CAAI,UAAU,mCAAA,CAAoC,QAClD,MAAA,CAAI,UAAU,oBAAqB,SAAA/B,EAAS,aAAe,EAAE,EAC9DuB,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,OAAA,CAAK,CAAA,EACtD,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAACS,EAAA,CAAS,UAAU,mCAAA,CAAoC,QACvD,MAAA,CAAI,UAAU,oBAAqB,SAAAhC,EAAS,iBAAmB,EAAE,EAClEuB,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,WAAA,CAAS,CAAA,EAC1D,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAACU,EAAA,CAAc,UAAU,mCAAA,CAAoC,QAC5D,MAAA,CAAI,UAAU,oBAAqB,SAAAjC,EAAS,eAAiB,EAAE,EAChEuB,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,SAAA,SAAA,CAAO,CAAA,CAAA,CACxD,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGAA,EAAAA,IAACW,EAAA,CACC,SAAAlC,EACA,SAAAF,EACA,aAAc,GACd,oBAAqB,EAAA,CAAA,EAMvBwB,EAAAA,KAACG,EAAA,CAAK,UAAU,OACd,SAAA,CAAAF,MAACG,EAAA,CACC,SAAAJ,EAAAA,KAACK,EAAA,CAAU,UAAU,0BACnB,SAAA,CAAAJ,EAAAA,IAACY,EAAA,CAAK,UAAU,uBAAA,CAAwB,EAAE,0BAAA,CAAA,CAE5C,CAAA,CACF,EACAZ,MAACM,EAAA,CACC,SAAAP,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,CAAA,oCACVC,EAAAA,IAAC,UAAO,SAAA,gBAAA,CAAc,EAAS,sDAAA,EAClE,EACAD,EAAAA,KAAC,KAAA,CAAG,UAAU,+CACZ,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAA,yDAAA,CAAuD,EAC3DA,EAAAA,IAAC,MAAG,SAAA,+BAAA,CAA6B,CAAA,EACnC,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,2EAAA,CAE7C,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,EAAAA,IAACa,EAAA,CACC,QAASnB,EACT,SAAUb,EACV,KAAK,KACL,UAAU,YAET,WACCkB,EAAAA,KAAAe,EAAAA,SAAA,CACE,SAAA,CAAAd,EAAAA,IAACe,EAAA,CAAQ,UAAU,2BAAA,CAA4B,EAAE,eAAA,CAAA,CAEnD,EAEAhB,EAAAA,KAAAe,EAAAA,SAAA,CACE,SAAA,CAAAd,EAAAA,IAACgB,EAAA,CAAS,UAAU,cAAA,CAAe,EAAE,cAAA,CAAA,CAEvC,CAAA,CAAA,EAGJjB,EAAAA,KAACc,EAAA,CACC,QAAQ,UACR,KAAK,KACL,UAAU,YACV,SAAQ,GACR,MAAM,iCAEN,SAAA,CAAAb,EAAAA,IAACiB,EAAA,CAAQ,UAAU,cAAA,CAAe,EAAE,WAAA,CAAA,CAAA,CAEtC,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,CACF,EApJEjB,EAAAA,IAAC,MAAA,CAAI,UAAU,gEACb,eAAC,MAAA,CAAI,UAAU,cACb,SAAAA,EAAAA,IAAC,IAAA,CAAE,UAAU,mBAAmB,SAAA,gBAAA,CAAc,EAChD,EACF,CAkJN"}