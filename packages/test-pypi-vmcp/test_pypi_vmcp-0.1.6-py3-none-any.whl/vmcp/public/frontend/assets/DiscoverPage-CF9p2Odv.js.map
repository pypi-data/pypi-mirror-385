{"version":3,"file":"DiscoverPage-CF9p2Odv.js","sources":["../../src/pages/DiscoverPage.tsx"],"sourcesContent":["\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { useRouter } from '@/hooks/useRouter';\nimport { Server, Container, Globe, Download, Copy, Plus, Code, MessageSquare, FolderOpen, MoreVertical, Search, X, Clock, Play } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useCommunityVMCPs } from '@/contexts/community-vmcps-context';\nimport { useToast } from '@/hooks/use-toast';\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\nimport { FaviconIcon } from '@/components/ui/favicon-icon';\nimport { Input } from '@/components/ui/input';\nimport { SearchableMultiSelect } from '@/components/ui/searchable-select';\nimport { Separator } from '@/components/ui/separator';\n\nexport default function DiscoverPage() {\n  const router = useRouter();\n  const { publicVMCPS, loading } = useCommunityVMCPs();\n  const { success, error: toastError } = useToast();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n\n  // Filter and categorize publicVMCPS in one pass using destructuring\n  const { vmcps: allVmcps, mcps: allMcps, demos: allDemos, categories: availableCategories } = useMemo(() => {\n    const vmcps: any[] = [];\n    const mcps: any[] = [];\n    const demos: any[] = [];\n    const categorySet = new Set<string>();\n\n    publicVMCPS?.forEach(item => {\n      // Extract category once\n      const category = item.metadata?.category\n        ? (typeof item.metadata.category === 'string'\n          ? item.metadata.category\n          : item.metadata.category.secondary || item.metadata.category.primary)\n        : null;\n\n      // Add to category set if exists\n      if (category) categorySet.add(category);\n\n      // Filter by type and add to appropriate array\n      const type = item.metadata?.type;\n      if (!type || type === 'vmcp') {\n        vmcps.push(item);\n      } else if (type === 'mcp') {\n        mcps.push(item);\n      } else if (type === 'demo') {\n        demos.push(item);\n      }\n    });\n\n    return {\n      vmcps,\n      mcps,\n      demos,\n      categories: Array.from(categorySet).sort()\n    };\n  }, [publicVMCPS]);\n\n  // Debounce search query\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedQuery(searchQuery);\n    }, 300); // 300ms delay\n\n    return () => clearTimeout(timer);\n  }, [searchQuery]);\n\n  // Search and filter function\n  const searchAndFilterVMCP = (vmcp: any, query: string, categories: string[]) => {\n    // Category filtering\n    if (categories.length > 0) {\n      const vmcpCategory = vmcp.metadata?.category \n        ? (typeof vmcp.metadata.category === 'string' \n          ? vmcp.metadata.category \n          : vmcp.metadata.category.secondary || vmcp.metadata.category.primary)\n        : null;\n      \n      if (!vmcpCategory || !categories.includes(vmcpCategory)) {\n        return false;\n      }\n    }\n\n    // Search filtering\n    if (!query.trim()) return true;\n    \n    const searchTerm = query.toLowerCase();\n    \n    // Search in name\n    if (vmcp.name?.toLowerCase().includes(searchTerm)) return true;\n    \n    // Search in description\n    if (vmcp.description?.toLowerCase().includes(searchTerm)) return true;\n    \n    // Search in category\n    if (vmcp.metadata?.category) {\n      const category = typeof vmcp.metadata.category === 'string' \n        ? vmcp.metadata.category \n        : vmcp.metadata.category.secondary || vmcp.metadata.category.primary;\n      if (category?.toLowerCase().includes(searchTerm)) return true;\n    }\n    \n    // Search in MCP servers\n    if (vmcp.vmcp_config?.selected_servers) {\n      const serverNames = vmcp.vmcp_config.selected_servers\n        .map((server: any) => server.name?.toLowerCase())\n        .filter(Boolean);\n      if (serverNames.some((name: string) => name.includes(searchTerm))) return true;\n    }\n    \n    return false;\n  };\n\n  // Generate search suggestions\n  const searchSuggestions = useMemo(() => {\n    if (!searchQuery.trim() || searchQuery.length < 2) return [];\n    \n    const suggestions = new Set<string>();\n    const query = searchQuery.toLowerCase();\n    \n    // Add vMCP names\n    allVmcps.forEach(vmcp => {\n      if (vmcp.name?.toLowerCase().includes(query)) {\n        suggestions.add(vmcp.name);\n      }\n    });\n    \n    // Add MCP names\n    allMcps.forEach(mcp => {\n      if (mcp.name?.toLowerCase().includes(query)) {\n        suggestions.add(mcp.name);\n      }\n    });\n    \n    // Add Demo names\n    allDemos.forEach(demo => {\n      if (demo.name?.toLowerCase().includes(query)) {\n        suggestions.add(demo.name);\n      }\n    });\n    \n    // Add categories\n    [...allVmcps, ...allMcps, ...allDemos].forEach(item => {\n      if (item.metadata?.category) {\n        const category = typeof item.metadata.category === 'string' \n          ? item.metadata.category \n          : item.metadata.category.secondary || item.metadata.category.primary;\n        if (category?.toLowerCase().includes(query)) {\n          suggestions.add(category);\n        }\n      }\n    });\n    \n    // Add server names\n    [...allVmcps, ...allMcps, ...allDemos].forEach(item => {\n      if (item.vmcp_config?.selected_servers) {\n        item.vmcp_config.selected_servers.forEach((server: any) => {\n          if (server.name?.toLowerCase().includes(query)) {\n            suggestions.add(server.name);\n          }\n        });\n      }\n    });\n    \n    return Array.from(suggestions).slice(0, 8); // Limit to 8 suggestions\n  }, [searchQuery, allVmcps, allMcps, allDemos]);\n\n  // Filter vMCPs, MCPs, and Demos based on debounced search query and selected categories\n  const vmcps = useMemo(() => \n    allVmcps.filter(vmcp => searchAndFilterVMCP(vmcp, debouncedQuery, selectedCategories)), \n    [allVmcps, debouncedQuery, selectedCategories]\n  );\n  \n  const mcps = useMemo(() => \n    allMcps.filter(mcp => searchAndFilterVMCP(mcp, debouncedQuery, selectedCategories)), \n    [allMcps, debouncedQuery, selectedCategories]\n  );\n  \n  const demos = useMemo(() => \n    allDemos.filter(demo => searchAndFilterVMCP(demo, debouncedQuery, selectedCategories)), \n    [allDemos, debouncedQuery, selectedCategories]\n  );\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen text-foreground flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"h-8 w-8 animate-spin rounded-full border-2 border-primary border-t-transparent mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Loading discovery content...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"h-12 w-12 rounded-lg bg-primary/20 flex items-center justify-center\">\n              <Globe className=\"h-8 w-8 text-primary\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">\n                Discover\n              </h1>\n              <p className=\"text-muted-foreground\">Explore vMCPs from the community</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Search and Filter Section */}\n      <div className=\"mb-6\">\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          {/* Search Input */}\n          <div className=\"relative flex-1 max-w-md\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Search vMCPs, categories, descriptions, or servers...\"\n                value={searchQuery}\n                onChange={(e) => {\n                  setSearchQuery(e.target.value);\n                  setIsSearchOpen(e.target.value.length >= 2);\n                }}\n                onFocus={() => setIsSearchOpen(searchQuery.length >= 2)}\n                onBlur={() => {\n                  // Delay closing to allow clicking on suggestions\n                  setTimeout(() => setIsSearchOpen(false), 200);\n                }}\n                className=\"pl-10 pr-10 h-11\"\n              />\n              {searchQuery && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => {\n                    setSearchQuery('');\n                    setIsSearchOpen(false);\n                  }}\n                  className=\"absolute right-1 top-1/2 transform -translate-y-1/2 h-8 w-8 p-0 hover:bg-muted\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              )}\n            </div>\n            \n            {/* Autosuggestion Dropdown */}\n            {isSearchOpen && searchSuggestions.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-card border border-border rounded-md shadow-lg z-50 max-h-60 overflow-y-auto\">\n                <div className=\"p-2\">\n                  <div className=\"text-xs font-medium text-muted-foreground mb-2 px-2\">Suggestions</div>\n                  {searchSuggestions.map((suggestion, index) => (\n                    <div\n                      key={index}\n                      onClick={() => {\n                        setSearchQuery(suggestion);\n                        setIsSearchOpen(false);\n                      }}\n                      className=\"flex items-center gap-2 px-2 py-2 rounded-sm hover:bg-muted cursor-pointer transition-colors\"\n                    >\n                      <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                      <span className=\"text-sm truncate\">{suggestion}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"flex-1 max-w-md\">\n            <SearchableMultiSelect\n              options={availableCategories}\n              value={selectedCategories}\n              onValueChange={setSelectedCategories}\n              placeholder=\"Filter by categories...\"\n              searchPlaceholder=\"Search categories...\"\n              emptyText=\"No categories found.\"\n              className=\"h-11\"\n            />\n          </div>\n        </div>\n        \n        {/* Results Summary */}\n        {(debouncedQuery || selectedCategories.length > 0) && (\n          <div className=\"mt-3 space-y-2\">\n            <div className=\"text-sm text-muted-foreground\">\n              {vmcps.length + mcps.length + demos.length} result{(vmcps.length + mcps.length + demos.length) !== 1 ? 's' : ''} found\n            </div>\n            {selectedCategories.length > 0 && (\n              <div className=\"space-y-2\">\n                <div className=\"text-sm text-muted-foreground\">\n                  in {selectedCategories.length} categor{selectedCategories.length === 1 ? 'y' : 'ies'}:\n                </div>\n                <div className=\"flex flex-wrap gap-1 max-w-full overflow-hidden\">\n                  {selectedCategories.slice(0, 5).map((category) => (\n                    <Badge key={category} variant=\"outline\" className=\"text-[10px] px-1.5 py-0.5 flex-shrink-0\">\n                      {category}\n                    </Badge>\n                  ))}\n                  {selectedCategories.length > 5 && (\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <Badge \n                          variant=\"outline\" \n                          className=\"text-[10px] px-1.5 py-0.5 cursor-pointer hover:bg-muted/50 flex-shrink-0\"\n                        >\n                          +{selectedCategories.length - 5} more\n                        </Badge>\n                      </TooltipTrigger>\n                      <TooltipContent>\n                        <div className=\"max-w-xs\">\n                          <p className=\"font-medium mb-1 text-xs\">All selected categories:</p>\n                          <p className=\"text-[10px] break-words\">{selectedCategories.join(', ')}</p>\n                        </div>\n                      </TooltipContent>\n                    </Tooltip>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n        {/* Discovery Content */}\n        <Tabs defaultValue=\"vmcps\" className=\"min-h-[600px]\">\n          <TabsList className=\"mb-4\">\n            <TabsTrigger value=\"vmcps\" className=\"flex items-center gap-2\">\n              <Container className=\"h-4 w-4\" />\n              Community\n              <Badge variant=\"outline\" className=\"ml-2 text-xs\">\n                {vmcps.length}\n              </Badge>\n            </TabsTrigger>\n            <TabsTrigger value=\"mcps\" className=\"flex items-center gap-2\">\n              <Server className=\"h-4 w-4\" />\n              Official\n              <Badge variant=\"outline\" className=\"ml-2 text-xs\">\n                {mcps.length}\n              </Badge>\n            </TabsTrigger>\n            <TabsTrigger value=\"demos\" className=\"flex items-center gap-2\">\n              <Play className=\"h-4 w-4\" />\n              Demo\n              <Badge variant=\"outline\" className=\"ml-2 text-xs\">\n                {demos.length}\n              </Badge>\n            </TabsTrigger>\n          </TabsList>\n\n          <Separator className=\"mb-4\" />\n\n          <TabsContent value=\"vmcps\" className=\"space-y-6\">\n            {/* Public vMCPs */}\n            {vmcps && vmcps.length > 0 && (\n              <div>\n                <PublicVMCPSection publicVMCPS={vmcps} vmcp_type=\"public\"/>\n              </div>\n            )}\n\n            {/* Empty state for vMCPs */}\n            {(!vmcps || vmcps.length === 0) && (\n              <Card className=\"text-center py-12 bg-gradient-to-br from-muted/20 to-muted/10 border-2 border-dashed border-muted-foreground/30\">\n                <CardContent>\n                  <div className=\"h-16 w-16 rounded-full bg-muted/50 flex items-center justify-center mx-auto mb-4\">\n                    {searchQuery ? (\n                      <Search className=\"h-8 w-8 text-muted-foreground\" />\n                    ) : (\n                      <Container className=\"h-8 w-8 text-muted-foreground\" />\n                    )}\n                  </div>\n                  <CardTitle className=\"text-xl font-semibold mb-2\">\n                    {debouncedQuery ? 'No vMCPs Found' : 'No vMCPs Available'}\n                  </CardTitle>\n                  <CardDescription className=\"text-muted-foreground\">\n                    {debouncedQuery \n                      ? `No vMCPs match \"${debouncedQuery}\". Try a different search term.`\n                      : 'Check back later for vMCPs shared by the community'\n                    }\n                  </CardDescription>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"mcps\" className=\"space-y-6\">\n            {/* Public MCPs */}\n            {mcps && mcps.length > 0 && (\n              <div>\n                <PublicVMCPSection publicVMCPS={mcps} vmcp_type=\"mcp\"/>\n              </div>\n            )}\n\n            {/* Empty state for MCPs */}\n            {(!mcps || mcps.length === 0) && (\n              <Card className=\"text-center py-12 bg-gradient-to-br from-muted/20 to-muted/10 border-2 border-dashed border-muted-foreground/30\">\n                <CardContent>\n                  <div className=\"h-16 w-16 rounded-full bg-muted/50 flex items-center justify-center mx-auto mb-4\">\n                    {debouncedQuery ? (\n                      <Search className=\"h-8 w-8 text-muted-foreground\" />\n                    ) : (\n                      <Server className=\"h-8 w-8 text-muted-foreground\" />\n                    )}\n                  </div>\n                  <CardTitle className=\"text-xl font-semibold mb-2\">\n                    {debouncedQuery ? 'No MCPs Found' : 'No MCPs Available'}\n                  </CardTitle>\n                  <CardDescription className=\"text-muted-foreground\">\n                    {debouncedQuery \n                      ? `No MCPs match \"${debouncedQuery}\". Try a different search term.`\n                      : 'Check back later for MCP servers shared by the community'\n                    }\n                  </CardDescription>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"demos\" className=\"space-y-6\">\n            {/* Demo vMCPs */}\n            {demos && demos.length > 0 && (\n              <div>\n                <PublicVMCPSection publicVMCPS={demos} vmcp_type=\"demo\"/>\n              </div>\n            )}\n\n            {/* Empty state for Demos */}\n            {(!demos || demos.length === 0) && (\n              <Card className=\"text-center py-12 bg-gradient-to-br from-muted/20 to-muted/10 border-2 border-dashed border-muted-foreground/30\">\n                <CardContent>\n                  <div className=\"h-16 w-16 rounded-full bg-muted/50 flex items-center justify-center mx-auto mb-4\">\n                    {debouncedQuery ? (\n                      <Search className=\"h-8 w-8 text-muted-foreground\" />\n                    ) : (\n                      <Play className=\"h-8 w-8 text-muted-foreground\" />\n                    )}\n                  </div>\n                  <CardTitle className=\"text-xl font-semibold mb-2\">\n                    {debouncedQuery ? 'No Demos Found' : 'No Demos Available'}\n                  </CardTitle>\n                  <CardDescription className=\"text-muted-foreground\">\n                    {debouncedQuery \n                      ? `No demos match \"${debouncedQuery}\". Try a different search term.`\n                      : 'Check back later for demo vMCPs to try out'\n                    }\n                  </CardDescription>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n        </Tabs>\n      </div>\n  );\n}\n\n\n// Public vMCPs Section Component\nfunction PublicVMCPSection({ publicVMCPS, vmcp_type }: { publicVMCPS: any[], vmcp_type: string }) {\n  const { success, error: toastError } = useToast();\n  const router = useRouter();\n  const handleInstall = async (vmcpId: string,vmcp_type: string) => {\n    try {\n      const accessToken = localStorage.getItem('access_token');\n      if (!accessToken) {\n        toastError('Please log in to install vMCPs');\n        return;\n      }\n\n      // Navigate to install page with the vMCP ID\n      const installUrl = `/vmcp/install/${vmcpId}/${vmcp_type}`;\n      console.log('🔍 Router pushing to install URL:', installUrl);\n      console.log('🔍 vMCP ID:', vmcpId);\n      console.log('🔍 vMCP type:', vmcp_type);\n      // window.location.href = installUrl;\n      router.push(installUrl);\n    } catch (error) {\n      toastError('Failed to start installation');\n    }\n  };\n\n  const handleCopyShareUrl = async (vmcp: any) => {\n    try {\n      // Use metadata.url if available, otherwise fallback to share URL\n      const urlToCopy = vmcp.metadata?.url || `${window.location.origin}/vmcp/share/${vmcp.id}`;\n      await navigator.clipboard.writeText(urlToCopy);\n      success('URL copied to clipboard!');\n    } catch (error) {\n      toastError('Failed to copy URL');\n    }\n  };\n\n  // Helper function to detect if icon is URL or base64\n  const isIconUrl = (icon: string) => {\n    return icon.startsWith('http://') || icon.startsWith('https://');\n  };\n\n  // Helper function to get icon source\n  const getIconSource = (vmcp: any) => {\n    if (vmcp.metadata?.icon) {\n      return isIconUrl(vmcp.metadata.icon) \n        ? vmcp.metadata.icon \n        : `data:image/png;base64,${vmcp.metadata.icon}`;\n    }\n    return null;\n  };\n\n  // Helper function to get stats for a specific vMCP\n  const getVMCPStats = (vmcp: any) => {\n    const serversCount = vmcp.vmcp_config?.selected_servers?.length || 0;\n    const toolsCount = vmcp.total_tools || 0;\n    const resourcesCount = vmcp.total_resources || 0;\n    const promptsCount = vmcp.total_prompts || 0;\n\n    // Debug logging\n    console.log('VMCP Stats Debug:', {\n      name: vmcp.name,\n      total_tools: vmcp.total_tools,\n      total_resources: vmcp.total_resources,\n      total_prompts: vmcp.total_prompts,\n      computed: { toolsCount, resourcesCount, promptsCount }\n    });\n\n    return {\n      serversCount,\n      toolsCount,\n      resourcesCount,\n      promptsCount\n    };\n  };\n\n  if (publicVMCPS.length === 0) {\n    return (\n      <Card className=\"text-center py-12 bg-gradient-to-br from-muted/20 to-muted/10 border-2 border-dashed border-muted-foreground/30\">\n        <CardContent>\n          <div className=\"h-16 w-16 rounded-full bg-muted/50 flex items-center justify-center mx-auto mb-4\">\n            <Globe className=\"h-8 w-8 text-muted-foreground\" />\n          </div>\n          <CardTitle className=\"text-xl font-semibold mb-2\">No Public vMCPs Available</CardTitle>\n          <CardDescription className=\"text-muted-foreground\">\n            Check back later for vMCPs shared by the community\n          </CardDescription>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n      {publicVMCPS.map((publicVMCP, index) => (\n        <div\n          key={publicVMCP.id}\n          className=\"group relative rounded-xl border transition-all duration-200 shadow-sm cursor-pointer hover:shadow-lg hover:border-primary/50 bg-card overflow-hidden h-72 flex flex-col\"\n          onClick={() => handleInstall(publicVMCP.id, vmcp_type)}\n          style={{\n            animationDelay: `${index * 100}ms`\n          }}\n        >\n\n          {/* Main Content */}\n          <div className=\"p-4 pb-0 flex flex-col flex-1\">\n            {/* Header Section */}\n            <div className=\"flex items-start gap-3 mb-4\">\n              <div className=\"h-10 w-10 rounded-xl bg-gradient-to-br from-primary/20 to-primary/10 flex items-center justify-center overflow-hidden shadow-sm\">\n                {getIconSource(publicVMCP) ? (\n                  <img \n                    src={getIconSource(publicVMCP)} \n                    alt={publicVMCP.name}\n                    className=\"h-6 w-6 object-contain\"\n                    onError={(e) => {\n                      // Fallback to default icon if image fails to load\n                      e.currentTarget.style.display = 'none';\n                      e.currentTarget.nextElementSibling?.classList.remove('hidden');\n                    }}\n                  />\n                ) : null}\n                {vmcp_type === 'mcp' ? (\n                  <Server className={`h-5 w-5 text-primary ${getIconSource(publicVMCP) ? 'hidden' : ''}`} />\n                ) : vmcp_type === 'demo' ? (\n                  <Play className={`h-5 w-5 text-primary ${getIconSource(publicVMCP) ? 'hidden' : ''}`} />\n                ) : (\n                  <Container className={`h-5 w-5 text-primary ${getIconSource(publicVMCP) ? 'hidden' : ''}`} />\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                {/* Name Section */}\n                <div className=\"mb-2\">\n                  {publicVMCP.name.startsWith('@') ? (\n                    <div className=\"flex flex-col flex-1 min-w-0\">\n                      <span className=\"text-xs text-muted-foreground font-medium\">\n                        {publicVMCP.name.split('/')[0]}/\n                      </span>\n                      <h4 className=\"font-semibold text-foreground text-sm truncate\">\n                        {publicVMCP.name.split('/').slice(1).join('/')}\n                      </h4>\n                    </div>\n                  ) : (\n                    <h4 className=\"font-semibold text-foreground text-sm truncate\">{publicVMCP.name}</h4>\n                  )}\n                </div>     \n              </div>\n            </div>\n             {/* Category Section - Dedicated section below name */}\n                <div className=\"mb-2\">\n                    {publicVMCP.metadata?.category && (\n                      <Badge variant=\"outline\" className=\"text-[10px] text-muted-foreground bg-muted/60 px-2 py-1 rounded-md font-medium w-fit inline-block\">\n                        {typeof publicVMCP.metadata.category === 'string' \n                          ? publicVMCP.metadata.category \n                          : publicVMCP.metadata.category.secondary || 'Category'}\n                      </Badge>\n                    )}\n                </div>\n            {/* Description Section */}\n            {publicVMCP.description && (\n              <p className=\"text-xs pb-2 text-muted-foreground leading-relaxed line-clamp-3 min-h-[3rem]\">{publicVMCP.description}</p>\n            )}\n\n            {/* MCP Servers Section */}\n            <div className=\"mb-3 min-h-[32px]\">\n              {publicVMCP.vmcp_config?.selected_servers && publicVMCP.vmcp_config.selected_servers.length > 0 ? (\n                <div className=\"flex flex-wrap gap-1.5\">\n                  {publicVMCP.vmcp_config.selected_servers.slice(0, 3).map((server: any, serverIndex: number) => (\n                    <div key={serverIndex} className=\"flex items-center gap-1.5 px-2.5 py-1.5 rounded-lg bg-muted/40 hover:bg-muted/60 transition-colors\">\n                      <FaviconIcon\n                        url={server.url}\n                        faviconUrl={server.favicon_url}\n                        className=\"h-3 w-3\"\n                        size={12}\n                      />\n                      <span className=\"text-xs font-medium truncate max-w-40\">{server.name}</span>\n                    </div>\n                  ))}\n                  {publicVMCP.vmcp_config.selected_servers.length > 3 && (\n                    <div className=\"flex items-center gap-1.5 px-2.5 py-1.5 rounded-lg bg-muted/40\">\n                      <span className=\"text-xs font-medium text-muted-foreground\">\n                        +{publicVMCP.vmcp_config.selected_servers.length - 3}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"min-h-[32px]\"></div>\n              )}\n            </div>\n          </div>\n          \n          {/* Stats Section - Dedicated bottom section */}\n          <div className=\"px-4 py-4 border-t border-border/30 mt-auto\">\n            <div className=\"flex items-center justify-between text-xs\">\n              <div className=\"flex items-center gap-6\">\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"font-medium text-foreground text-xs\">{getVMCPStats(publicVMCP).toolsCount}</span>\n                  <span className=\"text-muted-foreground text-xs\">tools</span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"font-medium text-foreground text-xs\">{getVMCPStats(publicVMCP).promptsCount}</span>\n                  <span className=\"text-muted-foreground text-xs\">prompts</span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"font-medium text-foreground text-xs\">{getVMCPStats(publicVMCP).resourcesCount}</span>\n                  <span className=\"text-muted-foreground text-xs\">resources</span>\n                </div>\n              </div>\n              {/* Copy Button */}\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleCopyShareUrl(publicVMCP);\n                    }}\n                    className=\"h-8 w-8 p-0 rounded-full transition-all duration-200\"\n                    title={publicVMCP.metadata?.url ? \"Copy URL\" : \"No URL to copy\"}\n                    disabled={!publicVMCP.metadata?.url}\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p className='text-xs'> {(publicVMCP.metadata?.url ? \"Copy MCP URL\" : \"Error: no MCP URL to copy\")}</p>\n                </TooltipContent>\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}"],"names":["DiscoverPage","useRouter","publicVMCPS","loading","useCommunityVMCPs","useToast","searchQuery","setSearchQuery","useState","debouncedQuery","setDebouncedQuery","isSearchOpen","setIsSearchOpen","selectedCategories","setSelectedCategories","allVmcps","allMcps","allDemos","availableCategories","useMemo","vmcps","mcps","demos","categorySet","item","category","type","useEffect","timer","searchAndFilterVMCP","vmcp","query","categories","vmcpCategory","searchTerm","server","name","searchSuggestions","suggestions","mcp","demo","jsxs","jsx","Globe","Search","Input","e","Button","X","suggestion","index","Clock","SearchableMultiSelect","Badge","Tooltip","TooltipTrigger","TooltipContent","Tabs","TabsList","TabsTrigger","Container","Server","Play","Separator","TabsContent","PublicVMCPSection","Card","CardContent","CardTitle","CardDescription","vmcp_type","success","toastError","router","handleInstall","vmcpId","installUrl","handleCopyShareUrl","urlToCopy","isIconUrl","icon","getIconSource","getVMCPStats","serversCount","toolsCount","resourcesCount","promptsCount","publicVMCP","serverIndex","FaviconIcon","Copy"],"mappings":"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"}