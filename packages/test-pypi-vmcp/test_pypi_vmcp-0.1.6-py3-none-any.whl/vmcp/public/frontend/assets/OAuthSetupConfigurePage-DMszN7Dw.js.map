{"version":3,"file":"OAuthSetupConfigurePage-DMszN7Dw.js","sources":["../../src/pages/OAuthSetupConfigurePage.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useRouter } from '@/hooks/useRouter';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Container, \n  Server, \n  Zap, \n  Download, \n  Loader2, \n  Link as LinkIcon,\n  Lock,\n  AlertTriangle,\n  CheckCircle,\n  ArrowLeft,\n  MessageSquare,\n  Info\n} from 'lucide-react';\nimport VMCPDetailsDisplay from '@/components/vmcp/VMCPDetailsDisplay';\nimport { useToast } from '@/hooks/use-toast';\nimport { newApi } from '@/lib/new-api';\nimport posthog from 'posthog-js';\n\ninterface VMCPData {\n  id: string;\n  name: string;\n  description?: string;\n  vmcp_config?: {\n    selected_servers?: any[];\n    selected_tools?: Record<string, string[]>;\n    selected_resources?: Record<string, string[]>;\n    selected_prompts?: Record<string, string[]>;\n  };\n  total_tools?: number;\n  total_resources?: number;\n  total_prompts?: number;\n  environment_variables?: any[];\n}\n\nexport default function VMCPOAuthSetupConfigurePage() {\n  const router = useRouter();\n  const params = useParams();\n  const [searchParams] = useSearchParams();\n  const { success, error: toastError } = useToast();\n  \n  const vmcpName = params.vmcp_name as string;\n  const vmcpUsername = searchParams.get('vmcp_username');\n  const authCode = searchParams.get('code');\n  const state = searchParams.get('state');\n  const redirectUrl = searchParams.get('redirect_url');\n  const userId = searchParams.get('user_id');\n  const vmcpType = searchParams.get('vmcp_type');\n  const errorMessage = searchParams.get('error');\n  \n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [vmcpData, setVmcpData] = useState<VMCPData | null>(null);\n\n  // Load VMCP data\n  useEffect(() => {\n    loadVMCPData();\n  }, []);\n\n  const loadVMCPData = async () => {\n    try {\n      setLoading(true);\n      console.log('Loading VMCP data for:', vmcpName, vmcpUsername, userId, errorMessage);\n      // If there's an error message, don't attempt to load VMCP data\n      if (errorMessage) {\n        setLoading(false);\n        return;\n      }\n\n      // Check if we have a fetch_vmcp_config_from parameter\n      const fetchConfigFrom = searchParams.get('fetch_vmcp_config_from');\n\n      if (fetchConfigFrom) {\n        // Use the new endpoint to fetch VMCP configuration\n        const response = await fetch(fetchConfigFrom, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            original_state: state,\n            vmcp_name: vmcpName,\n            vmcp_username: vmcpUsername,\n            user_id: userId,\n          }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setVmcpData(data.vmcp_config);\n        } else {\n          throw new Error('Failed to fetch VMCP configuration');\n        }\n      } else {\n        // Fallback to the original API call\n        const response = await newApi.getVMCPConfiguration(vmcpName, {\n          code: authCode,\n          state: state,\n          redirect_url: redirectUrl,\n          user_id: userId,\n          vmcp_type: vmcpType,\n        });\n\n        if (response.success) {\n          setVmcpData(response.data);\n        } else {\n          toastError('Failed to load VMCP data');\n        }\n      }\n    } catch (error) {\n      console.error('Error loading VMCP data:', error);\n      toastError('Error loading VMCP data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCompleteOAuth = async () => {\n    try {\n      posthog.capture('oauth_setup_completed', {\n        vmcp_name: vmcpName,\n        vmcp_type: vmcpType,\n        has_redirect_url: !!redirectUrl,\n      });\n      setSaving(true);\n      \n      console.log('Saving VMCP Configuration');\n      const response = await newApi.saveVMCPConfiguration(vmcpName, {\n        vmcp_config: vmcpData,\n        code: authCode,\n        state: state,\n        user_id: userId,\n        vmcp_type: vmcpType,\n      });\n\n      console.log('VMCP Configuration saved');\n\n      // Simple OAuth completion - just redirect with the auth code\n      if (redirectUrl) {\n        console.log('Redirecting to:', redirectUrl);\n        const separator = redirectUrl.includes('?') ? '&' : '?';\n        // const finalUrl = redirectUrl + separator + 'code=' + authCode + (state ? '&state=' + state : '');\n        const finalUrl = redirectUrl + (state ? '&state=' + state : '');\n        window.location.href = finalUrl;\n      } else {\n        router.push(`/oauth_setup/${vmcpName}/callback?code=${authCode}&state=${state}&configured=true`);\n      }\n    } catch (error) {\n      console.error('Error completing OAuth:', error);\n      toastError('Error completing OAuth flow');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleReturnToClient = () => {\n    posthog.capture('oauth_setup_error_return_to_client', {\n      vmcp_name: vmcpName,\n      error_message: errorMessage,\n    });\n    if (redirectUrl) {\n      const separator = redirectUrl.includes('?') ? '&' : '?';\n      const finalUrl = redirectUrl + separator + 'error=' + encodeURIComponent(errorMessage || 'OAuth setup failed');\n      console.log('Returning to client:', finalUrl);\n      window.location.href = finalUrl;\n    } else {\n      router.push('/vmcp');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-background text-foreground flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"h-8 w-8 animate-spin rounded-full border-2 border-primary border-t-transparent mx-auto mb-4\"></div>\n          <p className=\"text-muted-foreground\">Loading OAuth configuration...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error message if present\n  if (errorMessage) {\n    return (\n      <div className=\"min-h-screen bg-background text-foreground flex items-center justify-center\">\n        <div className=\"text-center max-w-md\">\n          <div className=\"h-12 w-12 rounded-xl bg-destructive/20 flex items-center justify-center mx-auto mb-4\">\n            <AlertTriangle className=\"h-6 w-6 text-destructive\" />\n          </div>\n          <h1 className=\"text-2xl font-bold mb-4\">OAuth Setup Error</h1>\n          <div className=\"p-4 bg-destructive/10 border border-destructive/20 rounded-lg mb-6\">\n            <p className=\"text-destructive text-sm\">{errorMessage}</p>\n          </div>\n          <div className=\"flex gap-3 justify-center\">\n            {redirectUrl && (\n              <Button\n                onClick={handleReturnToClient}\n                variant=\"destructive\"\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Return to Client\n              </Button>\n            )}\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!vmcpData) {\n    return (\n      <div className=\"min-h-screen bg-background text-foreground flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-destructive\">OAuth configuration not found</p>\n          <Button\n            onClick={() => router.push('/vmcp')}\n            className=\"mt-4\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to VMCP\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"max-w-4xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <div className=\"h-12 w-12 rounded-xl bg-primary/20 flex items-center justify-center\">\n              <Container className=\"h-6 w-6 text-primary\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold tracking-tight\">\n                Complete OAuth Setup\n              </h1>\n              <p className=\"text-muted-foreground\">\n                OAuth authentication for {vmcpData.name}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* VMCP Information Card */}\n        <Card className=\"mb-6\">\n          <CardHeader className=\"pb-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <CardTitle className=\"text-xl\">{vmcpData.name}</CardTitle>\n                <CardDescription className=\"text-sm mt-1\">\n                  {vmcpData.description || 'No description available'}\n                </CardDescription>\n              </div>\n              <Badge variant=\"default\" className=\"text-xs px-2 py-1\">\n                {vmcpType === 'wellknown' ? 'Well-Known' : 'Public'}\n              </Badge>\n            </div>\n          </CardHeader>\n          <CardContent className=\"pt-0\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {/* Servers */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <Server className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.vmcp_config?.selected_servers?.length || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">MCP Servers</div>\n              </div>\n\n              {/* Tools */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <Zap className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.total_tools || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">Tools</div>\n              </div>\n\n              {/* Resources */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <LinkIcon className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.total_resources || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">Resources</div>\n              </div>\n\n              {/* Prompts */}\n              <div className=\"text-center p-4 rounded-lg bg-muted/30\">\n                <MessageSquare className=\"h-6 w-6 mx-auto mb-2 text-primary\" />\n                <div className=\"text-xl font-bold\">{vmcpData.total_prompts || 0}</div>\n                <div className=\"text-xs text-muted-foreground\">Prompts</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Detailed Information */}\n        <div className=\"mb-8\">\n          <VMCPDetailsDisplay \n            vmcpData={vmcpData}\n            vmcpType={vmcpType || 'public'}\n            isRemoteVMCP={false}\n            showExpandableLists={false}\n          />\n        </div>\n\n        {/* OAuth Notice */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Info className=\"h-5 w-5 text-primary\" />\n              OAuth Setup Details\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <p className=\"text-sm text-muted-foreground\">\n                By completing the OAuth flow, you will:\n              </p>\n              <ul className=\"text-sm text-muted-foreground space-y-1 pl-4\">\n                <li>• Authenticate with the VMCP service</li>\n                <li>• Grant necessary permissions for the VMCP to function</li>\n                <li>• Complete the setup process</li>\n              </ul>\n              <p className=\"text-sm text-muted-foreground\">\n                You can configure server authentication and environment variables after OAuth completion.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Complete OAuth Button */}\n        <div className=\"flex justify-center\">\n          <Button\n            onClick={handleCompleteOAuth}\n            disabled={saving}\n            size=\"lg\"\n            className=\"px-8 py-3\"\n          >\n            {saving ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Completing OAuth...\n              </>\n            ) : (\n              <>\n                <CheckCircle className=\"h-4 w-4 mr-2\" />\n                Complete OAuth Setup\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["VMCPOAuthSetupConfigurePage","router","useRouter","params","useParams","searchParams","useSearchParams","toastError","useToast","vmcpName","vmcpUsername","authCode","state","redirectUrl","userId","vmcpType","errorMessage","loading","setLoading","useState","saving","setSaving","vmcpData","setVmcpData","useEffect","loadVMCPData","fetchConfigFrom","response","data","newApi","error","handleCompleteOAuth","posthog","separator","finalUrl","handleReturnToClient","jsxs","jsx","AlertTriangle","Button","ArrowLeft","Container","Card","CardHeader","CardTitle","CardDescription","Badge","CardContent","Server","Zap","LinkIcon","MessageSquare","VMCPDetailsDisplay","Info","Fragment","Loader2","CheckCircle"],"mappings":"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"}