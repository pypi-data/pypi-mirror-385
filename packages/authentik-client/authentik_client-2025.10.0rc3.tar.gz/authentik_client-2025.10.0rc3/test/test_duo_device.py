# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2025.10.0-rc3
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_client.models.duo_device import DuoDevice

class TestDuoDevice(unittest.TestCase):
    """DuoDevice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DuoDevice:
        """Test DuoDevice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DuoDevice`
        """
        model = DuoDevice()
        if include_optional:
            return DuoDevice(
                pk = 56,
                name = '',
                user = authentik_client.models.partial_user.PartialUser(
                    pk = 56, 
                    username = 'A', 
                    name = '', 
                    is_active = True, 
                    last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    email = '', 
                    attributes = {
                        'key' : null
                        }, 
                    uid = '', )
            )
        else:
            return DuoDevice(
                pk = 56,
                name = '',
                user = authentik_client.models.partial_user.PartialUser(
                    pk = 56, 
                    username = 'A', 
                    name = '', 
                    is_active = True, 
                    last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    email = '', 
                    attributes = {
                        'key' : null
                        }, 
                    uid = '', ),
        )
        """

    def testDuoDevice(self):
        """Test DuoDevice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
