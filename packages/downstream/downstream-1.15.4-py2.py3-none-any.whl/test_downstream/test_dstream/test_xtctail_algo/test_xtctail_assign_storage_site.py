import functools
import itertools as it
from random import randrange as rand
import typing

import pytest

from downstream.dstream import xtctail_algo as algo


def validate_xtctail_site_selection(
    fn: typing.Callable,
) -> typing.Callable:
    """Decorator to validate pre- and post-conditions on site selection."""

    @functools.wraps(fn)
    def wrapper(S: int, T: int) -> typing.Optional[int]:
        assert S.bit_count() == 1  # Assert S is a power of two
        assert 0 <= T  # Assert T is non-negative
        res = fn(S, T)
        assert res is None or 0 <= res < S  # Assert valid output
        return res

    return wrapper


site_selection = validate_xtctail_site_selection(algo.assign_storage_site)


def test_xtctail_site_selection8():
    # fmt: off
    actual = (site_selection(8, T) for T in it.count())
    expected = [
        7, 6, 5, 2, 4, 1, 0, 3,  # T 0-7 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 8-15 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 16-23 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 24-31 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 32-39 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 40-47 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 48-55 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 6,  # T 56-63 --- hv 0,1,0,2,0,1,0,6
        0, 1, 0, 2, 0, 1, 0, 3,  # T 64-71 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 72-79 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 80-87 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 88-95 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 96-103 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 104-111 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 112-119 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 7,  # T 120-127 --- hv 0,1,0,2,0,1,0,7
        0, 1, 0, 2, 0, 1, 0, 3,  # T 128-135 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 136-143 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 144-151 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 152-159 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 160-167 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 168-175 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 176-183 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 6,  # T 184-191 --- hv 0,1,0,2,0,1,0,6
        0, 1, 0, 2, 0, 1, 0, 3,  # T 192-199 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 200-207 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 208-215 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 216-223 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 224-231 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 232-239 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 240-247 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, None,  # T 248-255 --- hv 0,1,0,2,0,1,0,7
        0, 1, 0, 2, 0, 1, 0, 3,  # T 256-263 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 264-271 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 272-279 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 280-287 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 288-295 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 296-303 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 304-311 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 6,  # T 312-319 --- hv 0,1,0,2,0,1,0,6
        0, 1, 0, 2, 0, 1, 0, 3,  # T 320-327 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 328-335 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 336-343 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 344-351 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 352-359 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 360-367 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 368-375 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 7,  # T 376-383 --- hv 0,1,0,2,0,1,0,7
        0, 1, 0, 2, 0, 1, 0, 3,  # T 384-391 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 392-399 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 400-407 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 408-415 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 416-423 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 424-431 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 432-439 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 6,  # T 440-447 --- hv 0,1,0,2,0,1,0,7
        0, 1, 0, 2, 0, 1, 0, 3,  # T 448-455 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 456-463 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 464-471 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 472-479 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, 2, 0, 1, 0, 3,  # T 480-487 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 4,  # T 488-495 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 496-503 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 2,  # T 504-511 --- hv 0,1,0,2,0,1,0,7
        0, 1, 0, None, 0, 1, 0, 3,  # T 512-519 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 520-527 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 528-535 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 5,  # T 536-543 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, None, 0, 1, 0, 3,  # T 544-551 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 552-559 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 560-567 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 6,  # T 568-575 --- hv 0,1,0,2,0,1,0,6
        0, 1, 0, None, 0, 1, 0, 3,  # T 576-583 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 584-591 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 592-599 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 5,  # T 600-607 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, None, 0, 1, 0, 3,  # T 608-615 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 616-623 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 624-631 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 7,  # T 632-639 --- hv 0,1,0,2,0,1,0,7
        0, 1, 0, None, 0, 1, 0, 3,  # T 640-647 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 648-655 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 656-663 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 5,  # T 664-671 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, None, 0, 1, 0, 3,  # T 672-679 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 680-687 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 688-695 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 6,  # T 696-703 --- hv 0,1,0,2,0,1,0,6
        0, 1, 0, None, 0, 1, 0, 3,  # T 704-711 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 712-719 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 720-727 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 5,  # T 728-735 --- hv 0,1,0,2,0,1,0,5
        0, 1, 0, None, 0, 1, 0, 3,  # T 736-743 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 744-751 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 752-759 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, None,  # T 760-767 --- hv 0,1,0,2,0,1,0,8
        0, 1, 0, None, 0, 1, 0, 3,  # T 768-775 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 4,  # T 776-783 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, None, 0, 1, 0, 3,  # T 784-791 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, None, 0, 1, 0, 5,  # T 792-799 --- hv 0,1,0,2,0,1,0,5
    ]
    assert all(x == y for x, y in zip(actual, expected))


def test_xtctail_site_selection16():
    # fmt: off
    actual = (site_selection(16, T) for T in it.count())
    expected = [
        15, 14, 13, 12, 11, 10, 9, 3,  # T 0-7 --- hv 0,1,0,2,0,1,0,3
        8, 7, 6, 2, 5, 1, 0, 4,  # T 8-15 --- hv 0,1,0,2,0,1,0,4
        0, 1, 0, 2, 0, 1, 0, 3,  # T 16-23 --- hv 0,1,0,2,0,1,0,3
        0, 1, 0, 2, 0, 1, 0, 5,  # T 24-31 --- hv 0,1,0,2,0,1,0,5
    ]
    assert all(x == y for x, y in zip(actual, expected))
    assert site_selection(16, 2 ** 16 - 1) is None
    assert site_selection(16, 2 ** 16) == 0
    assert site_selection(16, 2 ** 17 - 1) == 2
    assert site_selection(16, 2 ** 17) == 0
    assert site_selection(16, 2 ** 17 + 1) == 1
    assert site_selection(16, 2 ** 17 + 2) == 0
    assert site_selection(16, 2 ** 17 + 3) is None


def test_xtctail_site_selection_fuzz():
    testS = (1 << s for s in range(3, 33))
    testT = it.chain(range(10**5), (rand(2**128) for _ in range(10**5)))
    for S, T in it.product(testS, testT):
        site_selection(S, T)  # Validated via wrapper


@pytest.mark.parametrize("S", [1 << s for s in range(3, 21)])
def test_xtctail_site_selection_epoch0(S: int):
    actual = {site_selection(S, T) for T in range(S)}
    expected = set(range(S))
    assert actual == expected
