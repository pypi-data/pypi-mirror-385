# coding: utf-8

"""
    Lance Namespace Specification

    This OpenAPI specification is a part of the Lance namespace specification. It contains 2 parts:  The `components/schemas`, `components/responses`, `components/examples`, `tags` sections define the request and response shape for each operation in a Lance Namespace across all implementations. See https://lancedb.github.io/lance-namespace/spec/operations for more details.  The `servers`, `security`, `paths`, `components/parameters` sections are for the  Lance REST Namespace implementation, which defines a complete REST server that can work with Lance datasets. See https://lancedb.github.io/lance-namespace/spec/impls/rest for more details. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lance_namespace_urllib3_client.models.json_arrow_field import JsonArrowField

class TestJsonArrowField(unittest.TestCase):
    """JsonArrowField unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonArrowField:
        """Test JsonArrowField
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonArrowField`
        """
        model = JsonArrowField()
        if include_optional:
            return JsonArrowField(
                metadata = {
                    'key' : ''
                    },
                name = '',
                nullable = True,
                type = lance_namespace_urllib3_client.models.json_arrow_data_type.JsonArrowDataType(
                    fields = [
                        lance_namespace_urllib3_client.models.json_arrow_field.JsonArrowField(
                            metadata = {
                                'key' : ''
                                }, 
                            name = '', 
                            nullable = True, 
                            type = lance_namespace_urllib3_client.models.json_arrow_data_type.JsonArrowDataType(
                                length = 0, 
                                type = '', ), )
                        ], 
                    length = 0, 
                    type = '', )
            )
        else:
            return JsonArrowField(
                name = '',
                nullable = True,
                type = lance_namespace_urllib3_client.models.json_arrow_data_type.JsonArrowDataType(
                    fields = [
                        lance_namespace_urllib3_client.models.json_arrow_field.JsonArrowField(
                            metadata = {
                                'key' : ''
                                }, 
                            name = '', 
                            nullable = True, 
                            type = lance_namespace_urllib3_client.models.json_arrow_data_type.JsonArrowDataType(
                                length = 0, 
                                type = '', ), )
                        ], 
                    length = 0, 
                    type = '', ),
        )
        """

    def testJsonArrowField(self):
        """Test JsonArrowField"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
