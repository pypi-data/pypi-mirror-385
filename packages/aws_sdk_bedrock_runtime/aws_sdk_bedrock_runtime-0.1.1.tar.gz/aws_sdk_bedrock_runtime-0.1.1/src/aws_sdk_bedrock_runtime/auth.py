# Code generated by smithy-python-codegen DO NOT EDIT.

from typing import Any

from smithy_core.auth import AuthOption, AuthParams
from smithy_core.interfaces.auth import AuthOption as AuthOptionProtocol
from smithy_core.shapes import ShapeID


class HTTPAuthSchemeResolver:
    def resolve_auth_scheme(
        self, auth_parameters: AuthParams[Any, Any]
    ) -> list[AuthOptionProtocol]:
        auth_options: list[AuthOptionProtocol] = []

        if (option := _generate_sigv4_option(auth_parameters)) is not None:
            auth_options.append(option)

        return auth_options


def _generate_sigv4_option(
    auth_params: AuthParams[Any, Any],
) -> AuthOptionProtocol | None:
    return AuthOption(
        scheme_id=ShapeID("aws.auth#sigv4"),
        identity_properties={},  # type: ignore
        signer_properties={},  # type: ignore
    )
