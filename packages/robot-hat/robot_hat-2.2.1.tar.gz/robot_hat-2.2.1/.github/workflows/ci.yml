name: CI & Publish

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.11
            3.12
            3.13

      - name: Install Node.js (needed for Pyright)
        uses: actions/setup-node@v4
        with:
          node-version: current

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          pip install pytest pytest-cov

      - name: Install Pyright
        run: npm install -g pyright

      - name: Run Pyright static type checker
        run: pyright ./robot_hat ./tests/ setup.py

      - name: Lint code
        run: |
          black --check .
          isort -v --profile black --check-only -s version.py .

      - name: Run tests with unittest and measure coverage
        run: |
          coverage run -m unittest discover
          coverage xml
          coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools

      - name: Build the package
        run: python -m build

      - name: Verify dist directory
        run: ls -al dist/

      - name: Upload the dist directory as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - build
      - lint-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Download the dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Verify contents of dist directory after artifact download
        run: |
          echo "Listing contents of the workspace:"
          ls -al

      - name: Organize artifact files into dist/
        run: |
          mkdir -p dist  # Create the dist directory if it doesn't exist
          echo "Moving downloaded files to dist/..."
          mv robot_hat-*.whl robot_hat-*.tar.gz dist/  # Move files matching artifact content into dist/
          echo "Contents of workspace after organizing:"
          ls -al
          echo "Contents of 'dist/' after organizing:"
          ls -al dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*