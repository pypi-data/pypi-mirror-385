
[project]
name = "masster"
version = "0.5.28"
description = "Mass spectrometry data analysis package"
authors = [
    { name = "Zamboni Lab" }
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.11"
keywords = ["mass spectrometry", "metabolomics", "lc-ms", "chromatography"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry"
]
urls.homepage = "https://github.com/zamboni-lab/masster"
urls.repository = "https://github.com/zamboni-lab/masster"
urls.documentation = "https://github.com/zamboni-lab/masster#readme"
urls."Third-Party Licenses" = "https://github.com/zamboni-lab/masster/blob/main/THIRD_PARTY_NOTICES.md"
dependencies = [
    "alpharaw>=0.4.8",
    "bokeh>=3.7.3",
    "datashader>=0.18.1",
    "holoviews>=1.21.0",
    "h5py>=3.14.0",
    "hvplot>=0.11.3",
    "loguru>=0.7.3",
    "numpy>=2.0.0",
    "matplotlib>=3.8.0",
    "pandas>=2.2.0",
    "panel>=1.7.0",
    "polars>=1.0.0",
    "pyopenms>=3.3.0",
    "pythonnet>=3.0.0",
    "scipy>=1.12.0",
    "tqdm>=4.65.0",
    "openpyxl>=3.1.5",
    "cmap>=0.6.2",
    "scikit-learn>=1.7.1",
    "umap-learn>=0.5.9.post2",
    "hdbscan>=0.8.40",
    "webdriver-manager>=4.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
    "safety>=2.0.0",
    "bandit>=1.7.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinxcontrib-napoleon>=0.7"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0"
]

[project.scripts]
masster-version = "masster._version:main"

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

# Hatchling configuration - include additional files in distribution
[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/LICENSE",
    "/README.md",
    "/THIRD_PARTY_NOTICES.md",
    "/pyproject.toml",
]

[tool.hatch.build.targets.wheel]
packages = ["src/masster"]
include = [
    "/THIRD_PARTY_NOTICES.md",
]
exclude = [
    "/tests",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=masster",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["masster"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "masster/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    "venv",
]

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
