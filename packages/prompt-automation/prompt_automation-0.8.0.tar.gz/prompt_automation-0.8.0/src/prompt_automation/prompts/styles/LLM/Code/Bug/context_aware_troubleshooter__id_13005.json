{
  "schema": 1,
  "id": 13005,
  "title": "Context-Aware Troubleshooter",
  "style": "LLM",
  "placeholders": [
    {
      "name": "issue",
      "label": "Problem description, logs, or symptoms (include anything known about environment or recent changes)",
      "multiline": true,
      "required": true,
      "default": ""
    }
  ],
  "template": [
    "## Objective",
    "Transform {{issue}} into a structured investigation plan, concrete fixes, and safeguards that prevent recurrence.",
    "",
    "## Context",
    "",
    "## Inputs",
    "- issue: {{issue}}",
    "",
    "## Assumptions",
    "Assumption: Proceed with explicit assumptions when information is missing.",
    "Assumption: No external browsing; rely on provided artifacts only.",
    "",
    "## Constraints",
    "- Ask at most one clarifying question (≤30 words) only if a single missing fact truly blocks progress.",
    "- Otherwise, continue and log assumptions.",
    "- Keep language concise; technical and actionable.",
    "",
    "## Instructions",
    "- Summarize the situation (symptoms, environment, recent changes) and tag what is unknown.",
    "- Build a Known vs Unknown matrix: runtime, platform, dependencies, configs, data, deployments, user impact.",
    "- Generate layered hypotheses (infra, platform, app, data, external services) tied to signals from {{issue}}.",
    "- For each hypothesis, list decisive diagnostics/repro steps and expected signals.",
    "- Prioritize actions (P0 immediate, P1 next, P2 later) with owners/roles where implied and rollback notes.",
    "- Recommend prevention (monitoring, alerts, tests, docs) mapped to likely root causes.",
    "",
    "## Execution Flow",
    "1. Situation summary",
    "2. Known vs Unknown matrix",
    "3. Hypotheses with evidence",
    "4. Diagnostics plan",
    "5. Action plan with priorities",
    "6. Prevention & resilience",
    "",
    "## Output Format",
    "1. Situation Summary — 2–3 sentences on the issue, assumptions, and whether a clarifying question was asked.",
    "2. Context Checklist — Known vs Unknown bullets for environment/configs/data/dependencies/changes.",
    "3. Hypotheses & Tests — Table: Hypothesis | Evidence | Diagnostic step | Proposed fix | Confidence.",
    "4. Action Plan — P0/P1/P2 ordered list with tasks, owner/role (or TBD), expected outcome.",
    "5. Prevention & Observability — Bulleted safeguards tied to hypotheses.",
    "6. Outstanding Questions — Items to confirm or supply.",
    "",
    "## Quality Checks",
    "- At most one clarifying question; assumptions logged.",
    "- Known vs Unknown structured and complete.",
    "- Hypotheses map to decisive diagnostics and fixes.",
    "- Action plan prioritized with clear outcomes and owners/TBD.",
    "- Prevention guidance is actionable and tied to causes.",
    "",
    "## Eval Stubs",
    "- pass_if(clarifying_questions_used <= 1)",
    "- pass_if(has_known_unknowns == true)",
    "- pass_if(has_p0_tasks == true)",
    "",
    "## Self-Check",
    "If any Quality Check would fail, revise once before returning."
  ],
  "metadata": {
    "path": "LLM/context-aware-troubleshooter.json",
    "tags": [
      "llm",
      "code",
      "bug",
      "troubleshooting",
      "context"
    ],
    "version": 1.4,
    "render": "markdown",
    "share_this_file_openly": true,
    "last_edited": "2025-09-24T00:00:00Z"
  },
  "changelog": [
    "2025-09-24: Reordered sections per spec; added explicit Eval Stubs and Self-Check.",
    "2025-09-24: Set style to 'LLM' and updated metadata.path to 'LLM/context-aware-troubleshooter.json'.",
    "2025-09-24: Bumped version from 1.3 to 1.4; added ISO8601 last_edited; included globals in Context.",
    "2025-09-24: Maintained single placeholder and referenced it in Inputs and Instructions."
  ]
}
