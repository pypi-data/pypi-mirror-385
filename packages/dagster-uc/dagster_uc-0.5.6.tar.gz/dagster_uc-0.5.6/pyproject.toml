[project]
name = "dagster-uc"
version = "0.5.6"
authors = [
    {name = "Stefan Verbruggen"},
    {name = "Ion Koutsouris"},
    ]
description = "CLI for managing user code deployments of a Dagster instance that was deployed on kubernetes."
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
dependencies = [
    "kr8s>=0.20.1,<1.0",
    "typer>=0.15.1",
    "tomli",
    "pyyaml",
    "pytz",
    "pydantic>=2",
    "packaging>=25.0",
]

[tool.uv]
dev-dependencies = [
    "ruff",
    "pyright",
    "pytest",
    "pip",
    "build",
    "typos>=1.31.1",
]

[project.urls]
Homepage = "https://github.com/ASML-Labs/dagster-uc"
Issues = "https://github.com/ASML-Labs/dagster-uc/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
dagster-uc = "dagster_uc.manage_user_code_deployments:app"


[tool.pyright]

typeCheckingMode = 'basic'
reportUnknownMemberType   = false
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
reportMissingImports = false
pythonVersion =  "3.10"

[tool.ruff]
force-exclude = true
lint.select = [
    "E",
    "F",
    "W",
    "N",
    "D",
    "UP",
    "ANN",
    "A",
    "COM",
    "C4",
    "ICN",
    "PT",
    "SIM",
    "ARG",
    "TD",
    "ERA",
    "NPY",
    "I",
]

lint.ignore = [
    "D100",
    "D104",
    "D107",
    "D203",
    "D205",
    "D206",
    "D213",
    "D400",
    "D401",
    "D413",
    "D415",
    "E501",
    "E712",
    "PT011",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN204",
    "C416",
    "TD003",
]


# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    ".ipynb",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
# Same as Black.
line-length = 100

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.per-file-ignores]
"dagster_uc_tests/*.py" = ["D100", "D103", "B018", "ANN001"]


[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"
