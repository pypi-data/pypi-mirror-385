# -------------------------- Project Specification -------------------------- #
[project]
name = "bandai-lib"
version = "0.0.5"
description = "ðŸ•¹ bandai: bandits for ai"
readme = "README.md"
license = {text = "MIT"}
authors = [
	{name = "Arkadiy Vladimirov", email = "ark.vladimirov@outlook.com"},
]
requires-python = ">=3.10"
dependencies = [
	"jaxtyping",	# typed tensors
	"numpy",		# dep for jt an torch
	"torch",		# based
]

[project.optional-dependencies]
dev = [
	"basedpyright",
	"pytest",
	"ruff",
]

# ------------------------------ Entry Point -------------------------------- #
[project.scripts]
bandai = "bandai.main:main"

# --------------------------- Build Specification --------------------------- #
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

## --------------------------- Lint & Format ------------------------------- ##
[tool.ruff]
src = ["asai", "tests"]
line-length = 100

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint]
# check out comprehensive rule description in ruff docs
select = [
	"E", # Pycodestyle Errors (E)
	"W", # Pycodestyle Warnings (W)
	"F", # Pyflakes (F)
	"I", # isort (I) - import sorting
	"N", # PEP 8 Naming (N)
	"UP", # Pyupgrade (UP) - enforce modern Python syntax
	"C4", 	# Flake8 Comprehensions (C4) - optimize list/dict/set comprehensions
	"B", 	# Flake8 Bugbear (B) - advanced bug detection
	"A", 	# Flake8 Builtins (A) - shadowing of Python builtins
	"COM", 	# Flake8 Commas (COM)
	"ISC", 	# Flake8 Implicit String Concatenation (ISC)
	"ICN", 	# Flake8 Import Conventions (ICN)
	"ASYNC",# Flake8 Async (ASYNC) - asyncio bug detection
	"RET", 	# Flake8 Return (RET) - consistent return statements
	"SLF", 	# Flake8 Self (SLF) - private member access restricted
]
ignore = [
	"F722", # "syntax error in forward annotation" - messes with jaxtyping
]

[tool.ruff.lint.isort]
known-first-party = ["bandai"]
section-order = [
	"future",
	"standard-library",
	"third-party",
	"first-party",
	"local-folder"
]

## ------------------------------ Typing ----------------------------------- ##
[tool.pyright]
include = ["src", "tests"]
exclude = ["build", "**/__pycache__", ".venv", "setup.py"]
pythonVersion = "3.10"
typeCheckingMode = "strict"
reportMissingImports = "error"
reportMissingTypeStubs = "warning"
