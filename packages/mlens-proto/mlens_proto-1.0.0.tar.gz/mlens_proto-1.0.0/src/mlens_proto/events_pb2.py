# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: mlens_proto/events.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'mlens_proto/events.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from mlens_proto import common_pb2 as mlens__proto_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18mlens_proto/events.proto\x12\x08mlens.v1\x1a\x18mlens_proto/common.proto\"\xaf\x01\n\x08RunEvent\x12\x15\n\rexperiment_id\x18\x01 \x01(\t\x12\x0e\n\x06run_id\x18\x02 \x01(\t\x12\x0b\n\x03seq\x18\x03 \x01(\x04\x12\x11\n\ttimestamp\x18\x04 \x01(\x03\x12\'\n\tparam_set\x18\n \x01(\x0b\x32\x12.mlens.v1.ParamSetH\x00\x12(\n\x06metric\x18\x0b \x01(\x0b\x32\x16.mlens.v1.MetricUpdateH\x00\x42\t\n\x07payload\"*\n\x08ParamSet\x12\x1e\n\x05param\x18\x01 \x01(\x0b\x32\x0f.mlens.v1.Param\"I\n\x0cMetricUpdate\x12\x13\n\x0bmetric_name\x18\x01 \x01(\t\x12$\n\x05point\x18\x02 \x01(\x0b\x32\x15.mlens.v1.MetricPointb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'mlens_proto.events_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_RUNEVENT']._serialized_start=65
  _globals['_RUNEVENT']._serialized_end=240
  _globals['_PARAMSET']._serialized_start=242
  _globals['_PARAMSET']._serialized_end=284
  _globals['_METRICUPDATE']._serialized_start=286
  _globals['_METRICUPDATE']._serialized_end=359
# @@protoc_insertion_point(module_scope)
