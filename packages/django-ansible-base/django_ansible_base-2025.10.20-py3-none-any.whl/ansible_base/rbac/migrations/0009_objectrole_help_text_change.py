# Generated by Django 5.2.7 on 2025-10-06 13:50
#
# This migration updates the help_text for the `users` and `teams` ManyToManyField
# on the ObjectRole model to add trailing periods for consistency.
#
# WHY DJANGO 5 CREATES THIS BUT DJANGO 4 DOES NOT:
#
# Django 4's migration detector has a bug/limitation where it does not properly detect
# help_text changes on ManyToManyField instances that use custom `through` tables.
# The help_text was updated in the model code (ansible_base/rbac/models/role.py:518, 525)
# to add trailing periods, but Django 4's makemigrations did not detect this change.
#
# Django 5 improved its field state serialization and comparison logic for ManyToManyFields,
# particularly for fields with through tables, and now properly detects these help_text changes.
#
# This is a harmless migration that only updates field metadata (help_text) and does not
# modify the database schema or affect data.

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dab_rbac', '0008_remote_permissions_cleanup'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.ANSIBLE_BASE_TEAM_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='objectrole',
            name='teams',
            field=models.ManyToManyField(help_text='Teams or groups who have access to the permissions defined by this object role.', related_name='has_roles', through='dab_rbac.RoleTeamAssignment', through_fields=('object_role', 'team'), to=settings.ANSIBLE_BASE_TEAM_MODEL),
        ),
        migrations.AlterField(
            model_name='objectrole',
            name='users',
            field=models.ManyToManyField(help_text='Users who have access to the permissions defined by this object role.', related_name='has_roles', through='dab_rbac.RoleUserAssignment', through_fields=('object_role', 'user'), to=settings.AUTH_USER_MODEL),
        ),
    ]
