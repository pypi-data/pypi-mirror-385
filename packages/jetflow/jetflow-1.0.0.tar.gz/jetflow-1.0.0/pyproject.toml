[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jetflow"
version = "1.0.0"
description = "Lightweight, production-ready framework for building agentic workflows with LLMs"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Lucas Astorian", email = "lucas@intellifin.ai"}
]
keywords = ["llm", "agents", "ai", "langchain", "openai", "anthropic", "gemini"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic>=2.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
openai = ["openai>=1.0.0", "jiter>=0.5.0", "tenacity>=8.0.0"]
anthropic = ["anthropic>=0.18.0", "jiter>=0.5.0", "tenacity>=8.0.0"]
all = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "jiter>=0.5.0",
    "tenacity>=8.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/lucasastorian/jetflow"
Repository = "https://github.com/lucasastorian/jetflow"
Issues = "https://github.com/lucasastorian/jetflow/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["jetflow*"]

[tool.setuptools.package-data]
jetflow = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
