[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "malti-telemetry"
version = "1.0.4"
description = "A Python library for collecting and sending telemetry data to Malti server"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
maintainers = [
    {name = "smuzy", email = "malti@muzy.dev"}
]
keywords = ["telemetry", "monitoring", "fastapi", "analytics", "api", "self-hosted", "starlette"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: System :: Monitoring",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "httpx>=0.24.0",
    "starlette>=0.40.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
    "fastapi>=0.100.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0"
]

[project.urls]
Homepage = "https://github.com/muzy/malti-telemetry/"
Repository = "https://github.com/muzy/malti-telemetry/"
Issues = "https://github.com/muzy/malti-telemetry/issues"
Changelog = "https://github.com/muzy/malti-telemetry/releases"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["malti_telemetry*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["malti_telemetry"]
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "httpx.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["malti_telemetry"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
