Metadata-Version: 2.4
Name: aicodec
Version: 2.2.0
Summary: A lightweight communication layer for developers to interact with LLMs.
Author: Steffen Krakau
License: MIT License
        
        Copyright (c) 2025 Steffen Krakau
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/Stevie1704/aicodec
Project-URL: Bug Tracker, https://github.com/Stevie1704/aicodec/issues
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Programming Language :: Python :: 3.15
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: jsonschema
Requires-Dist: pyperclip
Requires-Dist: pathspec
Requires-Dist: tiktoken
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-html; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: bandit; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: codespell; extra == "dev"
Requires-Dist: mkdocs; extra == "dev"
Requires-Dist: mkdocs-material; extra == "dev"
Requires-Dist: pyinstaller; extra == "dev"
Dynamic: license-file

# AI Codec

[![PyPI version](https://img.shields.io/pypi/v/aicodec)](https://pypi.org/project/aicodec/)
[![CI](https://github.com/Stevie1704/aicodec/actions/workflows/ci.yml/badge.svg)](https://github.com/Stevie1704/aicodec/actions/workflows/ci.yml)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

AI Codec is a lightweight, CLI-first tool that brings a structured, reviewable, and reversible workflow to applying LLM-generated code to your projects. Instead of chaotic copy-pasting from a chatbot, you get a formal, git-like review process for AI-driven changes.



---

## ðŸ“– Full Documentation

**For a complete guide, including installation options, a step-by-step tutorial, and the full command reference, please visit the official documentation website:**

### **[https://stevie1704.github.io/aicodec/](https://stevie1704.github.io/aicodec/)**

---

## âœ¨ Features

-   **Structured Interaction**: Enforces a simple JSON schema, turning raw LLM output into a structured set of changes.
-   **Safe Review Process**: The `aicodec apply` command launches a web UI with a git-like diffing experience so you can see exactly what will change *before* any files are touched.
-   **Developer in Control**: Selectively apply, reject, or even edit the LLM's suggestions live in the diff viewer.
-   **Atomic & Reversible Changes**: The `apply` and `revert` commands make applying LLM suggestions a safe transaction that you can undo with a single command.
-   **Flexible File Aggregation**: Gather relevant project files into a single context for the LLM with powerful inclusion/exclusion rules.
-   **Clipboard Integration**: Pipe your LLM's response directly from your clipboard into the review process.
