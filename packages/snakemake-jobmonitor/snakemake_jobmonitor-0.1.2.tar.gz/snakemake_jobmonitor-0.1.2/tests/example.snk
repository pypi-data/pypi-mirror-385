from snakemake_jobmonitor import JobMonitor, JobResult

inputFolder = 'example-data'
logFolder = 'example-log'
outputFolder = 'example-output'

allCases = ['1','2','3']

def doDecompose(colorInfile, redOutfile,greenOutfile,blueOutfile):
    # implement here:
    # Decompose the color image into red, green and blue components
    # and save as redOutfile, blueOutfile and greenOutfile
    redOutfile=greenOutfile=blueOutfile=colorInfile

def createReport(allRed,allBlue,allGreen, reportFile):
    # implement here:
    # Create report and save as reportFile
    with open(reportFile,'wt') as fp:
        fp.write(allRed)
        fp.write(allBlue)
        fp.write(allGreen)


rule decomposeSingle:
    input:
        color=inputFolder+'/case-{case}_RGB.png'
    log:
        logFolder+'/case-{case}_decompose.log'
    run:
        caseFolder = f'{outputFolder}/case-{wildcards.case}'
        with JobMonitor(log,'Decompose RGB into R,G,B',caseFolder) as job:
            doDecompose(
                input.color, 
                job.result('R.png'),job.result('G.png'),job.result('B.png')
            )


rule decomposeAll:
    input:
        [f'{logFolder}/case-{cs}_decompose.log' for cs in allCases]
    log:
        logFolder+'/decomposeAll.log'
    default_target:
        True
    run:
        with JobMonitor(log,'Decompose All',outputFolder) as job:
            R = [JobResult(f)('R.png') for f in input]
            G = [JobResult(f)('G.png') for f in input]
            B = [JobResult(f)('B.png') for f in input]
            createReport(R,G,B, job.result('report.txt') )
