[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lumecode"
version = "1.0.1"
description = "AI-powered developer CLI assistant - FREE, open-source, intelligent"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Lumecode Contributors", email = "support@lumecode.dev"}
]
keywords = ["ai", "cli", "developer-tools", "code-assistant", "llm", "groq", "openrouter", "code-review", "test-generation", "documentation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
]
dependencies = [
    "click>=8.1.0",
    "rich>=13.7.0",
    "httpx>=0.27.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.6.0",
    "prompt-toolkit>=3.0.0",
    "tiktoken>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-timeout>=2.2.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.92.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/anonymus-netizien/lumecode"
Documentation = "https://github.com/anonymus-netizien/lumecode#readme"
Repository = "https://github.com/anonymus-netizien/lumecode"
"Bug Tracker" = "https://github.com/anonymus-netizien/lumecode/issues"

[project.scripts]
lumecode = "lumecode.cli.main:cli"

[tool.setuptools]
packages = ["lumecode", "lumecode.cli", "lumecode.cli.commands", "lumecode.cli.core", "lumecode.cli.core.llm", "lumecode.cli.core.context", "lumecode.cli.core.prompts", "lumecode.cli.core.ui", "lumecode.cli.core.refactor", "lumecode.cli.core.review", "lumecode.backend", "lumecode.backend.config", "lumecode.backend.docs", "lumecode.backend.agents"]

[tool.setuptools.package-data]
lumecode = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["lumecode/cli/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --strict-markers --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.tox
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.coverage.run]
source = ["lumecode"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
]
