name: Windows Local Test

on:
  workflow_dispatch:

jobs:
  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11']  # Focus on 3.11 for local testing

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev,test]

    - name: Run Windows-specific failing tests
      run: |
        python -c "import os; os.makedirs('tests/coverage', exist_ok=True)"

        # Run the specific failing tests to replicate issues
        echo "ðŸ§ª Running Windows temp directory cleanup tests..."
        pytest tests/integration/test_generate_standard_enriched.py::test_generate_standard_enriched_and_training_pass_guarantee -v

        echo "ðŸ§ª Running Windows config path tests..."
        pytest tests/test_config_loader.py::TestConfigLoaderIntegration::test_config_file_discovery_workflow -v
        pytest tests/test_config_loader.py::TestConfigLoaderEdgeCases::test_config_file_discovery_in_deep_directories -v

        echo "ðŸ§ª Running Windows logging path tests..."
        pytest tests/test_logging_local.py::TestLocalLoggingEdgeCases::test_legacy_config_compatibility -v
        pytest tests/unit/logging/test_local_comprehensive.py::TestLocalLoggingComprehensive::test_invalid_log_directory_handling -v

        echo "ðŸ§ª Running end-to-end workflow tests..."
        pytest tests/integration/test_end_to_end_workflows.py -v --tb=short
