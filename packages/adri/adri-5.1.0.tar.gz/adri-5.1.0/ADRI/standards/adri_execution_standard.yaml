standards:
  id: adri_execution_standard
  name: ADRI Execution Standard
  version: 1.0.0
  authority: ADRI Framework
  description: 'Standard for validating workflow execution metadata.

    This standard defines the required structure for workflow_context dictionaries

    passed to ADRI for workflow orchestration integration.


    ADRI validates its own execution metadata using this standard before logging,

    demonstrating recursive application of the ADRI validation principle.

    '
record_identification:
  primary_key_fields:
  - run_id
  - step_id
  strategy: primary_key_with_fallback
requirements:
  overall_minimum: 90.0
  dimension_requirements:
    validity:
      weight: 1.0
      minimum_score: 85.0
      scoring:
        rule_weights:
          type: 0.2
          pattern: 0.4
          numeric_bounds: 0.4
  field_requirements:
    run_id:
      type: string
      nullable: false
      pattern: ^run_[0-9]{8}_[0-9]{6}_[a-f0-9]{8}$
      description: 'Format: run_YYYYMMDD_HHMMSS_randomhex (e.g., run_20250107_143022_a1b2c3d4)'
      validation_rules:
      - name: run_id is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: run_id must not be empty
      - name: run_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: run_id must be of type string
      - name: run_id pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^run_[0-9]{8}_[0-9]{6}_[a-f0-9]{8}$')
        error_message: 'run_id must match pattern: ^run_[0-9]{8}_[0-9]{6}_[a-f0-9]{8}$'
    workflow_id:
      type: string
      nullable: false
      description: Identifier for the workflow template/definition
      validation_rules:
      - name: workflow_id is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: workflow_id must not be empty
      - name: workflow_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: workflow_id must be of type string
    workflow_version:
      type: string
      nullable: false
      description: Version of the workflow definition (e.g., '1.0.0', 'v2.3')
      validation_rules:
      - name: workflow_version is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: workflow_version must not be empty
      - name: workflow_version type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: workflow_version must be of type string
    step_id:
      type: string
      nullable: false
      description: Identifier for the current step in the workflow
      validation_rules:
      - name: step_id is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: step_id must not be empty
      - name: step_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: step_id must be of type string
    step_sequence:
      type: integer
      nullable: false
      min_value: 1
      max_value: 10000
      description: Sequential number of this step in the workflow (1-based)
      validation_rules:
      - name: step_sequence is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: step_sequence must not be empty
      - name: step_sequence type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_INTEGER
        error_message: step_sequence must be of type integer
      - name: step_sequence numeric bounds
        dimension: validity
        severity: CRITICAL
        rule_type: numeric_bounds
        rule_expression: VALUE >= 1 AND VALUE <= 10000
        error_message: step_sequence must be between 1 and 10000
    run_at_utc:
      type: string
      nullable: false
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}
      description: ISO 8601 timestamp (e.g., '2025-01-07T14:30:22Z' or '2025-01-07T14:30:22.123Z')
      validation_rules:
      - name: run_at_utc is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: run_at_utc must not be empty
      - name: run_at_utc type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: run_at_utc must be of type string
      - name: run_at_utc pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}')
        error_message: 'run_at_utc must match pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}'
    data_source_type:
      type: string
      nullable: true
      valid_values:
      - verodat_query
      - file
      - previous_step
      - api
      - manual
      - other
      description: Type of data source for this step
      validation_rules:
      - name: data_source_type type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: data_source_type must be of type string
metadata:
  created_by: ADRI Development Team
  created_date: 2025-01-07
  purpose: workflow_orchestration_metadata_validation
  tags:
  - workflow_orchestration
  - metadata_validation
  - recursive_validation
  - adri_internal
  usage_guidelines: "This standard validates workflow context metadata before ADRI logs it.\n\nUSAGE IN WORKFLOW ORCHESTRATION:\n\
    \nThe workflow runner passes context to ADRI via the workflow_context parameter:\n\n```python\nfrom adri import adri_protected\n\
    \nworkflow_context = {\n    \"run_id\": \"run_20250107_143022_a1b2c3d4\",\n    \"workflow_id\": \"credit_approval_workflow\"\
    ,\n    \"workflow_version\": \"2.1.0\",\n    \"step_id\": \"risk_assessment\",\n    \"step_sequence\": 3,\n    \"run_at_utc\"\
    : \"2025-01-07T14:30:22Z\"\n}\n\n@adri_protected(\n    standard=\"ai_decision_step_standard\",\n    data_param=\"decision_data\"\
    ,\n    workflow_context=workflow_context  # Validated against THIS standard\n)\ndef make_credit_decision(decision_data):\n\
    \    # AI agent makes decision\n    return decision_output\n```\n\nVALIDATION FLOW:\n\n1. Workflow runner creates workflow_context\
    \ dict\n2. ADRI receives workflow_context parameter\n3. ADRI validates context against adri_execution_standard\n4. If\
    \ valid: ADRI logs context and continues with data validation\n5. If invalid: ADRI raises error with specific field violations\n\
    \nFIELD DESCRIPTIONS:\n\nrun_id:\n  - Unique identifier for this specific workflow run\n  - Format enforced by pattern:\
    \ run_YYYYMMDD_HHMMSS_randomhex\n  - Example: \"run_20250107_143022_a1b2c3d4\"\n\nworkflow_id:\n  - Identifier for the\
    \ workflow template/definition\n  - Same workflow_id across different runs of same workflow\n  - Example: \"credit_approval_workflow\"\
    , \"invoice_processing\"\n\nworkflow_version:\n  - Version of the workflow definition\n  - Tracks which version of workflow\
    \ logic was used\n  - Example: \"1.0.0\", \"v2.3\", \"2023-Q4\"\n\nstep_id:\n  - Identifier for current step in workflow\n\
    \  - Unique within workflow definition\n  - Example: \"risk_assessment\", \"credit_decision\", \"notification\"\n\nstep_sequence:\n\
    \  - Sequential position of step in workflow execution\n  - 1-based numbering (first step = 1)\n  - Allows ordering of\
    \ executions in audit trail\n\nrun_at_utc:\n  - ISO 8601 timestamp when step was executed\n  - Must be in UTC timezone\n\
    \  - Example: \"2025-01-07T14:30:22Z\" or \"2025-01-07T14:30:22.123456Z\"\n\ndata_source_type: (optional)\n  - High-level\
    \ categorization of data source\n  - For detailed provenance, use data_provenance parameter\n  - Useful for quick filtering\
    \ in query interface\n\nRECURSIVE VALIDATION PRINCIPLE:\n\nADRI validates its own metadata using ADRI standards!\n\nThis\
    \ demonstrates the power of standard-driven validation:\n- No hardcoded validation logic in Python\n- Context structure\
    \ defined declaratively in YAML\n- Easy to extend by adding fields to this standard\n- Testable like any other ADRI standard\n\
    - Self-documenting through standard metadata\n\nINTEGRATION WITH OTHER FEATURES:\n\n- Data Provenance: Use data_provenance\
    \ parameter for detailed source tracking\n- Reasoning Context: Links AI prompts/responses to workflow executions\n- Query\
    \ Interface: Query logs by run_id, workflow_id, or step_id\n- Enhanced Logs: Execution_id derived from run_id + step_id\n\
    \nERROR HANDLING:\n\nIf workflow_context fails validation against this standard, ADRI will:\n1. Raise InvalidWorkflowContextError\
    \ with specific field violations\n2. Include the failed assessment in error message\n3. NOT proceed with data validation\
    \ or logging\n4. Allow workflow runner to fix context and retry\n\nBACKWARD COMPATIBILITY:\n\nworkflow_context parameter\
    \ is OPTIONAL:\n- If not provided: ADRI works exactly as before (no workflow integration)\n- If provided: ADRI validates\
    \ and logs workflow execution context\n- Existing code without workflow_context continues to work unchanged\n"
