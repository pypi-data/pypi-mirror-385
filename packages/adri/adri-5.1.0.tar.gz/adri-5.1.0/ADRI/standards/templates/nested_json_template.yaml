standards:
  id: nested_json_template
  name: Nested JSON Structure Template
  version: 1.0.0
  authority: ADRI Standards Catalog
  description: Generic template for validating nested JSON data structures
record_identification:
  primary_key_fields:
  - record_id
  strategy: primary_key_with_fallback
requirements:
  overall_minimum: 80.0
  field_requirements:
    record_id:
      type: string
      nullable: false
      description: Unique record identifier
      validation_rules:
      - name: record_id is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: record_id must not be empty
      - name: record_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: record_id must be of type string
    record_type:
      type: string
      nullable: false
      description: Type of nested structure
      validation_rules:
      - name: record_type is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: record_type must not be empty
      - name: record_type type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: record_type must be of type string
    parent_id:
      type: string
      nullable: true
      description: Parent record ID (null for root)
      validation_rules:
      - name: parent_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: parent_id must be of type string
    depth_level:
      type: integer
      nullable: false
      min_value: 0
      description: Depth level in hierarchy (0 = root)
      validation_rules:
      - name: depth_level is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: depth_level must not be empty
      - name: depth_level type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_INTEGER
        error_message: depth_level must be of type integer
      - name: depth_level numeric bounds
        dimension: validity
        severity: CRITICAL
        rule_type: numeric_bounds
        rule_expression: VALUE >= 0
        error_message: depth_level must be between 0 and None
    path:
      type: string
      nullable: false
      description: Full path from root (e.g., 'root.child1.grandchild')
      validation_rules:
      - name: path is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: path must not be empty
      - name: path type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: path must be of type string
    name:
      type: string
      nullable: false
      description: Node name
      validation_rules:
      - name: name is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: name must not be empty
      - name: name type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: name must be of type string
    data:
      type: string
      nullable: false
      description: JSON string containing node data
      validation_rules:
      - name: data is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: data must not be empty
      - name: data type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: data must be of type string
    has_children:
      type: boolean
      nullable: false
      description: Whether node has child nodes
      validation_rules:
      - name: has_children is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: has_children must not be empty
      - name: has_children type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_BOOLEAN
        error_message: has_children must be of type boolean
    child_count:
      type: integer
      nullable: false
      min_value: 0
      description: Number of direct children
      validation_rules:
      - name: child_count is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: child_count must not be empty
      - name: child_count type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_INTEGER
        error_message: child_count must be of type integer
      - name: child_count numeric bounds
        dimension: validity
        severity: CRITICAL
        rule_type: numeric_bounds
        rule_expression: VALUE >= 0
        error_message: child_count must be between 0 and None
    total_descendants:
      type: integer
      nullable: false
      min_value: 0
      description: Total number of descendants
      validation_rules:
      - name: total_descendants is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: total_descendants must not be empty
      - name: total_descendants type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_INTEGER
        error_message: total_descendants must be of type integer
      - name: total_descendants numeric bounds
        dimension: validity
        severity: CRITICAL
        rule_type: numeric_bounds
        rule_expression: VALUE >= 0
        error_message: total_descendants must be between 0 and None
    created_at:
      type: string
      nullable: false
      pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$
      description: Node creation timestamp
      validation_rules:
      - name: created_at is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: created_at must not be empty
      - name: created_at type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: created_at must be of type string
      - name: created_at pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$')
        error_message: 'created_at must match pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$'
    updated_at:
      type: string
      nullable: false
      pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$
      description: Node last update timestamp
      validation_rules:
      - name: updated_at is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: updated_at must not be empty
      - name: updated_at type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: updated_at must be of type string
      - name: updated_at pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$')
        error_message: 'updated_at must match pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$'
    is_active:
      type: boolean
      nullable: false
      description: Whether node is active
      validation_rules:
      - name: is_active is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: is_active must not be empty
      - name: is_active type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_BOOLEAN
        error_message: is_active must be of type boolean
    validation_status:
      type: string
      nullable: false
      valid_values:
      - valid
      - invalid
      - pending
      - unknown
      description: Validation status of node data
      validation_rules:
      - name: validation_status is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: validation_status must not be empty
      - name: validation_status type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: validation_status must be of type string
  dimension_requirements:
    validity:
      minimum_score: 18.0
      weight: 1.0
    completeness:
      minimum_score: 17.0
      weight: 1.0
    consistency:
      minimum_score: 17.0
      weight: 1.0
    freshness:
      minimum_score: 14.0
      weight: 1.0
    plausibility:
      minimum_score: 14.0
      weight: 1.0
metadata:
  purpose: Generic template for validating nested JSON structures
  usage: 'This template validates:

    1. Hierarchical record identification

    2. Parent-child relationships

    3. Depth and path tracking

    4. Child count consistency

    5. Node data and metadata

    6. Validation status

    '
  customization_notes: 'To customize this template:

    1. Add domain-specific record_type values

    2. Define custom data schema for your JSON content

    3. Add business rules for depth_level limits

    4. Configure child_count validation rules

    5. Add custom validation_status values

    6. Define path format conventions

    '
  example_usage: "from adri import adri_protected\nimport pandas as pd\n\n@adri_protected(standard=\"nested_json_template\"\
    )\ndef process_nested_data(nested_df):\n    # Process validated nested JSON structures\n    return nested_df\n"
  created_by: ADRI Standards Catalog
  created_date: 2025-01-17
  category: Template
  tags:
  - json
  - nested
  - hierarchical
  - template
  - tree-structure
