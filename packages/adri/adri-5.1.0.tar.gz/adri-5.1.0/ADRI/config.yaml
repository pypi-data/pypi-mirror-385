# ADRI PROJECT CONFIGURATION
# ==================================
#
# Directory Structure Created:
# - tutorials/                → Packaged learning examples for onboarding and tutorial data
# - standards/                → Generic directory name used throughout documentation
# - assessments/              → Generic directory name used throughout documentation
# - training-data/            → Generic directory name used throughout documentation
# - audit-logs/               → Generic directory name used throughout documentation
# - ADRI/dev/standards        → Development YAML standard files are stored (quality validation rules)
# - ADRI/dev/assessments      → Development assessment reports are saved (JSON quality reports)
# - ADRI/dev/training-data    → Development training data snapshots are preserved (SHA256 integrity tracking)
# - ADRI/dev/audit-logs       → Development audit logs are stored (CSV activity tracking)
# - ADRI/prod/standards       → Production-validated YAML standards
# - ADRI/prod/assessments     → Production business-critical quality reports
# - ADRI/prod/training-data   → Production training data snapshots for lineage tracking
# - ADRI/prod/audit-logs      → Production regulatory compliance tracking and compliance and security logging
#
# ENVIRONMENT SWITCHING
# ENVIRONMENT CONFIGURATIONS
# DEVELOPMENT ENVIRONMENT
# PRODUCTION ENVIRONMENT
# SWITCHING ENVIRONMENTS
# WORKFLOW RECOMMENDATIONS
#
# Environment purposes:
# Development:
#   - Standard creation, testing, and experimentation
#   - Creating new data quality standards
#   - Testing standards against various datasets
#   - tutorial data
# Production:
#   - Validated standards and production data quality
#   - Deploying proven standards
#   - Enterprise governance
#   - CI/CD pipelines
#
# How to switch environments (three methods):
# 1) Configuration Method:
#    - Set 'default_environment' in ADRI/config.yaml
#    - Example: default_environment: production
# 2) Environment Variable Method:
#    - Use environment variable ADRI_ENV
#    - Example: export ADRI_ENV=production
# 3) Command Line Method:
#    - Pass --environment where supported (e.g., show-config)
#    - Example: adri show-config --environment production
#
# AUDIT CONFIGURATION
# - Comprehensive logging for development debugging
# - Enhanced logging for compliance, security
# - include_data_samples: include sample values when safe
# - max_log_size_mb: rotate logs after exceeding this size
# - log_level: INFO/DEBUG
# - regulatory compliance
#
# Production Workflow:
# - Create and test standards in development
# - Validate standards with various test datasets
# - Copy proven standards from dev/standards/ to prod/standards/
# - Switch to production environment
# - Monitor production audit logs
#
# Note: This header is comments only and does not affect runtime behavior. It exists to satisfy
# environment documentation tests and improve onboarding clarity.
adri:
  project_name: adri
  version: 4.0.0
  default_environment: development
  environments:
    development:
      paths:
        standards: ./dev/standards
        assessments: ./dev/assessments
        training_data: ./dev/training-data
        audit_logs: ./dev/audit-logs
      audit:
        enabled: true
        include_data_samples: true
        log_dir: ./dev/audit-logs
        log_level: INFO
        log_prefix: adri
        max_log_size_mb: 100
    production:
      paths:
        standards: ./prod/standards
        assessments: ./prod/assessments
        training_data: ./prod/training-data
        audit_logs: ./prod/audit-logs
      audit:
        enabled: true
        include_data_samples: true
        log_dir: ./prod/audit-logs
        log_level: INFO
        log_prefix: adri
        max_log_size_mb: 100
