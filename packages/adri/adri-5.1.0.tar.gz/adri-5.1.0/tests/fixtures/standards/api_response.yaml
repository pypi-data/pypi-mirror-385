standards:
  id: api_response_standard
  name: Api Response ADRI Standard
  version: 1.0.0
  authority: ADRI Framework
  description: Auto-generated standard for api_response data
record_identification:
  primary_key_fields:
  - user_id
  strategy: primary_key_with_fallback
requirements:
  overall_minimum: 75.0
  field_requirements:
    user_id:
      type: string
      nullable: false
      min_length: 8
      max_length: 8
      pattern: ^[A-Za-z0-9\-_]+$
      validation_rules:
      - name: user_id is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: user_id must not be empty
      - name: user_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: user_id must be of type string
      - name: user_id length bounds
        dimension: validity
        severity: CRITICAL
        rule_type: length_bounds
        rule_expression: LENGTH >= 8 AND LENGTH <= 8
        error_message: user_id length must be between 8 and 8
      - name: user_id pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^[A-Za-z0-9\-_]+$')
        error_message: 'user_id must match pattern: ^[A-Za-z0-9\-_]+$'
    status:
      type: string
      nullable: false
      allowed_values:
      - success
      min_length: 7
      max_length: 7
      pattern: ^[A-Za-z0-9\-_]+$
      validation_rules:
      - name: status is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: status must not be empty
      - name: status type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: status must be of type string
      - name: status must be valid value
        dimension: validity
        severity: CRITICAL
        rule_type: allowed_values
        rule_expression: VALUE_IN(['success'])
        error_message: 'status must be one of: success'
      - name: status length bounds
        dimension: validity
        severity: CRITICAL
        rule_type: length_bounds
        rule_expression: LENGTH >= 7 AND LENGTH <= 7
        error_message: status length must be between 7 and 7
      - name: status pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^[A-Za-z0-9\-_]+$')
        error_message: 'status must match pattern: ^[A-Za-z0-9\-_]+$'
    data:
      type: string
      nullable: false
      allowed_values:
      - '{"account_type": "premium", "credits": 250, "email": "alice@example.com",
        "last_login": "2024-10-15T14:30:00Z", "name": "Alice Johnson"}'
      - '{"account_type": "standard", "credits": 100, "email": "bob@example.com",
        "last_login": "2024-10-16T09:15:00Z", "name": "Bob Smith"}'
      - '{"account_type": "premium", "credits": 500, "email": "carol@example.com",
        "last_login": "2024-10-17T08:45:00Z", "name": "Carol Williams"}'
      min_length: 131
      max_length: 137
      pattern: ^[^@]+@[^@]+\.[^@]+$
      validation_rules:
      - name: data is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: data must not be empty
      - name: data type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: data must be of type string
      - name: data must be valid value
        dimension: validity
        severity: CRITICAL
        rule_type: allowed_values
        rule_expression: 'VALUE_IN([''{"account_type": "premium", "credits": 250,
          "email": "alice@example.com", "last_login": "2024-10-15T14:30:00Z", "name":
          "Alice Johnson"}'', ''{"account_type": "standard", "credits": 100, "email":
          "bob@example.com", "last_login": "2024-10-16T09:15:00Z", "name": "Bob Smith"}'',
          ''{"account_type": "premium", "credits": 500, "email": "carol@example.com",
          "last_login": "2024-10-17T08:45:00Z", "name": "Carol Williams"}''])'
        error_message: 'data must be one of: {"account_type": "premium", "credits":
          250, "email": "alice@example.com", "last_login": "2024-10-15T14:30:00Z",
          "name": "Alice Johnson"}, {"account_type": "standard", "credits": 100, "email":
          "bob@example.com", "last_login": "2024-10-16T09:15:00Z", "name": "Bob Smith"},
          {"account_type": "premium", "credits": 500, "email": "carol@example.com",
          "last_login": "2024-10-17T08:45:00Z", "name": "Carol Williams"}'
      - name: data length bounds
        dimension: validity
        severity: CRITICAL
        rule_type: length_bounds
        rule_expression: LENGTH >= 131 AND LENGTH <= 137
        error_message: data length must be between 131 and 137
      - name: data pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^[^@]+@[^@]+\.[^@]+$')
        error_message: 'data must match pattern: ^[^@]+@[^@]+\.[^@]+$'
    timestamp:
      type: string
      nullable: false
      validation_rules:
      - name: timestamp is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: timestamp must not be empty
      - name: timestamp type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_DATE
        error_message: timestamp must be of type date
      - name: timestamp date bounds
        dimension: validity
        severity: CRITICAL
        rule_type: date_bounds
        rule_expression: DATE >= '2024-10-14' AND DATE <= '2024-10-20'
        error_message: timestamp must be within date range
    request_id:
      type: string
      nullable: false
      min_length: 10
      max_length: 10
      pattern: ^[A-Za-z0-9\-_]+$
      validation_rules:
      - name: request_id is required
        dimension: completeness
        severity: CRITICAL
        rule_type: not_null
        rule_expression: IS_NOT_NULL
        error_message: request_id must not be empty
      - name: request_id type validation
        dimension: validity
        severity: CRITICAL
        rule_type: type
        rule_expression: IS_STRING
        error_message: request_id must be of type string
      - name: request_id length bounds
        dimension: validity
        severity: CRITICAL
        rule_type: length_bounds
        rule_expression: LENGTH >= 10 AND LENGTH <= 10
        error_message: request_id length must be between 10 and 10
      - name: request_id pattern validation
        dimension: validity
        severity: WARNING
        rule_type: pattern
        rule_expression: REGEX_MATCH('^[A-Za-z0-9\-_]+$')
        error_message: 'request_id must match pattern: ^[A-Za-z0-9\-_]+$'
  dimension_requirements:
    validity:
      minimum_score: 15.0
      weight: 1.0
      scoring:
        rule_weights:
          type: 0.3125
          length_bounds: 0.25
          pattern: 0.25
          allowed_values: 0.125
          date_bounds: 0.0625
        field_overrides: {}
    completeness:
      minimum_score: 15.0
      weight: 1.0
      scoring:
        rule_weights:
          missing_required: 0.16666666666666666
          not_null: 0.8333333333333334
        field_overrides: {}
    consistency:
      minimum_score: 12.0
      weight: 1.0
      scoring:
        rule_weights: {}
        field_overrides: {}
    freshness:
      minimum_score: 15.0
      weight: 1.0
      scoring:
        rule_weights:
          recency_window: 1.0
        field_overrides: {}
    plausibility:
      minimum_score: 12.0
      weight: 1.0
      scoring:
        rule_weights: {}
        field_overrides: {}
metadata:
  explanations_note: Explanations are for human review; only requirements.field_requirements
    are enforced.
  explanations_glossary:
    iqr: 'Interquartile Range (Q3 - Q1): a robust measure of spread, less sensitive
      to outliers.'
    q1: 25th percentile of the training values.
    q3: 75th percentile of the training values.
    coverage: Share of non-null training values that satisfy the rule.
    unique_count: Number of distinct non-null values observed in training.
    mad: 'Median Absolute Deviation: robust measure of variability around the median.'
    quantile: Statistical measure dividing data into equal-sized intervals.
    training_pass: Guarantee that generated rules pass on the training data used for
      generation.
    enum_strategy: Method used for allowed values inference (coverage or tolerant).
    margin_days: Buffer added to date ranges to allow for reasonable variations.
  explanations:
    user_id:
      type: string
      nullable:
        active: false
        reason: Required because 0% nulls observed in training
        stats:
          null_count: 0
          total: 3
      length_bounds:
        active_min: 8
        active_max: 8
        stats:
          observed_min: 8
          observed_max: 8
      pattern:
        regex: ^[A-Za-z0-9\-_]+$
        reason: 100% coverage on training non-nulls
        stats:
          coverage: 1.0
    status:
      type: string
      nullable:
        active: false
        reason: Required because 0% nulls observed in training
        stats:
          null_count: 0
          total: 3
      allowed_values:
        values:
        - success
        reason: High coverage stable set
        stats:
          coverage: 1.0
          unique_count: 1
          strategy: coverage
      length_bounds:
        active_min: 7
        active_max: 7
        stats:
          observed_min: 7
          observed_max: 7
      pattern:
        regex: ^[A-Za-z0-9\-_]+$
        reason: 100% coverage on training non-nulls
        stats:
          coverage: 1.0
    data:
      type: string
      nullable:
        active: false
        reason: Required because 0% nulls observed in training
        stats:
          null_count: 0
          total: 3
      allowed_values:
        values:
        - '{"account_type": "premium", "credits": 250, "email": "alice@example.com",
          "last_login": "2024-10-15T14:30:00Z", "name": "Alice Johnson"}'
        - '{"account_type": "standard", "credits": 100, "email": "bob@example.com",
          "last_login": "2024-10-16T09:15:00Z", "name": "Bob Smith"}'
        - '{"account_type": "premium", "credits": 500, "email": "carol@example.com",
          "last_login": "2024-10-17T08:45:00Z", "name": "Carol Williams"}'
        reason: High coverage stable set
        stats:
          coverage: 1.0
          unique_count: 3
          strategy: coverage
      length_bounds:
        active_min: 131
        active_max: 137
        stats:
          observed_min: 131
          observed_max: 137
      pattern:
        regex: ^[^@]+@[^@]+\.[^@]+$
        reason: 100% coverage on training non-nulls
        stats:
          coverage: 1.0
    timestamp:
      type: string
      nullable:
        active: false
        reason: Required because 0% nulls observed in training
        stats:
          null_count: 0
          total: 3
    request_id:
      type: string
      nullable:
        active: false
        reason: Required because 0% nulls observed in training
        stats:
          null_count: 0
          total: 3
      length_bounds:
        active_min: 10
        active_max: 10
        stats:
          observed_min: 10
          observed_max: 10
      pattern:
        regex: ^[A-Za-z0-9\-_]+$
        reason: 100% coverage on training non-nulls
        stats:
          coverage: 1.0
  freshness:
    as_of: 2024-10-18T10:02:00+00:00Z
    window_days: 365
    date_field: timestamp
  plausibility_templates: '# plausibility:

    #   scoring:

    #     rule_weights:

    #       numeric_sigma: 1.0      # enable if not overlapping with validity numeric_bounds

    #       categorical_tail: 1.0   # enable to flag rare categories

    #   notes: "Disabled by default to avoid overlap with Validity. Review before
    enabling."

    '
