Metadata-Version: 2.4
Name: tng-python
Version: 0.1.3
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Rust
Requires-Dist: rich>=13.0.0
Requires-Dist: questionary>=2.0.0
Requires-Dist: iterfzf>=1.4.0
Requires-Dist: requests>=2.32.5
Requires-Dist: typer>=0.12.0
Requires-Dist: ruff>=0.8.0
Requires-Dist: pytest>=7.0.0 ; extra == 'test'
Requires-Dist: pytest-cov>=4.0.0 ; extra == 'test'
Requires-Dist: pytest-mock>=3.10.0 ; extra == 'test'
Requires-Dist: responses>=0.20.0 ; extra == 'test'
Provides-Extra: test
License-File: LICENSE
Summary: Automated PYTHON| Tests in Minutes. Static analysis engine with AST-based code intelligence â€“ generates unit, integration, and matrix tests for Ruby, Python, and JavaScript.
Author-email: TNG Python Package <raluca@tng.sh>
License: Commercial
Requires-Python: >=3.8
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: Homepage, https://tng.sh
Project-URL: Repository, https://github.com/tng-sh

# TNG Python - Automated Tests in Minutes

Static analysis engine with AST-based code intelligence â€“ generates unit, integration, and matrix tests for Ruby, Python, and JavaScript.

## ðŸš€ Generate Your First Test Free

TNG Python is a powerful static analysis tool that leverages Abstract Syntax Tree (AST) parsing to understand your code structure and automatically generate comprehensive test suites.

## Features

- **AST-based Analysis**: Deep code intelligence using advanced parsing techniques
- **Multiple Test Types**: Unit tests, integration tests, and matrix tests
- **Fast Analysis**: Lightning-quick static analysis
- **Cross-platform**: Works on macOS, Linux (x86_64 & ARM64)

## Installation

```bash
pip install tng-python
```

## Quick Start

### 1. Initialize Configuration
```bash
# Generate configuration file
tng-init
```

### 2. Configure API Access
Edit the generated `tng_config.py` file and set:
```python
API_KEY = "your_api_key_from_tng.sh"
BASE_URL = "https://api.tng.sh"  # or your custom server
```

### 3. Generate Tests
```bash
# Launch interactive test generation
tng
```

This opens an interactive terminal UI where you can:
- **Search and select** Python files from your project
- **Pick methods** from the selected file
- **Generate comprehensive tests** automatically

## How It Works

TNG analyzes your Python code using AST parsing to understand:
- Function signatures and parameters
- Class structures and relationships
- Import dependencies
- Code complexity and patterns

It then generates appropriate test cases for:
- **Unit tests** for individual functions
- **Integration tests** for component interactions
- **Matrix tests** for complex scenarios

## License

Commercial License

## Contact

- Email: raluca@tng.sh
- Repository: https://github.com/tng-sh

