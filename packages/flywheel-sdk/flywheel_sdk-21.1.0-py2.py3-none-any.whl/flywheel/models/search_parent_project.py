# coding: utf-8

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


## NOTE: This file is auto generated by the swagger code generator program.
## Do not edit the file manually.

import pprint
import re  # noqa: F401
import six

from flywheel.models.container_type import ContainerType  # noqa: F401,E501
from flywheel.models.copy_status import CopyStatus  # noqa: F401,E501
from flywheel.models.edition import Edition  # noqa: F401,E501
from flywheel.models.file_output import FileOutput  # noqa: F401,E501
from flywheel.models.join_origins import JoinOrigins  # noqa: F401,E501
from flywheel.models.ldap_sync_status import LdapSyncStatus  # noqa: F401,E501
from flywheel.models.locked import Locked  # noqa: F401,E501
from flywheel.models.note import Note  # noqa: F401,E501
from flywheel.models.project_output import ProjectOutput  # noqa: F401,E501
from flywheel.models.project_parents import ProjectParents  # noqa: F401,E501
from flywheel.models.project_settings_output import ProjectSettingsOutput  # noqa: F401,E501
from flywheel.models.project_stats import ProjectStats  # noqa: F401,E501
from flywheel.models.project_template import ProjectTemplate  # noqa: F401,E501
from flywheel.models.providers import Providers  # noqa: F401,E501
from flywheel.models.role_permission import RolePermission  # noqa: F401,E501
from flywheel.models.search_parent_response import SearchParentResponse  # noqa: F401,E501

import warnings

from flywheel.models.project_output import ProjectOutput


class SearchParentProject(ProjectOutput):
    """This model is deprecated and will be removed in a future release.
    """
    def __init__(self, *args, **kwargs):
        warnings.warn(
            f"The {self.__class__.__name__} model has been deprecated and "
            "will be removed in a future release.",
            DeprecationWarning,
        )
        return super().__init__(*args, **kwargs)
