# coding: utf-8

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


## NOTE: This file is auto generated by the swagger code generator program.
## Do not edit the file manually.

import pprint
import re  # noqa: F401
import six

from flywheel.models.core_workflows_form_responses_models_form_parents import CoreWorkflowsFormResponsesModelsFormParents  # noqa: F401,E501
from flywheel.models.origin import Origin  # noqa: F401,E501

class CoreWorkflowsFormResponsesModelsFormResponseOutput(object):

    swagger_types = {
        'id': 'str',
        'task_id': 'str',
        'protocol_id': 'str',
        'data': 'object',
        'submitted': 'bool',
        'submitted_at': 'datetime',
        'origin': 'Origin',
        'parents': 'CoreWorkflowsFormResponsesModelsFormParents',
        'created': 'datetime',
        'modified': 'datetime',
        'revision': 'int'
    }

    attribute_map = {
        'id': 'id',
        'task_id': 'task_id',
        'protocol_id': 'protocol_id',
        'data': 'data',
        'submitted': 'submitted',
        'submitted_at': 'submitted_at',
        'origin': 'origin',
        'parents': 'parents',
        'created': 'created',
        'modified': 'modified',
        'revision': 'revision'
    }

    rattribute_map = {
        'id': 'id',
        'task_id': 'task_id',
        'protocol_id': 'protocol_id',
        'data': 'data',
        'submitted': 'submitted',
        'submitted_at': 'submitted_at',
        'origin': 'origin',
        'parents': 'parents',
        'created': 'created',
        'modified': 'modified',
        'revision': 'revision'
    }

    def __init__(self, id=None, task_id=None, protocol_id=None, data=None, submitted=None, submitted_at=None, origin=None, parents=None, created=None, modified=None, revision=None):  # noqa: E501
        """CoreWorkflowsFormResponsesModelsFormResponseOutput - a model defined in Swagger"""
        super(CoreWorkflowsFormResponsesModelsFormResponseOutput, self).__init__()

        self._id = None
        self._task_id = None
        self._protocol_id = None
        self._data = None
        self._submitted = None
        self._submitted_at = None
        self._origin = None
        self._parents = None
        self._created = None
        self._modified = None
        self._revision = None
        self.discriminator = None
        self.alt_discriminator = None

        self.id = id
        self.task_id = task_id
        self.protocol_id = protocol_id
        self.data = data
        self.submitted = submitted
        if submitted_at is not None:
            self.submitted_at = submitted_at
        self.origin = origin
        self.parents = parents
        self.created = created
        self.modified = modified
        self.revision = revision

    @property
    def id(self):
        """Gets the id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        Unique identifier for the response

        :return: The id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        Unique identifier for the response

        :param id: The id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def task_id(self):
        """Gets the task_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        ID of the task this response is linked to

        :return: The task_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        ID of the task this response is linked to

        :param task_id: The task_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: str
        """

        self._task_id = task_id

    @property
    def protocol_id(self):
        """Gets the protocol_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        ID of the protocol this response is for

        :return: The protocol_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: str
        """
        return self._protocol_id

    @protocol_id.setter
    def protocol_id(self, protocol_id):
        """Sets the protocol_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        ID of the protocol this response is for

        :param protocol_id: The protocol_id of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: str
        """

        self._protocol_id = protocol_id

    @property
    def data(self):
        """Gets the data of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        User's form input data

        :return: The data of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        User's form input data

        :param data: The data of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: object
        """

        self._data = data

    @property
    def submitted(self):
        """Gets the submitted of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        Whether the response has been submitted

        :return: The submitted of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: bool
        """
        return self._submitted

    @submitted.setter
    def submitted(self, submitted):
        """Sets the submitted of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        Whether the response has been submitted

        :param submitted: The submitted of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: bool
        """

        self._submitted = submitted

    @property
    def submitted_at(self):
        """Gets the submitted_at of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        Timestamp of submission if submitted

        :return: The submitted_at of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this CoreWorkflowsFormResponsesModelsFormResponseOutput.

        Timestamp of submission if submitted

        :param submitted_at: The submitted_at of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: datetime
        """

        self._submitted_at = submitted_at

    @property
    def origin(self):
        """Gets the origin of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :return: The origin of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: Origin
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :param origin: The origin of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: Origin
        """

        self._origin = origin

    @property
    def parents(self):
        """Gets the parents of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :return: The parents of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: CoreWorkflowsFormResponsesModelsFormParents
        """
        return self._parents

    @parents.setter
    def parents(self, parents):
        """Sets the parents of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :param parents: The parents of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: CoreWorkflowsFormResponsesModelsFormParents
        """

        self._parents = parents

    @property
    def created(self):
        """Gets the created of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :return: The created of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :param created: The created of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: datetime
        """

        self._created = created

    @property
    def modified(self):
        """Gets the modified of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :return: The modified of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: datetime
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :param modified: The modified of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: datetime
        """

        self._modified = modified

    @property
    def revision(self):
        """Gets the revision of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :return: The revision of this CoreWorkflowsFormResponsesModelsFormResponseOutput.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this CoreWorkflowsFormResponsesModelsFormResponseOutput.


        :param revision: The revision of this CoreWorkflowsFormResponsesModelsFormResponseOutput.  # noqa: E501
        :type: int
        """

        self._revision = revision


    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        return value

    def return_value(self):
        """Unwraps return value from model"""
        return self

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CoreWorkflowsFormResponsesModelsFormResponseOutput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

    # Container emulation
    def __getitem__(self, key):
        """Returns the value of key"""
        key = self._map_key(key)
        return getattr(self, key)

    def __setitem__(self, key, value):
        """Sets the value of key"""
        key = self._map_key(key)
        setattr(self, key, value)

    def __contains__(self, key):
        """Checks if the given value is a key in this object"""
        key = self._map_key(key, raise_on_error=False)
        return key is not None

    def keys(self):
        """Returns the list of json properties in the object"""
        return self.__class__.rattribute_map.keys()

    def values(self):
        """Returns the list of values in the object"""
        for key in self.__class__.attribute_map.keys():
            yield getattr(self, key)

    def items(self):
        """Returns the list of json property to value mapping"""
        for key, prop in self.__class__.rattribute_map.items():
            yield key, getattr(self, prop)

    def get(self, key, default=None):
        """Get the value of the provided json property, or default"""
        key = self._map_key(key, raise_on_error=False)
        if key:
            return getattr(self, key, default)
        return default

    def _map_key(self, key, raise_on_error=True):
        result = self.__class__.rattribute_map.get(key)
        if result is None:
            if raise_on_error:
                raise AttributeError('Invalid attribute name: {}'.format(key))
            return None
        return '_' + result
