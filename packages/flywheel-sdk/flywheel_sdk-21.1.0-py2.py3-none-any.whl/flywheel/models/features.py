# coding: utf-8

"""
    Flywheel

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


## NOTE: This file is auto generated by the swagger code generator program.
## Do not edit the file manually.

import pprint
import re  # noqa: F401
import six

class Features(object):

    swagger_types = {
        'api_enabled_gear_rules': 'bool',
        'auth0': 'bool',
        'audit_trail': 'bool',
        'azureml_integration': 'bool',
        'cold_job_logs': 'bool',
        'collections': 'bool',
        'copy_by_reference': 'bool',
        'core_api': 'bool',
        'crawler': 'bool',
        'cvat': 'bool',
        'data_views_non_21_cfr': 'bool',
        'default_viewer_apps': 'bool',
        'deid_log': 'bool',
        'deid_profile': 'bool',
        'dimse': 'bool',
        'elastic_search_primary': 'bool',
        'exchange': 'bool',
        'case_uploader': 'bool',
        'exchange_admin': 'bool',
        'external_routing': 'bool',
        'gear_access': 'bool',
        'google_analytics': 'bool',
        'healthcare_api': 'bool',
        'job_ask': 'bool',
        'job_prioritization': 'bool',
        'job_tickets': 'bool',
        'jupyter_integration': 'bool',
        'jupyterhub_external_storage': 'bool',
        'ldap_sync': 'bool',
        'multifactor_auth': 'bool',
        'multipart_signed_url': 'bool',
        'multiproject': 'bool',
        'ohif_multi_subject_view': 'bool',
        'ohif_meteor': 'bool',
        'ohif_react': 'bool',
        'ohif_slice_order': 'str',
        'ohif_v2_adhoc_indexing': 'bool',
        'ohif_v3': 'bool',
        'ohif_v3_default_app': 'bool',
        'ohif_v3_readonly': 'bool',
        'project_export': 'bool',
        'project_import': 'bool',
        'project_list_uses_stats': 'bool',
        'project_locking': 'bool',
        'reader_tasks': 'bool',
        'rts_sync': 'bool',
        'sentry_logging': 'bool',
        'session_templates_non_21_cfr': 'bool',
        'shared_projects': 'bool',
        'signed_url': 'bool',
        'study_task_status': 'bool',
        'tagging': 'bool',
        'tags_in_lists': 'bool',
        'task_manager_data_views': 'bool',
        'transform_search_fields': 'bool',
        'unsafe_login': 'bool',
        'url_access_apps': 'bool',
        'userpilot': 'bool',
        'validate_classification': 'bool',
        'engine_validate_classification': 'bool',
        'virus_scan': 'bool',
        'legacy_dicom_uploader': 'bool',
        'tasks_refactor': 'bool'
    }

    attribute_map = {
        'api_enabled_gear_rules': 'api_enabled_gear_rules',
        'auth0': 'auth0',
        'audit_trail': 'audit_trail',
        'azureml_integration': 'azureml_integration',
        'cold_job_logs': 'cold_job_logs',
        'collections': 'collections',
        'copy_by_reference': 'copy_by_reference',
        'core_api': 'core_api',
        'crawler': 'crawler',
        'cvat': 'cvat',
        'data_views_non_21_cfr': 'data_views_non_21CFR',
        'default_viewer_apps': 'default_viewer_apps',
        'deid_log': 'deid_log',
        'deid_profile': 'deid_profile',
        'dimse': 'dimse',
        'elastic_search_primary': 'elastic_search_primary',
        'exchange': 'exchange',
        'case_uploader': 'case_uploader',
        'exchange_admin': 'exchange_admin',
        'external_routing': 'external_routing',
        'gear_access': 'gear_access',
        'google_analytics': 'google_analytics',
        'healthcare_api': 'healthcare_api',
        'job_ask': 'job_ask',
        'job_prioritization': 'job_prioritization',
        'job_tickets': 'job_tickets',
        'jupyter_integration': 'jupyter_integration',
        'jupyterhub_external_storage': 'jupyterhub_external_storage',
        'ldap_sync': 'ldap_sync',
        'multifactor_auth': 'multifactor_auth',
        'multipart_signed_url': 'multipart_signed_url',
        'multiproject': 'multiproject',
        'ohif_multi_subject_view': 'ohif_multi_subject_view',
        'ohif_meteor': 'ohif_meteor',
        'ohif_react': 'ohif_react',
        'ohif_slice_order': 'ohif_slice_order',
        'ohif_v2_adhoc_indexing': 'ohif_v2_adhoc_indexing',
        'ohif_v3': 'ohif_v3',
        'ohif_v3_default_app': 'ohif_v3_default_app',
        'ohif_v3_readonly': 'ohif_v3_readonly',
        'project_export': 'project_export',
        'project_import': 'project_import',
        'project_list_uses_stats': 'project_list_uses_stats',
        'project_locking': 'project_locking',
        'reader_tasks': 'reader_tasks',
        'rts_sync': 'rts_sync',
        'sentry_logging': 'sentry_logging',
        'session_templates_non_21_cfr': 'session_templates_non_21CFR',
        'shared_projects': 'shared_projects',
        'signed_url': 'signed_url',
        'study_task_status': 'study_task_status',
        'tagging': 'tagging',
        'tags_in_lists': 'tags_in_lists',
        'task_manager_data_views': 'task_manager_data_views',
        'transform_search_fields': 'transform_search_fields',
        'unsafe_login': 'unsafe_login',
        'url_access_apps': 'url_access_apps',
        'userpilot': 'userpilot',
        'validate_classification': 'validate_classification',
        'engine_validate_classification': 'engine_validate_classification',
        'virus_scan': 'virus_scan',
        'legacy_dicom_uploader': 'legacy_dicom_uploader',
        'tasks_refactor': 'tasks_refactor'
    }

    rattribute_map = {
        'api_enabled_gear_rules': 'api_enabled_gear_rules',
        'auth0': 'auth0',
        'audit_trail': 'audit_trail',
        'azureml_integration': 'azureml_integration',
        'cold_job_logs': 'cold_job_logs',
        'collections': 'collections',
        'copy_by_reference': 'copy_by_reference',
        'core_api': 'core_api',
        'crawler': 'crawler',
        'cvat': 'cvat',
        'data_views_non_21CFR': 'data_views_non_21_cfr',
        'default_viewer_apps': 'default_viewer_apps',
        'deid_log': 'deid_log',
        'deid_profile': 'deid_profile',
        'dimse': 'dimse',
        'elastic_search_primary': 'elastic_search_primary',
        'exchange': 'exchange',
        'case_uploader': 'case_uploader',
        'exchange_admin': 'exchange_admin',
        'external_routing': 'external_routing',
        'gear_access': 'gear_access',
        'google_analytics': 'google_analytics',
        'healthcare_api': 'healthcare_api',
        'job_ask': 'job_ask',
        'job_prioritization': 'job_prioritization',
        'job_tickets': 'job_tickets',
        'jupyter_integration': 'jupyter_integration',
        'jupyterhub_external_storage': 'jupyterhub_external_storage',
        'ldap_sync': 'ldap_sync',
        'multifactor_auth': 'multifactor_auth',
        'multipart_signed_url': 'multipart_signed_url',
        'multiproject': 'multiproject',
        'ohif_multi_subject_view': 'ohif_multi_subject_view',
        'ohif_meteor': 'ohif_meteor',
        'ohif_react': 'ohif_react',
        'ohif_slice_order': 'ohif_slice_order',
        'ohif_v2_adhoc_indexing': 'ohif_v2_adhoc_indexing',
        'ohif_v3': 'ohif_v3',
        'ohif_v3_default_app': 'ohif_v3_default_app',
        'ohif_v3_readonly': 'ohif_v3_readonly',
        'project_export': 'project_export',
        'project_import': 'project_import',
        'project_list_uses_stats': 'project_list_uses_stats',
        'project_locking': 'project_locking',
        'reader_tasks': 'reader_tasks',
        'rts_sync': 'rts_sync',
        'sentry_logging': 'sentry_logging',
        'session_templates_non_21CFR': 'session_templates_non_21_cfr',
        'shared_projects': 'shared_projects',
        'signed_url': 'signed_url',
        'study_task_status': 'study_task_status',
        'tagging': 'tagging',
        'tags_in_lists': 'tags_in_lists',
        'task_manager_data_views': 'task_manager_data_views',
        'transform_search_fields': 'transform_search_fields',
        'unsafe_login': 'unsafe_login',
        'url_access_apps': 'url_access_apps',
        'userpilot': 'userpilot',
        'validate_classification': 'validate_classification',
        'engine_validate_classification': 'engine_validate_classification',
        'virus_scan': 'virus_scan',
        'legacy_dicom_uploader': 'legacy_dicom_uploader',
        'tasks_refactor': 'tasks_refactor'
    }

    def __init__(self, api_enabled_gear_rules=True, auth0=None, audit_trail=False, azureml_integration=False, cold_job_logs=False, collections=False, copy_by_reference=True, core_api=True, crawler=False, cvat=False, data_views_non_21_cfr=True, default_viewer_apps=True, deid_log=False, deid_profile=False, dimse=False, elastic_search_primary=False, exchange=False, case_uploader=False, exchange_admin=False, external_routing=False, gear_access=True, google_analytics=True, healthcare_api=False, job_ask=True, job_prioritization=True, job_tickets=True, jupyter_integration=False, jupyterhub_external_storage=True, ldap_sync=False, multifactor_auth=False, multipart_signed_url=True, multiproject=False, ohif_multi_subject_view=False, ohif_meteor=False, ohif_react=False, ohif_slice_order=None, ohif_v2_adhoc_indexing=True, ohif_v3=True, ohif_v3_default_app=False, ohif_v3_readonly=False, project_export=True, project_import=True, project_list_uses_stats=False, project_locking=False, reader_tasks=False, rts_sync=False, sentry_logging=None, session_templates_non_21_cfr=True, shared_projects=False, signed_url=False, study_task_status=False, tagging=False, tags_in_lists=True, task_manager_data_views=True, transform_search_fields=True, unsafe_login=False, url_access_apps=False, userpilot=None, validate_classification=True, engine_validate_classification=False, virus_scan=False, legacy_dicom_uploader=False, tasks_refactor=False):  # noqa: E501
        """Features - a model defined in Swagger"""
        super(Features, self).__init__()

        self._api_enabled_gear_rules = None
        self._auth0 = None
        self._audit_trail = None
        self._azureml_integration = None
        self._cold_job_logs = None
        self._collections = None
        self._copy_by_reference = None
        self._core_api = None
        self._crawler = None
        self._cvat = None
        self._data_views_non_21_cfr = None
        self._default_viewer_apps = None
        self._deid_log = None
        self._deid_profile = None
        self._dimse = None
        self._elastic_search_primary = None
        self._exchange = None
        self._case_uploader = None
        self._exchange_admin = None
        self._external_routing = None
        self._gear_access = None
        self._google_analytics = None
        self._healthcare_api = None
        self._job_ask = None
        self._job_prioritization = None
        self._job_tickets = None
        self._jupyter_integration = None
        self._jupyterhub_external_storage = None
        self._ldap_sync = None
        self._multifactor_auth = None
        self._multipart_signed_url = None
        self._multiproject = None
        self._ohif_multi_subject_view = None
        self._ohif_meteor = None
        self._ohif_react = None
        self._ohif_slice_order = None
        self._ohif_v2_adhoc_indexing = None
        self._ohif_v3 = None
        self._ohif_v3_default_app = None
        self._ohif_v3_readonly = None
        self._project_export = None
        self._project_import = None
        self._project_list_uses_stats = None
        self._project_locking = None
        self._reader_tasks = None
        self._rts_sync = None
        self._sentry_logging = None
        self._session_templates_non_21_cfr = None
        self._shared_projects = None
        self._signed_url = None
        self._study_task_status = None
        self._tagging = None
        self._tags_in_lists = None
        self._task_manager_data_views = None
        self._transform_search_fields = None
        self._unsafe_login = None
        self._url_access_apps = None
        self._userpilot = None
        self._validate_classification = None
        self._engine_validate_classification = None
        self._virus_scan = None
        self._legacy_dicom_uploader = None
        self._tasks_refactor = None
        self.discriminator = None
        self.alt_discriminator = None

        if api_enabled_gear_rules is not None:
            self.api_enabled_gear_rules = api_enabled_gear_rules
        if auth0 is not None:
            self.auth0 = auth0
        if audit_trail is not None:
            self.audit_trail = audit_trail
        if azureml_integration is not None:
            self.azureml_integration = azureml_integration
        if cold_job_logs is not None:
            self.cold_job_logs = cold_job_logs
        if collections is not None:
            self.collections = collections
        if copy_by_reference is not None:
            self.copy_by_reference = copy_by_reference
        if core_api is not None:
            self.core_api = core_api
        if crawler is not None:
            self.crawler = crawler
        if cvat is not None:
            self.cvat = cvat
        if data_views_non_21_cfr is not None:
            self.data_views_non_21_cfr = data_views_non_21_cfr
        if default_viewer_apps is not None:
            self.default_viewer_apps = default_viewer_apps
        if deid_log is not None:
            self.deid_log = deid_log
        if deid_profile is not None:
            self.deid_profile = deid_profile
        if dimse is not None:
            self.dimse = dimse
        if elastic_search_primary is not None:
            self.elastic_search_primary = elastic_search_primary
        if exchange is not None:
            self.exchange = exchange
        if case_uploader is not None:
            self.case_uploader = case_uploader
        if exchange_admin is not None:
            self.exchange_admin = exchange_admin
        if external_routing is not None:
            self.external_routing = external_routing
        if gear_access is not None:
            self.gear_access = gear_access
        if google_analytics is not None:
            self.google_analytics = google_analytics
        if healthcare_api is not None:
            self.healthcare_api = healthcare_api
        if job_ask is not None:
            self.job_ask = job_ask
        if job_prioritization is not None:
            self.job_prioritization = job_prioritization
        if job_tickets is not None:
            self.job_tickets = job_tickets
        if jupyter_integration is not None:
            self.jupyter_integration = jupyter_integration
        if jupyterhub_external_storage is not None:
            self.jupyterhub_external_storage = jupyterhub_external_storage
        if ldap_sync is not None:
            self.ldap_sync = ldap_sync
        if multifactor_auth is not None:
            self.multifactor_auth = multifactor_auth
        if multipart_signed_url is not None:
            self.multipart_signed_url = multipart_signed_url
        if multiproject is not None:
            self.multiproject = multiproject
        if ohif_multi_subject_view is not None:
            self.ohif_multi_subject_view = ohif_multi_subject_view
        if ohif_meteor is not None:
            self.ohif_meteor = ohif_meteor
        if ohif_react is not None:
            self.ohif_react = ohif_react
        if ohif_slice_order is not None:
            self.ohif_slice_order = ohif_slice_order
        if ohif_v2_adhoc_indexing is not None:
            self.ohif_v2_adhoc_indexing = ohif_v2_adhoc_indexing
        if ohif_v3 is not None:
            self.ohif_v3 = ohif_v3
        if ohif_v3_default_app is not None:
            self.ohif_v3_default_app = ohif_v3_default_app
        if ohif_v3_readonly is not None:
            self.ohif_v3_readonly = ohif_v3_readonly
        if project_export is not None:
            self.project_export = project_export
        if project_import is not None:
            self.project_import = project_import
        if project_list_uses_stats is not None:
            self.project_list_uses_stats = project_list_uses_stats
        if project_locking is not None:
            self.project_locking = project_locking
        if reader_tasks is not None:
            self.reader_tasks = reader_tasks
        if rts_sync is not None:
            self.rts_sync = rts_sync
        if sentry_logging is not None:
            self.sentry_logging = sentry_logging
        if session_templates_non_21_cfr is not None:
            self.session_templates_non_21_cfr = session_templates_non_21_cfr
        if shared_projects is not None:
            self.shared_projects = shared_projects
        if signed_url is not None:
            self.signed_url = signed_url
        if study_task_status is not None:
            self.study_task_status = study_task_status
        if tagging is not None:
            self.tagging = tagging
        if tags_in_lists is not None:
            self.tags_in_lists = tags_in_lists
        if task_manager_data_views is not None:
            self.task_manager_data_views = task_manager_data_views
        if transform_search_fields is not None:
            self.transform_search_fields = transform_search_fields
        if unsafe_login is not None:
            self.unsafe_login = unsafe_login
        if url_access_apps is not None:
            self.url_access_apps = url_access_apps
        if userpilot is not None:
            self.userpilot = userpilot
        if validate_classification is not None:
            self.validate_classification = validate_classification
        if engine_validate_classification is not None:
            self.engine_validate_classification = engine_validate_classification
        if virus_scan is not None:
            self.virus_scan = virus_scan
        if legacy_dicom_uploader is not None:
            self.legacy_dicom_uploader = legacy_dicom_uploader
        if tasks_refactor is not None:
            self.tasks_refactor = tasks_refactor

    @property
    def api_enabled_gear_rules(self):
        """Gets the api_enabled_gear_rules of this Features.


        :return: The api_enabled_gear_rules of this Features.
        :rtype: bool
        """
        return self._api_enabled_gear_rules

    @api_enabled_gear_rules.setter
    def api_enabled_gear_rules(self, api_enabled_gear_rules):
        """Sets the api_enabled_gear_rules of this Features.


        :param api_enabled_gear_rules: The api_enabled_gear_rules of this Features.  # noqa: E501
        :type: bool
        """

        self._api_enabled_gear_rules = api_enabled_gear_rules

    @property
    def auth0(self):
        """Gets the auth0 of this Features.


        :return: The auth0 of this Features.
        :rtype: bool
        """
        return self._auth0

    @auth0.setter
    def auth0(self, auth0):
        """Sets the auth0 of this Features.


        :param auth0: The auth0 of this Features.  # noqa: E501
        :type: bool
        """

        self._auth0 = auth0

    @property
    def audit_trail(self):
        """Gets the audit_trail of this Features.


        :return: The audit_trail of this Features.
        :rtype: bool
        """
        return self._audit_trail

    @audit_trail.setter
    def audit_trail(self, audit_trail):
        """Sets the audit_trail of this Features.


        :param audit_trail: The audit_trail of this Features.  # noqa: E501
        :type: bool
        """

        self._audit_trail = audit_trail

    @property
    def azureml_integration(self):
        """Gets the azureml_integration of this Features.


        :return: The azureml_integration of this Features.
        :rtype: bool
        """
        return self._azureml_integration

    @azureml_integration.setter
    def azureml_integration(self, azureml_integration):
        """Sets the azureml_integration of this Features.


        :param azureml_integration: The azureml_integration of this Features.  # noqa: E501
        :type: bool
        """

        self._azureml_integration = azureml_integration

    @property
    def cold_job_logs(self):
        """Gets the cold_job_logs of this Features.


        :return: The cold_job_logs of this Features.
        :rtype: bool
        """
        return self._cold_job_logs

    @cold_job_logs.setter
    def cold_job_logs(self, cold_job_logs):
        """Sets the cold_job_logs of this Features.


        :param cold_job_logs: The cold_job_logs of this Features.  # noqa: E501
        :type: bool
        """

        self._cold_job_logs = cold_job_logs

    @property
    def collections(self):
        """Gets the collections of this Features.


        :return: The collections of this Features.
        :rtype: bool
        """
        return self._collections

    @collections.setter
    def collections(self, collections):
        """Sets the collections of this Features.


        :param collections: The collections of this Features.  # noqa: E501
        :type: bool
        """

        self._collections = collections

    @property
    def copy_by_reference(self):
        """Gets the copy_by_reference of this Features.


        :return: The copy_by_reference of this Features.
        :rtype: bool
        """
        return self._copy_by_reference

    @copy_by_reference.setter
    def copy_by_reference(self, copy_by_reference):
        """Sets the copy_by_reference of this Features.


        :param copy_by_reference: The copy_by_reference of this Features.  # noqa: E501
        :type: bool
        """

        self._copy_by_reference = copy_by_reference

    @property
    def core_api(self):
        """Gets the core_api of this Features.


        :return: The core_api of this Features.
        :rtype: bool
        """
        return self._core_api

    @core_api.setter
    def core_api(self, core_api):
        """Sets the core_api of this Features.


        :param core_api: The core_api of this Features.  # noqa: E501
        :type: bool
        """

        self._core_api = core_api

    @property
    def crawler(self):
        """Gets the crawler of this Features.


        :return: The crawler of this Features.
        :rtype: bool
        """
        return self._crawler

    @crawler.setter
    def crawler(self, crawler):
        """Sets the crawler of this Features.


        :param crawler: The crawler of this Features.  # noqa: E501
        :type: bool
        """

        self._crawler = crawler

    @property
    def cvat(self):
        """Gets the cvat of this Features.


        :return: The cvat of this Features.
        :rtype: bool
        """
        return self._cvat

    @cvat.setter
    def cvat(self, cvat):
        """Sets the cvat of this Features.


        :param cvat: The cvat of this Features.  # noqa: E501
        :type: bool
        """

        self._cvat = cvat

    @property
    def data_views_non_21_cfr(self):
        """Gets the data_views_non_21_cfr of this Features.


        :return: The data_views_non_21_cfr of this Features.
        :rtype: bool
        """
        return self._data_views_non_21_cfr

    @data_views_non_21_cfr.setter
    def data_views_non_21_cfr(self, data_views_non_21_cfr):
        """Sets the data_views_non_21_cfr of this Features.


        :param data_views_non_21_cfr: The data_views_non_21_cfr of this Features.  # noqa: E501
        :type: bool
        """

        self._data_views_non_21_cfr = data_views_non_21_cfr

    @property
    def default_viewer_apps(self):
        """Gets the default_viewer_apps of this Features.


        :return: The default_viewer_apps of this Features.
        :rtype: bool
        """
        return self._default_viewer_apps

    @default_viewer_apps.setter
    def default_viewer_apps(self, default_viewer_apps):
        """Sets the default_viewer_apps of this Features.


        :param default_viewer_apps: The default_viewer_apps of this Features.  # noqa: E501
        :type: bool
        """

        self._default_viewer_apps = default_viewer_apps

    @property
    def deid_log(self):
        """Gets the deid_log of this Features.


        :return: The deid_log of this Features.
        :rtype: bool
        """
        return self._deid_log

    @deid_log.setter
    def deid_log(self, deid_log):
        """Sets the deid_log of this Features.


        :param deid_log: The deid_log of this Features.  # noqa: E501
        :type: bool
        """

        self._deid_log = deid_log

    @property
    def deid_profile(self):
        """Gets the deid_profile of this Features.


        :return: The deid_profile of this Features.
        :rtype: bool
        """
        return self._deid_profile

    @deid_profile.setter
    def deid_profile(self, deid_profile):
        """Sets the deid_profile of this Features.


        :param deid_profile: The deid_profile of this Features.  # noqa: E501
        :type: bool
        """

        self._deid_profile = deid_profile

    @property
    def dimse(self):
        """Gets the dimse of this Features.


        :return: The dimse of this Features.
        :rtype: bool
        """
        return self._dimse

    @dimse.setter
    def dimse(self, dimse):
        """Sets the dimse of this Features.


        :param dimse: The dimse of this Features.  # noqa: E501
        :type: bool
        """

        self._dimse = dimse

    @property
    def elastic_search_primary(self):
        """Gets the elastic_search_primary of this Features.


        :return: The elastic_search_primary of this Features.
        :rtype: bool
        """
        return self._elastic_search_primary

    @elastic_search_primary.setter
    def elastic_search_primary(self, elastic_search_primary):
        """Sets the elastic_search_primary of this Features.


        :param elastic_search_primary: The elastic_search_primary of this Features.  # noqa: E501
        :type: bool
        """

        self._elastic_search_primary = elastic_search_primary

    @property
    def exchange(self):
        """Gets the exchange of this Features.


        :return: The exchange of this Features.
        :rtype: bool
        """
        return self._exchange

    @exchange.setter
    def exchange(self, exchange):
        """Sets the exchange of this Features.


        :param exchange: The exchange of this Features.  # noqa: E501
        :type: bool
        """

        self._exchange = exchange

    @property
    def case_uploader(self):
        """Gets the case_uploader of this Features.


        :return: The case_uploader of this Features.
        :rtype: bool
        """
        return self._case_uploader

    @case_uploader.setter
    def case_uploader(self, case_uploader):
        """Sets the case_uploader of this Features.


        :param case_uploader: The case_uploader of this Features.  # noqa: E501
        :type: bool
        """

        self._case_uploader = case_uploader

    @property
    def exchange_admin(self):
        """Gets the exchange_admin of this Features.


        :return: The exchange_admin of this Features.
        :rtype: bool
        """
        return self._exchange_admin

    @exchange_admin.setter
    def exchange_admin(self, exchange_admin):
        """Sets the exchange_admin of this Features.


        :param exchange_admin: The exchange_admin of this Features.  # noqa: E501
        :type: bool
        """

        self._exchange_admin = exchange_admin

    @property
    def external_routing(self):
        """Gets the external_routing of this Features.


        :return: The external_routing of this Features.
        :rtype: bool
        """
        return self._external_routing

    @external_routing.setter
    def external_routing(self, external_routing):
        """Sets the external_routing of this Features.


        :param external_routing: The external_routing of this Features.  # noqa: E501
        :type: bool
        """

        self._external_routing = external_routing

    @property
    def gear_access(self):
        """Gets the gear_access of this Features.


        :return: The gear_access of this Features.
        :rtype: bool
        """
        return self._gear_access

    @gear_access.setter
    def gear_access(self, gear_access):
        """Sets the gear_access of this Features.


        :param gear_access: The gear_access of this Features.  # noqa: E501
        :type: bool
        """

        self._gear_access = gear_access

    @property
    def google_analytics(self):
        """Gets the google_analytics of this Features.


        :return: The google_analytics of this Features.
        :rtype: bool
        """
        return self._google_analytics

    @google_analytics.setter
    def google_analytics(self, google_analytics):
        """Sets the google_analytics of this Features.


        :param google_analytics: The google_analytics of this Features.  # noqa: E501
        :type: bool
        """

        self._google_analytics = google_analytics

    @property
    def healthcare_api(self):
        """Gets the healthcare_api of this Features.


        :return: The healthcare_api of this Features.
        :rtype: bool
        """
        return self._healthcare_api

    @healthcare_api.setter
    def healthcare_api(self, healthcare_api):
        """Sets the healthcare_api of this Features.


        :param healthcare_api: The healthcare_api of this Features.  # noqa: E501
        :type: bool
        """

        self._healthcare_api = healthcare_api

    @property
    def job_ask(self):
        """Gets the job_ask of this Features.


        :return: The job_ask of this Features.
        :rtype: bool
        """
        return self._job_ask

    @job_ask.setter
    def job_ask(self, job_ask):
        """Sets the job_ask of this Features.


        :param job_ask: The job_ask of this Features.  # noqa: E501
        :type: bool
        """

        self._job_ask = job_ask

    @property
    def job_prioritization(self):
        """Gets the job_prioritization of this Features.


        :return: The job_prioritization of this Features.
        :rtype: bool
        """
        return self._job_prioritization

    @job_prioritization.setter
    def job_prioritization(self, job_prioritization):
        """Sets the job_prioritization of this Features.


        :param job_prioritization: The job_prioritization of this Features.  # noqa: E501
        :type: bool
        """

        self._job_prioritization = job_prioritization

    @property
    def job_tickets(self):
        """Gets the job_tickets of this Features.


        :return: The job_tickets of this Features.
        :rtype: bool
        """
        return self._job_tickets

    @job_tickets.setter
    def job_tickets(self, job_tickets):
        """Sets the job_tickets of this Features.


        :param job_tickets: The job_tickets of this Features.  # noqa: E501
        :type: bool
        """

        self._job_tickets = job_tickets

    @property
    def jupyter_integration(self):
        """Gets the jupyter_integration of this Features.


        :return: The jupyter_integration of this Features.
        :rtype: bool
        """
        return self._jupyter_integration

    @jupyter_integration.setter
    def jupyter_integration(self, jupyter_integration):
        """Sets the jupyter_integration of this Features.


        :param jupyter_integration: The jupyter_integration of this Features.  # noqa: E501
        :type: bool
        """

        self._jupyter_integration = jupyter_integration

    @property
    def jupyterhub_external_storage(self):
        """Gets the jupyterhub_external_storage of this Features.


        :return: The jupyterhub_external_storage of this Features.
        :rtype: bool
        """
        return self._jupyterhub_external_storage

    @jupyterhub_external_storage.setter
    def jupyterhub_external_storage(self, jupyterhub_external_storage):
        """Sets the jupyterhub_external_storage of this Features.


        :param jupyterhub_external_storage: The jupyterhub_external_storage of this Features.  # noqa: E501
        :type: bool
        """

        self._jupyterhub_external_storage = jupyterhub_external_storage

    @property
    def ldap_sync(self):
        """Gets the ldap_sync of this Features.


        :return: The ldap_sync of this Features.
        :rtype: bool
        """
        return self._ldap_sync

    @ldap_sync.setter
    def ldap_sync(self, ldap_sync):
        """Sets the ldap_sync of this Features.


        :param ldap_sync: The ldap_sync of this Features.  # noqa: E501
        :type: bool
        """

        self._ldap_sync = ldap_sync

    @property
    def multifactor_auth(self):
        """Gets the multifactor_auth of this Features.


        :return: The multifactor_auth of this Features.
        :rtype: bool
        """
        return self._multifactor_auth

    @multifactor_auth.setter
    def multifactor_auth(self, multifactor_auth):
        """Sets the multifactor_auth of this Features.


        :param multifactor_auth: The multifactor_auth of this Features.  # noqa: E501
        :type: bool
        """

        self._multifactor_auth = multifactor_auth

    @property
    def multipart_signed_url(self):
        """Gets the multipart_signed_url of this Features.


        :return: The multipart_signed_url of this Features.
        :rtype: bool
        """
        return self._multipart_signed_url

    @multipart_signed_url.setter
    def multipart_signed_url(self, multipart_signed_url):
        """Sets the multipart_signed_url of this Features.


        :param multipart_signed_url: The multipart_signed_url of this Features.  # noqa: E501
        :type: bool
        """

        self._multipart_signed_url = multipart_signed_url

    @property
    def multiproject(self):
        """Gets the multiproject of this Features.


        :return: The multiproject of this Features.
        :rtype: bool
        """
        return self._multiproject

    @multiproject.setter
    def multiproject(self, multiproject):
        """Sets the multiproject of this Features.


        :param multiproject: The multiproject of this Features.  # noqa: E501
        :type: bool
        """

        self._multiproject = multiproject

    @property
    def ohif_multi_subject_view(self):
        """Gets the ohif_multi_subject_view of this Features.


        :return: The ohif_multi_subject_view of this Features.
        :rtype: bool
        """
        return self._ohif_multi_subject_view

    @ohif_multi_subject_view.setter
    def ohif_multi_subject_view(self, ohif_multi_subject_view):
        """Sets the ohif_multi_subject_view of this Features.


        :param ohif_multi_subject_view: The ohif_multi_subject_view of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_multi_subject_view = ohif_multi_subject_view

    @property
    def ohif_meteor(self):
        """Gets the ohif_meteor of this Features.


        :return: The ohif_meteor of this Features.
        :rtype: bool
        """
        return self._ohif_meteor

    @ohif_meteor.setter
    def ohif_meteor(self, ohif_meteor):
        """Sets the ohif_meteor of this Features.


        :param ohif_meteor: The ohif_meteor of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_meteor = ohif_meteor

    @property
    def ohif_react(self):
        """Gets the ohif_react of this Features.


        :return: The ohif_react of this Features.
        :rtype: bool
        """
        return self._ohif_react

    @ohif_react.setter
    def ohif_react(self, ohif_react):
        """Sets the ohif_react of this Features.


        :param ohif_react: The ohif_react of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_react = ohif_react

    @property
    def ohif_slice_order(self):
        """Gets the ohif_slice_order of this Features.


        :return: The ohif_slice_order of this Features.
        :rtype: str
        """
        return self._ohif_slice_order

    @ohif_slice_order.setter
    def ohif_slice_order(self, ohif_slice_order):
        """Sets the ohif_slice_order of this Features.


        :param ohif_slice_order: The ohif_slice_order of this Features.  # noqa: E501
        :type: str
        """

        self._ohif_slice_order = ohif_slice_order

    @property
    def ohif_v2_adhoc_indexing(self):
        """Gets the ohif_v2_adhoc_indexing of this Features.


        :return: The ohif_v2_adhoc_indexing of this Features.
        :rtype: bool
        """
        return self._ohif_v2_adhoc_indexing

    @ohif_v2_adhoc_indexing.setter
    def ohif_v2_adhoc_indexing(self, ohif_v2_adhoc_indexing):
        """Sets the ohif_v2_adhoc_indexing of this Features.


        :param ohif_v2_adhoc_indexing: The ohif_v2_adhoc_indexing of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_v2_adhoc_indexing = ohif_v2_adhoc_indexing

    @property
    def ohif_v3(self):
        """Gets the ohif_v3 of this Features.


        :return: The ohif_v3 of this Features.
        :rtype: bool
        """
        return self._ohif_v3

    @ohif_v3.setter
    def ohif_v3(self, ohif_v3):
        """Sets the ohif_v3 of this Features.


        :param ohif_v3: The ohif_v3 of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_v3 = ohif_v3

    @property
    def ohif_v3_default_app(self):
        """Gets the ohif_v3_default_app of this Features.


        :return: The ohif_v3_default_app of this Features.
        :rtype: bool
        """
        return self._ohif_v3_default_app

    @ohif_v3_default_app.setter
    def ohif_v3_default_app(self, ohif_v3_default_app):
        """Sets the ohif_v3_default_app of this Features.


        :param ohif_v3_default_app: The ohif_v3_default_app of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_v3_default_app = ohif_v3_default_app

    @property
    def ohif_v3_readonly(self):
        """Gets the ohif_v3_readonly of this Features.


        :return: The ohif_v3_readonly of this Features.
        :rtype: bool
        """
        return self._ohif_v3_readonly

    @ohif_v3_readonly.setter
    def ohif_v3_readonly(self, ohif_v3_readonly):
        """Sets the ohif_v3_readonly of this Features.


        :param ohif_v3_readonly: The ohif_v3_readonly of this Features.  # noqa: E501
        :type: bool
        """

        self._ohif_v3_readonly = ohif_v3_readonly

    @property
    def project_export(self):
        """Gets the project_export of this Features.


        :return: The project_export of this Features.
        :rtype: bool
        """
        return self._project_export

    @project_export.setter
    def project_export(self, project_export):
        """Sets the project_export of this Features.


        :param project_export: The project_export of this Features.  # noqa: E501
        :type: bool
        """

        self._project_export = project_export

    @property
    def project_import(self):
        """Gets the project_import of this Features.


        :return: The project_import of this Features.
        :rtype: bool
        """
        return self._project_import

    @project_import.setter
    def project_import(self, project_import):
        """Sets the project_import of this Features.


        :param project_import: The project_import of this Features.  # noqa: E501
        :type: bool
        """

        self._project_import = project_import

    @property
    def project_list_uses_stats(self):
        """Gets the project_list_uses_stats of this Features.


        :return: The project_list_uses_stats of this Features.
        :rtype: bool
        """
        return self._project_list_uses_stats

    @project_list_uses_stats.setter
    def project_list_uses_stats(self, project_list_uses_stats):
        """Sets the project_list_uses_stats of this Features.


        :param project_list_uses_stats: The project_list_uses_stats of this Features.  # noqa: E501
        :type: bool
        """

        self._project_list_uses_stats = project_list_uses_stats

    @property
    def project_locking(self):
        """Gets the project_locking of this Features.


        :return: The project_locking of this Features.
        :rtype: bool
        """
        return self._project_locking

    @project_locking.setter
    def project_locking(self, project_locking):
        """Sets the project_locking of this Features.


        :param project_locking: The project_locking of this Features.  # noqa: E501
        :type: bool
        """

        self._project_locking = project_locking

    @property
    def reader_tasks(self):
        """Gets the reader_tasks of this Features.


        :return: The reader_tasks of this Features.
        :rtype: bool
        """
        return self._reader_tasks

    @reader_tasks.setter
    def reader_tasks(self, reader_tasks):
        """Sets the reader_tasks of this Features.


        :param reader_tasks: The reader_tasks of this Features.  # noqa: E501
        :type: bool
        """

        self._reader_tasks = reader_tasks

    @property
    def rts_sync(self):
        """Gets the rts_sync of this Features.


        :return: The rts_sync of this Features.
        :rtype: bool
        """
        return self._rts_sync

    @rts_sync.setter
    def rts_sync(self, rts_sync):
        """Sets the rts_sync of this Features.


        :param rts_sync: The rts_sync of this Features.  # noqa: E501
        :type: bool
        """

        self._rts_sync = rts_sync

    @property
    def sentry_logging(self):
        """Gets the sentry_logging of this Features.


        :return: The sentry_logging of this Features.
        :rtype: bool
        """
        return self._sentry_logging

    @sentry_logging.setter
    def sentry_logging(self, sentry_logging):
        """Sets the sentry_logging of this Features.


        :param sentry_logging: The sentry_logging of this Features.  # noqa: E501
        :type: bool
        """

        self._sentry_logging = sentry_logging

    @property
    def session_templates_non_21_cfr(self):
        """Gets the session_templates_non_21_cfr of this Features.


        :return: The session_templates_non_21_cfr of this Features.
        :rtype: bool
        """
        return self._session_templates_non_21_cfr

    @session_templates_non_21_cfr.setter
    def session_templates_non_21_cfr(self, session_templates_non_21_cfr):
        """Sets the session_templates_non_21_cfr of this Features.


        :param session_templates_non_21_cfr: The session_templates_non_21_cfr of this Features.  # noqa: E501
        :type: bool
        """

        self._session_templates_non_21_cfr = session_templates_non_21_cfr

    @property
    def shared_projects(self):
        """Gets the shared_projects of this Features.


        :return: The shared_projects of this Features.
        :rtype: bool
        """
        return self._shared_projects

    @shared_projects.setter
    def shared_projects(self, shared_projects):
        """Sets the shared_projects of this Features.


        :param shared_projects: The shared_projects of this Features.  # noqa: E501
        :type: bool
        """

        self._shared_projects = shared_projects

    @property
    def signed_url(self):
        """Gets the signed_url of this Features.


        :return: The signed_url of this Features.
        :rtype: bool
        """
        return self._signed_url

    @signed_url.setter
    def signed_url(self, signed_url):
        """Sets the signed_url of this Features.


        :param signed_url: The signed_url of this Features.  # noqa: E501
        :type: bool
        """

        self._signed_url = signed_url

    @property
    def study_task_status(self):
        """Gets the study_task_status of this Features.


        :return: The study_task_status of this Features.
        :rtype: bool
        """
        return self._study_task_status

    @study_task_status.setter
    def study_task_status(self, study_task_status):
        """Sets the study_task_status of this Features.


        :param study_task_status: The study_task_status of this Features.  # noqa: E501
        :type: bool
        """

        self._study_task_status = study_task_status

    @property
    def tagging(self):
        """Gets the tagging of this Features.


        :return: The tagging of this Features.
        :rtype: bool
        """
        return self._tagging

    @tagging.setter
    def tagging(self, tagging):
        """Sets the tagging of this Features.


        :param tagging: The tagging of this Features.  # noqa: E501
        :type: bool
        """

        self._tagging = tagging

    @property
    def tags_in_lists(self):
        """Gets the tags_in_lists of this Features.


        :return: The tags_in_lists of this Features.
        :rtype: bool
        """
        return self._tags_in_lists

    @tags_in_lists.setter
    def tags_in_lists(self, tags_in_lists):
        """Sets the tags_in_lists of this Features.


        :param tags_in_lists: The tags_in_lists of this Features.  # noqa: E501
        :type: bool
        """

        self._tags_in_lists = tags_in_lists

    @property
    def task_manager_data_views(self):
        """Gets the task_manager_data_views of this Features.


        :return: The task_manager_data_views of this Features.
        :rtype: bool
        """
        return self._task_manager_data_views

    @task_manager_data_views.setter
    def task_manager_data_views(self, task_manager_data_views):
        """Sets the task_manager_data_views of this Features.


        :param task_manager_data_views: The task_manager_data_views of this Features.  # noqa: E501
        :type: bool
        """

        self._task_manager_data_views = task_manager_data_views

    @property
    def transform_search_fields(self):
        """Gets the transform_search_fields of this Features.


        :return: The transform_search_fields of this Features.
        :rtype: bool
        """
        return self._transform_search_fields

    @transform_search_fields.setter
    def transform_search_fields(self, transform_search_fields):
        """Sets the transform_search_fields of this Features.


        :param transform_search_fields: The transform_search_fields of this Features.  # noqa: E501
        :type: bool
        """

        self._transform_search_fields = transform_search_fields

    @property
    def unsafe_login(self):
        """Gets the unsafe_login of this Features.


        :return: The unsafe_login of this Features.
        :rtype: bool
        """
        return self._unsafe_login

    @unsafe_login.setter
    def unsafe_login(self, unsafe_login):
        """Sets the unsafe_login of this Features.


        :param unsafe_login: The unsafe_login of this Features.  # noqa: E501
        :type: bool
        """

        self._unsafe_login = unsafe_login

    @property
    def url_access_apps(self):
        """Gets the url_access_apps of this Features.


        :return: The url_access_apps of this Features.
        :rtype: bool
        """
        return self._url_access_apps

    @url_access_apps.setter
    def url_access_apps(self, url_access_apps):
        """Sets the url_access_apps of this Features.


        :param url_access_apps: The url_access_apps of this Features.  # noqa: E501
        :type: bool
        """

        self._url_access_apps = url_access_apps

    @property
    def userpilot(self):
        """Gets the userpilot of this Features.


        :return: The userpilot of this Features.
        :rtype: bool
        """
        return self._userpilot

    @userpilot.setter
    def userpilot(self, userpilot):
        """Sets the userpilot of this Features.


        :param userpilot: The userpilot of this Features.  # noqa: E501
        :type: bool
        """

        self._userpilot = userpilot

    @property
    def validate_classification(self):
        """Gets the validate_classification of this Features.


        :return: The validate_classification of this Features.
        :rtype: bool
        """
        return self._validate_classification

    @validate_classification.setter
    def validate_classification(self, validate_classification):
        """Sets the validate_classification of this Features.


        :param validate_classification: The validate_classification of this Features.  # noqa: E501
        :type: bool
        """

        self._validate_classification = validate_classification

    @property
    def engine_validate_classification(self):
        """Gets the engine_validate_classification of this Features.


        :return: The engine_validate_classification of this Features.
        :rtype: bool
        """
        return self._engine_validate_classification

    @engine_validate_classification.setter
    def engine_validate_classification(self, engine_validate_classification):
        """Sets the engine_validate_classification of this Features.


        :param engine_validate_classification: The engine_validate_classification of this Features.  # noqa: E501
        :type: bool
        """

        self._engine_validate_classification = engine_validate_classification

    @property
    def virus_scan(self):
        """Gets the virus_scan of this Features.


        :return: The virus_scan of this Features.
        :rtype: bool
        """
        return self._virus_scan

    @virus_scan.setter
    def virus_scan(self, virus_scan):
        """Sets the virus_scan of this Features.


        :param virus_scan: The virus_scan of this Features.  # noqa: E501
        :type: bool
        """

        self._virus_scan = virus_scan

    @property
    def legacy_dicom_uploader(self):
        """Gets the legacy_dicom_uploader of this Features.


        :return: The legacy_dicom_uploader of this Features.
        :rtype: bool
        """
        return self._legacy_dicom_uploader

    @legacy_dicom_uploader.setter
    def legacy_dicom_uploader(self, legacy_dicom_uploader):
        """Sets the legacy_dicom_uploader of this Features.


        :param legacy_dicom_uploader: The legacy_dicom_uploader of this Features.  # noqa: E501
        :type: bool
        """

        self._legacy_dicom_uploader = legacy_dicom_uploader

    @property
    def tasks_refactor(self):
        """Gets the tasks_refactor of this Features.


        :return: The tasks_refactor of this Features.
        :rtype: bool
        """
        return self._tasks_refactor

    @tasks_refactor.setter
    def tasks_refactor(self, tasks_refactor):
        """Sets the tasks_refactor of this Features.


        :param tasks_refactor: The tasks_refactor of this Features.  # noqa: E501
        :type: bool
        """

        self._tasks_refactor = tasks_refactor


    @staticmethod
    def positional_to_model(value):
        """Converts a positional argument to a model value"""
        return value

    def return_value(self):
        """Unwraps return value from model"""
        return self

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Features):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

    # Container emulation
    def __getitem__(self, key):
        """Returns the value of key"""
        key = self._map_key(key)
        return getattr(self, key)

    def __setitem__(self, key, value):
        """Sets the value of key"""
        key = self._map_key(key)
        setattr(self, key, value)

    def __contains__(self, key):
        """Checks if the given value is a key in this object"""
        key = self._map_key(key, raise_on_error=False)
        return key is not None

    def keys(self):
        """Returns the list of json properties in the object"""
        return self.__class__.rattribute_map.keys()

    def values(self):
        """Returns the list of values in the object"""
        for key in self.__class__.attribute_map.keys():
            yield getattr(self, key)

    def items(self):
        """Returns the list of json property to value mapping"""
        for key, prop in self.__class__.rattribute_map.items():
            yield key, getattr(self, prop)

    def get(self, key, default=None):
        """Get the value of the provided json property, or default"""
        key = self._map_key(key, raise_on_error=False)
        if key:
            return getattr(self, key, default)
        return default

    def _map_key(self, key, raise_on_error=True):
        result = self.__class__.rattribute_map.get(key)
        if result is None:
            if raise_on_error:
                raise AttributeError('Invalid attribute name: {}'.format(key))
            return None
        return '_' + result
