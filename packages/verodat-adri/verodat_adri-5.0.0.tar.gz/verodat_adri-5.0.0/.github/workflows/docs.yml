name: Deploy Documentation to GitHub Pages

on:
  # Deploy docs on releases (stable for package consumers)
  release:
    types: [published]

  # Test docs builds on PRs (validate before release)
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'

  # Manual deployment trigger
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Use Node 20 on GitHub runners, but avoid downloads under act (local) where Node is preinstalled
      - name: Setup Node.js
        if: ${{ !env.ACT }}
        uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Setup Node.js (act local)
        if: ${{ env.ACT }}
        run: |
          echo "Using preinstalled Node & npm under act:"
          node -v
          npm -v

      - name: Install dependencies
        run: |
          cd docs
          npm ci

      - name: Build website
        run: |
          cd docs
          npm run build

      # Pages deployment disabled - docs are internal only
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5

      # - name: Upload artifact for deployment
      #   uses: actions/upload-pages-artifact@v4
      #   with:
      #     path: docs/build

      # Also upload regular artifact for testing
      - name: Upload build artifact for testing
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: docs/build

  # Test deployment preparation (runs on PRs)
  test-deployment:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: docs-build
          path: ./test-deployment

      - name: Test deployment readiness
        run: |
          echo "üß™ Testing deployment readiness..."

          # Verify build artifacts exist
          if [ ! -f "./test-deployment/index.html" ]; then
            echo "‚ùå Missing index.html"
            exit 1
          fi

          # Check for essential files
          REQUIRED_FILES=("index.html")
          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "./test-deployment/$file" ]; then
              echo "‚ùå Missing required file: $file"
              exit 1
            fi
          done

          # Verify base URL configuration
          if ! grep -q "/adri/" "./test-deployment/index.html"; then
            echo "‚ùå Base URL not properly configured"
            exit 1
          fi

          echo "‚úÖ Deployment artifacts are ready"
          echo "‚úÖ Base URL configuration verified"
          echo "‚úÖ All required files present"
          echo ""
          echo "üöÄ This build would deploy successfully to:"
          echo "   https://adri-standard.github.io/adri/"

  # Pages deployment disabled - docs are internal only
  # Uncomment below to enable public documentation deployment
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
