[project]
name = "lightly-studio"
version = "0.4.0"
description = "LightlyStudio is a lightweight, fast, and easy-to-use data exploration tool for data scientists and engineers."
readme = "USAGE.md"
requires-python = ">=3.8,<3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

dependencies = [
    "annotated-types==0.7.0",
    "duckdb-engine>=0.15.0,<0.17",
    "duckdb>=1.2.2,<1.3",
    "fastapi>=0.115.5",
    "fsspec>=2023.1.0",
    "sqlmodel>=0.0.22",
    "typing-extensions>=4.12.2",
    "uvicorn>=0.32.1",
    "labelformat>=0.1.7",
    "tqdm>=4.65.0",
    "eval-type-backport>=0.2.2",
    "xxhash>=3.5.0",
    "scikit-learn==1.3.2",
    "faster-coco-eval>=1.6.5",
    "python-multipart>=0.0.20",
    "environs<12.0.0",
    "open-clip-torch>=2.20.0",
    # Public Mundig versions are found at https://pypi.org/project/lightly-mundig/
    # Internal Mundig versions are found at
    # https://console.cloud.google.com/artifacts/python/boris-250909/europe-west3/lightly-pypi/lightly-mundig
    #
    # To update to an internal version, first install the new version
    # uv pip install --upgrade --keyring-provider subprocess --extra-index-url \
    #   https://oauth2accesstoken@europe-west3-python.pkg.dev/boris-250909/lightly-pypi/simple/ \
    #   lightly-mundig==$version
    # Then lock the version. The uv.lock file is updated accordingly.
    # uv lock --upgrade-package lightly-mundig==$version
    "lightly-mundig==0.1.7",
    "pyarrow>=17.0.0",
]

[project.optional-dependencies]
lightly-edge = [
    "lightly-edge-sdk>=1.0.1b2",
    "opencv-python",
]
cloud-storage = [
    "s3fs>=2023.1.0",
    "gcsfs>=2023.1.0",
    "adlfs>=2023.1.0",
]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "httpx>=0.27.2",
    "moto[server]>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest>=8.3.3",
    "ruff>=0.7.4",
    "hatchling>=1.27.0",
    "mypy>=1.14.1",
    "types-boto3>=1.26.0",
    "types-tqdm>=4.67.0.20241221",
    "types-PyYAML>=6.0.0",
    "pytest-xdist>=3.6.1",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocstrings-python>=1.8.0",
    "pymdown-extensions>=10.0.0",
]


[tool.mypy]
strict = true
disallow_untyped_defs = true
ignore_missing_imports = false
exclude = [
    "datasets/",
    "vendor/"
]

[[tool.mypy.overrides]]
module = "fsspec.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyarrow.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sklearn.manifold.*"
ignore_missing_imports = true


[tool.pytest.ini_options]
# Make pytest discover all files in the tests directory. This is useful for showing
# detailed assertion errors outside of the test file, for example when using a helper
# function from `tests/helpers.py`.
python_files = "tests/*.py tests/**/*.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["src/lightly_studio"]

[tool.hatch.build.targets.wheel]
packages = ["src/lightly_studio"]

[tool.uv.sources]
lightly-edge-sdk = { index = "lightly-pypi" }
# When you want to use public PyPi mundig versions, comment out the line below.
lightly_mundig = { index = "lightly-pypi" }

[tool.uv]
keyring-provider = "subprocess"
required-version = ">=0.8.17"

[[tool.uv.index]]
name = "lightly-pypi"
url = "https://oauth2accesstoken@europe-west3-python.pkg.dev/boris-250909/lightly-pypi/simple/"
explicit = true

[tool.hatch.build]
artifacts = [
    "src/lightly_studio/**/*",
]

[tool.ruff]
extend-exclude = [
    "docs",
]
