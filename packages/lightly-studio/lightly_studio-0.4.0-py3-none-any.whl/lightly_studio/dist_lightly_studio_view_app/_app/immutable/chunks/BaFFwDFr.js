var q=Object.defineProperty;var E=(e,t,r)=>t in e?q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var w=(e,t,r)=>E(e,typeof t!="symbol"?t+"":t,r);const U={bodySerializer:e=>JSON.stringify(e,(t,r)=>typeof r=="bigint"?r.toString():r)},V=async(e,t)=>{const r=typeof t=="function"?await t(e):t;if(r)return e.scheme==="bearer"?`Bearer ${r}`:e.scheme==="basic"?`Basic ${btoa(r)}`:r},P=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},W=e=>{switch(e){case"form":return",";case"pipeDelimited":return"|";case"spaceDelimited":return"%20";default:return","}},k=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},x=({allowReserved:e,explode:t,name:r,style:i,value:n})=>{if(!t){const a=(e?n:n.map(c=>encodeURIComponent(c))).join(W(i));switch(i){case"label":return`.${a}`;case"matrix":return`;${r}=${a}`;case"simple":return a;default:return`${r}=${a}`}}const o=P(i),s=n.map(a=>i==="label"||i==="simple"?e?a:encodeURIComponent(a):_({allowReserved:e,name:r,value:a})).join(o);return i==="label"||i==="matrix"?o+s:s},_=({allowReserved:e,name:t,value:r})=>{if(r==null)return"";if(typeof r=="object")throw new Error("Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.");return`${t}=${e?r:encodeURIComponent(r)}`},D=({allowReserved:e,explode:t,name:r,style:i,value:n,valueOnly:o})=>{if(n instanceof Date)return o?n.toISOString():`${r}=${n.toISOString()}`;if(i!=="deepObject"&&!t){let c=[];Object.entries(n).forEach(([p,y])=>{c=[...c,p,e?y:encodeURIComponent(y)]});const f=c.join(",");switch(i){case"form":return`${r}=${f}`;case"label":return`.${f}`;case"matrix":return`;${r}=${f}`;default:return f}}const s=k(i),a=Object.entries(n).map(([c,f])=>_({allowReserved:e,name:i==="deepObject"?`${r}[${c}]`:c,value:f})).join(s);return i==="label"||i==="matrix"?s+a:a},H=/\{[^{}]+\}/g,N=({path:e,url:t})=>{let r=t;const i=t.match(H);if(i)for(const n of i){let o=!1,s=n.substring(1,n.length-1),a="simple";s.endsWith("*")&&(o=!0,s=s.substring(0,s.length-1)),s.startsWith(".")?(s=s.substring(1),a="label"):s.startsWith(";")&&(s=s.substring(1),a="matrix");const c=e[s];if(c==null)continue;if(Array.isArray(c)){r=r.replace(n,x({explode:o,name:s,style:a,value:c}));continue}if(typeof c=="object"){r=r.replace(n,D({explode:o,name:s,style:a,value:c,valueOnly:!0}));continue}if(a==="matrix"){r=r.replace(n,`;${_({name:s,value:c})}`);continue}const f=encodeURIComponent(a==="label"?`.${c}`:c);r=r.replace(n,f)}return r},I=({allowReserved:e,array:t,object:r}={})=>n=>{const o=[];if(n&&typeof n=="object")for(const s in n){const a=n[s];if(a!=null)if(Array.isArray(a)){const c=x({allowReserved:e,explode:!0,name:s,style:"form",value:a,...t});c&&o.push(c)}else if(typeof a=="object"){const c=D({allowReserved:e,explode:!0,name:s,style:"deepObject",value:a,...r});c&&o.push(c)}else{const c=_({allowReserved:e,name:s,value:a});c&&o.push(c)}}return o.join("&")},B=e=>{var r;if(!e)return"stream";const t=(r=e.split(";")[0])==null?void 0:r.trim();if(t){if(t.startsWith("application/json")||t.endsWith("+json"))return"json";if(t==="multipart/form-data")return"formData";if(["application/","audio/","image/","video/"].some(i=>t.startsWith(i)))return"blob";if(t.startsWith("text/"))return"text"}},L=async({security:e,...t})=>{for(const r of e){const i=await V(r,t.auth);if(!i)continue;const n=r.name??"Authorization";switch(r.in){case"query":t.query||(t.query={}),t.query[n]=i;break;case"cookie":t.headers.append("Cookie",`${n}=${i}`);break;case"header":default:t.headers.set(n,i);break}return}},A=e=>J({baseUrl:e.baseUrl,path:e.path,query:e.query,querySerializer:typeof e.querySerializer=="function"?e.querySerializer:I(e.querySerializer),url:e.url}),J=({baseUrl:e,path:t,query:r,querySerializer:i,url:n})=>{const o=n.startsWith("/")?n:`/${n}`;let s=(e??"")+o;t&&(s=N({path:t,url:s}));let a=r?i(r):"";return a.startsWith("?")&&(a=a.substring(1)),a&&(s+=`?${a}`),s},C=(e,t)=>{var i;const r={...e,...t};return(i=r.baseUrl)!=null&&i.endsWith("/")&&(r.baseUrl=r.baseUrl.substring(0,r.baseUrl.length-1)),r.headers=$(e.headers,t.headers),r},$=(...e)=>{const t=new Headers;for(const r of e){if(!r||typeof r!="object")continue;const i=r instanceof Headers?r.entries():Object.entries(r);for(const[n,o]of i)if(o===null)t.delete(n);else if(Array.isArray(o))for(const s of o)t.append(n,s);else o!==void 0&&t.set(n,typeof o=="object"?JSON.stringify(o):o)}return t};class b{constructor(){w(this,"_fns");this._fns=[]}clear(){this._fns=[]}getInterceptorIndex(t){return typeof t=="number"?this._fns[t]?t:-1:this._fns.indexOf(t)}exists(t){const r=this.getInterceptorIndex(t);return!!this._fns[r]}eject(t){const r=this.getInterceptorIndex(t);this._fns[r]&&(this._fns[r]=null)}update(t,r){const i=this.getInterceptorIndex(t);return this._fns[i]?(this._fns[i]=r,t):!1}use(t){return this._fns=[...this._fns,t],this._fns.length-1}}const M=()=>({error:new b,request:new b,response:new b}),Q=I({allowReserved:!1,array:{explode:!0,style:"form"},object:{explode:!0,style:"deepObject"}}),v={"Content-Type":"application/json"},z=(e={})=>({...U,headers:v,parseAs:"auto",querySerializer:Q,...e}),F=(e={})=>{let t=C(z(),e);const r=()=>({...t}),i=s=>(t=C(t,s),r()),n=M(),o=async s=>{const a={...t,...s,fetch:s.fetch??t.fetch??globalThis.fetch,headers:$(t.headers,s.headers)};a.security&&await L({...a,security:a.security}),a.requestValidator&&await a.requestValidator(a),a.body&&a.bodySerializer&&(a.body=a.bodySerializer(a.body)),(a.body===void 0||a.body==="")&&a.headers.delete("Content-Type");const c=A(a),f={redirect:"follow",...a};let p=new Request(c,f);for(const l of n.request._fns)l&&(p=await l(p,a));const y=a.fetch;let u=await y(p);for(const l of n.response._fns)l&&(u=await l(u,p,a));const g={request:p,response:u};if(u.ok){if(u.status===204||u.headers.get("Content-Length")==="0")return a.responseStyle==="data"?{}:{data:{},...g};const l=(a.parseAs==="auto"?B(u.headers.get("Content-Type")):a.parseAs)??"json";let h;switch(l){case"arrayBuffer":case"blob":case"formData":case"json":case"text":h=await u[l]();break;case"stream":return a.responseStyle==="data"?u.body:{data:u.body,...g}}return l==="json"&&(a.responseValidator&&await a.responseValidator(h),a.responseTransformer&&(h=await a.responseTransformer(h))),a.responseStyle==="data"?h:{data:h,...g}}const T=await u.text();let j;try{j=JSON.parse(T)}catch{}const S=j??T;let m=S;for(const l of n.error._fns)l&&(m=await l(S,u,p,a));if(m=m||{},a.throwOnError)throw m;return a.responseStyle==="data"?void 0:{error:m,...g}};return{buildUrl:A,connect:s=>o({...s,method:"CONNECT"}),delete:s=>o({...s,method:"DELETE"}),get:s=>o({...s,method:"GET"}),getConfig:r,head:s=>o({...s,method:"HEAD"}),interceptors:n,options:s=>o({...s,method:"OPTIONS"}),patch:s=>o({...s,method:"PATCH"}),post:s=>o({...s,method:"POST"}),put:s=>o({...s,method:"PUT"}),request:o,setConfig:i,trace:s=>o({...s,method:"TRACE"})}},G=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),K=async e=>(e=e.map(t=>G(t)),e),X=e=>(e.created_at&&(e.created_at=new Date(e.created_at)),e.updated_at&&(e.updated_at=new Date(e.updated_at)),e),Y=async e=>(e=X(e),e),O=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),Z=async e=>(e=e.map(t=>O(t)),e),ee=async e=>(e=O(e),e),te=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),R=e=>(e.tags=e.tags.map(t=>te(t)),e),re=e=>(e.data=e.data.map(t=>R(t)),e),ae=async e=>(e=re(e),e),se=async e=>(e=R(e),e),ne=e=>(e.created_at&&(e.created_at=new Date(e.created_at)),e),ie=async e=>(e=e.map(t=>ne(t)),e),oe=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),ce=async e=>(e=oe(e),e),d=F(z()),ue=e=>((e==null?void 0:e.client)??d).get({responseTransformer:K,url:"/api/datasets",...e}),le=e=>(e.client??d).get({responseTransformer:Y,url:"/api/datasets/{dataset_id}",...e}),fe=e=>(e.client??d).get({responseTransformer:Z,url:"/api/datasets/{dataset_id}/tags",...e}),pe=e=>(e.client??d).post({responseTransformer:ee,url:"/api/datasets/{dataset_id}/tags",...e,headers:{"Content-Type":"application/json",...e.headers}}),he=e=>(e.client??d).post({url:"/api/datasets/{dataset_id}/tags/{tag_id}/add/samples",...e,headers:{"Content-Type":"application/json",...e.headers}}),me=e=>(e.client??d).post({url:"/api/datasets/{dataset_id}/tags/{tag_id}/add/annotations",...e,headers:{"Content-Type":"application/json",...e.headers}}),ye=e=>(e.client??d).post({responseTransformer:ae,url:"/api/datasets/{dataset_id}/samples/list",...e,headers:{"Content-Type":"application/json",...e.headers}}),ge=e=>(e.client??d).get({responseTransformer:se,url:"/api/datasets/{dataset_id}/samples/{sample_id}",...e}),_e=e=>(e.client??d).delete({url:"/api/datasets/{dataset_id}/samples/{sample_id}/tag/{tag_id}",...e}),be=e=>((e==null?void 0:e.client)??d).get({url:"/api/annotation_labels",...e}),Te=e=>(e.client??d).post({url:"/api/annotation_labels",...e,headers:{"Content-Type":"application/json",...e.headers}}),je=e=>(e.client??d).get({url:"/api/datasets/{dataset_id}/annotations",...e}),Se=e=>(e.client??d).post({url:"/api/datasets/{dataset_id}/annotations",...e,headers:{"Content-Type":"application/json",...e.headers}}),we=e=>(e.client??d).put({responseTransformer:ie,url:"/api/datasets/{dataset_id}/annotations",...e,headers:{"Content-Type":"application/json",...e.headers}}),Ae=e=>(e.client??d).get({url:"/api/datasets/{dataset_id}/annotations/count",...e,headers:{"Content-Type":"application/json",...e.headers}}),Ce=e=>(e.client??d).delete({url:"/api/datasets/{dataset_id}/annotations/{annotation_id}",...e}),xe=e=>(e.client??d).get({url:"/api/datasets/{dataset_id}/annotations/{annotation_id}",...e}),De=e=>(e.client??d).get({url:"/api/datasets/{dataset_id}/captions",...e}),Ie=e=>((e==null?void 0:e.client)??d).get({responseTransformer:ce,url:"/api/settings",...e}),$e=e=>(e.client??d).get({url:"/api/classifiers/{classifier_id}/sample_history",...e}),ze=e=>((e==null?void 0:e.client)??d).post({url:"/api/embeddings2d/default",...e,headers:{"Content-Type":"application/json",...e==null?void 0:e.headers}}),Oe=e=>(e.client??d).get({url:"/api/datasets/{dataset_id}/metadata/info",...e}),Re=e=>(e.client??d).post({url:"/api/datasets/{dataset_id}/metadata/typicality",...e,headers:{"Content-Type":"application/json",...e.headers}}),qe=e=>(e.client??d).post({url:"/api/datasets/{dataset_id}/selection",...e,headers:{"Content-Type":"application/json",...e.headers}});export{fe as a,le as b,ye as c,d,Ce as e,_e as f,Oe as g,Se as h,Te as i,ge as j,be as k,Ae as l,De as m,je as n,xe as o,ze as p,Ie as q,ue as r,pe as s,he as t,we as u,me as v,qe as w,Re as x,$e as y};
