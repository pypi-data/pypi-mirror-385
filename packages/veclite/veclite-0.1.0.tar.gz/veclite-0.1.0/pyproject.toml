[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "veclite"
version = "0.1.0"
description = "A schema-first SQLite ORM with built-in vector embeddings and hybrid search"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Lucas Astorian", email = "your.email@example.com"}
]
maintainers = [
    {name = "Lucas Astorian", email = "your.email@example.com"}
]
keywords = [
    "sqlite",
    "orm",
    "vector-database",
    "embeddings",
    "semantic-search",
    "hybrid-search",
    "rag",
    "vector-search",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.20.0",
    "lmdb>=1.3.0",
]

[project.optional-dependencies]
voyage = ["voyageai>=0.2.0", "tenacity>=8.0.0"]
all = ["voyageai>=0.2.0", "tenacity>=8.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/veclite"
Documentation = "https://github.com/yourusername/veclite#readme"
Repository = "https://github.com/yourusername/veclite"
Issues = "https://github.com/yourusername/veclite/issues"
Changelog = "https://github.com/yourusername/veclite/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["veclite*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
veclite = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]
