[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rail-score-sdk"
version = "1.0.0"
description = "Official Python SDK for RAIL Score API - Responsible AI Content Evaluation"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Responsible AI Labs Team", email = "research@responsibleailabs.ai"}
]
maintainers = [
    {name = "Responsible AI Labs Team", email = "research@responsibleailabs.ai"}
]
keywords = [
    "rail",
    "ai-ethics",
    "content-evaluation",
    "responsible-ai",
    "ai-safety",
    "content-moderation",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.990",
    "types-requests>=2.28.0",
]

[project.urls]
Homepage = "https://github.com/RAILethicsHub/sdks/python"
Documentation = "https://responsibleailabs.ai/developer/docs"
"API Reference" = "https://responsibleailabs.ai/developers/api-ref"
Repository = "https://github.com/RAILethicsHub/sdks/python"
"Bug Reports" = "https://github.com/RAILethicsHub/sdks/python/issues"
Changelog = "https://github.com/RAILethicsHub/sdks/python/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["rail_score_sdk"]

[tool.setuptools.package-data]
rail_score_sdk = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "requests.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=rail_score_sdk",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["rail_score_sdk"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    "venv",
]
