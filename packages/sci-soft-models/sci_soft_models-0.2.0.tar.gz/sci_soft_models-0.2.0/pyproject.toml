# package build
# https://peps.python.org/pep-0517/
[build-system]
requires = [
  "setuptools>=65",
  "wheel",
  "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

# package basics
# https://peps.python.org/pep-0621/
[project]
name = "sci-soft-models"
description = "Computational Models for Understanding Scientific Software"
keywords = []
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT License" }
authors = [
  { email = "evamaxfieldbrown@gmail.com", name = "Eva Maxfield Brown" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]
dependencies = [
  "dataclasses-json>=0.6,<0.7",
  "numpy>=1,<3",
  "requests>=2,<3",
  "torch>=2,<3",
  "transformers[torch,sentencepiece]>=4.48,<5",
]

[project.urls]
Homepage = "https://github.com/evamaxfield/sci-soft-models"
"Bug Tracker" = "https://github.com/evamaxfield/sci-soft-models/issues"
Documentation = "https://evamaxfield.github.io/sci-soft-models"
"User Support" = "https://github.com/evamaxfield/sci-soft-models/issues"

# extra dependencies
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
lint = [
  "pre-commit>=2.20.0",
]
dev = [
  "ipython",
  "jupyterlab",
]
data = [
  "dvuploader>=0.3.0",
  "easyDataverse>=0.4,<0.5",
]
test = [
  "pytest>=8,<9",
]
training = [
  "datasets>=2,<3",
  "einops>=0.8,<0.9",
  "matplotlib>=3,<4",
  "scikit-learn>=1,<2",
  "python-dotenv==1.0.1",
  "pandas>=1,<3",
  "protobuf>=5,<6",
  "pyarrow>=12",
  "tabulate>=0.9,<0.10",
  "tiktoken>=0.9,<0.10",
  "tqdm>=4,<5",
  "typer>=0.15,<0.16",
]
coiled = [
  "bokeh>=3,<4",
  "coiled>=1.76,<2",
  "distributed",
]

# entry points
# https://peps.python.org/pep-0621/#entry-points
[project.entry-points."console_scripts"]
sci-soft-models-cli = "sci_soft_models.bin.cli:main"

# build settings
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["*docs/*", "*tests/*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "py.typed", "**/data/files/**"]

# tools
[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py310"
extend-select = [
    "E",      # style errors
    "F",      # flakes
    "D",      # pydocstyle
    "I001",   # isort
    "UP",     # pyupgrade
    "N",      # pep8-naming
    # "S",    # bandit
    "C",      # flake8-comprehensions
    "B",      # flake8-bugbear
    "A001",   # flake8-builtins
    "RUF",    # ruff-specific rules
    "RUF100", # Unused noqa directive
]
extend-ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D103", # Missing docstring in public function
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line required between summary line and description
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.per-file-ignores]
"**/notebooks/*" = ["E501", "B018"]
"**/tests/*.py" = ["D"]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
show_error_codes = true