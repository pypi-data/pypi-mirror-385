# This file is autogenerated by maturin v1.9.2
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  wheel:
    name: Build Wheel
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            cibw-archs: auto64
          - os: ubuntu-24.04-arm
          - os: macos-latest
          - os: windows-latest
          - os: windows-11-arm

    defaults:
      run:
        shell: nu {0}

    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: docker/setup-qemu-action@v3
        if: runner.os == 'Linux'
      - uses: astral-sh/setup-uv@v7

      - name: Set up CIBW-ARCHS
        if: matrix.cibw-archs
        run: echo "CIBW_ARCHS=${{ matrix.cibw-archs }}" | save -a $env.GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2

      - run: ls wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  wheel-riscv64:
    name: Build Wheel riscv64
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: nu {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: riscv64gc-unknown-linux-gnu
            manylinux: auto
            args: --out dist
          - target: riscv64gc-unknown-linux-musl
            manylinux: musllinux_1_2
            args: --out dist --zig

    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - uses: pyo3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: ${{ matrix.args }}

      - run: ls dist

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-riscv64-${{ strategy.job-index }}
          path: ./dist/*.whl
          if-no-files-found: error

  sdist:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: nu {0}
    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: astral-sh/setup-uv@v7

      - name: Build sdist
        run: uv build --sdist

      - run: ls dist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [wheel, wheel-riscv64, sdist]
    environment: publish
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: dist
          merge-multiple: true
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: "dist/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@release/v1
