[project]
name = "krcf"
authors = [{ name = "Dowon", email = "ks2515@naver.com" }]
description = "AWS Random Cut Forest for Python"
license = "Apache-2.0"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["random cut forest", "rcf", "anomaly detection"]
dynamic = ["version"]
dependencies = ["typing-extensions; python_version < '3.11'"]
readme = "README.md"

[project.optional-dependencies]
test = [
    "hypothesis[pytest,numpy]",
    "pytest-pretty",
    "pytest-xdist",
    "pytest-benchmark",
    "syrupy",
    "jsonpickle",
    "msgpack",
]

[project.urls]
source = "https://github.com/Bing-su/krcf"

[dependency-groups]
dev = ["ruff", "typing-extensions", "nox[uv]"]

[build-system]
requires = ["maturin>=1.9,<2.0"]
build-backend = "maturin"

[tool.maturin]
python-source = "python"
profile = "release"
features = ["pyo3/abi3-py39"]

[tool.uv]
default-groups = "all"

[tool.ruff.lint]
select = [
    "A",
    "B",
    "C4",
    "C90",
    "E",
    "EM",
    "F",
    "FA",
    "FAST",
    "FBT",
    "FURB",
    "I001",
    "ISC",
    "N",
    "PD",
    "PERF",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T20",
    "TC",
    "TRY",
    "UP",
    "W",
]
ignore = ["B905", "E501", "PLR2004"]

[tool.ruff.lint.per-file-ignores]
"*_test.py" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["krcf"]

[tool.cibuildwheel]
build-frontend = "build[uv]"
test-extras = ["test"]
test-command = "pytest -n 2 {project}"
enable = ["pypy"]
test-skip = ["cp39-win_arm64", "cp310-win_arm64"]

[tool.cibuildwheel.macos]
before-build = "rustup target add x86_64-apple-darwin"
archs = ["x86_64", "arm64"]

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.15"

[tool.cibuildwheel.linux]
before-build = [
    "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y",
    "command -v dnf >/dev/null 2>&1 && dnf install -y openssl-devel || (command -v apk >/dev/null 2>&1 && apk add openssl-dev)",
]
archs = ["auto64"]

[tool.cibuildwheel.linux.environment]
MATURIN_NO_INSTALL_RUST = "1"
PATH = "$HOME/.cargo/bin:$HOME/.local/bin:$PATH"

[tool.cibuildwheel.windows]
archs = ["auto64"]
