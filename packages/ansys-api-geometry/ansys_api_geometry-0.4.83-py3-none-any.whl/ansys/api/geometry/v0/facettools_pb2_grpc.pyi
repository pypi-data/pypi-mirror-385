"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.geometry.v0.facettools_pb2
import grpc

class FacetToolsStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    ShrinkWrapBody: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.facettools_pb2.ShrinkWrapBodyRequest,
        ansys.api.geometry.v0.facettools_pb2.ShrinkWrapBodyResponse] = ...
    """Shrinkwrap bodies."""

    ShrinkWrapMesh: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.facettools_pb2.ShrinkWrapMeshRequest,
        ansys.api.geometry.v0.facettools_pb2.ShrinkWrapMeshResponse] = ...
    """Shrinkwrap meshes."""

    FacetAutoFix: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.facettools_pb2.FacetAutoFixRequest,
        ansys.api.geometry.v0.facettools_pb2.FacetAutoFixResponse] = ...
    """Find and fix faceted body."""


class FacetToolsServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ShrinkWrapBody(self,
        request: ansys.api.geometry.v0.facettools_pb2.ShrinkWrapBodyRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.facettools_pb2.ShrinkWrapBodyResponse:
        """Shrinkwrap bodies."""
        pass

    @abc.abstractmethod
    def ShrinkWrapMesh(self,
        request: ansys.api.geometry.v0.facettools_pb2.ShrinkWrapMeshRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.facettools_pb2.ShrinkWrapMeshResponse:
        """Shrinkwrap meshes."""
        pass

    @abc.abstractmethod
    def FacetAutoFix(self,
        request: ansys.api.geometry.v0.facettools_pb2.FacetAutoFixRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.facettools_pb2.FacetAutoFixResponse:
        """Find and fix faceted body."""
        pass


def add_FacetToolsServicer_to_server(servicer: FacetToolsServicer, server: grpc.Server) -> None: ...
