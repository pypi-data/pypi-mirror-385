"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.dbu.v0.dbumodels_pb2
import ansys.api.geometry.v0.commands_pb2
import ansys.api.geometry.v0.models_pb2
import google.protobuf.empty_pb2
import grpc
import typing

class CommandsStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    RenameMany: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RenameManyRequest,
        ansys.api.geometry.v0.commands_pb2.RenameManyResponse] = ...

    Rename: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RenameRequest,
        ansys.api.geometry.v0.commands_pb2.RenameResponse] = ...

    ProjectCurves: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ProjectCurvesRequest,
        ansys.api.geometry.v0.commands_pb2.ProjectCurvesResponse] = ...

    ImprintCurves: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ImprintCurvesRequest,
        ansys.api.geometry.v0.models_pb2.EntitiesCollection] = ...

    ImprintProjectedCurves: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ProjectCurvesRequest,
        ansys.api.geometry.v0.models_pb2.EntitiesCollection] = ...

    PowerSelectFacesByAreaRange: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.PowerSelectFacesByAreaRangeRequest,
        ansys.api.geometry.v0.commands_pb2.PowerSelectFacesByAreaRangeResponse] = ...

    CreateBeamCircularProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateBeamCircularProfileRequest,
        ansys.api.geometry.v0.commands_pb2.CreateBeamCircularProfileResponse] = ...

    CreateBeamSegment: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentRequest,
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentResponse] = ...

    CreateBeamSegments: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsRequest,
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsResponse] = ...

    CreateDescriptiveBeamSegment: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentRequest,
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentResponse] = ...

    CreateDescriptiveBeamSegments: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsRequest,
        ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsResponse] = ...

    FillFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.FillFacesRequest,
        google.protobuf.empty_pb2.Empty] = ...

    CreateDesignPoint: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateDesignPointRequest,
        ansys.api.geometry.v0.commands_pb2.CreateDesignPointResponse] = ...

    CreateDesignPoints: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateDesignPointsRequest,
        ansys.api.geometry.v0.commands_pb2.CreateDesignPointsResponse] = ...

    CreateCurvesFromProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateCurvesFromProfileRequest,
        ansys.api.geometry.v0.commands_pb2.CreateCurvesFromProfileResponse] = ...

    AssignMidSurfaceThickness: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.AssignMidSurfaceThicknessRequest,
        google.protobuf.empty_pb2.Empty] = ...

    AssignMidSurfaceOffsetType: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.AssignMidSurfaceOffsetTypeRequest,
        google.protobuf.empty_pb2.Empty] = ...

    DownloadFile: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.geometry.v0.commands_pb2.DownloadFileResponse] = ...
    """DEPRECATED in 25.2 version"""

    UploadFile: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.UploadFileRequest,
        ansys.api.geometry.v0.commands_pb2.UploadFileResponse] = ...

    StreamFileUpload: grpc.StreamUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.UploadFileRequest,
        ansys.api.geometry.v0.commands_pb2.UploadFileResponse] = ...

    CreateSphere: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateSphereRequest,
        ansys.api.geometry.v0.commands_pb2.CreateSphereResponse] = ...

    CreateTorus: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateTorusRequest,
        ansys.api.geometry.v0.commands_pb2.CreateTorusResponse] = ...

    DeleteBeam: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        google.protobuf.empty_pb2.Empty] = ...

    DeleteBeamProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        google.protobuf.empty_pb2.Empty] = ...

    GetAssembly: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        ansys.api.geometry.v0.commands_pb2.GetAssemblyResponse] = ...

    GetBeamProfileName: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        ansys.api.geometry.v0.commands_pb2.GetBeamProfileNameResponse] = ...

    GetBeamProfileParts: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.geometry.v0.commands_pb2.GetBeamProfilePartsResponse] = ...

    GetBeamProperties: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        ansys.api.geometry.v0.models_pb2.BeamProperties] = ...

    GetBeamCrossSectionInfo: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        ansys.api.geometry.v0.models_pb2.BeamCrossSectionInfo] = ...

    GetAllSpotWelds: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.geometry.v0.commands_pb2.GetAllSpotWeldsResponse] = ...

    GetAllCADWelds: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.geometry.v0.commands_pb2.GetAllCADWeldsResponse] = ...

    CreateSketchLine: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateSketchLineRequest,
        google.protobuf.empty_pb2.Empty] = ...

    IntersectCurves: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.IntersectCurvesRequest,
        ansys.api.geometry.v0.commands_pb2.IntersectCurvesResponse] = ...

    RevolveCurves: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RevolveCurvesRequest,
        google.protobuf.empty_pb2.Empty] = ...

    Chamfer: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ChamferRequest,
        ansys.api.geometry.v0.commands_pb2.ChamferResponse] = ...

    Fillet: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.FilletRequest,
        ansys.api.geometry.v0.commands_pb2.ChamferResponse] = ...

    FaceOffset: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.FaceOffsetRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    OffsetFacesSetRadius: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.OffsetFacesSetRadiusRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    FullFillet: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.FullFilletRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ThickenFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ThickenFacesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    DraftFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.DraftFacesRequest,
        ansys.api.geometry.v0.commands_pb2.DraftFacesResponse] = ...

    ExtrudeEdges: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ExtrudeEdgesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ExtrudeEdgesUpTo: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ExtrudeEdgesUpToRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ExtrudeFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ExtrudeFacesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ExtrudeFacesUpTo: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ExtrudeFacesUpToRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    Scale: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ScaleRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ScaleNonUniform: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ScaleNonUniformRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    OffsetEdges: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.OffsetEdgesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    MoveImprintEdges: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.MoveImprintEdgesRequest,
        ansys.api.geometry.v0.commands_pb2.MoveImprintEdgesResponse] = ...

    OffsetFaceCurves: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.OffsetFaceCurvesRequest,
        ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse] = ...

    RevolveFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RevolveFacesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    RevolveFacesUpTo: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RevolveFacesUpToRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    RevolveFacesByHelix: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RevolveFacesByHelixRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    SweepFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SweepFacesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    SweepPoints: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SweepPointsRequest,
        ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse] = ...

    RevolvePoints: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RevolvePointsRequest,
        ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse] = ...

    RevolvePointsByHelix: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RevolvePointsByHelixRequest,
        ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse] = ...

    CombineIntersectBodies: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CombineIntersectBodiesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    CombineMergeBodies: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CombineMergeBodiesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    MergeBodies: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.MergeBodiesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ProjectToSolid: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ProjectToSolidRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    SplitBody: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SplitBodyRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    CreateLinearPattern: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateLinearPatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    ModifyLinearPattern: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ModifyLinearPatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    CreateCircularPattern: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateCircularPatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    ModifyCircularPattern: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ModifyCircularPatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    CreateFillPattern: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateFillPatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    UpdateFillPattern: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.PatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    RemovePatterns: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.PatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    RemovePatternMember: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.PatternRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    SetPatternValue: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SetPatternValueRequest,
        ansys.api.geometry.v0.commands_pb2.PatternCommandResponse] = ...

    DetachFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.DetachFacesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    PullCurvePoint: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.PullCurvePointRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    RenameObject: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RenameObjectRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    ReplaceFace: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ReplaceFaceRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    Shell: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ShellRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    RemoveFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RemoveFacesRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    MoveTranslate: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.MoveTranslateRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    MoveRotate: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.MoveRotateRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    Mirror: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.MirrorRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    SplitFace: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SplitFaceRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    SplitEdge: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SplitEdgeRequest,
        ansys.api.geometry.v0.commands_pb2.CommandResponse] = ...

    CreatePlane: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreatePlaneRequest,
        ansys.api.geometry.v0.commands_pb2.CreatePlaneResponse] = ...

    EvaluateNurbsCurve: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.EvaluateNurbsCurveRequest,
        ansys.api.geometry.v0.models_pb2.CurveEvaluation] = ...

    ProjectPoint: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ProjectPointRequest,
        ansys.api.geometry.v0.models_pb2.CurveEvaluation] = ...

    GetRoundInfo: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RoundInfoRequest,
        ansys.api.geometry.v0.commands_pb2.RoundInfoResponse] = ...

    ImprintCurvesAndSync: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.ImprintCurvesRequest,
        ansys.api.geometry.v0.commands_pb2.ImprintCurvesAndSyncResponse] = ...

    DeleteEntities: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.DeleteEntitiesRequest,
        ansys.api.geometry.v0.commands_pb2.DeleteEntitiesResponse] = ...

    SetAutomaticTrackingState: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.SetAutomaticTrackingStateRequest,
        ansys.api.geometry.v0.commands_pb2.SetAutomaticTrackingStateResponse] = ...

    GetTracker: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.GetTrackerRequest,
        ansys.api.geometry.v0.commands_pb2.GetTrackerResponse] = ...

    GetTrackerChanges: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.GetTrackerChangesRequest,
        ansys.api.geometry.v0.commands_pb2.GetTrackerChangesResponse] = ...

    DisposeTracker: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.DisposeTrackerRequest,
        ansys.api.geometry.v0.commands_pb2.DisposeTrackerResponse] = ...

    CreateAlignCondition: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        ansys.api.geometry.v0.models_pb2.AlignCondition] = ...

    CreateTangentCondition: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        ansys.api.geometry.v0.models_pb2.TangentCondition] = ...

    CreateOrientCondition: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        ansys.api.geometry.v0.models_pb2.OrientCondition] = ...

    CreateRigidCondition: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateRigidConditionRequest,
        ansys.api.geometry.v0.models_pb2.RigidCondition] = ...

    CreateAnchorCondition: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateAnchorConditionRequest,
        ansys.api.geometry.v0.models_pb2.AnchorCondition] = ...

    CreateGearCondition: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        ansys.api.geometry.v0.models_pb2.GearCondition] = ...

    RayFire: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RayFireRequest,
        ansys.api.geometry.v0.commands_pb2.RayFireResponse] = ...

    RayFireOrdered: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RayFireOrderedRequest,
        ansys.api.geometry.v0.commands_pb2.RayFireOrderedResponse] = ...

    RayFireFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RayFireFacesRequest,
        ansys.api.geometry.v0.commands_pb2.RayFireFacesResponse] = ...

    RayFireOrderedUV: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.commands_pb2.RayFireOrderedUVRequest,
        ansys.api.geometry.v0.commands_pb2.RayFireOrderedUVResponse] = ...


class CommandsServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def RenameMany(self,
        request: ansys.api.geometry.v0.commands_pb2.RenameManyRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RenameManyResponse: ...

    @abc.abstractmethod
    def Rename(self,
        request: ansys.api.geometry.v0.commands_pb2.RenameRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RenameResponse: ...

    @abc.abstractmethod
    def ProjectCurves(self,
        request: ansys.api.geometry.v0.commands_pb2.ProjectCurvesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.ProjectCurvesResponse: ...

    @abc.abstractmethod
    def ImprintCurves(self,
        request: ansys.api.geometry.v0.commands_pb2.ImprintCurvesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.EntitiesCollection: ...

    @abc.abstractmethod
    def ImprintProjectedCurves(self,
        request: ansys.api.geometry.v0.commands_pb2.ProjectCurvesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.EntitiesCollection: ...

    @abc.abstractmethod
    def PowerSelectFacesByAreaRange(self,
        request: ansys.api.geometry.v0.commands_pb2.PowerSelectFacesByAreaRangeRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PowerSelectFacesByAreaRangeResponse: ...

    @abc.abstractmethod
    def CreateBeamCircularProfile(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateBeamCircularProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateBeamCircularProfileResponse: ...

    @abc.abstractmethod
    def CreateBeamSegment(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentResponse: ...

    @abc.abstractmethod
    def CreateBeamSegments(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsResponse: ...

    @abc.abstractmethod
    def CreateDescriptiveBeamSegment(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentResponse: ...

    @abc.abstractmethod
    def CreateDescriptiveBeamSegments(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateBeamSegmentsResponse: ...

    @abc.abstractmethod
    def FillFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.FillFacesRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def CreateDesignPoint(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateDesignPointRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateDesignPointResponse: ...

    @abc.abstractmethod
    def CreateDesignPoints(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateDesignPointsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateDesignPointsResponse: ...

    @abc.abstractmethod
    def CreateCurvesFromProfile(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateCurvesFromProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateCurvesFromProfileResponse: ...

    @abc.abstractmethod
    def AssignMidSurfaceThickness(self,
        request: ansys.api.geometry.v0.commands_pb2.AssignMidSurfaceThicknessRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def AssignMidSurfaceOffsetType(self,
        request: ansys.api.geometry.v0.commands_pb2.AssignMidSurfaceOffsetTypeRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def DownloadFile(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.DownloadFileResponse:
        """DEPRECATED in 25.2 version"""
        pass

    @abc.abstractmethod
    def UploadFile(self,
        request: ansys.api.geometry.v0.commands_pb2.UploadFileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.UploadFileResponse: ...

    @abc.abstractmethod
    def StreamFileUpload(self,
        request: typing.Iterator[ansys.api.geometry.v0.commands_pb2.UploadFileRequest],
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.UploadFileResponse: ...

    @abc.abstractmethod
    def CreateSphere(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateSphereRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateSphereResponse: ...

    @abc.abstractmethod
    def CreateTorus(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateTorusRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreateTorusResponse: ...

    @abc.abstractmethod
    def DeleteBeam(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def DeleteBeamProfile(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def GetAssembly(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetAssemblyResponse: ...

    @abc.abstractmethod
    def GetBeamProfileName(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetBeamProfileNameResponse: ...

    @abc.abstractmethod
    def GetBeamProfileParts(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetBeamProfilePartsResponse: ...

    @abc.abstractmethod
    def GetBeamProperties(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.BeamProperties: ...

    @abc.abstractmethod
    def GetBeamCrossSectionInfo(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.BeamCrossSectionInfo: ...

    @abc.abstractmethod
    def GetAllSpotWelds(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetAllSpotWeldsResponse: ...

    @abc.abstractmethod
    def GetAllCADWelds(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetAllCADWeldsResponse: ...

    @abc.abstractmethod
    def CreateSketchLine(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateSketchLineRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def IntersectCurves(self,
        request: ansys.api.geometry.v0.commands_pb2.IntersectCurvesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.IntersectCurvesResponse: ...

    @abc.abstractmethod
    def RevolveCurves(self,
        request: ansys.api.geometry.v0.commands_pb2.RevolveCurvesRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def Chamfer(self,
        request: ansys.api.geometry.v0.commands_pb2.ChamferRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.ChamferResponse: ...

    @abc.abstractmethod
    def Fillet(self,
        request: ansys.api.geometry.v0.commands_pb2.FilletRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.ChamferResponse: ...

    @abc.abstractmethod
    def FaceOffset(self,
        request: ansys.api.geometry.v0.commands_pb2.FaceOffsetRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def OffsetFacesSetRadius(self,
        request: ansys.api.geometry.v0.commands_pb2.OffsetFacesSetRadiusRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def FullFillet(self,
        request: ansys.api.geometry.v0.commands_pb2.FullFilletRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ThickenFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.ThickenFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def DraftFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.DraftFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.DraftFacesResponse: ...

    @abc.abstractmethod
    def ExtrudeEdges(self,
        request: ansys.api.geometry.v0.commands_pb2.ExtrudeEdgesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ExtrudeEdgesUpTo(self,
        request: ansys.api.geometry.v0.commands_pb2.ExtrudeEdgesUpToRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ExtrudeFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.ExtrudeFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ExtrudeFacesUpTo(self,
        request: ansys.api.geometry.v0.commands_pb2.ExtrudeFacesUpToRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def Scale(self,
        request: ansys.api.geometry.v0.commands_pb2.ScaleRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ScaleNonUniform(self,
        request: ansys.api.geometry.v0.commands_pb2.ScaleNonUniformRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def OffsetEdges(self,
        request: ansys.api.geometry.v0.commands_pb2.OffsetEdgesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def MoveImprintEdges(self,
        request: ansys.api.geometry.v0.commands_pb2.MoveImprintEdgesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.MoveImprintEdgesResponse: ...

    @abc.abstractmethod
    def OffsetFaceCurves(self,
        request: ansys.api.geometry.v0.commands_pb2.OffsetFaceCurvesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse: ...

    @abc.abstractmethod
    def RevolveFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.RevolveFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def RevolveFacesUpTo(self,
        request: ansys.api.geometry.v0.commands_pb2.RevolveFacesUpToRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def RevolveFacesByHelix(self,
        request: ansys.api.geometry.v0.commands_pb2.RevolveFacesByHelixRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def SweepFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.SweepFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def SweepPoints(self,
        request: ansys.api.geometry.v0.commands_pb2.SweepPointsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse: ...

    @abc.abstractmethod
    def RevolvePoints(self,
        request: ansys.api.geometry.v0.commands_pb2.RevolvePointsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse: ...

    @abc.abstractmethod
    def RevolvePointsByHelix(self,
        request: ansys.api.geometry.v0.commands_pb2.RevolvePointsByHelixRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreatedCurvesCommandResponse: ...

    @abc.abstractmethod
    def CombineIntersectBodies(self,
        request: ansys.api.geometry.v0.commands_pb2.CombineIntersectBodiesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def CombineMergeBodies(self,
        request: ansys.api.geometry.v0.commands_pb2.CombineMergeBodiesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def MergeBodies(self,
        request: ansys.api.geometry.v0.commands_pb2.MergeBodiesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ProjectToSolid(self,
        request: ansys.api.geometry.v0.commands_pb2.ProjectToSolidRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def SplitBody(self,
        request: ansys.api.geometry.v0.commands_pb2.SplitBodyRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def CreateLinearPattern(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateLinearPatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def ModifyLinearPattern(self,
        request: ansys.api.geometry.v0.commands_pb2.ModifyLinearPatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def CreateCircularPattern(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateCircularPatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def ModifyCircularPattern(self,
        request: ansys.api.geometry.v0.commands_pb2.ModifyCircularPatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def CreateFillPattern(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateFillPatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def UpdateFillPattern(self,
        request: ansys.api.geometry.v0.commands_pb2.PatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def RemovePatterns(self,
        request: ansys.api.geometry.v0.commands_pb2.PatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def RemovePatternMember(self,
        request: ansys.api.geometry.v0.commands_pb2.PatternRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def SetPatternValue(self,
        request: ansys.api.geometry.v0.commands_pb2.SetPatternValueRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.PatternCommandResponse: ...

    @abc.abstractmethod
    def DetachFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.DetachFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def PullCurvePoint(self,
        request: ansys.api.geometry.v0.commands_pb2.PullCurvePointRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def RenameObject(self,
        request: ansys.api.geometry.v0.commands_pb2.RenameObjectRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def ReplaceFace(self,
        request: ansys.api.geometry.v0.commands_pb2.ReplaceFaceRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def Shell(self,
        request: ansys.api.geometry.v0.commands_pb2.ShellRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def RemoveFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.RemoveFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def MoveTranslate(self,
        request: ansys.api.geometry.v0.commands_pb2.MoveTranslateRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def MoveRotate(self,
        request: ansys.api.geometry.v0.commands_pb2.MoveRotateRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def Mirror(self,
        request: ansys.api.geometry.v0.commands_pb2.MirrorRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def SplitFace(self,
        request: ansys.api.geometry.v0.commands_pb2.SplitFaceRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def SplitEdge(self,
        request: ansys.api.geometry.v0.commands_pb2.SplitEdgeRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CommandResponse: ...

    @abc.abstractmethod
    def CreatePlane(self,
        request: ansys.api.geometry.v0.commands_pb2.CreatePlaneRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.CreatePlaneResponse: ...

    @abc.abstractmethod
    def EvaluateNurbsCurve(self,
        request: ansys.api.geometry.v0.commands_pb2.EvaluateNurbsCurveRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.CurveEvaluation: ...

    @abc.abstractmethod
    def ProjectPoint(self,
        request: ansys.api.geometry.v0.commands_pb2.ProjectPointRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.CurveEvaluation: ...

    @abc.abstractmethod
    def GetRoundInfo(self,
        request: ansys.api.geometry.v0.commands_pb2.RoundInfoRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RoundInfoResponse: ...

    @abc.abstractmethod
    def ImprintCurvesAndSync(self,
        request: ansys.api.geometry.v0.commands_pb2.ImprintCurvesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.ImprintCurvesAndSyncResponse: ...

    @abc.abstractmethod
    def DeleteEntities(self,
        request: ansys.api.geometry.v0.commands_pb2.DeleteEntitiesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.DeleteEntitiesResponse: ...

    @abc.abstractmethod
    def SetAutomaticTrackingState(self,
        request: ansys.api.geometry.v0.commands_pb2.SetAutomaticTrackingStateRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.SetAutomaticTrackingStateResponse: ...

    @abc.abstractmethod
    def GetTracker(self,
        request: ansys.api.geometry.v0.commands_pb2.GetTrackerRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetTrackerResponse: ...

    @abc.abstractmethod
    def GetTrackerChanges(self,
        request: ansys.api.geometry.v0.commands_pb2.GetTrackerChangesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.GetTrackerChangesResponse: ...

    @abc.abstractmethod
    def DisposeTracker(self,
        request: ansys.api.geometry.v0.commands_pb2.DisposeTrackerRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.DisposeTrackerResponse: ...

    @abc.abstractmethod
    def CreateAlignCondition(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.AlignCondition: ...

    @abc.abstractmethod
    def CreateTangentCondition(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.TangentCondition: ...

    @abc.abstractmethod
    def CreateOrientCondition(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.OrientCondition: ...

    @abc.abstractmethod
    def CreateRigidCondition(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateRigidConditionRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.RigidCondition: ...

    @abc.abstractmethod
    def CreateAnchorCondition(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateAnchorConditionRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.AnchorCondition: ...

    @abc.abstractmethod
    def CreateGearCondition(self,
        request: ansys.api.geometry.v0.commands_pb2.CreateAlignTangentOrientGearConditionRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.GearCondition: ...

    @abc.abstractmethod
    def RayFire(self,
        request: ansys.api.geometry.v0.commands_pb2.RayFireRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RayFireResponse: ...

    @abc.abstractmethod
    def RayFireOrdered(self,
        request: ansys.api.geometry.v0.commands_pb2.RayFireOrderedRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RayFireOrderedResponse: ...

    @abc.abstractmethod
    def RayFireFaces(self,
        request: ansys.api.geometry.v0.commands_pb2.RayFireFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RayFireFacesResponse: ...

    @abc.abstractmethod
    def RayFireOrderedUV(self,
        request: ansys.api.geometry.v0.commands_pb2.RayFireOrderedUVRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.commands_pb2.RayFireOrderedUVResponse: ...


def add_CommandsServicer_to_server(servicer: CommandsServicer, server: grpc.Server) -> None: ...
