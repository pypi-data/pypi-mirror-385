"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.geometry.v0.models_pb2
import ansys.api.geometry.v0.preparetools_pb2
import grpc

class PrepareToolsStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    FixInterference: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.FixInterferenceRequest,
        ansys.api.geometry.v0.preparetools_pb2.FixInterferenceResponse] = ...

    FixShortEdges: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.FixShortEdgesRequest,
        ansys.api.geometry.v0.preparetools_pb2.FixShortEdgesResponse] = ...

    ShareTopology: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.ShareTopologyRequest,
        ansys.api.geometry.v0.preparetools_pb2.ShareTopologyResponse] = ...

    UnshareTopology: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.UnshareTopologyRequest,
        ansys.api.geometry.v0.preparetools_pb2.UnshareTopologyResponse] = ...

    RemoveRounds: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.RemoveRoundsRequest,
        ansys.api.geometry.v0.preparetools_pb2.RemoveRoundsResponse] = ...

    RemoveFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.RemoveFacesRequest,
        ansys.api.geometry.v0.preparetools_pb2.RemoveFacesResponse] = ...

    ExtractVolumeFromFaces: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.ExtractVolumeFromFacesRequest,
        ansys.api.geometry.v0.preparetools_pb2.VolumeExtractionResponse] = ...

    ExtractVolumeFromEdgeLoops: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.ExtractVolumeFromEdgeLoopsRequest,
        ansys.api.geometry.v0.preparetools_pb2.VolumeExtractionResponse] = ...

    EnhancedShareTopology: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.ShareTopologyRequest,
        ansys.api.geometry.v0.models_pb2.EnhancedRepairToolMessage] = ...

    CreateEnclosureBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.CreateEnclosureBoxRequest,
        ansys.api.geometry.v0.preparetools_pb2.CreateEnclosureResponse] = ...

    FindLogos: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.FindLogosRequest,
        ansys.api.geometry.v0.preparetools_pb2.FindLogosResponse] = ...

    FindAndRemoveLogos: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.FindLogosRequest,
        ansys.api.geometry.v0.preparetools_pb2.RemoveLogoResponse] = ...

    RemoveLogo: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.RemoveLogoRequest,
        ansys.api.geometry.v0.preparetools_pb2.RemoveLogoResponse] = ...

    DetectHelixes: grpc.UnaryUnaryMultiCallable[
        ansys.api.geometry.v0.preparetools_pb2.DetectHelixesRequest,
        ansys.api.geometry.v0.preparetools_pb2.DetectHelixesResponse] = ...


class PrepareToolsServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def FixInterference(self,
        request: ansys.api.geometry.v0.preparetools_pb2.FixInterferenceRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.FixInterferenceResponse: ...

    @abc.abstractmethod
    def FixShortEdges(self,
        request: ansys.api.geometry.v0.preparetools_pb2.FixShortEdgesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.FixShortEdgesResponse: ...

    @abc.abstractmethod
    def ShareTopology(self,
        request: ansys.api.geometry.v0.preparetools_pb2.ShareTopologyRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.ShareTopologyResponse: ...

    @abc.abstractmethod
    def UnshareTopology(self,
        request: ansys.api.geometry.v0.preparetools_pb2.UnshareTopologyRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.UnshareTopologyResponse: ...

    @abc.abstractmethod
    def RemoveRounds(self,
        request: ansys.api.geometry.v0.preparetools_pb2.RemoveRoundsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.RemoveRoundsResponse: ...

    @abc.abstractmethod
    def RemoveFaces(self,
        request: ansys.api.geometry.v0.preparetools_pb2.RemoveFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.RemoveFacesResponse: ...

    @abc.abstractmethod
    def ExtractVolumeFromFaces(self,
        request: ansys.api.geometry.v0.preparetools_pb2.ExtractVolumeFromFacesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.VolumeExtractionResponse: ...

    @abc.abstractmethod
    def ExtractVolumeFromEdgeLoops(self,
        request: ansys.api.geometry.v0.preparetools_pb2.ExtractVolumeFromEdgeLoopsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.VolumeExtractionResponse: ...

    @abc.abstractmethod
    def EnhancedShareTopology(self,
        request: ansys.api.geometry.v0.preparetools_pb2.ShareTopologyRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.models_pb2.EnhancedRepairToolMessage: ...

    @abc.abstractmethod
    def CreateEnclosureBox(self,
        request: ansys.api.geometry.v0.preparetools_pb2.CreateEnclosureBoxRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.CreateEnclosureResponse: ...

    @abc.abstractmethod
    def FindLogos(self,
        request: ansys.api.geometry.v0.preparetools_pb2.FindLogosRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.FindLogosResponse: ...

    @abc.abstractmethod
    def FindAndRemoveLogos(self,
        request: ansys.api.geometry.v0.preparetools_pb2.FindLogosRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.RemoveLogoResponse: ...

    @abc.abstractmethod
    def RemoveLogo(self,
        request: ansys.api.geometry.v0.preparetools_pb2.RemoveLogoRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.RemoveLogoResponse: ...

    @abc.abstractmethod
    def DetectHelixes(self,
        request: ansys.api.geometry.v0.preparetools_pb2.DetectHelixesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.geometry.v0.preparetools_pb2.DetectHelixesResponse: ...


def add_PrepareToolsServicer_to_server(servicer: PrepareToolsServicer, server: grpc.Server) -> None: ...
