import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "in/advanced2.py"
        name: "Layout2"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["target.advanced2/Layout2 1.0"]
        exportMetaObjectRevisions: [256]
        attachedType: "LayoutAttached2"
    }
    Component {
        file: "in/advanced2.py"
        name: "LayoutAttached2"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["target.advanced2/LayoutAttached2 1.0"]
        exportMetaObjectRevisions: [256]
        Property { name: "margins"; type: "QMargins"; read: "margins"; index: 1; isReadonly: true }
    }
    Component {
        file: "in/advanced2.py"
        name: "LineEditorExtension2"
        accessSemantics: "reference"
        prototype: "QObject"
    }
    Component {
        file: "in/advanced2.py"
        name: "LineEditor2"
        accessSemantics: "reference"
        prototype: "QObject"
        extension: "LineEditorExtension2"
        exports: ["target.advanced2/LineEditor2 1.0"]
        exportMetaObjectRevisions: [256]
    }
    Component {
        file: "qobject.h"
        name: "QObject"
        accessSemantics: "reference"
        Property {
            name: "objectName"
            type: "QString"
            bindable: "bindableObjectName"
            read: "objectName"
            write: "setObjectName"
            notify: "objectNameChanged"
            index: 0
        }
        Signal {
            name: "destroyed"
            Parameter { type: "QObject"; isPointer: true }
        }
        Signal { name: "destroyed"; isCloned: true }
        Signal {
            name: "objectNameChanged"
            Parameter { name: "objectName"; type: "QString" }
        }
        Method { name: "deleteLater" }
        Method {
            name: "QObject"
            isConstructor: true
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method { name: "QObject"; isCloned: true; isConstructor: true }
    }
}
