"""Page layout utilities for wrapping content with common page structure"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/core/layout.ipynb.

# %% auto 0
__all__ = ['wrap_with_layout']

# %% ../../nbs/core/layout.ipynb 3
from typing import Any, Optional
from fasthtml.common import *

from .html_ids import AppHtmlIds

# %% ../../nbs/core/layout.ipynb 6
def wrap_with_layout(
    content: Any,  # The main content to display
    navbar: Optional[Any] = None,  # Optional navbar component
    footer: Optional[Any] = None,  # Optional footer component
    container_id: str = AppHtmlIds.MAIN_CONTENT,  # ID for the main content container
    container_tag: str = "div"  # HTML tag for the container (div, main, section, etc.)
) -> Any:  # Main element with navbar and content
    """Wrap content with the full page layout including optional navbar and footer.
    
    This utility provides a consistent page structure across your application.
    It wraps your content with optional navbar and footer components.
    
    Args:
        content: The main page content
        navbar: Optional navbar component (typically from create_navbar)
        footer: Optional footer component
        container_id: HTML ID for the main content container
        container_tag: HTML tag to use for the container
    
    Returns:
        Main element containing navbar, content, and footer
    
    Example:
        ```python
        from cjm_fasthtml_app_core.components.navbar import create_navbar
        from cjm_fasthtml_app_core.core.layout import wrap_with_layout
        
        my_navbar = create_navbar(title="My App", nav_items=[...])
        page = wrap_with_layout(my_content, navbar=my_navbar)
        ```
    """
    # Create container element based on tag type
    tag_fn = {
        'div': Div,
        'main': Main,
        'section': Section,
        'article': Article
    }.get(container_tag.lower(), Div)
    
    content_container = tag_fn(content, id=container_id)
    
    # Build layout parts
    parts = []
    if navbar:
        parts.append(navbar)
    parts.append(content_container)
    if footer:
        parts.append(footer)
    
    return Main(*parts)
