[tool.poetry]
name = "pyEllipse"
version = "0.1.2"
description = "Tools for creating and analyzing confidence ellipses, including Hotelling's T-squared ellipses for multivariate statistical analysis and data visualization."
authors = ["Christian L. Goueguel <christian.goueguel@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ChristianGoueguel/pyEllipse"
repository = "https://github.com/ChristianGoueguel/pyEllipse"
documentation = "https://christiangoueguel.github.io/pyEllipse"
keywords = ["statistics", "confidence-ellipse", "hotelling", "multivariate", "visualization"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
]
packages = [{include = "pyEllipse"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"  # Exclude Python 3.13 for now
numpy = "^1.24.0"
scipy = "^1.11.0"
pandas = "^2.0.0"
scikit-learn = "^1.3.0"
matplotlib = "^3.7.0"
seaborn = {version = "^0.12.0", optional = true}
plotly = {version = "^5.14.0", optional = true}

[tool.poetry.extras]
plotting = ["seaborn", "plotly"]
all = ["seaborn", "plotly"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.3.0"
sphinx = "^7.1.0"
sphinx-rtd-theme = "^1.3.0"
jupyter = "^1.0.0"
notebook = "^7.0.0"

[tool.poetry.group.test.dependencies]
pytest-xdist = "^3.3.0"
hypothesis = "^6.82.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=pyEllipse --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["pyEllipse"]

[tool.pyright]
exclude = ["scripts/"]
reportGeneralTypeIssues = false

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ChristianGoueguel/pyEllipse/issues"