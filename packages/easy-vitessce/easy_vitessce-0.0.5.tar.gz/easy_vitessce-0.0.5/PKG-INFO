Metadata-Version: 2.4
Name: easy_vitessce
Version: 0.0.5
Summary: A package to easily use Vitessce to create interactive plots for single-cell data
Project-URL: repository, https://github.com/vitessce/easy_vitessce
Author: HIDIVE Lab, Selena Luo
License: MIT License
        
        Copyright (c) [2025] [HIDIVE Lab]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Requires-Dist: anndata>=0.11.4
Requires-Dist: black>=21.11b1
Requires-Dist: dask[dataframe]==2024.11.1
Requires-Dist: distributed<=2024.11.2
Requires-Dist: donfig>=0.3.1
Requires-Dist: numcodecs<0.16.0,>=0.5.7
Requires-Dist: numpy>=1.21.2
Requires-Dist: pandas>=1.1.2
Requires-Dist: scanpy>=1.11.3
Requires-Dist: scipy>=1.2.1
Requires-Dist: spatialdata-plot>=0.2.7
Requires-Dist: spatialdata>=0.3.0
Requires-Dist: vitessce[all]>=3.7.5
Requires-Dist: xarray<=2025.3.0,>=2024.10.0
Requires-Dist: zarr<3,>=2.5.0
Provides-Extra: dev
Requires-Dist: jupyter; extra == 'dev'
Requires-Dist: jupyterlab; extra == 'dev'
Requires-Dist: pytest>=8.4.1; extra == 'dev'
Requires-Dist: pyyaml; extra == 'dev'
Provides-Extra: docs
Requires-Dist: sphinx; extra == 'docs'
Requires-Dist: sphinx-book-theme; extra == 'docs'
Requires-Dist: sphinx-copybutton; extra == 'docs'
Description-Content-Type: text/markdown

# Easy Vitessce

[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/vitessce/easy_vitessce/blob/main/examples/scanpy_pbmc68k.ipynb)


 ðŸª„ *Configure Vitessce with a single line of code!*
 
Turn your static [Scanpy](https://github.com/scverse/scanpy) and [SpatialData](https://github.com/scverse/spatialdata-plot) plots into interactive [Vitessce](https://github.com/vitessce/vitessce) visualizations simply by importing the `easy_vitessce` package!


**Supported Functions**

- `sc.pl.umap`
- `sc.pl.tsne`
- `sc.pl.pca`
- `sc.pl.embedding`
- `sc.pl.spatial`
- `sc.pl.violin`
- `sc.pl.dotplot`
- `sc.pl.heatmap`
- `sdata.pl` (`.render_images`, `.render_labels`, and `.render_shapes`)

See the [documentation](https://vitessce.github.io/easy_vitessce/) for further details.


## Installation

Install package using pip: 

```sh
pip install easy_vitessce
```

## How to Use

#### Importing Easy Vitessce

```py
import easy_vitessce as ev
```

ðŸª„ By default, interactive plots are **enabled** via this import statement.

#### Deactivating Interactive Plots:

```py
ev.configure_plots(disable_plots = ["embedding", "violin", "spatialdata-plot"])
```

#### Reactivating Interactive Plots:

```py
ev.configure_plots(enable_plots = ["spatialdata-plot"])
```

## Development

### Set up environment

```sh
uv sync --extra dev --extra docs
```

This command should also be run after updating dependencies in `pyproject.toml`.

### Run tests

```sh
# uv sync --extra dev
uv run pytest
```

### Make documentation

```sh
uv run make html # on mac/linux
# uv run make.bat html # on windows
open _build/html/index.html
```

### Launch Jupyter notebook or lab

```sh
# uv sync --extra dev
uv run jupyter notebook --notebook-dir .
# or
uv run jupyter lab --notebook-dir .
```