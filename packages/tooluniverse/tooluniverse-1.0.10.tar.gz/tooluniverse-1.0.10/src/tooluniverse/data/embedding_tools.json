[
  {
    "type": "EmbeddingDatabase",
    "name": "embedding_database_create",
    "description": "Create a new embedding database from a collection of documents. Generates embeddings using OpenAI or Azure OpenAI models and stores them in a searchable database with FAISS vector index and SQLite metadata storage.",
    "parameter": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "create_from_docs",
          "description": "Action to create database from documents"
        },
        "database_name": {
          "type": "string",
          "description": "Name for the new database (must be unique)"
        },
        "documents": {
          "type": "array",
          "description": "List of document texts to embed and store",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 10000
        },
        "metadata": {
          "type": "array",
          "description": "Optional metadata for each document (same length as documents)",
          "items": {
            "type": "object"
          },
          "default": []
        },
        "model": {
          "type": "string",
          "description": "OpenAI/Azure OpenAI embedding model to use",
          "enum": [
            "text-embedding-3-small",
            "text-embedding-3-large",
            "text-embedding-ada-002"
          ],
          "default": "text-embedding-3-small"
        },
        "description": {
          "type": "string",
          "description": "Optional description for the database",
          "default": ""
        }
      },
      "required": [
        "action",
        "database_name",
        "documents",
        "metadata",
        "model",
        "description"
      ]
    },
    "required_api_keys": [],
    "optional_api_keys": [
      "OPENAI_API_KEY",
      "AZURE_OPENAI_API_KEY"
    ],
    "configs": {
      "openai_config": {
        "api_key": "${OPENAI_API_KEY}",
        "base_url": "${OPENAI_BASE_URL:https://api.openai.com/v1}",
        "timeout": 60,
        "max_retries": 3
      },
      "azure_openai_config": {
        "api_key": "${AZURE_OPENAI_API_KEY}",
        "azure_endpoint": "${AZURE_OPENAI_ENDPOINT}",
        "api_version": "${AZURE_OPENAI_API_VERSION:2024-02-01}",
        "timeout": 120,
        "max_retries": 5
      },
      "storage_config": {
        "data_dir": "./data/embeddings",
        "faiss_index_type": "IndexFlatIP"
      }
    }
  },
  {
    "type": "EmbeddingDatabase",
    "name": "embedding_database_add",
    "description": "Add new documents to an existing embedding database. Generates embeddings for new documents using the same model as the original database and appends them to the existing FAISS index.",
    "parameter": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "add_docs",
          "description": "Action to add documents to existing database"
        },
        "database_name": {
          "type": "string",
          "description": "Name of the existing database to add documents to"
        },
        "documents": {
          "type": "array",
          "description": "List of new document texts to embed and add",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 10000
        },
        "metadata": {
          "type": "array",
          "description": "Optional metadata for each new document (same length as documents)",
          "items": {
            "type": "object"
          },
          "default": []
        }
      },
      "required": [
        "action",
        "database_name",
        "documents",
        "metadata"
      ]
    },
    "required_api_keys": [],
    "optional_api_keys": [
      "OPENAI_API_KEY",
      "AZURE_OPENAI_API_KEY"
    ],
    "configs": {
      "openai_config": {
        "api_key": "${OPENAI_API_KEY}",
        "base_url": "${OPENAI_BASE_URL:https://api.openai.com/v1}",
        "timeout": 60,
        "max_retries": 3
      },
      "azure_openai_config": {
        "api_key": "${AZURE_OPENAI_API_KEY}",
        "azure_endpoint": "${AZURE_OPENAI_ENDPOINT}",
        "api_version": "${AZURE_OPENAI_API_VERSION:2024-02-01}",
        "timeout": 120,
        "max_retries": 5
      },
      "storage_config": {
        "data_dir": "./data/embeddings",
        "faiss_index_type": "IndexFlatIP"
      }
    }
  },
  {
    "type": "EmbeddingDatabase",
    "name": "embedding_database_search",
    "description": "Search for semantically similar documents in an embedding database. Uses OpenAI embeddings to convert query text to vectors and performs similarity search using FAISS with optional metadata filtering.",
    "parameter": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "search",
          "description": "Action to search the database"
        },
        "database_name": {
          "type": "string",
          "description": "Name of the database to search in"
        },
        "query": {
          "type": "string",
          "description": "Query text to find similar documents for"
        },
        "top_k": {
          "type": "integer",
          "description": "Number of most similar documents to return",
          "minimum": 1,
          "maximum": 1000,
          "default": 5
        },
        "filters": {
          "type": "object",
          "description": "Optional metadata filters to apply to search results",
          "additionalProperties": true,
          "default": {}
        }
      },
      "required": [
        "action",
        "database_name",
        "query",
        "top_k",
        "filters"
      ]
    },
    "required_api_keys": [],
    "optional_api_keys": [
      "OPENAI_API_KEY",
      "AZURE_OPENAI_API_KEY"
    ],
    "configs": {
      "openai_config": {
        "api_key": "${OPENAI_API_KEY}",
        "base_url": "${OPENAI_BASE_URL:https://api.openai.com/v1}",
        "timeout": 60,
        "max_retries": 3
      },
      "azure_openai_config": {
        "api_key": "${AZURE_OPENAI_API_KEY}",
        "azure_endpoint": "${AZURE_OPENAI_ENDPOINT}",
        "api_version": "${AZURE_OPENAI_API_VERSION:2024-02-01}",
        "timeout": 120,
        "max_retries": 5
      },
      "storage_config": {
        "data_dir": "./data/embeddings",
        "faiss_index_type": "IndexFlatIP"
      }
    }
  },
  {
    "type": "EmbeddingDatabase",
    "name": "embedding_database_load",
    "description": "Load an existing embedding database from a local path or external source. Allows importing databases created elsewhere or backed up databases into the current ToolUniverse instance.",
    "parameter": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "load_database",
          "description": "Action to load database from external source"
        },
        "database_path": {
          "type": "string",
          "description": "Path to the existing database directory or file"
        },
        "database_name": {
          "type": "string",
          "description": "Local name to assign to the loaded database"
        },
        "overwrite": {
          "type": "boolean",
          "description": "Whether to overwrite existing database with same name",
          "default": false
        }
      },
      "required": [
        "action",
        "database_path",
        "database_name",
        "overwrite"
      ]
    },
    "required_api_keys": [],
    "optional_api_keys": [
      "OPENAI_API_KEY",
      "AZURE_OPENAI_API_KEY"
    ],
    "configs": {
      "openai_config": {
        "api_key": "${OPENAI_API_KEY}",
        "base_url": "${OPENAI_BASE_URL:https://api.openai.com/v1}",
        "timeout": 60,
        "max_retries": 3
      },
      "azure_openai_config": {
        "api_key": "${AZURE_OPENAI_API_KEY}",
        "azure_endpoint": "${AZURE_OPENAI_ENDPOINT}",
        "api_version": "${AZURE_OPENAI_API_VERSION:2024-02-01}",
        "timeout": 120,
        "max_retries": 5
      },
      "storage_config": {
        "data_dir": "./data/embeddings",
        "faiss_index_type": "IndexFlatIP"
      }
    }
  },
  {
    "type": "EmbeddingSync",
    "name": "embedding_sync_upload",
    "description": "Upload a local embedding database to HuggingFace Hub for sharing and collaboration. Creates a dataset repository with the database files and metadata.",
    "parameter": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "upload",
          "description": "Action to upload database to HuggingFace"
        },
        "database_name": {
          "type": "string",
          "description": "Name of the local database to upload"
        },
        "repository": {
          "type": "string",
          "description": "HuggingFace repository name (format: username/repo-name)"
        },
        "description": {
          "type": "string",
          "description": "Description for the HuggingFace dataset",
          "default": ""
        },
        "private": {
          "type": "boolean",
          "description": "Whether to create a private repository",
          "default": false
        },
        "commit_message": {
          "type": "string",
          "description": "Commit message for the upload",
          "default": "Upload embedding database"
        }
      },
      "required": [
        "action",
        "database_name",
        "repository",
        "description",
        "private",
        "commit_message"
      ]
    },
    "required_api_keys": [
      "HF_TOKEN"
    ],
    "configs": {
      "huggingface_config": {
        "token": "${HF_TOKEN}",
        "endpoint": "https://huggingface.co"
      },
      "storage_config": {
        "data_dir": "./data/embeddings",
        "export_dir": "./exports"
      }
    }
  },
  {
    "type": "EmbeddingSync",
    "name": "embedding_sync_download",
    "description": "Download an embedding database from HuggingFace Hub to local storage. Allows accessing databases shared by others or your own backups.",
    "parameter": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "const": "download",
          "description": "Action to download database from HuggingFace"
        },
        "repository": {
          "type": "string",
          "description": "HuggingFace repository to download from (format: username/repo-name)"
        },
        "local_name": {
          "type": "string",
          "description": "Local name for the downloaded database (optional, defaults to repo name)"
        },
        "overwrite": {
          "type": "boolean",
          "description": "Whether to overwrite existing local database with same name",
          "default": false
        }
      },
      "required": [
        "action",
        "repository",
        "local_name",
        "overwrite"
      ]
    },
    "required_api_keys": [
      "HF_TOKEN"
    ],
    "configs": {
      "huggingface_config": {
        "token": "${HF_TOKEN}",
        "endpoint": "https://huggingface.co"
      },
      "storage_config": {
        "data_dir": "./data/embeddings",
        "export_dir": "./exports"
      }
    }
  }
]
