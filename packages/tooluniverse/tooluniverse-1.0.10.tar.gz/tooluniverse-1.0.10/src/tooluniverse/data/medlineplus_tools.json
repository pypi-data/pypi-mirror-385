[
  {
    "name": "MedlinePlus_search_topics_by_keyword",
    "description": "Search for relevant information in MedlinePlus Web Service by keyword across health topics or other sub-libraries (such as drugs, genetics, etc.).",
    "parameter": {
      "type": "object",
      "properties": {
        "term": {
          "type": "string",
          "description": "Search keyword, e.g., \"diabetes\", needs to be URL encoded before passing."
        },
        "db": {
          "type": "string",
          "enum": [
            "healthTopics",
            "healthTopicsSpanish",
            "drugs",
            "drugsSpanish",
            "genetics",
            "medicalTests",
            "medicalEncyclopedia"
          ],
          "description": "Specify the database to search, e.g., healthTopics (English health topics), healthTopicsSpanish (Spanish health topics), drugs (English drugs), etc."
        },
        "rettype": {
          "type": "string",
          "enum": [
            "brief",
            "topic",
            "all"
          ],
          "description": "Result return format, options: brief (concise information, default), topic (detailed XML record), all (includes all available information).",
          "default": "topic"
        }
      },
      "required": [
        "term",
        "db",
        "rettype"
      ]
    },
    "fields": {
      "endpoint": "https://wsearch.nlm.nih.gov/ws/query?db={db}&term={term}&rettype={rettype}",
      "input_description": "Input parameters:\n- term: keyword to search (URL encoded);\n- db: database name, e.g., healthTopics, drugs, etc.;\n- rettype: return format, options: brief, topic, all.",
      "output_description": "Returns MedlinePlus Web Service response XML, will contain title, summary, links, etc. for matching topics, the returned data will be parsed into a Python dictionary for subsequent use."
    },
    "type": "MedlinePlusRESTTool"
  },
  {
    "name": "MedlinePlus_connect_lookup_by_code",
    "description": "Look up corresponding MedlinePlus page information through MedlinePlus Connect Web Service using clinical/drug/test codes (such as ICD-10 CM, RXCUI, LOINC, etc.), supports JSON or XML format return.",
    "parameter": {
      "type": "object",
      "properties": {
        "cs": {
          "type": "string",
          "description": "Code system OID, e.g., ICD-10 CM=2.16.840.1.113883.6.90, RXCUI=2.16.840.1.113883.6.88, LOINC=2.16.840.1.113883.6.1, etc."
        },
        "c": {
          "type": "string",
          "description": "Specific code value to query, e.g., \"E11.9\" (ICD-10 CM) or \"637188\" (RXCUI)."
        },
        "dn": {
          "type": "string",
          "description": "Optional, descriptive name (English) corresponding to the code, for drugs can fill in \"Chantix 0.5 MG Oral Tablet\", can improve matching accuracy.",
          "default": ""
        },
        "language": {
          "type": "string",
          "enum": [
            "en",
            "es"
          ],
          "description": "Return information language, \"en\" for English, \"es\" for Spanish, default \"en\".",
          "default": "en"
        },
        "format": {
          "type": "string",
          "enum": [
            "json",
            "xml"
          ],
          "description": "Return format, options \"json\" or \"xml\", default \"json\".",
          "default": "json"
        }
      },
      "required": [
        "cs",
        "c",
        "dn",
        "language",
        "format"
      ]
    },
    "fields": {
      "endpoint": "https://connect.medlineplus.gov/service?mainSearchCriteria.v.cs={cs}&mainSearchCriteria.v.c={c}&informationRecipient.languageCode.c={language}&knowledgeResponseType={format}&mainSearchCriteria.v.dn={dn}",
      "input_description": "Input parameters:\n- cs: code system OID;\n- c: specific code value;\n- dn: optional code descriptive name;\n- language: return language (en or es);\n- format: return format (json or xml).",
      "output_description": "Returns MedlinePlus Connect Web Service response, can include title, links, summary, etc. of MedlinePlus pages matching the code. If format=json, returns JSON format and parses to Python dictionary; if format=xml, returns XML and converts it to dictionary."
    },
    "type": "MedlinePlusRESTTool"
  },
  {
    "name": "MedlinePlus_get_genetics_condition_by_name",
    "description": "Get detailed information from MedlinePlus Genetics corresponding to genetic condition name, supports JSON or XML format return.",
    "parameter": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "description": "URL slug of genetic condition, e.g., \"alzheimer-disease\", must match MedlinePlus page path."
        },
        "format": {
          "type": "string",
          "enum": [
            "json",
            "xml"
          ],
          "description": "Return format, options \"json\" or \"xml\", default \"json\".",
          "default": "json"
        }
      },
      "required": [
        "condition",
        "format"
      ]
    },
    "fields": {
      "endpoint": "https://medlineplus.gov/download/genetics/condition/{condition}.{format}",
      "input_description": "Input parameters:\n- condition: genetic condition name (URL slug), e.g., \"alzheimer-disease\";\n- format: return format (json or xml).",
      "output_description": "Returns JSON or XML data containing detailed information about the genetic condition, data includes consumer version description, symptoms, gene information, treatment options, etc., return value will be parsed into Python dictionary or OrderedDict for subsequent use."
    },
    "type": "MedlinePlusRESTTool"
  },
  {
    "name": "MedlinePlus_get_genetics_gene_by_name",
    "description": "Get detailed information from MedlinePlus Genetics corresponding to gene name, supports JSON or XML format return.",
    "parameter": {
      "type": "object",
      "properties": {
        "gene": {
          "type": "string",
          "description": "URL slug of gene name, e.g., \"BRCA1\", must match MedlinePlus page path."
        },
        "format": {
          "type": "string",
          "enum": [
            "json",
            "xml"
          ],
          "description": "Return format, options \"json\" or \"xml\", default \"json\".",
          "default": "json"
        }
      },
      "required": [
        "gene",
        "format"
      ]
    },
    "fields": {
      "endpoint": "https://medlineplus.gov/download/genetics/gene/{gene}.{format}",
      "input_description": "Input parameters:\n- gene: gene name (URL slug), e.g., \"BRCA1\";\n- format: return format (json or xml).",
      "output_description": "Returns JSON or XML data containing detailed gene information, including consumer version description, gene function, related genetic conditions, gene structure, etc., return result will be parsed into Python dictionary or OrderedDict."
    },
    "type": "MedlinePlusRESTTool"
  },
  {
    "name": "MedlinePlus_get_genetics_index",
    "description": "Download index file (XML) of all genetics entries in MedlinePlus, get complete list in one call.",
    "parameter": {
      "type": "object",
      "properties": {},
      "required": []
    },
    "fields": {
      "endpoint": "https://medlineplus.gov/download/TopicIndex.xml",
      "input_description": "No input parameters needed, directly call to get complete genetics index.",
      "output_description": "Returns XML index containing all genetics entries, data will be parsed into Python dictionary or OrderedDict, can be used for offline caching or batch processing."
    },
    "type": "MedlinePlusRESTTool"
  }
]
