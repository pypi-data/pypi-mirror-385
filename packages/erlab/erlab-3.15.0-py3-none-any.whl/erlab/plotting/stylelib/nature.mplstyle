### MATPLOTLIBRC FORMAT
# NOTE FOR END USERS: DO NOT EDIT THIS FILE!

#### CONFIGURATION BEGINS HERE

# ***************************************************************************
# * LINES                                                                   *
# ***************************************************************************
# See https://matplotlib.org/api/artist_api.html#module-matplotlib.lines
# for more information on line properties.
lines.linewidth: 0.5
lines.markeredgewidth: 0.5


# ***************************************************************************
# * PATCHES                                                                 *
# ***************************************************************************
# Patches are graphical objects that fill 2D space, like polygons or circles.
# See https://matplotlib.org/api/artist_api.html#module-matplotlib.patches
# for more information on patch properties.
patch.linewidth: 0.5


# ***************************************************************************
# * FONT                                                                    *
# ***************************************************************************
# The font properties used by `text.Text`.
# See https://matplotlib.org/api/font_manager_api.html for more information
# on font properties.  The 6 font properties used for font matching are
# given below with their default values.
#
# The font.family property can take either a single or multiple entries of any
# combination of concrete font names (not supported when rendering text with
# usetex) or the following five generic values:
#     - 'serif' (e.g., Times),
#     - 'sans-serif' (e.g., Helvetica),
#     - 'cursive' (e.g., Zapf-Chancery),
#     - 'fantasy' (e.g., Western), and
#     - 'monospace' (e.g., Courier).
# Each of these values has a corresponding default list of font names
# (font.serif, etc.); the first available font in the list is used.  Note that
# for font.serif, font.sans-serif, and font.monospace, the first element of
# the list (a DejaVu font) will always be used because DejaVu is shipped with
# Matplotlib and is thus guaranteed to be available; the other entries are
# left as examples of other possible values.
#
# The font.style property has three values: normal (or roman), italic
# or oblique.  The oblique style will be used for italic, if it is not
# present.
#
# The font.variant property has two values: normal or small-caps.  For
# TrueType fonts, which are scalable fonts, small-caps is equivalent
# to using a font size of 'smaller', or about 83%% of the current font
# size.
#
# The font.weight property has effectively 13 values: normal, bold,
# bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
# 400, and bold is 700.  bolder and lighter are relative values with
# respect to the current weight.
#
# The font.stretch property has 11 values: ultra-condensed,
# extra-condensed, condensed, semi-condensed, normal, semi-expanded,
# expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
# property is not currently implemented.
#
# The font.size property is the default font size for text, given in points.
# 10 pt is the standard value.
#
# Note that font.size controls default text sizes.  To configure
# special text sizes tick labels, axes, labels, title, etc., see the rc
# settings for axes and ticks.  Special text sizes can be defined
# relative to font.size, using the following values: xx-small, x-small,
# small, medium, large, x-large, xx-large, larger, or smaller

font.family: sans-serif
font.style: normal
font.variant: normal
font.weight: normal
font.stretch: normal

# font.serif: Symbol, Times New Roman, serif
font.serif: Times New Roman, Symbol, serif
font.sans-serif: Arial, Symbol
font.cursive: Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, Comic Neue, Comic Sans MS, cursive
font.fantasy: xkcd, fantasy
font.monospace: Courier New, Courier, Fixed, Terminal, monospace


# ***************************************************************************
# * TEXT                                                                    *
# ***************************************************************************
# The text properties used by `text.Text`.
# See https://matplotlib.org/api/artist_api.html#module-matplotlib.text
# for more information on text properties
text.hinting: default
text.hinting_factor: 8
text.kerning_factor: 0


# ***************************************************************************
# * LaTeX                                                                   *
# ***************************************************************************
# For more information on LaTeX properties, see
# https://matplotlib.org/tutorials/text/usetex.html
text.usetex: False
text.latex.preamble:

# The following settings allow you to select the fonts in math mode.
mathtext.fontset: custom
mathtext.bf: Arial:style=normal:variant=normal:weight=bold:stretch=normal
mathtext.cal: cursive
mathtext.it: Arial:style=italic:variant=normal:weight=normal:stretch=normal,Symbol
mathtext.rm: Arial:style=normal:variant=normal:weight=normal:stretch=normal,Symbol
mathtext.sf: Arial:style=normal:variant=normal:weight=normal:stretch=normal
mathtext.tt: monospace
mathtext.fallback: None
mathtext.default: it

# ***************************************************************************
# * AXES                                                                    *
# ***************************************************************************
# Following are default face and edge colors, default tick sizes,
# default font sizes for tick labels, and so on.  See
# https://matplotlib.org/api/axes_api.html#module-matplotlib.axes

axes.facecolor: None
axes.edgecolor: black
axes.linewidth: 0.25
axes.grid: False
axes.grid.axis: both
axes.grid.which: major
axes.titlelocation: left
axes.titlesize: medium
axes.titlecolor: auto
axes.titley: None
axes.titlepad: 6.0
axes.labelsize: medium
axes.labelpad: 2.0
axes.labelcolor: black
axes.axisbelow: line

axes.titleweight: normal
axes.labelweight: normal
axes.unicode_minus: True

axes.xmargin: 0
axes.ymargin: .05
axes.zmargin: .05

# ***************************************************************************
# * TICKS                                                                   *
# ***************************************************************************
# See https://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.top: False
xtick.bottom: True
xtick.labeltop: False
xtick.labelbottom: True
xtick.major.size: 2.5
xtick.minor.size: 1.5
xtick.major.width: 0.25
xtick.minor.width: 0.25
xtick.major.pad: 2.5
xtick.minor.pad: 1.0
xtick.color: black
xtick.labelcolor: inherit
xtick.labelsize: medium
xtick.direction: out
xtick.minor.visible: False
xtick.major.top: True
xtick.major.bottom: True
xtick.minor.top: True
xtick.minor.bottom: True
xtick.alignment: center

ytick.left: True
ytick.right: False
ytick.labelleft: True
ytick.labelright: False
ytick.major.size: 2.5
ytick.minor.size: 1.5
ytick.major.width: 0.25
ytick.minor.width: 0.25
ytick.major.pad: 2.5
ytick.minor.pad: 1.0
ytick.color: black
ytick.labelcolor: inherit
ytick.labelsize: medium
ytick.direction: out
ytick.minor.visible: False
ytick.major.left: True
ytick.major.right: True
ytick.minor.left: True
ytick.minor.right: True
ytick.alignment: center_baseline

# ***************************************************************************
# * FIGURE                                                                  *
# ***************************************************************************
# See https://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
figure.titleweight: normal
figure.labelweight: normal
figure.figsize: 3.4645669291338583, 2.141220118503573

figure.autolayout: False
figure.constrained_layout.use: True
figure.constrained_layout.h_pad: 0.02083333333
figure.constrained_layout.w_pad: 0.02083333333
figure.constrained_layout.hspace: 0.0
figure.constrained_layout.wspace: 0.0

# ***************************************************************************
# * SAVING FIGURES                                                          *
# ***************************************************************************
# The default savefig parameters can be different from the display parameters
# e.g., you may want a higher resolution, or to make the figure
# background white

savefig.dpi: 600

## PDF backend params
pdf.fonttype: 42

## pgf parameter
# See https://matplotlib.org/tutorials/text/pgf.html for more information.
pgf.rcfonts: False
# pgf.preamble: "\\usepackage[silent]{fontspec}\n\\usepackage{unicode-math}\n\\usepackage{newcomputermodern}\n\\usepackage[sfdefault,light,lf]{FiraSans}\n\\setmathfont{Fira Math}\n\\setmathfont[range=up/{greek,Greek,latin,Latin,num}]{Fira Sans Light}\n\\setmathfont[range=it/{greek,Greek,latin,Latin}]{Fira Sans Light Italic}\n\\setmathfont[range=bfup/{greek,Greek,latin,Latin,num}]{Fira Sans Regular}\n\\setmathfont[range=bfit/{greek,Greek,latin,Latin}]{Fira Sans Italic}\n\\renewcommand{\\rmfamily}{\\fontseries{l}}"
# pgf.texsystem: lualatex
