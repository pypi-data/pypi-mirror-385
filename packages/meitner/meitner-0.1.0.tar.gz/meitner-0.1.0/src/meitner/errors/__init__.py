"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from .meitnererror import MeitnerError
from typing import TYPE_CHECKING
from importlib import import_module
import builtins
import sys

if TYPE_CHECKING:
    from .auditeventsearch422responsebody_error import (
        AuditEventSearch422ResponseBodyError,
        AuditEventSearch422ResponseBodyErrorData,
    )
    from .employeecreate422responsebody_error import (
        EmployeeCreate422ResponseBodyError,
        EmployeeCreate422ResponseBodyErrorData,
    )
    from .employeeplacementcreate422responsebody_error import (
        EmployeePlacementCreate422ResponseBodyError,
        EmployeePlacementCreate422ResponseBodyErrorData,
    )
    from .employeeplacementsearch422responsebody_error import (
        EmployeePlacementSearch422ResponseBodyError,
        EmployeePlacementSearch422ResponseBodyErrorData,
    )
    from .employeeplacementupdate422responsebody_error import (
        EmployeePlacementUpdate422ResponseBodyError,
        EmployeePlacementUpdate422ResponseBodyErrorData,
    )
    from .employeesearch422responsebody_error import (
        EmployeeSearch422ResponseBodyError,
        EmployeeSearch422ResponseBodyErrorData,
    )
    from .employeeupdate422responsebody_error import (
        EmployeeUpdate422ResponseBodyError,
        EmployeeUpdate422ResponseBodyErrorData,
    )
    from .error400responsebody import Error400ResponseBody, Error400ResponseBodyData
    from .error401responsebody import Error401ResponseBody, Error401ResponseBodyData
    from .error403responsebody import Error403ResponseBody, Error403ResponseBodyData
    from .error404responsebody import Error404ResponseBody, Error404ResponseBodyData
    from .error409responsebody import Error409ResponseBody, Error409ResponseBodyData
    from .error429responsebody import Error429ResponseBody, Error429ResponseBodyData
    from .error500responsebody import Error500ResponseBody, Error500ResponseBodyData
    from .groupcreate422responsebody_error import (
        GroupCreate422ResponseBodyError,
        GroupCreate422ResponseBodyErrorData,
    )
    from .groupsearch422responsebody_error import (
        GroupSearch422ResponseBodyError,
        GroupSearch422ResponseBodyErrorData,
    )
    from .groupupdate422responsebody_error import (
        GroupUpdate422ResponseBodyError,
        GroupUpdate422ResponseBodyErrorData,
    )
    from .guardiancreate422responsebody_error import (
        GuardianCreate422ResponseBodyError,
        GuardianCreate422ResponseBodyErrorData,
    )
    from .guardiansearch422responsebody_error import (
        GuardianSearch422ResponseBodyError,
        GuardianSearch422ResponseBodyErrorData,
    )
    from .guardianupdate422responsebody_error import (
        GuardianUpdate422ResponseBodyError,
        GuardianUpdate422ResponseBodyErrorData,
    )
    from .meitnerdefaulterror import MeitnerDefaultError
    from .no_response_error import NoResponseError
    from .responsevalidationerror import ResponseValidationError
    from .schoolcreate422responsebody_error import (
        SchoolCreate422ResponseBodyError,
        SchoolCreate422ResponseBodyErrorData,
    )
    from .schoolsearch422responsebody_error import (
        SchoolSearch422ResponseBodyError,
        SchoolSearch422ResponseBodyErrorData,
    )
    from .schoolupdate422responsebody_error import (
        SchoolUpdate422ResponseBodyError,
        SchoolUpdate422ResponseBodyErrorData,
    )
    from .studentcreate422responsebody_error import (
        StudentCreate422ResponseBodyError,
        StudentCreate422ResponseBodyErrorData,
    )
    from .studentplacementcreate422responsebody_error import (
        StudentPlacementCreate422ResponseBodyError,
        StudentPlacementCreate422ResponseBodyErrorData,
    )
    from .studentplacementsearch422responsebody_error import (
        StudentPlacementSearch422ResponseBodyError,
        StudentPlacementSearch422ResponseBodyErrorData,
    )
    from .studentplacementupdate422responsebody_error import (
        StudentPlacementUpdate422ResponseBodyError,
        StudentPlacementUpdate422ResponseBodyErrorData,
    )
    from .studentsearch422responsebody_error import (
        StudentSearch422ResponseBodyError,
        StudentSearch422ResponseBodyErrorData,
    )
    from .studentupdate422responsebody_error import (
        StudentUpdate422ResponseBodyError,
        StudentUpdate422ResponseBodyErrorData,
    )

__all__ = [
    "AuditEventSearch422ResponseBodyError",
    "AuditEventSearch422ResponseBodyErrorData",
    "EmployeeCreate422ResponseBodyError",
    "EmployeeCreate422ResponseBodyErrorData",
    "EmployeePlacementCreate422ResponseBodyError",
    "EmployeePlacementCreate422ResponseBodyErrorData",
    "EmployeePlacementSearch422ResponseBodyError",
    "EmployeePlacementSearch422ResponseBodyErrorData",
    "EmployeePlacementUpdate422ResponseBodyError",
    "EmployeePlacementUpdate422ResponseBodyErrorData",
    "EmployeeSearch422ResponseBodyError",
    "EmployeeSearch422ResponseBodyErrorData",
    "EmployeeUpdate422ResponseBodyError",
    "EmployeeUpdate422ResponseBodyErrorData",
    "Error400ResponseBody",
    "Error400ResponseBodyData",
    "Error401ResponseBody",
    "Error401ResponseBodyData",
    "Error403ResponseBody",
    "Error403ResponseBodyData",
    "Error404ResponseBody",
    "Error404ResponseBodyData",
    "Error409ResponseBody",
    "Error409ResponseBodyData",
    "Error429ResponseBody",
    "Error429ResponseBodyData",
    "Error500ResponseBody",
    "Error500ResponseBodyData",
    "GroupCreate422ResponseBodyError",
    "GroupCreate422ResponseBodyErrorData",
    "GroupSearch422ResponseBodyError",
    "GroupSearch422ResponseBodyErrorData",
    "GroupUpdate422ResponseBodyError",
    "GroupUpdate422ResponseBodyErrorData",
    "GuardianCreate422ResponseBodyError",
    "GuardianCreate422ResponseBodyErrorData",
    "GuardianSearch422ResponseBodyError",
    "GuardianSearch422ResponseBodyErrorData",
    "GuardianUpdate422ResponseBodyError",
    "GuardianUpdate422ResponseBodyErrorData",
    "MeitnerDefaultError",
    "MeitnerError",
    "NoResponseError",
    "ResponseValidationError",
    "SchoolCreate422ResponseBodyError",
    "SchoolCreate422ResponseBodyErrorData",
    "SchoolSearch422ResponseBodyError",
    "SchoolSearch422ResponseBodyErrorData",
    "SchoolUpdate422ResponseBodyError",
    "SchoolUpdate422ResponseBodyErrorData",
    "StudentCreate422ResponseBodyError",
    "StudentCreate422ResponseBodyErrorData",
    "StudentPlacementCreate422ResponseBodyError",
    "StudentPlacementCreate422ResponseBodyErrorData",
    "StudentPlacementSearch422ResponseBodyError",
    "StudentPlacementSearch422ResponseBodyErrorData",
    "StudentPlacementUpdate422ResponseBodyError",
    "StudentPlacementUpdate422ResponseBodyErrorData",
    "StudentSearch422ResponseBodyError",
    "StudentSearch422ResponseBodyErrorData",
    "StudentUpdate422ResponseBodyError",
    "StudentUpdate422ResponseBodyErrorData",
]

_dynamic_imports: dict[str, str] = {
    "AuditEventSearch422ResponseBodyError": ".auditeventsearch422responsebody_error",
    "AuditEventSearch422ResponseBodyErrorData": ".auditeventsearch422responsebody_error",
    "EmployeeCreate422ResponseBodyError": ".employeecreate422responsebody_error",
    "EmployeeCreate422ResponseBodyErrorData": ".employeecreate422responsebody_error",
    "EmployeePlacementCreate422ResponseBodyError": ".employeeplacementcreate422responsebody_error",
    "EmployeePlacementCreate422ResponseBodyErrorData": ".employeeplacementcreate422responsebody_error",
    "EmployeePlacementSearch422ResponseBodyError": ".employeeplacementsearch422responsebody_error",
    "EmployeePlacementSearch422ResponseBodyErrorData": ".employeeplacementsearch422responsebody_error",
    "EmployeePlacementUpdate422ResponseBodyError": ".employeeplacementupdate422responsebody_error",
    "EmployeePlacementUpdate422ResponseBodyErrorData": ".employeeplacementupdate422responsebody_error",
    "EmployeeSearch422ResponseBodyError": ".employeesearch422responsebody_error",
    "EmployeeSearch422ResponseBodyErrorData": ".employeesearch422responsebody_error",
    "EmployeeUpdate422ResponseBodyError": ".employeeupdate422responsebody_error",
    "EmployeeUpdate422ResponseBodyErrorData": ".employeeupdate422responsebody_error",
    "Error400ResponseBody": ".error400responsebody",
    "Error400ResponseBodyData": ".error400responsebody",
    "Error401ResponseBody": ".error401responsebody",
    "Error401ResponseBodyData": ".error401responsebody",
    "Error403ResponseBody": ".error403responsebody",
    "Error403ResponseBodyData": ".error403responsebody",
    "Error404ResponseBody": ".error404responsebody",
    "Error404ResponseBodyData": ".error404responsebody",
    "Error409ResponseBody": ".error409responsebody",
    "Error409ResponseBodyData": ".error409responsebody",
    "Error429ResponseBody": ".error429responsebody",
    "Error429ResponseBodyData": ".error429responsebody",
    "Error500ResponseBody": ".error500responsebody",
    "Error500ResponseBodyData": ".error500responsebody",
    "GroupCreate422ResponseBodyError": ".groupcreate422responsebody_error",
    "GroupCreate422ResponseBodyErrorData": ".groupcreate422responsebody_error",
    "GroupSearch422ResponseBodyError": ".groupsearch422responsebody_error",
    "GroupSearch422ResponseBodyErrorData": ".groupsearch422responsebody_error",
    "GroupUpdate422ResponseBodyError": ".groupupdate422responsebody_error",
    "GroupUpdate422ResponseBodyErrorData": ".groupupdate422responsebody_error",
    "GuardianCreate422ResponseBodyError": ".guardiancreate422responsebody_error",
    "GuardianCreate422ResponseBodyErrorData": ".guardiancreate422responsebody_error",
    "GuardianSearch422ResponseBodyError": ".guardiansearch422responsebody_error",
    "GuardianSearch422ResponseBodyErrorData": ".guardiansearch422responsebody_error",
    "GuardianUpdate422ResponseBodyError": ".guardianupdate422responsebody_error",
    "GuardianUpdate422ResponseBodyErrorData": ".guardianupdate422responsebody_error",
    "MeitnerDefaultError": ".meitnerdefaulterror",
    "NoResponseError": ".no_response_error",
    "ResponseValidationError": ".responsevalidationerror",
    "SchoolCreate422ResponseBodyError": ".schoolcreate422responsebody_error",
    "SchoolCreate422ResponseBodyErrorData": ".schoolcreate422responsebody_error",
    "SchoolSearch422ResponseBodyError": ".schoolsearch422responsebody_error",
    "SchoolSearch422ResponseBodyErrorData": ".schoolsearch422responsebody_error",
    "SchoolUpdate422ResponseBodyError": ".schoolupdate422responsebody_error",
    "SchoolUpdate422ResponseBodyErrorData": ".schoolupdate422responsebody_error",
    "StudentCreate422ResponseBodyError": ".studentcreate422responsebody_error",
    "StudentCreate422ResponseBodyErrorData": ".studentcreate422responsebody_error",
    "StudentPlacementCreate422ResponseBodyError": ".studentplacementcreate422responsebody_error",
    "StudentPlacementCreate422ResponseBodyErrorData": ".studentplacementcreate422responsebody_error",
    "StudentPlacementSearch422ResponseBodyError": ".studentplacementsearch422responsebody_error",
    "StudentPlacementSearch422ResponseBodyErrorData": ".studentplacementsearch422responsebody_error",
    "StudentPlacementUpdate422ResponseBodyError": ".studentplacementupdate422responsebody_error",
    "StudentPlacementUpdate422ResponseBodyErrorData": ".studentplacementupdate422responsebody_error",
    "StudentSearch422ResponseBodyError": ".studentsearch422responsebody_error",
    "StudentSearch422ResponseBodyErrorData": ".studentsearch422responsebody_error",
    "StudentUpdate422ResponseBodyError": ".studentupdate422responsebody_error",
    "StudentUpdate422ResponseBodyErrorData": ".studentupdate422responsebody_error",
}


def dynamic_import(modname, retries=3):
    for attempt in range(retries):
        try:
            return import_module(modname, __package__)
        except KeyError:
            # Clear any half-initialized module and retry
            sys.modules.pop(modname, None)
            if attempt == retries - 1:
                break
    raise KeyError(f"Failed to import module '{modname}' after {retries} attempts")


def __getattr__(attr_name: str) -> object:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__} "
        )

    try:
        module = dynamic_import(module_name)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = builtins.list(_dynamic_imports.keys())
    return builtins.sorted(lazy_attrs)
