"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .employeeplacement import EmployeePlacement, EmployeePlacementTypedDict
from .employeeplacementupdate import (
    EmployeePlacementUpdate,
    EmployeePlacementUpdateTypedDict,
)
from meitner.types import BaseModel
from meitner.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Dict, List
from typing_extensions import Annotated, TypedDict


class EmployeePlacementUpdateRequestTypedDict(TypedDict):
    id: str
    r"""The unique identifier of the EmployeePlacement to update"""
    employee_placement_update: EmployeePlacementUpdateTypedDict
    r"""Request body"""


class EmployeePlacementUpdateRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique identifier of the EmployeePlacement to update"""

    employee_placement_update: Annotated[
        EmployeePlacementUpdate,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""Request body"""


class EmployeePlacementUpdateResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: EmployeePlacementTypedDict


class EmployeePlacementUpdateResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: EmployeePlacement
