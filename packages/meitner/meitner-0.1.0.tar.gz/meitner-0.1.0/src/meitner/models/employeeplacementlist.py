"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .employeeplacement import EmployeePlacement, EmployeePlacementTypedDict
from meitner.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class EmployeePlacementListPaginationTypedDict(TypedDict):
    r"""Pagination information"""

    offset: int
    r"""Number of items to skip from the beginning of the result set"""
    limit: int
    r"""Maximum number of items to return in the result set"""
    total: int
    r"""Total number of items available for pagination"""


class EmployeePlacementListPagination(BaseModel):
    r"""Pagination information"""

    offset: int
    r"""Number of items to skip from the beginning of the result set"""

    limit: int
    r"""Maximum number of items to return in the result set"""

    total: int
    r"""Total number of items available for pagination"""


class EmployeePlacementListTypedDict(TypedDict):
    r"""Response for EmployeePlacement List operation - returns a paginated list of EmployeePlacement"""

    data: NotRequired[List[EmployeePlacementTypedDict]]
    r"""Array of EmployeePlacement objects"""
    pagination: NotRequired[EmployeePlacementListPaginationTypedDict]
    r"""Pagination information"""


class EmployeePlacementList(BaseModel):
    r"""Response for EmployeePlacement List operation - returns a paginated list of EmployeePlacement"""

    data: Optional[List[EmployeePlacement]] = None
    r"""Array of EmployeePlacement objects"""

    pagination: Optional[EmployeePlacementListPagination] = None
    r"""Pagination information"""
