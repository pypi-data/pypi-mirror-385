"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .student import Student, StudentTypedDict
from .studentupdate import StudentUpdate, StudentUpdateTypedDict
from meitner.types import BaseModel
from meitner.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Dict, List
from typing_extensions import Annotated, TypedDict


class StudentUpdateRequestTypedDict(TypedDict):
    id: str
    r"""The unique identifier of the Student to update"""
    student_update: StudentUpdateTypedDict
    r"""Request body"""


class StudentUpdateRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique identifier of the Student to update"""

    student_update: Annotated[
        StudentUpdate,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""Request body"""


class StudentUpdateResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: StudentTypedDict


class StudentUpdateResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: Student
