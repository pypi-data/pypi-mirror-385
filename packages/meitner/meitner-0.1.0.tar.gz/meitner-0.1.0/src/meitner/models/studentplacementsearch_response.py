"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .studentplacement import StudentPlacement, StudentPlacementTypedDict
from meitner.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class StudentPlacementSearchPaginationTypedDict(TypedDict):
    r"""Pagination information"""

    offset: int
    r"""Number of items to skip from the beginning of the result set"""
    limit: int
    r"""Maximum number of items to return in the result set"""
    total: int
    r"""Total number of items available for pagination"""


class StudentPlacementSearchPagination(BaseModel):
    r"""Pagination information"""

    offset: int
    r"""Number of items to skip from the beginning of the result set"""

    limit: int
    r"""Maximum number of items to return in the result set"""

    total: int
    r"""Total number of items available for pagination"""


class StudentPlacementSearchResponseTypedDict(TypedDict):
    r"""Response for StudentPlacement Search operation - returns filtered StudentPlacement results"""

    data: NotRequired[List[StudentPlacementTypedDict]]
    r"""Array of StudentPlacement objects"""
    pagination: NotRequired[StudentPlacementSearchPaginationTypedDict]
    r"""Pagination information"""


class StudentPlacementSearchResponse(BaseModel):
    r"""Response for StudentPlacement Search operation - returns filtered StudentPlacement results"""

    data: Optional[List[StudentPlacement]] = None
    r"""Array of StudentPlacement objects"""

    pagination: Optional[StudentPlacementSearchPagination] = None
    r"""Pagination information"""
