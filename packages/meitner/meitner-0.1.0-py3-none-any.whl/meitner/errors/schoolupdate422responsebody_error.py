"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
import httpx
from meitner.errors import MeitnerError
from meitner.models import (
    schoolupdate422responsebody_error as models_schoolupdate422responsebody_error,
)
from meitner.types import BaseModel
from typing import Optional


class SchoolUpdate422ResponseBodyErrorData(BaseModel):
    error: models_schoolupdate422responsebody_error.SchoolUpdate422ResponseBodyError


@dataclass(unsafe_hash=True)
class SchoolUpdate422ResponseBodyError(MeitnerError):
    r"""Validation error for School Update operation - request data failed validation"""

    data: SchoolUpdate422ResponseBodyErrorData = field(hash=False)

    def __init__(
        self,
        data: SchoolUpdate422ResponseBodyErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.error.message) or fallback
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
