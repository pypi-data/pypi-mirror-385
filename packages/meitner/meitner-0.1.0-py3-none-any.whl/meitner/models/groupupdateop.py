"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .group import Group, GroupTypedDict
from .groupupdate import GroupUpdate, GroupUpdateTypedDict
from meitner.types import BaseModel
from meitner.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Dict, List
from typing_extensions import Annotated, TypedDict


class GroupUpdateRequestTypedDict(TypedDict):
    id: str
    r"""The unique identifier of the Group to update"""
    group_update: GroupUpdateTypedDict
    r"""Request body"""


class GroupUpdateRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique identifier of the Group to update"""

    group_update: Annotated[
        GroupUpdate,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""Request body"""


class GroupUpdateResponseTypedDict(TypedDict):
    headers: Dict[str, List[str]]
    result: GroupTypedDict


class GroupUpdateResponse(BaseModel):
    headers: Dict[str, List[str]]

    result: Group
