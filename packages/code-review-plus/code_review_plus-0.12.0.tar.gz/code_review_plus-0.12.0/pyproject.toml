[project]
name = "code-review-plus"
version = "0.12.0"
description = "Add your description here"
requires-python = ">=3.10"
dependencies = [
    "ast2json>=0.4",
    "click>=8.2.1",
    "deprecated>=1.2.18",
    "gitignore-parser>=0.1.13",
    "pur>=7.3.3",
    "pyaml>=25.7.0",
    "pydantic>=2.11.7",
    "python-dotenv>=1.1.1",
    "requests>=2.32.5",
    "rich>=14.1.0",
    "toml>=0.10.2",
]
[project.scripts]
code-review-plus = "code_review.cli:cli"

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.1",
    "twine>=6.1.0",
]
[tool.ruff]
line-length = 120
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".vscode",
    "__pypackages__",
    "_build",
    "node_modules",
    "site-packages",
    "**/migrations/*.py",
]
[tool.ruff.lint]

# https://docs.astral.sh/ruff/rules/

select = [
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "D", # pydocstyle
    "E", # pycodestyle
    "ERA", # eradicate
    "F", # Pyflakes
    "FIX", # flake8-fixme
    "G", # flake8-logging-format
    "I", # isort
    "LOG", # flake8-logging
    "N", # pep-8 naming
    "PL", # Pylint
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    # t"T20", # flake8-print
    "UP", # pyupgrade
]
ignore = [
    "ANN101", # Missing type annotation for self in method
    "D100"
]
[tool.ruff.lint.pydocstyle]
convention = "google"
[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
"__init__.py" = ["E402", "D"]
# Ignore `D` rules everywhere except for the `src/` directory.
"**/tests/**.py" = ["D", "ANN", "ERA", "PLR", "ARG", "SLF"]
"**/migrations/**.py" = ["D", "ANN", "ERA", "PLR", "ARG", "SLF"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
# Automatically look for packages in the current directory (default behavior for flat-layout)
where = ["."]

# IMPORTANT: Exclude the 'output' folder from being considered a package
exclude = ["output*"]
