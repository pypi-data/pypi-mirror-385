{"version":3,"file":"static/js/444.ccc00903.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-353BL4L5.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/pieDiagram-NIOCPIFQ.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  populateCommonDb\n} from \"./chunk-353BL4L5.mjs\";\nimport {\n  cleanAndMerge,\n  parseFontSize\n} from \"./chunk-55PJQP7W.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-P3VETL53.mjs\";\nimport {\n  __name,\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig2 as getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/diagrams/pie/pieParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/pie/pieDb.ts\nvar DEFAULT_PIE_CONFIG = defaultConfig_default.pie;\nvar DEFAULT_PIE_DB = {\n  sections: /* @__PURE__ */ new Map(),\n  showData: false,\n  config: DEFAULT_PIE_CONFIG\n};\nvar sections = DEFAULT_PIE_DB.sections;\nvar showData = DEFAULT_PIE_DB.showData;\nvar config = structuredClone(DEFAULT_PIE_CONFIG);\nvar getConfig2 = /* @__PURE__ */ __name(() => structuredClone(config), \"getConfig\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  sections = /* @__PURE__ */ new Map();\n  showData = DEFAULT_PIE_DB.showData;\n  clear();\n}, \"clear\");\nvar addSection = /* @__PURE__ */ __name(({ label, value }) => {\n  if (!sections.has(label)) {\n    sections.set(label, value);\n    log.debug(`added new section: ${label}, with value: ${value}`);\n  }\n}, \"addSection\");\nvar getSections = /* @__PURE__ */ __name(() => sections, \"getSections\");\nvar setShowData = /* @__PURE__ */ __name((toggle) => {\n  showData = toggle;\n}, \"setShowData\");\nvar getShowData = /* @__PURE__ */ __name(() => showData, \"getShowData\");\nvar db = {\n  getConfig: getConfig2,\n  clear: clear2,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  setShowData,\n  getShowData\n};\n\n// src/diagrams/pie/pieParser.ts\nvar populateDb = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  db2.setShowData(ast.showData);\n  ast.sections.map(db2.addSection);\n}, \"populateDb\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"pie\", input);\n    log.debug(ast);\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/pie/pieStyles.ts\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${options.pieOuterStrokeColor};\n    stroke-width: ${options.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`, \"getStyles\");\nvar pieStyles_default = getStyles;\n\n// src/diagrams/pie/pieRenderer.ts\nimport { arc, pie as d3pie, scaleOrdinal } from \"d3\";\nvar createPieArcs = /* @__PURE__ */ __name((sections2) => {\n  const pieData = [...sections2.entries()].map((element) => {\n    return {\n      label: element[0],\n      value: element[1]\n    };\n  }).sort((a, b) => {\n    return b.value - a.value;\n  });\n  const pie = d3pie().value(\n    (d3Section) => d3Section.value\n  );\n  return pie(pieData);\n}, \"createPieArcs\");\nvar draw = /* @__PURE__ */ __name((text, id, _version, diagObj) => {\n  log.debug(\"rendering pie chart\\n\" + text);\n  const db2 = diagObj.db;\n  const globalConfig = getConfig();\n  const pieConfig = cleanAndMerge(db2.getConfig(), globalConfig.pie);\n  const MARGIN = 40;\n  const LEGEND_RECT_SIZE = 18;\n  const LEGEND_SPACING = 4;\n  const height = 450;\n  const pieWidth = height;\n  const svg = selectSvgElement(id);\n  const group = svg.append(\"g\");\n  group.attr(\"transform\", \"translate(\" + pieWidth / 2 + \",\" + height / 2 + \")\");\n  const { themeVariables } = globalConfig;\n  let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\n  outerStrokeWidth ??= 2;\n  const textPosition = pieConfig.textPosition;\n  const radius = Math.min(pieWidth, height) / 2 - MARGIN;\n  const arcGenerator = arc().innerRadius(0).outerRadius(radius);\n  const labelArcGenerator = arc().innerRadius(radius * textPosition).outerRadius(radius * textPosition);\n  group.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius + outerStrokeWidth / 2).attr(\"class\", \"pieOuterCircle\");\n  const sections2 = db2.getSections();\n  const arcs = createPieArcs(sections2);\n  const myGeneratedColors = [\n    themeVariables.pie1,\n    themeVariables.pie2,\n    themeVariables.pie3,\n    themeVariables.pie4,\n    themeVariables.pie5,\n    themeVariables.pie6,\n    themeVariables.pie7,\n    themeVariables.pie8,\n    themeVariables.pie9,\n    themeVariables.pie10,\n    themeVariables.pie11,\n    themeVariables.pie12\n  ];\n  const color = scaleOrdinal(myGeneratedColors);\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", (datum) => {\n    return color(datum.data.label);\n  }).attr(\"class\", \"pieCircle\");\n  let sum = 0;\n  sections2.forEach((section) => {\n    sum += section;\n  });\n  group.selectAll(\"mySlices\").data(arcs).enter().append(\"text\").text((datum) => {\n    return (datum.data.value / sum * 100).toFixed(0) + \"%\";\n  }).attr(\"transform\", (datum) => {\n    return \"translate(\" + labelArcGenerator.centroid(datum) + \")\";\n  }).style(\"text-anchor\", \"middle\").attr(\"class\", \"slice\");\n  group.append(\"text\").text(db2.getDiagramTitle()).attr(\"x\", 0).attr(\"y\", -(height - 50) / 2).attr(\"class\", \"pieTitleText\");\n  const legend = group.selectAll(\".legend\").data(color.domain()).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (_datum, index) => {\n    const height2 = LEGEND_RECT_SIZE + LEGEND_SPACING;\n    const offset = height2 * color.domain().length / 2;\n    const horizontal = 12 * LEGEND_RECT_SIZE;\n    const vertical = index * height2 - offset;\n    return \"translate(\" + horizontal + \",\" + vertical + \")\";\n  });\n  legend.append(\"rect\").attr(\"width\", LEGEND_RECT_SIZE).attr(\"height\", LEGEND_RECT_SIZE).style(\"fill\", color).style(\"stroke\", color);\n  legend.data(arcs).append(\"text\").attr(\"x\", LEGEND_RECT_SIZE + LEGEND_SPACING).attr(\"y\", LEGEND_RECT_SIZE - LEGEND_SPACING).text((datum) => {\n    const { label, value } = datum.data;\n    if (db2.getShowData()) {\n      return `${label} [${value}]`;\n    }\n    return label;\n  });\n  const longestTextWidth = Math.max(\n    ...legend.selectAll(\"text\").nodes().map((node) => node?.getBoundingClientRect().width ?? 0)\n  );\n  const totalWidth = pieWidth + MARGIN + LEGEND_RECT_SIZE + LEGEND_SPACING + longestTextWidth;\n  svg.attr(\"viewBox\", `0 0 ${totalWidth} ${height}`);\n  configureSvgSize(svg, height, totalWidth, pieConfig.useMaxWidth);\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/pie/pieDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles: pieStyles_default\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","accDescr","setAccDescription","accTitle","setAccTitle","title","setDiagramTitle","__name","DEFAULT_PIE_CONFIG","defaultConfig_default","DEFAULT_PIE_DB","sections","Map","showData","config","structuredClone","getConfig2","clear2","clear","addSection","label","value","has","set","log","getSections","setShowData","toggle","getShowData","getConfig","getDiagramTitle","getAccTitle","getAccDescription","populateDb","db2","map","parser","parse","async","input","pieStyles_default","options","pieStrokeColor","pieStrokeWidth","pieOpacity","pieOuterStrokeColor","pieOuterStrokeWidth","pieTitleTextSize","pieTitleTextColor","fontFamily","pieSectionTextColor","pieSectionTextSize","pieLegendTextColor","pieLegendTextSize","createPieArcs","sections2","pieData","entries","element","sort","a","b","d3pie","d3Section","pie","diagram","renderer","draw","text","id","_version","diagObj","globalConfig","pieConfig","cleanAndMerge","LEGEND_RECT_SIZE","height","svg","selectSvgElement","group","append","attr","themeVariables","outerStrokeWidth","parseFontSize","textPosition","radius","Math","min","arcGenerator","arc","innerRadius","outerRadius","labelArcGenerator","arcs","myGeneratedColors","pie1","pie2","pie3","pie4","pie5","pie6","pie7","pie8","pie9","pie10","pie11","pie12","color","scaleOrdinal","selectAll","data","enter","datum","sum","forEach","section","toFixed","centroid","style","legend","domain","_datum","index","length","totalWidth","pieWidth","max","nodes","node","getBoundingClientRect","width","configureSvgSize","useMaxWidth","styles"],"sourceRoot":""}