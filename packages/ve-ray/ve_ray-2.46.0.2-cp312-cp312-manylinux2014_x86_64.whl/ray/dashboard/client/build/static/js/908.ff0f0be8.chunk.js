"use strict";(self.webpackChunkray_dashboard_client=self.webpackChunkray_dashboard_client||[]).push([[908],{82388:(e,t,a)=>{function l(e,t){var a,l,n;e.accDescr&&(null===(a=t.setAccDescription)||void 0===a||a.call(t,e.accDescr));e.accTitle&&(null===(l=t.setAccTitle)||void 0===l||l.call(t,e.accTitle));e.title&&(null===(n=t.setDiagramTitle)||void 0===n||n.call(t,e.title))}a.d(t,{A:()=>l}),(0,a(92408).eW)(l,"populateCommonDb")},66947:(e,t,a)=>{a.d(t,{j:()=>n});var l=a(92408),n=(0,l.eW)(((e,t,a,n)=>{e.attr("class",a);const{width:r,height:c,x:i,y:d}=s(e,t);(0,l.v2)(e,c,r,n);const p=o(i,d,r,c,t);e.attr("viewBox",p),l.cM.debug("viewBox configured: ".concat(p," with padding: ").concat(t))}),"setupViewPortForSVG"),s=(0,l.eW)(((e,t)=>{var a;const l=(null===(a=e.node())||void 0===a?void 0:a.getBBox())||{width:0,height:0,x:0,y:0};return{width:l.width+2*t,height:l.height+2*t,x:l.x,y:l.y}}),"calculateDimensionsWithPadding"),o=(0,l.eW)(((e,t,a,l,n)=>"".concat(e-n," ").concat(t-n," ").concat(a," ").concat(l)),"createViewBox")},45908:(e,t,a)=>{a.r(t),a.d(t,{diagram:()=>v});var l,n=a(66947),s=a(13746),o=a(82388),r=a(80170),c=a(53657),i=a(92408),d=a(51529),p=a(58111),h=(l=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=i.GN,this.getAccTitle=i.eu,this.setDiagramTitle=i.g2,this.getDiagramTitle=i.Kr,this.getAccDescription=i.Mx,this.setAccDescription=i.U$}getNodes(){return this.nodes}getConfig(){var e;const t=i.vZ,a=(0,i.iE)();return(0,r.Rb)({...t.treemap,...null!==(e=a.treemap)&&void 0!==e?e:{}})}addNode(e,t){var a;(this.nodes.push(e),this.levels.set(e,t),0===t)&&(this.outerNodes.push(e),null!==(a=this.root)&&void 0!==a||(this.root=e))}getRoot(){return{name:"",children:this.outerNodes}}addClass(e,t){var a;const l=null!==(a=this.classes.get(e))&&void 0!==a?a:{id:e,styles:[],textStyles:[]},n=t.replace(/\\,/g,"\xa7\xa7\xa7").replace(/,/g,";").replace(/\xa7\xa7\xa7/g,",").split(";");n&&n.forEach((e=>{(0,s.Fh)(e)&&(null!==l&&void 0!==l&&l.textStyles?l.textStyles.push(e):l.textStyles=[e]),null!==l&&void 0!==l&&l.styles?l.styles.push(e):l.styles=[e]})),this.classes.set(e,l)}getClasses(){return this.classes}getStylesForClass(e){var t,a;return null!==(t=null===(a=this.classes.get(e))||void 0===a?void 0:a.styles)&&void 0!==t?t:[]}clear(){(0,i.ZH)(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},(0,i.eW)(l,"TreeMapDB"),l);function u(e){if(!e.length)return[];const t=[],a=[];return e.forEach((e=>{const l={name:e.name,children:"Leaf"===e.type?void 0:[]};for(l.classSelector=null===e||void 0===e?void 0:e.classSelector,null!==e&&void 0!==e&&e.cssCompiledStyles&&(l.cssCompiledStyles=[e.cssCompiledStyles]),"Leaf"===e.type&&void 0!==e.value&&(l.value=e.value);a.length>0&&a[a.length-1].level>=e.level;)a.pop();if(0===a.length)t.push(l);else{const e=a[a.length-1].node;e.children?e.children.push(l):e.children=[l]}"Leaf"!==e.type&&a.push({node:l,level:e.level})})),t}(0,i.eW)(u,"buildHierarchy");var m=(0,i.eW)(((e,t)=>{(0,o.A)(e,t);const a=[];for(const o of null!==(l=e.TreemapRows)&&void 0!==l?l:[]){var l,n,s;if("ClassDefStatement"===o.$type)t.addClass(null!==(n=o.className)&&void 0!==n?n:"",null!==(s=o.styleText)&&void 0!==s?s:"")}for(const o of null!==(r=e.TreemapRows)&&void 0!==r?r:[]){var r;const e=o.item;if(!e)continue;const l=o.indent?parseInt(o.indent):0,n=y(e),s=e.classSelector?t.getStylesForClass(e.classSelector):[],c=s.length>0?s.join(";"):void 0,i={level:l,name:n,type:e.$type,value:e.value,classSelector:e.classSelector,cssCompiledStyles:c};a.push(i)}const c=u(a),d=(0,i.eW)(((e,a)=>{for(const l of e)t.addNode(l,a),l.children&&l.children.length>0&&d(l.children,a+1)}),"addNodesRecursively");d(c,0)}),"populate"),y=(0,i.eW)((e=>e.name?String(e.name):""),"getItemName"),f={parser:{yy:void 0},parse:(0,i.eW)((async e=>{try{var t;const a=d.Qc,l=await a("treemap",e);i.cM.debug("Treemap AST:",l);const n=null===(t=f.parser)||void 0===t?void 0:t.yy;if(!(n instanceof h))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");m(l,n)}catch(a){throw i.cM.error("Error parsing treemap:",a),a}}),"parse")},g=10,S={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},v={parser:f,get db(){return new h},renderer:{draw:(0,i.eW)(((e,t,a,l)=>{var o,r;const d=l.db,h=d.getConfig(),u=null!==(o=h.padding)&&void 0!==o?o:10,m=d.getDiagramTitle(),y=d.getRoot(),{themeVariables:f}=(0,i.iE)();if(!y)return;const S=m?30:0,v=(0,c.P)(t),x=h.nodeWidth?h.nodeWidth*g:960,b=h.nodeHeight?h.nodeHeight*g:500,C=x,w=b+S;let W;v.attr("viewBox","0 0 ".concat(C," ").concat(w)),(0,i.v2)(v,w,C,h.useMaxWidth);try{const e=h.valueFormat||",";if("$0,0"===e)W=(0,i.eW)((e=>"$"+(0,p.WUZ)(",")(e)),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){const t=/\.\d+/.exec(e),a=t?t[0]:"";W=(0,i.eW)((e=>"$"+(0,p.WUZ)(","+a)(e)),"valueFormat")}else if(e.startsWith("$")){const t=e.substring(1);W=(0,i.eW)((e=>"$"+(0,p.WUZ)(t||"")(e)),"valueFormat")}else W=(0,p.WUZ)(e)}catch(G){i.cM.error("Error creating format function:",G),W=(0,p.WUZ)(",")}const k=(0,p.PKp)().range(["transparent",f.cScale0,f.cScale1,f.cScale2,f.cScale3,f.cScale4,f.cScale5,f.cScale6,f.cScale7,f.cScale8,f.cScale9,f.cScale10,f.cScale11]),L=(0,p.PKp)().range(["transparent",f.cScalePeer0,f.cScalePeer1,f.cScalePeer2,f.cScalePeer3,f.cScalePeer4,f.cScalePeer5,f.cScalePeer6,f.cScalePeer7,f.cScalePeer8,f.cScalePeer9,f.cScalePeer10,f.cScalePeer11]),T=(0,p.PKp)().range([f.cScaleLabel0,f.cScaleLabel1,f.cScaleLabel2,f.cScaleLabel3,f.cScaleLabel4,f.cScaleLabel5,f.cScaleLabel6,f.cScaleLabel7,f.cScaleLabel8,f.cScaleLabel9,f.cScaleLabel10,f.cScaleLabel11]);m&&v.append("text").attr("x",C/2).attr("y",S/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(m);const M=v.append("g").attr("transform","translate(0, ".concat(S,")")).attr("class","treemapContainer"),P=(0,p.bT9)(y).sum((e=>{var t;return null!==(t=e.value)&&void 0!==t?t:0})).sort(((e,t)=>{var a,l;return(null!==(a=t.value)&&void 0!==a?a:0)-(null!==(l=e.value)&&void 0!==l?l:0)})),z=(0,p.pNI)().size([x,b]).paddingTop((e=>e.children&&e.children.length>0?35:0)).paddingInner(u).paddingLeft((e=>e.children&&e.children.length>0?g:0)).paddingRight((e=>e.children&&e.children.length>0?g:0)).paddingBottom((e=>e.children&&e.children.length>0?g:0)).round(!0)(P),F=z.descendants().filter((e=>e.children&&e.children.length>0)),N=M.selectAll(".treemapSection").data(F).enter().append("g").attr("class","treemapSection").attr("transform",(e=>"translate(".concat(e.x0,",").concat(e.y0,")")));N.append("rect").attr("width",(e=>e.x1-e.x0)).attr("height",25).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",(e=>0===e.depth?"display: none;":"")),N.append("clipPath").attr("id",((e,a)=>"clip-section-".concat(t,"-").concat(a))).append("rect").attr("width",(e=>Math.max(0,e.x1-e.x0-12))).attr("height",25),N.append("rect").attr("width",(e=>e.x1-e.x0)).attr("height",(e=>e.y1-e.y0)).attr("class",((e,t)=>"treemapSection section".concat(t))).attr("fill",(e=>k(e.data.name))).attr("fill-opacity",.6).attr("stroke",(e=>L(e.data.name))).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",(e=>{if(0===e.depth)return"display: none;";const t=(0,s.UG)({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")})),N.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",12.5).attr("dominant-baseline","middle").text((e=>0===e.depth?"":e.data.name)).attr("font-weight","bold").attr("style",(e=>{if(0===e.depth)return"display: none;";return"dominant-baseline: middle; font-size: 12px; fill:"+T(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,s.UG)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")})).each((function(e){if(0===e.depth)return;const t=(0,p.Ys)(this),a=e.data.name;t.text(a);const l=e.x1-e.x0;let n;if(!1!==h.showValues&&e.value){n=l-10-30-10-6}else{n=l-6-6}const s=Math.max(15,n),o=t.node();if(o.getComputedTextLength()>s){const e="...";let l=a;for(;l.length>0;){if(l=a.substring(0,l.length-1),0===l.length){t.text(e),o.getComputedTextLength()>s&&t.text("");break}if(t.text(l+e),o.getComputedTextLength()<=s)break}}})),!1!==h.showValues&&N.append("text").attr("class","treemapSectionValue").attr("x",(e=>e.x1-e.x0-10)).attr("y",12.5).attr("text-anchor","end").attr("dominant-baseline","middle").text((e=>e.value?W(e.value):"")).attr("font-style","italic").attr("style",(e=>{if(0===e.depth)return"display: none;";return"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+T(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;"+(0,s.UG)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:")}));const D=z.leaves(),U=M.selectAll(".treemapLeafGroup").data(D).enter().append("g").attr("class",((e,t)=>"treemapNode treemapLeafGroup leaf".concat(t).concat(e.data.classSelector?" ".concat(e.data.classSelector):"","x"))).attr("transform",(e=>"translate(".concat(e.x0,",").concat(e.y0,")")));U.append("rect").attr("width",(e=>e.x1-e.x0)).attr("height",(e=>e.y1-e.y0)).attr("class","treemapLeaf").attr("fill",(e=>e.parent?k(e.parent.data.name):k(e.data.name))).attr("style",(e=>(0,s.UG)({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles)).attr("fill-opacity",.3).attr("stroke",(e=>e.parent?k(e.parent.data.name):k(e.data.name))).attr("stroke-width",3),U.append("clipPath").attr("id",((e,a)=>"clip-".concat(t,"-").concat(a))).append("rect").attr("width",(e=>Math.max(0,e.x1-e.x0-4))).attr("height",(e=>Math.max(0,e.y1-e.y0-4)));if(U.append("text").attr("class","treemapLabel").attr("x",(e=>(e.x1-e.x0)/2)).attr("y",(e=>(e.y1-e.y0)/2)).attr("style",(e=>"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+T(e.data.name)+";"+(0,s.UG)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"))).attr("clip-path",((e,a)=>"url(#clip-".concat(t,"-").concat(a,")"))).text((e=>e.data.name)).each((function(e){const t=(0,p.Ys)(this),a=e.x1-e.x0,l=e.y1-e.y0,n=t.node(),s=a-8,o=l-8;if(s<10||o<10)return void t.style("display","none");let r=parseInt(t.style("font-size"),10);for(;n.getComputedTextLength()>s&&r>8;)r--,t.style("font-size","".concat(r,"px"));let c=Math.max(6,Math.min(28,Math.round(.6*r))),i=r+2+c;for(;i>o&&r>8&&(r--,c=Math.max(6,Math.min(28,Math.round(.6*r))),!(c<6&&8===r));)t.style("font-size","".concat(r,"px")),i=r+2+c;t.style("font-size","".concat(r,"px")),(n.getComputedTextLength()>s||r<8||o<r)&&t.style("display","none")})),!1!==h.showValues){U.append("text").attr("class","treemapValue").attr("x",(e=>(e.x1-e.x0)/2)).attr("y",(function(e){return(e.y1-e.y0)/2})).attr("style",(e=>"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+T(e.data.name)+";"+(0,s.UG)({cssCompiledStyles:e.data.cssCompiledStyles}).labelStyles.replace("color:","fill:"))).attr("clip-path",((e,a)=>"url(#clip-".concat(t,"-").concat(a,")"))).text((e=>e.value?W(e.value):"")).each((function(e){const t=(0,p.Ys)(this),a=this.parentNode;if(!a)return void t.style("display","none");const l=(0,p.Ys)(a).select(".treemapLabel");if(l.empty()||"none"===l.style("display"))return void t.style("display","none");const n=parseFloat(l.style("font-size")),s=Math.max(6,Math.min(28,Math.round(.6*n)));t.style("font-size","".concat(s,"px"));const o=(e.y1-e.y0)/2+n/2+2;t.attr("y",o);const r=e.x1-e.x0,c=e.y1-e.y0-4,i=r-8;t.node().getComputedTextLength()>i||o+s>c||s<6?t.style("display","none"):t.style("display",null)}))}const A=null!==(r=h.diagramPadding)&&void 0!==r?r:8;(0,n.j)(v,A,"flowchart",(null===h||void 0===h?void 0:h.useMaxWidth)||!1)}),"draw"),getClasses:(0,i.eW)((function(e,t){return t.db.getClasses()}),"getClasses")},styles:(0,i.eW)((function(){let{treemap:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=(0,r.Rb)(S,e);return"\n  .treemapNode.section {\n    stroke: ".concat(t.sectionStrokeColor,";\n    stroke-width: ").concat(t.sectionStrokeWidth,";\n    fill: ").concat(t.sectionFillColor,";\n  }\n  .treemapNode.leaf {\n    stroke: ").concat(t.leafStrokeColor,";\n    stroke-width: ").concat(t.leafStrokeWidth,";\n    fill: ").concat(t.leafFillColor,";\n  }\n  .treemapLabel {\n    fill: ").concat(t.labelColor,";\n    font-size: ").concat(t.labelFontSize,";\n  }\n  .treemapValue {\n    fill: ").concat(t.valueColor,";\n    font-size: ").concat(t.valueFontSize,";\n  }\n  .treemapTitle {\n    fill: ").concat(t.titleColor,";\n    font-size: ").concat(t.titleFontSize,";\n  }\n  ")}),"getStyles")}}}]);
//# sourceMappingURL=908.ff0f0be8.chunk.js.map