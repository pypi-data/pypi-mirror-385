[tool.ruff]
line-length = 120
exclude = [
    ".git",
    "__pycache__",
    "build",
    ".venv",
    "drx",
    # custom.py is test data for Custom Templates
    "tests/fixtures/custom-templates/custom.py"
]
# TODO replace with project.requires-python
target-version = "py37"

[tool.ruff.per-file-target-version]
"tests/*.py" = "py38"
"datarobot/auth/*.py" = "py39"
"datarobot/core/*.py" = "py38"
"sdk_docs/*.py" = "py311"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # flake-simple
    "F",
    # numpy, since we are dependent on numpy
    "NPY",
    # pandas, since we are dependent on pandas
    "PD",
    # pyupgrade
    "U",
    # isort, since we are using isort
    "I",
    # pygrep-hooks
    # don't blanket noqa something
    "PGH",
    # refurb
    "FURB"
]

ignore = [
    # PD901: https://docs.astral.sh/ruff/rules/pandas-df-variable-name/
    "PD901", # deprecated and will be removed in the future
    "UP006", # TODO lot of errors
    "UP007", # TODO lot of errors
    "UP009", # TODO was added recently, why?
    "UP032", # TODO errors
    "UP035", # TODO review me
    "UP037", # TODO errors
    # UP038: https://docs.astral.sh/ruff/rules/non-pep604-isinstance/
    "UP038", # deprecated and will be removed in the future
    "UP045", # TODO lot of errors
    "PGH004", # TODO 23 errors, need to review each noqa
    "FURB122", # TODO 10 errors, needs stronger testing
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["datarobotx", "datarobot"]
case-sensitive = true
required-imports = ["from __future__ import annotations"]

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312', 'py313']

[tool.mypy]
python_version = 3.9
plugins = "pydantic.mypy"
exclude = '''(?x)(
    build/*
    | tests/*
    | docs/*
    | examples/*
    | scripts/*
    | jarvis/suites/api_client_suite.py
    | pylint_plugin.py
)'''

check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
enable_error_code = "ignore-without-code"
implicit_reexport = true
ignore_missing_imports = true
no_implicit_optional = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# The strategy moving forward is to delete these ignore config settings one by one and get the errors back to zero on each deletion.
[[tool.mypy.overrides]]
module = [
    "datarobot._experimental.models.idiomatic_project",
    "datarobot._experimental.models.model",
    "datarobot._experimental.models.project_options",

    # Ignore specific files in helpers directory
    "datarobot.helpers.partitioning_methods",

    ### START Models directory
    ### These rules are purposely one file at a time in this directory so any new files added _must_ have annotations
    ### And also we can delete an entry for a file and fix the corresponding errors as we piece-meal annotate the whole repo.
    "datarobot.models.api_object",
    "datarobot.models.batch_prediction_job",
    "datarobot.models.custom_model_test",
    "datarobot.models.custom_task_version",
    "datarobot.models.data_engine_query_generator",
    "datarobot.models.datetime_trend_plots",
    "datarobot.models.feature",
    "datarobot.models.feature_effect",
    "datarobot.models.job",
    "datarobot.models.lift_chart",
    "datarobot.models.model",
    "datarobot.models.modeljob",
    "datarobot.models.pairwise_statistics",
    "datarobot.models.pareto_front",
    "datarobot.models.predict_job",
    "datarobot.models.prediction_explanations",
    "datarobot.models.project",
    "datarobot.models.project_options",
    "datarobot.models.relationships_configuration",
    "datarobot.models.training_predictions",

    ### Sub-directories in models
    "datarobot.models.external_dataset_scores_insights.external_confusion_chart",
    "datarobot.models.deployment.data_drift",
    "datarobot.models.user_blueprints.models",

    # Ignore specific files in datarobot sub-directory of repo.
    "datarobot.client",
    "datarobot.enums",
]
ignore_errors = true
