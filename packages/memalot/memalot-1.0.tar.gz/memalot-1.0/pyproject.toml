[project]
name = "memalot"
version = "1.0"
description = "Finds memory leaks in Python programs"
authors = [
    { name = "Neil Ferguson" },
]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "referrers>=0.16.0",
    "rich>=13.0",
    "psutil>=5.0",
    "pydantic>=2.2",
    "objsize>=0.7",
    "networkx>=2.8",
]

[project.urls]
Repository = "https://github.com/nfergu/referrers"

[project.scripts]
memalot = "memalot.cli:main"
memalot-mcp = "memalot.mcp_server.main:run_mcp_server"

[project.optional-dependencies]
test = [
    "pytest~=8.4", "pytest-mock~=3.14.1", "mypy~=1.16", "ruff>=0.12", "pre-commit~=4.2",
    "numpy~=2.2", "pytest-cov~=6.2", "pytest-asyncio~=1.1", "pytest-benchmark~=5.1"
]
mcp = [
    "fastmcp>=2.12"
]

[tool.ruff]
line-length = 100

lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
    
[tool.ruff.lint.isort]
known-first-party = ["memalot"]

[tool.mypy]
ignore_missing_imports = true
strict = true
files = ["src"]

[tool.pytest.ini_options]
# By default, pytest runs for only unit tests with coverage enabled.
# Coverage needs to be disabled for integration tests to work as coverage interferes with
# the leaked objects reports.
testpaths = ["src/tests"]
addopts = ["--cov=memalot"]
markers = [
    "integration: integration (functional) tests; run with coverage off",
    "performance: performance tests using pytest-benchmark"
]

[tool.coverage.run]
omit = ["src/memalot/networkx_copy.py", "src/memalot/examples/**"]

[tool.coverage.report]
show_missing = true
fail_under = 100
