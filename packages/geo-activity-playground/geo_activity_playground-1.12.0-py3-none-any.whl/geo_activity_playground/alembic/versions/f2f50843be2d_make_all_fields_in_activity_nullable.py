from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "f2f50843be2d"
down_revision: Union[str, None] = "dc8073871da7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("activities", schema=None) as batch_op:
        batch_op.add_column(sa.Column("iana_timezone", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("start_country", sa.String(), nullable=True))
        batch_op.alter_column("name", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("distance_km", existing_type=sa.FLOAT(), nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("activities", schema=None) as batch_op:
        batch_op.alter_column("distance_km", existing_type=sa.FLOAT(), nullable=False)
        batch_op.alter_column("name", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.drop_column("start_country")
        batch_op.drop_column("iana_timezone")

    # ### end Alembic commands ###
