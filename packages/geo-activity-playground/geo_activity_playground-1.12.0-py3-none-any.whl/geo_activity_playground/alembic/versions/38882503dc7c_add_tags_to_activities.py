from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "38882503dc7c"
down_revision: Union[str, None] = "93cc82ad1b60"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tag"),
        sa.UniqueConstraint("tag", name="tags_tag"),
    )
    op.create_table(
        "activity_tag_association_table",
        sa.Column("left_id", sa.Integer(), nullable=False),
        sa.Column("right_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["left_id"],
            ["activities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["right_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("left_id", "right_id"),
    )
    with op.batch_alter_table("plot_specs", schema=None) as batch_op:
        batch_op.alter_column("mark", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("x", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("y", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("color", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("shape", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("size", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("row", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("opacity", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("column", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("facet", existing_type=sa.VARCHAR(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("plot_specs", schema=None) as batch_op:
        batch_op.alter_column("facet", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("column", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("opacity", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("row", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("size", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("shape", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("color", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("y", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("x", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("mark", existing_type=sa.VARCHAR(), nullable=True)

    op.drop_table("activity_tag_association_table")
    op.drop_table("tags")
    # ### end Alembic commands ###
