from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "63d3b7f6f93c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "equipments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("offset_km", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="equipments_name"),
    )
    op.create_table(
        "kinds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("consider_for_achievements", sa.Boolean(), nullable=False),
        sa.Column("default_equipment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["default_equipment_id"], ["equipments.id"], name="default_equipment_id"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="kinds_name"),
    )
    op.create_table(
        "activities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=True),
        sa.Column("distance_km", sa.Float(), nullable=False),
        sa.Column("start", sa.DateTime(), nullable=True),
        sa.Column("elapsed_time", sa.Interval(), nullable=True),
        sa.Column("moving_time", sa.Interval(), nullable=True),
        sa.Column("start_latitude", sa.Float(), nullable=True),
        sa.Column("start_longitude", sa.Float(), nullable=True),
        sa.Column("end_latitude", sa.Float(), nullable=True),
        sa.Column("end_longitude", sa.Float(), nullable=True),
        sa.Column("elevation_gain", sa.Float(), nullable=True),
        sa.Column("start_elevation", sa.Float(), nullable=True),
        sa.Column("end_elevation", sa.Float(), nullable=True),
        sa.Column("calories", sa.Integer(), nullable=True),
        sa.Column("steps", sa.Integer(), nullable=True),
        sa.Column("num_new_tiles_14", sa.Integer(), nullable=True),
        sa.Column("num_new_tiles_17", sa.Integer(), nullable=True),
        sa.Column("equipment_id", sa.Integer(), nullable=True),
        sa.Column("kind_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["equipment_id"], ["equipments.id"], name="equipment_id"
        ),
        sa.ForeignKeyConstraint(["kind_id"], ["kinds.id"], name="kind_id"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("activities")
    op.drop_table("kinds")
    op.drop_table("equipments")
    # ### end Alembic commands ###
