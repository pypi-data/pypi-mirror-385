"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright 2020-2025 Exactpro (Exactpro Systems Limited)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import th2_grpc_common.common_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TimeRelation:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TimeRelationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TimeRelation.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NEXT: _TimeRelation.ValueType  # 0
    PREVIOUS: _TimeRelation.ValueType  # 1

class TimeRelation(_TimeRelation, metaclass=_TimeRelationEnumTypeWrapper): ...

NEXT: TimeRelation.ValueType  # 0
PREVIOUS: TimeRelation.ValueType  # 1
global___TimeRelation = TimeRelation

@typing.final
class EventScope(google.protobuf.message.Message):
    """The scope for events to request"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___EventScope = EventScope

@typing.final
class BookId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Name of the book to request data from"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___BookId = BookId

@typing.final
class MessageGroupsSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Group(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        name: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    BOOK_ID_FIELD_NUMBER: builtins.int
    MESSAGE_GROUP_FIELD_NUMBER: builtins.int
    SORT_FIELD_NUMBER: builtins.int
    RAW_ONLY_FIELD_NUMBER: builtins.int
    KEEP_OPEN_FIELD_NUMBER: builtins.int
    RESPONSE_FORMATS_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    SEARCH_DIRECTION_FIELD_NUMBER: builtins.int
    RESULT_COUNT_LIMIT_FIELD_NUMBER: builtins.int
    raw_only: builtins.bool
    """deprecated: use response_formats with only BASE_64 to achieve the same effect"""
    keep_open: builtins.bool
    search_direction: global___TimeRelation.ValueType
    """Sets the lookup direction. Can be used for pagination. Set by default to NEXT."""
    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def book_id(self) -> global___BookId: ...
    @property
    def message_group(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageGroupsSearchRequest.Group]: ...
    @property
    def sort(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """deprecated: grouped message batches are already sorted and haven't got overlapping"""

    @property
    def response_formats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of possible response formats (e.g. PARSED or BASE_64)"""

    @property
    def stream(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageStream]:
        """Sets the stream names and directions to search in. Case-sensitive."""

    @property
    def result_count_limit(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Sets the maximum amount of messages to return. By default it is absent (unlimited)"""

    def __init__(
        self,
        *,
        start_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        book_id: global___BookId | None = ...,
        message_group: collections.abc.Iterable[global___MessageGroupsSearchRequest.Group] | None = ...,
        sort: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        raw_only: builtins.bool = ...,
        keep_open: builtins.bool = ...,
        response_formats: collections.abc.Iterable[builtins.str] | None = ...,
        stream: collections.abc.Iterable[global___MessageStream] | None = ...,
        search_direction: global___TimeRelation.ValueType = ...,
        result_count_limit: google.protobuf.wrappers_pb2.Int32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "result_count_limit", b"result_count_limit", "sort", b"sort", "start_timestamp", b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "keep_open", b"keep_open", "message_group", b"message_group", "raw_only", b"raw_only", "response_formats", b"response_formats", "result_count_limit", b"result_count_limit", "search_direction", b"search_direction", "sort", b"sort", "start_timestamp", b"start_timestamp", "stream", b"stream"]) -> None: ...

global___MessageGroupsSearchRequest = MessageGroupsSearchRequest

@typing.final
class MessageStreamsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOK_ID_FIELD_NUMBER: builtins.int
    @property
    def book_id(self) -> global___BookId: ...
    def __init__(
        self,
        *,
        book_id: global___BookId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["book_id", b"book_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["book_id", b"book_id"]) -> None: ...

global___MessageStreamsRequest = MessageStreamsRequest

@typing.final
class EventResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_ID_FIELD_NUMBER: builtins.int
    PARENT_EVENT_ID_FIELD_NUMBER: builtins.int
    BATCH_ID_FIELD_NUMBER: builtins.int
    IS_BATCHED_FIELD_NUMBER: builtins.int
    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    EVENT_NAME_FIELD_NUMBER: builtins.int
    EVENT_TYPE_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    ATTACHED_MESSAGE_ID_FIELD_NUMBER: builtins.int
    is_batched: builtins.bool
    """Flag indicating that the event is in batch"""
    status: th2_grpc_common.common_pb2.EventStatus.ValueType
    """Aggregated status of current and children events which sync written."""
    event_name: builtins.str
    event_type: builtins.str
    """May be absent."""
    body: builtins.bytes
    """May be absent."""
    @property
    def event_id(self) -> th2_grpc_common.common_pb2.EventID:
        """Current event id"""

    @property
    def parent_event_id(self) -> th2_grpc_common.common_pb2.EventID:
        """Event id of a parent event. It is absent for root event"""

    @property
    def batch_id(self) -> th2_grpc_common.common_pb2.EventID:
        """Event id of a parent event. It is absent for root event"""

    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """May be absent."""

    @property
    def attached_message_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[th2_grpc_common.common_pb2.MessageID]:
        """ids of messages linked to this event"""

    def __init__(
        self,
        *,
        event_id: th2_grpc_common.common_pb2.EventID | None = ...,
        parent_event_id: th2_grpc_common.common_pb2.EventID | None = ...,
        batch_id: th2_grpc_common.common_pb2.EventID | None = ...,
        is_batched: builtins.bool = ...,
        start_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        status: th2_grpc_common.common_pb2.EventStatus.ValueType = ...,
        event_name: builtins.str = ...,
        event_type: builtins.str = ...,
        body: builtins.bytes = ...,
        attached_message_id: collections.abc.Iterable[th2_grpc_common.common_pb2.MessageID] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["batch_id", b"batch_id", "end_timestamp", b"end_timestamp", "event_id", b"event_id", "parent_event_id", b"parent_event_id", "start_timestamp", b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attached_message_id", b"attached_message_id", "batch_id", b"batch_id", "body", b"body", "end_timestamp", b"end_timestamp", "event_id", b"event_id", "event_name", b"event_name", "event_type", b"event_type", "is_batched", b"is_batched", "parent_event_id", b"parent_event_id", "start_timestamp", b"start_timestamp", "status", b"status"]) -> None: ...

global___EventResponse = EventResponse

@typing.final
class MessageGroupItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    MATCH_FIELD_NUMBER: builtins.int
    match: builtins.bool
    @property
    def message(self) -> th2_grpc_common.common_pb2.Message: ...
    def __init__(
        self,
        *,
        message: th2_grpc_common.common_pb2.Message | None = ...,
        match: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["message", b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["match", b"match", "message", b"message"]) -> None: ...

global___MessageGroupItem = MessageGroupItem

@typing.final
class MessageGroupResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MessagePropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    MESSAGE_ID_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    MESSAGE_PROPERTIES_FIELD_NUMBER: builtins.int
    BODY_RAW_FIELD_NUMBER: builtins.int
    ATTACHED_EVENT_ID_FIELD_NUMBER: builtins.int
    MESSAGE_ITEM_FIELD_NUMBER: builtins.int
    body_raw: builtins.bytes
    @property
    def message_id(self) -> th2_grpc_common.common_pb2.MessageID:
        """Message id should be unique in session"""

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Message creation timestamp. Deprecated. Moved to MessageID"""

    @property
    def message_properties(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Additional properties for the source raw message"""

    @property
    def attached_event_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[th2_grpc_common.common_pb2.EventID]:
        """ids of events linked to this message group"""

    @property
    def message_item(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageGroupItem]:
        """May be absent."""

    def __init__(
        self,
        *,
        message_id: th2_grpc_common.common_pb2.MessageID | None = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        message_properties: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        body_raw: builtins.bytes = ...,
        attached_event_id: collections.abc.Iterable[th2_grpc_common.common_pb2.EventID] | None = ...,
        message_item: collections.abc.Iterable[global___MessageGroupItem] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["message_id", b"message_id", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attached_event_id", b"attached_event_id", "body_raw", b"body_raw", "message_id", b"message_id", "message_item", b"message_item", "message_properties", b"message_properties", "timestamp", b"timestamp"]) -> None: ...

global___MessageGroupResponse = MessageGroupResponse

@typing.final
class FilterName(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___FilterName = FilterName

@typing.final
class Filter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    NEGATIVE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    CONJUNCT_FIELD_NUMBER: builtins.int
    negative: builtins.bool
    conjunct: builtins.bool
    @property
    def name(self) -> global___FilterName: ...
    @property
    def value(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        name: global___FilterName | None = ...,
        negative: builtins.bool = ...,
        value: collections.abc.Iterable[builtins.str] | None = ...,
        conjunct: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["name", b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["conjunct", b"conjunct", "name", b"name", "negative", b"negative", "value", b"value"]) -> None: ...

global___Filter = Filter

@typing.final
class EventSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    PARENT_EVENT_FIELD_NUMBER: builtins.int
    ROOT_ONLY_FIELD_NUMBER: builtins.int
    SEARCH_DIRECTION_FIELD_NUMBER: builtins.int
    RESULT_COUNT_LIMIT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    BOOK_ID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    root_only: builtins.bool
    """Match root events. If true, the parent_event is ignored"""
    search_direction: global___TimeRelation.ValueType
    """Sets the lookup direction. Can be used for pagination. Set by default to NEXT."""
    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """unix timestamp - Sets the search starting point. One of the 'start_timestamp' or 'resume_from_id' must not absent"""

    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """unix timestamp - Sets the timestamp to which the search will be performed, starting with 'start_timestamp'. When 'search_direction' is previous, end_timestamp must be less than start_timestamp. By default it is absent (the search is carried out endlessly into the past or into the future)."""

    @property
    def parent_event(self) -> th2_grpc_common.common_pb2.EventID:
        """Match events to the specified parent. Only the immediate children of the specified event will be returned."""

    @property
    def result_count_limit(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Sets the maximum amount of events to return. By default it is absent (unlimited)."""

    @property
    def filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Filter]:
        """List of event search filters. (See 'search/sse/events' HTTP method https://github.com/th2-net/th2-rpt-data-provider)"""

    @property
    def book_id(self) -> global___BookId: ...
    @property
    def scope(self) -> global___EventScope: ...
    def __init__(
        self,
        *,
        start_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        parent_event: th2_grpc_common.common_pb2.EventID | None = ...,
        root_only: builtins.bool = ...,
        search_direction: global___TimeRelation.ValueType = ...,
        result_count_limit: google.protobuf.wrappers_pb2.Int32Value | None = ...,
        filter: collections.abc.Iterable[global___Filter] | None = ...,
        book_id: global___BookId | None = ...,
        scope: global___EventScope | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "parent_event", b"parent_event", "result_count_limit", b"result_count_limit", "scope", b"scope", "start_timestamp", b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "filter", b"filter", "parent_event", b"parent_event", "result_count_limit", b"result_count_limit", "root_only", b"root_only", "scope", b"scope", "search_direction", b"search_direction", "start_timestamp", b"start_timestamp"]) -> None: ...

global___EventSearchRequest = EventSearchRequest

@typing.final
class EventSearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_FIELD_NUMBER: builtins.int
    @property
    def event(self) -> global___EventResponse: ...
    def __init__(
        self,
        *,
        event: global___EventResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "event", b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "event", b"event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["event"] | None: ...

global___EventSearchResponse = EventSearchResponse

@typing.final
class MessageSearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    SEARCH_DIRECTION_FIELD_NUMBER: builtins.int
    RESULT_COUNT_LIMIT_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    KEEP_OPEN_FIELD_NUMBER: builtins.int
    STREAM_POINTER_FIELD_NUMBER: builtins.int
    RESPONSE_FORMATS_FIELD_NUMBER: builtins.int
    BOOK_ID_FIELD_NUMBER: builtins.int
    search_direction: global___TimeRelation.ValueType
    """Sets the lookup direction. Can be used for pagination. Set by default to NEXT."""
    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """unix timestamp - Sets the search starting point. One of the 'start_timestamp' or 'resume_from_id' or 'message_id' must not absent"""

    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """unix timestamp - Sets the timestamp to which the search will be performed, starting with 'start_timestamp'. When search_direction is 'previous', 'end_timestamp' must be less than 'start_timestamp'. By default it is absent (the search is carried out endlessly into the past or into the future)."""

    @property
    def result_count_limit(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Sets the maximum amount of messages to return. By default it is absent (unlimited)"""

    @property
    def stream(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageStream]:
        """Sets the stream names and directions to search in. Case-sensitive. Required."""

    @property
    def keep_open(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """ If the search has reached the current moment, it is necessary to wait further for the appearance of new data. Set by default to false."""

    @property
    def stream_pointer(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageStreamPointer]:
        """List of stream pointers to restore the search from. start_timestamp will be ignored if this parameter is specified. By default it is absent."""

    @property
    def response_formats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of possible response formats (e.g. PARSED or BASE_64)"""

    @property
    def book_id(self) -> global___BookId: ...
    def __init__(
        self,
        *,
        start_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        search_direction: global___TimeRelation.ValueType = ...,
        result_count_limit: google.protobuf.wrappers_pb2.Int32Value | None = ...,
        stream: collections.abc.Iterable[global___MessageStream] | None = ...,
        keep_open: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        stream_pointer: collections.abc.Iterable[global___MessageStreamPointer] | None = ...,
        response_formats: collections.abc.Iterable[builtins.str] | None = ...,
        book_id: global___BookId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "keep_open", b"keep_open", "result_count_limit", b"result_count_limit", "start_timestamp", b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "keep_open", b"keep_open", "response_formats", b"response_formats", "result_count_limit", b"result_count_limit", "search_direction", b"search_direction", "start_timestamp", b"start_timestamp", "stream", b"stream", "stream_pointer", b"stream_pointer"]) -> None: ...

global___MessageSearchRequest = MessageSearchRequest

@typing.final
class MessageSearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    MESSAGE_STREAM_POINTERS_FIELD_NUMBER: builtins.int
    @property
    def message(self) -> global___MessageGroupResponse: ...
    @property
    def message_stream_pointers(self) -> global___MessageStreamPointers: ...
    def __init__(
        self,
        *,
        message: global___MessageGroupResponse | None = ...,
        message_stream_pointers: global___MessageStreamPointers | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "message", b"message", "message_stream_pointers", b"message_stream_pointers"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "message", b"message", "message_stream_pointers", b"message_stream_pointers"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["message", "message_stream_pointers"] | None: ...

global___MessageSearchResponse = MessageSearchResponse

@typing.final
class MessageStreamPointers(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_STREAM_POINTER_FIELD_NUMBER: builtins.int
    @property
    def message_stream_pointer(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageStreamPointer]: ...
    def __init__(
        self,
        *,
        message_stream_pointer: collections.abc.Iterable[global___MessageStreamPointer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message_stream_pointer", b"message_stream_pointer"]) -> None: ...

global___MessageStreamPointers = MessageStreamPointers

@typing.final
class MessageStreamPointer(google.protobuf.message.Message):
    """This object contains the data of the last message in the stream on which
    the search has stopped, it is necessary to continue the search from the same point
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_STREAM_FIELD_NUMBER: builtins.int
    LAST_ID_FIELD_NUMBER: builtins.int
    @property
    def message_stream(self) -> global___MessageStream: ...
    @property
    def last_id(self) -> th2_grpc_common.common_pb2.MessageID:
        """Might be absent if the stream has no messages"""

    def __init__(
        self,
        *,
        message_stream: global___MessageStream | None = ...,
        last_id: th2_grpc_common.common_pb2.MessageID | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["last_id", b"last_id", "message_stream", b"message_stream"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["last_id", b"last_id", "message_stream", b"message_stream"]) -> None: ...

global___MessageStreamPointer = MessageStreamPointer

@typing.final
class MessageStream(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Case sensitive. Required."""
    direction: th2_grpc_common.common_pb2.Direction.ValueType
    """Required."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        direction: th2_grpc_common.common_pb2.Direction.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["direction", b"direction", "name", b"name"]) -> None: ...

global___MessageStream = MessageStream

@typing.final
class MessageStreamsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_STREAM_FIELD_NUMBER: builtins.int
    @property
    def message_stream(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MessageStream]: ...
    def __init__(
        self,
        *,
        message_stream: collections.abc.Iterable[global___MessageStream] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message_stream", b"message_stream"]) -> None: ...

global___MessageStreamsResponse = MessageStreamsResponse

@typing.final
class BooksRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___BooksRequest = BooksRequest

@typing.final
class BooksResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOK_IDS_FIELD_NUMBER: builtins.int
    @property
    def book_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BookId]: ...
    def __init__(
        self,
        *,
        book_ids: collections.abc.Iterable[global___BookId] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["book_ids", b"book_ids"]) -> None: ...

global___BooksResponse = BooksResponse

@typing.final
class PageInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOK_ID_FIELD_NUMBER: builtins.int
    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    RESULT_LIMIT_FIELD_NUMBER: builtins.int
    @property
    def book_id(self) -> global___BookId: ...
    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def result_limit(self) -> google.protobuf.wrappers_pb2.Int32Value: ...
    def __init__(
        self,
        *,
        book_id: global___BookId | None = ...,
        start_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        result_limit: google.protobuf.wrappers_pb2.Int32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "result_limit", b"result_limit", "start_timestamp", b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["book_id", b"book_id", "end_timestamp", b"end_timestamp", "result_limit", b"result_limit", "start_timestamp", b"start_timestamp"]) -> None: ...

global___PageInfoRequest = PageInfoRequest

@typing.final
class PageInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    COMMENT_FIELD_NUMBER: builtins.int
    STARTED_FIELD_NUMBER: builtins.int
    ENDED_FIELD_NUMBER: builtins.int
    UPDATED_FIELD_NUMBER: builtins.int
    REMOVED_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___PageId: ...
    @property
    def comment(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def started(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def ended(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def removed(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: global___PageId | None = ...,
        comment: google.protobuf.wrappers_pb2.StringValue | None = ...,
        started: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        ended: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        updated: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        removed: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["comment", b"comment", "ended", b"ended", "id", b"id", "removed", b"removed", "started", b"started", "updated", b"updated"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["comment", b"comment", "ended", b"ended", "id", b"id", "removed", b"removed", "started", b"started", "updated", b"updated"]) -> None: ...

global___PageInfoResponse = PageInfoResponse

@typing.final
class PageId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOK_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def book_id(self) -> global___BookId: ...
    def __init__(
        self,
        *,
        book_id: global___BookId | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["book_id", b"book_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["book_id", b"book_id", "name", b"name"]) -> None: ...

global___PageId = PageId
