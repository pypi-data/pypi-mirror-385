[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "simply-mcp"
version = "0.1.0"
description = "A modern Python framework for building MCP servers with multiple API styles"
authors = [
    {name = "Clockwork Innovations", email = "info@clockwork-innovations.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "mcp",
    "model-context-protocol",
    "ai",
    "llm",
    "anthropic",
    "server",
    "framework"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mcp>=0.1.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "watchdog>=4.0.0",
    "aiohttp>=3.9.0",
    "aiohttp-cors>=0.7.0",
    "tomli>=2.0.0; python_version < '3.11'",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.0.0",
    "python-json-logger>=2.0.0",
    "pyjwt>=2.8.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "aiosqlite>=0.19.0",

    # Code Quality
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-pyinstaller>=6.0.0",  # Type stubs for PyInstaller
    "tomli>=2.0.0",  # Needed for mypy type checking even on Python 3.11+
    "pre-commit>=3.0.0",

    # Build
    "build>=1.0.0",
    "twine>=4.0.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
]

bundling = [
    "pyinstaller>=5.0.0",
]

[project.scripts]
simply-mcp = "simply_mcp.cli.main:cli"

[project.urls]
Homepage = "https://github.com/Clockwork-Innovations/simply-mcp-py"
Documentation = "https://simply-mcp-py.readthedocs.io"
Repository = "https://github.com/Clockwork-Innovations/simply-mcp-py"
Issues = "https://github.com/Clockwork-Innovations/simply-mcp-py/issues"
Changelog = "https://github.com/Clockwork-Innovations/simply-mcp-py/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/simply_mcp"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--cov=simply_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true
mypy_path = "mcp-stubs"

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Pre-existing type issues in optional HTTP transport layer (polish layer)
# These will be refactored in a future sprint
[[tool.mypy.overrides]]
module = [
    "simply_mcp.transports.http_transport",
    "simply_mcp.transports.middleware",
    "simply_mcp.monitoring.http_metrics",
    "simply_mcp.core.security",
    "simply_mcp.core.http_config",
    "simply_mcp.core.auth",
]
ignore_errors = true
