name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Determine release type
      id: release_type
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        if [[ "$TAG" == *"beta"* ]] || [[ "$TAG" == *"alpha"* ]] || [[ "$TAG" == *"rc"* ]]; then
          echo "prerelease=true" >> $GITHUB_OUTPUT
          echo "Release type: Pre-release (beta/alpha/rc)"
        else
          echo "prerelease=false" >> $GITHUB_OUTPUT
          echo "Release type: Stable"
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        prerelease: ${{ steps.release_type.outputs.prerelease }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        if [[ "${{ steps.release_type.outputs.prerelease }}" == "true" ]]; then
          echo "Publishing pre-release to PyPI..."
        else
          echo "Publishing stable release to PyPI..."
        fi
        twine upload dist/*
