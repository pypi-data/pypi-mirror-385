name: Open Docs PR

on:
  pull_request:
    types: [closed]

jobs:
  generate-docs-assets:
    if: github.event.pull_request.merged == true && github.event.pull_request.user.login == 'github-actions[bot]' && startsWith(github.event.pull_request.title, 'Bump project version to ')
    runs-on: ubuntu-latest
    outputs:
      cli_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools build
          python -m pip install -r docs/requirements.txt

      - name: Build & install package
        run: |
          make build
          tools/install_wheel_extras.sh dist --extra envs

      - name: Get qbraid-cli version
        id: get_version
        run: |
          VERSION=$(qbraid --version | grep -o '[0-9]*\.[0-9]*\.[0-9]*')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate docs assets
        run: |
          make docs-mdx

      - name: Upload docs assets
        uses: actions/upload-artifact@v4
        with:
          name: api-reference
          path: docs/tree/qbraid*.mdx

  commit-and-pr:
    if: github.event.pull_request.merged == true && github.event.pull_request.user.login == 'github-actions[bot]' && startsWith(github.event.pull_request.title, 'Bump project version to ')
    runs-on: ubuntu-latest
    needs: generate-docs-assets
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Download docs assets
        uses: actions/download-artifact@v5
        with:
          name: api-reference
          path: ./api-reference

      - name: Checkout qBraid/docs repo
        uses: actions/checkout@v5
        with:
          repository: qBraid/docs
          token: ${{ secrets.BOT_TOKEN }}
          path: ./qbraid_docs
          ref: main

      - name: Create feature branch
        run: |
          cd qbraid_docs
          git checkout -b qbraid-cli-bot/${{ github.run_id }}

      - name: Update docs in qBraid/docs
        run: |
          rm -f qbraid_docs/cli/api-reference/*
          cp api-reference/qbraid*.mdx qbraid_docs/cli/api-reference/

      - name: Inject version
        run: |
          VERSION=${{ needs.generate-docs-assets.outputs.cli_version }}
          sed -i "6iVersion: [$VERSION](https://pypi.org/project/qbraid-cli/$VERSION)\n" qbraid_docs/cli/api-reference/qbraid.mdx

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
  
      - name: Install dependencies
        run: |
          cd qbraid_docs
          npm install

      - name: Run prettier fixes
        run: |
          cd qbraid_docs
          npx prettier --write cli/api-reference/qbraid*.mdx

      - name: Setup Git config
        run: |
          git config --global user.name 'qbraidTeam'
          git config --global user.email 'qbraid.team@qbraid.com'

      - name: Commit and push changes
        id: commit_and_push
        run: |
          cd qbraid_docs
          git add cli/api-reference/
          git commit -m "qBraid-CLI API reference docs update for version $VERSION"
          git push origin qbraid-cli-bot/${{ github.run_id }}

      - name: Create Pull Request
        id: create_pr
        run: |
          cd qbraid_docs
          VERSION=${{ needs.generate-docs-assets.outputs.cli_version }}
          PR_URL=$(gh pr create -B main -H qbraid-cli-bot/${{ github.run_id }} --title "Update qBraid-CLI version $VERSION" --body "This PR updates the qBraid-CLI API reference docs for the latest release version $VERSION")
          PR_NUMBER=$(echo "$PR_URL" | grep -o '[0-9]*$')
          echo "url=$PR_URL" >> $GITHUB_OUTPUT
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Summary
        run: |
          VERSION=${{ needs.generate-docs-assets.outputs.cli_version }}
          PR_URL=${{ steps.create_pr.outputs.url }}
          PR_NUMBER=${{ steps.create_pr.outputs.number }}
          echo "Opened PR [#$PR_NUMBER]($PR_URL) to update CLI docs for version **$VERSION**." >> $GITHUB_STEP_SUMMARY
