[build-system]
requires = [
    "hatchling",
    "hatch-vcs",
    "pydantic>=2.11.4,<3.0.0",
    "pint>=0.24.4,<0.25.0",
    "rich>=13.7.0,<14.0.0",
    "click>=8.0.0,<9.0.0",
    "networkx>=3.0,<4.0",
    "PyYAML>=6.0,<7.0",
    "imas-data-dictionary @ git+https://github.com/iterorganization/imas-data-dictionary.git@8b28b0d89f053b511f9e6153af3305d2fd180e1c",
    "imas-data-dictionaries>=4.0.0",
]
build-backend = "hatchling.build"

[project]
name = "imas-mcp"
dynamic = ["version"]
description = "An IMAS Data Dictionary MCP server"
readme = "README.md"
requires-python = ">=3.12,<3.13"
authors = [{ name = "Simon McIntosh", email = "simon.mcintosh@iter.org" }]
license = { text = "CC BY-ND 4.0" }
keywords = [
    "IMAS",
    "MCP",
    "Model Context Protocol",
    "Data Dictionary",
    "Fusion",
    "Plasma Physics",
    "ITER",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database :: Database Engines/Servers",
]
dependencies = [
    "fastmcp>=2.12.0",
    "pydantic>=2.11.4,<3.0.0",
    "pint>=0.24.4,<0.25.0",
    "nest-asyncio>=1.5.0,<2.0.0",
    "click>=8.0.0,<9.0.0",
    "networkx>=3.0,<4.0",
    "PyYAML>=6.0,<7.0",
    "numpy>=2.3.1",
    "sentence-transformers>=5.0.0",
    "huggingface-hub[hf_xet]>=0.33.4",
    "cachetools>=5.3.0,<6.0.0",
    "imas-data-dictionaries>=4.0.0",
    "fastapi>=0.100.0,<1.0.0",
    "starlette>=0.37.0,<1.0.0",
    "uvicorn>=0.30.0,<1.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.5,<9.0.0",
    "pytest-cov>=6.1.1,<7.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "pytest-timeout>=2.1.0,<3.0.0",
    "coverage>=7.0.0",
]
bench = ["asv>=0.6.0,<1.0.0"]

[dependency-groups]
dev = [
    # Code formatting and linting
    "black>=23.0.0",
    "ruff>=0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "tqdm-stubs>=0.2.1",
    # Interactive development
    "ipython>=9.2.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    # Build dependencies
    "rich>=13.7.0,<14.0.0",
    "matplotlib>=3.10.5",
    "seaborn>=0.13.2",
    "qrcode[pil]>=8.2",
]

[project.urls]
Homepage = "https://github.com/iterorganization/imas-mcp"
Repository = "https://github.com/iterorganization/imas-mcp"
Documentation = "https://github.com/iterorganization/imas-mcp#readme"
"Bug Tracker" = "https://github.com/iterorganization/imas-mcp/issues"

[project.scripts]
imas-mcp = "imas_mcp.cli:main"
dd-version = "scripts.dd_version:main"
build-schemas = "scripts.build_schemas:build_schemas"
build-relationships = "scripts.build_relationships:build_relationships"
build-embeddings = "scripts.build_embeddings:build_embeddings"
build-database = "scripts.build_database:build_database"
build-mermaid = "scripts.build_mermaid:build_mermaid"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["imas_mcp"]
exclude = ["imas_mcp/resources/.gitkeep"]
artifacts = ["imas_mcp/resources/**"]

[tool.hatch.build.hooks.custom]
path = "hatch_build_hooks.py"
verbose = true
ids-filter = ""
imas-dd-version = ""

[tool.hatch.envs.test]
dependencies = [
    "pytest>=8.3.5,<9.0.0",
    "pytest-cov>=6.1.1,<7.0.0",
    "coverage>=7.0.0",
]

[tool.hatch.envs.dev]
dependencies = [
    "black>=23.0.0",
    "ruff>=0",
    "ipython>=9.2.0",
    "ipykernel>=6.29.5",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = ["imas.*", "pint.*"]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

# Optional dependency overrides (only when installed)
[[tool.mypy.overrides]]
module = ["packaging.*"]
ignore_missing_imports = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--durations=10",
    "--cache-clear",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
markers = [
    "asyncio: marks tests as async",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "fast: marks tests as fast-running unit tests",
    "performance: marks tests that focus on performance",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
# Performance optimizations
cache_dir = ".pytest_cache"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["imas_mcp"]
omit = ["tests/*", "*/tests/*", "**/test_*.py", "**/conftest.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
precision = 2

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "C901",  # too complex
    "E501",  # long lines 
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*" = ["B011", "F401", "F811"]  # Allow assert False and unused imports in tests

[tool.ruff.lint.isort]
known-first-party = ["imas_mcp"]
force-single-line = false
combine-as-imports = true
