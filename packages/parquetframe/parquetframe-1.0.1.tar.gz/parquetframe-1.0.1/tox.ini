[tox]
envlist = py39, py310, py311, py312, lint, type-check, docs
isolated_build = True

[testenv]
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-mock>=3.10
    pandas>=2.0.0
    dask[dataframe]>=2023.1.0
    pyarrow>=10.0.0
commands =
    pytest {posargs:tests/}

[testenv:py39]
basepython = python3.9

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage[toml]
commands =
    coverage run -m pytest {posargs:tests/}
    coverage report
    coverage html

[testenv:lint]
deps =
    ruff>=0.1.0
    black>=23.0
commands =
    ruff check src/ tests/
    black --check --diff src/ tests/

[testenv:type-check]
deps =
    mypy>=1.0
    pandas-stubs
    types-setuptools
commands =
    mypy src/parquetframe

[testenv:format]
deps =
    ruff>=0.1.0
    black>=23.0
    isort>=5.12
commands =
    ruff check --fix src/ tests/
    black src/ tests/
    isort --profile black src/ tests/

[testenv:docs]
deps =
    mkdocs>=1.5.0
    mkdocs-material>=9.0.0
    mkdocstrings[python]>=0.24.0
commands =
    mkdocs build --strict

[testenv:docs-serve]
deps = {[testenv:docs]deps}
commands =
    mkdocs serve

[testenv:build]
deps =
    build
    twine
commands =
    python -m build
    twine check dist/*

[testenv:clean]
deps = coverage
skip_install = true
commands =
    coverage erase
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"

[testenv:security]
deps = bandit[toml]
commands = bandit -r src/ -f json -o bandit-report.json

# Configuration for pytest when run via tox
[tool:pytest]
addopts = -v --tb=short --strict-markers --strict-config
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
