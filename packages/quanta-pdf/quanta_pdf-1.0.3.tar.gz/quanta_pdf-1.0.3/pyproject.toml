[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quanta-pdf"
version = "1.0.3"
description = "Advanced PDF layout analysis engine for extracting figures, tables, and structured content"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sovit Nayak", email = "sovitnayak1258@gmail.com"},
    {name = "Manush Murali", email = "manush@example.com"}
]
maintainers = [
    {name = "Sovit Nayak", email = "sovitnayak1258@gmail.com"},
    {name = "Manush Murali", email = "manush@example.com"}
]
keywords = [
    "pdf",
    "layout-analysis",
    "computer-vision",
    "document-processing",
    "figure-extraction",
    "table-detection",
    "ocr",
    "machine-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Text Processing :: Markup",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]
requires-python = ">=3.8"
dependencies = [
    "opencv-python>=4.8.0",
    "PyMuPDF>=1.23.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "Pillow>=9.0.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/Magnet-AI/Quanta"
Documentation = "https://quanta.readthedocs.io"
Repository = "https://github.com/Magnet-AI/Quanta.git"
"Bug Tracker" = "https://github.com/Magnet-AI/Quanta/issues"
Changelog = "https://github.com/Magnet-AI/Quanta/blob/main/CHANGELOG.md"

[project.scripts]
quanta = "quanta.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "fitz.*",
    "sklearn.*",
]
ignore_missing_imports = true
