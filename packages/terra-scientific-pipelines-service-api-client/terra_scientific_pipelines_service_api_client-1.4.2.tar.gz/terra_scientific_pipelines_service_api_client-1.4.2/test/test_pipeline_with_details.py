# coding: utf-8

"""
    Terra Scientific Pipelines Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from teaspoons_client.models.pipeline_with_details import PipelineWithDetails

class TestPipelineWithDetails(unittest.TestCase):
    """PipelineWithDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PipelineWithDetails:
        """Test PipelineWithDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PipelineWithDetails`
        """
        model = PipelineWithDetails()
        if include_optional:
            return PipelineWithDetails(
                pipeline_name = '',
                display_name = '',
                pipeline_version = 56,
                description = '',
                type = '',
                inputs = [
                    teaspoons_client.models.pipeline_user_provided_input_definition.PipelineUserProvidedInputDefinition(
                        name = '', 
                        display_name = '', 
                        description = '', 
                        type = '', 
                        is_required = True, 
                        default_value = '', 
                        file_suffix = '', 
                        min_value = 1.337, 
                        max_value = 1.337, )
                    ],
                outputs = [
                    teaspoons_client.models.pipeline_output_definition.PipelineOutputDefinition(
                        name = '', 
                        display_name = '', 
                        description = '', 
                        type = '', )
                    ],
                pipeline_quota = teaspoons_client.models.pipeline_quota.PipelineQuota(
                    pipeline_name = '', 
                    default_quota = 56, 
                    min_quota_consumed = 56, 
                    quota_units = '', )
            )
        else:
            return PipelineWithDetails(
                pipeline_name = '',
                display_name = '',
                pipeline_version = 56,
                description = '',
                type = '',
                inputs = [
                    teaspoons_client.models.pipeline_user_provided_input_definition.PipelineUserProvidedInputDefinition(
                        name = '', 
                        display_name = '', 
                        description = '', 
                        type = '', 
                        is_required = True, 
                        default_value = '', 
                        file_suffix = '', 
                        min_value = 1.337, 
                        max_value = 1.337, )
                    ],
                outputs = [
                    teaspoons_client.models.pipeline_output_definition.PipelineOutputDefinition(
                        name = '', 
                        display_name = '', 
                        description = '', 
                        type = '', )
                    ],
                pipeline_quota = teaspoons_client.models.pipeline_quota.PipelineQuota(
                    pipeline_name = '', 
                    default_quota = 56, 
                    min_quota_consumed = 56, 
                    quota_units = '', ),
        )
        """

    def testPipelineWithDetails(self):
        """Test PipelineWithDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
