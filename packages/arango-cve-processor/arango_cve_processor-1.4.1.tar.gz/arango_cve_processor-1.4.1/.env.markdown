# Environment file info

If you're running in production, you should set these securely.

However, if you just want to experiment, set the following values

## ArangoDB settings

Note, this code assumes an ArangoDB server is running and the user specified in the `.env` file has access to read and write the database entered at the command line and that it has the following collection names;

* `nvd_cve_vertex_collection`/`nvd_cve_edge_collection`

[These utilities in stix2arango will do this automatically for you](https://github.com/muchdogesec/stix2arango/tree/main/utilities/arango_cve_processor).

The ArangoDB settings you need to configure are:

* `ARANGODB_HOST_URL`: `'http://127.0.0.1:8529'`
	* If you are running ArangoDB remotely, make sure to include the port used.
* `ARANGODB_USERNAME`: `root`
	* Change this if needed (needs to have r/w access to the database and collections)
* `ARANGODB_PASSWORD`: USE PASSWORD OF ARANGODB_USERNAME


## NVD

* `NVD_API_KEY`: YOUR KEY
	* Get your API key here: https://nvd.nist.gov/developers/request-an-api-key . The script will work without it, but it is very likely you will run into rate limit errors.

## CTIBUTLER

Arango CVE Processor requires [ctibutler](https://github.com/muchdogesec/ctibutler) to lookup ATT&CK, CAPEC, and CWE relationships.

* `CTIBUTLER_BASE_URL`: `'http://api.ctibutler.com'` (recommended)
	* If you are running CTI Butler locally, be sure to set `'http://host.docker.internal:8006/api/'` in the `.env` file otherwise you will run into networking errors.
* `CTIBUTLER_API_KEY`:
	* If using `'http://api.ctibutler.com'`, [get your API key here](http://app.ctibutler.com). Not required if running locally.

## vulncheck

`VULNCHECK_API_KEY`: Arango CVE Processor requires [Vulncheck API](https://docs.vulncheck.com/api) to run in mode `cve-vulncheck-kev`.