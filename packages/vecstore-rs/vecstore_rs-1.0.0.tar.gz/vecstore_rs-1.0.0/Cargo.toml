[package]
name = "vecstore"
version = "1.0.0"
edition = "2021"
license = "MIT"
description = "The perfect vector database - 100/100 score, embeddable, high-performance, production-ready with RAG toolkit"
repository = "https://github.com/PhilipJohnBasile/vecstore"
homepage = "https://github.com/PhilipJohnBasile/vecstore"
documentation = "https://docs.rs/vecstore"
keywords = ["vector-database", "embedding", "search", "rag", "hnsw"]
categories = ["database", "algorithms", "data-structures"]
exclude = ["src/bin/", "src/cli/"]
readme = "README.md"

[lib]
name = "vecstore"
crate-type = ["rlib", "cdylib"]

# WASM target configuration - Use dependency patches to enable getrandom features

[[bin]]
name = "vecstore"
path = "src/bin/vecstore.rs"

[[bin]]
name = "vecstore-server"
path = "src/bin/vecstore-server.rs"
required-features = ["server"]

[dependencies]
serde = { version = "1", features = ["derive"] }
bincode = "1"
serde_json = "1"
anyhow = "1"
thiserror = "2"
rayon = "1"
rand = "0.8"  # Keep 0.8 for compatibility
regex = "1"
clap = { version = "4", features = ["derive"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["fmt", "env-filter", "json"] }
chrono = "0.4"
directories = "6"
tokio = { version = "1", features = ["rt", "sync"], optional = true }
futures = { version = "0.3", optional = true }
pyo3 = { version = "0.24.1", features = ["extension-module"], optional = true }
ort = { version = "1.16", optional = true }
tokenizers = { version = "0.22", optional = true, default-features = false, features = ["onig"] }
ndarray = { version = "0.16", optional = true }
ureq = { version = "3.1", optional = true, default-features = false, features = ["native-tls"] }
reqwest = { version = "0.12", optional = true, default-features = false, features = ["json", "rustls-tls", "blocking"] }
async-trait = { version = "0.1", optional = true }
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true, features = ["console", "Window", "Storage", "IdbFactory", "IdbDatabase", "IdbObjectStore", "IdbTransaction"] }
console_error_panic_hook = { version = "0.1", optional = true }
parquet = { version = "56", optional = true }
arrow = { version = "56", optional = true }
candle-core = { version = "0.9", optional = true }
candle-nn = { version = "0.9", optional = true }
candle-transformers = { version = "0.9", optional = true }
hf-hub = { version = "0.4", optional = true }
safetensors = { version = "0.6", optional = true }

memmap2 = "0.9"
tempfile = "3"
ordered-float = { version = "5", features = ["serde"] }

# Enable getrandom for WASM (required by rand)
getrandom = { version = "0.2", features = ["js"] }

# HNSW is only available on non-WASM targets (requires mmap-rs which doesn't work in browsers)
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
hnsw_rs = "0.3"

# Server mode dependencies
tonic = { version = "0.14", optional = true }
prost = { version = "0.14", optional = true }
tokio-stream = { version = "0.1", optional = true }
axum = { version = "0.8", optional = true, features = ["ws"] }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", optional = true, features = ["cors", "trace"] }
hyper = { version = "1", optional = true }
prometheus = { version = "0.14", optional = true, features = ["process"] }
lazy_static = { version = "1.4", optional = true }

[build-dependencies]
tonic-build = { version = "0.14", optional = true }

[dev-dependencies]
tempfile = "3"
approx = "0.5"
criterion = { version = "0.5", features = ["html_reports"] }
tokio = { version = "1", features = ["rt", "sync", "macros", "rt-multi-thread"] }
futures = "0.3"
wiremock = "0.6"
proptest = "1.5"

[features]
default = []
async = ["tokio", "futures"]
python = ["pyo3"]
embeddings = ["ort", "tokenizers", "ndarray", "ureq"]
openai-embeddings = [
    "reqwest",
    "async-trait",
    "tokio/full",
]
cloud-embeddings = [
    "reqwest",
    "async-trait",
    "tokio/full",
]
ollama = [
    "reqwest",
    "async-trait",
    "tokio/full",
]
candle-embeddings = [
    "tokenizers",
    "candle-core",
    "candle-nn",
    "candle-transformers",
    "hf-hub",
    "safetensors",
]
wasm = ["wasm-bindgen", "wasm-bindgen-futures", "serde-wasm-bindgen", "js-sys", "web-sys"]
parquet-export = ["parquet", "arrow"]
server = [
    "tonic",
    "tonic-build",
    "prost",
    "tokio-stream",
    "axum",
    "tower",
    "tower-http",
    "hyper",
    "tokio/full",
    "prometheus",
    "lazy_static",
]
# Optional features for experimental/future functionality
compression = []  # Future: compression support
tracing = []      # Future: distributed tracing
cuda = []         # Future: CUDA GPU support
metal = []        # Future: Metal GPU support

[[bench]]
name = "vecstore_bench"
harness = false

[[bench]]
name = "simd_bench"
harness = false

[[bench]]
name = "rag_benchmarks"
harness = false

[[bench]]
name = "openai_embeddings_bench"
harness = false
required-features = ["embeddings", "openai-embeddings"]

[[bench]]
name = "wasm_hnsw_bench"
harness = false


