{
  "components": {
    "schemas": {
      "BadGateway": {
        "additionalProperties": false,
        "description": "This response is reserved by Product Gateway.",
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Bad Gateway"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "const": "bad_gateway",
            "description": "An identifier for the type of error.",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "BadGateway",
        "type": "object"
      },
      "BadRequest": {
        "additionalProperties": false,
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Validation failed for fieldName: error description."
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "description": "An identifier for the type of error.",
            "examples": [
              "validation_error"
            ],
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "BadRequest",
        "type": "object"
      },
      "CoffeeBrewingRequest": {
        "properties": {
          "brew": {
            "description": "Kind of drink to brew",
            "examples": [
              "coffee"
            ],
            "title": "Brew",
            "type": "string"
          }
        },
        "required": [
          "brew"
        ],
        "title": "CoffeeBrewingRequest",
        "type": "object"
      },
      "CoffeeBrewingResponse": {
        "properties": {
          "ok": {
            "examples": [
              true
            ],
            "title": "OK",
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ],
        "title": "CoffeeBrewingResponse",
        "type": "object"
      },
      "DataSourceError": {
        "additionalProperties": false,
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Failed to connect to the upstream service, please try again later."
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "description": "An identifier for the type of error.",
            "examples": [
              "upstream_error"
            ],
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "DataSourceError",
        "type": "object"
      },
      "DataSourceNotFound": {
        "additionalProperties": false,
        "description": "This response is reserved by Product Gateway.",
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Data source not found"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "const": "data_source_not_found",
            "description": "An identifier for the type of error.",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "DataSourceNotFound",
        "type": "object"
      },
      "DoesNotConformToDefinition": {
        "additionalProperties": false,
        "description": "This response is reserved by Product Gateway.",
        "properties": {
          "data_source_status_code": {
            "description": "HTTP status code returned from the data source",
            "examples": [
              200
            ],
            "title": "Data source status code",
            "type": "integer"
          },
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Response from data source does not conform to definition"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "const": "does_not_conform_to_definition",
            "description": "An identifier for the type of error.",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message",
          "data_source_status_code"
        ],
        "title": "DoesNotConformToDefinition",
        "type": "object"
      },
      "Forbidden": {
        "additionalProperties": false,
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "No access to requested data for group 'example'."
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "description": "An identifier for the type of error.",
            "examples": [
              "forbidden"
            ],
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "Forbidden",
        "type": "object"
      },
      "GatewayTimeout": {
        "additionalProperties": false,
        "description": "This response is reserved by Product Gateway.",
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Gateway Timeout"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "const": "gateway_timeout",
            "description": "An identifier for the type of error.",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "GatewayTimeout",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "NotFound": {
        "additionalProperties": false,
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Not found"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "description": "An identifier for the type of error.",
            "examples": [
              "not_found"
            ],
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "NotFound",
        "type": "object"
      },
      "RateLimitExceeded": {
        "additionalProperties": false,
        "description": "This response is reserved by Product Gateway.",
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Rate limit exceeded"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "description": "An identifier for the type of error.",
            "examples": [
              "rate_limit_exceeded"
            ],
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "RateLimitExceeded",
        "type": "object"
      },
      "ServiceUnavailable": {
        "additionalProperties": false,
        "description": "This response is reserved by Product Gateway.",
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "Service Unavailable"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "const": "service_unavailable",
            "description": "An identifier for the type of error.",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "ServiceUnavailable",
        "type": "object"
      },
      "TeaPotError": {
        "properties": {
          "errorMessage": {
            "examples": [
              "I'm a teapot"
            ],
            "title": "Error message",
            "type": "string"
          },
          "ok": {
            "examples": [
              false
            ],
            "title": "OK",
            "type": "boolean"
          }
        },
        "required": [
          "ok",
          "errorMessage"
        ],
        "title": "TeaPotError",
        "type": "object"
      },
      "Unauthorized": {
        "additionalProperties": false,
        "properties": {
          "message": {
            "description": "A human readable description of the error.",
            "examples": [
              "The API token has expired"
            ],
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "description": "An identifier for the type of error.",
            "examples": [
              "api_token_missing_or_invalid"
            ],
            "pattern": "^[a-z0-9_]*$",
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "type",
          "message"
        ],
        "title": "Unauthorized",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "description": "Coffee brewer",
    "title": "Coffee brewer",
    "version": "0.1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/Appliance/CoffeeBrewer": {
      "post": {
        "deprecated": true,
        "description": "Coffee brewer",
        "operationId": "request_Appliance_CoffeeBrewer",
        "parameters": [
          {
            "description": "API key or token",
            "in": "header",
            "name": "x-api-key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "API key or token",
              "title": "X-API-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoffeeBrewingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoffeeBrewingResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "418": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeaPotError"
                }
              }
            },
            "description": "I'm a teapot"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              },
              "text/html": {},
              "text/plain": {}
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              },
              "text/html": {},
              "text/plain": {}
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          }
        },
        "summary": "Coffee brewer",
        "tags": [
          "brewer",
          "coffee"
        ]
      }
    }
  },
  "x-strict-validation": false
}
