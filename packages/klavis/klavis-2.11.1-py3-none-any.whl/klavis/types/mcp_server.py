# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .server_tool import ServerTool


class McpServer(UniversalBaseModel):
    id: str
    name: str
    description: typing.Optional[str] = None
    tools: typing.Optional[typing.List[ServerTool]] = None
    auth_needed: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="authNeeded")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
