preview = true

line-length = 90
indent-width = 4

target-version = "py312"

src = ["unilogging"]
exclude = [
    "tests/",
    "noxfile.py"
]

[format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[lint]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # maccabe
    "COM", # flake8-commas
    "D", # pydocstyle
    "DTZ", # flake8-datetimez
    "E", # pycodestyle
    "ERA", # flake8-eradicate
    "EXE", # flake8-executable
    "F", # pyflakes
    "FBT", # flake8-boolean-trap
    "FLY", # pyflint
    "FURB", # refurb
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N", # pep8-naming
    "PERF", # perflint
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff
    "S", # flake8-bandit
    "SIM", # flake8-simpify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T100", # flake8-debugger
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
    "YTT", # flake8-2020
]

ignore = [
    "FBT",
    "A005", # allow to shadow stdlib and builtin module names
    "COM812", # trailing comma, conflicts with `ruff format`
    # Different doc rules that we don't really care about:
    "D100",
    "D104",
    "D106",
    "D200",
    "D203",
    "D205",
    "D212",
    "D401",
    "D404",
    "D405",
    "ISC001", # implicit string concat conflicts with `ruff format`
    "ISC003", # prefer explicit string concat over implicit concat
    "PLR09", # we have our own complexity rules
    "PLR2004", # do not report magic numbers
    "PLR6301", # do not require classmethod / staticmethod when self not used
    "TRY003", # long exception messages from `tryceratops`
]
external = ["WPS"]

[lint.pydocstyle]
convention = "google"

[lint.per-file-ignores]
"unilogging/integrations/dishka.py" = [
    "D101",
    "D102",
    "D107",
]