[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["unilogging"]

[project]
name = "unilogging"
version = "0.2.2"
description = "A simple library for working with the context of logs."
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Universe Interface", email = "uni@goduni.me" },
]
license = { text = "MIT" }
keywords = ["logging", "context", "structured-logging", "python-logging"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = []

[project.optional-dependencies]
dishka = ["dishka>=1.6.0"]

[dependency-groups]
optionals = ["unilogging[dishka]"]

lint = [
    "mypy==1.17.1",
    "ruff==0.12.12",
]

tests = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "python-json-logger==3.3.0",
    "nox>=2025.5.1",
    "nox-uv>=0.6.2",
]

dev = [
    { include-group = "optionals" },
    { include-group = "lint" },
    { include-group = "tests" },
]

[project.urls]
Homepage = "https://github.com/goduni/unilogging"
Repository = "https://github.com/goduni/unilogging"
Issues = "https://github.com/goduni/unilogging/issues"

[tool.coverage.report]
show_missing = true
skip_empty = true
exclude_also = [
    "if __name__ == .__main__.:",
    "self.logger",
    "def __repr__",
    "lambda: None",
    "from .*",
    "import .*",
    '@(abc\.)?abstractmethod',
    "raise NotImplementedError",
    'raise AssertionError',
    'logger\..*',
    "pass",
    '\.\.\.',
]

[tool.coverage.run]
omit = ["*__dishka_factory_*"]