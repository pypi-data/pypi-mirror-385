[project]
name = "mendevi"
description = "Video encoding and decoding measures."
dynamic = ["version"]
requires-python = ">=3.11,<3.15"
authors = [
  {name = "Robin RICHARD (robinechuca)", email = "robin.richard@inria.fr"},
]
maintainers = [
  {name = "Robin RICHARD (robinechuca)", email = "robin.richard@inria.fr"},
]
dependencies = [  # https://packaging.python.org/en/latest/specifications/dependency-specifiers/#dependency-specifiers
  "black",
  "click",
  "context_verbose",
  "cutcutcodec",
  "flufl.lock",
  "matplotlib",
  "numpy",
  "psutil",
  "pygments",
  "requests",
  "unidecode",
]
readme = "README.rst"
license = {file = "LICENSE"}
keywords = [
  "av1",
  "consumption",
  "energy",
  "h264",
  "h265",
  "h266",
  "measure",
  "power",
  "psnr",
  "ssim",
  "video decoding",
  "video encoding",
  "video",
  "vmaf",
  "vp9",
  "wattmeter",
]
classifiers = [  # all classifiers https://pypi.org/classifiers/
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3",
  "Programming Language :: SQL",
  "Topic :: Database :: Database Engines/Servers",
  "Topic :: File Formats :: JSON",
  "Topic :: Multimedia :: Video :: Conversion",
]

[project.optional-dependencies]
doc = [
  "mathjax",  # for sphinx latex math
  "recommonmark",
  "sphinx==7.4.7",  # 8.2.0 failed on readthedoc
  "sphinx-copybutton",
  "sphinx-inline-tabs",
  "sphinx-rtd-dark-mode",
  "sphinx-rtd-theme",
  "sphinxcontrib-video",
  "sphinxext-opengraph",
]
test = [
  "enoslib",
  "pydocstyle<=6.1.1",  # 6.1.2 bug on pylama 8.4.1
  "pylama[all,toml]",
  "pytest",
]

[project.scripts]
mendevi = "mendevi.__main__:main"

[project.urls]
Documentation = "https://mendevi.readthedocs.io/latest"
Repository = "https://gitlab.inria.fr/rrichard/mendevi"

[tool.setuptools.packages.find]
where = [""]
exclude = ["docs"]

[tool.setuptools.package-data]
"*" = ["*.json.xz"]

[tool.setuptools.dynamic]
version = {attr = "mendevi.__version__"}

[tool.pylama]
sort = "E,W,D"
skip = "./doc, ./dist*"
linters = "mccabe,pycodestyle,pydocstyle,pyflakes,mypy,pylint"
# E226 false detection pycodestyle 2.11.1
# D212 and D213 are mutualy exclusive, PEP 257 is in favor of D212
# D211 and D203 are mutualy exclusive, PEP 257 is in favor of D211
# D107 is in contradiction with the numpy doc convention
# D413 disable in the google, numpy, and pep257 convention
# D301 use r""" if any backslashes in a docstring
ignore = "E226,D213,D203,D107,D413,D301"
max_line_length = 100

[tool.mypy]
cache_dir = "~/.cache/mypy_cache"
ignore_missing_imports = true
show_error_codes = true

[tool.pylint]
# E0611 failed to import c compiled modules
# C0103 method name not conform because qt impose the name
# E1101 'no member' failed in all c extensions
# E1102 'not callable' false detection in pylint 3.1.0
# E1133 'no iterable' false positive in pylint 3.1.0
# E1135 'doesn't support membership test' false positive in pylint 3.1.0
# C0415 'Import outside toplevel' to allow lazy import
disable = "E0611,C0103,E1101,E1102,E1133,E1135,C0415"
extension-pkg-allow-list = ["av"]
