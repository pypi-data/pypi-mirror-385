[tool.poetry]
name = "alithia"
version = "0.1.4"
description = "Your ultimate research companion"
authors = ["xmingc <chenxm35@gmail.com>"]
maintainers = ["xmingc <chenxm35@gmail.com>"]
readme = "README.md"
license = "AGPL-3.0"
keywords = ["research", "agent", "paper"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
packages = [{include = "alithia"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
pydantic = "^2.0.0"
cogents_core = "^0.1.13,<0.2.0"
arxiv = "^2.1.3"
loguru = "^0.7.2"
pyzotero = "^1.5.25"
scikit-learn = "^1.5.2"
sentence-transformers = "^3.3.1"
gitignore-parser = "^0.1.11"
tiktoken = "^0.8.0"
feedparser = "^6.0.11"
pinecone-client = "^3.2.2"
supabase = "^2.6.0"
#mineru = {extras = ["core"], version = "^2.1.10"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.0.0"
pre-commit = "^3.0.0"
build = "^1.2.0"
flake8 = "^6.0.0"
psycopg2-binary = "^2.9.0"
autoflake = "^2.0.0"

[tool.poetry.urls]
Homepage = "https://github.com/caesar0301/alithia"
Documentation = "https://alithia.readthedocs.io/"
Repository = "https://github.com/caesar0301/alithia"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pytest.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["alithia"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
