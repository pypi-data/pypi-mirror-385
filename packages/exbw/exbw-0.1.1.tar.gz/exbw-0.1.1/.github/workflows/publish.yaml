name: Publish

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-a[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-b[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install UV with Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Build with Python ${{ matrix.python-version }}
        run: uv build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/

  publish_pypi:
    name: Publish Release to PyPI
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi-release
    permissions:
      id-token: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  publish_gh:
    name: Publish Release to GH
    if: github.ref_type == 'tag'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: gh-release
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true
      - name: Publish to GH
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "${GITHUB_REF#refs/tags/}" dist/* --title "${GITHUB_REF#refs/tags/}" --generate-notes
