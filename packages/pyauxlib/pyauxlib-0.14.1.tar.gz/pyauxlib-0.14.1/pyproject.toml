[build-system]
requires = ["uv_build>=0.8.5,<1.0"]
build-backend = "uv_build"

[project]
name = "pyauxlib"
version = "0.14.1"
description = "Auxiliary library for python."
authors = [
    {name = "Pablo Solís-Fernández", email = "psolsfer@gmail.com"}
]
maintainers = [
    {name = "Pablo Solís-Fernández", email = "psolsfer@gmail.com"}
]
readme = "README.md"
keywords = ["pyauxlib"]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
requires-python = ">=3.10,<3.15"
dependencies = [
    "pydantic>=2.4.0",
    "ruamel-yaml<1.0",
    "wrapt>=1.15",
]

[project.urls]
Homepage = "https://github.com/psolsfer/pyauxlib"
Repository = "https://github.com/psolsfer/pyauxlib"
Documentation = "https://pyauxlib.readthedocs.io"
Issues = "https://github.com/psolsfer/pyauxlib/issues"

[project.optional-dependencies]
chardet = ["chardet<6.0"]
dates = ["python-dateutil", "types-python-dateutil"]
times = ["tzlocal"]
all = ["chardet<6.0", "python-dateutil", "types-python-dateutil", "tzlocal"]

[tool.uv]
default-groups = ["dev", "test", "docs"]

[dependency-groups]
dev = [
    "pip>=23",
    "invoke>=2.2",
    "wheel>=0.41.2",
    "watchdog>=3.0.0",
    "tox>=4.11",
    "tox-gh-actions<4,>=3",
    "tox-uv>1.20",
    "mkdocs>=1.5.3",
    "mkdocs-awesome-pages-plugin>=2.9.2",
    "mkdocs-include-markdown-plugin>=6.0",
    "mkdocs-material>=9.4.2",
    "mkdocs-material-extensions>=1.2",
    "mkdocstrings[python]>=0.23.0",
    "mypy>=1.6.0",
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "coverage>=7.3.1",
    "prek>=0.1.6",
    "ruff>=0.8",
    "pip-audit>=2.9.0",
    "typeguard>=4.1.5",
    "commitizen>=3.10",
]
test = [
    "commitizen>=3.10",
    "coverage[toml]>=7.3.1",
    "mypy>=1.6.0",
    "prek>=0.1.6",
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "pytest-clarity>=1.0.1",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.3.1",
    "ruff>=0.8",
    "pip-audit>=2.9.0",
    "typeguard>=4.1.5",
    "tox>=4.11",
    "tox-gh-actions<4,>=3",
    "tox-uv>1.20",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-awesome-pages-plugin>=2.9.2",
    "mkdocs-include-markdown-plugin>=6.0",
    "mkdocs-material>=9.4.2",
    "mkdocs-material-extensions>=1.2",
    "mkdocstrings[python]>=0.23.0",
]

[tool.commitizen]
bump_message = "bump(release): v$current_version → v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.14.1"
version_files = [
    "pyproject.toml:version",
    "src/pyauxlib/__init__.py:__version__"
]

[tool.mypy]
plugins = "pydantic.mypy"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.coverage.report]
fail_under = 0
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src/pyauxlib"]

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.pytest.ini_options]
#addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=pyauxlib --verbosity=2 --junitxml=reports/pytest.xml"
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=pyauxlib --verbosity=2"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src/pyauxlib", "tests"]
xfail_strict = true

[tool.ruff]
fix = true
line-length = 100

[tool.ruff.lint]
select = ["A", "ASYNC", "B", "C4", "C90", "D", "DTZ", "E", "F", "FLY", "I", "ISC", "N", "NPY", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "RET", "RUF", "RSE", "SIM", "TID", "UP", "W", "YTT"]
ignore = ["E501", "ISC001", "RET504", "S101"]
extend-select = ["BLE", "EM", "ERA", "G", "ICN", "INP", "PTH", "PYI", "RSE", "S", "SLF", "T10", "T20", "TCH", "TRY"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
line-ending = "lf"
docstring-code-format = true
