from ..core import File
from .external_program import ExternalProgram
from _typeshed import Incomplete
from io import BytesIO

__all__ = ['DGeoStabilityAnalysis']

class DGeoStabilityAnalysis(ExternalProgram):
    """
    DGeoStabilityAnalysis can be used to perform an analysis using DGeoStability on a third-party worker. To
    start an analysis call the method :meth:`~.ExternalProgram.execute`, with an appropriate timeout (in seconds).
    To retrieve the results call the method :meth:`get_output_file`, after :meth:`~.ExternalProgram.execute`.

    Usage:

    .. code-block:: python

        dgeostability_analysis = DGeoStabilityAnalysis(input_file=input_file)
        dgeostability_analysis.execute(timeout=10)
        output_file = dgeostability_analysis.get_output_file()

    Exceptions which can be raised during calculation:
    - :class:`viktor.errors.ExecutionError`: generic error. Error message provides more information
    """
    input_file: Incomplete
    def __init__(self, input_file: BytesIO | File) -> None:
        """
        :param input_file: .sti input file.
        """
    def get_output_file(self, extension: str = '.sto', *, as_file: bool = False) -> BytesIO | File | None:
        """
        Method can be used to retrieve the results generated by running an external analysis. Call method
        :meth:`~.ExternalProgram.execute` first and :meth:`get_output_file` afterwards.

        :param extension: extension of the file you want to return; '.sto', '.error.log', '.err'
        :param as_file: Return as BytesIO (default) or File ::version(v13.5.0)
        """
