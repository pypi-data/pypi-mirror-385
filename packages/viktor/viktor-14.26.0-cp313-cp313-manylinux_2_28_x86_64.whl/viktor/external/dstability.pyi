from ..core import File
from .external_program import ExternalProgram
from _typeshed import Incomplete

__all__ = ['DStabilityAnalysis']

class DStabilityAnalysis(ExternalProgram):
    """
    DStabilityAnalysis can be used to perform an analysis using D-Stability on a third-party worker. To
    start an analysis call the method :meth:`~.ExternalProgram.execute`, with an appropriate timeout (in seconds).
    To retrieve the results call the method :meth:`get_output_file`, after :meth:`~.ExternalProgram.execute`.

    Example usage:

    .. code-block:: python

        file = File()  # create a writable File object
        path = Path(file.source)  # request its path
        dstability_model.serialize(path)  # let GEOLIB write to the file
        analysis = DStabilityAnalysis(input_file=file)  # pass the file with content to DStabilityAnalysis
        analysis.execute(timeout=10)
        output_file = analysis.get_output_file()

    Exceptions which can be raised during calculation:
    - :class:`viktor.errors.ExecutionError`: generic error. Error message provides more information
    """
    input_file: Incomplete
    def __init__(self, input_file: File) -> None:
        """
        :param input_file: File object with the body of the .stix input file.
        """
    def get_output_file(self, extension: str = '.stix') -> File | None:
        """
        Method can be used to retrieve the results generated by running an external analysis. Call method
        :meth:`~.ExternalProgram.execute` first and :meth:`get_output_file` afterwards.

        :param extension: extension of the file you want to return; '.stix'
        """
