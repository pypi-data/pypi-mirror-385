# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from agentpack.v1 import registry_pb2 as agentpack_dot_v1_dot_registry__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ToolRegistryStub(object):
    """Tool Registry Service
    Manages tool catalog, versions, health status, and discovery
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTool = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/CreateTool',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.CreateToolRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.Tool.FromString,
                _registered_method=True)
        self.GetTool = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/GetTool',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.GetToolRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.Tool.FromString,
                _registered_method=True)
        self.GetToolWithVersions = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/GetToolWithVersions',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.GetToolRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ToolWithVersions.FromString,
                _registered_method=True)
        self.ListTools = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/ListTools',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.ListToolsRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ListToolsResponse.FromString,
                _registered_method=True)
        self.UpdateTool = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/UpdateTool',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.UpdateToolRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.Tool.FromString,
                _registered_method=True)
        self.DeleteTool = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/DeleteTool',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.DeleteToolRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateVersion = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/CreateVersion',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.CreateVersionRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ToolVersion.FromString,
                _registered_method=True)
        self.GetVersion = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/GetVersion',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ToolVersion.FromString,
                _registered_method=True)
        self.ListVersions = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/ListVersions',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.ListVersionsRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ListVersionsResponse.FromString,
                _registered_method=True)
        self.DeprecateVersion = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/DeprecateVersion',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.DeprecateVersionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateHealthStatus = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/UpdateHealthStatus',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.UpdateHealthStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetVersionsNeedingHealthCheck = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/GetVersionsNeedingHealthCheck',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.GetVersionsNeedingHealthCheckRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ListVersionsResponse.FromString,
                _registered_method=True)
        self.SearchByTag = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/SearchByTag',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.SearchByTagRequest.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ListToolsResponse.FromString,
                _registered_method=True)
        self.ListAllTags = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/ListAllTags',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=agentpack_dot_v1_dot_registry__pb2.ListTagsResponse.FromString,
                _registered_method=True)
        self.AddTags = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/AddTags',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.AddTagsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RemoveTag = channel.unary_unary(
                '/agentpack.v1.ToolRegistry/RemoveTag',
                request_serializer=agentpack_dot_v1_dot_registry__pb2.RemoveTagRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ToolRegistryServicer(object):
    """Tool Registry Service
    Manages tool catalog, versions, health status, and discovery
    """

    def CreateTool(self, request, context):
        """Tool Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetToolWithVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTools(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVersion(self, request, context):
        """Version Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeprecateVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateHealthStatus(self, request, context):
        """Health & Status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersionsNeedingHealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchByTag(self, request, context):
        """Discovery & Search
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTags(self, request, context):
        """Tags
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ToolRegistryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTool': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTool,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.CreateToolRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.Tool.SerializeToString,
            ),
            'GetTool': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTool,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.GetToolRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.Tool.SerializeToString,
            ),
            'GetToolWithVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetToolWithVersions,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.GetToolRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ToolWithVersions.SerializeToString,
            ),
            'ListTools': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTools,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.ListToolsRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ListToolsResponse.SerializeToString,
            ),
            'UpdateTool': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTool,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.UpdateToolRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.Tool.SerializeToString,
            ),
            'DeleteTool': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTool,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.DeleteToolRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVersion,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.CreateVersionRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ToolVersion.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.GetVersionRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ToolVersion.SerializeToString,
            ),
            'ListVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVersions,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.ListVersionsRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ListVersionsResponse.SerializeToString,
            ),
            'DeprecateVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.DeprecateVersion,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.DeprecateVersionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateHealthStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateHealthStatus,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.UpdateHealthStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetVersionsNeedingHealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersionsNeedingHealthCheck,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.GetVersionsNeedingHealthCheckRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ListVersionsResponse.SerializeToString,
            ),
            'SearchByTag': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchByTag,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.SearchByTagRequest.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ListToolsResponse.SerializeToString,
            ),
            'ListAllTags': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllTags,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=agentpack_dot_v1_dot_registry__pb2.ListTagsResponse.SerializeToString,
            ),
            'AddTags': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTags,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.AddTagsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveTag': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTag,
                    request_deserializer=agentpack_dot_v1_dot_registry__pb2.RemoveTagRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'agentpack.v1.ToolRegistry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('agentpack.v1.ToolRegistry', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ToolRegistry(object):
    """Tool Registry Service
    Manages tool catalog, versions, health status, and discovery
    """

    @staticmethod
    def CreateTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/CreateTool',
            agentpack_dot_v1_dot_registry__pb2.CreateToolRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.Tool.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/GetTool',
            agentpack_dot_v1_dot_registry__pb2.GetToolRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.Tool.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetToolWithVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/GetToolWithVersions',
            agentpack_dot_v1_dot_registry__pb2.GetToolRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ToolWithVersions.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListTools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/ListTools',
            agentpack_dot_v1_dot_registry__pb2.ListToolsRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ListToolsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/UpdateTool',
            agentpack_dot_v1_dot_registry__pb2.UpdateToolRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.Tool.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/DeleteTool',
            agentpack_dot_v1_dot_registry__pb2.DeleteToolRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/CreateVersion',
            agentpack_dot_v1_dot_registry__pb2.CreateVersionRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ToolVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/GetVersion',
            agentpack_dot_v1_dot_registry__pb2.GetVersionRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ToolVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/ListVersions',
            agentpack_dot_v1_dot_registry__pb2.ListVersionsRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ListVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeprecateVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/DeprecateVersion',
            agentpack_dot_v1_dot_registry__pb2.DeprecateVersionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateHealthStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/UpdateHealthStatus',
            agentpack_dot_v1_dot_registry__pb2.UpdateHealthStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVersionsNeedingHealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/GetVersionsNeedingHealthCheck',
            agentpack_dot_v1_dot_registry__pb2.GetVersionsNeedingHealthCheckRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ListVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchByTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/SearchByTag',
            agentpack_dot_v1_dot_registry__pb2.SearchByTagRequest.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ListToolsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAllTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/ListAllTags',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            agentpack_dot_v1_dot_registry__pb2.ListTagsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/AddTags',
            agentpack_dot_v1_dot_registry__pb2.AddTagsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agentpack.v1.ToolRegistry/RemoveTag',
            agentpack_dot_v1_dot_registry__pb2.RemoveTagRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
