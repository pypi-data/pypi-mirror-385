# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import es2e_message_pb2 as es2e_dot_es2e__message__pb2

GRPC_GENERATED_VERSION = '1.71.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in es2e/es2e_api_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ES2EServiceStub(object):
    """import "protoc-gen-openapiv2/options/annotations.proto";

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info : {title : "ES2-MSA API";
    version : "0.1.0";
    description : "Public REST API for ES2-MSA";
    }
    ;
    schemes : HTTP;
    consumes : "application/json";
    produces : "application/json";
    }
    ;

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create_index = channel.stream_unary(
                '/ES2E.ES2EService/create_index',
                request_serializer=es2e_dot_es2e__message__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.CreateIndexResponse.FromString,
                _registered_method=True)
        self.get_index_list = channel.unary_unary(
                '/ES2E.ES2EService/get_index_list',
                request_serializer=es2e_dot_es2e__message__pb2.GetIndexListRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.GetIndexListResponse.FromString,
                _registered_method=True)
        self.get_index_info = channel.unary_stream(
                '/ES2E.ES2EService/get_index_info',
                request_serializer=es2e_dot_es2e__message__pb2.GetIndexInfoRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.GetIndexInfoResponse.FromString,
                _registered_method=True)
        self.delete_index = channel.unary_unary(
                '/ES2E.ES2EService/delete_index',
                request_serializer=es2e_dot_es2e__message__pb2.DeleteIndexRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.DeleteIndexResponse.FromString,
                _registered_method=True)
        self.load_index = channel.unary_unary(
                '/ES2E.ES2EService/load_index',
                request_serializer=es2e_dot_es2e__message__pb2.LoadIndexRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.LoadIndexResponse.FromString,
                _registered_method=True)
        self.unload_index = channel.unary_unary(
                '/ES2E.ES2EService/unload_index',
                request_serializer=es2e_dot_es2e__message__pb2.UnloadIndexRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.UnloadIndexResponse.FromString,
                _registered_method=True)
        self.insert_data = channel.stream_unary(
                '/ES2E.ES2EService/insert_data',
                request_serializer=es2e_dot_es2e__message__pb2.InsertDataRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.InsertDataResponse.FromString,
                _registered_method=True)
        self.batch_insert_data = channel.stream_unary(
                '/ES2E.ES2EService/batch_insert_data',
                request_serializer=es2e_dot_es2e__message__pb2.BatchInsertDataRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.BatchInsertDataResponse.FromString,
                _registered_method=True)
        self.inner_product = channel.unary_stream(
                '/ES2E.ES2EService/inner_product',
                request_serializer=es2e_dot_es2e__message__pb2.InnerProductRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.InnerProductResponse.FromString,
                _registered_method=True)
        self.get_metadata = channel.unary_unary(
                '/ES2E.ES2EService/get_metadata',
                request_serializer=es2e_dot_es2e__message__pb2.GetMetadataRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.GetMetadataResponse.FromString,
                _registered_method=True)
        self.register_key = channel.stream_unary(
                '/ES2E.ES2EService/register_key',
                request_serializer=es2e_dot_es2e__message__pb2.RegisterKeyRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.RegisterKeyResponse.FromString,
                _registered_method=True)
        self.get_key_list = channel.unary_unary(
                '/ES2E.ES2EService/get_key_list',
                request_serializer=es2e_dot_es2e__message__pb2.GetKeyListRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.GetKeyListResponse.FromString,
                _registered_method=True)
        self.get_key_info = channel.unary_unary(
                '/ES2E.ES2EService/get_key_info',
                request_serializer=es2e_dot_es2e__message__pb2.GetKeyInfoRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.GetKeyInfoResponse.FromString,
                _registered_method=True)
        self.delete_key = channel.unary_unary(
                '/ES2E.ES2EService/delete_key',
                request_serializer=es2e_dot_es2e__message__pb2.DeleteKeyRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.DeleteKeyResponse.FromString,
                _registered_method=True)
        self.load_key = channel.unary_unary(
                '/ES2E.ES2EService/load_key',
                request_serializer=es2e_dot_es2e__message__pb2.LoadKeyRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.LoadKeyResponse.FromString,
                _registered_method=True)
        self.unload_key = channel.unary_unary(
                '/ES2E.ES2EService/unload_key',
                request_serializer=es2e_dot_es2e__message__pb2.UnloadKeyRequest.SerializeToString,
                response_deserializer=es2e_dot_es2e__message__pb2.UnloadKeyResponse.FromString,
                _registered_method=True)


class ES2EServiceServicer(object):
    """import "protoc-gen-openapiv2/options/annotations.proto";

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info : {title : "ES2-MSA API";
    version : "0.1.0";
    description : "Public REST API for ES2-MSA";
    }
    ;
    schemes : HTTP;
    consumes : "application/json";
    produces : "application/json";
    }
    ;

    """

    def create_index(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_index_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_index_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unload_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def insert_data(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def batch_insert_data(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inner_product(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_metadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def register_key(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_key_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_key_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unload_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ES2EServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create_index': grpc.stream_unary_rpc_method_handler(
                    servicer.create_index,
                    request_deserializer=es2e_dot_es2e__message__pb2.CreateIndexRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.CreateIndexResponse.SerializeToString,
            ),
            'get_index_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_index_list,
                    request_deserializer=es2e_dot_es2e__message__pb2.GetIndexListRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.GetIndexListResponse.SerializeToString,
            ),
            'get_index_info': grpc.unary_stream_rpc_method_handler(
                    servicer.get_index_info,
                    request_deserializer=es2e_dot_es2e__message__pb2.GetIndexInfoRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.GetIndexInfoResponse.SerializeToString,
            ),
            'delete_index': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_index,
                    request_deserializer=es2e_dot_es2e__message__pb2.DeleteIndexRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.DeleteIndexResponse.SerializeToString,
            ),
            'load_index': grpc.unary_unary_rpc_method_handler(
                    servicer.load_index,
                    request_deserializer=es2e_dot_es2e__message__pb2.LoadIndexRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.LoadIndexResponse.SerializeToString,
            ),
            'unload_index': grpc.unary_unary_rpc_method_handler(
                    servicer.unload_index,
                    request_deserializer=es2e_dot_es2e__message__pb2.UnloadIndexRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.UnloadIndexResponse.SerializeToString,
            ),
            'insert_data': grpc.stream_unary_rpc_method_handler(
                    servicer.insert_data,
                    request_deserializer=es2e_dot_es2e__message__pb2.InsertDataRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.InsertDataResponse.SerializeToString,
            ),
            'batch_insert_data': grpc.stream_unary_rpc_method_handler(
                    servicer.batch_insert_data,
                    request_deserializer=es2e_dot_es2e__message__pb2.BatchInsertDataRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.BatchInsertDataResponse.SerializeToString,
            ),
            'inner_product': grpc.unary_stream_rpc_method_handler(
                    servicer.inner_product,
                    request_deserializer=es2e_dot_es2e__message__pb2.InnerProductRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.InnerProductResponse.SerializeToString,
            ),
            'get_metadata': grpc.unary_unary_rpc_method_handler(
                    servicer.get_metadata,
                    request_deserializer=es2e_dot_es2e__message__pb2.GetMetadataRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.GetMetadataResponse.SerializeToString,
            ),
            'register_key': grpc.stream_unary_rpc_method_handler(
                    servicer.register_key,
                    request_deserializer=es2e_dot_es2e__message__pb2.RegisterKeyRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.RegisterKeyResponse.SerializeToString,
            ),
            'get_key_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_key_list,
                    request_deserializer=es2e_dot_es2e__message__pb2.GetKeyListRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.GetKeyListResponse.SerializeToString,
            ),
            'get_key_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_key_info,
                    request_deserializer=es2e_dot_es2e__message__pb2.GetKeyInfoRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.GetKeyInfoResponse.SerializeToString,
            ),
            'delete_key': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_key,
                    request_deserializer=es2e_dot_es2e__message__pb2.DeleteKeyRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.DeleteKeyResponse.SerializeToString,
            ),
            'load_key': grpc.unary_unary_rpc_method_handler(
                    servicer.load_key,
                    request_deserializer=es2e_dot_es2e__message__pb2.LoadKeyRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.LoadKeyResponse.SerializeToString,
            ),
            'unload_key': grpc.unary_unary_rpc_method_handler(
                    servicer.unload_key,
                    request_deserializer=es2e_dot_es2e__message__pb2.UnloadKeyRequest.FromString,
                    response_serializer=es2e_dot_es2e__message__pb2.UnloadKeyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ES2E.ES2EService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ES2E.ES2EService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ES2EService(object):
    """import "protoc-gen-openapiv2/options/annotations.proto";

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info : {title : "ES2-MSA API";
    version : "0.1.0";
    description : "Public REST API for ES2-MSA";
    }
    ;
    schemes : HTTP;
    consumes : "application/json";
    produces : "application/json";
    }
    ;

    """

    @staticmethod
    def create_index(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/ES2E.ES2EService/create_index',
            es2e_dot_es2e__message__pb2.CreateIndexRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.CreateIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_index_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/get_index_list',
            es2e_dot_es2e__message__pb2.GetIndexListRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.GetIndexListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_index_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ES2E.ES2EService/get_index_info',
            es2e_dot_es2e__message__pb2.GetIndexInfoRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.GetIndexInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/delete_index',
            es2e_dot_es2e__message__pb2.DeleteIndexRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.DeleteIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def load_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/load_index',
            es2e_dot_es2e__message__pb2.LoadIndexRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.LoadIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unload_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/unload_index',
            es2e_dot_es2e__message__pb2.UnloadIndexRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.UnloadIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def insert_data(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/ES2E.ES2EService/insert_data',
            es2e_dot_es2e__message__pb2.InsertDataRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.InsertDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def batch_insert_data(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/ES2E.ES2EService/batch_insert_data',
            es2e_dot_es2e__message__pb2.BatchInsertDataRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.BatchInsertDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def inner_product(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ES2E.ES2EService/inner_product',
            es2e_dot_es2e__message__pb2.InnerProductRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.InnerProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_metadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/get_metadata',
            es2e_dot_es2e__message__pb2.GetMetadataRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.GetMetadataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def register_key(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/ES2E.ES2EService/register_key',
            es2e_dot_es2e__message__pb2.RegisterKeyRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.RegisterKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_key_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/get_key_list',
            es2e_dot_es2e__message__pb2.GetKeyListRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.GetKeyListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get_key_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/get_key_info',
            es2e_dot_es2e__message__pb2.GetKeyInfoRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.GetKeyInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/delete_key',
            es2e_dot_es2e__message__pb2.DeleteKeyRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.DeleteKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def load_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/load_key',
            es2e_dot_es2e__message__pb2.LoadKeyRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.LoadKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unload_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ES2E.ES2EService/unload_key',
            es2e_dot_es2e__message__pb2.UnloadKeyRequest.SerializeToString,
            es2e_dot_es2e__message__pb2.UnloadKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
