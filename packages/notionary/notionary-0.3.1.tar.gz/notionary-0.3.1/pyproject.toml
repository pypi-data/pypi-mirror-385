[project]
name = "notionary"
version = "0.3.1"
description = "Python library for programmatic Notion workspace management - databases, pages, and content with advanced Markdown support"
authors = [{ name = "Mathis Arends", email = "mathisarends27@gmail.com" }]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "httpx>=0.28.0",
    "pydantic>=2.11.4",
    "aiofiles>=24.1.0,<25.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
]

[project.urls]
Homepage = "https://github.com/mathisarends/notionary"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["/notionary", "/README.md"]

[tool.hatch.build.targets.wheel]
packages = ["notionary"]

[dependency-groups]
dev = [
    "mkdocs>=1.6.1,<2",
    "mkdocs-material>=9.6.15,<10",
    "black>=25.1.0,<26",
    "pytest>=8.4.1,<9",
    "pytest-asyncio>=1.1.0,<2",
    "pytest-mock>=3.14.1,<4",
    "pytest-cov>=6.2.1,<7",
    "isort>=6.0.1,<7",
    "mypy>=1.17.1,<2",
    "ruff>=0.13.1",
    "pre-commit>=4.3.0",
    "twine>=6.0.0",
]


[tool.ruff]
target-version = "py313"
line-length = 120
extend-exclude = [".venv", "dist", "build"]

[tool.ruff.lint]
select = ["E","F","I","UP","B","SIM","PL","RUF","C90"]
ignore = [
  "E501",     # line too long
  "E402",     # imports not at top of file
  "PLC0415",  # import should be at top-level
  "PLR2004",  # magic values
  "PLR0911",  # too many return statements
  "PLR0912",  # too many branches
  "PLR0913",  # too many arguments
  "PLR0915",  # too many statements
  "C901",     # function too complex
  "RUF006",   # create_task return value not stored
  "PLW0603",  # global statement
  "PLW2901",  # loop variable overwritten
  "RUF001",   # en dash, etc.
  "UP046",    # derive from generic base class
]

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
