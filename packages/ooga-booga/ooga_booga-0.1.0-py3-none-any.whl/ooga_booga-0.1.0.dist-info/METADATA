Metadata-Version: 2.4
Name: ooga-booga
Version: 0.1.0
Summary: A fun encryption module that converts Python data into 'ooga booga' style words.
Author: Your Name
Author-email: Your Name <your.email@example.com>
License: MIT License
        
        Copyright (c) 2025 HARSHVARDHAN
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/yourusername/ooga-booga
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# Ooga Booga Encryption

A Python module that encrypts any Python data (including scripts) into a sequence of 'ooga', 'booga', 'oga', and 'boga' words and supports decryption and execution.

## Installation
```bash
pip install ooga-booga

#USAGE
from ooga_booga import encrypt, decrypt, encrypt_script_file, execute_encrypted_script

# Encrypt data
data = {"message": "Hello, world!"}
encrypted = encrypt(data)
print(encrypted)

# Decrypt data
decrypted = decrypt(encrypted)
print(decrypted)

# Encrypt a script file
encrypt_script_file("script.py", "encrypted.ooga")

# Execute an encrypted script
with open("encrypted.ooga", "r") as f:
    enc_str = f.read()
result = execute_encrypted_script(enc_str, safe_mode=True)
print(result)
