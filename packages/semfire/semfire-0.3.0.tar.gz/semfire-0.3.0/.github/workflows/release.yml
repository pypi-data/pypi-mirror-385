
name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v0.2.6 or 0.2.6)"
        required: true
        type: string
      push_tag:
        description: "Push the tag to origin (on manual run)"
        required: false
        default: true
        type: boolean
      create_github_release:
        description: "Create GitHub Release (on manual run)"
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests
        run: |
          pip install pytest
          pytest -q

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools-scm

      - name: Determine tag name (manual vs tag event)
        id: tagmeta
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            IN="${{ inputs.version }}"
            if [[ "$IN" == v* ]]; then TAG_NAME="$IN"; else TAG_NAME="v$IN"; fi
          else
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          fi
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Create local tag for build (manual only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git tag -f "${{ steps.tagmeta.outputs.tag_name }}"

      - name: Push tag to origin (manual + opted-in)
        if: github.event_name == 'workflow_dispatch' && inputs.push_tag == true
        run: |
          git push origin "${{ steps.tagmeta.outputs.tag_name }}"

      - name: Build distribution packages
        run: python -m build

      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    # If you gate with an environment in your repo, set it here.
    # environment: pypi
    permissions:
      id-token: write

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Allow skipping GH Release on manual runs if desired
    if: github.event_name != 'workflow_dispatch' || inputs.create_github_release == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Extract release notes
        id: extract-release-notes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            IN="${{ inputs.version }}"
            if [[ "$IN" == v* ]]; then TAG_NAME="$IN"; else TAG_NAME="v$IN"; fi
          else
            TAG_NAME=${GITHUB_REF#refs/tags/}
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          VERSION=${TAG_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.extract-release-notes.outputs.tag_name }}
          body: |
            ## What's Changed

            See the changelog between tags for details.

            ## Installation

            pip install semfire==${{ steps.extract-release-notes.outputs.version }}

            ## PyPI
            https://pypi.org/project/semfire/${{ steps.extract-release-notes.outputs.version }}/
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
