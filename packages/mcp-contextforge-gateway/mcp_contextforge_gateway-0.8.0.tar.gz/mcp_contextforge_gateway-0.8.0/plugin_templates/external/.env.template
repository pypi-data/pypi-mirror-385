#####################################
# Plugins Settings
#####################################

# Enable the plugin framework
PLUGINS_ENABLED=false

# Enable auto-completion for plugins CLI
PLUGINS_CLI_COMPLETION=false

# Set markup mode for plugins CLI
# Valid options:
#  rich: use rich markup
#  markdown: allow markdown in help strings
#  disabled: disable markup
# If unset (commented out), uses "rich" if rich is detected, otherwise disables it.
PLUGINS_CLI_MARKUP_MODE=rich

# Configuration path for plugin loader
PLUGINS_CONFIG=./resources/plugins/config.yaml

# Configuration path for chuck mcp runtime
CHUK_MCP_CONFIG_PATH=./resources/runtime/config.yaml

#####################################
# MCP External Plugin Server - mTLS Configuration
#####################################

# Enable SSL/TLS for external plugin MCP server
# Options: true, false (default)
# When true: Enables HTTPS and optionally mTLS for the plugin MCP server
MCP_SSL_ENABLED=false

# SSL/TLS Certificate Files
# Path to server private key (required when MCP_SSL_ENABLED=true)
# Generate with: openssl genrsa -out certs/mcp/server.key 2048
# MCP_SSL_KEYFILE=certs/mcp/server.key

# Path to server certificate (required when MCP_SSL_ENABLED=true)
# Generate with: openssl req -new -x509 -key certs/mcp/server.key -out certs/mcp/server.crt -days 365
# MCP_SSL_CERTFILE=certs/mcp/server.crt

# Optional password for encrypted private key
# MCP_SSL_KEYFILE_PASSWORD=

# mTLS (Mutual TLS) Configuration
# Client certificate verification mode:
#   0 (CERT_NONE): No client certificate required - standard TLS (default)
#   1 (CERT_OPTIONAL): Client certificate optional - validate if provided
#   2 (CERT_REQUIRED): Client certificate required - full mTLS
# Default: 0 (standard TLS without client verification)
MCP_SSL_CERT_REQS=0

# CA certificate bundle for verifying client certificates
# Required when MCP_SSL_CERT_REQS=1 or MCP_SSL_CERT_REQS=2
# Can be a single CA file or a bundle containing multiple CAs
# MCP_SSL_CA_CERTS=certs/mcp/ca.crt
