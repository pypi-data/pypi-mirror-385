# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import service_pb2 as device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2

GRPC_GENERATED_VERSION = '1.72.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in device/heat_pump/cloud/v1/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class HeatPumpCloudServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteDhwSchedule = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/DeleteDhwSchedule',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteDhwScheduleRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteDhwScheduleResponse.FromString,
                _registered_method=True)
        self.GetDhwSchedule = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/GetDhwSchedule',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetDhwScheduleRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetDhwScheduleResponse.FromString,
                _registered_method=True)
        self.GetScheduledAwayMode = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/GetScheduledAwayMode',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetScheduledAwayModeRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetScheduledAwayModeResponse.FromString,
                _registered_method=True)
        self.DeleteScheduledAwayMode = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/DeleteScheduledAwayMode',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteScheduledAwayModeRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteScheduledAwayModeResponse.FromString,
                _registered_method=True)
        self.ScheduleAwayMode = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/ScheduleAwayMode',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.ScheduleAwayModeRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.ScheduleAwayModeResponse.FromString,
                _registered_method=True)
        self.SetDhwSchedule = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/SetDhwSchedule',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetDhwScheduleRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetDhwScheduleResponse.FromString,
                _registered_method=True)
        self.GetLegionellaSchedule = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/GetLegionellaSchedule',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetLegionellaScheduleRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetLegionellaScheduleResponse.FromString,
                _registered_method=True)
        self.SetLegionellaSchedule = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/SetLegionellaSchedule',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetLegionellaScheduleRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetLegionellaScheduleResponse.FromString,
                _registered_method=True)
        self.DeleteLegionellaSchedule = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/DeleteLegionellaSchedule',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteLegionellaScheduleRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteLegionellaScheduleResponse.FromString,
                _registered_method=True)
        self.StreamCommandProgress = channel.unary_stream(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/StreamCommandProgress',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.StreamCommandProgressRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.StreamCommandProgressResponse.FromString,
                _registered_method=True)
        self.SendCommand = channel.unary_unary(
                '/device.heat_pump.cloud.v1.HeatPumpCloudService/SendCommand',
                request_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SendCommandRequest.SerializeToString,
                response_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SendCommandResponse.FromString,
                _registered_method=True)


class HeatPumpCloudServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteDhwSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDhwSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScheduledAwayMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteScheduledAwayMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScheduleAwayMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDhwSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLegionellaSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLegionellaSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLegionellaSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamCommandProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HeatPumpCloudServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteDhwSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDhwSchedule,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteDhwScheduleRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteDhwScheduleResponse.SerializeToString,
            ),
            'GetDhwSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDhwSchedule,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetDhwScheduleRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetDhwScheduleResponse.SerializeToString,
            ),
            'GetScheduledAwayMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScheduledAwayMode,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetScheduledAwayModeRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetScheduledAwayModeResponse.SerializeToString,
            ),
            'DeleteScheduledAwayMode': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteScheduledAwayMode,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteScheduledAwayModeRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteScheduledAwayModeResponse.SerializeToString,
            ),
            'ScheduleAwayMode': grpc.unary_unary_rpc_method_handler(
                    servicer.ScheduleAwayMode,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.ScheduleAwayModeRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.ScheduleAwayModeResponse.SerializeToString,
            ),
            'SetDhwSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDhwSchedule,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetDhwScheduleRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetDhwScheduleResponse.SerializeToString,
            ),
            'GetLegionellaSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLegionellaSchedule,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetLegionellaScheduleRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetLegionellaScheduleResponse.SerializeToString,
            ),
            'SetLegionellaSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLegionellaSchedule,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetLegionellaScheduleRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetLegionellaScheduleResponse.SerializeToString,
            ),
            'DeleteLegionellaSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLegionellaSchedule,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteLegionellaScheduleRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteLegionellaScheduleResponse.SerializeToString,
            ),
            'StreamCommandProgress': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamCommandProgress,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.StreamCommandProgressRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.StreamCommandProgressResponse.SerializeToString,
            ),
            'SendCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCommand,
                    request_deserializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SendCommandRequest.FromString,
                    response_serializer=device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SendCommandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'device.heat_pump.cloud.v1.HeatPumpCloudService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('device.heat_pump.cloud.v1.HeatPumpCloudService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class HeatPumpCloudService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteDhwSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/DeleteDhwSchedule',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteDhwScheduleRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteDhwScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDhwSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/GetDhwSchedule',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetDhwScheduleRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetDhwScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetScheduledAwayMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/GetScheduledAwayMode',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetScheduledAwayModeRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetScheduledAwayModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteScheduledAwayMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/DeleteScheduledAwayMode',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteScheduledAwayModeRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteScheduledAwayModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ScheduleAwayMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/ScheduleAwayMode',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.ScheduleAwayModeRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.ScheduleAwayModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetDhwSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/SetDhwSchedule',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetDhwScheduleRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetDhwScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLegionellaSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/GetLegionellaSchedule',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetLegionellaScheduleRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.GetLegionellaScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLegionellaSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/SetLegionellaSchedule',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetLegionellaScheduleRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SetLegionellaScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLegionellaSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/DeleteLegionellaSchedule',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteLegionellaScheduleRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.DeleteLegionellaScheduleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamCommandProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/StreamCommandProgress',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.StreamCommandProgressRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.StreamCommandProgressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/device.heat_pump.cloud.v1.HeatPumpCloudService/SendCommand',
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SendCommandRequest.SerializeToString,
            device_dot_heat__pump_dot_cloud_dot_v1_dot_service__pb2.SendCommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)