[build-system]
requires = [
  "setuptools>=77",
  "setuptools_scm[toml]>=7",
]
build-backend = "setuptools.build_meta"


[project]
name = "pigreads"
authors = [
  { name = "Desmond Kabus", email = "desmond@kabus.eu" },
]
description = "Python-integrated GPU-enabled reaction-diffusion solver"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: GPU",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: C",
  "Programming Language :: C++",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "numpy>=2.0",
  "pyyaml>=6.0",
  "pydantic>=2.10",
  "pyopencl",
]

[project.optional-dependencies]
plot = [
  "matplotlib>=3.10",
  "tqdm>=4.67",
]
cli = [
  "pigreads[plot]",
  "click>=8.1",
]
all = [
  "pigreads[cli]",
]
test = [
  "pigreads[all]",
  "pytest>=6",
  "pytest-cov>=3",
]
dev = [
  "jinja2>=3",
  "myokit>=1.37",
  "pigreads[test]",
]
docs = [
  "pigreads[all]",
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "sphinx-click>=6.0.0",
  "sphinx_lfs_content>=1.1",
  "furo>=2023.08.17",
]

[project.scripts]
pigreads = "pigreads.cli:main"

[project.urls]
Homepage = "https://gitlab.com/pigreads/pigreads"
Documentation = "https://pigreads.readthedocs.io"
"Bug Tracker" = "https://gitlab.com/pigreads/pigreads/-/issues"
Discussions = "https://gitlab.com/pigreads/pigreads/-/issues"
Changelog = "https://gitlab.com/pigreads/pigreads/-/releases"


[tool.setuptools_scm]
write_to = "src/pigreads/_version.py"
local_scheme = "no-local-version"


[tool.uv]
dev-dependencies = [
  "pigreads[test]",
]


[tool.cibuildwheel]
# Disable tests in cibuildwheel. (No OpenCL installed.)
# test-command = "pytest {project}/tests"
# test-extras = ["test"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["pigreads"]
report.exclude_also = [
  '\.\.\.',
  'if TYPE_CHECKING:',
]

[tool.mypy]
mypy_path = "src"
files = ["src", "tests"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "pigreads.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_unused_ignores = true


[tool.ruff]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["pigreads._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]
"examples/**" = ["T20"]


[tool.pylint]
py-version = "3.10"
ignore-paths = [".*/_version.py", ".*/pigreads/models.py", ".*/pigreads/kernels.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  # "fixme",
  "design",
]
messages_control.enable = [
  "useless-suppression",
]
