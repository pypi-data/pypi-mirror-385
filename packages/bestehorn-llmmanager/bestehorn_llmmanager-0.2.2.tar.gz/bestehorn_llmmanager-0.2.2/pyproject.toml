[build-system]
requires = ["setuptools>=61.0,<70.0", "setuptools-scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bestehorn-llmmanager"
dynamic = ["version"]
description = "A comprehensive Python library for managing AWS Bedrock Converse API interactions with multi-model support, intelligent retry logic, and parallel processing capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Markus Bestehorn", email = "markus.bestehorn@googlemail.com"}
]
maintainers = [
    {name = "Markus Bestehorn", email = "markus.bestehorn@googlemail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Distributed Computing",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Natural Language :: English",
    "Typing :: Typed",
]
keywords = ["aws", "bedrock", "llm", "ai", "machine-learning", "amazon", "claude", "anthropic"]
requires-python = ">=3.8,<4.0"
dependencies = [
    "boto3>=1.28.0",
    "botocore>=1.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "requests>=2.31.0",
]

[project.urls]
Homepage = "https://github.com/Bestehorn/LLMManager"
Documentation = "https://github.com/Bestehorn/LLMManager/blob/main/README.md"
Repository = "https://github.com/Bestehorn/LLMManager.git"
"Bug Tracker" = "https://github.com/Bestehorn/LLMManager/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.0",
    "pytest-html>=3.2.0",
    "pytest-xdist>=3.3.1",
    "coverage>=7.3.0",
    "responses>=0.23.3",
    "freezegun>=1.2.2",
    "factory-boy>=3.3.0",
    "ipykernel>=6.25.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["bestehorn_llmmanager*"]

[tool.setuptools.package-data]
bestehorn_llmmanager = ["py.typed"]

[tool.setuptools_scm]
# Automatically determines version from git tags
write_to = "src/bestehorn_llmmanager/_version.py"
version_scheme = "no-guess-dev"
local_scheme = "no-local-version"
fallback_version = "0.1.0"

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=bestehorn_llmmanager",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-report=json:coverage.json",
    "--cov-fail-under=80",
    "--html=test_results.html",
    "--self-contained-html",
    "-v",
    "--tb=short"
]
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "network: Tests requiring network access",
    "aws: Tests requiring AWS access",
    "aws_integration: Tests requiring real AWS Bedrock API access",
    "aws_low_cost: Low-cost tests (< $0.01 estimated)",
    "aws_medium_cost: Medium-cost tests ($0.01 - $0.10 estimated)",
    "aws_high_cost: High-cost tests (> $0.10 estimated)",
    "aws_fast: Fast integration tests (< 30 seconds)",
    "aws_slow: Slow integration tests (> 30 seconds)",
    "aws_bedrock_runtime: Tests using Bedrock Runtime API",
    "aws_profile_auth: Tests requiring AWS CLI profile authentication",
    "aws_single_region: Tests operating in a single AWS region",
    "aws_multi_region: Tests operating across multiple AWS regions",
    "aws_anthropic_models: Tests using Anthropic models",
    "aws_amazon_models: Tests using Amazon models",
    "aws_streaming: Tests using streaming responses",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Code formatting with Black
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/|src/bestehorn_llmmanager/_version\.py
'''

# Import sorting with isort
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "test"]
skip = ["src/bestehorn_llmmanager/_version.py"]

# Linting with flake8
[tool.flake8]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".tox",
    ".venv",
    "src/bestehorn_llmmanager/_version.py"
]

# Type checking with mypy
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "bs4.*",
    "requests.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "bestehorn_llmmanager.llm_manager"
# Suppress unreachable code warnings for defensive programming
# The validation methods have implicit returns that mypy thinks are unreachable
# but we keep them for robustness when Python's dynamic typing is considered
warn_unreachable = false

[[tool.mypy.overrides]]
module = "bestehorn_llmmanager.bedrock.parsers.cris_parser"
# Suppress unreachable code warnings for defensive programming
# Multiple early return guards are used for robustness in HTML parsing
warn_unreachable = false

[[tool.mypy.overrides]]
module = "bestehorn_llmmanager._version"
# Ignore generated version file
ignore_errors = true
