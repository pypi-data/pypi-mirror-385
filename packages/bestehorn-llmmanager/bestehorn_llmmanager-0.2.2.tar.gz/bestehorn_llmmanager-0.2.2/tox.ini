[tox]
envlist = py38,py39,py310,py311,py312,lint,type,docs
isolated_build = True

[testenv]
deps = 
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-mock>=3.11.1
    pytest-asyncio>=0.21.0
    responses>=0.23.3
    freezegun>=1.2.2
commands = 
    pytest test/bestehorn_llmmanager/ -v --cov=bestehorn_llmmanager --cov-report=term-missing -m "not integration" {posargs}

[testenv:integration]
deps = 
    {[testenv]deps}
commands = 
    pytest test/integration/ -v -m integration {posargs}

[testenv:lint]
deps = 
    black>=23.0.0
    flake8>=6.0.0
    isort>=5.12.0
commands = 
    black --check src/ test/
    flake8 src/ test/
    isort --check-only src/ test/

[testenv:type]
deps = 
    mypy>=1.5.0
    types-requests
commands = 
    mypy src/

[testenv:docs]
deps = 
    sphinx>=7.0.0
    sphinx-rtd-theme>=1.3.0
    sphinx-autodoc-typehints>=1.24.0
changedir = docs
commands = 
    sphinx-build -W -b html source build/html

[testenv:format]
deps = 
    black>=23.0.0
    isort>=5.12.0
commands = 
    black src/ test/
    isort src/ test/

[testenv:build]
deps = 
    build>=0.10.0
    twine>=4.0.2
    check-manifest>=0.49
commands = 
    check-manifest
    python -m build
    twine check dist/*

[flake8]
max-line-length = 100
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,
    .mypy_cache
ignore = 
    E203,
    W503,
    E501

[pytest]
minversion = 7.0
testpaths = test
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -ra
    --strict-markers
    --strict-config
markers = 
    unit: Unit tests
    integration: Integration tests that require AWS credentials
    slow: Slow tests that may timeout

[coverage:run]
source = src/bestehorn_llmmanager
omit = 
    */tests/*
    */test_*
    */__pycache__/*

[coverage:report]
exclude_lines = 
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\\bProtocol\\):
    @(abc\\.)?abstractmethod
