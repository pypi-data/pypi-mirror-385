[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "docling-jobkit"
version = "1.7.0"  # DO NOT EDIT, updated automatically
description = "Running a distributed job processing documents with Docling."
readme = "README.md"
license = "MIT"
authors = [
    {name="Michele Dolfi", email="dol@zurich.ibm.com"},
    {name="Viktor Kuropiatnyk", email="vku@zurich.ibm.com"},
    {name="Tiago Santana", email="Tiago.Santana@ibm.com"},
    {name="Cesar Berrospi Ramis", email="ceb@zurich.ibm.com"},
    {name="Panos Vagenas", email="pva@zurich.ibm.com"},
    {name="Christoph Auer", email="cau@zurich.ibm.com"},
    {name="Peter Staar", email="taa@zurich.ibm.com"},
]
maintainers = [
    {name="Michele Dolfi", email="dol@zurich.ibm.com"},
    {name="Cesar Berrospi Ramis", email="ceb@zurich.ibm.com"},
    {name="Panos Vagenas", email="pva@zurich.ibm.com"},
    {name="Christoph Auer", email="cau@zurich.ibm.com"},
    {name="Peter Staar", email="taa@zurich.ibm.com"},
]
classifiers = [
    "Operating System :: OS Independent", 
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "docling~=2.56",
    "pydantic~=2.10",
    "pydantic-settings~=2.4",
    "typer~=0.12",
    "boto3~=1.35",
    "pandas~=2.2",
    "fastparquet~=2024.11",
    "pyarrow~=19.0",
    "httpx~=0.28",
    "typer>=0.12.5",
]

[project.optional-dependencies]
vlm = [
    "docling[vlm]~=2.53",
]
# asr = [
#     "docling[asr]~=2.53",
# ]
kfp = [
    "kfp[kubernetes]>=2.10.0",
]
rq = [
    "rq~=2.4",
    "msgpack~=1.1",
]
ray = [
    "ray~=2.30",
]
gdrive = [
    "google-api-python-client>=2.183.0",
    "google-auth-oauthlib>=1.2.2",
]

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "mypy~=1.11",
    "pre-commit~=3.8",
    "pytest~=8.3",
    "pytest-asyncio~=0.24",
    "pytest-check~=2.4",
    "pytest-cov>=6.1.1",
    "python-semantic-release~=7.32",
    "boto3-stubs[s3]~=1.35",
    "ruff>=0.9.6",
    "types-pyyaml>=6.0.12.20250915",
]

[tool.uv]
package = true

[tool.hatch.build.targets.sdist]
include = ["docling_jobkit"]

[project.scripts]
docling-ray-job = "docling_jobkit.ray_job.main:main"
docling-jobkit-local = "docling_jobkit.cli.local:app"

[project.urls]
Homepage = "https://github.com/docling-project/docling-jobkit"
# Documentation = "https://ds4sd.github.io/docling"
Repository = "https://github.com/docling-project/docling-jobkit"
Issues = "https://github.com/docling-project/docling-jobkit/issues"
Changelog = "https://github.com/docling-project/docling-jobkit/blob/main/CHANGELOG.md"

[tool.ruff]
target-version = "py310"
line-length = 88
respect-gitignore = true

# extend-exclude = [
#     "tests",
# ]

[tool.ruff.format]
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    # "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "C9",  # mccabe
    # "D",  # flake8-docstrings
    "E",  # pycodestyle errors (default)
    "F",  # pyflakes (default)
    "I",  # isort
    "PD", # pandas-vet
    "PIE", # pie
    # "PTH", # pathlib
    "Q",  # flake8-quotes
    # "RET", # return
    "RUF", # Enable all ruff-specific checks
    # "SIM", # simplify
    "S307", # eval
    # "T20",  # (disallow print statements) keep debugging statements out of the codebase
    "W",  # pycodestyle warnings
    "ASYNC" # async
]

ignore = [
    "E501",  # Line too long, handled by ruff formatter
    "D107", # "Missing docstring in __init__",
    "F811", # "redefinition of the same function"
    "PL", # Pylint
    "RUF012", # Mutable Class Attributes
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    # Allow Pydantic's `@validator` decorator to trigger class method treatment.
    "pydantic.validator",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"tests/*.py" = ["ASYNC"] # Disable ASYNC check for tests

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.isort.sections]
"docling" = ["docling", "docling_core"]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "docling",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
pretty = true
# strict = true
no_implicit_optional = true
plugins = "pydantic.mypy"
python_version = "3.10"

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "easyocr.*",
    "tesserocr.*",
    "rapidocr_onnxruntime.*",
    "kfp.*",
    "kfp_server_api.*",
    "pandas.*",
    "msgpack.*",
    "mlx_vlm.*",
    "googleapiclient.*", 
    "google_auth_oauthlib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
minversion = "8.2"
testpaths = [
    "tests",
]
addopts = "-rA --color=yes --tb=short --maxfail=5"
markers = [
"asyncio",
]

[tool.semantic_release]
# for default values check:
# https://github.com/python-semantic-release/python-semantic-release/blob/v7.32.2/semantic_release/defaults.cfg

version_source = "tag_only"
branch = "main"

# configure types which should trigger minor and patch version bumps respectively
# (note that they must be a subset of the configured allowed types):
parser_angular_allowed_types = "build,chore,ci,docs,feat,fix,perf,style,refactor,test"
parser_angular_minor_types = "feat"
parser_angular_patch_types = "fix,perf"
