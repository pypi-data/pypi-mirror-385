[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "allgreen"
version = "0.11.0"
description = "Simple, beautiful health checks for Python applications"
authors = [{name = "Navin Pai", email = "lifeofnavin@gmail.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = []

[project.optional-dependencies]
flask = [
    "flask>=2.0.0",
    "jinja2>=3.0.0",
]
django = [
    "django>=3.2",
]
fastapi = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "jinja2>=3.0.0",  # For templates
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov",
    "ruff",
    "flask>=2.0.0",  # For testing
    "jinja2>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/navinpai/allgreen"
Repository = "https://github.com/navinpai/allgreen"
Issues = "https://github.com/navinpai/allgreen/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["allgreen*"]

[tool.setuptools.package-data]
allgreen = [
    "templates/**/*.html",
    "integrations/*.py",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["E501"]
"examples/**/*" = ["F821"]  # Config files have DSL functions injected at runtime

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]