[project]
name = "aioswitcher"
version = "6.0.3"
description = "PyPi module integrating with various Switcher devices"
readme = "README.md"
requires-python = ">=3.12.0,<4.0"
keywords = [ "home-automation", "smarthome", "switcher" ]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Home Automation",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed"
]
dependencies = [ "pycryptodome>=3.18.0,<4.0.0", "aiohttp>=3.10.3,<4.0.0" ]

  [project.license]
  text = "Apache-2.0"

  [[project.authors]]
  name = "Tomer Figenblat"
  email = "tomer@tomfi.info"

  [[project.maintainers]]
  name = "Shay Levy"

  [[project.maintainers]]
  name = "Yogev Bokobza"

  [project.urls]
  homepage = "https://pypi.org/project/aioswitcher/"
  repository = "https://github.com/tomerfi/aioswitcher"
  documentation = "https://aioswitcher.figenblat.com"

  [project.scripts]
  control_device = "scripts.control_device:main"
  discover_devices = "scripts.discover_devices:main"
  get_device_login_key = "scripts.get_device_login_key:main"
  validate_token = "scripts.validate_token:main"

[tool.poetry.group.dev.dependencies]
assertpy = "^1.1"
black = "^24.10.0"
flake8 = "^7.1.1"
flake8-docstrings = "^1.7.0"
Flake8-pyproject = "^1.2.3"
isort = "^5.13.2"
mypy = "^1.14.0"
poethepoet = "^0.32.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.0"
pytest-cov = "^6.0.0"
pytest-resource-path = "^1.3.0"
pytest-mockservers = "^0.6.0"
pytest-sugar = "^1.0.0"
pytz = "^2024.2"
time-machine = "^2.16.0"
yamllint = "^1.35.1"
freezegun = "^1.5.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-git-revision-date-plugin = "^0.3.2"
mkdocs-material = "^9.5.49"
mkdocstrings = "^0.27.0"
mkdocstrings-python = "^1.12.2"
poethepoet = "^0.32.1"

[tool.poe.tasks]
test = "poetry run pytest -v"
test_cov = "poetry run pytest -v --cov --cov-report=term"
test_rep = "poetry run pytest -v --cov --cov-report=xml:coverage.xml --junit-xml junit.xml"
test_pub = "poetry publish --build --repository testpypi"
lint = [ "black", "flake8", "isort", "mypy", "yamllint" ]
black = "poetry run black --check src/ docs/ scripts/"
black_fix = "poetry run black src/ docs/ scripts/"
flake8 = "poetry run flake8 src/ tests/ docs/ scripts/"
isort = "poetry run isort --check-only src/ tests/ docs/ scripts/"
isort_fix = "poetry run isort src/ tests/ docs/ scripts/"
mypy = "poetry run mypy src/ scripts/"
yamllint = "poetry run yamllint --format colored --strict ."
docs_build = "poetry run mkdocs build --strict"
docs_serve = "poetry run mkdocs serve"

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
strict_concatenate = true
strict_equality = true
strict = true

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 88
per-file-ignores = "tests/*.py:E501,D103"
count = true
statistics = true

[tool.coverage.run]
source = [ "aioswitcher" ]

[tool.coverage.report]
fail_under = 85
precision = 2
skip_covered = true

[build-system]
requires = [ "poetry-core>=2.0.0,<3.0.0" ]
build-backend = "poetry.core.masonry.api"
