{"version":3,"file":"InputContainer.js","sourceRoot":"","sources":["../../../src/widgets/CreateNotebookJobForm/InputContainer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,0BAA0B,CAAC;AAEhD,OAAO,EAAE,SAAS,EAAkB,MAAM,4BAA4B,CAAC;AACvE,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAC;AAEnD,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAU3C,MAAM,cAAc,GAAiD,CAAC,EACpE,SAAS,EACT,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,GAAG,UAAU,EACd,EAAE,EAAE;IACH,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,cAAc;QACnC,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB;YACtC,+BAAO,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;;gBAAI,SAAS;oBAAU;YACnE,WAAW,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,CACtC,oBAAC,OAAO,IAAC,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ;gBACrD,oBAAC,QAAQ,OAAG,CACJ,CACX,CACG;QACN,oBAAC,SAAS,OAAK,UAAU,EAAE,KAAK,EAAE,YAAY,CAAC,YAAY,CAAC,EAAE,UAAU,EAAE,YAAY,EACpF,UAAU,EAAE;gBACV,QAAQ,EAAE,UAAU,CAAC,QAAQ;gBAC7B,GAAG,UAAU,CAAC,UAAU;aACzB,GAAI,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,cAAc,EAAE,CAAC","sourcesContent":["import React from 'react';\nimport InfoIcon from '@mui/icons-material/Info';\n\nimport { TextInput, TextInputProps } from '../../components/textinput';\nimport { Tooltip } from '../../components/tooltip';\n\nimport * as Styles from './styles';\nimport { strHasLength } from '../../utils';\n\ninterface InputContainerProps extends TextInputProps {\n  labelInfo: string;\n  required?: boolean;\n  errorMessage?: string;\n  toolTipText?: string;\n  readOnly?: boolean;\n}\n\nconst InputContainer: React.FunctionComponent<InputContainerProps> = ({\n  labelInfo,\n  required,\n  toolTipText,\n  errorMessage,\n  ...inputProps\n}) => {\n  return (\n    <div className={Styles.InputContainer}>\n      <div className={Styles.tooltipsContainer}>\n        <label className={Styles.InputLabel(required)}> {labelInfo} </label>\n        {toolTipText && !inputProps.readOnly && (\n          <Tooltip title={toolTipText} className={Styles.tooltips}>\n            <InfoIcon />\n          </Tooltip>\n        )}\n      </div>\n      <TextInput {...inputProps} error={strHasLength(errorMessage)} helperText={errorMessage}\n        InputProps={{\n          readOnly: inputProps.readOnly,\n          ...inputProps.InputProps\n        }} />\n    </div>\n  );\n};\n\nexport { InputContainer };\n"]}