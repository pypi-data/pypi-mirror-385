{"version":3,"file":"VpcCheckbox.js","sourceRoot":"","sources":["../../../../../src/widgets/CreateNotebookJobForm/AdvancedOptions/VpcCheckbox/VpcCheckbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Scheduler } from '@jupyterlab/scheduler';\nimport Checkbox from '@mui/material/Checkbox';\nimport InfoIcon from '@mui/icons-material/Info';\n\nimport { Tooltip } from '../../../../components/tooltip/Tooltip';\nimport { FormState } from '../..';\nimport { i18nStrings } from '../../../../constants/common';\nimport { Link, LinkTarget } from '../../../../components/link';\n\nimport * as Styles from '../../../styles';\n\nconst vpcErrorStrings = i18nStrings.ScheduleNoteBook.MainPanel.ErrorMessages.VPCErrors;\nconst labelStrings = i18nStrings.ScheduleNoteBook.MainPanel.AdvancedOptions;\nconst tooltipsStrings = i18nStrings.ScheduleNoteBook.MainPanel.Tooltips;\n\nconst toolTipLink = 'https://docs.aws.amazon.com/sagemaker/latest/dg/create-notebook-auto-execution-advanced.html';\n\nexport interface VpcProps {\n  isChecked: boolean;\n  formState: FormState;\n  initialSecurityGroups: string[];\n  initialSubnets: string[];\n  availableSubnets: string[];\n  formErrors: Scheduler.ErrorsType;\n  setChecked: (checked: boolean) => void;\n  setFormState: (formState: FormState) => void;\n  setFormErrors: (formErrors: Scheduler.ErrorsType) => void;\n  ['data-testid']?: string;\n}\n\nconst tooltipArea = (\n  <div>\n    <span className={Styles.TooltipTextContainer}> {tooltipsStrings.VPCTooltip} </span>\n    <Link href={toolTipLink} target={LinkTarget.External}>\n      <p className={Styles.TooltipLink}>{i18nStrings.ScheduleNoteBook.MainPanel.Tooltips.LearnMore}</p>\n    </Link>\n  </div>\n);\n\nconst VpcCheckbox: React.FunctionComponent<VpcProps> = ({\n  isChecked,\n  formState,\n  formErrors,\n  initialSecurityGroups,\n  initialSubnets,\n  availableSubnets,\n  setFormErrors,\n  setChecked,\n  setFormState,\n  ...rest\n}) => {\n  return (\n    <div className={Styles.TooltipCheckBoxContainer}>\n      <Checkbox\n        name={'vpc-check-box'}\n        className={Styles.Checkbox}\n        color={'primary'}\n        checked={isChecked}\n        onChange={e => {\n          const checked = (e.target as HTMLInputElement).checked;\n          setChecked(checked);\n\n          if (checked) {\n            setFormState({\n              ...formState,\n              vpc_security_group_ids: initialSecurityGroups,\n              vpc_subnets: initialSubnets\n            });\n\n            if (initialSubnets.length === 0 && availableSubnets.length > 0) {\n              setFormErrors({\n                ...formErrors,\n                subnetError: `${vpcErrorStrings.RequiresPrivateSubnet} ${vpcErrorStrings.NoPrivateSubnetsInSageMakerDomain}. ${vpcErrorStrings.YouMayChooseOtherSubnets}`\n              });\n              return;\n            }\n\n            if (availableSubnets.length === 0) {\n              setFormErrors({\n                ...formErrors,\n                subnetError: `${vpcErrorStrings.RequiresPrivateSubnet} ${vpcErrorStrings.NoPrivateSubnetsInSageMakerDomain}`\n              });\n            }\n          } else {\n            setFormState({\n              ...formState,\n              vpc_security_group_ids: [],\n              vpc_subnets: []\n            });\n\n            setFormErrors({\n              ...formErrors,\n              subnetError: '',\n              securityGroupError: ''\n            });\n          }\n        }}\n        {...rest}\n      />\n      <label>{labelStrings.useVPC}</label>\n      <Tooltip\n        classes={{\n          popperInteractive: Styles.PopperInteractive,\n        }}\n        title={tooltipArea}\n      >\n        <InfoIcon fontSize=\"small\" />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport { VpcCheckbox };\n"]}