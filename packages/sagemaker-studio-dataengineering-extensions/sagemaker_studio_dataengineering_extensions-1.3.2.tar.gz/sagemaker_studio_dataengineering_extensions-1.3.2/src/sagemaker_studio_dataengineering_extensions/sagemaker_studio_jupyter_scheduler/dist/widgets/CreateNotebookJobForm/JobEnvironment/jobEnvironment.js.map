{"version":3,"file":"jobEnvironment.js","sourceRoot":"","sources":["../../../../src/widgets/CreateNotebookJobForm/JobEnvironment/jobEnvironment.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAE/C,OAAO,EAAmB,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACzE,OAAO,EAAE,mCAAmC,EAAE,MAAM,gBAAgB,CAAC;AAwBrE,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,aAAyC;IAClF,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,sDAAsD,CAAC,CAAC;IACvG,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;IAE5E,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAO,EAAE,CAAC;KACX;SAAM;QACL,OAAO,mCAAmC,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;KACnE;AACH,CAAC","sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { Scheduler } from '@jupyterlab/scheduler';\nimport { ContentsManager, ServerConnection } from '@jupyterlab/services';\nimport { parseListSageMakerImagesAPIResponse } from '../../../utils';\nimport { FormState } from '../CreateNotebookJobform';\n\nexport interface IAutoDetectedConfig {\n  name: string;\n  label: string;\n  description: string;\n  value: any;\n}\n\nexport type JobEnvironmentProps = Scheduler.IAdvancedOptionsProps & {\n  isDisabled: boolean;\n  executionEnvironments: {\n    environment_configs: IAutoDetectedConfig[] | null;\n    auto_detected_config: IAutoDetectedConfig[];\n  };\n  formState: FormState;\n  formErrors: Scheduler.ErrorsType;\n  setFormState: React.Dispatch<React.SetStateAction<FormState>>;\n  setFormErrors: (errors: Scheduler.ErrorsType) => void;\n  requestClient: ServerConnection.ISettings;\n  contentsManager: ContentsManager;\n}\n\nexport async function fetchKernelAndImages(requestClient: ServerConnection.ISettings) {\n  const url = URLExt.join(requestClient.baseUrl, '/sagemaker_studio_jupyter_scheduler/sagemaker_images');\n  const response = await ServerConnection.makeRequest(url, {}, requestClient);\n\n  if (response.status !== 200) {\n    return {};\n  } else {\n    return parseListSageMakerImagesAPIResponse(await response.json());\n  }\n}\n"]}