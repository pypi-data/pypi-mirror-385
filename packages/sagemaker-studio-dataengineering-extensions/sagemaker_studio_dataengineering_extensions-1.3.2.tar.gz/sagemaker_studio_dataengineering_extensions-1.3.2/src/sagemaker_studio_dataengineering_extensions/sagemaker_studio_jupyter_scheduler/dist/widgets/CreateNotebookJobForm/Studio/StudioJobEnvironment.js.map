{"version":3,"file":"StudioJobEnvironment.js","sourceRoot":"","sources":["../../../../src/widgets/CreateNotebookJobForm/Studio/StudioJobEnvironment.tsx"],"names":[],"mappings":"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","sourcesContent":["import Alert from '@mui/material/Alert';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { DropdownItem } from '../../../components/selectinput';\nimport { i18nStrings } from '../../../constants';\nimport { ParsedSpecName } from '../../../types';\nimport { JobEnvironmentProps } from '../JobEnvironment';\nimport { SelectInputContainer } from '../SelectInputContainer';\nimport * as sharedStyles from '../styles';\nimport { StudioImageSelectorOption } from './StudioImageSelectorOption';\nimport { fetchKernelAndImagesForStudio } from './studioApi';\nimport {\n  ImageGroup,\n  ImageMapValue,\n  getImageOptionsFromMap,\n  getImagesFromMap,\n  getInitialImageValueForStudio,\n  getPreSelectedNotebookKernelSpec,\n} from './studioHelpers';\nimport * as styles from './studioStyles';\nimport { usePluginEnvironment } from '../../../utils/PluginEnvironmentProvider';\n\nconst tooltipsStrings = i18nStrings.ScheduleNoteBook.MainPanel.Tooltips;\nconst studioTooltipsStrings = i18nStrings.ScheduleNoteBook.MainPanel.StudioTooltips;\n\n\nconst StudioJobEnvironment: React.FunctionComponent<JobEnvironmentProps> = ({\n  isDisabled,\n  formState,\n  formErrors,\n  setFormState,\n  setFormErrors,\n  model,\n  jobsView,\n  requestClient,\n  contentsManager,\n}) => {\n  const { pluginEnvironment } = usePluginEnvironment();\n  const [selectedKernel, setSelectedKernel] = useState<ParsedSpecName>({ arnEnvironment: null, kernel: null, version: null });\n  const [imageMap, setImageMap] = useState<Record<string, ImageMapValue>>({});\n\n  useEffect(() => {\n    fetchKernelAndImagesForStudio(requestClient).then(async (kernelSpecs) => {\n      if (kernelSpecs) {\n        setImageMap(getImagesFromMap(kernelSpecs));\n      }\n\n      const preSelectedSpec = await getPreSelectedNotebookKernelSpec(model.inputFile, contentsManager);\n      const doesPreselectedSpecExist = preSelectedSpec in (kernelSpecs?.kernelspecs ?? {});\n      const preSelectedNotebookKernelSpec = (doesPreselectedSpecExist ? preSelectedSpec : '');\n\n      const defaultKernelSelectorValue = getInitialImageValueForStudio(\n        model.runtimeEnvironmentParameters,\n        preSelectedNotebookKernelSpec,\n        jobsView\n      );\n      setSelectedKernel(defaultKernelSelectorValue);\n\n      setFormState(formState => ({\n        ...formState,\n        sm_kernel: defaultKernelSelectorValue.kernel || '',\n        sm_image: defaultKernelSelectorValue.arnEnvironment || '',\n      }));\n    });\n  }, []);\n\n  const smImages = getImageOptionsFromMap(imageMap, ImageGroup.Sagemaker, false).options ?? [];\n  const customImages = getImageOptionsFromMap(imageMap, ImageGroup.Custom).options ?? [];\n  const imageDropdownItems: DropdownItem[] = [...smImages, ...customImages];\n\n  const kernelDropdownItems: DropdownItem[] = useMemo(() => {\n    if (!selectedKernel.arnEnvironment) {\n      return [];\n    }\n\n    return imageMap[selectedKernel.arnEnvironment]?.kernelOptions || [];\n  }, [imageMap, selectedKernel]);\n\n  const handleImageSelection = (\n    item: DropdownItem | string,\n    subOption?: DropdownItem\n  ) => {\n    if (!item || typeof item === 'string') {\n      return;\n    }\n\n    const kernelItems: DropdownItem[] =\n      item.optionMetadata?.kernelOptions || [];\n    const kernel: string | null =\n      kernelItems.length > 0 ? kernelItems[0].value : null;\n    const version: string | null = subOption ? subOption.value : null;\n\n    setFormState({\n      ...formState,\n      //Property sm_image can be either of the form 'arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:image/custom-image-name'\n      // or 'arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:image-version/custom-image-name/2'\n      sm_image: item.value + (version ? \"/\" + version : ''),\n      sm_kernel: kernel ?? ''\n    });\n    setSelectedKernel({ arnEnvironment: item.value, kernel, version });\n  };\n\n  const handleKernelSelection = (item: DropdownItem | string) => {\n    if (!item || typeof item === 'string') {\n      return;\n    }\n\n    if (item) {\n      setFormState({ ...formState, sm_kernel: item.value });\n      setSelectedKernel({ ...selectedKernel, kernel: item.value });\n    }\n  };\n\n  const isError = !!formErrors.jobEnvironmentError;\n  const errorMessageWithIcon = (\n    <div className={sharedStyles.ErrorIconStyled}>\n      <Alert severity=\"error\">{formErrors.jobEnvironmentError}</Alert>\n    </div>\n  );\n\n  useEffect(() => {\n    if (selectedKernel.arnEnvironment && selectedKernel.kernel) {\n      if (formErrors.jobEnvironmentError) {\n        setFormErrors({\n          ...formErrors,\n          jobEnvironmentError: ''\n        });\n      }\n    }\n  }, [selectedKernel.arnEnvironment, selectedKernel.kernel]);\n\n  if (Object.keys(imageMap).length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.JobEnvironmentContainer}>\n      <div className={styles.KernelImageSelectorContainer}>\n        <div className={styles.ImageContainer}>\n          <SelectInputContainer\n            data-testid=\"sm_image_dropdown\"\n            options={imageDropdownItems}\n            value={selectedKernel.arnEnvironment}\n            label={i18nStrings.ImageSelector.label}\n            customListItemRender={StudioImageSelectorOption}\n            onChange={handleImageSelection}\n            readOnly={isDisabled}\n            groupBy={(item) => item.group ?? ''}\n            toolTipText={pluginEnvironment.isStudio ? studioTooltipsStrings.ImageTooltipText : tooltipsStrings.ImageTooltipText}\n          />\n          {formErrors.jobEnvironmentError && (\n            <div className={sharedStyles.ValidationMessageStyled}>\n              {isError && errorMessageWithIcon}\n            </div>\n          )}\n        </div>\n        <SelectInputContainer\n          options={kernelDropdownItems}\n          value={selectedKernel.kernel}\n          label={i18nStrings.KernelSelector.label}\n          onChange={handleKernelSelection}\n          readOnly={isDisabled}\n          toolTipText={pluginEnvironment.isStudio ? studioTooltipsStrings.KernelTooltipText : tooltipsStrings.KernelTooltipText}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { StudioJobEnvironment };\n"]}