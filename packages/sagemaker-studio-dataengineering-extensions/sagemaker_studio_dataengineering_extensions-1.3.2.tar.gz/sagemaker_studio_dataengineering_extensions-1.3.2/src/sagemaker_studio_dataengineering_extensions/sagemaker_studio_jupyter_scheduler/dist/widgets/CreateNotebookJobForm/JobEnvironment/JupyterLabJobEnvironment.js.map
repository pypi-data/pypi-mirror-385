{"version":3,"file":"JupyterLabJobEnvironment.js","sourceRoot":"","sources":["../../../../src/widgets/CreateNotebookJobForm/JobEnvironment/JupyterLabJobEnvironment.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { i18nStrings } from '../../../constants';\nimport * as Styles from '../../styles';\nimport { JobEnvironmentProps } from './jobEnvironment';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { DropdownItem } from '../../../components/selectinput';\nimport { SelectInputContainer } from '../SelectInputContainer';\nimport { getPreSelectedNotebookKernelSpec } from '../Studio/studioHelpers';\n\nconst tooltipsStrings = i18nStrings.ScheduleNoteBook.MainPanel.Tooltips;\n\nexport const JupyterLabJobEnvironment: React.FC<JobEnvironmentProps> = ({\n  setFormState,\n  formState,\n  isDisabled,\n  formErrors,\n  setFormErrors,\n  contentsManager,\n  model,\n}) => {\n  const [imagesOptions, setImagesOptions] = useState<DropdownItem[]>([]);\n  const [kernelOptions, setKernelOptions] = useState<DropdownItem[]>([]);\n\n  const fetchImages = async () => {\n    const settings = ServerConnection.makeSettings();\n    const url = URLExt.join(settings.baseUrl, '/sagemaker_studio_jupyter_scheduler/sagemaker_images');\n    const response = await ServerConnection.makeRequest(url, {}, settings);\n\n    if (response.status == 200) {\n      const responseJson = await response.json();\n      return responseJson.map((imageMetadata: any) => ({\n        label: imageMetadata.image_display_name,\n        value: imageMetadata.image_arn,\n      }));\n    }\n    return [];\n  };\n\n  const fetchKernelNames = async () => {\n    const settings = ServerConnection.makeSettings();\n    const url = URLExt.join(settings.baseUrl, '/api/kernelspecs');\n    const response = await ServerConnection.makeRequest(url, {}, settings);\n    let defaultKernelName = null;\n    const kernelNames: string[] = [];\n    const kernelOptions: DropdownItem[] = [];\n\n    if (response.status === 200) {\n      const kernelSpecsResponse = await response.json();\n      defaultKernelName = kernelSpecsResponse.default;\n      if (kernelSpecsResponse.kernelspecs) {\n        Object.values(kernelSpecsResponse.kernelspecs).forEach((kernelSpec: any) => {\n          if (kernelSpec) {\n            kernelNames.push(kernelSpec.name);\n            let kernelDisplayName = kernelSpec.name;\n            if (kernelSpec.spec) {\n              kernelDisplayName = kernelSpec.spec.display_name;\n            }\n            kernelOptions.push({ label: kernelDisplayName, value: kernelSpec.name });\n          }\n        });\n      }\n    }\n\n    return { defaultKernelName, kernelNames, kernelOptions };\n  }\n\n  useEffect(() => {\n    Promise.all([\n      getPreSelectedNotebookKernelSpec(model.inputFile, contentsManager),\n      fetchImages(),\n      fetchKernelNames()\n    ]).then((values) => {\n      const preSelectedNotebookKernelName = values[0];\n      const imagesOptions = values[1];\n      const kernelDetails = values[2];\n      let defaultImageValue: string;\n      let defaultKernelValue: string;\n\n      if (imagesOptions && imagesOptions.length > 0) {\n        setImagesOptions(imagesOptions);\n      }\n\n      if (model.runtimeEnvironmentParameters && model.runtimeEnvironmentParameters.sm_image) {\n        defaultImageValue = model.runtimeEnvironmentParameters.sm_image as string;\n      } else if (imagesOptions && imagesOptions.length > 0) {\n        defaultImageValue = imagesOptions[0].value;\n      }\n      \n      if (kernelDetails && kernelDetails.kernelOptions && kernelDetails.kernelOptions.length > 0) {\n        setKernelOptions(kernelDetails.kernelOptions);\n      }\n\n      if (model.runtimeEnvironmentParameters && model.runtimeEnvironmentParameters.sm_kernel) {\n        defaultKernelValue = model.runtimeEnvironmentParameters.sm_kernel as string;\n      } else {\n        if (kernelDetails.kernelNames.indexOf(preSelectedNotebookKernelName) >= 0) {\n          defaultKernelValue = preSelectedNotebookKernelName;\n        } else {\n          defaultKernelValue = kernelDetails.defaultKernelName || ''; \n        }\n      }\n\n      setFormState(state => ({\n        ...state,\n        sm_image: defaultImageValue ?? '',\n        sm_kernel: defaultKernelValue ?? '',\n      }));\n    })\n    .catch((error) => console.error(error));\n  }, []);\n\n  const handleImageSelection = (\n    item: DropdownItem | string,\n  ) => {\n    if (!item || typeof item === 'string') {\n      return;\n    }\n\n    setFormState({\n      ...formState,\n      sm_image: item.value,\n    });\n  };\n\n  const handleKernelSelection = (\n    item: DropdownItem | string,\n  ) => {\n    if (!item || typeof item === 'string') {\n      return;\n    }\n\n    setFormState({\n      ...formState,\n      sm_kernel: item.value,\n    });\n  };\n\n  return (<div className={Styles.WidgetFieldsContainer}>\n    <SelectInputContainer\n      data-testid=\"sm_image_dropdown\"\n      options={imagesOptions}\n      value={formState.sm_image}\n      label={i18nStrings.ImageSelector.label}\n      onChange={handleImageSelection}\n      readOnly={isDisabled}\n      toolTipText={tooltipsStrings.ImageTooltipText}\n      required\n    />\n\n    <SelectInputContainer\n      data-testid=\"sm_kernel_dropdown\"\n      options={kernelOptions}\n      value={formState.sm_kernel}\n      label={i18nStrings.KernelSelector.label}\n      onChange={handleKernelSelection}\n      readOnly={isDisabled}\n      toolTipText={tooltipsStrings.KernelTooltipText}\n      required\n    />\n  </div>)\n}\n"]}