{"version":3,"file":"TextInput.js","sourceRoot":"","sources":["../../../src/components/textinput/TextInput.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,IAAI,YAAY,EAAuC,MAAM,eAAe,CAAC;AAC/F,OAAO,EAAE,EAAE,EAAE,MAAM,cAAc,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAC5E,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAQxC,MAAM,SAAS,GAA4C,CAAC,EAC1D,OAAO,EACP,SAAS,EACT,UAAU,EACV,mBAAmB,EACnB,IAAI,GAAG,aAAa,CAAC,MAAM,EAC3B,OAAO,EACP,GAAG,sBAAsB,EAC1B,EAAE,EAAE;;IACH,MAAM,UAAU,GAAG,EAAE,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,CAAC;IACjE,OAAO,CACL,oBAAC,YAAY,mBACE,YAAY,EACzB,OAAO,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,OAAO,EAAE,EACzC,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,WAAW,EACjB,UAAU,EAAE;YACV,GAAG,UAAU;YACb,OAAO,EAAE;gBACP,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,0CAAE,IAAI,CAAC;gBACtD,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,0CAAE,KAAK,CAAC;aACzD;SACF;QACD,qBAAqB;QACrB,wBAAwB;QACxB,oFAAoF;QACpF,kBAAkB;QAClB,KAAK;QACL,mBAAmB,EAAE;YACnB,GAAG,mBAAmB;YACtB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,oBAAoB,EAAE,EAAE,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,OAAO,0CAAE,IAAI,CAAC,EAAE;SAClF,KACG,sBAAsB,GAC1B,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,SAAS,EAAE,CAAC","sourcesContent":["import React from 'react';\nimport { TextField as MuiTextField, TextFieldProps as MuiTextFieldProps } from '@mui/material';\nimport { cx } from '@emotion/css';\nimport { TextInputBase, inputStyles, formHelperTextStyles } from './styles';\nimport { TextInputSize } from './types';\nimport { InputProps } from '@mui/material/Input';\n\nexport interface TextInputProps extends Omit<MuiTextFieldProps, 'children' | 'color' | 'size' | 'InputProps'> {\n  readonly size?: TextInputSize;\n  readonly InputProps?: Partial<InputProps>;\n}\n\nconst TextInput: React.FunctionComponent<TextInputProps> = ({\n  classes,\n  className,\n  InputProps,\n  FormHelperTextProps,\n  size = TextInputSize.Medium,\n  variant,\n  ...materialTextFieldProps\n}) => {\n  const classNames = cx(TextInputBase(), className, classes?.root);\n  return (\n    <MuiTextField\n      data-testid={'inputField'}\n      classes={{ root: classNames, ...classes }}\n      variant={variant}\n      role={'textField'}\n      InputProps={{\n        ...InputProps,\n        classes: {\n          root: cx(inputStyles(size), InputProps?.classes?.root),\n          input: cx(inputStyles(size), InputProps?.classes?.input),\n        },\n      }}\n      // InputLabelProps={{\n      //   ...InputLabelProps,\n      //   classes: { root: cx(inputLabelStyles().root, InputLabelProps?.classes?.root) },\n      //   shrink: true,\n      // }}\n      FormHelperTextProps={{\n        ...FormHelperTextProps,\n        classes: { root: cx(formHelperTextStyles(), FormHelperTextProps?.classes?.root) },\n      }}\n      {...materialTextFieldProps}\n    />\n  );\n};\n\nexport { TextInput };\n"]}