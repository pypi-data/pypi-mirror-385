{"version":3,"file":"images.js","sourceRoot":"","sources":["../../src/utils/images.ts"],"names":[],"mappings":"AAUA,MAAM,mCAAmC,GAAG,CAAC,WAAuC,EAAE,EAAE;IACtF,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1B,MAAM,uBAAuB,GAAG,CAAC,WAAgB,EAAE,EAAE;YACnD,IAAI,WAAW,EAAE;gBACf,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,UAAe,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAC/G;YACD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QACF,OAAO,MAAM,CAAC,WAAW,CACvB,WAAW,CAAC,GAAG,CAAC,CAAC,aAAkB,EAAE,EAAE,CAAC;YACtC,aAAa,CAAC,SAAS;YACvB;gBACE,cAAc,EAAE,aAAa,CAAC,SAAS;gBACvC,WAAW,EAAE,aAAa,CAAC,kBAAkB;gBAC7C,WAAW,EAAE,aAAa,CAAC,iBAAiB;gBAC5C,aAAa,EAAE,uBAAuB,CAAC,aAAa,CAAC,WAAW,CAAC;aAClE;SACF,CAAC,CACH,CAAC;KACH;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,SAAS,sBAAsB,CAAC,SAAoB;IAClD,MAAM,YAAY,GAAmB,EAAE,CAAC;IACxC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC1C,YAAY,CAAC,IAAI,CAAC;YAChB,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,WAAW;YACtC,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,cAAc;YACzC,cAAc,EAAE;gBACd,WAAW,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,WAAW;aAC7C;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,OAAO,EAAE,mCAAmC,EAAE,sBAAsB,EAAE,CAAC","sourcesContent":["import { DropdownItem } from '../components/selectinput';\nimport { ImagesMap } from '../types';\n\ntype SageMakerImagesApiResponse = {\n  image_arn: string;\n  image_display_name: string;\n  image_description?: string;\n  kernelspecs?: { DisplayName: string; Name: string }[];\n}[];\n\nconst parseListSageMakerImagesAPIResponse = (apiResponse: SageMakerImagesApiResponse) => {\n  if (apiResponse.length > 0) {\n    const mapKernelSpecsToOptions = (kernelspecs: any) => {\n      if (kernelspecs) {\n        return kernelspecs.map((kernelspec: any) => ({ displayName: kernelspec.DisplayName, name: kernelspec.Name }));\n      }\n      return [];\n    };\n    return Object.fromEntries(\n      apiResponse.map((imageMetadata: any) => [\n        imageMetadata.image_arn,\n        {\n          arnEnvironment: imageMetadata.image_arn,\n          displayName: imageMetadata.image_display_name,\n          description: imageMetadata.image_description,\n          kernelOptions: mapKernelSpecsToOptions(imageMetadata.kernelspecs),\n        },\n      ]),\n    );\n  }\n  return {};\n};\n\nfunction getImageOptionsFromMap(imagesMap: ImagesMap): DropdownItem[] {\n  const imageOptions: DropdownItem[] = [];\n  Object.keys(imagesMap).forEach((imageArn) => {\n    imageOptions.push({\n      label: imagesMap[imageArn].displayName,\n      value: imagesMap[imageArn].arnEnvironment,\n      optionMetadata: {\n        description: imagesMap[imageArn].description,\n      },\n    });\n  });\n  return imageOptions;\n}\n\nexport { parseListSageMakerImagesAPIResponse, getImageOptionsFromMap };\n"]}