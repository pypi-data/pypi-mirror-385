{"version":3,"file":"ScheduleNotebookPlugin.js","sourceRoot":"","sources":["../../src/plugins/ScheduleNotebookPlugin.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AACjE,OAAO,EAAE,yBAAyB,EAAE,MAAM,oCAAoC,CAAC;AAC/E,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAGrD,2GAA2G;AAC3G,iHAAiH;AACjH,MAAM,sBAAsB,GAAsD;IAChF,EAAE,EAAE,SAAS,CAAC,eAAe;IAC7B,SAAS,EAAE,KAAK;IAChB,QAAQ,EAAE,CAAC,gBAAgB,CAAC;IAC5B,QAAQ,EAAE,SAAS,CAAC,gBAAgB;IACpC,QAAQ,EAAE,CAAC,GAAoB,EAAE,eAAiC,EAAE,EAAE;QACpE,OAAO,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,aAAa,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC;YACxD,MAAM,oBAAoB,GAAG,IAAI,eAAe,EAAE,CAAC;YAGnD,OAAO;YACL,qCAAqC;YACrC,oBAAC,oBAAoB,IAAC,WAAW;gBAC/B,oBAAC,yBAAyB,IAAC,GAAG,EAAE,GAAG;oBACjC,oBAAC,iBAAiB,IAChB,aAAa,EAAE,aAAa,EAC5B,eAAe,EAAE,oBAAoB,EACrC,eAAe,EAAE,eAAe,EAChC,QAAQ,EAAE,GAAG,CAAC,QAAQ,KAClB,KAAK,GACT,CACwB,CACN,CACzB,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,OAAO,EAAE,sBAAsB,EAAE,CAAC","sourcesContent":["import React from 'react';\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { Scheduler } from '@jupyterlab/scheduler';\nimport { pluginIds } from '../constants';\nimport { CreateNotebookJob } from '../widgets/CreateNotebookJob';\nimport { PluginEnvironmentProvider } from '../utils/PluginEnvironmentProvider';\nimport { ContentsManager } from '@jupyterlab/services';\nimport { StyledEngineProvider } from '@mui/material';\n\n\n// This should only load up when the open source @jupyterlab/scheduler extension is installed and activated\n// autoStart is set to false as this should only load when a plugin requests the Scheduler.IAdvancedOptions token\nconst ScheduleNotebookPlugin: JupyterFrontEndPlugin<Scheduler.IAdvancedOptions> = {\n  id: pluginIds.SchedulerPlugin,\n  autoStart: false,\n  requires: [ISettingRegistry],\n  provides: Scheduler.IAdvancedOptions,\n  activate: (app: JupyterFrontEnd, settingRegistry: ISettingRegistry) => {\n    return (props) => {\n      const requestClient = app.serviceManager.serverSettings;\n      const contentManagerClient = new ContentsManager();\n\n\n      return (\n        // {/* Inject Emotion before JSS */ }\n        <StyledEngineProvider injectFirst>\n          <PluginEnvironmentProvider app={app}>\n            <CreateNotebookJob\n              requestClient={requestClient}\n              contentsManager={contentManagerClient}\n              settingRegistry={settingRegistry}\n              commands={app.commands}\n              {...props}\n            />\n          </PluginEnvironmentProvider>\n        </StyledEngineProvider >\n      );\n    };\n  },\n};\n\nexport { ScheduleNotebookPlugin };\n"]}