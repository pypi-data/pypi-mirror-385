{"version":3,"file":"EnvironmentVariable.js","sourceRoot":"","sources":["../../../../../src/widgets/CreateNotebookJobForm/AdvancedOptions/EnvironmentVariables/EnvironmentVariable.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Scheduler } from '@jupyterlab/scheduler';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\n\nimport { i18nStrings } from '../../../../constants/common';\nimport { InputContainer } from '../../InputContainer';\n\nimport * as Styles from './styles';\n\nconst KEY_REGEX = new RegExp('[a-zA-Z_][a-zA-Z0-9_]*');\nconst VALUE_REGEX = new RegExp('[\\\\S\\\\s]*');\n\nconst errorMessageStrings = i18nStrings.ScheduleNoteBook.MainPanel.ErrorMessages.AdvancedOptions;\nconst widgetStrings = i18nStrings.ScheduleNoteBook.MainPanel.AdvancedOptions;\n\ninterface IEnvironmentVariable {\n  key: string;\n  value: string;\n}\n\ninterface Props {\n  isDisabled: boolean;\n  index: number;\n  environmentParameters: IEnvironmentVariable[];\n  setEnvironmentParameters: (environmentParameters: IEnvironmentVariable[]) => void;\n  formErrors: Scheduler.ErrorsType;\n  setFormErrors: (errors: Scheduler.ErrorsType) => void;\n}\n\nconst EnvironmentVariable: React.FunctionComponent<Props> = ({\n  isDisabled,\n  environmentParameters,\n  setEnvironmentParameters,\n  index,\n  formErrors,\n  setFormErrors,\n}) => {\n  const currentEnvironmentVariable = environmentParameters[index];\n\n  const deleteKeyValue = (index: number) => {\n    const newArray = [...environmentParameters];\n    newArray.splice(index, 1);\n\n    setEnvironmentParameters(newArray);\n    setFormErrors({\n      ...formErrors,\n      environmentVariablesError: '',\n    });\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.currentTarget.name;\n    const value = e.target.value;\n    const [field, i] = name.split('-') as [string, number];\n\n    const updateItem =\n      field === 'envKey'\n        ? { key: value, value: environmentParameters[i].value }\n        : { key: environmentParameters[i].key, value: value };\n\n    const newArray = [...environmentParameters];\n    newArray.splice(i, 1, updateItem);\n\n    setEnvironmentParameters(newArray);\n  };\n\n  const handleBlur = () => {\n    const { key, value } = currentEnvironmentVariable;\n\n    if (key.length < 1 || value.length < 1) {\n      setFormErrors({\n        ...formErrors,\n        environmentVariablesError: errorMessageStrings.EnvironmentVariableEmptyError,\n      });\n      return;\n    }\n\n    if (key.length > 512 || value.length > 512) {\n      setFormErrors({\n        ...formErrors,\n        environmentVariablesError: errorMessageStrings.EnvironmentVariableLengthError,\n      });\n      return;\n    }\n\n    if (!KEY_REGEX.test(key) || !VALUE_REGEX.test(value)) {\n      setFormErrors({\n        ...formErrors,\n        environmentVariablesError: errorMessageStrings.EnvironmentVariableFormatError,\n      });\n      return;\n    }\n\n    setFormErrors({\n      ...formErrors,\n      environmentVariablesError: '',\n    });\n  };\n\n  return (\n    <div className={Styles.EnvironmentVariablesContainer}>\n      <InputContainer\n        className={Styles.EnvironmentVariablesInput}\n        readOnly={isDisabled}\n        name={`envKey-${index}`}\n        labelInfo={widgetStrings.Key}\n        value={environmentParameters[index].key}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n      <InputContainer\n        className={Styles.EnvironmentVariablesInput}\n        readOnly={isDisabled}\n        name={`envValue-${index}`}\n        labelInfo={widgetStrings.Value}\n        value={environmentParameters[index].value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n      <div>\n        {!isDisabled && (\n          <IconButton\n            onClick={() => {\n              deleteKeyValue(index);\n              setFormErrors({\n                ...formErrors,\n                environmentVariablesError: '',\n              });\n            }}\n            size=\"large\">\n            <CloseIcon />\n          </IconButton>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport { EnvironmentVariable, IEnvironmentVariable };\n"]}