{"version":3,"file":"DefaultJobEnvironment.js","sourceRoot":"","sources":["../../../../src/widgets/CreateNotebookJobForm/JobEnvironment/DefaultJobEnvironment.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport { i18nStrings } from '../../../constants';\nimport * as Styles from '../../styles';\nimport { validateImage, validateKernel } from '../AdvancedOptions/validationHelpers';\nimport { InputContainer } from '../InputContainer';\nimport { getInitialImageValue } from '../initialValueHelpers';\nimport { JobEnvironmentProps } from './jobEnvironment';\n\nconst widgetStrings = i18nStrings.ScheduleNoteBook.MainPanel.AdvancedOptions;\nconst tooltipsStrings = i18nStrings.ScheduleNoteBook.MainPanel.Tooltips;\n\nexport const DefaultJobEnvironment: React.FC<JobEnvironmentProps> = ({\n  setFormState,\n  formState,\n  isDisabled,\n  formErrors,\n  setFormErrors,\n  model,\n  executionEnvironments,\n}) => {\n  const defaultKernelSelectorValue = useMemo(() => {\n    return getInitialImageValue(model.runtimeEnvironmentParameters, executionEnvironments?.auto_detected_config);\n  }, []);\n\n  useEffect(() => {\n    setFormState({\n      ...formState,\n      sm_kernel: defaultKernelSelectorValue.kernel || '',\n      sm_image: defaultKernelSelectorValue.arnEnvironment || '',\n    });\n  }, [defaultKernelSelectorValue]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleImageOnBlur = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value } = e.target;\n    const errorMessage = validateImage(value);\n\n    setFormErrors({\n      ...formErrors,\n      ImageError: errorMessage,\n    });\n  }\n\n  const handleKernelOnBlur = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value } = e.target;\n    const errorMessage = validateKernel(value);\n\n    setFormErrors({\n      ...formErrors,\n      KernelError: errorMessage,\n    });\n  }\n\n  return (<div className={Styles.WidgetFieldsContainer}>\n    <InputContainer\n      name={'sm_image'}\n      onChange={handleChange}\n      readOnly={isDisabled}\n      required\n      value={formState.sm_image}\n      placeholder={widgetStrings.Placeholders.ImagePlaceHolder}\n      labelInfo={widgetStrings.Image}\n      errorMessage={formErrors.ImageError}\n      onBlur={handleImageOnBlur}\n      toolTipText={tooltipsStrings.ImageTooltipText}\n    />\n\n    <InputContainer\n      name={'sm_kernel'}\n      onChange={handleChange}\n      readOnly={isDisabled}\n      required\n      value={formState.sm_kernel}\n      placeholder={widgetStrings.Placeholders.KernelPlaceHolder}\n      labelInfo={widgetStrings.Kernel}\n      errorMessage={formErrors.KernelError}\n      onBlur={handleKernelOnBlur}\n      toolTipText={tooltipsStrings.KernelTooltipText}\n    />\n  </div>)\n}\n"]}