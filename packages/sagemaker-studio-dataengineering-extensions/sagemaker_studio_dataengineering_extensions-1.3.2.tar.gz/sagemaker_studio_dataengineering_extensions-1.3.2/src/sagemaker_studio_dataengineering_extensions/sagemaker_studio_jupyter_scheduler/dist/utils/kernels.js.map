{"version":3,"file":"kernels.js","sourceRoot":"","sources":["../../src/utils/kernels.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,yBAAyB,EAAE,MAAM,cAAc,CAAC;AAGzD,MAAM,UAAU,aAAa,CAAC,IAAwB;IACpD,0CAA0C;IAC1C,+GAA+G;IAC/G,oIAAoI;IACpI,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;SAC9D;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACxD,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,GAAG,SAAS,CAAC;QACxC,MAAM,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvD,MAAM,cAAc,GAAG,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3D,MAAM,yBAAyB,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,cAAc,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;QAE5F,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,yBAAyB,EAAE,OAAO,EAAE,CAAC;KACvE;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;KAC9D;AACH,CAAC","sourcesContent":["import isString from 'lodash/isString';\nimport { KERNELSPEC_NAME_SEPARATOR } from '../constants';\nimport { ParsedSpecName } from '../types';\n\nexport function parseSpecName(name: string | undefined): ParsedSpecName {\n  // Parse a kernelspec into different parts\n  // Example kernelspec: kernelname__SAGEMAKER_INTERNAL__arn:aws:sagemaker:region:account:image/imagename/version\n  // Parsed result: { kernel: kernelname, arnEnvironment: arn:aws:sagemaker:region:account:image/imagename/version, version: version }\n  try {\n    if (!isString(name) || name.length === 0) {\n      return { kernel: null, arnEnvironment: null, version: null };\n    }\n\n    const splitName = name.split(KERNELSPEC_NAME_SEPARATOR);\n    const [kernel, environment] = splitName;\n    const splitEnv = environment && environment.split('/');\n\n    const arnEnvironment = splitEnv && splitEnv[0] + '/' + splitEnv[1];\n    const version = splitEnv.length === 3 ? splitEnv[2] : null;\n    const arnEnvironmentWithVersion = version ? `${arnEnvironment}/${version}` : arnEnvironment;\n\n    return { kernel, arnEnvironment: arnEnvironmentWithVersion, version };\n  } catch (e) {\n    return { kernel: null, arnEnvironment: null, version: null };\n  }\n}\n"]}