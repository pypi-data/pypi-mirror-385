{"version":3,"file":"EnvironmentVariables.js","sourceRoot":"","sources":["../../../../../src/widgets/CreateNotebookJobForm/AdvancedOptions/EnvironmentVariables/EnvironmentVariables.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,0BAA0B,CAAC;AAEhD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,KAAK,MAAM,qBAAqB,CAAC;AAExC,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,MAAM,wCAAwC,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AAgBnC,MAAM,aAAa,GAAG,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC;AAC7E,MAAM,eAAe,GAAG,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC;AAExE,MAAM,oBAAoB,GAAmC,CAAC,EAC5D,iBAAiB,EACjB,gBAAgB,EAChB,oBAAoB,EACpB,uBAAuB,EACvB,UAAU,EACV,GAAG,IAAI,EACR,EAAE,EAAE;IACH,MAAM,OAAO,GAAG,CAAC,CAAC,UAAU,CAAC,yBAAyB,CAAC;IAEvD,MAAM,oBAAoB,GAAG,CAC3B,6BAAK,SAAS,EAAE,eAAe;QAC7B,oBAAC,KAAK,IAAC,QAAQ,EAAC,OAAO,IAAE,UAAU,CAAC,yBAAyB,CAAS,CAClE,CACP,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,2BAA2B;QAChD,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB;YACtC,+BAAO,SAAS,EAAE,MAAM,CAAC,UAAU,IAAG,aAAa,CAAC,oBAAoB,CAAS;YAChF,CAAC,iBAAiB,CAAC,CAAC,CAAC,CACpB,oBAAC,OAAO,IAAC,KAAK,EAAE,eAAe,CAAC,2BAA2B;gBACzD,oBAAC,QAAQ,OAAG,CACJ,CACX,CAAC,CAAC,CAAC,IAAI,CACJ;QAGL,iBAAiB,IAAI,oBAAoB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CACxD,6BAAK,SAAS,EAAE,MAAM,CAAC,4BAA4B;YACjD,oBAAC,SAAS,IACR,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAC9B,WAAW,EAAE,aAAa,CAAC,YAAY,CAAC,YAAY,GACpD,CACE,CACP,CAAC,CAAC,CAAC,CACF,0CACG,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAClC,oBAAC,mBAAmB,IAClB,UAAU,EAAE,iBAAiB,EAC7B,GAAG,EAAE,CAAC,EACN,qBAAqB,EAAE,oBAAoB,EAC3C,wBAAwB,EAAE,uBAAuB,EACjD,KAAK,EAAE,CAAC,EACR,UAAU,EAAE,UAAU,KAClB,IAAI,GACR,CACH,CAAC,CACD,CACJ;QACA,OAAO,IAAI,iCAAM,oBAAoB,CAAO;QAC5C,CAAC,iBAAiB,IAAI,CACrB;YACE,oBAAC,MAAM,IACL,QAAQ,EAAE,gBAAgB,EAC1B,SAAS,EAAE,MAAM,CAAC,SAAS,EAC3B,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,SAAS,EAChB,IAAI,EAAE,OAAO,EACb,OAAO,EAAE,GAAG,EAAE;oBACZ,uBAAuB,CAAC,CAAC,GAAG,oBAAoB,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC7E,CAAC,IAEA,aAAa,CAAC,sBAAsB,CAC9B,CACL,CACP,CACG,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,oBAAoB,EAAE,CAAC","sourcesContent":["import React from 'react';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { Scheduler } from '@jupyterlab/scheduler';\nimport { Button } from '@mui/material';\nimport Alert from '@mui/material/Alert';\n\nimport { ErrorIconStyled } from '../../styles';\nimport { EnvironmentVariable } from './EnvironmentVariable';\nimport { TextInput } from '../../../../components/textinput';\nimport { Tooltip } from '../../../../components/tooltip/Tooltip';\nimport { i18nStrings } from '../../../../constants';\n\nimport * as Styles from './styles';\n\ninterface IEnvironmentVariable {\n  key: string;\n  value: string;\n}\n\ninterface Props {\n  isButtonDisabled: boolean;\n  allFieldsDisabled: boolean;\n  environmentVariables: IEnvironmentVariable[];\n  setEnvironmentVariables: (environmentParameters: IEnvironmentVariable[]) => void;\n  formErrors: Scheduler.ErrorsType;\n  setFormErrors: (errors: Scheduler.ErrorsType) => void;\n}\n\nconst widgetStrings = i18nStrings.ScheduleNoteBook.MainPanel.AdvancedOptions;\nconst tooltipsStrings = i18nStrings.ScheduleNoteBook.MainPanel.Tooltips;\n\nconst EnvironmentVariables: React.FunctionComponent<Props> = ({\n  allFieldsDisabled,\n  isButtonDisabled,\n  environmentVariables,\n  setEnvironmentVariables,\n  formErrors,\n  ...rest\n}) => {\n  const isError = !!formErrors.environmentVariablesError;\n\n  const errorMessageWithIcon = (\n    <div className={ErrorIconStyled}>\n      <Alert severity=\"error\">{formErrors.environmentVariablesError}</Alert>\n    </div>\n  );\n\n  return (\n    <div className={Styles.EnvironmentVariablesSection}>\n      <div className={Styles.tooltipsContainer}>\n        <label className={Styles.InputLabel}>{widgetStrings.environmentVariables}</label>\n        {!allFieldsDisabled ? (\n          <Tooltip title={tooltipsStrings.EnvironmentVariablesTooltip}>\n            <InfoIcon />\n          </Tooltip>\n        ) : null}\n      </div>\n\n      {/* if in detail view and there are no env variables */}\n      {allFieldsDisabled && environmentVariables.length === 0 ? (\n        <div className={Styles.EnvironmentVariableContainer}>\n          <TextInput\n            InputProps={{ readOnly: true }}\n            placeholder={widgetStrings.Placeholders.NoneSelected}\n          />\n        </div>\n      ) : (\n        <>\n          {environmentVariables.map((_, i) => (\n            <EnvironmentVariable\n              isDisabled={allFieldsDisabled}\n              key={i}\n              environmentParameters={environmentVariables}\n              setEnvironmentParameters={setEnvironmentVariables}\n              index={i}\n              formErrors={formErrors}\n              {...rest}\n            />\n          ))}\n        </>\n      )}\n      {isError && <div>{errorMessageWithIcon}</div>}\n      {!allFieldsDisabled && (\n        <div>\n          <Button\n            disabled={isButtonDisabled}\n            className={Styles.ConfigBtn}\n            variant={'contained'}\n            color={'primary'}\n            size={'small'}\n            onClick={() => {\n              setEnvironmentVariables([...environmentVariables, { key: '', value: '' }]);\n            }}\n          >\n            {widgetStrings.addEnvironmentvariable}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport { EnvironmentVariables };\n"]}