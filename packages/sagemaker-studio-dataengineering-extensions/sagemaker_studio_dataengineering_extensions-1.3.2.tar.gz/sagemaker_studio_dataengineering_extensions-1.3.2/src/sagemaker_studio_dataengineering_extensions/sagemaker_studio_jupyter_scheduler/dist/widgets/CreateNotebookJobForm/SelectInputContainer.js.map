{"version":3,"file":"SelectInputContainer.js","sourceRoot":"","sources":["../../../src/widgets/CreateNotebookJobForm/SelectInputContainer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,kCAAkC,CAAC;AAC3D,OAAO,EAAE,WAAW,EAAoB,MAAM,8BAA8B,CAAC;AAE7E,OAAO,QAAQ,MAAM,0BAA0B,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,YAAY,MAAM,WAAW,CAAC;AAS1C,MAAM,oBAAoB,GAAuD,CAAC,EAChF,KAAK,EACL,QAAQ,GAAG,IAAI,EACf,WAAW,EACX,WAAW,EACX,YAAY,EACZ,GAAG,UAAU,EACd,EAAE,EAAE;IACH,MAAM,oBAAoB,GAAG,WAAW,IAAI,CAC1C;QACE,8BAAM,SAAS,EAAE,YAAY,CAAC,oBAAoB,IAAG,WAAW,CAAC,eAAe,CAAQ;QACvF,WAAW,CAAC,gBAAgB,CACzB,CACP,CAAC;IACF,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,oBAAoB;QACzC,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB;YACtC,+BAAO,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAG,KAAK,CAAS;YAC7D,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,CACvD,oBAAC,OAAO,IACN,KAAK,EAAE,oBAAoB,IAAI,WAAW,IAAI,EAAE,EAChD,SAAS,EAAE,MAAM,CAAC,QAAQ,EAC1B,kBAAkB,EAAE,WAAW,KAAK,IAAI;gBAExC,oBAAC,QAAQ,OAAG,CACJ,CACX,CACG;QACN,oBAAC,WAAW,IAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,KAAM,UAAU,GAAI,CACjE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,oBAAoB,EAA6B,CAAC","sourcesContent":["import React from 'react';\nimport { Tooltip } from '../../components/tooltip/Tooltip';\nimport { SelectInput, SelectInputProps } from '../../components/selectinput';\n\nimport InfoIcon from '@mui/icons-material/Info';\nimport * as Styles from './styles';\nimport * as WidgetStyles from '../styles';\n\ninterface SelectInputContainerProps extends SelectInputProps {\n  required?: boolean;\n  errorMessage?: string;\n  toolTipText?: string;\n  toolTipArea?: { descriptionText: string; toolTipComponent: React.ReactNode };\n}\n\nconst SelectInputContainer: React.FunctionComponent<SelectInputContainerProps> = ({\n  label,\n  required = true,\n  toolTipText,\n  toolTipArea,\n  errorMessage,\n  ...inputProps\n}) => {\n  const toolTipAreaComponent = toolTipArea && (\n    <div>\n      <span className={WidgetStyles.TooltipTextContainer}>{toolTipArea.descriptionText}</span>\n      {toolTipArea.toolTipComponent}\n    </div>\n  );\n  return (\n    <div className={Styles.SelectInputContainer}>\n      <div className={Styles.tooltipsContainer}>\n        <label className={Styles.InputLabel(required)}>{label}</label>\n        {(toolTipText || toolTipArea) && !inputProps.readOnly && (\n          <Tooltip\n            title={toolTipAreaComponent || toolTipText || ''}\n            className={Styles.tooltips}\n            disableInteractive={toolTipArea === null}\n          >\n            <InfoIcon />\n          </Tooltip>\n        )}\n      </div>\n      <SelectInput label={label} disableClearable={true} {...inputProps} />\n    </div>\n  );\n};\n\nexport { SelectInputContainer, SelectInputContainerProps };\n"]}