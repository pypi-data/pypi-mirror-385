{"version":3,"file":"MultiSelectContainer.js","sourceRoot":"","sources":["../../../src/widgets/CreateNotebookJobForm/MultiSelectContainer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,kCAAkC,CAAC;AAC3D,OAAO,KAAK,MAAM,qBAAqB,CAAC;AAExC,OAAO,QAAQ,MAAM,0BAA0B,CAAC;AAChD,OAAO,YAAY,EAAE,EAGnB,mBAAmB,GACpB,MAAM,4BAA4B,CAAC;AACpC,OAAO,SAAS,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AAEnC,MAAM,MAAM,GAAG,mBAAmB,EAAU,CAAC;AAa7C,MAAM,oBAAoB,GAAuD,CAAC,EAChF,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,QAAQ,EACR,WAAW,EACX,OAAO,EACP,eAAe,EACf,QAAQ,EACR,OAAO,EACP,GAAG,IAAI,EACR,EAAE,EAAE;;IACH,WAAW,aAAX,WAAW,cAAX,WAAW,IAAX,WAAW,GAAK,CAAC,MAAqC,EAAE,EAAE,CAAC,CACzD,oBAAC,SAAS,OAAK,MAAM,EAAE,OAAO,EAAC,UAAU,EAAC,IAAI,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,WAAW,EAAE,KAAK,GAAI,CAC7F,EAAC;IAEF,oDAAoD;IACpD,4CAA4C;IAC5C,MAAM,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAClC,eAAe,CAAC,CAAC,CAAC,CAChB,oBAAC,OAAO,IAAC,KAAK,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ;QACzD,oBAAC,QAAQ,OAAG,CACJ,CACX,CAAC,CAAC,CAAC,CACF,yCAAK,CACN,CACF,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CACZ,oBAAC,OAAO,IAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ;QACjD,oBAAC,QAAQ,OAAG,CACJ,CACX,CAAC,CAAC,CAAC,CACF,yCAAK,CACN,CAAC;IAEF,MAAM,cAAc,GAAG,YAAY,CAAC,CAAC,CAAC,CACpC,6BAAK,SAAS,EAAE,MAAM,CAAC,eAAe;QACpC,oBAAC,KAAK,IAAC,QAAQ,EAAC,OAAO,IAAE,YAAY,CAAS,CAC1C,CACP,CAAC,CAAC,CAAC,CACF,yCAAK,CACN,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,oBAAoB;QACzC,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB;YACtC,+BAAO,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAG,KAAK,CAAS;YAC7D,gBAAgB,CACb;QACN,oBAAC,YAAY,OACP,IAAI,EACR,QAAQ,QACR,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,aAAa,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAEzC,sCAAsC;gBACtC,IAAI,MAAM,CAAC,UAAU,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;oBACpE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;iBAClC;gBAED,OAAO,QAAQ,CAAC;YAClB,CAAC,EACD,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;gBACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC7B,MAAM,GAAG,QAAQ,MAAM,GAAG,CAAC;iBAC5B;gBAED,OAAO,+BAAQ,KAAK,IAAG,MAAM,CAAM,CAAC;YACtC,CAAC,EACD,eAAe,EAAE;gBACf,GAAG,IAAI,CAAC,eAAe;gBACvB,cAAc,EAAE;oBACd,GAAG,MAAA,IAAI,CAAC,eAAe,0CAAE,cAAc;oBACvC,IAAI,EAAE,OAAO;iBACd;gBACD,cAAc,EAAE;oBACd,GAAG,MAAA,IAAI,CAAC,eAAe,0CAAE,cAAc;oBACvC,IAAI,EAAE,OAAO;iBACd;aACF,GACD;QACD,cAAc,CACX,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,oBAAoB,EAA6B,CAAC","sourcesContent":["import React from 'react';\nimport { Tooltip } from '../../components/tooltip/Tooltip';\nimport Alert from '@mui/material/Alert';\n\nimport InfoIcon from '@mui/icons-material/Info';\nimport Autocomplete, {\n  AutocompleteProps,\n  AutocompleteRenderInputParams,\n  createFilterOptions,\n} from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport * as Styles from './styles';\n\nconst filter = createFilterOptions<string>();\n\ninterface MultiSelectContainerProps extends Omit<AutocompleteProps<string, true, boolean, boolean>, 'renderInput'> {\n  name: string;\n  className?: string;\n  label: string;\n  errorMessage?: string;\n  required?: boolean;\n  renderInput?: (params: AutocompleteRenderInputParams) => React.ReactNode;\n  tooltip?: string;\n  disabledTooltip?: string;\n}\n\nconst MultiSelectContainer: React.FunctionComponent<MultiSelectContainerProps> = ({\n  label,\n  required,\n  errorMessage,\n  disabled,\n  renderInput,\n  tooltip,\n  disabledTooltip,\n  freeSolo,\n  options,\n  ...rest\n}) => {\n  renderInput ??= (params: AutocompleteRenderInputParams) => (\n    <TextField {...params} variant=\"outlined\" size=\"small\" margin=\"dense\" placeholder={label} />\n  );\n\n  // if disabled, display disabledTooltip (if present)\n  //   otherwise, display tooltip (if present)\n  const tooltipComponent = disabled ? (\n    disabledTooltip ? (\n      <Tooltip title={disabledTooltip} className={Styles.tooltips}>\n        <InfoIcon />\n      </Tooltip>\n    ) : (\n      <></>\n    )\n  ) : tooltip ? (\n    <Tooltip title={tooltip} className={Styles.tooltips}>\n      <InfoIcon />\n    </Tooltip>\n  ) : (\n    <></>\n  );\n\n  const errorComponent = errorMessage ? (\n    <div className={Styles.ErrorIconStyled}>\n      <Alert severity=\"error\">{errorMessage}</Alert>\n    </div>\n  ) : (\n    <></>\n  );\n\n  return (\n    <div className={Styles.SelectInputContainer}>\n      <div className={Styles.tooltipsContainer}>\n        <label className={Styles.InputLabel(required)}>{label}</label>\n        {tooltipComponent}\n      </div>\n      <Autocomplete\n        {...rest}\n        multiple\n        renderInput={renderInput}\n        freeSolo={freeSolo}\n        readOnly={disabled}\n        options={options}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          // Suggest the creation of a new value\n          if (params.inputValue !== '' && !options.includes(params.inputValue)) {\n            filtered.push(params.inputValue);\n          }\n\n          return filtered;\n        }}\n        renderOption={(props, option, state) => {\n          if (!options.includes(option)) {\n            option = `Add \"${option}\"`;\n          }\n\n          return <li {...props}>{option}</li>;\n        }}\n        componentsProps={{\n          ...rest.componentsProps,\n          popupIndicator: {\n            ...rest.componentsProps?.popupIndicator,\n            size: 'small',\n          },\n          clearIndicator: {\n            ...rest.componentsProps?.clearIndicator,\n            size: 'small',\n          },\n        }}\n      />\n      {errorComponent}\n    </div>\n  );\n};\n\nexport { MultiSelectContainer, MultiSelectContainerProps };\n"]}