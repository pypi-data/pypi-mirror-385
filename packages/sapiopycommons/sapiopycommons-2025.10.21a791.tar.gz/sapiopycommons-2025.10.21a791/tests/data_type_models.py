from sapiopylib.rest.pojo.datatype.FieldDefinition import FieldType
from sapiopylib.rest.utils.recordmodel.RecordModelWrapper import WrappedRecordModel, WrapperField
from sapiopylib.rest.pojo.DateRange import DateRange
from typing import Optional


class ABI2700ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ABI2700Result
    Data Type Display Name: ABI2700 Result (ABI2700 Results)
    Fields: CreatedBy, Ct, CtSD, DataRecordName, DateCreated, Detector, OtherSampleId, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate, Well
    """
    DATA_TYPE_NAME: str = 'ABI2700Result'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CT__FIELD_NAME: WrapperField = WrapperField("Ct", FieldType.DOUBLE)
    CTSD__FIELD_NAME: WrapperField = WrapperField("CtSD", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DETECTOR__FIELD_NAME: WrapperField = WrapperField("Detector", FieldType.STRING)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELL__FIELD_NAME: WrapperField = WrapperField("Well", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_Ct_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ct' on this record model
        """
        self.set_field_value(self.CT__FIELD_NAME.field_name, value)

    def get_Ct_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ct' from this record model
        """
        return self.get_field_value(self.CT__FIELD_NAME.field_name)

    def set_CtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSD' on this record model
        """
        self.set_field_value(self.CTSD__FIELD_NAME.field_name, value)

    def get_CtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSD' from this record model
        """
        return self.get_field_value(self.CTSD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Detector_field(self, value: Optional[str]):
        """
        Set data field with field name 'Detector' on this record model
        """
        self.set_field_value(self.DETECTOR__FIELD_NAME.field_name, value)

    def get_Detector_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Detector' from this record model
        """
        return self.get_field_value(self.DETECTOR__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Well_field(self, value: Optional[str]):
        """
        Set data field with field name 'Well' on this record model
        """
        self.set_field_value(self.WELL__FIELD_NAME.field_name, value)

    def get_Well_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Well' from this record model
        """
        return self.get_field_value(self.WELL__FIELD_NAME.field_name)


class AccessionConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AccessionConfig
    Data Type Display Name: Accession Configuration (Accession Configurations)
    Fields: AccessionOnCreate, CreatedBy, CustomPluginClassPath, DataFieldName, DataRecordName, DataTypeField, DateCreated, IsGlobal, NumberOfDigits, PrefixField, StartNumber, SuffixField, VeloxLastModifiedBy, VeloxLastModifiedDate
    Accession configuration can be used to modify default accessioning behaviors for out-of-box plugins from Sapio Sciences. Convenient methods can be found in AccessioningWithConfigManager class to accession according to the configuration. All Sapio plugins who accession samples should use this util for accessioning.
    """
    DATA_TYPE_NAME: str = 'AccessionConfig'
    ACCESSIONONCREATE__FIELD_NAME: WrapperField = WrapperField("AccessionOnCreate", FieldType.BOOLEAN)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMPLUGINCLASSPATH__FIELD_NAME: WrapperField = WrapperField("CustomPluginClassPath", FieldType.STRING)
    DATAFIELDNAME__FIELD_NAME: WrapperField = WrapperField("DataFieldName", FieldType.SELECTION)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPEFIELD__FIELD_NAME: WrapperField = WrapperField("DataTypeField", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISGLOBAL__FIELD_NAME: WrapperField = WrapperField("IsGlobal", FieldType.BOOLEAN)
    NUMBEROFDIGITS__FIELD_NAME: WrapperField = WrapperField("NumberOfDigits", FieldType.INTEGER)
    PREFIXFIELD__FIELD_NAME: WrapperField = WrapperField("PrefixField", FieldType.STRING)
    STARTNUMBER__FIELD_NAME: WrapperField = WrapperField("StartNumber", FieldType.INTEGER)
    SUFFIXFIELD__FIELD_NAME: WrapperField = WrapperField("SuffixField", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionOnCreate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AccessionOnCreate' on this record model
        """
        self.set_field_value(self.ACCESSIONONCREATE__FIELD_NAME.field_name, value)

    def get_AccessionOnCreate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AccessionOnCreate' from this record model
        """
        return self.get_field_value(self.ACCESSIONONCREATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomPluginClassPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomPluginClassPath' on this record model
        """
        self.set_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name, value)

    def get_CustomPluginClassPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomPluginClassPath' from this record model
        """
        return self.get_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name)

    def set_DataFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataFieldName' on this record model
        """
        self.set_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name, value)

    def get_DataFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataFieldName' from this record model
        """
        return self.get_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name)

    def set_DataTypeField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeField' on this record model
        """
        self.set_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name, value)

    def get_DataTypeField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeField' from this record model
        """
        return self.get_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsGlobal_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGlobal' on this record model
        """
        self.set_field_value(self.ISGLOBAL__FIELD_NAME.field_name, value)

    def get_IsGlobal_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGlobal' from this record model
        """
        return self.get_field_value(self.ISGLOBAL__FIELD_NAME.field_name)

    def set_NumberOfDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfDigits' on this record model
        """
        self.set_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name, value)

    def get_NumberOfDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfDigits' from this record model
        """
        return self.get_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name)

    def set_PrefixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'PrefixField' on this record model
        """
        self.set_field_value(self.PREFIXFIELD__FIELD_NAME.field_name, value)

    def get_PrefixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PrefixField' from this record model
        """
        return self.get_field_value(self.PREFIXFIELD__FIELD_NAME.field_name)

    def set_StartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartNumber' on this record model
        """
        self.set_field_value(self.STARTNUMBER__FIELD_NAME.field_name, value)

    def get_StartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartNumber' from this record model
        """
        return self.get_field_value(self.STARTNUMBER__FIELD_NAME.field_name)

    def set_SuffixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SuffixField' on this record model
        """
        self.set_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name, value)

    def get_SuffixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SuffixField' from this record model
        """
        return self.get_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AgentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Agent
    Data Type Display Name: Agent (Agents)
    Fields: AgentName, AgentType, CreatedBy, DataRecordName, DateCreated, MultiParentLink649, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Agent'
    AGENTNAME__FIELD_NAME: WrapperField = WrapperField("AgentName", FieldType.SELECTION)
    AGENTTYPE__FIELD_NAME: WrapperField = WrapperField("AgentType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MULTIPARENTLINK649__FIELD_NAME: WrapperField = WrapperField("MultiParentLink649", FieldType.MULTIPARENTLINK)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AgentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentName' on this record model
        """
        self.set_field_value(self.AGENTNAME__FIELD_NAME.field_name, value)

    def get_AgentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentName' from this record model
        """
        return self.get_field_value(self.AGENTNAME__FIELD_NAME.field_name)

    def set_AgentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentType' on this record model
        """
        self.set_field_value(self.AGENTTYPE__FIELD_NAME.field_name, value)

    def get_AgentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentType' from this record model
        """
        return self.get_field_value(self.AGENTTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalysisStatusModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalysisStatus
    Data Type Display Name: Analysis Status (Analysis Statuses)
    Fields: CreatedBy, DataRecordName, DateCreated, Invocation, Script, Status, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AnalysisStatus'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INVOCATION__FIELD_NAME: WrapperField = WrapperField("Invocation", FieldType.PICKLIST)
    SCRIPT__FIELD_NAME: WrapperField = WrapperField("Script", FieldType.STRING)
    STATUS__FIELD_NAME: WrapperField = WrapperField("Status", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Invocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Invocation' on this record model
        """
        self.set_field_value(self.INVOCATION__FIELD_NAME.field_name, value)

    def get_Invocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Invocation' from this record model
        """
        return self.get_field_value(self.INVOCATION__FIELD_NAME.field_name)

    def set_Script_field(self, value: Optional[str]):
        """
        Set data field with field name 'Script' on this record model
        """
        self.set_field_value(self.SCRIPT__FIELD_NAME.field_name, value)

    def get_Script_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Script' from this record model
        """
        return self.get_field_value(self.SCRIPT__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardChartDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardChartData
    Data Type Display Name: Analytics Wizard Chart Datum (Analytics Wizard Chart Data)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    Holds a single chart data for a jarvis analytic run result. A run result can have more than one chart.
    """
    DATA_TYPE_NAME: str = 'AnalyticsWizardChartData'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardRunModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardRun
    Data Type Display Name: Analytics Wizard Run (Analytics Wizard Runs)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, Name, OperatorName, ParametersJSON, RunId, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    Stored a single run of particular run settings within a top level result of data frame.
    """
    DATA_TYPE_NAME: str = 'AnalyticsWizardRun'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    OPERATORNAME__FIELD_NAME: WrapperField = WrapperField("OperatorName", FieldType.STRING)
    PARAMETERSJSON__FIELD_NAME: WrapperField = WrapperField("ParametersJSON", FieldType.STRING)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunId", FieldType.INTEGER)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_OperatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'OperatorName' on this record model
        """
        self.set_field_value(self.OPERATORNAME__FIELD_NAME.field_name, value)

    def get_OperatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OperatorName' from this record model
        """
        return self.get_field_value(self.OPERATORNAME__FIELD_NAME.field_name)

    def set_ParametersJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ParametersJSON' on this record model
        """
        self.set_field_value(self.PARAMETERSJSON__FIELD_NAME.field_name, value)

    def get_ParametersJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ParametersJSON' from this record model
        """
        return self.get_field_value(self.PARAMETERSJSON__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardSavedSettingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardSavedSetting
    Data Type Display Name: Analytics Wizard Saved Setting (Analytics Wizard Saved Settings)
    Fields: CreatedBy, DataRecordName, DateCreated, OpName, SettingsContent, SettingsName, VeloxLastModifiedBy, VeloxLastModifiedDate
    Saves the settings for Jarvis Analytic data and parameter mappings.

Saving is only allowed if the exact settings has not been repeated.
    """
    DATA_TYPE_NAME: str = 'AnalyticsWizardSavedSetting'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    OPNAME__FIELD_NAME: WrapperField = WrapperField("OpName", FieldType.STRING)
    SETTINGSCONTENT__FIELD_NAME: WrapperField = WrapperField("SettingsContent", FieldType.STRING)
    SETTINGSNAME__FIELD_NAME: WrapperField = WrapperField("SettingsName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_OpName_field(self, value: Optional[str]):
        """
        Set data field with field name 'OpName' on this record model
        """
        self.set_field_value(self.OPNAME__FIELD_NAME.field_name, value)

    def get_OpName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OpName' from this record model
        """
        return self.get_field_value(self.OPNAME__FIELD_NAME.field_name)

    def set_SettingsContent_field(self, value: Optional[str]):
        """
        Set data field with field name 'SettingsContent' on this record model
        """
        self.set_field_value(self.SETTINGSCONTENT__FIELD_NAME.field_name, value)

    def get_SettingsContent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SettingsContent' from this record model
        """
        return self.get_field_value(self.SETTINGSCONTENT__FIELD_NAME.field_name)

    def set_SettingsName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SettingsName' on this record model
        """
        self.set_field_value(self.SETTINGSNAME__FIELD_NAME.field_name, value)

    def get_SettingsName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SettingsName' from this record model
        """
        return self.get_field_value(self.SETTINGSNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardTopLevelResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardTopLevelResult
    Data Type Display Name: Analytics Wizard Top Level Result (Analytics Wizard Top Level Results)
    Fields: CreatedBy, CspFieldDefinitionJson, DataRecordName, DateCreated, FilePath, Name, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    Stores the top level results of a single jarvis analytics saved run.
    """
    DATA_TYPE_NAME: str = 'AnalyticsWizardTopLevelResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CSPFIELDDEFINITIONJSON__FIELD_NAME: WrapperField = WrapperField("CspFieldDefinitionJson", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CspFieldDefinitionJson_field(self, value: Optional[str]):
        """
        Set data field with field name 'CspFieldDefinitionJson' on this record model
        """
        self.set_field_value(self.CSPFIELDDEFINITIONJSON__FIELD_NAME.field_name, value)

    def get_CspFieldDefinitionJson_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CspFieldDefinitionJson' from this record model
        """
        return self.get_field_value(self.CSPFIELDDEFINITIONJSON__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AntibodyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Antibody
    Data Type Display Name: Antibody (Antibodies)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, HELM, LotNumber, PartNumber, RegistryId, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'Antibody'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class AntibodyPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AntibodyPart
    Data Type Display Name: Antibody Part (Antibody Parts)
    Fields: ChemicalProperties, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, HELM, HELMHash, MultiParentLink201, QuantityOnHand, QuantityPerItem, RegistryId, ReorderLevelQuantity, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'AntibodyPart'
    CHEMICALPROPERTIES__FIELD_NAME: WrapperField = WrapperField("ChemicalProperties", FieldType.SIDE_LINK)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.PICKLIST)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    HELMHASH__FIELD_NAME: WrapperField = WrapperField("HELMHash", FieldType.STRING)
    MULTIPARENTLINK201__FIELD_NAME: WrapperField = WrapperField("MultiParentLink201", FieldType.MULTIPARENTLINK)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class AssignedProcessModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AssignedProcess
    Data Type Display Name: Assigned Process (Assigned Processes)
    Fields: AwaitingRequestApproval, BranchLongId, CompletedDate, CreatedBy, DataRecordName, DateCreated, DoNotProceed, HasBeenReprocessed, OtherSampleId, PauseTracking, ProcessName, ProcessStepNumber, ProcessTAT, Reprocessing, RequestRecordId, SampleId, SampleRecordId, ScheduledDate, SourceAssignedProcessIds, Status, TurnAroundHours, TurnAroundMinutes, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AssignedProcess'
    AWAITINGREQUESTAPPROVAL__FIELD_NAME: WrapperField = WrapperField("AwaitingRequestApproval", FieldType.BOOLEAN)
    BRANCHLONGID__FIELD_NAME: WrapperField = WrapperField("BranchLongId", FieldType.LONG)
    COMPLETEDDATE__FIELD_NAME: WrapperField = WrapperField("CompletedDate", FieldType.DATE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DONOTPROCEED__FIELD_NAME: WrapperField = WrapperField("DoNotProceed", FieldType.BOOLEAN)
    HASBEENREPROCESSED__FIELD_NAME: WrapperField = WrapperField("HasBeenReprocessed", FieldType.BOOLEAN)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    PAUSETRACKING__FIELD_NAME: WrapperField = WrapperField("PauseTracking", FieldType.BOOLEAN)
    PROCESSNAME__FIELD_NAME: WrapperField = WrapperField("ProcessName", FieldType.SELECTION)
    PROCESSSTEPNUMBER__FIELD_NAME: WrapperField = WrapperField("ProcessStepNumber", FieldType.LONG)
    PROCESSTAT__FIELD_NAME: WrapperField = WrapperField("ProcessTAT", FieldType.DOUBLE)
    REPROCESSING__FIELD_NAME: WrapperField = WrapperField("Reprocessing", FieldType.BOOLEAN)
    REQUESTRECORDID__FIELD_NAME: WrapperField = WrapperField("RequestRecordId", FieldType.LONG)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("SampleRecordId", FieldType.LONG)
    SCHEDULEDDATE__FIELD_NAME: WrapperField = WrapperField("ScheduledDate", FieldType.DATE)
    SOURCEASSIGNEDPROCESSIDS__FIELD_NAME: WrapperField = WrapperField("SourceAssignedProcessIds", FieldType.STRING)
    STATUS__FIELD_NAME: WrapperField = WrapperField("Status", FieldType.SELECTION)
    TURNAROUNDHOURS__FIELD_NAME: WrapperField = WrapperField("TurnAroundHours", FieldType.LONG)
    TURNAROUNDMINUTES__FIELD_NAME: WrapperField = WrapperField("TurnAroundMinutes", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AwaitingRequestApproval_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AwaitingRequestApproval' on this record model
        """
        self.set_field_value(self.AWAITINGREQUESTAPPROVAL__FIELD_NAME.field_name, value)

    def get_AwaitingRequestApproval_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AwaitingRequestApproval' from this record model
        """
        return self.get_field_value(self.AWAITINGREQUESTAPPROVAL__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def set_CompletedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedDate' on this record model
        """
        self.set_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name, value)

    def get_CompletedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedDate' from this record model
        """
        return self.get_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DoNotProceed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DoNotProceed' on this record model
        """
        self.set_field_value(self.DONOTPROCEED__FIELD_NAME.field_name, value)

    def get_DoNotProceed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DoNotProceed' from this record model
        """
        return self.get_field_value(self.DONOTPROCEED__FIELD_NAME.field_name)

    def set_HasBeenReprocessed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasBeenReprocessed' on this record model
        """
        self.set_field_value(self.HASBEENREPROCESSED__FIELD_NAME.field_name, value)

    def get_HasBeenReprocessed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasBeenReprocessed' from this record model
        """
        return self.get_field_value(self.HASBEENREPROCESSED__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PauseTracking_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PauseTracking' on this record model
        """
        self.set_field_value(self.PAUSETRACKING__FIELD_NAME.field_name, value)

    def get_PauseTracking_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PauseTracking' from this record model
        """
        return self.get_field_value(self.PAUSETRACKING__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_ProcessTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProcessTAT' on this record model
        """
        self.set_field_value(self.PROCESSTAT__FIELD_NAME.field_name, value)

    def get_ProcessTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProcessTAT' from this record model
        """
        return self.get_field_value(self.PROCESSTAT__FIELD_NAME.field_name)

    def set_Reprocessing_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Reprocessing' on this record model
        """
        self.set_field_value(self.REPROCESSING__FIELD_NAME.field_name, value)

    def get_Reprocessing_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Reprocessing' from this record model
        """
        return self.get_field_value(self.REPROCESSING__FIELD_NAME.field_name)

    def set_RequestRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RequestRecordId' on this record model
        """
        self.set_field_value(self.REQUESTRECORDID__FIELD_NAME.field_name, value)

    def get_RequestRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RequestRecordId' from this record model
        """
        return self.get_field_value(self.REQUESTRECORDID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_ScheduledDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduledDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name, value)

    def get_ScheduledDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduledDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name)

    def set_SourceAssignedProcessIds_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceAssignedProcessIds' on this record model
        """
        self.set_field_value(self.SOURCEASSIGNEDPROCESSIDS__FIELD_NAME.field_name, value)

    def get_SourceAssignedProcessIds_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceAssignedProcessIds' from this record model
        """
        return self.get_field_value(self.SOURCEASSIGNEDPROCESSIDS__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_TurnAroundHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundHours' on this record model
        """
        self.set_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name, value)

    def get_TurnAroundHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundHours' from this record model
        """
        return self.get_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name)

    def set_TurnAroundMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundMinutes' on this record model
        """
        self.set_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name, value)

    def get_TurnAroundMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundMinutes' from this record model
        """
        return self.get_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AttachmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Attachment
    Data Type Display Name: Attachment (Attachments)
    Fields: AttachmentId, Comments, CreatedBy, DataRecordName, DateCreated, Description, FilePath, IsGeneratedByReportBuilder, MultiParentLink175, MultiParentLink179, MultiParentLink215, MultiParentLink230, MultiParentLink308, TestBoolean, V_AttachmentId, V_Comments, V_VersionNumber, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate, VersionNumber, Volume
    Data type for document attachments
    """
    DATA_TYPE_NAME: str = 'Attachment'
    ATTACHMENTID__FIELD_NAME: WrapperField = WrapperField("AttachmentId", FieldType.STRING)
    COMMENTS__FIELD_NAME: WrapperField = WrapperField("Comments", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    ISGENERATEDBYREPORTBUILDER__FIELD_NAME: WrapperField = WrapperField("IsGeneratedByReportBuilder", FieldType.BOOLEAN)
    MULTIPARENTLINK175__FIELD_NAME: WrapperField = WrapperField("MultiParentLink175", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK179__FIELD_NAME: WrapperField = WrapperField("MultiParentLink179", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK230__FIELD_NAME: WrapperField = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK308__FIELD_NAME: WrapperField = WrapperField("MultiParentLink308", FieldType.MULTIPARENTLINK)
    TESTBOOLEAN__FIELD_NAME: WrapperField = WrapperField("TestBoolean", FieldType.BOOLEAN)
    V_ATTACHMENTID__FIELD_NAME: WrapperField = WrapperField("V_AttachmentId", FieldType.STRING)
    V_COMMENTS__FIELD_NAME: WrapperField = WrapperField("V_Comments", FieldType.STRING)
    V_VERSIONNUMBER__FIELD_NAME: WrapperField = WrapperField("V_VersionNumber", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VERSIONNUMBER__FIELD_NAME: WrapperField = WrapperField("VersionNumber", FieldType.STRING)
    VOLUME__FIELD_NAME: WrapperField = WrapperField("Volume", FieldType.INTEGER)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AttachmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AttachmentId' on this record model
        """
        self.set_field_value(self.ATTACHMENTID__FIELD_NAME.field_name, value)

    def get_AttachmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AttachmentId' from this record model
        """
        return self.get_field_value(self.ATTACHMENTID__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsGeneratedByReportBuilder_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGeneratedByReportBuilder' on this record model
        """
        self.set_field_value(self.ISGENERATEDBYREPORTBUILDER__FIELD_NAME.field_name, value)

    def get_IsGeneratedByReportBuilder_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGeneratedByReportBuilder' from this record model
        """
        return self.get_field_value(self.ISGENERATEDBYREPORTBUILDER__FIELD_NAME.field_name)

    def set_TestBoolean_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TestBoolean' on this record model
        """
        self.set_field_value(self.TESTBOOLEAN__FIELD_NAME.field_name, value)

    def get_TestBoolean_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TestBoolean' from this record model
        """
        return self.get_field_value(self.TESTBOOLEAN__FIELD_NAME.field_name)

    def set_V_AttachmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'V_AttachmentId' on this record model
        """
        self.set_field_value(self.V_ATTACHMENTID__FIELD_NAME.field_name, value)

    def get_V_AttachmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'V_AttachmentId' from this record model
        """
        return self.get_field_value(self.V_ATTACHMENTID__FIELD_NAME.field_name)

    def set_V_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'V_Comments' on this record model
        """
        self.set_field_value(self.V_COMMENTS__FIELD_NAME.field_name, value)

    def get_V_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'V_Comments' from this record model
        """
        return self.get_field_value(self.V_COMMENTS__FIELD_NAME.field_name)

    def set_V_VersionNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'V_VersionNumber' on this record model
        """
        self.set_field_value(self.V_VERSIONNUMBER__FIELD_NAME.field_name, value)

    def get_V_VersionNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'V_VersionNumber' from this record model
        """
        return self.get_field_value(self.V_VERSIONNUMBER__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VersionNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'VersionNumber' on this record model
        """
        self.set_field_value(self.VERSIONNUMBER__FIELD_NAME.field_name, value)

    def get_VersionNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VersionNumber' from this record model
        """
        return self.get_field_value(self.VERSIONNUMBER__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[int]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)


class AW_ANOVASummaryTableModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_ANOVASummaryTable
    Data Type Display Name: ANOVA Summary (ANOVA Summary)
    Fields: CreatedBy, CritF, DataRecordName, DateCreated, DegreeOfFreedom, FValue, GroupName, PrGreaterThanF, Statement, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AW_ANOVASummaryTable'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CRITF__FIELD_NAME: WrapperField = WrapperField("CritF", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEGREEOFFREEDOM__FIELD_NAME: WrapperField = WrapperField("DegreeOfFreedom", FieldType.DOUBLE)
    FVALUE__FIELD_NAME: WrapperField = WrapperField("FValue", FieldType.DOUBLE)
    GROUPNAME__FIELD_NAME: WrapperField = WrapperField("GroupName", FieldType.STRING)
    PRGREATERTHANF__FIELD_NAME: WrapperField = WrapperField("PrGreaterThanF", FieldType.DOUBLE)
    STATEMENT__FIELD_NAME: WrapperField = WrapperField("Statement", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CritF_field(self, value: Optional[float]):
        """
        Set data field with field name 'CritF' on this record model
        """
        self.set_field_value(self.CRITF__FIELD_NAME.field_name, value)

    def get_CritF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CritF' from this record model
        """
        return self.get_field_value(self.CRITF__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DegreeOfFreedom_field(self, value: Optional[float]):
        """
        Set data field with field name 'DegreeOfFreedom' on this record model
        """
        self.set_field_value(self.DEGREEOFFREEDOM__FIELD_NAME.field_name, value)

    def get_DegreeOfFreedom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DegreeOfFreedom' from this record model
        """
        return self.get_field_value(self.DEGREEOFFREEDOM__FIELD_NAME.field_name)

    def set_FValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'FValue' on this record model
        """
        self.set_field_value(self.FVALUE__FIELD_NAME.field_name, value)

    def get_FValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FValue' from this record model
        """
        return self.get_field_value(self.FVALUE__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_PrGreaterThanF_field(self, value: Optional[float]):
        """
        Set data field with field name 'PrGreaterThanF' on this record model
        """
        self.set_field_value(self.PRGREATERTHANF__FIELD_NAME.field_name, value)

    def get_PrGreaterThanF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PrGreaterThanF' from this record model
        """
        return self.get_field_value(self.PRGREATERTHANF__FIELD_NAME.field_name)

    def set_Statement_field(self, value: Optional[str]):
        """
        Set data field with field name 'Statement' on this record model
        """
        self.set_field_value(self.STATEMENT__FIELD_NAME.field_name, value)

    def get_Statement_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Statement' from this record model
        """
        return self.get_field_value(self.STATEMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_CoefficientsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_Coefficients
    Data Type Display Name: Coefficients (Coefficients)
    Fields: CreatedBy, DataRecordName, DateCreated, Estimate, PValue, SeriesName, StdErr, SummaryName, TValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AW_Coefficients'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ESTIMATE__FIELD_NAME: WrapperField = WrapperField("Estimate", FieldType.DOUBLE)
    PVALUE__FIELD_NAME: WrapperField = WrapperField("PValue", FieldType.DOUBLE)
    SERIESNAME__FIELD_NAME: WrapperField = WrapperField("SeriesName", FieldType.STRING)
    STDERR__FIELD_NAME: WrapperField = WrapperField("StdErr", FieldType.DOUBLE)
    SUMMARYNAME__FIELD_NAME: WrapperField = WrapperField("SummaryName", FieldType.STRING)
    TVALUE__FIELD_NAME: WrapperField = WrapperField("TValue", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Estimate_field(self, value: Optional[float]):
        """
        Set data field with field name 'Estimate' on this record model
        """
        self.set_field_value(self.ESTIMATE__FIELD_NAME.field_name, value)

    def get_Estimate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Estimate' from this record model
        """
        return self.get_field_value(self.ESTIMATE__FIELD_NAME.field_name)

    def set_PValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'PValue' on this record model
        """
        self.set_field_value(self.PVALUE__FIELD_NAME.field_name, value)

    def get_PValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PValue' from this record model
        """
        return self.get_field_value(self.PVALUE__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_StdErr_field(self, value: Optional[float]):
        """
        Set data field with field name 'StdErr' on this record model
        """
        self.set_field_value(self.STDERR__FIELD_NAME.field_name, value)

    def get_StdErr_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StdErr' from this record model
        """
        return self.get_field_value(self.STDERR__FIELD_NAME.field_name)

    def set_SummaryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryName' on this record model
        """
        self.set_field_value(self.SUMMARYNAME__FIELD_NAME.field_name, value)

    def get_SummaryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryName' from this record model
        """
        return self.get_field_value(self.SUMMARYNAME__FIELD_NAME.field_name)

    def set_TValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'TValue' on this record model
        """
        self.set_field_value(self.TVALUE__FIELD_NAME.field_name, value)

    def get_TValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TValue' from this record model
        """
        return self.get_field_value(self.TVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_EDValueModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_EDValue
    Data Type Display Name: ED-Value (ED-Values)
    Fields: CreatedBy, DataRecordName, DateCreated, EDStdErr, EDValue, SeriesName, SummaryName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AW_EDValue'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDSTDERR__FIELD_NAME: WrapperField = WrapperField("EDStdErr", FieldType.DOUBLE)
    EDVALUE__FIELD_NAME: WrapperField = WrapperField("EDValue", FieldType.DOUBLE)
    SERIESNAME__FIELD_NAME: WrapperField = WrapperField("SeriesName", FieldType.STRING)
    SUMMARYNAME__FIELD_NAME: WrapperField = WrapperField("SummaryName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EDStdErr_field(self, value: Optional[float]):
        """
        Set data field with field name 'EDStdErr' on this record model
        """
        self.set_field_value(self.EDSTDERR__FIELD_NAME.field_name, value)

    def get_EDStdErr_field(self) -> Optional[float]:
        """
        Get data field value with field name 'EDStdErr' from this record model
        """
        return self.get_field_value(self.EDSTDERR__FIELD_NAME.field_name)

    def set_EDValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'EDValue' on this record model
        """
        self.set_field_value(self.EDVALUE__FIELD_NAME.field_name, value)

    def get_EDValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'EDValue' from this record model
        """
        return self.get_field_value(self.EDVALUE__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SummaryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryName' on this record model
        """
        self.set_field_value(self.SUMMARYNAME__FIELD_NAME.field_name, value)

    def get_SummaryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryName' from this record model
        """
        return self.get_field_value(self.SUMMARYNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_GenericSummaryTableModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_GenericSummaryTable
    Data Type Display Name: Summary (Summary)
    Fields: CreatedBy, DataRecordName, DateCreated, SummaryName, SummaryValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AW_GenericSummaryTable'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SUMMARYNAME__FIELD_NAME: WrapperField = WrapperField("SummaryName", FieldType.STRING)
    SUMMARYVALUE__FIELD_NAME: WrapperField = WrapperField("SummaryValue", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SummaryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryName' on this record model
        """
        self.set_field_value(self.SUMMARYNAME__FIELD_NAME.field_name, value)

    def get_SummaryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryName' from this record model
        """
        return self.get_field_value(self.SUMMARYNAME__FIELD_NAME.field_name)

    def set_SummaryValue_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryValue' on this record model
        """
        self.set_field_value(self.SUMMARYVALUE__FIELD_NAME.field_name, value)

    def get_SummaryValue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryValue' from this record model
        """
        return self.get_field_value(self.SUMMARYVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_ProphetPredictionDFModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_ProphetPredictionDF
    Data Type Display Name: Prophet Prediction Frame (Prophet Prediction Frames)
    Fields: additive_terms, additive_terms_lower, additive_terms_upper, CreatedBy, daily, daily_lower, daily_upper, DataRecordName, DateCreated, ds, multiplicative_terms, multiplicative_terms_lower, multiplicative_terms_upper, trend, trend_lower, trend_upper, VeloxLastModifiedBy, VeloxLastModifiedDate, weekly, weekly_lower, weekly_upper, yhat, yhat_lower, yhat_upper
    """
    DATA_TYPE_NAME: str = 'AW_ProphetPredictionDF'
    ADDITIVE_TERMS__FIELD_NAME: WrapperField = WrapperField("additive_terms", FieldType.DOUBLE)
    ADDITIVE_TERMS_LOWER__FIELD_NAME: WrapperField = WrapperField("additive_terms_lower", FieldType.DOUBLE)
    ADDITIVE_TERMS_UPPER__FIELD_NAME: WrapperField = WrapperField("additive_terms_upper", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DAILY__FIELD_NAME: WrapperField = WrapperField("daily", FieldType.DOUBLE)
    DAILY_LOWER__FIELD_NAME: WrapperField = WrapperField("daily_lower", FieldType.DOUBLE)
    DAILY_UPPER__FIELD_NAME: WrapperField = WrapperField("daily_upper", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DS__FIELD_NAME: WrapperField = WrapperField("ds", FieldType.STRING)
    MULTIPLICATIVE_TERMS__FIELD_NAME: WrapperField = WrapperField("multiplicative_terms", FieldType.DOUBLE)
    MULTIPLICATIVE_TERMS_LOWER__FIELD_NAME: WrapperField = WrapperField("multiplicative_terms_lower", FieldType.DOUBLE)
    MULTIPLICATIVE_TERMS_UPPER__FIELD_NAME: WrapperField = WrapperField("multiplicative_terms_upper", FieldType.DOUBLE)
    TREND__FIELD_NAME: WrapperField = WrapperField("trend", FieldType.DOUBLE)
    TREND_LOWER__FIELD_NAME: WrapperField = WrapperField("trend_lower", FieldType.DOUBLE)
    TREND_UPPER__FIELD_NAME: WrapperField = WrapperField("trend_upper", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WEEKLY__FIELD_NAME: WrapperField = WrapperField("weekly", FieldType.DOUBLE)
    WEEKLY_LOWER__FIELD_NAME: WrapperField = WrapperField("weekly_lower", FieldType.DOUBLE)
    WEEKLY_UPPER__FIELD_NAME: WrapperField = WrapperField("weekly_upper", FieldType.DOUBLE)
    YHAT__FIELD_NAME: WrapperField = WrapperField("yhat", FieldType.DOUBLE)
    YHAT_LOWER__FIELD_NAME: WrapperField = WrapperField("yhat_lower", FieldType.DOUBLE)
    YHAT_UPPER__FIELD_NAME: WrapperField = WrapperField("yhat_upper", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_additive_terms_field(self, value: Optional[float]):
        """
        Set data field with field name 'additive_terms' on this record model
        """
        self.set_field_value(self.ADDITIVE_TERMS__FIELD_NAME.field_name, value)

    def get_additive_terms_field(self) -> Optional[float]:
        """
        Get data field value with field name 'additive_terms' from this record model
        """
        return self.get_field_value(self.ADDITIVE_TERMS__FIELD_NAME.field_name)

    def set_additive_terms_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'additive_terms_lower' on this record model
        """
        self.set_field_value(self.ADDITIVE_TERMS_LOWER__FIELD_NAME.field_name, value)

    def get_additive_terms_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'additive_terms_lower' from this record model
        """
        return self.get_field_value(self.ADDITIVE_TERMS_LOWER__FIELD_NAME.field_name)

    def set_additive_terms_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'additive_terms_upper' on this record model
        """
        self.set_field_value(self.ADDITIVE_TERMS_UPPER__FIELD_NAME.field_name, value)

    def get_additive_terms_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'additive_terms_upper' from this record model
        """
        return self.get_field_value(self.ADDITIVE_TERMS_UPPER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_daily_field(self, value: Optional[float]):
        """
        Set data field with field name 'daily' on this record model
        """
        self.set_field_value(self.DAILY__FIELD_NAME.field_name, value)

    def get_daily_field(self) -> Optional[float]:
        """
        Get data field value with field name 'daily' from this record model
        """
        return self.get_field_value(self.DAILY__FIELD_NAME.field_name)

    def set_daily_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'daily_lower' on this record model
        """
        self.set_field_value(self.DAILY_LOWER__FIELD_NAME.field_name, value)

    def get_daily_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'daily_lower' from this record model
        """
        return self.get_field_value(self.DAILY_LOWER__FIELD_NAME.field_name)

    def set_daily_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'daily_upper' on this record model
        """
        self.set_field_value(self.DAILY_UPPER__FIELD_NAME.field_name, value)

    def get_daily_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'daily_upper' from this record model
        """
        return self.get_field_value(self.DAILY_UPPER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ds_field(self, value: Optional[str]):
        """
        Set data field with field name 'ds' on this record model
        """
        self.set_field_value(self.DS__FIELD_NAME.field_name, value)

    def get_ds_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ds' from this record model
        """
        return self.get_field_value(self.DS__FIELD_NAME.field_name)

    def set_multiplicative_terms_field(self, value: Optional[float]):
        """
        Set data field with field name 'multiplicative_terms' on this record model
        """
        self.set_field_value(self.MULTIPLICATIVE_TERMS__FIELD_NAME.field_name, value)

    def get_multiplicative_terms_field(self) -> Optional[float]:
        """
        Get data field value with field name 'multiplicative_terms' from this record model
        """
        return self.get_field_value(self.MULTIPLICATIVE_TERMS__FIELD_NAME.field_name)

    def set_multiplicative_terms_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'multiplicative_terms_lower' on this record model
        """
        self.set_field_value(self.MULTIPLICATIVE_TERMS_LOWER__FIELD_NAME.field_name, value)

    def get_multiplicative_terms_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'multiplicative_terms_lower' from this record model
        """
        return self.get_field_value(self.MULTIPLICATIVE_TERMS_LOWER__FIELD_NAME.field_name)

    def set_multiplicative_terms_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'multiplicative_terms_upper' on this record model
        """
        self.set_field_value(self.MULTIPLICATIVE_TERMS_UPPER__FIELD_NAME.field_name, value)

    def get_multiplicative_terms_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'multiplicative_terms_upper' from this record model
        """
        return self.get_field_value(self.MULTIPLICATIVE_TERMS_UPPER__FIELD_NAME.field_name)

    def set_trend_field(self, value: Optional[float]):
        """
        Set data field with field name 'trend' on this record model
        """
        self.set_field_value(self.TREND__FIELD_NAME.field_name, value)

    def get_trend_field(self) -> Optional[float]:
        """
        Get data field value with field name 'trend' from this record model
        """
        return self.get_field_value(self.TREND__FIELD_NAME.field_name)

    def set_trend_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'trend_lower' on this record model
        """
        self.set_field_value(self.TREND_LOWER__FIELD_NAME.field_name, value)

    def get_trend_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'trend_lower' from this record model
        """
        return self.get_field_value(self.TREND_LOWER__FIELD_NAME.field_name)

    def set_trend_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'trend_upper' on this record model
        """
        self.set_field_value(self.TREND_UPPER__FIELD_NAME.field_name, value)

    def get_trend_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'trend_upper' from this record model
        """
        return self.get_field_value(self.TREND_UPPER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_weekly_field(self, value: Optional[float]):
        """
        Set data field with field name 'weekly' on this record model
        """
        self.set_field_value(self.WEEKLY__FIELD_NAME.field_name, value)

    def get_weekly_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weekly' from this record model
        """
        return self.get_field_value(self.WEEKLY__FIELD_NAME.field_name)

    def set_weekly_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'weekly_lower' on this record model
        """
        self.set_field_value(self.WEEKLY_LOWER__FIELD_NAME.field_name, value)

    def get_weekly_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weekly_lower' from this record model
        """
        return self.get_field_value(self.WEEKLY_LOWER__FIELD_NAME.field_name)

    def set_weekly_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'weekly_upper' on this record model
        """
        self.set_field_value(self.WEEKLY_UPPER__FIELD_NAME.field_name, value)

    def get_weekly_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weekly_upper' from this record model
        """
        return self.get_field_value(self.WEEKLY_UPPER__FIELD_NAME.field_name)

    def set_yhat_field(self, value: Optional[float]):
        """
        Set data field with field name 'yhat' on this record model
        """
        self.set_field_value(self.YHAT__FIELD_NAME.field_name, value)

    def get_yhat_field(self) -> Optional[float]:
        """
        Get data field value with field name 'yhat' from this record model
        """
        return self.get_field_value(self.YHAT__FIELD_NAME.field_name)

    def set_yhat_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'yhat_lower' on this record model
        """
        self.set_field_value(self.YHAT_LOWER__FIELD_NAME.field_name, value)

    def get_yhat_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'yhat_lower' from this record model
        """
        return self.get_field_value(self.YHAT_LOWER__FIELD_NAME.field_name)

    def set_yhat_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'yhat_upper' on this record model
        """
        self.set_field_value(self.YHAT_UPPER__FIELD_NAME.field_name, value)

    def get_yhat_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'yhat_upper' from this record model
        """
        return self.get_field_value(self.YHAT_UPPER__FIELD_NAME.field_name)


class AWSSageMakerClientConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AWSSageMakerClientConfig
    Data Type Display Name: AWS SageMaker Client Configuration (AWS SageMaker Client Configurations)
    Fields: AccessKeyId, CreatedBy, DataRecordName, DateCreated, Region, SecretKey, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'AWSSageMakerClientConfig'
    ACCESSKEYID__FIELD_NAME: WrapperField = WrapperField("AccessKeyId", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    REGION__FIELD_NAME: WrapperField = WrapperField("Region", FieldType.STRING)
    SECRETKEY__FIELD_NAME: WrapperField = WrapperField("SecretKey", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessKeyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessKeyId' on this record model
        """
        self.set_field_value(self.ACCESSKEYID__FIELD_NAME.field_name, value)

    def get_AccessKeyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessKeyId' from this record model
        """
        return self.get_field_value(self.ACCESSKEYID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Region_field(self, value: Optional[str]):
        """
        Set data field with field name 'Region' on this record model
        """
        self.set_field_value(self.REGION__FIELD_NAME.field_name, value)

    def get_Region_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Region' from this record model
        """
        return self.get_field_value(self.REGION__FIELD_NAME.field_name)

    def set_SecretKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecretKey' on this record model
        """
        self.set_field_value(self.SECRETKEY__FIELD_NAME.field_name, value)

    def get_SecretKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecretKey' from this record model
        """
        return self.get_field_value(self.SECRETKEY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BarcodeConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BarcodeConfig
    Data Type Display Name: Barcode Configuration (Barcode Configurations)
    Fields: BarcodeConfigName, CreatedBy, CustomPluginClassPath, DataRecordName, DataType, DateCreated, DefaultPrinter, Field1, Field2, Field3, Field4, Field5, Field6, Field7, Field8, Field9, Field10, VeloxLastModifiedBy, VeloxLastModifiedDate
    The Barcode Configurations Data Type
    """
    DATA_TYPE_NAME: str = 'BarcodeConfig'
    BARCODECONFIGNAME__FIELD_NAME: WrapperField = WrapperField("BarcodeConfigName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMPLUGINCLASSPATH__FIELD_NAME: WrapperField = WrapperField("CustomPluginClassPath", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEFAULTPRINTER__FIELD_NAME: WrapperField = WrapperField("DefaultPrinter", FieldType.SELECTION)
    FIELD1__FIELD_NAME: WrapperField = WrapperField("Field1", FieldType.SELECTION)
    FIELD2__FIELD_NAME: WrapperField = WrapperField("Field2", FieldType.SELECTION)
    FIELD3__FIELD_NAME: WrapperField = WrapperField("Field3", FieldType.SELECTION)
    FIELD4__FIELD_NAME: WrapperField = WrapperField("Field4", FieldType.SELECTION)
    FIELD5__FIELD_NAME: WrapperField = WrapperField("Field5", FieldType.SELECTION)
    FIELD6__FIELD_NAME: WrapperField = WrapperField("Field6", FieldType.SELECTION)
    FIELD7__FIELD_NAME: WrapperField = WrapperField("Field7", FieldType.SELECTION)
    FIELD8__FIELD_NAME: WrapperField = WrapperField("Field8", FieldType.SELECTION)
    FIELD9__FIELD_NAME: WrapperField = WrapperField("Field9", FieldType.SELECTION)
    FIELD10__FIELD_NAME: WrapperField = WrapperField("Field10", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BarcodeConfigName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BarcodeConfigName' on this record model
        """
        self.set_field_value(self.BARCODECONFIGNAME__FIELD_NAME.field_name, value)

    def get_BarcodeConfigName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BarcodeConfigName' from this record model
        """
        return self.get_field_value(self.BARCODECONFIGNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomPluginClassPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomPluginClassPath' on this record model
        """
        self.set_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name, value)

    def get_CustomPluginClassPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomPluginClassPath' from this record model
        """
        return self.get_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultPrinter_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultPrinter' on this record model
        """
        self.set_field_value(self.DEFAULTPRINTER__FIELD_NAME.field_name, value)

    def get_DefaultPrinter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultPrinter' from this record model
        """
        return self.get_field_value(self.DEFAULTPRINTER__FIELD_NAME.field_name)

    def set_Field1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field1' on this record model
        """
        self.set_field_value(self.FIELD1__FIELD_NAME.field_name, value)

    def get_Field1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field1' from this record model
        """
        return self.get_field_value(self.FIELD1__FIELD_NAME.field_name)

    def set_Field2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field2' on this record model
        """
        self.set_field_value(self.FIELD2__FIELD_NAME.field_name, value)

    def get_Field2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field2' from this record model
        """
        return self.get_field_value(self.FIELD2__FIELD_NAME.field_name)

    def set_Field3_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field3' on this record model
        """
        self.set_field_value(self.FIELD3__FIELD_NAME.field_name, value)

    def get_Field3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field3' from this record model
        """
        return self.get_field_value(self.FIELD3__FIELD_NAME.field_name)

    def set_Field4_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field4' on this record model
        """
        self.set_field_value(self.FIELD4__FIELD_NAME.field_name, value)

    def get_Field4_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field4' from this record model
        """
        return self.get_field_value(self.FIELD4__FIELD_NAME.field_name)

    def set_Field5_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field5' on this record model
        """
        self.set_field_value(self.FIELD5__FIELD_NAME.field_name, value)

    def get_Field5_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field5' from this record model
        """
        return self.get_field_value(self.FIELD5__FIELD_NAME.field_name)

    def set_Field6_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field6' on this record model
        """
        self.set_field_value(self.FIELD6__FIELD_NAME.field_name, value)

    def get_Field6_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field6' from this record model
        """
        return self.get_field_value(self.FIELD6__FIELD_NAME.field_name)

    def set_Field7_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field7' on this record model
        """
        self.set_field_value(self.FIELD7__FIELD_NAME.field_name, value)

    def get_Field7_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field7' from this record model
        """
        return self.get_field_value(self.FIELD7__FIELD_NAME.field_name)

    def set_Field8_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field8' on this record model
        """
        self.set_field_value(self.FIELD8__FIELD_NAME.field_name, value)

    def get_Field8_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field8' from this record model
        """
        return self.get_field_value(self.FIELD8__FIELD_NAME.field_name)

    def set_Field9_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field9' on this record model
        """
        self.set_field_value(self.FIELD9__FIELD_NAME.field_name, value)

    def get_Field9_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field9' from this record model
        """
        return self.get_field_value(self.FIELD9__FIELD_NAME.field_name)

    def set_Field10_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field10' on this record model
        """
        self.set_field_value(self.FIELD10__FIELD_NAME.field_name, value)

    def get_Field10_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field10' from this record model
        """
        return self.get_field_value(self.FIELD10__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class Basic3DScatterDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Basic3DScatterData
    Data Type Display Name: Basic 3D Scatter Datum (Basic 3D Scatter Data)
    Fields: CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate, x, y, z
    """
    DATA_TYPE_NAME: str = 'Basic3DScatterData'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    X__FIELD_NAME: WrapperField = WrapperField("x", FieldType.DOUBLE)
    Y__FIELD_NAME: WrapperField = WrapperField("y", FieldType.DOUBLE)
    Z__FIELD_NAME: WrapperField = WrapperField("z", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_x_field(self, value: Optional[float]):
        """
        Set data field with field name 'x' on this record model
        """
        self.set_field_value(self.X__FIELD_NAME.field_name, value)

    def get_x_field(self) -> Optional[float]:
        """
        Get data field value with field name 'x' from this record model
        """
        return self.get_field_value(self.X__FIELD_NAME.field_name)

    def set_y_field(self, value: Optional[float]):
        """
        Set data field with field name 'y' on this record model
        """
        self.set_field_value(self.Y__FIELD_NAME.field_name, value)

    def get_y_field(self) -> Optional[float]:
        """
        Get data field value with field name 'y' from this record model
        """
        return self.get_field_value(self.Y__FIELD_NAME.field_name)

    def set_z_field(self, value: Optional[float]):
        """
        Set data field with field name 'z' on this record model
        """
        self.set_field_value(self.Z__FIELD_NAME.field_name, value)

    def get_z_field(self) -> Optional[float]:
        """
        Get data field value with field name 'z' from this record model
        """
        return self.get_field_value(self.Z__FIELD_NAME.field_name)


class BasicIsoSurfacePlotExampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BasicIsoSurfacePlotExample
    Data Type Display Name: Basic Iso Surface Plot Example (Basic Iso Surface Plot Examples)
    Fields: CreatedBy, DataRecordName, DateCreated, Svalue, VeloxLastModifiedBy, VeloxLastModifiedDate, x, y, z
    """
    DATA_TYPE_NAME: str = 'BasicIsoSurfacePlotExample'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SVALUE__FIELD_NAME: WrapperField = WrapperField("Svalue", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    X__FIELD_NAME: WrapperField = WrapperField("x", FieldType.DOUBLE)
    Y__FIELD_NAME: WrapperField = WrapperField("y", FieldType.DOUBLE)
    Z__FIELD_NAME: WrapperField = WrapperField("z", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Svalue_field(self, value: Optional[float]):
        """
        Set data field with field name 'Svalue' on this record model
        """
        self.set_field_value(self.SVALUE__FIELD_NAME.field_name, value)

    def get_Svalue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Svalue' from this record model
        """
        return self.get_field_value(self.SVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_x_field(self, value: Optional[float]):
        """
        Set data field with field name 'x' on this record model
        """
        self.set_field_value(self.X__FIELD_NAME.field_name, value)

    def get_x_field(self) -> Optional[float]:
        """
        Get data field value with field name 'x' from this record model
        """
        return self.get_field_value(self.X__FIELD_NAME.field_name)

    def set_y_field(self, value: Optional[float]):
        """
        Set data field with field name 'y' on this record model
        """
        self.set_field_value(self.Y__FIELD_NAME.field_name, value)

    def get_y_field(self) -> Optional[float]:
        """
        Get data field value with field name 'y' from this record model
        """
        return self.get_field_value(self.Y__FIELD_NAME.field_name)

    def set_z_field(self, value: Optional[float]):
        """
        Set data field with field name 'z' on this record model
        """
        self.set_field_value(self.Z__FIELD_NAME.field_name, value)

    def get_z_field(self) -> Optional[float]:
        """
        Get data field value with field name 'z' from this record model
        """
        return self.get_field_value(self.Z__FIELD_NAME.field_name)


class BatchModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Batch
    Data Type Display Name: Batch (Batches)
    Fields: AssignedTo, BatchId, BatchName, CreatedBy, DataRecordName, DateCreated, ExemplarBatchStatus, NumberOfSamples, PriorityLevel, StartDate, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkflowName
    """
    DATA_TYPE_NAME: str = 'Batch'
    ASSIGNEDTO__FIELD_NAME: WrapperField = WrapperField("AssignedTo", FieldType.SELECTION)
    BATCHID__FIELD_NAME: WrapperField = WrapperField("BatchId", FieldType.STRING)
    BATCHNAME__FIELD_NAME: WrapperField = WrapperField("BatchName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXEMPLARBATCHSTATUS__FIELD_NAME: WrapperField = WrapperField("ExemplarBatchStatus", FieldType.SELECTION)
    NUMBEROFSAMPLES__FIELD_NAME: WrapperField = WrapperField("NumberOfSamples", FieldType.LONG)
    PRIORITYLEVEL__FIELD_NAME: WrapperField = WrapperField("PriorityLevel", FieldType.PICKLIST)
    STARTDATE__FIELD_NAME: WrapperField = WrapperField("StartDate", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowName", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedTo_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedTo' on this record model
        """
        self.set_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name, value)

    def get_AssignedTo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedTo' from this record model
        """
        return self.get_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name)

    def set_BatchId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BatchId' on this record model
        """
        self.set_field_value(self.BATCHID__FIELD_NAME.field_name, value)

    def get_BatchId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BatchId' from this record model
        """
        return self.get_field_value(self.BATCHID__FIELD_NAME.field_name)

    def set_BatchName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BatchName' on this record model
        """
        self.set_field_value(self.BATCHNAME__FIELD_NAME.field_name, value)

    def get_BatchName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BatchName' from this record model
        """
        return self.get_field_value(self.BATCHNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarBatchStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarBatchStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARBATCHSTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarBatchStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarBatchStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARBATCHSTATUS__FIELD_NAME.field_name)

    def set_NumberOfSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSamples' on this record model
        """
        self.set_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name, value)

    def get_NumberOfSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSamples' from this record model
        """
        return self.get_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name)

    def set_PriorityLevel_field(self, value: Optional[str]):
        """
        Set data field with field name 'PriorityLevel' on this record model
        """
        self.set_field_value(self.PRIORITYLEVEL__FIELD_NAME.field_name, value)

    def get_PriorityLevel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PriorityLevel' from this record model
        """
        return self.get_field_value(self.PRIORITYLEVEL__FIELD_NAME.field_name)

    def set_StartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDate' on this record model
        """
        self.set_field_value(self.STARTDATE__FIELD_NAME.field_name, value)

    def get_StartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDate' from this record model
        """
        return self.get_field_value(self.STARTDATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class BioAnalyzerResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioAnalyzerResult
    Data Type Display Name: BioAnalyzer Result (BioAnalyzer Results)
    Fields: Area, AvgBPSize, CreatedBy, DataRecordName, DateCreated, Molarity, MolarityUnits, PeakRegionIdentifier, PeakValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'BioAnalyzerResult'
    AREA__FIELD_NAME: WrapperField = WrapperField("Area", FieldType.DOUBLE)
    AVGBPSIZE__FIELD_NAME: WrapperField = WrapperField("AvgBPSize", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MOLARITY__FIELD_NAME: WrapperField = WrapperField("Molarity", FieldType.DOUBLE)
    MOLARITYUNITS__FIELD_NAME: WrapperField = WrapperField("MolarityUnits", FieldType.STRING)
    PEAKREGIONIDENTIFIER__FIELD_NAME: WrapperField = WrapperField("PeakRegionIdentifier", FieldType.STRING)
    PEAKVALUE__FIELD_NAME: WrapperField = WrapperField("PeakValue", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_AvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBPSize' on this record model
        """
        self.set_field_value(self.AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_AvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBPSize' from this record model
        """
        return self.get_field_value(self.AVGBPSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_PeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_PeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def set_PeakValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValue' on this record model
        """
        self.set_field_value(self.PEAKVALUE__FIELD_NAME.field_name, value)

    def get_PeakValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValue' from this record model
        """
        return self.get_field_value(self.PEAKVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BioConjugateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioConjugate
    Data Type Display Name: Bio Conjugate (Bio Conjugates)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, LotNumber, RegistryId, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'BioConjugate'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class BioConjugatePartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioConjugatePart
    Data Type Display Name: Bio Conjugate Part (Bio Conjugate Parts)
    Fields: ChemicalProperties, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, HELM, HELMHash, MultiParentLink152, MultiParentLink201, MultiParentLink276, QuantityOnHand, QuantityPerItem, RegistryId, ReorderLevelQuantity, Sequence, SequenceHash, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'BioConjugatePart'
    CHEMICALPROPERTIES__FIELD_NAME: WrapperField = WrapperField("ChemicalProperties", FieldType.SIDE_LINK)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    HELMHASH__FIELD_NAME: WrapperField = WrapperField("HELMHash", FieldType.STRING)
    MULTIPARENTLINK152__FIELD_NAME: WrapperField = WrapperField("MultiParentLink152", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK201__FIELD_NAME: WrapperField = WrapperField("MultiParentLink201", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK276__FIELD_NAME: WrapperField = WrapperField("MultiParentLink276", FieldType.MULTIPARENTLINK)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    SEQUENCE__FIELD_NAME: WrapperField = WrapperField("Sequence", FieldType.STRING)
    SEQUENCEHASH__FIELD_NAME: WrapperField = WrapperField("SequenceHash", FieldType.STRING)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class BioRadResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioRadResult
    Data Type Display Name: Bio-Rad qPCR Result (Bio-Rad qPCR Results)
    Fields: BiologicalSetName, Content, Cq, CqMean, CqStdDev, CreatedBy, DataRecordName, DateCreated, Fluor, LogStartingQuantity, SetPoint, SQMean, SQStdDev, Target, VeloxLastModifiedBy, VeloxLastModifiedDate, WellNote
    """
    DATA_TYPE_NAME: str = 'BioRadResult'
    BIOLOGICALSETNAME__FIELD_NAME: WrapperField = WrapperField("BiologicalSetName", FieldType.STRING)
    CONTENT__FIELD_NAME: WrapperField = WrapperField("Content", FieldType.STRING)
    CQ__FIELD_NAME: WrapperField = WrapperField("Cq", FieldType.DOUBLE)
    CQMEAN__FIELD_NAME: WrapperField = WrapperField("CqMean", FieldType.DOUBLE)
    CQSTDDEV__FIELD_NAME: WrapperField = WrapperField("CqStdDev", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FLUOR__FIELD_NAME: WrapperField = WrapperField("Fluor", FieldType.STRING)
    LOGSTARTINGQUANTITY__FIELD_NAME: WrapperField = WrapperField("LogStartingQuantity", FieldType.DOUBLE)
    SETPOINT__FIELD_NAME: WrapperField = WrapperField("SetPoint", FieldType.DOUBLE)
    SQMEAN__FIELD_NAME: WrapperField = WrapperField("SQMean", FieldType.DOUBLE)
    SQSTDDEV__FIELD_NAME: WrapperField = WrapperField("SQStdDev", FieldType.DOUBLE)
    TARGET__FIELD_NAME: WrapperField = WrapperField("Target", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELLNOTE__FIELD_NAME: WrapperField = WrapperField("WellNote", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BiologicalSetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalSetName' on this record model
        """
        self.set_field_value(self.BIOLOGICALSETNAME__FIELD_NAME.field_name, value)

    def get_BiologicalSetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalSetName' from this record model
        """
        return self.get_field_value(self.BIOLOGICALSETNAME__FIELD_NAME.field_name)

    def set_Content_field(self, value: Optional[str]):
        """
        Set data field with field name 'Content' on this record model
        """
        self.set_field_value(self.CONTENT__FIELD_NAME.field_name, value)

    def get_Content_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Content' from this record model
        """
        return self.get_field_value(self.CONTENT__FIELD_NAME.field_name)

    def set_Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Cq' on this record model
        """
        self.set_field_value(self.CQ__FIELD_NAME.field_name, value)

    def get_Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Cq' from this record model
        """
        return self.get_field_value(self.CQ__FIELD_NAME.field_name)

    def set_CqMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqMean' on this record model
        """
        self.set_field_value(self.CQMEAN__FIELD_NAME.field_name, value)

    def get_CqMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqMean' from this record model
        """
        return self.get_field_value(self.CQMEAN__FIELD_NAME.field_name)

    def set_CqStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqStdDev' on this record model
        """
        self.set_field_value(self.CQSTDDEV__FIELD_NAME.field_name, value)

    def get_CqStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqStdDev' from this record model
        """
        return self.get_field_value(self.CQSTDDEV__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Fluor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Fluor' on this record model
        """
        self.set_field_value(self.FLUOR__FIELD_NAME.field_name, value)

    def get_Fluor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Fluor' from this record model
        """
        return self.get_field_value(self.FLUOR__FIELD_NAME.field_name)

    def set_LogStartingQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogStartingQuantity' on this record model
        """
        self.set_field_value(self.LOGSTARTINGQUANTITY__FIELD_NAME.field_name, value)

    def get_LogStartingQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogStartingQuantity' from this record model
        """
        return self.get_field_value(self.LOGSTARTINGQUANTITY__FIELD_NAME.field_name)

    def set_SetPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'SetPoint' on this record model
        """
        self.set_field_value(self.SETPOINT__FIELD_NAME.field_name, value)

    def get_SetPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SetPoint' from this record model
        """
        return self.get_field_value(self.SETPOINT__FIELD_NAME.field_name)

    def set_SQMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQMean' on this record model
        """
        self.set_field_value(self.SQMEAN__FIELD_NAME.field_name, value)

    def get_SQMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQMean' from this record model
        """
        return self.get_field_value(self.SQMEAN__FIELD_NAME.field_name)

    def set_SQStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQStdDev' on this record model
        """
        self.set_field_value(self.SQSTDDEV__FIELD_NAME.field_name, value)

    def get_SQStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQStdDev' from this record model
        """
        return self.get_field_value(self.SQSTDDEV__FIELD_NAME.field_name)

    def set_Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Target' on this record model
        """
        self.set_field_value(self.TARGET__FIELD_NAME.field_name, value)

    def get_Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Target' from this record model
        """
        return self.get_field_value(self.TARGET__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellNote_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellNote' on this record model
        """
        self.set_field_value(self.WELLNOTE__FIELD_NAME.field_name, value)

    def get_WellNote_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellNote' from this record model
        """
        return self.get_field_value(self.WELLNOTE__FIELD_NAME.field_name)


class BioRegSeqAnnotationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioRegSeqAnnotation
    Data Type Display Name: Bio Reg Seq Annotation (Bio Reg Seq Annotations)
    Fields: AnnotationType, Chromosome, CreatedBy, DataRecordName, DateCreated, db_xref, EndPosition, Experiment, Gene, Label, LocusTag, NCBIFunction, NegativeStrand, Note, Operon, Organism, Product, ProteinId, StandardName, StartPosition, VeloxLastModifiedBy, VeloxLastModifiedDate
    Includes useful annotations imported via NCBI Genbank file feature format.
https://www.insdc.org/submitting-standards/feature-table/
    """
    DATA_TYPE_NAME: str = 'BioRegSeqAnnotation'
    ANNOTATIONTYPE__FIELD_NAME: WrapperField = WrapperField("AnnotationType", FieldType.STRING)
    CHROMOSOME__FIELD_NAME: WrapperField = WrapperField("Chromosome", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DB_XREF__FIELD_NAME: WrapperField = WrapperField("db_xref", FieldType.STRING)
    ENDPOSITION__FIELD_NAME: WrapperField = WrapperField("EndPosition", FieldType.LONG)
    EXPERIMENT__FIELD_NAME: WrapperField = WrapperField("Experiment", FieldType.STRING)
    GENE__FIELD_NAME: WrapperField = WrapperField("Gene", FieldType.STRING)
    LABEL__FIELD_NAME: WrapperField = WrapperField("Label", FieldType.STRING)
    LOCUSTAG__FIELD_NAME: WrapperField = WrapperField("LocusTag", FieldType.STRING)
    NCBIFUNCTION__FIELD_NAME: WrapperField = WrapperField("NCBIFunction", FieldType.STRING)
    NEGATIVESTRAND__FIELD_NAME: WrapperField = WrapperField("NegativeStrand", FieldType.BOOLEAN)
    NOTE__FIELD_NAME: WrapperField = WrapperField("Note", FieldType.STRING)
    OPERON__FIELD_NAME: WrapperField = WrapperField("Operon", FieldType.STRING)
    ORGANISM__FIELD_NAME: WrapperField = WrapperField("Organism", FieldType.STRING)
    PRODUCT__FIELD_NAME: WrapperField = WrapperField("Product", FieldType.STRING)
    PROTEINID__FIELD_NAME: WrapperField = WrapperField("ProteinId", FieldType.STRING)
    STANDARDNAME__FIELD_NAME: WrapperField = WrapperField("StandardName", FieldType.STRING)
    STARTPOSITION__FIELD_NAME: WrapperField = WrapperField("StartPosition", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnnotationType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnnotationType' on this record model
        """
        self.set_field_value(self.ANNOTATIONTYPE__FIELD_NAME.field_name, value)

    def get_AnnotationType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnnotationType' from this record model
        """
        return self.get_field_value(self.ANNOTATIONTYPE__FIELD_NAME.field_name)

    def set_Chromosome_field(self, value: Optional[str]):
        """
        Set data field with field name 'Chromosome' on this record model
        """
        self.set_field_value(self.CHROMOSOME__FIELD_NAME.field_name, value)

    def get_Chromosome_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Chromosome' from this record model
        """
        return self.get_field_value(self.CHROMOSOME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_db_xref_field(self, value: Optional[str]):
        """
        Set data field with field name 'db_xref' on this record model
        """
        self.set_field_value(self.DB_XREF__FIELD_NAME.field_name, value)

    def get_db_xref_field(self) -> Optional[str]:
        """
        Get data field value with field name 'db_xref' from this record model
        """
        return self.get_field_value(self.DB_XREF__FIELD_NAME.field_name)

    def set_EndPosition_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndPosition' on this record model
        """
        self.set_field_value(self.ENDPOSITION__FIELD_NAME.field_name, value)

    def get_EndPosition_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndPosition' from this record model
        """
        return self.get_field_value(self.ENDPOSITION__FIELD_NAME.field_name)

    def set_Experiment_field(self, value: Optional[str]):
        """
        Set data field with field name 'Experiment' on this record model
        """
        self.set_field_value(self.EXPERIMENT__FIELD_NAME.field_name, value)

    def get_Experiment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Experiment' from this record model
        """
        return self.get_field_value(self.EXPERIMENT__FIELD_NAME.field_name)

    def set_Gene_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gene' on this record model
        """
        self.set_field_value(self.GENE__FIELD_NAME.field_name, value)

    def get_Gene_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gene' from this record model
        """
        return self.get_field_value(self.GENE__FIELD_NAME.field_name)

    def set_Label_field(self, value: Optional[str]):
        """
        Set data field with field name 'Label' on this record model
        """
        self.set_field_value(self.LABEL__FIELD_NAME.field_name, value)

    def get_Label_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Label' from this record model
        """
        return self.get_field_value(self.LABEL__FIELD_NAME.field_name)

    def set_LocusTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'LocusTag' on this record model
        """
        self.set_field_value(self.LOCUSTAG__FIELD_NAME.field_name, value)

    def get_LocusTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LocusTag' from this record model
        """
        return self.get_field_value(self.LOCUSTAG__FIELD_NAME.field_name)

    def set_NCBIFunction_field(self, value: Optional[str]):
        """
        Set data field with field name 'NCBIFunction' on this record model
        """
        self.set_field_value(self.NCBIFUNCTION__FIELD_NAME.field_name, value)

    def get_NCBIFunction_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NCBIFunction' from this record model
        """
        return self.get_field_value(self.NCBIFUNCTION__FIELD_NAME.field_name)

    def set_NegativeStrand_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NegativeStrand' on this record model
        """
        self.set_field_value(self.NEGATIVESTRAND__FIELD_NAME.field_name, value)

    def get_NegativeStrand_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NegativeStrand' from this record model
        """
        return self.get_field_value(self.NEGATIVESTRAND__FIELD_NAME.field_name)

    def set_Note_field(self, value: Optional[str]):
        """
        Set data field with field name 'Note' on this record model
        """
        self.set_field_value(self.NOTE__FIELD_NAME.field_name, value)

    def get_Note_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Note' from this record model
        """
        return self.get_field_value(self.NOTE__FIELD_NAME.field_name)

    def set_Operon_field(self, value: Optional[str]):
        """
        Set data field with field name 'Operon' on this record model
        """
        self.set_field_value(self.OPERON__FIELD_NAME.field_name, value)

    def get_Operon_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Operon' from this record model
        """
        return self.get_field_value(self.OPERON__FIELD_NAME.field_name)

    def set_Organism_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organism' on this record model
        """
        self.set_field_value(self.ORGANISM__FIELD_NAME.field_name, value)

    def get_Organism_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organism' from this record model
        """
        return self.get_field_value(self.ORGANISM__FIELD_NAME.field_name)

    def set_Product_field(self, value: Optional[str]):
        """
        Set data field with field name 'Product' on this record model
        """
        self.set_field_value(self.PRODUCT__FIELD_NAME.field_name, value)

    def get_Product_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Product' from this record model
        """
        return self.get_field_value(self.PRODUCT__FIELD_NAME.field_name)

    def set_ProteinId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProteinId' on this record model
        """
        self.set_field_value(self.PROTEINID__FIELD_NAME.field_name, value)

    def get_ProteinId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProteinId' from this record model
        """
        return self.get_field_value(self.PROTEINID__FIELD_NAME.field_name)

    def set_StandardName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StandardName' on this record model
        """
        self.set_field_value(self.STANDARDNAME__FIELD_NAME.field_name, value)

    def get_StandardName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StandardName' from this record model
        """
        return self.get_field_value(self.STANDARDNAME__FIELD_NAME.field_name)

    def set_StartPosition_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartPosition' on this record model
        """
        self.set_field_value(self.STARTPOSITION__FIELD_NAME.field_name, value)

    def get_StartPosition_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartPosition' from this record model
        """
        return self.get_field_value(self.STARTPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BioRegSequenceTypeSettingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioRegSequenceTypeSetting
    Data Type Display Name: Bio Reg Sequence Type Setting (Bio Reg Sequence Type Settings)
    Fields: AutoRegisterChildType, CreatedBy, DataRecordName, DateCreated, DisableDuplicateCheck, DisableSequenceValiation, InheritParentRegistryID, RegistrationIDPrefix, RegistryDataType, RegistryIdPaddingDigits, SequenceDataField, SequenceType, UniqueDataFields, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'BioRegSequenceTypeSetting'
    AUTOREGISTERCHILDTYPE__FIELD_NAME: WrapperField = WrapperField("AutoRegisterChildType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISABLEDUPLICATECHECK__FIELD_NAME: WrapperField = WrapperField("DisableDuplicateCheck", FieldType.BOOLEAN)
    DISABLESEQUENCEVALIATION__FIELD_NAME: WrapperField = WrapperField("DisableSequenceValiation", FieldType.BOOLEAN)
    INHERITPARENTREGISTRYID__FIELD_NAME: WrapperField = WrapperField("InheritParentRegistryID", FieldType.BOOLEAN)
    REGISTRATIONIDPREFIX__FIELD_NAME: WrapperField = WrapperField("RegistrationIDPrefix", FieldType.STRING)
    REGISTRYDATATYPE__FIELD_NAME: WrapperField = WrapperField("RegistryDataType", FieldType.SELECTION)
    REGISTRYIDPADDINGDIGITS__FIELD_NAME: WrapperField = WrapperField("RegistryIdPaddingDigits", FieldType.INTEGER)
    SEQUENCEDATAFIELD__FIELD_NAME: WrapperField = WrapperField("SequenceDataField", FieldType.SELECTION)
    SEQUENCETYPE__FIELD_NAME: WrapperField = WrapperField("SequenceType", FieldType.PICKLIST)
    UNIQUEDATAFIELDS__FIELD_NAME: WrapperField = WrapperField("UniqueDataFields", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AutoRegisterChildType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AutoRegisterChildType' on this record model
        """
        self.set_field_value(self.AUTOREGISTERCHILDTYPE__FIELD_NAME.field_name, value)

    def get_AutoRegisterChildType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AutoRegisterChildType' from this record model
        """
        return self.get_field_value(self.AUTOREGISTERCHILDTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisableDuplicateCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableDuplicateCheck' on this record model
        """
        self.set_field_value(self.DISABLEDUPLICATECHECK__FIELD_NAME.field_name, value)

    def get_DisableDuplicateCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableDuplicateCheck' from this record model
        """
        return self.get_field_value(self.DISABLEDUPLICATECHECK__FIELD_NAME.field_name)

    def set_DisableSequenceValiation_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableSequenceValiation' on this record model
        """
        self.set_field_value(self.DISABLESEQUENCEVALIATION__FIELD_NAME.field_name, value)

    def get_DisableSequenceValiation_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableSequenceValiation' from this record model
        """
        return self.get_field_value(self.DISABLESEQUENCEVALIATION__FIELD_NAME.field_name)

    def set_InheritParentRegistryID_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritParentRegistryID' on this record model
        """
        self.set_field_value(self.INHERITPARENTREGISTRYID__FIELD_NAME.field_name, value)

    def get_InheritParentRegistryID_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritParentRegistryID' from this record model
        """
        return self.get_field_value(self.INHERITPARENTREGISTRYID__FIELD_NAME.field_name)

    def set_RegistrationIDPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistrationIDPrefix' on this record model
        """
        self.set_field_value(self.REGISTRATIONIDPREFIX__FIELD_NAME.field_name, value)

    def get_RegistrationIDPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistrationIDPrefix' from this record model
        """
        return self.get_field_value(self.REGISTRATIONIDPREFIX__FIELD_NAME.field_name)

    def set_RegistryDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryDataType' on this record model
        """
        self.set_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name, value)

    def get_RegistryDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryDataType' from this record model
        """
        return self.get_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name)

    def set_RegistryIdPaddingDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'RegistryIdPaddingDigits' on this record model
        """
        self.set_field_value(self.REGISTRYIDPADDINGDIGITS__FIELD_NAME.field_name, value)

    def get_RegistryIdPaddingDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RegistryIdPaddingDigits' from this record model
        """
        return self.get_field_value(self.REGISTRYIDPADDINGDIGITS__FIELD_NAME.field_name)

    def set_SequenceDataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceDataField' on this record model
        """
        self.set_field_value(self.SEQUENCEDATAFIELD__FIELD_NAME.field_name, value)

    def get_SequenceDataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceDataField' from this record model
        """
        return self.get_field_value(self.SEQUENCEDATAFIELD__FIELD_NAME.field_name)

    def set_SequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceType' on this record model
        """
        self.set_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_SequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceType' from this record model
        """
        return self.get_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name)

    def set_UniqueDataFields_field(self, value: Optional[str]):
        """
        Set data field with field name 'UniqueDataFields' on this record model
        """
        self.set_field_value(self.UNIQUEDATAFIELDS__FIELD_NAME.field_name, value)

    def get_UniqueDataFields_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UniqueDataFields' from this record model
        """
        return self.get_field_value(self.UNIQUEDATAFIELDS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BioSpecResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioSpecResult
    Data Type Display Name: BioSpec Result (BioSpec Results)
    Fields: A260230, A260280, CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'BioSpecResult'
    A260230__FIELD_NAME: WrapperField = WrapperField("A260230", FieldType.DOUBLE)
    A260280__FIELD_NAME: WrapperField = WrapperField("A260280", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BloodModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Blood
    Data Type Display Name: Blood (Bloods)
    Fields: CreatedBy, DataRecordName, DateCreated, DrawSite, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Blood'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DRAWSITE__FIELD_NAME: WrapperField = WrapperField("DrawSite", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DrawSite_field(self, value: Optional[str]):
        """
        Set data field with field name 'DrawSite' on this record model
        """
        self.set_field_value(self.DRAWSITE__FIELD_NAME.field_name, value)

    def get_DrawSite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DrawSite' from this record model
        """
        return self.get_field_value(self.DRAWSITE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BodyMassModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BodyMass
    Data Type Display Name: Body Mass (Body Masses)
    Fields: CreatedBy, DataRecordName, DateCreated, Mass, MassUnits, ObservationInstrument, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'BodyMass'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MASS__FIELD_NAME: WrapperField = WrapperField("Mass", FieldType.DOUBLE)
    MASSUNITS__FIELD_NAME: WrapperField = WrapperField("MassUnits", FieldType.PICKLIST)
    OBSERVATIONINSTRUMENT__FIELD_NAME: WrapperField = WrapperField("ObservationInstrument", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Mass_field(self, value: Optional[float]):
        """
        Set data field with field name 'Mass' on this record model
        """
        self.set_field_value(self.MASS__FIELD_NAME.field_name, value)

    def get_Mass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Mass' from this record model
        """
        return self.get_field_value(self.MASS__FIELD_NAME.field_name)

    def set_MassUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MassUnits' on this record model
        """
        self.set_field_value(self.MASSUNITS__FIELD_NAME.field_name, value)

    def get_MassUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MassUnits' from this record model
        """
        return self.get_field_value(self.MASSUNITS__FIELD_NAME.field_name)

    def set_ObservationInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservationInstrument' on this record model
        """
        self.set_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name, value)

    def get_ObservationInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservationInstrument' from this record model
        """
        return self.get_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BrainTissueModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BrainTissue
    Data Type Display Name: Brain Tissue (Brain Tissues)
    Fields: BrainTissueType, CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'BrainTissue'
    BRAINTISSUETYPE__FIELD_NAME: WrapperField = WrapperField("BrainTissueType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BrainTissueType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BrainTissueType' on this record model
        """
        self.set_field_value(self.BRAINTISSUETYPE__FIELD_NAME.field_name, value)

    def get_BrainTissueType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BrainTissueType' from this record model
        """
        return self.get_field_value(self.BRAINTISSUETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class C_SapioCon23Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type C_SapioCon23
    Data Type Display Name: SAPIOCON 23 (SAPIOCON 23)
    Fields: C_DisplayName, C_ExampleSelectionList, C_HomeWorld, C_SapioConComments, CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'C_SapioCon23'
    C_DISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("C_DisplayName", FieldType.STRING)
    C_EXAMPLESELECTIONLIST__FIELD_NAME: WrapperField = WrapperField("C_ExampleSelectionList", FieldType.SELECTION)
    C_HOMEWORLD__FIELD_NAME: WrapperField = WrapperField("C_HomeWorld", FieldType.SELECTION)
    C_SAPIOCONCOMMENTS__FIELD_NAME: WrapperField = WrapperField("C_SapioConComments", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_C_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_DisplayName' on this record model
        """
        self.set_field_value(self.C_DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_C_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_DisplayName' from this record model
        """
        return self.get_field_value(self.C_DISPLAYNAME__FIELD_NAME.field_name)

    def set_C_ExampleSelectionList_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_ExampleSelectionList' on this record model
        """
        self.set_field_value(self.C_EXAMPLESELECTIONLIST__FIELD_NAME.field_name, value)

    def get_C_ExampleSelectionList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_ExampleSelectionList' from this record model
        """
        return self.get_field_value(self.C_EXAMPLESELECTIONLIST__FIELD_NAME.field_name)

    def set_C_HomeWorld_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_HomeWorld' on this record model
        """
        self.set_field_value(self.C_HOMEWORLD__FIELD_NAME.field_name, value)

    def get_C_HomeWorld_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_HomeWorld' from this record model
        """
        return self.get_field_value(self.C_HOMEWORLD__FIELD_NAME.field_name)

    def set_C_SapioConComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_SapioConComments' on this record model
        """
        self.set_field_value(self.C_SAPIOCONCOMMENTS__FIELD_NAME.field_name, value)

    def get_C_SapioConComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_SapioConComments' from this record model
        """
        return self.get_field_value(self.C_SAPIOCONCOMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class C_SapioConTestModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type C_SapioConTest
    Data Type Display Name: Sapio Con Test (Sapio Con Tests)
    Fields: CreatedBy, DataRecordName, DateCreated, Description, Name, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'C_SapioConTest'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLConfig
    Data Type Display Name: Complex Data Loader Config (Complex Data Loader Configs)
    Fields: ConfigurationName, CreatedBy, DataRecordName, DataTypeName, DataTypeRules, DataTypeRules2, DateCreated, ExplicitlyMapped, IdentifierType, Options, Options2, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'CDLConfig'
    CONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("ConfigurationName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPENAME__FIELD_NAME: WrapperField = WrapperField("DataTypeName", FieldType.SELECTION)
    DATATYPERULES__FIELD_NAME: WrapperField = WrapperField("DataTypeRules", FieldType.SELECTION)
    DATATYPERULES2__FIELD_NAME: WrapperField = WrapperField("DataTypeRules2", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPLICITLYMAPPED__FIELD_NAME: WrapperField = WrapperField("ExplicitlyMapped", FieldType.BOOLEAN)
    IDENTIFIERTYPE__FIELD_NAME: WrapperField = WrapperField("IdentifierType", FieldType.SELECTION)
    OPTIONS__FIELD_NAME: WrapperField = WrapperField("Options", FieldType.SELECTION)
    OPTIONS2__FIELD_NAME: WrapperField = WrapperField("Options2", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def set_DataTypeRules_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeRules' on this record model
        """
        self.set_field_value(self.DATATYPERULES__FIELD_NAME.field_name, value)

    def get_DataTypeRules_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeRules' from this record model
        """
        return self.get_field_value(self.DATATYPERULES__FIELD_NAME.field_name)

    def set_DataTypeRules2_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeRules2' on this record model
        """
        self.set_field_value(self.DATATYPERULES2__FIELD_NAME.field_name, value)

    def get_DataTypeRules2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeRules2' from this record model
        """
        return self.get_field_value(self.DATATYPERULES2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExplicitlyMapped_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ExplicitlyMapped' on this record model
        """
        self.set_field_value(self.EXPLICITLYMAPPED__FIELD_NAME.field_name, value)

    def get_ExplicitlyMapped_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ExplicitlyMapped' from this record model
        """
        return self.get_field_value(self.EXPLICITLYMAPPED__FIELD_NAME.field_name)

    def set_IdentifierType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IdentifierType' on this record model
        """
        self.set_field_value(self.IDENTIFIERTYPE__FIELD_NAME.field_name, value)

    def get_IdentifierType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IdentifierType' from this record model
        """
        return self.get_field_value(self.IDENTIFIERTYPE__FIELD_NAME.field_name)

    def set_Options_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options' on this record model
        """
        self.set_field_value(self.OPTIONS__FIELD_NAME.field_name, value)

    def get_Options_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options' from this record model
        """
        return self.get_field_value(self.OPTIONS__FIELD_NAME.field_name)

    def set_Options2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options2' on this record model
        """
        self.set_field_value(self.OPTIONS2__FIELD_NAME.field_name, value)

    def get_Options2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options2' from this record model
        """
        return self.get_field_value(self.OPTIONS2__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLFieldMapModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLFieldMap
    Data Type Display Name: Complex Data Loader Field Mapping (Complex Data Loader Field Mappings)
    Fields: ConfigurationName, CreatedBy, DataRecordName, DataTypeName, DateCreated, FieldRules, FieldRules2, FieldType, FromHeader, HeaderNameAliasList, IdentifiedBy, IsIdentifierField, IsListField, Options, Options2, ToField, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'CDLFieldMap'
    CONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("ConfigurationName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPENAME__FIELD_NAME: WrapperField = WrapperField("DataTypeName", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FIELDRULES__FIELD_NAME: WrapperField = WrapperField("FieldRules", FieldType.SELECTION)
    FIELDRULES2__FIELD_NAME: WrapperField = WrapperField("FieldRules2", FieldType.SELECTION)
    FIELDTYPE__FIELD_NAME: WrapperField = WrapperField("FieldType", FieldType.SELECTION)
    FROMHEADER__FIELD_NAME: WrapperField = WrapperField("FromHeader", FieldType.SELECTION)
    HEADERNAMEALIASLIST__FIELD_NAME: WrapperField = WrapperField("HeaderNameAliasList", FieldType.SELECTION)
    IDENTIFIEDBY__FIELD_NAME: WrapperField = WrapperField("IdentifiedBy", FieldType.STRING)
    ISIDENTIFIERFIELD__FIELD_NAME: WrapperField = WrapperField("IsIdentifierField", FieldType.BOOLEAN)
    ISLISTFIELD__FIELD_NAME: WrapperField = WrapperField("IsListField", FieldType.BOOLEAN)
    OPTIONS__FIELD_NAME: WrapperField = WrapperField("Options", FieldType.SELECTION)
    OPTIONS2__FIELD_NAME: WrapperField = WrapperField("Options2", FieldType.SELECTION)
    TOFIELD__FIELD_NAME: WrapperField = WrapperField("ToField", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FieldRules_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldRules' on this record model
        """
        self.set_field_value(self.FIELDRULES__FIELD_NAME.field_name, value)

    def get_FieldRules_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldRules' from this record model
        """
        return self.get_field_value(self.FIELDRULES__FIELD_NAME.field_name)

    def set_FieldRules2_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldRules2' on this record model
        """
        self.set_field_value(self.FIELDRULES2__FIELD_NAME.field_name, value)

    def get_FieldRules2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldRules2' from this record model
        """
        return self.get_field_value(self.FIELDRULES2__FIELD_NAME.field_name)

    def set_FieldType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldType' on this record model
        """
        self.set_field_value(self.FIELDTYPE__FIELD_NAME.field_name, value)

    def get_FieldType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldType' from this record model
        """
        return self.get_field_value(self.FIELDTYPE__FIELD_NAME.field_name)

    def set_FromHeader_field(self, value: Optional[str]):
        """
        Set data field with field name 'FromHeader' on this record model
        """
        self.set_field_value(self.FROMHEADER__FIELD_NAME.field_name, value)

    def get_FromHeader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FromHeader' from this record model
        """
        return self.get_field_value(self.FROMHEADER__FIELD_NAME.field_name)

    def set_HeaderNameAliasList_field(self, value: Optional[str]):
        """
        Set data field with field name 'HeaderNameAliasList' on this record model
        """
        self.set_field_value(self.HEADERNAMEALIASLIST__FIELD_NAME.field_name, value)

    def get_HeaderNameAliasList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HeaderNameAliasList' from this record model
        """
        return self.get_field_value(self.HEADERNAMEALIASLIST__FIELD_NAME.field_name)

    def set_IdentifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'IdentifiedBy' on this record model
        """
        self.set_field_value(self.IDENTIFIEDBY__FIELD_NAME.field_name, value)

    def get_IdentifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IdentifiedBy' from this record model
        """
        return self.get_field_value(self.IDENTIFIEDBY__FIELD_NAME.field_name)

    def set_IsIdentifierField_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsIdentifierField' on this record model
        """
        self.set_field_value(self.ISIDENTIFIERFIELD__FIELD_NAME.field_name, value)

    def get_IsIdentifierField_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsIdentifierField' from this record model
        """
        return self.get_field_value(self.ISIDENTIFIERFIELD__FIELD_NAME.field_name)

    def set_IsListField_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsListField' on this record model
        """
        self.set_field_value(self.ISLISTFIELD__FIELD_NAME.field_name, value)

    def get_IsListField_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsListField' from this record model
        """
        return self.get_field_value(self.ISLISTFIELD__FIELD_NAME.field_name)

    def set_Options_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options' on this record model
        """
        self.set_field_value(self.OPTIONS__FIELD_NAME.field_name, value)

    def get_Options_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options' from this record model
        """
        return self.get_field_value(self.OPTIONS__FIELD_NAME.field_name)

    def set_Options2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options2' on this record model
        """
        self.set_field_value(self.OPTIONS2__FIELD_NAME.field_name, value)

    def get_Options2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options2' from this record model
        """
        return self.get_field_value(self.OPTIONS2__FIELD_NAME.field_name)

    def set_ToField_field(self, value: Optional[str]):
        """
        Set data field with field name 'ToField' on this record model
        """
        self.set_field_value(self.TOFIELD__FIELD_NAME.field_name, value)

    def get_ToField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ToField' from this record model
        """
        return self.get_field_value(self.TOFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLFileFieldModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLFileField
    Data Type Display Name: Complex Data Loader File Field Header (Complex Data Loader File Field Headers)
    Fields: ConfigurationName, CreatedBy, DataRecordName, DateCreated, FileFieldHeader, VeloxLastModifiedBy, VeloxLastModifiedDate
    These records represent the field headers that were found in the example file.  These records are used by the plugin backing the selection list to the header field on the Complex Data Loader Field Mapping records.
<!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'CDLFileField'
    CONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("ConfigurationName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEFIELDHEADER__FIELD_NAME: WrapperField = WrapperField("FileFieldHeader", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileFieldHeader_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileFieldHeader' on this record model
        """
        self.set_field_value(self.FILEFIELDHEADER__FIELD_NAME.field_name, value)

    def get_FileFieldHeader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileFieldHeader' from this record model
        """
        return self.get_field_value(self.FILEFIELDHEADER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLGroupingConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLGroupingConfig
    Data Type Display Name: Complex Data Loader Grouping Config (Complex Data Loader Grouping Configs)
    Fields: AllowDynamicHeaders, ConfigurationName, CreatedBy, DataRecordName, DateCreated, FileParser, RestrictToGroups, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'CDLGroupingConfig'
    ALLOWDYNAMICHEADERS__FIELD_NAME: WrapperField = WrapperField("AllowDynamicHeaders", FieldType.BOOLEAN)
    CONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("ConfigurationName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPARSER__FIELD_NAME: WrapperField = WrapperField("FileParser", FieldType.SELECTION)
    RESTRICTTOGROUPS__FIELD_NAME: WrapperField = WrapperField("RestrictToGroups", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AllowDynamicHeaders_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AllowDynamicHeaders' on this record model
        """
        self.set_field_value(self.ALLOWDYNAMICHEADERS__FIELD_NAME.field_name, value)

    def get_AllowDynamicHeaders_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AllowDynamicHeaders' from this record model
        """
        return self.get_field_value(self.ALLOWDYNAMICHEADERS__FIELD_NAME.field_name)

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileParser_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileParser' on this record model
        """
        self.set_field_value(self.FILEPARSER__FIELD_NAME.field_name, value)

    def get_FileParser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileParser' from this record model
        """
        return self.get_field_value(self.FILEPARSER__FIELD_NAME.field_name)

    def set_RestrictToGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictToGroups' on this record model
        """
        self.set_field_value(self.RESTRICTTOGROUPS__FIELD_NAME.field_name, value)

    def get_RestrictToGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictToGroups' from this record model
        """
        return self.get_field_value(self.RESTRICTTOGROUPS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CellExperimentReferenceModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CellExperimentReference
    Data Type Display Name: Cell Ontology Reference (Cell Ontology References)
    Fields: Class1, CreatedBy, DataRecordName, DateCreated, Subclass1_1, Subclass1_1_1, Subclass1_1_1_1, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'CellExperimentReference'
    CLASS1__FIELD_NAME: WrapperField = WrapperField("Class1", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SUBCLASS1_1__FIELD_NAME: WrapperField = WrapperField("Subclass1_1", FieldType.SELECTION)
    SUBCLASS1_1_1__FIELD_NAME: WrapperField = WrapperField("Subclass1_1_1", FieldType.SELECTION)
    SUBCLASS1_1_1_1__FIELD_NAME: WrapperField = WrapperField("Subclass1_1_1_1", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Class1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Class1' on this record model
        """
        self.set_field_value(self.CLASS1__FIELD_NAME.field_name, value)

    def get_Class1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Class1' from this record model
        """
        return self.get_field_value(self.CLASS1__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Subclass1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name)

    def set_Subclass1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name)

    def set_Subclass1_1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1_1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1_1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1_1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1_1_1__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CellLineModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CellLine
    Data Type Display Name: Cell Line (Cell Lines)
    Fields: Class1, CreatedBy, DataRecordName, DateCreated, MultiParentLink215, Subclass1_1, Subclass1_1_1, TotalCellNumbers, VeloxLastModifiedBy, VeloxLastModifiedDate, ViableCellNumbers
    The CellLine Data Type
    """
    DATA_TYPE_NAME: str = 'CellLine'
    CLASS1__FIELD_NAME: WrapperField = WrapperField("Class1", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    SUBCLASS1_1__FIELD_NAME: WrapperField = WrapperField("Subclass1_1", FieldType.SELECTION)
    SUBCLASS1_1_1__FIELD_NAME: WrapperField = WrapperField("Subclass1_1_1", FieldType.SELECTION)
    TOTALCELLNUMBERS__FIELD_NAME: WrapperField = WrapperField("TotalCellNumbers", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VIABLECELLNUMBERS__FIELD_NAME: WrapperField = WrapperField("ViableCellNumbers", FieldType.LONG)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Class1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Class1' on this record model
        """
        self.set_field_value(self.CLASS1__FIELD_NAME.field_name, value)

    def get_Class1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Class1' from this record model
        """
        return self.get_field_value(self.CLASS1__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Subclass1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name)

    def set_Subclass1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name)

    def set_TotalCellNumbers_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalCellNumbers' on this record model
        """
        self.set_field_value(self.TOTALCELLNUMBERS__FIELD_NAME.field_name, value)

    def get_TotalCellNumbers_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalCellNumbers' from this record model
        """
        return self.get_field_value(self.TOTALCELLNUMBERS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ViableCellNumbers_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViableCellNumbers' on this record model
        """
        self.set_field_value(self.VIABLECELLNUMBERS__FIELD_NAME.field_name, value)

    def get_ViableCellNumbers_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViableCellNumbers' from this record model
        """
        return self.get_field_value(self.VIABLECELLNUMBERS__FIELD_NAME.field_name)


class CellOntologyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CellOntology
    Data Type Display Name: Cell Ontology (Cell Ontologies)
    Fields: ClassID, CreatedBy, DataRecordName, DateCreated, Definitions, MultiParentLink695, PreferredLabel, Synonyms, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'CellOntology'
    CLASSID__FIELD_NAME: WrapperField = WrapperField("ClassID", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEFINITIONS__FIELD_NAME: WrapperField = WrapperField("Definitions", FieldType.STRING)
    MULTIPARENTLINK695__FIELD_NAME: WrapperField = WrapperField("MultiParentLink695", FieldType.MULTIPARENTLINK)
    PREFERREDLABEL__FIELD_NAME: WrapperField = WrapperField("PreferredLabel", FieldType.STRING)
    SYNONYMS__FIELD_NAME: WrapperField = WrapperField("Synonyms", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ClassID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClassID' on this record model
        """
        self.set_field_value(self.CLASSID__FIELD_NAME.field_name, value)

    def get_ClassID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClassID' from this record model
        """
        return self.get_field_value(self.CLASSID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Definitions_field(self, value: Optional[str]):
        """
        Set data field with field name 'Definitions' on this record model
        """
        self.set_field_value(self.DEFINITIONS__FIELD_NAME.field_name, value)

    def get_Definitions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Definitions' from this record model
        """
        return self.get_field_value(self.DEFINITIONS__FIELD_NAME.field_name)

    def set_PreferredLabel_field(self, value: Optional[str]):
        """
        Set data field with field name 'PreferredLabel' on this record model
        """
        self.set_field_value(self.PREFERREDLABEL__FIELD_NAME.field_name, value)

    def get_PreferredLabel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PreferredLabel' from this record model
        """
        return self.get_field_value(self.PREFERREDLABEL__FIELD_NAME.field_name)

    def set_Synonyms_field(self, value: Optional[str]):
        """
        Set data field with field name 'Synonyms' on this record model
        """
        self.set_field_value(self.SYNONYMS__FIELD_NAME.field_name, value)

    def get_Synonyms_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Synonyms' from this record model
        """
        return self.get_field_value(self.SYNONYMS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CentrifugeRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CentrifugeRunParameters
    Data Type Display Name: Centrifuge Run Parameters (Centrifuge Run Parameters)
    Fields: CreatedBy, DataRecordName, DateCreated, Duration, GForce, MultiParentLink215, RPM, TargetConcentration, TargetVolume, Temperature, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'CentrifugeRunParameters'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DURATION__FIELD_NAME: WrapperField = WrapperField("Duration", FieldType.DOUBLE)
    GFORCE__FIELD_NAME: WrapperField = WrapperField("GForce", FieldType.DOUBLE)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    RPM__FIELD_NAME: WrapperField = WrapperField("RPM", FieldType.DOUBLE)
    TARGETCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("TargetConcentration", FieldType.DOUBLE)
    TARGETVOLUME__FIELD_NAME: WrapperField = WrapperField("TargetVolume", FieldType.DOUBLE)
    TEMPERATURE__FIELD_NAME: WrapperField = WrapperField("Temperature", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Duration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Duration' on this record model
        """
        self.set_field_value(self.DURATION__FIELD_NAME.field_name, value)

    def get_Duration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Duration' from this record model
        """
        return self.get_field_value(self.DURATION__FIELD_NAME.field_name)

    def set_GForce_field(self, value: Optional[float]):
        """
        Set data field with field name 'GForce' on this record model
        """
        self.set_field_value(self.GFORCE__FIELD_NAME.field_name, value)

    def get_GForce_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GForce' from this record model
        """
        return self.get_field_value(self.GFORCE__FIELD_NAME.field_name)

    def set_RPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'RPM' on this record model
        """
        self.set_field_value(self.RPM__FIELD_NAME.field_name, value)

    def get_RPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RPM' from this record model
        """
        return self.get_field_value(self.RPM__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVolume' on this record model
        """
        self.set_field_value(self.TARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVolume' from this record model
        """
        return self.get_field_value(self.TARGETVOLUME__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemCuratorQueueModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemCuratorQueue
    Data Type Display Name: Chem Curator Queue (Chem Curator Queues)
    Fields: CreatedBy, DataRecordName, DateCreated, HeaderNameListJSON, ImportConfigLink, MOL, PartDataTypeName, PayloadData, ProblemType, VeloxLastModifiedBy, VeloxLastModifiedDate
    Describes data in the chem curator queue when automatic identity fails to completely determine which material a registered part or lot would have.
    """
    DATA_TYPE_NAME: str = 'ChemCuratorQueue'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HEADERNAMELISTJSON__FIELD_NAME: WrapperField = WrapperField("HeaderNameListJSON", FieldType.STRING)
    IMPORTCONFIGLINK__FIELD_NAME: WrapperField = WrapperField("ImportConfigLink", FieldType.SIDE_LINK)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    PARTDATATYPENAME__FIELD_NAME: WrapperField = WrapperField("PartDataTypeName", FieldType.STRING)
    PAYLOADDATA__FIELD_NAME: WrapperField = WrapperField("PayloadData", FieldType.STRING)
    PROBLEMTYPE__FIELD_NAME: WrapperField = WrapperField("ProblemType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HeaderNameListJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'HeaderNameListJSON' on this record model
        """
        self.set_field_value(self.HEADERNAMELISTJSON__FIELD_NAME.field_name, value)

    def get_HeaderNameListJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HeaderNameListJSON' from this record model
        """
        return self.get_field_value(self.HEADERNAMELISTJSON__FIELD_NAME.field_name)

    def set_ImportConfigLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'ImportConfigLink' on this record model
        """
        self.set_field_value(self.IMPORTCONFIGLINK__FIELD_NAME.field_name, value)

    def get_ImportConfigLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ImportConfigLink' from this record model
        """
        return self.get_field_value(self.IMPORTCONFIGLINK__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_PartDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartDataTypeName' on this record model
        """
        self.set_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name, value)

    def get_PartDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartDataTypeName' from this record model
        """
        return self.get_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name)

    def set_PayloadData_field(self, value: Optional[str]):
        """
        Set data field with field name 'PayloadData' on this record model
        """
        self.set_field_value(self.PAYLOADDATA__FIELD_NAME.field_name, value)

    def get_PayloadData_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PayloadData' from this record model
        """
        return self.get_field_value(self.PAYLOADDATA__FIELD_NAME.field_name)

    def set_ProblemType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProblemType' on this record model
        """
        self.set_field_value(self.PROBLEMTYPE__FIELD_NAME.field_name, value)

    def get_ProblemType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProblemType' from this record model
        """
        return self.get_field_value(self.PROBLEMTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemicalReagentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemicalReagent
    Data Type Display Name: Chemical Reagent (Chemical Reagents)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, ExactMass, ExpirationDate, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, HasOrStereoGroup, inchi, InchiKey, IsGHSClassified, IUPAC, LotNumber, MolecularWeight, PolarSurfaceArea, PubchemCid, Purity, RegistryId, SMILES, StereoRegHash, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield
    """
    DATA_TYPE_NAME: str = 'ChemicalReagent'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    PURITY__FIELD_NAME: WrapperField = WrapperField("Purity", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class ChemicalReagentPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemicalReagentPart
    Data Type Display Name: Chemical Reagent Part (Chemical Reagent Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, Density, EditLock, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, HasOrStereoGroup, inchi, InchiKey, INCHIShadow, IsGHSClassified, IUPAC, MOL, MolecularWeight, PolarSurfaceArea, PubchemCid, QuantityOnHand, QuantityPerItem, RegisteredToCartridge, RegistryId, ReorderLevelQuantity, RequestImageUpdate, SMILES, SMILESShadow, StereoRegHash, TotalHBondAcceptors, TotalHBondCount, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'ChemicalReagentPart'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DENSITY__FIELD_NAME: WrapperField = WrapperField("Density", FieldType.DOUBLE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    INCHISHADOW__FIELD_NAME: WrapperField = WrapperField("INCHIShadow", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    REQUESTIMAGEUPDATE__FIELD_NAME: WrapperField = WrapperField("RequestImageUpdate", FieldType.BOOLEAN)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SMILESSHADOW__FIELD_NAME: WrapperField = WrapperField("SMILESShadow", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Density_field(self, value: Optional[float]):
        """
        Set data field with field name 'Density' on this record model
        """
        self.set_field_value(self.DENSITY__FIELD_NAME.field_name, value)

    def get_Density_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Density' from this record model
        """
        return self.get_field_value(self.DENSITY__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class ChemistryMaterialTypeSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemistryMaterialTypeSettings
    Data Type Display Name: Chemistry Material Type Settings (Chemistry Material Type Settingses)
    Fields: AccessionCode, AccessionPaddings, AccessionStartingValue, CreatedBy, DataRecordName, DateCreated, EnableEnhancedStereochemistry, LockedFieldsOverride, ManagerGroups, ManualStereoResolution, ReactionProduct, ReactionReactant, RegistryDataType, ResolveCanonicalTautomer, SaltMode, SaltPaddings, SystemDefined, ThreeTier, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ChemistryMaterialTypeSettings'
    ACCESSIONCODE__FIELD_NAME: WrapperField = WrapperField("AccessionCode", FieldType.STRING)
    ACCESSIONPADDINGS__FIELD_NAME: WrapperField = WrapperField("AccessionPaddings", FieldType.INTEGER)
    ACCESSIONSTARTINGVALUE__FIELD_NAME: WrapperField = WrapperField("AccessionStartingValue", FieldType.INTEGER)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ENABLEENHANCEDSTEREOCHEMISTRY__FIELD_NAME: WrapperField = WrapperField("EnableEnhancedStereochemistry", FieldType.BOOLEAN)
    LOCKEDFIELDSOVERRIDE__FIELD_NAME: WrapperField = WrapperField("LockedFieldsOverride", FieldType.SELECTION)
    MANAGERGROUPS__FIELD_NAME: WrapperField = WrapperField("ManagerGroups", FieldType.SELECTION)
    MANUALSTEREORESOLUTION__FIELD_NAME: WrapperField = WrapperField("ManualStereoResolution", FieldType.BOOLEAN)
    REACTIONPRODUCT__FIELD_NAME: WrapperField = WrapperField("ReactionProduct", FieldType.BOOLEAN)
    REACTIONREACTANT__FIELD_NAME: WrapperField = WrapperField("ReactionReactant", FieldType.BOOLEAN)
    REGISTRYDATATYPE__FIELD_NAME: WrapperField = WrapperField("RegistryDataType", FieldType.SELECTION)
    RESOLVECANONICALTAUTOMER__FIELD_NAME: WrapperField = WrapperField("ResolveCanonicalTautomer", FieldType.BOOLEAN)
    SALTMODE__FIELD_NAME: WrapperField = WrapperField("SaltMode", FieldType.PICKLIST)
    SALTPADDINGS__FIELD_NAME: WrapperField = WrapperField("SaltPaddings", FieldType.INTEGER)
    SYSTEMDEFINED__FIELD_NAME: WrapperField = WrapperField("SystemDefined", FieldType.BOOLEAN)
    THREETIER__FIELD_NAME: WrapperField = WrapperField("ThreeTier", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessionCode' on this record model
        """
        self.set_field_value(self.ACCESSIONCODE__FIELD_NAME.field_name, value)

    def get_AccessionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessionCode' from this record model
        """
        return self.get_field_value(self.ACCESSIONCODE__FIELD_NAME.field_name)

    def set_AccessionPaddings_field(self, value: Optional[int]):
        """
        Set data field with field name 'AccessionPaddings' on this record model
        """
        self.set_field_value(self.ACCESSIONPADDINGS__FIELD_NAME.field_name, value)

    def get_AccessionPaddings_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AccessionPaddings' from this record model
        """
        return self.get_field_value(self.ACCESSIONPADDINGS__FIELD_NAME.field_name)

    def set_AccessionStartingValue_field(self, value: Optional[int]):
        """
        Set data field with field name 'AccessionStartingValue' on this record model
        """
        self.set_field_value(self.ACCESSIONSTARTINGVALUE__FIELD_NAME.field_name, value)

    def get_AccessionStartingValue_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AccessionStartingValue' from this record model
        """
        return self.get_field_value(self.ACCESSIONSTARTINGVALUE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnableEnhancedStereochemistry_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableEnhancedStereochemistry' on this record model
        """
        self.set_field_value(self.ENABLEENHANCEDSTEREOCHEMISTRY__FIELD_NAME.field_name, value)

    def get_EnableEnhancedStereochemistry_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableEnhancedStereochemistry' from this record model
        """
        return self.get_field_value(self.ENABLEENHANCEDSTEREOCHEMISTRY__FIELD_NAME.field_name)

    def set_LockedFieldsOverride_field(self, value: Optional[str]):
        """
        Set data field with field name 'LockedFieldsOverride' on this record model
        """
        self.set_field_value(self.LOCKEDFIELDSOVERRIDE__FIELD_NAME.field_name, value)

    def get_LockedFieldsOverride_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LockedFieldsOverride' from this record model
        """
        return self.get_field_value(self.LOCKEDFIELDSOVERRIDE__FIELD_NAME.field_name)

    def set_ManagerGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'ManagerGroups' on this record model
        """
        self.set_field_value(self.MANAGERGROUPS__FIELD_NAME.field_name, value)

    def get_ManagerGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ManagerGroups' from this record model
        """
        return self.get_field_value(self.MANAGERGROUPS__FIELD_NAME.field_name)

    def set_ManualStereoResolution_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ManualStereoResolution' on this record model
        """
        self.set_field_value(self.MANUALSTEREORESOLUTION__FIELD_NAME.field_name, value)

    def get_ManualStereoResolution_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ManualStereoResolution' from this record model
        """
        return self.get_field_value(self.MANUALSTEREORESOLUTION__FIELD_NAME.field_name)

    def set_ReactionProduct_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReactionProduct' on this record model
        """
        self.set_field_value(self.REACTIONPRODUCT__FIELD_NAME.field_name, value)

    def get_ReactionProduct_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReactionProduct' from this record model
        """
        return self.get_field_value(self.REACTIONPRODUCT__FIELD_NAME.field_name)

    def set_ReactionReactant_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReactionReactant' on this record model
        """
        self.set_field_value(self.REACTIONREACTANT__FIELD_NAME.field_name, value)

    def get_ReactionReactant_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReactionReactant' from this record model
        """
        return self.get_field_value(self.REACTIONREACTANT__FIELD_NAME.field_name)

    def set_RegistryDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryDataType' on this record model
        """
        self.set_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name, value)

    def get_RegistryDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryDataType' from this record model
        """
        return self.get_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name)

    def set_ResolveCanonicalTautomer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ResolveCanonicalTautomer' on this record model
        """
        self.set_field_value(self.RESOLVECANONICALTAUTOMER__FIELD_NAME.field_name, value)

    def get_ResolveCanonicalTautomer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ResolveCanonicalTautomer' from this record model
        """
        return self.get_field_value(self.RESOLVECANONICALTAUTOMER__FIELD_NAME.field_name)

    def set_SaltMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SaltMode' on this record model
        """
        self.set_field_value(self.SALTMODE__FIELD_NAME.field_name, value)

    def get_SaltMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SaltMode' from this record model
        """
        return self.get_field_value(self.SALTMODE__FIELD_NAME.field_name)

    def set_SaltPaddings_field(self, value: Optional[int]):
        """
        Set data field with field name 'SaltPaddings' on this record model
        """
        self.set_field_value(self.SALTPADDINGS__FIELD_NAME.field_name, value)

    def get_SaltPaddings_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SaltPaddings' from this record model
        """
        return self.get_field_value(self.SALTPADDINGS__FIELD_NAME.field_name)

    def set_SystemDefined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SystemDefined' on this record model
        """
        self.set_field_value(self.SYSTEMDEFINED__FIELD_NAME.field_name, value)

    def get_SystemDefined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SystemDefined' from this record model
        """
        return self.get_field_value(self.SYSTEMDEFINED__FIELD_NAME.field_name)

    def set_ThreeTier_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ThreeTier' on this record model
        """
        self.set_field_value(self.THREETIER__FIELD_NAME.field_name, value)

    def get_ThreeTier_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ThreeTier' from this record model
        """
        return self.get_field_value(self.THREETIER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemReactionDataFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemReactionDataFile
    Data Type Display Name: Chem Reaction Data File (Chem Reaction Data Files)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    Describes raw chemical reaction data of the parent reaction data type.
    """
    DATA_TYPE_NAME: str = 'ChemReactionDataFile'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemRegistrySavedFieldMapModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemRegistrySavedFieldMap
    Data Type Display Name: Chem Registry Saved Field Map (Chem Registry Saved Field Maps)
    Fields: CreatedBy, DataRecordName, DateCreated, FieldMapDataTypeName, FilePath, Name, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    Saved field maps for people to use in importing CSV and SDF files.
    """
    DATA_TYPE_NAME: str = 'ChemRegistrySavedFieldMap'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FIELDMAPDATATYPENAME__FIELD_NAME: WrapperField = WrapperField("FieldMapDataTypeName", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FieldMapDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldMapDataTypeName' on this record model
        """
        self.set_field_value(self.FIELDMAPDATATYPENAME__FIELD_NAME.field_name, value)

    def get_FieldMapDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldMapDataTypeName' from this record model
        """
        return self.get_field_value(self.FIELDMAPDATATYPENAME__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemRegPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemRegPart
    Data Type Display Name: Company X Reagent Part (Company X Reagent Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, inchi, InchiKey, IsGHSClassified, IUPAC, LotNumber, MolecularWeight, PolarSurfaceArea, PubchemCid, Purity, RegistryId, SMILES, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield
    The ChemRegPart Data Type
    """
    DATA_TYPE_NAME: str = 'ChemRegPart'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    PURITY__FIELD_NAME: WrapperField = WrapperField("Purity", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class ChemRegPartPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemRegPartPart
    Data Type Display Name: Company X Reagent (Company X Reagents)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, DataRecordName, DateCreated, EditLock, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, inchi, InchiKey, INCHIShadow, IsGHSClassified, IUPAC, MOL, MolecularWeight, PolarSurfaceArea, PubchemCid, QuantityOnHand, QuantityPerItem, RegisteredToCartridge, RegistryId, ReorderLevelQuantity, RequestImageUpdate, SMILES, SMILESShadow, TotalHBondAcceptors, TotalHBondCount, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    The ChemRegPartPart Data Type
    """
    DATA_TYPE_NAME: str = 'ChemRegPartPart'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    INCHISHADOW__FIELD_NAME: WrapperField = WrapperField("INCHIShadow", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    REQUESTIMAGEUPDATE__FIELD_NAME: WrapperField = WrapperField("RequestImageUpdate", FieldType.BOOLEAN)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SMILESSHADOW__FIELD_NAME: WrapperField = WrapperField("SMILESShadow", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ClientConfigurationsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ClientConfigurations
    Data Type Display Name: Client Configurations (Client Configurations)
    Fields: COMWebServiceAccountName, COMWebServiceApiKey, COMWebServiceGuid, COMWebServiceUrl, CreatedBy, DataRecordName, DateCreated, ReportingUserPassword, ReportingWebServiceHost, ReportingWebServiceName, ReportingWebServicePort, ReportingWebServiceUserName, SampleSheetPath, SampleSheetPathForPacBio, VeloxLastModifiedBy, VeloxLastModifiedDate
    Client specific configurations.
    """
    DATA_TYPE_NAME: str = 'ClientConfigurations'
    COMWEBSERVICEACCOUNTNAME__FIELD_NAME: WrapperField = WrapperField("COMWebServiceAccountName", FieldType.STRING)
    COMWEBSERVICEAPIKEY__FIELD_NAME: WrapperField = WrapperField("COMWebServiceApiKey", FieldType.STRING)
    COMWEBSERVICEGUID__FIELD_NAME: WrapperField = WrapperField("COMWebServiceGuid", FieldType.STRING)
    COMWEBSERVICEURL__FIELD_NAME: WrapperField = WrapperField("COMWebServiceUrl", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    REPORTINGUSERPASSWORD__FIELD_NAME: WrapperField = WrapperField("ReportingUserPassword", FieldType.STRING)
    REPORTINGWEBSERVICEHOST__FIELD_NAME: WrapperField = WrapperField("ReportingWebServiceHost", FieldType.STRING)
    REPORTINGWEBSERVICENAME__FIELD_NAME: WrapperField = WrapperField("ReportingWebServiceName", FieldType.STRING)
    REPORTINGWEBSERVICEPORT__FIELD_NAME: WrapperField = WrapperField("ReportingWebServicePort", FieldType.INTEGER)
    REPORTINGWEBSERVICEUSERNAME__FIELD_NAME: WrapperField = WrapperField("ReportingWebServiceUserName", FieldType.STRING)
    SAMPLESHEETPATH__FIELD_NAME: WrapperField = WrapperField("SampleSheetPath", FieldType.STRING)
    SAMPLESHEETPATHFORPACBIO__FIELD_NAME: WrapperField = WrapperField("SampleSheetPathForPacBio", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_COMWebServiceAccountName_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceAccountName' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEACCOUNTNAME__FIELD_NAME.field_name, value)

    def get_COMWebServiceAccountName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceAccountName' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEACCOUNTNAME__FIELD_NAME.field_name)

    def set_COMWebServiceApiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceApiKey' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEAPIKEY__FIELD_NAME.field_name, value)

    def get_COMWebServiceApiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceApiKey' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEAPIKEY__FIELD_NAME.field_name)

    def set_COMWebServiceGuid_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceGuid' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEGUID__FIELD_NAME.field_name, value)

    def get_COMWebServiceGuid_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceGuid' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEGUID__FIELD_NAME.field_name)

    def set_COMWebServiceUrl_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceUrl' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEURL__FIELD_NAME.field_name, value)

    def get_COMWebServiceUrl_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceUrl' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEURL__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ReportingUserPassword_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingUserPassword' on this record model
        """
        self.set_field_value(self.REPORTINGUSERPASSWORD__FIELD_NAME.field_name, value)

    def get_ReportingUserPassword_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingUserPassword' from this record model
        """
        return self.get_field_value(self.REPORTINGUSERPASSWORD__FIELD_NAME.field_name)

    def set_ReportingWebServiceHost_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingWebServiceHost' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICEHOST__FIELD_NAME.field_name, value)

    def get_ReportingWebServiceHost_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingWebServiceHost' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICEHOST__FIELD_NAME.field_name)

    def set_ReportingWebServiceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingWebServiceName' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICENAME__FIELD_NAME.field_name, value)

    def get_ReportingWebServiceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingWebServiceName' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICENAME__FIELD_NAME.field_name)

    def set_ReportingWebServicePort_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReportingWebServicePort' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICEPORT__FIELD_NAME.field_name, value)

    def get_ReportingWebServicePort_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReportingWebServicePort' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICEPORT__FIELD_NAME.field_name)

    def set_ReportingWebServiceUserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingWebServiceUserName' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICEUSERNAME__FIELD_NAME.field_name, value)

    def get_ReportingWebServiceUserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingWebServiceUserName' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICEUSERNAME__FIELD_NAME.field_name)

    def set_SampleSheetPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetPath' on this record model
        """
        self.set_field_value(self.SAMPLESHEETPATH__FIELD_NAME.field_name, value)

    def get_SampleSheetPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetPath' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETPATH__FIELD_NAME.field_name)

    def set_SampleSheetPathForPacBio_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetPathForPacBio' on this record model
        """
        self.set_field_value(self.SAMPLESHEETPATHFORPACBIO__FIELD_NAME.field_name, value)

    def get_SampleSheetPathForPacBio_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetPathForPacBio' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETPATHFORPACBIO__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ClinicalObservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ClinicalObservation
    Data Type Display Name: Clinical Observation (Clinical Observations)
    Fields: CreatedBy, DataRecordName, DateCreated, Severity, Site, Status, Symptom, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ClinicalObservation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SEVERITY__FIELD_NAME: WrapperField = WrapperField("Severity", FieldType.PICKLIST)
    SITE__FIELD_NAME: WrapperField = WrapperField("Site", FieldType.PICKLIST)
    STATUS__FIELD_NAME: WrapperField = WrapperField("Status", FieldType.PICKLIST)
    SYMPTOM__FIELD_NAME: WrapperField = WrapperField("Symptom", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Severity_field(self, value: Optional[str]):
        """
        Set data field with field name 'Severity' on this record model
        """
        self.set_field_value(self.SEVERITY__FIELD_NAME.field_name, value)

    def get_Severity_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Severity' from this record model
        """
        return self.get_field_value(self.SEVERITY__FIELD_NAME.field_name)

    def set_Site_field(self, value: Optional[str]):
        """
        Set data field with field name 'Site' on this record model
        """
        self.set_field_value(self.SITE__FIELD_NAME.field_name, value)

    def get_Site_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Site' from this record model
        """
        return self.get_field_value(self.SITE__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_Symptom_field(self, value: Optional[str]):
        """
        Set data field with field name 'Symptom' on this record model
        """
        self.set_field_value(self.SYMPTOM__FIELD_NAME.field_name, value)

    def get_Symptom_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Symptom' from this record model
        """
        return self.get_field_value(self.SYMPTOM__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ClusterDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ClusterDetail
    Data Type Display Name: Tile Details (Tile Details)
    Fields: Aligned, AlignedPM, ClusterDensity, ClusterPassingFilter, ClusterPercentFilter, ColRead, CreatedBy, DataRecordName, DateCreated, DensityPlusMinus, Lane, LaneCol, PassedClustersInAllTiles, PassingPlusMinus, PFPercentPM, Tiles, TotalClustersInAllTiles, VeloxLastModifiedBy, VeloxLastModifiedDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'ClusterDetail'
    ALIGNED__FIELD_NAME: WrapperField = WrapperField("Aligned", FieldType.DOUBLE)
    ALIGNEDPM__FIELD_NAME: WrapperField = WrapperField("AlignedPM", FieldType.DOUBLE)
    CLUSTERDENSITY__FIELD_NAME: WrapperField = WrapperField("ClusterDensity", FieldType.DOUBLE)
    CLUSTERPASSINGFILTER__FIELD_NAME: WrapperField = WrapperField("ClusterPassingFilter", FieldType.DOUBLE)
    CLUSTERPERCENTFILTER__FIELD_NAME: WrapperField = WrapperField("ClusterPercentFilter", FieldType.DOUBLE)
    COLREAD__FIELD_NAME: WrapperField = WrapperField("ColRead", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DENSITYPLUSMINUS__FIELD_NAME: WrapperField = WrapperField("DensityPlusMinus", FieldType.DOUBLE)
    LANE__FIELD_NAME: WrapperField = WrapperField("Lane", FieldType.LONG)
    LANECOL__FIELD_NAME: WrapperField = WrapperField("LaneCol", FieldType.STRING)
    PASSEDCLUSTERSINALLTILES__FIELD_NAME: WrapperField = WrapperField("PassedClustersInAllTiles", FieldType.DOUBLE)
    PASSINGPLUSMINUS__FIELD_NAME: WrapperField = WrapperField("PassingPlusMinus", FieldType.DOUBLE)
    PFPERCENTPM__FIELD_NAME: WrapperField = WrapperField("PFPercentPM", FieldType.DOUBLE)
    TILES__FIELD_NAME: WrapperField = WrapperField("Tiles", FieldType.INTEGER)
    TOTALCLUSTERSINALLTILES__FIELD_NAME: WrapperField = WrapperField("TotalClustersInAllTiles", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Aligned_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aligned' on this record model
        """
        self.set_field_value(self.ALIGNED__FIELD_NAME.field_name, value)

    def get_Aligned_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aligned' from this record model
        """
        return self.get_field_value(self.ALIGNED__FIELD_NAME.field_name)

    def set_AlignedPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlignedPM' on this record model
        """
        self.set_field_value(self.ALIGNEDPM__FIELD_NAME.field_name, value)

    def get_AlignedPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlignedPM' from this record model
        """
        return self.get_field_value(self.ALIGNEDPM__FIELD_NAME.field_name)

    def set_ClusterDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterDensity' on this record model
        """
        self.set_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name, value)

    def get_ClusterDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterDensity' from this record model
        """
        return self.get_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name)

    def set_ClusterPassingFilter_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterPassingFilter' on this record model
        """
        self.set_field_value(self.CLUSTERPASSINGFILTER__FIELD_NAME.field_name, value)

    def get_ClusterPassingFilter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterPassingFilter' from this record model
        """
        return self.get_field_value(self.CLUSTERPASSINGFILTER__FIELD_NAME.field_name)

    def set_ClusterPercentFilter_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterPercentFilter' on this record model
        """
        self.set_field_value(self.CLUSTERPERCENTFILTER__FIELD_NAME.field_name, value)

    def get_ClusterPercentFilter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterPercentFilter' from this record model
        """
        return self.get_field_value(self.CLUSTERPERCENTFILTER__FIELD_NAME.field_name)

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DensityPlusMinus_field(self, value: Optional[float]):
        """
        Set data field with field name 'DensityPlusMinus' on this record model
        """
        self.set_field_value(self.DENSITYPLUSMINUS__FIELD_NAME.field_name, value)

    def get_DensityPlusMinus_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DensityPlusMinus' from this record model
        """
        return self.get_field_value(self.DENSITYPLUSMINUS__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_PassedClustersInAllTiles_field(self, value: Optional[float]):
        """
        Set data field with field name 'PassedClustersInAllTiles' on this record model
        """
        self.set_field_value(self.PASSEDCLUSTERSINALLTILES__FIELD_NAME.field_name, value)

    def get_PassedClustersInAllTiles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PassedClustersInAllTiles' from this record model
        """
        return self.get_field_value(self.PASSEDCLUSTERSINALLTILES__FIELD_NAME.field_name)

    def set_PassingPlusMinus_field(self, value: Optional[float]):
        """
        Set data field with field name 'PassingPlusMinus' on this record model
        """
        self.set_field_value(self.PASSINGPLUSMINUS__FIELD_NAME.field_name, value)

    def get_PassingPlusMinus_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PassingPlusMinus' from this record model
        """
        return self.get_field_value(self.PASSINGPLUSMINUS__FIELD_NAME.field_name)

    def set_PFPercentPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'PFPercentPM' on this record model
        """
        self.set_field_value(self.PFPERCENTPM__FIELD_NAME.field_name, value)

    def get_PFPercentPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PFPercentPM' from this record model
        """
        return self.get_field_value(self.PFPERCENTPM__FIELD_NAME.field_name)

    def set_Tiles_field(self, value: Optional[int]):
        """
        Set data field with field name 'Tiles' on this record model
        """
        self.set_field_value(self.TILES__FIELD_NAME.field_name, value)

    def get_Tiles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Tiles' from this record model
        """
        return self.get_field_value(self.TILES__FIELD_NAME.field_name)

    def set_TotalClustersInAllTiles_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalClustersInAllTiles' on this record model
        """
        self.set_field_value(self.TOTALCLUSTERSINALLTILES__FIELD_NAME.field_name, value)

    def get_TotalClustersInAllTiles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalClustersInAllTiles' from this record model
        """
        return self.get_field_value(self.TOTALCLUSTERSINALLTILES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CompoundModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Compound
    Data Type Display Name: Compound (Compounds)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, Density, ExactMass, ExpirationDate, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, HasOrStereoGroup, inchi, InchiKey, IsGHSClassified, IUPAC, LotNumber, MolecularWeight, PolarSurfaceArea, Pressure, PubchemCid, Purity, RegistryId, SMILES, StereoRegHash, Temperature, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield, ZoBioonly
    """
    DATA_TYPE_NAME: str = 'Compound'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DENSITY__FIELD_NAME: WrapperField = WrapperField("Density", FieldType.STRING)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PRESSURE__FIELD_NAME: WrapperField = WrapperField("Pressure", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    PURITY__FIELD_NAME: WrapperField = WrapperField("Purity", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    TEMPERATURE__FIELD_NAME: WrapperField = WrapperField("Temperature", FieldType.DOUBLE)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)
    ZOBIOONLY__FIELD_NAME: WrapperField = WrapperField("ZoBioonly", FieldType.BOOLEAN)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Density_field(self, value: Optional[str]):
        """
        Set data field with field name 'Density' on this record model
        """
        self.set_field_value(self.DENSITY__FIELD_NAME.field_name, value)

    def get_Density_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Density' from this record model
        """
        return self.get_field_value(self.DENSITY__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_Pressure_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pressure' on this record model
        """
        self.set_field_value(self.PRESSURE__FIELD_NAME.field_name, value)

    def get_Pressure_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pressure' from this record model
        """
        return self.get_field_value(self.PRESSURE__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_ZoBioonly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ZoBioonly' on this record model
        """
        self.set_field_value(self.ZOBIOONLY__FIELD_NAME.field_name, value)

    def get_ZoBioonly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ZoBioonly' from this record model
        """
        return self.get_field_value(self.ZOBIOONLY__FIELD_NAME.field_name)


class CompoundPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CompoundPart
    Data Type Display Name: Compound Part (Compound Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, EditLock, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, HasOrStereoGroup, inchi, InchiKey, INCHIShadow, IsGHSClassified, IsNormalized, IUPAC, MOL, MolecularWeight, MultiParentLink229, PolarSurfaceArea, PubchemCid, QuantityOnHand, QuantityPerItem, RegisteredToCartridge, RegistryId, ReorderLevelQuantity, RequestImageUpdate, RobTest, Salts, SMILES, SMILESShadow, StereoRegHash, SubstanceClass, TotalHBondAcceptors, TotalHBondCount, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'CompoundPart'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    INCHISHADOW__FIELD_NAME: WrapperField = WrapperField("INCHIShadow", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    ISNORMALIZED__FIELD_NAME: WrapperField = WrapperField("IsNormalized", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    MULTIPARENTLINK229__FIELD_NAME: WrapperField = WrapperField("MultiParentLink229", FieldType.MULTIPARENTLINK)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    REQUESTIMAGEUPDATE__FIELD_NAME: WrapperField = WrapperField("RequestImageUpdate", FieldType.BOOLEAN)
    ROBTEST__FIELD_NAME: WrapperField = WrapperField("RobTest", FieldType.STRING)
    SALTS__FIELD_NAME: WrapperField = WrapperField("Salts", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SMILESSHADOW__FIELD_NAME: WrapperField = WrapperField("SMILESShadow", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    SUBSTANCECLASS__FIELD_NAME: WrapperField = WrapperField("SubstanceClass", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IsNormalized_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNormalized' on this record model
        """
        self.set_field_value(self.ISNORMALIZED__FIELD_NAME.field_name, value)

    def get_IsNormalized_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNormalized' from this record model
        """
        return self.get_field_value(self.ISNORMALIZED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_RobTest_field(self, value: Optional[str]):
        """
        Set data field with field name 'RobTest' on this record model
        """
        self.set_field_value(self.ROBTEST__FIELD_NAME.field_name, value)

    def get_RobTest_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RobTest' from this record model
        """
        return self.get_field_value(self.ROBTEST__FIELD_NAME.field_name)

    def set_Salts_field(self, value: Optional[str]):
        """
        Set data field with field name 'Salts' on this record model
        """
        self.set_field_value(self.SALTS__FIELD_NAME.field_name, value)

    def get_Salts_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Salts' from this record model
        """
        return self.get_field_value(self.SALTS__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_SubstanceClass_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubstanceClass' on this record model
        """
        self.set_field_value(self.SUBSTANCECLASS__FIELD_NAME.field_name, value)

    def get_SubstanceClass_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubstanceClass' from this record model
        """
        return self.get_field_value(self.SUBSTANCECLASS__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CompoundSaltConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CompoundSaltConfig
    Data Type Display Name: Compound Salt Config (Compound Salt Configs)
    Fields: CreatedBy, DataRecordName, DateCreated, SaltId, SaltSMARTS, VeloxLastModifiedBy, VeloxLastModifiedDate
    The corporate compound salt database. This will be a list of SMARTS expressions that will be used for desalting when importing a compound part.
    """
    DATA_TYPE_NAME: str = 'CompoundSaltConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SALTID__FIELD_NAME: WrapperField = WrapperField("SaltId", FieldType.STRING)
    SALTSMARTS__FIELD_NAME: WrapperField = WrapperField("SaltSMARTS", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SaltId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SaltId' on this record model
        """
        self.set_field_value(self.SALTID__FIELD_NAME.field_name, value)

    def get_SaltId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SaltId' from this record model
        """
        return self.get_field_value(self.SALTID__FIELD_NAME.field_name)

    def set_SaltSMARTS_field(self, value: Optional[str]):
        """
        Set data field with field name 'SaltSMARTS' on this record model
        """
        self.set_field_value(self.SALTSMARTS__FIELD_NAME.field_name, value)

    def get_SaltSMARTS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SaltSMARTS' from this record model
        """
        return self.get_field_value(self.SALTSMARTS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ComputedAssayResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ComputedAssayResults
    Data Type Display Name: Computed Assay Result (Computed Assay Results)
    Fields: AssayType, AssayUnits, ChemReagentPartLink, ChemRegPartPartSideLink, CompoundPartLink, CreatedBy, DataRecordName, DateCreated, Name, NewChem1PartSideLink, NoCanTauPartSideLink, NumericValue, Robs3rdRegPartSideLink, SampleSideLink, TextValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    Stores the computed assay results from a fixed formula for program that operates on data.
    """
    DATA_TYPE_NAME: str = 'ComputedAssayResults'
    ASSAYTYPE__FIELD_NAME: WrapperField = WrapperField("AssayType", FieldType.STRING)
    ASSAYUNITS__FIELD_NAME: WrapperField = WrapperField("AssayUnits", FieldType.SELECTION)
    CHEMREAGENTPARTLINK__FIELD_NAME: WrapperField = WrapperField("ChemReagentPartLink", FieldType.SIDE_LINK)
    CHEMREGPARTPARTSIDELINK__FIELD_NAME: WrapperField = WrapperField("ChemRegPartPartSideLink", FieldType.SIDE_LINK)
    COMPOUNDPARTLINK__FIELD_NAME: WrapperField = WrapperField("CompoundPartLink", FieldType.SIDE_LINK)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    NEWCHEM1PARTSIDELINK__FIELD_NAME: WrapperField = WrapperField("NewChem1PartSideLink", FieldType.SIDE_LINK)
    NOCANTAUPARTSIDELINK__FIELD_NAME: WrapperField = WrapperField("NoCanTauPartSideLink", FieldType.SIDE_LINK)
    NUMERICVALUE__FIELD_NAME: WrapperField = WrapperField("NumericValue", FieldType.DOUBLE)
    ROBS3RDREGPARTSIDELINK__FIELD_NAME: WrapperField = WrapperField("Robs3rdRegPartSideLink", FieldType.SIDE_LINK)
    SAMPLESIDELINK__FIELD_NAME: WrapperField = WrapperField("SampleSideLink", FieldType.SIDE_LINK)
    TEXTVALUE__FIELD_NAME: WrapperField = WrapperField("TextValue", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayType' on this record model
        """
        self.set_field_value(self.ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayType' from this record model
        """
        return self.get_field_value(self.ASSAYTYPE__FIELD_NAME.field_name)

    def set_AssayUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayUnits' on this record model
        """
        self.set_field_value(self.ASSAYUNITS__FIELD_NAME.field_name, value)

    def get_AssayUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayUnits' from this record model
        """
        return self.get_field_value(self.ASSAYUNITS__FIELD_NAME.field_name)

    def set_ChemReagentPartLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemReagentPartLink' on this record model
        """
        self.set_field_value(self.CHEMREAGENTPARTLINK__FIELD_NAME.field_name, value)

    def get_ChemReagentPartLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemReagentPartLink' from this record model
        """
        return self.get_field_value(self.CHEMREAGENTPARTLINK__FIELD_NAME.field_name)

    def set_ChemRegPartPartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPartPartSideLink' on this record model
        """
        self.set_field_value(self.CHEMREGPARTPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_ChemRegPartPartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPartPartSideLink' from this record model
        """
        return self.get_field_value(self.CHEMREGPARTPARTSIDELINK__FIELD_NAME.field_name)

    def set_CompoundPartLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompoundPartLink' on this record model
        """
        self.set_field_value(self.COMPOUNDPARTLINK__FIELD_NAME.field_name, value)

    def get_CompoundPartLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompoundPartLink' from this record model
        """
        return self.get_field_value(self.COMPOUNDPARTLINK__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NewChem1PartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1PartSideLink' on this record model
        """
        self.set_field_value(self.NEWCHEM1PARTSIDELINK__FIELD_NAME.field_name, value)

    def get_NewChem1PartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1PartSideLink' from this record model
        """
        return self.get_field_value(self.NEWCHEM1PARTSIDELINK__FIELD_NAME.field_name)

    def set_NoCanTauPartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTauPartSideLink' on this record model
        """
        self.set_field_value(self.NOCANTAUPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_NoCanTauPartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTauPartSideLink' from this record model
        """
        return self.get_field_value(self.NOCANTAUPARTSIDELINK__FIELD_NAME.field_name)

    def set_NumericValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'NumericValue' on this record model
        """
        self.set_field_value(self.NUMERICVALUE__FIELD_NAME.field_name, value)

    def get_NumericValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NumericValue' from this record model
        """
        return self.get_field_value(self.NUMERICVALUE__FIELD_NAME.field_name)

    def set_Robs3rdRegPartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdRegPartSideLink' on this record model
        """
        self.set_field_value(self.ROBS3RDREGPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_Robs3rdRegPartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdRegPartSideLink' from this record model
        """
        return self.get_field_value(self.ROBS3RDREGPARTSIDELINK__FIELD_NAME.field_name)

    def set_SampleSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleSideLink' on this record model
        """
        self.set_field_value(self.SAMPLESIDELINK__FIELD_NAME.field_name, value)

    def get_SampleSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleSideLink' from this record model
        """
        return self.get_field_value(self.SAMPLESIDELINK__FIELD_NAME.field_name)

    def set_TextValue_field(self, value: Optional[str]):
        """
        Set data field with field name 'TextValue' on this record model
        """
        self.set_field_value(self.TEXTVALUE__FIELD_NAME.field_name, value)

    def get_TextValue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TextValue' from this record model
        """
        return self.get_field_value(self.TEXTVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConditionsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Conditions
    Data Type Display Name: Conditions (Conditions)
    Fields: CreatedBy, DataRecordName, DateCreated, Pressure, Temperature, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Conditions'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PRESSURE__FIELD_NAME: WrapperField = WrapperField("Pressure", FieldType.DOUBLE)
    TEMPERATURE__FIELD_NAME: WrapperField = WrapperField("Temperature", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Pressure_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pressure' on this record model
        """
        self.set_field_value(self.PRESSURE__FIELD_NAME.field_name, value)

    def get_Pressure_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pressure' from this record model
        """
        return self.get_field_value(self.PRESSURE__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Consumable
    Data Type Display Name: Reagent Part (Reagent Parts)
    Fields: AspenField, CASNo, ConsumableClassification, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, Description, EditConsumableType, PartNumber, QuantityOnHand, QuantityPerItem, ReorderLevelQuantity, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    General definition of a consumable object.
    """
    DATA_TYPE_NAME: str = 'Consumable'
    ASPENFIELD__FIELD_NAME: WrapperField = WrapperField("AspenField", FieldType.STRING)
    CASNO__FIELD_NAME: WrapperField = WrapperField("CASNo", FieldType.STRING)
    CONSUMABLECLASSIFICATION__FIELD_NAME: WrapperField = WrapperField("ConsumableClassification", FieldType.SELECTION)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EDITCONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("EditConsumableType", FieldType.BOOLEAN)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AspenField_field(self, value: Optional[str]):
        """
        Set data field with field name 'AspenField' on this record model
        """
        self.set_field_value(self.ASPENFIELD__FIELD_NAME.field_name, value)

    def get_AspenField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AspenField' from this record model
        """
        return self.get_field_value(self.ASPENFIELD__FIELD_NAME.field_name)

    def set_CASNo_field(self, value: Optional[str]):
        """
        Set data field with field name 'CASNo' on this record model
        """
        self.set_field_value(self.CASNO__FIELD_NAME.field_name, value)

    def get_CASNo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CASNo' from this record model
        """
        return self.get_field_value(self.CASNO__FIELD_NAME.field_name)

    def set_ConsumableClassification_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableClassification' on this record model
        """
        self.set_field_value(self.CONSUMABLECLASSIFICATION__FIELD_NAME.field_name, value)

    def get_ConsumableClassification_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableClassification' from this record model
        """
        return self.get_field_value(self.CONSUMABLECLASSIFICATION__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EditConsumableType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditConsumableType' on this record model
        """
        self.set_field_value(self.EDITCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_EditConsumableType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditConsumableType' from this record model
        """
        return self.get_field_value(self.EDITCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class ConsumableImporterMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableImporterMapping
    Data Type Display Name: Consumable Importer Mapping (Consumable Importer Mappings)
    Fields: CreatedBy, DataField, DataRecordName, DataType, DateCreated, DisplayName, MappingGroup, MappingName, MappingOrder, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'ConsumableImporterMapping'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATAFIELD__FIELD_NAME: WrapperField = WrapperField("DataField", FieldType.SELECTION)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.PICKLIST)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("DisplayName", FieldType.STRING)
    MAPPINGGROUP__FIELD_NAME: WrapperField = WrapperField("MappingGroup", FieldType.STRING)
    MAPPINGNAME__FIELD_NAME: WrapperField = WrapperField("MappingName", FieldType.STRING)
    MAPPINGORDER__FIELD_NAME: WrapperField = WrapperField("MappingOrder", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataField' on this record model
        """
        self.set_field_value(self.DATAFIELD__FIELD_NAME.field_name, value)

    def get_DataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataField' from this record model
        """
        return self.get_field_value(self.DATAFIELD__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableImportingMapConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableImportingMapConfig
    Data Type Display Name: Consumable Importing Mapping Configuration (Consumable Importing Mapping Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, MappingGroup, MappingOrder, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'ConsumableImportingMapConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MAPPINGGROUP__FIELD_NAME: WrapperField = WrapperField("MappingGroup", FieldType.STRING)
    MAPPINGORDER__FIELD_NAME: WrapperField = WrapperField("MappingOrder", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableItem
    Data Type Display Name: Reagent (Reagents)
    Fields: BarcodeDefined, CASNo, ColPosition, ConsumableBarcode, ConsumableName, ConsumableType, CostPerUnit, CreatedBy, DataRecordName, DateCreated, ExpirationDate, Expired, KitLotNumbers, LotNumber, LotNumberDefined, MultiParentLink705, PartNumber, QuantityRemaining, RowPosition, StorageLocationBarcode, StorageUnitPath, Units, UnknownExpiration, Validated, ValidationDate, ValidationExperimentId, ValidationTechician, VeloxLastModifiedBy, VeloxLastModifiedDate
    Detailed representation of a more specific consumable object.
    """
    DATA_TYPE_NAME: str = 'ConsumableItem'
    BARCODEDEFINED__FIELD_NAME: WrapperField = WrapperField("BarcodeDefined", FieldType.BOOLEAN)
    CASNO__FIELD_NAME: WrapperField = WrapperField("CASNo", FieldType.STRING)
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CONSUMABLEBARCODE__FIELD_NAME: WrapperField = WrapperField("ConsumableBarcode", FieldType.STRING)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    COSTPERUNIT__FIELD_NAME: WrapperField = WrapperField("CostPerUnit", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    EXPIRED__FIELD_NAME: WrapperField = WrapperField("Expired", FieldType.BOOLEAN)
    KITLOTNUMBERS__FIELD_NAME: WrapperField = WrapperField("KitLotNumbers", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    LOTNUMBERDEFINED__FIELD_NAME: WrapperField = WrapperField("LotNumberDefined", FieldType.BOOLEAN)
    MULTIPARENTLINK705__FIELD_NAME: WrapperField = WrapperField("MultiParentLink705", FieldType.MULTIPARENTLINK)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYREMAINING__FIELD_NAME: WrapperField = WrapperField("QuantityRemaining", FieldType.DOUBLE)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    STORAGELOCATIONBARCODE__FIELD_NAME: WrapperField = WrapperField("StorageLocationBarcode", FieldType.SELECTION)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    UNKNOWNEXPIRATION__FIELD_NAME: WrapperField = WrapperField("UnknownExpiration", FieldType.BOOLEAN)
    VALIDATED__FIELD_NAME: WrapperField = WrapperField("Validated", FieldType.BOOLEAN)
    VALIDATIONDATE__FIELD_NAME: WrapperField = WrapperField("ValidationDate", FieldType.DATE)
    VALIDATIONEXPERIMENTID__FIELD_NAME: WrapperField = WrapperField("ValidationExperimentId", FieldType.STRING)
    VALIDATIONTECHICIAN__FIELD_NAME: WrapperField = WrapperField("ValidationTechician", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BarcodeDefined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BarcodeDefined' on this record model
        """
        self.set_field_value(self.BARCODEDEFINED__FIELD_NAME.field_name, value)

    def get_BarcodeDefined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BarcodeDefined' from this record model
        """
        return self.get_field_value(self.BARCODEDEFINED__FIELD_NAME.field_name)

    def set_CASNo_field(self, value: Optional[str]):
        """
        Set data field with field name 'CASNo' on this record model
        """
        self.set_field_value(self.CASNO__FIELD_NAME.field_name, value)

    def get_CASNo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CASNo' from this record model
        """
        return self.get_field_value(self.CASNO__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_CostPerUnit_field(self, value: Optional[float]):
        """
        Set data field with field name 'CostPerUnit' on this record model
        """
        self.set_field_value(self.COSTPERUNIT__FIELD_NAME.field_name, value)

    def get_CostPerUnit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CostPerUnit' from this record model
        """
        return self.get_field_value(self.COSTPERUNIT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Expired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Expired' on this record model
        """
        self.set_field_value(self.EXPIRED__FIELD_NAME.field_name, value)

    def get_Expired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Expired' from this record model
        """
        return self.get_field_value(self.EXPIRED__FIELD_NAME.field_name)

    def set_KitLotNumbers_field(self, value: Optional[str]):
        """
        Set data field with field name 'KitLotNumbers' on this record model
        """
        self.set_field_value(self.KITLOTNUMBERS__FIELD_NAME.field_name, value)

    def get_KitLotNumbers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'KitLotNumbers' from this record model
        """
        return self.get_field_value(self.KITLOTNUMBERS__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_LotNumberDefined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LotNumberDefined' on this record model
        """
        self.set_field_value(self.LOTNUMBERDEFINED__FIELD_NAME.field_name, value)

    def get_LotNumberDefined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LotNumberDefined' from this record model
        """
        return self.get_field_value(self.LOTNUMBERDEFINED__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityRemaining_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityRemaining' on this record model
        """
        self.set_field_value(self.QUANTITYREMAINING__FIELD_NAME.field_name, value)

    def get_QuantityRemaining_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityRemaining' from this record model
        """
        return self.get_field_value(self.QUANTITYREMAINING__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def set_UnknownExpiration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UnknownExpiration' on this record model
        """
        self.set_field_value(self.UNKNOWNEXPIRATION__FIELD_NAME.field_name, value)

    def get_UnknownExpiration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UnknownExpiration' from this record model
        """
        return self.get_field_value(self.UNKNOWNEXPIRATION__FIELD_NAME.field_name)

    def set_Validated_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Validated' on this record model
        """
        self.set_field_value(self.VALIDATED__FIELD_NAME.field_name, value)

    def get_Validated_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Validated' from this record model
        """
        return self.get_field_value(self.VALIDATED__FIELD_NAME.field_name)

    def set_ValidationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ValidationDate' on this record model
        """
        self.set_field_value(self.VALIDATIONDATE__FIELD_NAME.field_name, value)

    def get_ValidationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ValidationDate' from this record model
        """
        return self.get_field_value(self.VALIDATIONDATE__FIELD_NAME.field_name)

    def set_ValidationExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ValidationExperimentId' on this record model
        """
        self.set_field_value(self.VALIDATIONEXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ValidationExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ValidationExperimentId' from this record model
        """
        return self.get_field_value(self.VALIDATIONEXPERIMENTID__FIELD_NAME.field_name)

    def set_ValidationTechician_field(self, value: Optional[str]):
        """
        Set data field with field name 'ValidationTechician' on this record model
        """
        self.set_field_value(self.VALIDATIONTECHICIAN__FIELD_NAME.field_name, value)

    def get_ValidationTechician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ValidationTechician' from this record model
        """
        return self.get_field_value(self.VALIDATIONTECHICIAN__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableLotUsageModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableLotUsage
    Data Type Display Name: Consumable Lot Usage (Consumable Lot Usages)
    Fields: ActiveTaskId, BarcodeFieldName, ConsumableBarcode, CreatedBy, DataRecordName, DateCreated, ElnId, ExpRecordId, LotNumber, LotNumberFieldName, LotRecordId, QuantityUsed, VeloxLastModifiedBy, VeloxLastModifiedDate
    Data type used in workflows to allow memory of what is used.
    """
    DATA_TYPE_NAME: str = 'ConsumableLotUsage'
    ACTIVETASKID__FIELD_NAME: WrapperField = WrapperField("ActiveTaskId", FieldType.LONG)
    BARCODEFIELDNAME__FIELD_NAME: WrapperField = WrapperField("BarcodeFieldName", FieldType.STRING)
    CONSUMABLEBARCODE__FIELD_NAME: WrapperField = WrapperField("ConsumableBarcode", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ELNID__FIELD_NAME: WrapperField = WrapperField("ElnId", FieldType.STRING)
    EXPRECORDID__FIELD_NAME: WrapperField = WrapperField("ExpRecordId", FieldType.LONG)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    LOTNUMBERFIELDNAME__FIELD_NAME: WrapperField = WrapperField("LotNumberFieldName", FieldType.STRING)
    LOTRECORDID__FIELD_NAME: WrapperField = WrapperField("LotRecordId", FieldType.LONG)
    QUANTITYUSED__FIELD_NAME: WrapperField = WrapperField("QuantityUsed", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveTaskId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveTaskId' on this record model
        """
        self.set_field_value(self.ACTIVETASKID__FIELD_NAME.field_name, value)

    def get_ActiveTaskId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveTaskId' from this record model
        """
        return self.get_field_value(self.ACTIVETASKID__FIELD_NAME.field_name)

    def set_BarcodeFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BarcodeFieldName' on this record model
        """
        self.set_field_value(self.BARCODEFIELDNAME__FIELD_NAME.field_name, value)

    def get_BarcodeFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BarcodeFieldName' from this record model
        """
        return self.get_field_value(self.BARCODEFIELDNAME__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ElnId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElnId' on this record model
        """
        self.set_field_value(self.ELNID__FIELD_NAME.field_name, value)

    def get_ElnId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElnId' from this record model
        """
        return self.get_field_value(self.ELNID__FIELD_NAME.field_name)

    def set_ExpRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpRecordId' on this record model
        """
        self.set_field_value(self.EXPRECORDID__FIELD_NAME.field_name, value)

    def get_ExpRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpRecordId' from this record model
        """
        return self.get_field_value(self.EXPRECORDID__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_LotNumberFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumberFieldName' on this record model
        """
        self.set_field_value(self.LOTNUMBERFIELDNAME__FIELD_NAME.field_name, value)

    def get_LotNumberFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumberFieldName' from this record model
        """
        return self.get_field_value(self.LOTNUMBERFIELDNAME__FIELD_NAME.field_name)

    def set_LotRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'LotRecordId' on this record model
        """
        self.set_field_value(self.LOTRECORDID__FIELD_NAME.field_name, value)

    def get_LotRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LotRecordId' from this record model
        """
        return self.get_field_value(self.LOTRECORDID__FIELD_NAME.field_name)

    def set_QuantityUsed_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityUsed' on this record model
        """
        self.set_field_value(self.QUANTITYUSED__FIELD_NAME.field_name, value)

    def get_QuantityUsed_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityUsed' from this record model
        """
        return self.get_field_value(self.QUANTITYUSED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DataLinkConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DataLinkConfig
    Data Type Display Name: Data Link Configuration (Data Link Configuration)
    Fields: CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DataLinkConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DataWarehouseRScriptModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DataWarehouseRScript
    Data Type Display Name: Data Warehouse R Script (Data Warehouse R Scripts)
    Fields: CreatedBy, DataRecordName, DateCreated, ScriptContent, ScriptDescription, ScriptId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DataWarehouseRScript'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SCRIPTCONTENT__FIELD_NAME: WrapperField = WrapperField("ScriptContent", FieldType.STRING)
    SCRIPTDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("ScriptDescription", FieldType.STRING)
    SCRIPTID__FIELD_NAME: WrapperField = WrapperField("ScriptId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ScriptContent_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScriptContent' on this record model
        """
        self.set_field_value(self.SCRIPTCONTENT__FIELD_NAME.field_name, value)

    def get_ScriptContent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScriptContent' from this record model
        """
        return self.get_field_value(self.SCRIPTCONTENT__FIELD_NAME.field_name)

    def set_ScriptDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScriptDescription' on this record model
        """
        self.set_field_value(self.SCRIPTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ScriptDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScriptDescription' from this record model
        """
        return self.get_field_value(self.SCRIPTDESCRIPTION__FIELD_NAME.field_name)

    def set_ScriptId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScriptId' on this record model
        """
        self.set_field_value(self.SCRIPTID__FIELD_NAME.field_name, value)

    def get_ScriptId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScriptId' from this record model
        """
        return self.get_field_value(self.SCRIPTID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DirectoryModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Directory
    Data Type Display Name: Directory (Directories)
    Fields: CreatedBy, DataRecordName, DateCreated, DirectoryName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Directory'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DIRECTORYNAME__FIELD_NAME: WrapperField = WrapperField("DirectoryName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DirectoryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DirectoryName' on this record model
        """
        self.set_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name, value)

    def get_DirectoryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DirectoryName' from this record model
        """
        return self.get_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DNAModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DNA
    Data Type Display Name: DNA (DNAs)
    Fields: CreatedBy, DataRecordName, DateCreated, ExpirationDate, ItemId, Name, PartNumber, SequenceType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DNA'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    ITEMID__FIELD_NAME: WrapperField = WrapperField("ItemId", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    SEQUENCETYPE__FIELD_NAME: WrapperField = WrapperField("SequenceType", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemId' on this record model
        """
        self.set_field_value(self.ITEMID__FIELD_NAME.field_name, value)

    def get_ItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemId' from this record model
        """
        return self.get_field_value(self.ITEMID__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_SequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceType' on this record model
        """
        self.set_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_SequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceType' from this record model
        """
        return self.get_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DNAPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DNAPart
    Data Type Display Name: DNA Part (DNA Parts)
    Fields: CreatedBy, DataRecordName, DateCreated, Description, EditLock, GenbankAttachment, GenebankAttachment, IsCircular, Name, PartNumber, QuantityOnHand, Sequence, SequenceHash, SequenceType, SourcePart, VeloxLastModifiedBy, VeloxLastModifiedDate
    <-- VIRTUAL ENTITY DATA TYPE -->
    """
    DATA_TYPE_NAME: str = 'DNAPart'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    GENBANKATTACHMENT__FIELD_NAME: WrapperField = WrapperField("GenbankAttachment", FieldType.SIDE_LINK)
    GENEBANKATTACHMENT__FIELD_NAME: WrapperField = WrapperField("GenebankAttachment", FieldType.STRING)
    ISCIRCULAR__FIELD_NAME: WrapperField = WrapperField("IsCircular", FieldType.BOOLEAN)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    SEQUENCE__FIELD_NAME: WrapperField = WrapperField("Sequence", FieldType.STRING)
    SEQUENCEHASH__FIELD_NAME: WrapperField = WrapperField("SequenceHash", FieldType.STRING)
    SEQUENCETYPE__FIELD_NAME: WrapperField = WrapperField("SequenceType", FieldType.PICKLIST)
    SOURCEPART__FIELD_NAME: WrapperField = WrapperField("SourcePart", FieldType.SIDE_LINK)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_GenbankAttachment_field(self, value: Optional[int]):
        """
        Set data field with field name 'GenbankAttachment' on this record model
        """
        self.set_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenbankAttachment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GenbankAttachment' from this record model
        """
        return self.get_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name)

    def set_GenebankAttachment_field(self, value: Optional[str]):
        """
        Set data field with field name 'GenebankAttachment' on this record model
        """
        self.set_field_value(self.GENEBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenebankAttachment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GenebankAttachment' from this record model
        """
        return self.get_field_value(self.GENEBANKATTACHMENT__FIELD_NAME.field_name)

    def set_IsCircular_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCircular' on this record model
        """
        self.set_field_value(self.ISCIRCULAR__FIELD_NAME.field_name, value)

    def get_IsCircular_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCircular' from this record model
        """
        return self.get_field_value(self.ISCIRCULAR__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_SequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceType' on this record model
        """
        self.set_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_SequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceType' from this record model
        """
        return self.get_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name)

    def set_SourcePart_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourcePart' on this record model
        """
        self.set_field_value(self.SOURCEPART__FIELD_NAME.field_name, value)

    def get_SourcePart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourcePart' from this record model
        """
        return self.get_field_value(self.SOURCEPART__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DoseResponseModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DoseResponse
    Data Type Display Name: Dose Response (Dose Responses)
    Fields: CreatedBy, DataRecordName, DateCreated, Dose, Response, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DoseResponse'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DOSE__FIELD_NAME: WrapperField = WrapperField("Dose", FieldType.DOUBLE)
    RESPONSE__FIELD_NAME: WrapperField = WrapperField("Response", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Dose_field(self, value: Optional[float]):
        """
        Set data field with field name 'Dose' on this record model
        """
        self.set_field_value(self.DOSE__FIELD_NAME.field_name, value)

    def get_Dose_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Dose' from this record model
        """
        return self.get_field_value(self.DOSE__FIELD_NAME.field_name)

    def set_Response_field(self, value: Optional[float]):
        """
        Set data field with field name 'Response' on this record model
        """
        self.set_field_value(self.RESPONSE__FIELD_NAME.field_name, value)

    def get_Response_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Response' from this record model
        """
        return self.get_field_value(self.RESPONSE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DosingResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DosingResult
    Data Type Display Name: Dosing Result (Dosing Results)
    Fields: ActualDose, AgentName, BaseDosage, CreatedBy, DataRecordName, DateCompleted, DateCreated, DoseComments, DoseResult, DoseType, DoseUnit, ExpectedDose, Formulation, RouteOfAdministration, TreatmentId, TreatmentRecordId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DosingResult'
    ACTUALDOSE__FIELD_NAME: WrapperField = WrapperField("ActualDose", FieldType.DOUBLE)
    AGENTNAME__FIELD_NAME: WrapperField = WrapperField("AgentName", FieldType.SELECTION)
    BASEDOSAGE__FIELD_NAME: WrapperField = WrapperField("BaseDosage", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECOMPLETED__FIELD_NAME: WrapperField = WrapperField("DateCompleted", FieldType.DATE)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DOSECOMMENTS__FIELD_NAME: WrapperField = WrapperField("DoseComments", FieldType.STRING)
    DOSERESULT__FIELD_NAME: WrapperField = WrapperField("DoseResult", FieldType.PICKLIST)
    DOSETYPE__FIELD_NAME: WrapperField = WrapperField("DoseType", FieldType.PICKLIST)
    DOSEUNIT__FIELD_NAME: WrapperField = WrapperField("DoseUnit", FieldType.SELECTION)
    EXPECTEDDOSE__FIELD_NAME: WrapperField = WrapperField("ExpectedDose", FieldType.DOUBLE)
    FORMULATION__FIELD_NAME: WrapperField = WrapperField("Formulation", FieldType.SELECTION)
    ROUTEOFADMINISTRATION__FIELD_NAME: WrapperField = WrapperField("RouteOfAdministration", FieldType.SELECTION)
    TREATMENTID__FIELD_NAME: WrapperField = WrapperField("TreatmentId", FieldType.STRING)
    TREATMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("TreatmentRecordId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActualDose_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualDose' on this record model
        """
        self.set_field_value(self.ACTUALDOSE__FIELD_NAME.field_name, value)

    def get_ActualDose_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualDose' from this record model
        """
        return self.get_field_value(self.ACTUALDOSE__FIELD_NAME.field_name)

    def set_AgentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentName' on this record model
        """
        self.set_field_value(self.AGENTNAME__FIELD_NAME.field_name, value)

    def get_AgentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentName' from this record model
        """
        return self.get_field_value(self.AGENTNAME__FIELD_NAME.field_name)

    def set_BaseDosage_field(self, value: Optional[float]):
        """
        Set data field with field name 'BaseDosage' on this record model
        """
        self.set_field_value(self.BASEDOSAGE__FIELD_NAME.field_name, value)

    def get_BaseDosage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BaseDosage' from this record model
        """
        return self.get_field_value(self.BASEDOSAGE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DoseComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseComments' on this record model
        """
        self.set_field_value(self.DOSECOMMENTS__FIELD_NAME.field_name, value)

    def get_DoseComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseComments' from this record model
        """
        return self.get_field_value(self.DOSECOMMENTS__FIELD_NAME.field_name)

    def set_DoseResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseResult' on this record model
        """
        self.set_field_value(self.DOSERESULT__FIELD_NAME.field_name, value)

    def get_DoseResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseResult' from this record model
        """
        return self.get_field_value(self.DOSERESULT__FIELD_NAME.field_name)

    def set_DoseType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseType' on this record model
        """
        self.set_field_value(self.DOSETYPE__FIELD_NAME.field_name, value)

    def get_DoseType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseType' from this record model
        """
        return self.get_field_value(self.DOSETYPE__FIELD_NAME.field_name)

    def set_DoseUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseUnit' on this record model
        """
        self.set_field_value(self.DOSEUNIT__FIELD_NAME.field_name, value)

    def get_DoseUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseUnit' from this record model
        """
        return self.get_field_value(self.DOSEUNIT__FIELD_NAME.field_name)

    def set_ExpectedDose_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExpectedDose' on this record model
        """
        self.set_field_value(self.EXPECTEDDOSE__FIELD_NAME.field_name, value)

    def get_ExpectedDose_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExpectedDose' from this record model
        """
        return self.get_field_value(self.EXPECTEDDOSE__FIELD_NAME.field_name)

    def set_Formulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formulation' on this record model
        """
        self.set_field_value(self.FORMULATION__FIELD_NAME.field_name, value)

    def get_Formulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formulation' from this record model
        """
        return self.get_field_value(self.FORMULATION__FIELD_NAME.field_name)

    def set_RouteOfAdministration_field(self, value: Optional[str]):
        """
        Set data field with field name 'RouteOfAdministration' on this record model
        """
        self.set_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name, value)

    def get_RouteOfAdministration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RouteOfAdministration' from this record model
        """
        return self.get_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name)

    def set_TreatmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentId' on this record model
        """
        self.set_field_value(self.TREATMENTID__FIELD_NAME.field_name, value)

    def get_TreatmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentId' from this record model
        """
        return self.get_field_value(self.TREATMENTID__FIELD_NAME.field_name)

    def set_TreatmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentRecordId' on this record model
        """
        self.set_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name, value)

    def get_TreatmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentRecordId' from this record model
        """
        return self.get_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DownstreamProcessingYieldModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DownstreamProcessingYield
    Data Type Display Name: Downstream Processing Yield (Downstream Processing Yields)
    Fields: CentrifugationYield, CreatedBy, DataRecordName, DateCreated, DiafiltrationYield, MultiParentLink215, OtherSampleId, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DownstreamProcessingYield'
    CENTRIFUGATIONYIELD__FIELD_NAME: WrapperField = WrapperField("CentrifugationYield", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DIAFILTRATIONYIELD__FIELD_NAME: WrapperField = WrapperField("DiafiltrationYield", FieldType.DOUBLE)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CentrifugationYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'CentrifugationYield' on this record model
        """
        self.set_field_value(self.CENTRIFUGATIONYIELD__FIELD_NAME.field_name, value)

    def get_CentrifugationYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CentrifugationYield' from this record model
        """
        return self.get_field_value(self.CENTRIFUGATIONYIELD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DiafiltrationYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiafiltrationYield' on this record model
        """
        self.set_field_value(self.DIAFILTRATIONYIELD__FIELD_NAME.field_name, value)

    def get_DiafiltrationYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiafiltrationYield' from this record model
        """
        return self.get_field_value(self.DIAFILTRATIONYIELD__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DropSenseA260ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DropSenseA260Result
    Data Type Display Name: DropSense A260 Result (DropSense A260 Results)
    Fields: A260230, A260280, CreatedBy, DataRecordName, DateCreated, DilutionFactor, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DropSenseA260Result'
    A260230__FIELD_NAME: WrapperField = WrapperField("A260230", FieldType.DOUBLE)
    A260280__FIELD_NAME: WrapperField = WrapperField("A260280", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DILUTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("DilutionFactor", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DropSenseA280ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DropSenseA280Result
    Data Type Display Name: DropSense A280 Result (DropSense A280 Results)
    Fields: CreatedBy, DataRecordName, DateCreated, ExtinctionCoefficient, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'DropSenseA280Result'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXTINCTIONCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("ExtinctionCoefficient", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ELNExperimentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNExperiment
    Data Type Display Name: Experiment (Experiments)
    Fields: CreatedBy, DataRecordName, DataTypeId, DateCreated, TemplateExperimentName, TemplateVersion, VeloxCompletedBy, VeloxDateCompleted, VeloxExperimentStatus, VeloxLastModifiedBy, VeloxLastModifiedDate, VELOXOWNER
    Data type to represent the base E-Notebook data type.
    """
    DATA_TYPE_NAME: str = 'ELNExperiment'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPEID__FIELD_NAME: WrapperField = WrapperField("DataTypeId", FieldType.LONG)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    TEMPLATEEXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("TemplateExperimentName", FieldType.STRING)
    TEMPLATEVERSION__FIELD_NAME: WrapperField = WrapperField("TemplateVersion", FieldType.LONG)
    VELOXCOMPLETEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxCompletedBy", FieldType.STRING)
    VELOXDATECOMPLETED__FIELD_NAME: WrapperField = WrapperField("VeloxDateCompleted", FieldType.DATE)
    VELOXEXPERIMENTSTATUS__FIELD_NAME: WrapperField = WrapperField("VeloxExperimentStatus", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VELOXOWNER__FIELD_NAME: WrapperField = WrapperField("VELOXOWNER", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataTypeId' on this record model
        """
        self.set_field_value(self.DATATYPEID__FIELD_NAME.field_name, value)

    def get_DataTypeId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataTypeId' from this record model
        """
        return self.get_field_value(self.DATATYPEID__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TemplateExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateExperimentName' on this record model
        """
        self.set_field_value(self.TEMPLATEEXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_TemplateExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateExperimentName' from this record model
        """
        return self.get_field_value(self.TEMPLATEEXPERIMENTNAME__FIELD_NAME.field_name)

    def set_TemplateVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'TemplateVersion' on this record model
        """
        self.set_field_value(self.TEMPLATEVERSION__FIELD_NAME.field_name, value)

    def get_TemplateVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TemplateVersion' from this record model
        """
        return self.get_field_value(self.TEMPLATEVERSION__FIELD_NAME.field_name)

    def set_VeloxCompletedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxCompletedBy' on this record model
        """
        self.set_field_value(self.VELOXCOMPLETEDBY__FIELD_NAME.field_name, value)

    def get_VeloxCompletedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxCompletedBy' from this record model
        """
        return self.get_field_value(self.VELOXCOMPLETEDBY__FIELD_NAME.field_name)

    def set_VeloxDateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxDateCompleted' on this record model
        """
        self.set_field_value(self.VELOXDATECOMPLETED__FIELD_NAME.field_name, value)

    def get_VeloxDateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxDateCompleted' from this record model
        """
        return self.get_field_value(self.VELOXDATECOMPLETED__FIELD_NAME.field_name)

    def set_VeloxExperimentStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxExperimentStatus' on this record model
        """
        self.set_field_value(self.VELOXEXPERIMENTSTATUS__FIELD_NAME.field_name, value)

    def get_VeloxExperimentStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxExperimentStatus' from this record model
        """
        return self.get_field_value(self.VELOXEXPERIMENTSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VELOXOWNER_field(self, value: Optional[str]):
        """
        Set data field with field name 'VELOXOWNER' on this record model
        """
        self.set_field_value(self.VELOXOWNER__FIELD_NAME.field_name, value)

    def get_VELOXOWNER_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VELOXOWNER' from this record model
        """
        return self.get_field_value(self.VELOXOWNER__FIELD_NAME.field_name)


class ELNExperimentDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNExperimentDetail
    Data Type Display Name: Experiment Detail (Experiment Details)
    Fields: CreatedBy, DataRecordName, DataTypeId, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    Data type to represent the base E-Notebook data type to represent the experiment details.
    """
    DATA_TYPE_NAME: str = 'ELNExperimentDetail'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPEID__FIELD_NAME: WrapperField = WrapperField("DataTypeId", FieldType.LONG)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataTypeId' on this record model
        """
        self.set_field_value(self.DATATYPEID__FIELD_NAME.field_name, value)

    def get_DataTypeId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataTypeId' from this record model
        """
        return self.get_field_value(self.DATATYPEID__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ELNSampleDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNSampleDetail
    Data Type Display Name: Sample Detail (Sample Details)
    Fields: CreatedBy, DataRecordName, DataTypeId, DateCreated, OtherSampleId, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    Data type to represent the base E-Notebook data type to represent the sample level details.
    """
    DATA_TYPE_NAME: str = 'ELNSampleDetail'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPEID__FIELD_NAME: WrapperField = WrapperField("DataTypeId", FieldType.LONG)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataTypeId' on this record model
        """
        self.set_field_value(self.DATATYPEID__FIELD_NAME.field_name, value)

    def get_DataTypeId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataTypeId' from this record model
        """
        return self.get_field_value(self.DATATYPEID__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ELNTextEntryDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNTextEntryDetail
    Data Type Display Name: ELN Text Entry Detail (ELN Text Entry Details)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, TextField, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    This data type is used to store the latest PDF file that has been generated from a given notebook.
    """
    DATA_TYPE_NAME: str = 'ELNTextEntryDetail'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    TEXTFIELD__FIELD_NAME: WrapperField = WrapperField("TextField", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_TextField_field(self, value: Optional[str]):
        """
        Set data field with field name 'TextField' on this record model
        """
        self.set_field_value(self.TEXTFIELD__FIELD_NAME.field_name, value)

    def get_TextField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TextField' from this record model
        """
        return self.get_field_value(self.TEXTFIELD__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EmailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Email
    Data Type Display Name: Email (Emails)
    Fields: AddressedTo, Body, CarbonCopy, CreatedBy, DataRecordName, DateCreated, MultiParentLink230, SentDate, SentFrom, Subject, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Email'
    ADDRESSEDTO__FIELD_NAME: WrapperField = WrapperField("AddressedTo", FieldType.STRING)
    BODY__FIELD_NAME: WrapperField = WrapperField("Body", FieldType.STRING)
    CARBONCOPY__FIELD_NAME: WrapperField = WrapperField("CarbonCopy", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MULTIPARENTLINK230__FIELD_NAME: WrapperField = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK)
    SENTDATE__FIELD_NAME: WrapperField = WrapperField("SentDate", FieldType.DATE)
    SENTFROM__FIELD_NAME: WrapperField = WrapperField("SentFrom", FieldType.STRING)
    SUBJECT__FIELD_NAME: WrapperField = WrapperField("Subject", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AddressedTo_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddressedTo' on this record model
        """
        self.set_field_value(self.ADDRESSEDTO__FIELD_NAME.field_name, value)

    def get_AddressedTo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddressedTo' from this record model
        """
        return self.get_field_value(self.ADDRESSEDTO__FIELD_NAME.field_name)

    def set_Body_field(self, value: Optional[str]):
        """
        Set data field with field name 'Body' on this record model
        """
        self.set_field_value(self.BODY__FIELD_NAME.field_name, value)

    def get_Body_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Body' from this record model
        """
        return self.get_field_value(self.BODY__FIELD_NAME.field_name)

    def set_CarbonCopy_field(self, value: Optional[str]):
        """
        Set data field with field name 'CarbonCopy' on this record model
        """
        self.set_field_value(self.CARBONCOPY__FIELD_NAME.field_name, value)

    def get_CarbonCopy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CarbonCopy' from this record model
        """
        return self.get_field_value(self.CARBONCOPY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SentDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SentDate' on this record model
        """
        self.set_field_value(self.SENTDATE__FIELD_NAME.field_name, value)

    def get_SentDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SentDate' from this record model
        """
        return self.get_field_value(self.SENTDATE__FIELD_NAME.field_name)

    def set_SentFrom_field(self, value: Optional[str]):
        """
        Set data field with field name 'SentFrom' on this record model
        """
        self.set_field_value(self.SENTFROM__FIELD_NAME.field_name, value)

    def get_SentFrom_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SentFrom' from this record model
        """
        return self.get_field_value(self.SENTFROM__FIELD_NAME.field_name)

    def set_Subject_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subject' on this record model
        """
        self.set_field_value(self.SUBJECT__FIELD_NAME.field_name, value)

    def get_Subject_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subject' from this record model
        """
        return self.get_field_value(self.SUBJECT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EnbAttachmentThumbnailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type EnbAttachmentThumbnail
    Data Type Display Name: E-Notebook Attachment Thumbnail (E-Notebook Attachment Thumbnails)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, PageNumber, ResolutionHeight, ResolutionWidth, SinglePage, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    An attachment that stores a cached thumbnail of a page from a document attached to an Experiment entry.
    """
    DATA_TYPE_NAME: str = 'EnbAttachmentThumbnail'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    PAGENUMBER__FIELD_NAME: WrapperField = WrapperField("PageNumber", FieldType.INTEGER)
    RESOLUTIONHEIGHT__FIELD_NAME: WrapperField = WrapperField("ResolutionHeight", FieldType.INTEGER)
    RESOLUTIONWIDTH__FIELD_NAME: WrapperField = WrapperField("ResolutionWidth", FieldType.INTEGER)
    SINGLEPAGE__FIELD_NAME: WrapperField = WrapperField("SinglePage", FieldType.BOOLEAN)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_PageNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'PageNumber' on this record model
        """
        self.set_field_value(self.PAGENUMBER__FIELD_NAME.field_name, value)

    def get_PageNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PageNumber' from this record model
        """
        return self.get_field_value(self.PAGENUMBER__FIELD_NAME.field_name)

    def set_ResolutionHeight_field(self, value: Optional[int]):
        """
        Set data field with field name 'ResolutionHeight' on this record model
        """
        self.set_field_value(self.RESOLUTIONHEIGHT__FIELD_NAME.field_name, value)

    def get_ResolutionHeight_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ResolutionHeight' from this record model
        """
        return self.get_field_value(self.RESOLUTIONHEIGHT__FIELD_NAME.field_name)

    def set_ResolutionWidth_field(self, value: Optional[int]):
        """
        Set data field with field name 'ResolutionWidth' on this record model
        """
        self.set_field_value(self.RESOLUTIONWIDTH__FIELD_NAME.field_name, value)

    def get_ResolutionWidth_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ResolutionWidth' from this record model
        """
        return self.get_field_value(self.RESOLUTIONWIDTH__FIELD_NAME.field_name)

    def set_SinglePage_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SinglePage' on this record model
        """
        self.set_field_value(self.SINGLEPAGE__FIELD_NAME.field_name, value)

    def get_SinglePage_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SinglePage' from this record model
        """
        return self.get_field_value(self.SINGLEPAGE__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EnzymeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Enzyme
    Data Type Display Name: Enzyme (Enzymes)
    Fields: ConsumableName, ConsumableType, CreatedBy, CuttingPattern, DataRecordName, DateCreated, DateOfPurchase, EnzymeType, ExpirationDate, Isoschizomers, LotNumber, Neoschizomers, PartNumber, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'Enzyme'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUTTINGPATTERN__FIELD_NAME: WrapperField = WrapperField("CuttingPattern", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEOFPURCHASE__FIELD_NAME: WrapperField = WrapperField("DateOfPurchase", FieldType.DATE)
    ENZYMETYPE__FIELD_NAME: WrapperField = WrapperField("EnzymeType", FieldType.PICKLIST)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    ISOSCHIZOMERS__FIELD_NAME: WrapperField = WrapperField("Isoschizomers", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    NEOSCHIZOMERS__FIELD_NAME: WrapperField = WrapperField("Neoschizomers", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CuttingPattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'CuttingPattern' on this record model
        """
        self.set_field_value(self.CUTTINGPATTERN__FIELD_NAME.field_name, value)

    def get_CuttingPattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CuttingPattern' from this record model
        """
        return self.get_field_value(self.CUTTINGPATTERN__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateOfPurchase_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfPurchase' on this record model
        """
        self.set_field_value(self.DATEOFPURCHASE__FIELD_NAME.field_name, value)

    def get_DateOfPurchase_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfPurchase' from this record model
        """
        return self.get_field_value(self.DATEOFPURCHASE__FIELD_NAME.field_name)

    def set_EnzymeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnzymeType' on this record model
        """
        self.set_field_value(self.ENZYMETYPE__FIELD_NAME.field_name, value)

    def get_EnzymeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnzymeType' from this record model
        """
        return self.get_field_value(self.ENZYMETYPE__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Isoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Isoschizomers' on this record model
        """
        self.set_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Isoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Isoschizomers' from this record model
        """
        return self.get_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_Neoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Neoschizomers' on this record model
        """
        self.set_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Neoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Neoschizomers' from this record model
        """
        return self.get_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class EnzymePartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type EnzymePart
    Data Type Display Name: Enzyme Part (Enzyme Parts)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, EnzymeType, IsDefault, IsGoldenGate, Isoschizomers, Neoschizomers, PartNumber, QuantityOnHand, QuantityPerItem, ReactionBuffer, RecognitionSequence, ReorderLevelQuantity, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'EnzymePart'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.AUTO_ACCESSION)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ENZYMETYPE__FIELD_NAME: WrapperField = WrapperField("EnzymeType", FieldType.PICKLIST)
    ISDEFAULT__FIELD_NAME: WrapperField = WrapperField("IsDefault", FieldType.BOOLEAN)
    ISGOLDENGATE__FIELD_NAME: WrapperField = WrapperField("IsGoldenGate", FieldType.BOOLEAN)
    ISOSCHIZOMERS__FIELD_NAME: WrapperField = WrapperField("Isoschizomers", FieldType.STRING)
    NEOSCHIZOMERS__FIELD_NAME: WrapperField = WrapperField("Neoschizomers", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REACTIONBUFFER__FIELD_NAME: WrapperField = WrapperField("ReactionBuffer", FieldType.STRING)
    RECOGNITIONSEQUENCE__FIELD_NAME: WrapperField = WrapperField("RecognitionSequence", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnzymeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnzymeType' on this record model
        """
        self.set_field_value(self.ENZYMETYPE__FIELD_NAME.field_name, value)

    def get_EnzymeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnzymeType' from this record model
        """
        return self.get_field_value(self.ENZYMETYPE__FIELD_NAME.field_name)

    def set_IsDefault_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsDefault' on this record model
        """
        self.set_field_value(self.ISDEFAULT__FIELD_NAME.field_name, value)

    def get_IsDefault_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsDefault' from this record model
        """
        return self.get_field_value(self.ISDEFAULT__FIELD_NAME.field_name)

    def set_IsGoldenGate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGoldenGate' on this record model
        """
        self.set_field_value(self.ISGOLDENGATE__FIELD_NAME.field_name, value)

    def get_IsGoldenGate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGoldenGate' from this record model
        """
        return self.get_field_value(self.ISGOLDENGATE__FIELD_NAME.field_name)

    def set_Isoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Isoschizomers' on this record model
        """
        self.set_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Isoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Isoschizomers' from this record model
        """
        return self.get_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_Neoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Neoschizomers' on this record model
        """
        self.set_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Neoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Neoschizomers' from this record model
        """
        return self.get_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReactionBuffer_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReactionBuffer' on this record model
        """
        self.set_field_value(self.REACTIONBUFFER__FIELD_NAME.field_name, value)

    def get_ReactionBuffer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReactionBuffer' from this record model
        """
        return self.get_field_value(self.REACTIONBUFFER__FIELD_NAME.field_name)

    def set_RecognitionSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecognitionSequence' on this record model
        """
        self.set_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name, value)

    def get_RecognitionSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecognitionSequence' from this record model
        """
        return self.get_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class ErrorMetricModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ErrorMetric
    Data Type Display Name: Error Metric (Error Metrics)
    Fields: ColRead, CreatedBy, DataRecordName, DateCreated, ErrorRate, Lane, LaneCol, PlusMinus, VeloxLastModifiedBy, VeloxLastModifiedDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'ErrorMetric'
    COLREAD__FIELD_NAME: WrapperField = WrapperField("ColRead", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ERRORRATE__FIELD_NAME: WrapperField = WrapperField("ErrorRate", FieldType.DOUBLE)
    LANE__FIELD_NAME: WrapperField = WrapperField("Lane", FieldType.LONG)
    LANECOL__FIELD_NAME: WrapperField = WrapperField("LaneCol", FieldType.STRING)
    PLUSMINUS__FIELD_NAME: WrapperField = WrapperField("PlusMinus", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ErrorRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'ErrorRate' on this record model
        """
        self.set_field_value(self.ERRORRATE__FIELD_NAME.field_name, value)

    def get_ErrorRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ErrorRate' from this record model
        """
        return self.get_field_value(self.ERRORRATE__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_PlusMinus_field(self, value: Optional[float]):
        """
        Set data field with field name 'PlusMinus' on this record model
        """
        self.set_field_value(self.PLUSMINUS__FIELD_NAME.field_name, value)

    def get_PlusMinus_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PlusMinus' from this record model
        """
        return self.get_field_value(self.PLUSMINUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Event
    Data Type Display Name: Event (Event)
    Fields: Comments, CreatedBy, DataRecordName, DateCreated, EndDateTime, EventDescription, EventName, EventStatus, ReminderDateTime, ReminderSent, StartDateTime, UserName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Event'
    COMMENTS__FIELD_NAME: WrapperField = WrapperField("Comments", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ENDDATETIME__FIELD_NAME: WrapperField = WrapperField("EndDateTime", FieldType.DATE)
    EVENTDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("EventDescription", FieldType.STRING)
    EVENTNAME__FIELD_NAME: WrapperField = WrapperField("EventName", FieldType.STRING)
    EVENTSTATUS__FIELD_NAME: WrapperField = WrapperField("EventStatus", FieldType.PICKLIST)
    REMINDERDATETIME__FIELD_NAME: WrapperField = WrapperField("ReminderDateTime", FieldType.DATE)
    REMINDERSENT__FIELD_NAME: WrapperField = WrapperField("ReminderSent", FieldType.BOOLEAN)
    STARTDATETIME__FIELD_NAME: WrapperField = WrapperField("StartDateTime", FieldType.DATE)
    USERNAME__FIELD_NAME: WrapperField = WrapperField("UserName", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndDateTime' on this record model
        """
        self.set_field_value(self.ENDDATETIME__FIELD_NAME.field_name, value)

    def get_EndDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndDateTime' from this record model
        """
        return self.get_field_value(self.ENDDATETIME__FIELD_NAME.field_name)

    def set_EventDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventDescription' on this record model
        """
        self.set_field_value(self.EVENTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_EventDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventDescription' from this record model
        """
        return self.get_field_value(self.EVENTDESCRIPTION__FIELD_NAME.field_name)

    def set_EventName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventName' on this record model
        """
        self.set_field_value(self.EVENTNAME__FIELD_NAME.field_name, value)

    def get_EventName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventName' from this record model
        """
        return self.get_field_value(self.EVENTNAME__FIELD_NAME.field_name)

    def set_EventStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventStatus' on this record model
        """
        self.set_field_value(self.EVENTSTATUS__FIELD_NAME.field_name, value)

    def get_EventStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventStatus' from this record model
        """
        return self.get_field_value(self.EVENTSTATUS__FIELD_NAME.field_name)

    def set_ReminderDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReminderDateTime' on this record model
        """
        self.set_field_value(self.REMINDERDATETIME__FIELD_NAME.field_name, value)

    def get_ReminderDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReminderDateTime' from this record model
        """
        return self.get_field_value(self.REMINDERDATETIME__FIELD_NAME.field_name)

    def set_ReminderSent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReminderSent' on this record model
        """
        self.set_field_value(self.REMINDERSENT__FIELD_NAME.field_name, value)

    def get_ReminderSent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReminderSent' from this record model
        """
        return self.get_field_value(self.REMINDERSENT__FIELD_NAME.field_name)

    def set_StartDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDateTime' on this record model
        """
        self.set_field_value(self.STARTDATETIME__FIELD_NAME.field_name, value)

    def get_StartDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDateTime' from this record model
        """
        return self.get_field_value(self.STARTDATETIME__FIELD_NAME.field_name)

    def set_UserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserName' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_UserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserName' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExemplarConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExemplarConfig
    Data Type Display Name: Sapio Configurations (Sapio Configurations)
    Fields: ActiveNotebooksInWorkQueue, AddAllUserAsCandidate, AddAllUserAsCandidateHelp, AddConsumablesToExperiments, AdditionalInstMaintEmails, AdditionalNotificationEmails, AdditionalQCMailingList, AdHocExperimentsInheritAccess, AlwaysLaunchInstMaintWorkflow, ApproverVisibleRoleType, AssignRoleNotificationButton, AssignToProcessUserGroupList, AuthenticationRequired, Bowtie2ExecPath, Bowtie2GRChIndexPrefix, BowtieGrCh38RefIndexPrefix, BowtieIndexDirectory, BroadcastMaintAlert, BroadcastMaintUsers, CanModifyExistingVSMTPItems, ConfigureInstrumentFileField, ConsumableDataTypes, ConsumableDirectories, ConsumableTrackingAttribute, ConsumableTypeMaxTemp, CoolingStorageUnitTypes, CreatedBy, CreateInWorkflow, DataRecordName, DateCreated, DefaultELNExperimentGroupRoles, DefaultELNExperimentRoles, DefaultELNExperimentRolesHelp, DefineConsumableDataTypes, DefineConsumableDirectories, Delimiter, ELNCreateSmplExtentionMultiSel, ELNImportSamplesOverride, Email, EnableAutoLotPopulation, EnableBaselineSampleRec, EnableDND, EnableElnRoleCandidates, EnableMultiTenantDashboards, EnforceConsumableDirectory, EnforceExpiration, EnforceSufficientQuantity, ENotebookSignoffGroups, ENotebookSignoffGroupsHelp, EnumerateStorage, EsignEmailOwnerNotebookUnlock, EsignSendEmailOnDecision, EsignSendEmailOnEntryUnlock, EsignSendEmailOnNotebookUnlock, EsigRequireAllAuthor, EsigRequireAllAuthorHelp, ExperimentBannerExpFields, ExperimentBannerParentFields, ExportExemplarConfigButton, ExportFullConfigButton, ExportSelectedConfigButton, ExportStaticConfigurations, GenerateItemBarcode, GRChFASTAPath, ImportBackupConfigButton, ImportBaseLineDescription, ImportExemplarConfigButton, ImportExportExemplarConfigText, ImportExportSystemConfigsText, ImportSystemConfigButton, IndexedStorageType, InstrumentForceIdvRegistration, MatManEnableFeatureExt, MmForceIdvRegistration, MmSampleFieldsToDisplay, MultiLayerPlatePoolIfSameType, NativePyExecPath, NativeRExecPath, NewConsumableDirName, NotificationUsers, NotifyMaintTechnicians, OverrideGroups, PlasmidDataType, PlateDesignerPrimaryTypes, Port, PreNotificationInterval, PrintConsumableBarcode, QCMailingList, QuantityTracking, RecordReportAccessGroups, RecordReportDataTypeList, RecordStorageEvents, ReqPortalManifestFieldNames, RequireESignature, RestrictAccessByLocation, ReviewerVisibleRoleType, RTransExecPath, S3AccessKeyId, S3SecretAcessKey, SaasMaxNumOfSamplesPerTrans, SaasMaxSamples, SaasMode, SampleReceivingEmails, SampleReceivingUserMenu, SampleTypeMaximumTemperature, SamtoolsExecPath, SDMSRootPath, SecureSocketLayer, SendTestMail, SMTPServer, SmtpUsername, StorageUnitViewerFillByConfig, SystemPassword, TemperatureEnforcement, TLSEnabled, TLSRequired, UseRequestDefaultLayout, VeloxLastModifiedBy, VeloxLastModifiedDate, VerificationTypes, WitnessVisibleRoleType, WriteQCInputFileToUser
    """
    DATA_TYPE_NAME: str = 'ExemplarConfig'
    ACTIVENOTEBOOKSINWORKQUEUE__FIELD_NAME: WrapperField = WrapperField("ActiveNotebooksInWorkQueue", FieldType.BOOLEAN)
    ADDALLUSERASCANDIDATE__FIELD_NAME: WrapperField = WrapperField("AddAllUserAsCandidate", FieldType.BOOLEAN)
    ADDALLUSERASCANDIDATEHELP__FIELD_NAME: WrapperField = WrapperField("AddAllUserAsCandidateHelp", FieldType.STRING)
    ADDCONSUMABLESTOEXPERIMENTS__FIELD_NAME: WrapperField = WrapperField("AddConsumablesToExperiments", FieldType.BOOLEAN)
    ADDITIONALINSTMAINTEMAILS__FIELD_NAME: WrapperField = WrapperField("AdditionalInstMaintEmails", FieldType.STRING)
    ADDITIONALNOTIFICATIONEMAILS__FIELD_NAME: WrapperField = WrapperField("AdditionalNotificationEmails", FieldType.STRING)
    ADDITIONALQCMAILINGLIST__FIELD_NAME: WrapperField = WrapperField("AdditionalQCMailingList", FieldType.STRING)
    ADHOCEXPERIMENTSINHERITACCESS__FIELD_NAME: WrapperField = WrapperField("AdHocExperimentsInheritAccess", FieldType.BOOLEAN)
    ALWAYSLAUNCHINSTMAINTWORKFLOW__FIELD_NAME: WrapperField = WrapperField("AlwaysLaunchInstMaintWorkflow", FieldType.BOOLEAN)
    APPROVERVISIBLEROLETYPE__FIELD_NAME: WrapperField = WrapperField("ApproverVisibleRoleType", FieldType.BOOLEAN)
    ASSIGNROLENOTIFICATIONBUTTON__FIELD_NAME: WrapperField = WrapperField("AssignRoleNotificationButton", FieldType.ACTION)
    ASSIGNTOPROCESSUSERGROUPLIST__FIELD_NAME: WrapperField = WrapperField("AssignToProcessUserGroupList", FieldType.SELECTION)
    AUTHENTICATIONREQUIRED__FIELD_NAME: WrapperField = WrapperField("AuthenticationRequired", FieldType.BOOLEAN)
    BOWTIE2EXECPATH__FIELD_NAME: WrapperField = WrapperField("Bowtie2ExecPath", FieldType.STRING)
    BOWTIE2GRCHINDEXPREFIX__FIELD_NAME: WrapperField = WrapperField("Bowtie2GRChIndexPrefix", FieldType.STRING)
    BOWTIEGRCH38REFINDEXPREFIX__FIELD_NAME: WrapperField = WrapperField("BowtieGrCh38RefIndexPrefix", FieldType.STRING)
    BOWTIEINDEXDIRECTORY__FIELD_NAME: WrapperField = WrapperField("BowtieIndexDirectory", FieldType.STRING)
    BROADCASTMAINTALERT__FIELD_NAME: WrapperField = WrapperField("BroadcastMaintAlert", FieldType.BOOLEAN)
    BROADCASTMAINTUSERS__FIELD_NAME: WrapperField = WrapperField("BroadcastMaintUsers", FieldType.SELECTION)
    CANMODIFYEXISTINGVSMTPITEMS__FIELD_NAME: WrapperField = WrapperField("CanModifyExistingVSMTPItems", FieldType.BOOLEAN)
    CONFIGUREINSTRUMENTFILEFIELD__FIELD_NAME: WrapperField = WrapperField("ConfigureInstrumentFileField", FieldType.ACTION)
    CONSUMABLEDATATYPES__FIELD_NAME: WrapperField = WrapperField("ConsumableDataTypes", FieldType.STRING)
    CONSUMABLEDIRECTORIES__FIELD_NAME: WrapperField = WrapperField("ConsumableDirectories", FieldType.STRING)
    CONSUMABLETRACKINGATTRIBUTE__FIELD_NAME: WrapperField = WrapperField("ConsumableTrackingAttribute", FieldType.PICKLIST)
    CONSUMABLETYPEMAXTEMP__FIELD_NAME: WrapperField = WrapperField("ConsumableTypeMaxTemp", FieldType.STRING)
    COOLINGSTORAGEUNITTYPES__FIELD_NAME: WrapperField = WrapperField("CoolingStorageUnitTypes", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CREATEINWORKFLOW__FIELD_NAME: WrapperField = WrapperField("CreateInWorkflow", FieldType.BOOLEAN)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEFAULTELNEXPERIMENTGROUPROLES__FIELD_NAME: WrapperField = WrapperField("DefaultELNExperimentGroupRoles", FieldType.SELECTION)
    DEFAULTELNEXPERIMENTROLES__FIELD_NAME: WrapperField = WrapperField("DefaultELNExperimentRoles", FieldType.SELECTION)
    DEFAULTELNEXPERIMENTROLESHELP__FIELD_NAME: WrapperField = WrapperField("DefaultELNExperimentRolesHelp", FieldType.STRING)
    DEFINECONSUMABLEDATATYPES__FIELD_NAME: WrapperField = WrapperField("DefineConsumableDataTypes", FieldType.ACTION)
    DEFINECONSUMABLEDIRECTORIES__FIELD_NAME: WrapperField = WrapperField("DefineConsumableDirectories", FieldType.ACTION)
    DELIMITER__FIELD_NAME: WrapperField = WrapperField("Delimiter", FieldType.STRING)
    ELNCREATESMPLEXTENTIONMULTISEL__FIELD_NAME: WrapperField = WrapperField("ELNCreateSmplExtentionMultiSel", FieldType.BOOLEAN)
    ELNIMPORTSAMPLESOVERRIDE__FIELD_NAME: WrapperField = WrapperField("ELNImportSamplesOverride", FieldType.STRING)
    EMAIL__FIELD_NAME: WrapperField = WrapperField("Email", FieldType.STRING)
    ENABLEAUTOLOTPOPULATION__FIELD_NAME: WrapperField = WrapperField("EnableAutoLotPopulation", FieldType.BOOLEAN)
    ENABLEBASELINESAMPLEREC__FIELD_NAME: WrapperField = WrapperField("EnableBaselineSampleRec", FieldType.BOOLEAN)
    ENABLEDND__FIELD_NAME: WrapperField = WrapperField("EnableDND", FieldType.BOOLEAN)
    ENABLEELNROLECANDIDATES__FIELD_NAME: WrapperField = WrapperField("EnableElnRoleCandidates", FieldType.BOOLEAN)
    ENABLEMULTITENANTDASHBOARDS__FIELD_NAME: WrapperField = WrapperField("EnableMultiTenantDashboards", FieldType.BOOLEAN)
    ENFORCECONSUMABLEDIRECTORY__FIELD_NAME: WrapperField = WrapperField("EnforceConsumableDirectory", FieldType.BOOLEAN)
    ENFORCEEXPIRATION__FIELD_NAME: WrapperField = WrapperField("EnforceExpiration", FieldType.BOOLEAN)
    ENFORCESUFFICIENTQUANTITY__FIELD_NAME: WrapperField = WrapperField("EnforceSufficientQuantity", FieldType.BOOLEAN)
    ENOTEBOOKSIGNOFFGROUPS__FIELD_NAME: WrapperField = WrapperField("ENotebookSignoffGroups", FieldType.SELECTION)
    ENOTEBOOKSIGNOFFGROUPSHELP__FIELD_NAME: WrapperField = WrapperField("ENotebookSignoffGroupsHelp", FieldType.STRING)
    ENUMERATESTORAGE__FIELD_NAME: WrapperField = WrapperField("EnumerateStorage", FieldType.BOOLEAN)
    ESIGNEMAILOWNERNOTEBOOKUNLOCK__FIELD_NAME: WrapperField = WrapperField("EsignEmailOwnerNotebookUnlock", FieldType.BOOLEAN)
    ESIGNSENDEMAILONDECISION__FIELD_NAME: WrapperField = WrapperField("EsignSendEmailOnDecision", FieldType.BOOLEAN)
    ESIGNSENDEMAILONENTRYUNLOCK__FIELD_NAME: WrapperField = WrapperField("EsignSendEmailOnEntryUnlock", FieldType.BOOLEAN)
    ESIGNSENDEMAILONNOTEBOOKUNLOCK__FIELD_NAME: WrapperField = WrapperField("EsignSendEmailOnNotebookUnlock", FieldType.BOOLEAN)
    ESIGREQUIREALLAUTHOR__FIELD_NAME: WrapperField = WrapperField("EsigRequireAllAuthor", FieldType.BOOLEAN)
    ESIGREQUIREALLAUTHORHELP__FIELD_NAME: WrapperField = WrapperField("EsigRequireAllAuthorHelp", FieldType.STRING)
    EXPERIMENTBANNEREXPFIELDS__FIELD_NAME: WrapperField = WrapperField("ExperimentBannerExpFields", FieldType.SELECTION)
    EXPERIMENTBANNERPARENTFIELDS__FIELD_NAME: WrapperField = WrapperField("ExperimentBannerParentFields", FieldType.SELECTION)
    EXPORTEXEMPLARCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("ExportExemplarConfigButton", FieldType.ACTION)
    EXPORTFULLCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("ExportFullConfigButton", FieldType.ACTION)
    EXPORTSELECTEDCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("ExportSelectedConfigButton", FieldType.ACTION)
    EXPORTSTATICCONFIGURATIONS__FIELD_NAME: WrapperField = WrapperField("ExportStaticConfigurations", FieldType.ACTION)
    GENERATEITEMBARCODE__FIELD_NAME: WrapperField = WrapperField("GenerateItemBarcode", FieldType.BOOLEAN)
    GRCHFASTAPATH__FIELD_NAME: WrapperField = WrapperField("GRChFASTAPath", FieldType.STRING)
    IMPORTBACKUPCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("ImportBackupConfigButton", FieldType.ACTION)
    IMPORTBASELINEDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("ImportBaseLineDescription", FieldType.STRING)
    IMPORTEXEMPLARCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("ImportExemplarConfigButton", FieldType.ACTION)
    IMPORTEXPORTEXEMPLARCONFIGTEXT__FIELD_NAME: WrapperField = WrapperField("ImportExportExemplarConfigText", FieldType.STRING)
    IMPORTEXPORTSYSTEMCONFIGSTEXT__FIELD_NAME: WrapperField = WrapperField("ImportExportSystemConfigsText", FieldType.STRING)
    IMPORTSYSTEMCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("ImportSystemConfigButton", FieldType.ACTION)
    INDEXEDSTORAGETYPE__FIELD_NAME: WrapperField = WrapperField("IndexedStorageType", FieldType.SELECTION)
    INSTRUMENTFORCEIDVREGISTRATION__FIELD_NAME: WrapperField = WrapperField("InstrumentForceIdvRegistration", FieldType.BOOLEAN)
    MATMANENABLEFEATUREEXT__FIELD_NAME: WrapperField = WrapperField("MatManEnableFeatureExt", FieldType.BOOLEAN)
    MMFORCEIDVREGISTRATION__FIELD_NAME: WrapperField = WrapperField("MmForceIdvRegistration", FieldType.BOOLEAN)
    MMSAMPLEFIELDSTODISPLAY__FIELD_NAME: WrapperField = WrapperField("MmSampleFieldsToDisplay", FieldType.SELECTION)
    MULTILAYERPLATEPOOLIFSAMETYPE__FIELD_NAME: WrapperField = WrapperField("MultiLayerPlatePoolIfSameType", FieldType.BOOLEAN)
    NATIVEPYEXECPATH__FIELD_NAME: WrapperField = WrapperField("NativePyExecPath", FieldType.STRING)
    NATIVEREXECPATH__FIELD_NAME: WrapperField = WrapperField("NativeRExecPath", FieldType.STRING)
    NEWCONSUMABLEDIRNAME__FIELD_NAME: WrapperField = WrapperField("NewConsumableDirName", FieldType.STRING)
    NOTIFICATIONUSERS__FIELD_NAME: WrapperField = WrapperField("NotificationUsers", FieldType.SELECTION)
    NOTIFYMAINTTECHNICIANS__FIELD_NAME: WrapperField = WrapperField("NotifyMaintTechnicians", FieldType.BOOLEAN)
    OVERRIDEGROUPS__FIELD_NAME: WrapperField = WrapperField("OverrideGroups", FieldType.SELECTION)
    PLASMIDDATATYPE__FIELD_NAME: WrapperField = WrapperField("PlasmidDataType", FieldType.SELECTION)
    PLATEDESIGNERPRIMARYTYPES__FIELD_NAME: WrapperField = WrapperField("PlateDesignerPrimaryTypes", FieldType.SELECTION)
    PORT__FIELD_NAME: WrapperField = WrapperField("Port", FieldType.INTEGER)
    PRENOTIFICATIONINTERVAL__FIELD_NAME: WrapperField = WrapperField("PreNotificationInterval", FieldType.LONG)
    PRINTCONSUMABLEBARCODE__FIELD_NAME: WrapperField = WrapperField("PrintConsumableBarcode", FieldType.BOOLEAN)
    QCMAILINGLIST__FIELD_NAME: WrapperField = WrapperField("QCMailingList", FieldType.SELECTION)
    QUANTITYTRACKING__FIELD_NAME: WrapperField = WrapperField("QuantityTracking", FieldType.BOOLEAN)
    RECORDREPORTACCESSGROUPS__FIELD_NAME: WrapperField = WrapperField("RecordReportAccessGroups", FieldType.SELECTION)
    RECORDREPORTDATATYPELIST__FIELD_NAME: WrapperField = WrapperField("RecordReportDataTypeList", FieldType.SELECTION)
    RECORDSTORAGEEVENTS__FIELD_NAME: WrapperField = WrapperField("RecordStorageEvents", FieldType.BOOLEAN)
    REQPORTALMANIFESTFIELDNAMES__FIELD_NAME: WrapperField = WrapperField("ReqPortalManifestFieldNames", FieldType.SELECTION)
    REQUIREESIGNATURE__FIELD_NAME: WrapperField = WrapperField("RequireESignature", FieldType.BOOLEAN)
    RESTRICTACCESSBYLOCATION__FIELD_NAME: WrapperField = WrapperField("RestrictAccessByLocation", FieldType.BOOLEAN)
    REVIEWERVISIBLEROLETYPE__FIELD_NAME: WrapperField = WrapperField("ReviewerVisibleRoleType", FieldType.BOOLEAN)
    RTRANSEXECPATH__FIELD_NAME: WrapperField = WrapperField("RTransExecPath", FieldType.STRING)
    S3ACCESSKEYID__FIELD_NAME: WrapperField = WrapperField("S3AccessKeyId", FieldType.STRING)
    S3SECRETACESSKEY__FIELD_NAME: WrapperField = WrapperField("S3SecretAcessKey", FieldType.STRING)
    SAASMAXNUMOFSAMPLESPERTRANS__FIELD_NAME: WrapperField = WrapperField("SaasMaxNumOfSamplesPerTrans", FieldType.LONG)
    SAASMAXSAMPLES__FIELD_NAME: WrapperField = WrapperField("SaasMaxSamples", FieldType.LONG)
    SAASMODE__FIELD_NAME: WrapperField = WrapperField("SaasMode", FieldType.BOOLEAN)
    SAMPLERECEIVINGEMAILS__FIELD_NAME: WrapperField = WrapperField("SampleReceivingEmails", FieldType.STRING)
    SAMPLERECEIVINGUSERMENU__FIELD_NAME: WrapperField = WrapperField("SampleReceivingUserMenu", FieldType.SELECTION)
    SAMPLETYPEMAXIMUMTEMPERATURE__FIELD_NAME: WrapperField = WrapperField("SampleTypeMaximumTemperature", FieldType.STRING)
    SAMTOOLSEXECPATH__FIELD_NAME: WrapperField = WrapperField("SamtoolsExecPath", FieldType.STRING)
    SDMSROOTPATH__FIELD_NAME: WrapperField = WrapperField("SDMSRootPath", FieldType.STRING)
    SECURESOCKETLAYER__FIELD_NAME: WrapperField = WrapperField("SecureSocketLayer", FieldType.BOOLEAN)
    SENDTESTMAIL__FIELD_NAME: WrapperField = WrapperField("SendTestMail", FieldType.ACTION)
    SMTPSERVER__FIELD_NAME: WrapperField = WrapperField("SMTPServer", FieldType.STRING)
    SMTPUSERNAME__FIELD_NAME: WrapperField = WrapperField("SmtpUsername", FieldType.STRING)
    STORAGEUNITVIEWERFILLBYCONFIG__FIELD_NAME: WrapperField = WrapperField("StorageUnitViewerFillByConfig", FieldType.PICKLIST)
    SYSTEMPASSWORD__FIELD_NAME: WrapperField = WrapperField("SystemPassword", FieldType.STRING)
    TEMPERATUREENFORCEMENT__FIELD_NAME: WrapperField = WrapperField("TemperatureEnforcement", FieldType.PICKLIST)
    TLSENABLED__FIELD_NAME: WrapperField = WrapperField("TLSEnabled", FieldType.BOOLEAN)
    TLSREQUIRED__FIELD_NAME: WrapperField = WrapperField("TLSRequired", FieldType.BOOLEAN)
    USEREQUESTDEFAULTLAYOUT__FIELD_NAME: WrapperField = WrapperField("UseRequestDefaultLayout", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VERIFICATIONTYPES__FIELD_NAME: WrapperField = WrapperField("VerificationTypes", FieldType.PICKLIST)
    WITNESSVISIBLEROLETYPE__FIELD_NAME: WrapperField = WrapperField("WitnessVisibleRoleType", FieldType.BOOLEAN)
    WRITEQCINPUTFILETOUSER__FIELD_NAME: WrapperField = WrapperField("WriteQCInputFileToUser", FieldType.BOOLEAN)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveNotebooksInWorkQueue_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ActiveNotebooksInWorkQueue' on this record model
        """
        self.set_field_value(self.ACTIVENOTEBOOKSINWORKQUEUE__FIELD_NAME.field_name, value)

    def get_ActiveNotebooksInWorkQueue_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ActiveNotebooksInWorkQueue' from this record model
        """
        return self.get_field_value(self.ACTIVENOTEBOOKSINWORKQUEUE__FIELD_NAME.field_name)

    def set_AddAllUserAsCandidate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AddAllUserAsCandidate' on this record model
        """
        self.set_field_value(self.ADDALLUSERASCANDIDATE__FIELD_NAME.field_name, value)

    def get_AddAllUserAsCandidate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AddAllUserAsCandidate' from this record model
        """
        return self.get_field_value(self.ADDALLUSERASCANDIDATE__FIELD_NAME.field_name)

    def set_AddAllUserAsCandidateHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddAllUserAsCandidateHelp' on this record model
        """
        self.set_field_value(self.ADDALLUSERASCANDIDATEHELP__FIELD_NAME.field_name, value)

    def get_AddAllUserAsCandidateHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddAllUserAsCandidateHelp' from this record model
        """
        return self.get_field_value(self.ADDALLUSERASCANDIDATEHELP__FIELD_NAME.field_name)

    def set_AddConsumablesToExperiments_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AddConsumablesToExperiments' on this record model
        """
        self.set_field_value(self.ADDCONSUMABLESTOEXPERIMENTS__FIELD_NAME.field_name, value)

    def get_AddConsumablesToExperiments_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AddConsumablesToExperiments' from this record model
        """
        return self.get_field_value(self.ADDCONSUMABLESTOEXPERIMENTS__FIELD_NAME.field_name)

    def set_AdditionalInstMaintEmails_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdditionalInstMaintEmails' on this record model
        """
        self.set_field_value(self.ADDITIONALINSTMAINTEMAILS__FIELD_NAME.field_name, value)

    def get_AdditionalInstMaintEmails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdditionalInstMaintEmails' from this record model
        """
        return self.get_field_value(self.ADDITIONALINSTMAINTEMAILS__FIELD_NAME.field_name)

    def set_AdditionalNotificationEmails_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdditionalNotificationEmails' on this record model
        """
        self.set_field_value(self.ADDITIONALNOTIFICATIONEMAILS__FIELD_NAME.field_name, value)

    def get_AdditionalNotificationEmails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdditionalNotificationEmails' from this record model
        """
        return self.get_field_value(self.ADDITIONALNOTIFICATIONEMAILS__FIELD_NAME.field_name)

    def set_AdditionalQCMailingList_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdditionalQCMailingList' on this record model
        """
        self.set_field_value(self.ADDITIONALQCMAILINGLIST__FIELD_NAME.field_name, value)

    def get_AdditionalQCMailingList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdditionalQCMailingList' from this record model
        """
        return self.get_field_value(self.ADDITIONALQCMAILINGLIST__FIELD_NAME.field_name)

    def set_AdHocExperimentsInheritAccess_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AdHocExperimentsInheritAccess' on this record model
        """
        self.set_field_value(self.ADHOCEXPERIMENTSINHERITACCESS__FIELD_NAME.field_name, value)

    def get_AdHocExperimentsInheritAccess_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AdHocExperimentsInheritAccess' from this record model
        """
        return self.get_field_value(self.ADHOCEXPERIMENTSINHERITACCESS__FIELD_NAME.field_name)

    def set_AlwaysLaunchInstMaintWorkflow_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AlwaysLaunchInstMaintWorkflow' on this record model
        """
        self.set_field_value(self.ALWAYSLAUNCHINSTMAINTWORKFLOW__FIELD_NAME.field_name, value)

    def get_AlwaysLaunchInstMaintWorkflow_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AlwaysLaunchInstMaintWorkflow' from this record model
        """
        return self.get_field_value(self.ALWAYSLAUNCHINSTMAINTWORKFLOW__FIELD_NAME.field_name)

    def set_ApproverVisibleRoleType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ApproverVisibleRoleType' on this record model
        """
        self.set_field_value(self.APPROVERVISIBLEROLETYPE__FIELD_NAME.field_name, value)

    def get_ApproverVisibleRoleType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ApproverVisibleRoleType' from this record model
        """
        return self.get_field_value(self.APPROVERVISIBLEROLETYPE__FIELD_NAME.field_name)

    def set_AssignToProcessUserGroupList_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignToProcessUserGroupList' on this record model
        """
        self.set_field_value(self.ASSIGNTOPROCESSUSERGROUPLIST__FIELD_NAME.field_name, value)

    def get_AssignToProcessUserGroupList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignToProcessUserGroupList' from this record model
        """
        return self.get_field_value(self.ASSIGNTOPROCESSUSERGROUPLIST__FIELD_NAME.field_name)

    def set_AuthenticationRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AuthenticationRequired' on this record model
        """
        self.set_field_value(self.AUTHENTICATIONREQUIRED__FIELD_NAME.field_name, value)

    def get_AuthenticationRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AuthenticationRequired' from this record model
        """
        return self.get_field_value(self.AUTHENTICATIONREQUIRED__FIELD_NAME.field_name)

    def set_Bowtie2ExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'Bowtie2ExecPath' on this record model
        """
        self.set_field_value(self.BOWTIE2EXECPATH__FIELD_NAME.field_name, value)

    def get_Bowtie2ExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Bowtie2ExecPath' from this record model
        """
        return self.get_field_value(self.BOWTIE2EXECPATH__FIELD_NAME.field_name)

    def set_Bowtie2GRChIndexPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'Bowtie2GRChIndexPrefix' on this record model
        """
        self.set_field_value(self.BOWTIE2GRCHINDEXPREFIX__FIELD_NAME.field_name, value)

    def get_Bowtie2GRChIndexPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Bowtie2GRChIndexPrefix' from this record model
        """
        return self.get_field_value(self.BOWTIE2GRCHINDEXPREFIX__FIELD_NAME.field_name)

    def set_BowtieGrCh38RefIndexPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BowtieGrCh38RefIndexPrefix' on this record model
        """
        self.set_field_value(self.BOWTIEGRCH38REFINDEXPREFIX__FIELD_NAME.field_name, value)

    def get_BowtieGrCh38RefIndexPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BowtieGrCh38RefIndexPrefix' from this record model
        """
        return self.get_field_value(self.BOWTIEGRCH38REFINDEXPREFIX__FIELD_NAME.field_name)

    def set_BowtieIndexDirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'BowtieIndexDirectory' on this record model
        """
        self.set_field_value(self.BOWTIEINDEXDIRECTORY__FIELD_NAME.field_name, value)

    def get_BowtieIndexDirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BowtieIndexDirectory' from this record model
        """
        return self.get_field_value(self.BOWTIEINDEXDIRECTORY__FIELD_NAME.field_name)

    def set_BroadcastMaintAlert_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BroadcastMaintAlert' on this record model
        """
        self.set_field_value(self.BROADCASTMAINTALERT__FIELD_NAME.field_name, value)

    def get_BroadcastMaintAlert_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BroadcastMaintAlert' from this record model
        """
        return self.get_field_value(self.BROADCASTMAINTALERT__FIELD_NAME.field_name)

    def set_BroadcastMaintUsers_field(self, value: Optional[str]):
        """
        Set data field with field name 'BroadcastMaintUsers' on this record model
        """
        self.set_field_value(self.BROADCASTMAINTUSERS__FIELD_NAME.field_name, value)

    def get_BroadcastMaintUsers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BroadcastMaintUsers' from this record model
        """
        return self.get_field_value(self.BROADCASTMAINTUSERS__FIELD_NAME.field_name)

    def set_CanModifyExistingVSMTPItems_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanModifyExistingVSMTPItems' on this record model
        """
        self.set_field_value(self.CANMODIFYEXISTINGVSMTPITEMS__FIELD_NAME.field_name, value)

    def get_CanModifyExistingVSMTPItems_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanModifyExistingVSMTPItems' from this record model
        """
        return self.get_field_value(self.CANMODIFYEXISTINGVSMTPITEMS__FIELD_NAME.field_name)

    def set_ConsumableDataTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataTypes' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPES__FIELD_NAME.field_name, value)

    def get_ConsumableDataTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataTypes' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPES__FIELD_NAME.field_name)

    def set_ConsumableDirectories_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDirectories' on this record model
        """
        self.set_field_value(self.CONSUMABLEDIRECTORIES__FIELD_NAME.field_name, value)

    def get_ConsumableDirectories_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDirectories' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDIRECTORIES__FIELD_NAME.field_name)

    def set_ConsumableTrackingAttribute_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableTrackingAttribute' on this record model
        """
        self.set_field_value(self.CONSUMABLETRACKINGATTRIBUTE__FIELD_NAME.field_name, value)

    def get_ConsumableTrackingAttribute_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableTrackingAttribute' from this record model
        """
        return self.get_field_value(self.CONSUMABLETRACKINGATTRIBUTE__FIELD_NAME.field_name)

    def set_ConsumableTypeMaxTemp_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableTypeMaxTemp' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPEMAXTEMP__FIELD_NAME.field_name, value)

    def get_ConsumableTypeMaxTemp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableTypeMaxTemp' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPEMAXTEMP__FIELD_NAME.field_name)

    def set_CoolingStorageUnitTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'CoolingStorageUnitTypes' on this record model
        """
        self.set_field_value(self.COOLINGSTORAGEUNITTYPES__FIELD_NAME.field_name, value)

    def get_CoolingStorageUnitTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CoolingStorageUnitTypes' from this record model
        """
        return self.get_field_value(self.COOLINGSTORAGEUNITTYPES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CreateInWorkflow_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CreateInWorkflow' on this record model
        """
        self.set_field_value(self.CREATEINWORKFLOW__FIELD_NAME.field_name, value)

    def get_CreateInWorkflow_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CreateInWorkflow' from this record model
        """
        return self.get_field_value(self.CREATEINWORKFLOW__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultELNExperimentGroupRoles_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultELNExperimentGroupRoles' on this record model
        """
        self.set_field_value(self.DEFAULTELNEXPERIMENTGROUPROLES__FIELD_NAME.field_name, value)

    def get_DefaultELNExperimentGroupRoles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultELNExperimentGroupRoles' from this record model
        """
        return self.get_field_value(self.DEFAULTELNEXPERIMENTGROUPROLES__FIELD_NAME.field_name)

    def set_DefaultELNExperimentRoles_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultELNExperimentRoles' on this record model
        """
        self.set_field_value(self.DEFAULTELNEXPERIMENTROLES__FIELD_NAME.field_name, value)

    def get_DefaultELNExperimentRoles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultELNExperimentRoles' from this record model
        """
        return self.get_field_value(self.DEFAULTELNEXPERIMENTROLES__FIELD_NAME.field_name)

    def set_DefaultELNExperimentRolesHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultELNExperimentRolesHelp' on this record model
        """
        self.set_field_value(self.DEFAULTELNEXPERIMENTROLESHELP__FIELD_NAME.field_name, value)

    def get_DefaultELNExperimentRolesHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultELNExperimentRolesHelp' from this record model
        """
        return self.get_field_value(self.DEFAULTELNEXPERIMENTROLESHELP__FIELD_NAME.field_name)

    def set_Delimiter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Delimiter' on this record model
        """
        self.set_field_value(self.DELIMITER__FIELD_NAME.field_name, value)

    def get_Delimiter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Delimiter' from this record model
        """
        return self.get_field_value(self.DELIMITER__FIELD_NAME.field_name)

    def set_ELNCreateSmplExtentionMultiSel_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ELNCreateSmplExtentionMultiSel' on this record model
        """
        self.set_field_value(self.ELNCREATESMPLEXTENTIONMULTISEL__FIELD_NAME.field_name, value)

    def get_ELNCreateSmplExtentionMultiSel_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ELNCreateSmplExtentionMultiSel' from this record model
        """
        return self.get_field_value(self.ELNCREATESMPLEXTENTIONMULTISEL__FIELD_NAME.field_name)

    def set_ELNImportSamplesOverride_field(self, value: Optional[str]):
        """
        Set data field with field name 'ELNImportSamplesOverride' on this record model
        """
        self.set_field_value(self.ELNIMPORTSAMPLESOVERRIDE__FIELD_NAME.field_name, value)

    def get_ELNImportSamplesOverride_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ELNImportSamplesOverride' from this record model
        """
        return self.get_field_value(self.ELNIMPORTSAMPLESOVERRIDE__FIELD_NAME.field_name)

    def set_Email_field(self, value: Optional[str]):
        """
        Set data field with field name 'Email' on this record model
        """
        self.set_field_value(self.EMAIL__FIELD_NAME.field_name, value)

    def get_Email_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Email' from this record model
        """
        return self.get_field_value(self.EMAIL__FIELD_NAME.field_name)

    def set_EnableAutoLotPopulation_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAutoLotPopulation' on this record model
        """
        self.set_field_value(self.ENABLEAUTOLOTPOPULATION__FIELD_NAME.field_name, value)

    def get_EnableAutoLotPopulation_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAutoLotPopulation' from this record model
        """
        return self.get_field_value(self.ENABLEAUTOLOTPOPULATION__FIELD_NAME.field_name)

    def set_EnableBaselineSampleRec_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableBaselineSampleRec' on this record model
        """
        self.set_field_value(self.ENABLEBASELINESAMPLEREC__FIELD_NAME.field_name, value)

    def get_EnableBaselineSampleRec_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableBaselineSampleRec' from this record model
        """
        return self.get_field_value(self.ENABLEBASELINESAMPLEREC__FIELD_NAME.field_name)

    def set_EnableDND_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableDND' on this record model
        """
        self.set_field_value(self.ENABLEDND__FIELD_NAME.field_name, value)

    def get_EnableDND_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableDND' from this record model
        """
        return self.get_field_value(self.ENABLEDND__FIELD_NAME.field_name)

    def set_EnableElnRoleCandidates_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableElnRoleCandidates' on this record model
        """
        self.set_field_value(self.ENABLEELNROLECANDIDATES__FIELD_NAME.field_name, value)

    def get_EnableElnRoleCandidates_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableElnRoleCandidates' from this record model
        """
        return self.get_field_value(self.ENABLEELNROLECANDIDATES__FIELD_NAME.field_name)

    def set_EnableMultiTenantDashboards_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableMultiTenantDashboards' on this record model
        """
        self.set_field_value(self.ENABLEMULTITENANTDASHBOARDS__FIELD_NAME.field_name, value)

    def get_EnableMultiTenantDashboards_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableMultiTenantDashboards' from this record model
        """
        return self.get_field_value(self.ENABLEMULTITENANTDASHBOARDS__FIELD_NAME.field_name)

    def set_EnforceConsumableDirectory_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnforceConsumableDirectory' on this record model
        """
        self.set_field_value(self.ENFORCECONSUMABLEDIRECTORY__FIELD_NAME.field_name, value)

    def get_EnforceConsumableDirectory_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnforceConsumableDirectory' from this record model
        """
        return self.get_field_value(self.ENFORCECONSUMABLEDIRECTORY__FIELD_NAME.field_name)

    def set_EnforceExpiration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnforceExpiration' on this record model
        """
        self.set_field_value(self.ENFORCEEXPIRATION__FIELD_NAME.field_name, value)

    def get_EnforceExpiration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnforceExpiration' from this record model
        """
        return self.get_field_value(self.ENFORCEEXPIRATION__FIELD_NAME.field_name)

    def set_EnforceSufficientQuantity_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnforceSufficientQuantity' on this record model
        """
        self.set_field_value(self.ENFORCESUFFICIENTQUANTITY__FIELD_NAME.field_name, value)

    def get_EnforceSufficientQuantity_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnforceSufficientQuantity' from this record model
        """
        return self.get_field_value(self.ENFORCESUFFICIENTQUANTITY__FIELD_NAME.field_name)

    def set_ENotebookSignoffGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'ENotebookSignoffGroups' on this record model
        """
        self.set_field_value(self.ENOTEBOOKSIGNOFFGROUPS__FIELD_NAME.field_name, value)

    def get_ENotebookSignoffGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ENotebookSignoffGroups' from this record model
        """
        return self.get_field_value(self.ENOTEBOOKSIGNOFFGROUPS__FIELD_NAME.field_name)

    def set_ENotebookSignoffGroupsHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'ENotebookSignoffGroupsHelp' on this record model
        """
        self.set_field_value(self.ENOTEBOOKSIGNOFFGROUPSHELP__FIELD_NAME.field_name, value)

    def get_ENotebookSignoffGroupsHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ENotebookSignoffGroupsHelp' from this record model
        """
        return self.get_field_value(self.ENOTEBOOKSIGNOFFGROUPSHELP__FIELD_NAME.field_name)

    def set_EnumerateStorage_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnumerateStorage' on this record model
        """
        self.set_field_value(self.ENUMERATESTORAGE__FIELD_NAME.field_name, value)

    def get_EnumerateStorage_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnumerateStorage' from this record model
        """
        return self.get_field_value(self.ENUMERATESTORAGE__FIELD_NAME.field_name)

    def set_EsignEmailOwnerNotebookUnlock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignEmailOwnerNotebookUnlock' on this record model
        """
        self.set_field_value(self.ESIGNEMAILOWNERNOTEBOOKUNLOCK__FIELD_NAME.field_name, value)

    def get_EsignEmailOwnerNotebookUnlock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignEmailOwnerNotebookUnlock' from this record model
        """
        return self.get_field_value(self.ESIGNEMAILOWNERNOTEBOOKUNLOCK__FIELD_NAME.field_name)

    def set_EsignSendEmailOnDecision_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignSendEmailOnDecision' on this record model
        """
        self.set_field_value(self.ESIGNSENDEMAILONDECISION__FIELD_NAME.field_name, value)

    def get_EsignSendEmailOnDecision_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignSendEmailOnDecision' from this record model
        """
        return self.get_field_value(self.ESIGNSENDEMAILONDECISION__FIELD_NAME.field_name)

    def set_EsignSendEmailOnEntryUnlock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignSendEmailOnEntryUnlock' on this record model
        """
        self.set_field_value(self.ESIGNSENDEMAILONENTRYUNLOCK__FIELD_NAME.field_name, value)

    def get_EsignSendEmailOnEntryUnlock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignSendEmailOnEntryUnlock' from this record model
        """
        return self.get_field_value(self.ESIGNSENDEMAILONENTRYUNLOCK__FIELD_NAME.field_name)

    def set_EsignSendEmailOnNotebookUnlock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignSendEmailOnNotebookUnlock' on this record model
        """
        self.set_field_value(self.ESIGNSENDEMAILONNOTEBOOKUNLOCK__FIELD_NAME.field_name, value)

    def get_EsignSendEmailOnNotebookUnlock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignSendEmailOnNotebookUnlock' from this record model
        """
        return self.get_field_value(self.ESIGNSENDEMAILONNOTEBOOKUNLOCK__FIELD_NAME.field_name)

    def set_EsigRequireAllAuthor_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsigRequireAllAuthor' on this record model
        """
        self.set_field_value(self.ESIGREQUIREALLAUTHOR__FIELD_NAME.field_name, value)

    def get_EsigRequireAllAuthor_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsigRequireAllAuthor' from this record model
        """
        return self.get_field_value(self.ESIGREQUIREALLAUTHOR__FIELD_NAME.field_name)

    def set_EsigRequireAllAuthorHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'EsigRequireAllAuthorHelp' on this record model
        """
        self.set_field_value(self.ESIGREQUIREALLAUTHORHELP__FIELD_NAME.field_name, value)

    def get_EsigRequireAllAuthorHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EsigRequireAllAuthorHelp' from this record model
        """
        return self.get_field_value(self.ESIGREQUIREALLAUTHORHELP__FIELD_NAME.field_name)

    def set_ExperimentBannerExpFields_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentBannerExpFields' on this record model
        """
        self.set_field_value(self.EXPERIMENTBANNEREXPFIELDS__FIELD_NAME.field_name, value)

    def get_ExperimentBannerExpFields_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentBannerExpFields' from this record model
        """
        return self.get_field_value(self.EXPERIMENTBANNEREXPFIELDS__FIELD_NAME.field_name)

    def set_ExperimentBannerParentFields_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentBannerParentFields' on this record model
        """
        self.set_field_value(self.EXPERIMENTBANNERPARENTFIELDS__FIELD_NAME.field_name, value)

    def get_ExperimentBannerParentFields_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentBannerParentFields' from this record model
        """
        return self.get_field_value(self.EXPERIMENTBANNERPARENTFIELDS__FIELD_NAME.field_name)

    def set_GenerateItemBarcode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'GenerateItemBarcode' on this record model
        """
        self.set_field_value(self.GENERATEITEMBARCODE__FIELD_NAME.field_name, value)

    def get_GenerateItemBarcode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'GenerateItemBarcode' from this record model
        """
        return self.get_field_value(self.GENERATEITEMBARCODE__FIELD_NAME.field_name)

    def set_GRChFASTAPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'GRChFASTAPath' on this record model
        """
        self.set_field_value(self.GRCHFASTAPATH__FIELD_NAME.field_name, value)

    def get_GRChFASTAPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GRChFASTAPath' from this record model
        """
        return self.get_field_value(self.GRCHFASTAPATH__FIELD_NAME.field_name)

    def set_ImportBaseLineDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImportBaseLineDescription' on this record model
        """
        self.set_field_value(self.IMPORTBASELINEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ImportBaseLineDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImportBaseLineDescription' from this record model
        """
        return self.get_field_value(self.IMPORTBASELINEDESCRIPTION__FIELD_NAME.field_name)

    def set_ImportExportExemplarConfigText_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImportExportExemplarConfigText' on this record model
        """
        self.set_field_value(self.IMPORTEXPORTEXEMPLARCONFIGTEXT__FIELD_NAME.field_name, value)

    def get_ImportExportExemplarConfigText_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImportExportExemplarConfigText' from this record model
        """
        return self.get_field_value(self.IMPORTEXPORTEXEMPLARCONFIGTEXT__FIELD_NAME.field_name)

    def set_ImportExportSystemConfigsText_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImportExportSystemConfigsText' on this record model
        """
        self.set_field_value(self.IMPORTEXPORTSYSTEMCONFIGSTEXT__FIELD_NAME.field_name, value)

    def get_ImportExportSystemConfigsText_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImportExportSystemConfigsText' from this record model
        """
        return self.get_field_value(self.IMPORTEXPORTSYSTEMCONFIGSTEXT__FIELD_NAME.field_name)

    def set_IndexedStorageType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexedStorageType' on this record model
        """
        self.set_field_value(self.INDEXEDSTORAGETYPE__FIELD_NAME.field_name, value)

    def get_IndexedStorageType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexedStorageType' from this record model
        """
        return self.get_field_value(self.INDEXEDSTORAGETYPE__FIELD_NAME.field_name)

    def set_InstrumentForceIdvRegistration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InstrumentForceIdvRegistration' on this record model
        """
        self.set_field_value(self.INSTRUMENTFORCEIDVREGISTRATION__FIELD_NAME.field_name, value)

    def get_InstrumentForceIdvRegistration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InstrumentForceIdvRegistration' from this record model
        """
        return self.get_field_value(self.INSTRUMENTFORCEIDVREGISTRATION__FIELD_NAME.field_name)

    def set_MatManEnableFeatureExt_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MatManEnableFeatureExt' on this record model
        """
        self.set_field_value(self.MATMANENABLEFEATUREEXT__FIELD_NAME.field_name, value)

    def get_MatManEnableFeatureExt_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MatManEnableFeatureExt' from this record model
        """
        return self.get_field_value(self.MATMANENABLEFEATUREEXT__FIELD_NAME.field_name)

    def set_MmForceIdvRegistration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MmForceIdvRegistration' on this record model
        """
        self.set_field_value(self.MMFORCEIDVREGISTRATION__FIELD_NAME.field_name, value)

    def get_MmForceIdvRegistration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MmForceIdvRegistration' from this record model
        """
        return self.get_field_value(self.MMFORCEIDVREGISTRATION__FIELD_NAME.field_name)

    def set_MmSampleFieldsToDisplay_field(self, value: Optional[str]):
        """
        Set data field with field name 'MmSampleFieldsToDisplay' on this record model
        """
        self.set_field_value(self.MMSAMPLEFIELDSTODISPLAY__FIELD_NAME.field_name, value)

    def get_MmSampleFieldsToDisplay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MmSampleFieldsToDisplay' from this record model
        """
        return self.get_field_value(self.MMSAMPLEFIELDSTODISPLAY__FIELD_NAME.field_name)

    def set_MultiLayerPlatePoolIfSameType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MultiLayerPlatePoolIfSameType' on this record model
        """
        self.set_field_value(self.MULTILAYERPLATEPOOLIFSAMETYPE__FIELD_NAME.field_name, value)

    def get_MultiLayerPlatePoolIfSameType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MultiLayerPlatePoolIfSameType' from this record model
        """
        return self.get_field_value(self.MULTILAYERPLATEPOOLIFSAMETYPE__FIELD_NAME.field_name)

    def set_NativePyExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NativePyExecPath' on this record model
        """
        self.set_field_value(self.NATIVEPYEXECPATH__FIELD_NAME.field_name, value)

    def get_NativePyExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NativePyExecPath' from this record model
        """
        return self.get_field_value(self.NATIVEPYEXECPATH__FIELD_NAME.field_name)

    def set_NativeRExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NativeRExecPath' on this record model
        """
        self.set_field_value(self.NATIVEREXECPATH__FIELD_NAME.field_name, value)

    def get_NativeRExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NativeRExecPath' from this record model
        """
        return self.get_field_value(self.NATIVEREXECPATH__FIELD_NAME.field_name)

    def set_NewConsumableDirName_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewConsumableDirName' on this record model
        """
        self.set_field_value(self.NEWCONSUMABLEDIRNAME__FIELD_NAME.field_name, value)

    def get_NewConsumableDirName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewConsumableDirName' from this record model
        """
        return self.get_field_value(self.NEWCONSUMABLEDIRNAME__FIELD_NAME.field_name)

    def set_NotificationUsers_field(self, value: Optional[str]):
        """
        Set data field with field name 'NotificationUsers' on this record model
        """
        self.set_field_value(self.NOTIFICATIONUSERS__FIELD_NAME.field_name, value)

    def get_NotificationUsers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NotificationUsers' from this record model
        """
        return self.get_field_value(self.NOTIFICATIONUSERS__FIELD_NAME.field_name)

    def set_NotifyMaintTechnicians_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NotifyMaintTechnicians' on this record model
        """
        self.set_field_value(self.NOTIFYMAINTTECHNICIANS__FIELD_NAME.field_name, value)

    def get_NotifyMaintTechnicians_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NotifyMaintTechnicians' from this record model
        """
        return self.get_field_value(self.NOTIFYMAINTTECHNICIANS__FIELD_NAME.field_name)

    def set_OverrideGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'OverrideGroups' on this record model
        """
        self.set_field_value(self.OVERRIDEGROUPS__FIELD_NAME.field_name, value)

    def get_OverrideGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OverrideGroups' from this record model
        """
        return self.get_field_value(self.OVERRIDEGROUPS__FIELD_NAME.field_name)

    def set_PlasmidDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidDataType' on this record model
        """
        self.set_field_value(self.PLASMIDDATATYPE__FIELD_NAME.field_name, value)

    def get_PlasmidDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidDataType' from this record model
        """
        return self.get_field_value(self.PLASMIDDATATYPE__FIELD_NAME.field_name)

    def set_PlateDesignerPrimaryTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateDesignerPrimaryTypes' on this record model
        """
        self.set_field_value(self.PLATEDESIGNERPRIMARYTYPES__FIELD_NAME.field_name, value)

    def get_PlateDesignerPrimaryTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateDesignerPrimaryTypes' from this record model
        """
        return self.get_field_value(self.PLATEDESIGNERPRIMARYTYPES__FIELD_NAME.field_name)

    def set_Port_field(self, value: Optional[int]):
        """
        Set data field with field name 'Port' on this record model
        """
        self.set_field_value(self.PORT__FIELD_NAME.field_name, value)

    def get_Port_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Port' from this record model
        """
        return self.get_field_value(self.PORT__FIELD_NAME.field_name)

    def set_PreNotificationInterval_field(self, value: Optional[int]):
        """
        Set data field with field name 'PreNotificationInterval' on this record model
        """
        self.set_field_value(self.PRENOTIFICATIONINTERVAL__FIELD_NAME.field_name, value)

    def get_PreNotificationInterval_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PreNotificationInterval' from this record model
        """
        return self.get_field_value(self.PRENOTIFICATIONINTERVAL__FIELD_NAME.field_name)

    def set_PrintConsumableBarcode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PrintConsumableBarcode' on this record model
        """
        self.set_field_value(self.PRINTCONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_PrintConsumableBarcode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PrintConsumableBarcode' from this record model
        """
        return self.get_field_value(self.PRINTCONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_QCMailingList_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCMailingList' on this record model
        """
        self.set_field_value(self.QCMAILINGLIST__FIELD_NAME.field_name, value)

    def get_QCMailingList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCMailingList' from this record model
        """
        return self.get_field_value(self.QCMAILINGLIST__FIELD_NAME.field_name)

    def set_QuantityTracking_field(self, value: Optional[bool]):
        """
        Set data field with field name 'QuantityTracking' on this record model
        """
        self.set_field_value(self.QUANTITYTRACKING__FIELD_NAME.field_name, value)

    def get_QuantityTracking_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'QuantityTracking' from this record model
        """
        return self.get_field_value(self.QUANTITYTRACKING__FIELD_NAME.field_name)

    def set_RecordReportAccessGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordReportAccessGroups' on this record model
        """
        self.set_field_value(self.RECORDREPORTACCESSGROUPS__FIELD_NAME.field_name, value)

    def get_RecordReportAccessGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordReportAccessGroups' from this record model
        """
        return self.get_field_value(self.RECORDREPORTACCESSGROUPS__FIELD_NAME.field_name)

    def set_RecordReportDataTypeList_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordReportDataTypeList' on this record model
        """
        self.set_field_value(self.RECORDREPORTDATATYPELIST__FIELD_NAME.field_name, value)

    def get_RecordReportDataTypeList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordReportDataTypeList' from this record model
        """
        return self.get_field_value(self.RECORDREPORTDATATYPELIST__FIELD_NAME.field_name)

    def set_RecordStorageEvents_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RecordStorageEvents' on this record model
        """
        self.set_field_value(self.RECORDSTORAGEEVENTS__FIELD_NAME.field_name, value)

    def get_RecordStorageEvents_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RecordStorageEvents' from this record model
        """
        return self.get_field_value(self.RECORDSTORAGEEVENTS__FIELD_NAME.field_name)

    def set_ReqPortalManifestFieldNames_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReqPortalManifestFieldNames' on this record model
        """
        self.set_field_value(self.REQPORTALMANIFESTFIELDNAMES__FIELD_NAME.field_name, value)

    def get_ReqPortalManifestFieldNames_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReqPortalManifestFieldNames' from this record model
        """
        return self.get_field_value(self.REQPORTALMANIFESTFIELDNAMES__FIELD_NAME.field_name)

    def set_RequireESignature_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequireESignature' on this record model
        """
        self.set_field_value(self.REQUIREESIGNATURE__FIELD_NAME.field_name, value)

    def get_RequireESignature_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequireESignature' from this record model
        """
        return self.get_field_value(self.REQUIREESIGNATURE__FIELD_NAME.field_name)

    def set_RestrictAccessByLocation_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RestrictAccessByLocation' on this record model
        """
        self.set_field_value(self.RESTRICTACCESSBYLOCATION__FIELD_NAME.field_name, value)

    def get_RestrictAccessByLocation_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RestrictAccessByLocation' from this record model
        """
        return self.get_field_value(self.RESTRICTACCESSBYLOCATION__FIELD_NAME.field_name)

    def set_ReviewerVisibleRoleType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReviewerVisibleRoleType' on this record model
        """
        self.set_field_value(self.REVIEWERVISIBLEROLETYPE__FIELD_NAME.field_name, value)

    def get_ReviewerVisibleRoleType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReviewerVisibleRoleType' from this record model
        """
        return self.get_field_value(self.REVIEWERVISIBLEROLETYPE__FIELD_NAME.field_name)

    def set_RTransExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTransExecPath' on this record model
        """
        self.set_field_value(self.RTRANSEXECPATH__FIELD_NAME.field_name, value)

    def get_RTransExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTransExecPath' from this record model
        """
        return self.get_field_value(self.RTRANSEXECPATH__FIELD_NAME.field_name)

    def set_S3AccessKeyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'S3AccessKeyId' on this record model
        """
        self.set_field_value(self.S3ACCESSKEYID__FIELD_NAME.field_name, value)

    def get_S3AccessKeyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'S3AccessKeyId' from this record model
        """
        return self.get_field_value(self.S3ACCESSKEYID__FIELD_NAME.field_name)

    def set_S3SecretAcessKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'S3SecretAcessKey' on this record model
        """
        self.set_field_value(self.S3SECRETACESSKEY__FIELD_NAME.field_name, value)

    def get_S3SecretAcessKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'S3SecretAcessKey' from this record model
        """
        return self.get_field_value(self.S3SECRETACESSKEY__FIELD_NAME.field_name)

    def set_SaasMaxNumOfSamplesPerTrans_field(self, value: Optional[int]):
        """
        Set data field with field name 'SaasMaxNumOfSamplesPerTrans' on this record model
        """
        self.set_field_value(self.SAASMAXNUMOFSAMPLESPERTRANS__FIELD_NAME.field_name, value)

    def get_SaasMaxNumOfSamplesPerTrans_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SaasMaxNumOfSamplesPerTrans' from this record model
        """
        return self.get_field_value(self.SAASMAXNUMOFSAMPLESPERTRANS__FIELD_NAME.field_name)

    def set_SaasMaxSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'SaasMaxSamples' on this record model
        """
        self.set_field_value(self.SAASMAXSAMPLES__FIELD_NAME.field_name, value)

    def get_SaasMaxSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SaasMaxSamples' from this record model
        """
        return self.get_field_value(self.SAASMAXSAMPLES__FIELD_NAME.field_name)

    def set_SaasMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaasMode' on this record model
        """
        self.set_field_value(self.SAASMODE__FIELD_NAME.field_name, value)

    def get_SaasMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaasMode' from this record model
        """
        return self.get_field_value(self.SAASMODE__FIELD_NAME.field_name)

    def set_SampleReceivingEmails_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceivingEmails' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVINGEMAILS__FIELD_NAME.field_name, value)

    def get_SampleReceivingEmails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceivingEmails' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVINGEMAILS__FIELD_NAME.field_name)

    def set_SampleReceivingUserMenu_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceivingUserMenu' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVINGUSERMENU__FIELD_NAME.field_name, value)

    def get_SampleReceivingUserMenu_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceivingUserMenu' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVINGUSERMENU__FIELD_NAME.field_name)

    def set_SampleTypeMaximumTemperature_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleTypeMaximumTemperature' on this record model
        """
        self.set_field_value(self.SAMPLETYPEMAXIMUMTEMPERATURE__FIELD_NAME.field_name, value)

    def get_SampleTypeMaximumTemperature_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleTypeMaximumTemperature' from this record model
        """
        return self.get_field_value(self.SAMPLETYPEMAXIMUMTEMPERATURE__FIELD_NAME.field_name)

    def set_SamtoolsExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SamtoolsExecPath' on this record model
        """
        self.set_field_value(self.SAMTOOLSEXECPATH__FIELD_NAME.field_name, value)

    def get_SamtoolsExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SamtoolsExecPath' from this record model
        """
        return self.get_field_value(self.SAMTOOLSEXECPATH__FIELD_NAME.field_name)

    def set_SDMSRootPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SDMSRootPath' on this record model
        """
        self.set_field_value(self.SDMSROOTPATH__FIELD_NAME.field_name, value)

    def get_SDMSRootPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SDMSRootPath' from this record model
        """
        return self.get_field_value(self.SDMSROOTPATH__FIELD_NAME.field_name)

    def set_SecureSocketLayer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SecureSocketLayer' on this record model
        """
        self.set_field_value(self.SECURESOCKETLAYER__FIELD_NAME.field_name, value)

    def get_SecureSocketLayer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SecureSocketLayer' from this record model
        """
        return self.get_field_value(self.SECURESOCKETLAYER__FIELD_NAME.field_name)

    def set_SMTPServer_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMTPServer' on this record model
        """
        self.set_field_value(self.SMTPSERVER__FIELD_NAME.field_name, value)

    def get_SMTPServer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMTPServer' from this record model
        """
        return self.get_field_value(self.SMTPSERVER__FIELD_NAME.field_name)

    def set_SmtpUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'SmtpUsername' on this record model
        """
        self.set_field_value(self.SMTPUSERNAME__FIELD_NAME.field_name, value)

    def get_SmtpUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SmtpUsername' from this record model
        """
        return self.get_field_value(self.SMTPUSERNAME__FIELD_NAME.field_name)

    def set_StorageUnitViewerFillByConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitViewerFillByConfig' on this record model
        """
        self.set_field_value(self.STORAGEUNITVIEWERFILLBYCONFIG__FIELD_NAME.field_name, value)

    def get_StorageUnitViewerFillByConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitViewerFillByConfig' from this record model
        """
        return self.get_field_value(self.STORAGEUNITVIEWERFILLBYCONFIG__FIELD_NAME.field_name)

    def set_SystemPassword_field(self, value: Optional[str]):
        """
        Set data field with field name 'SystemPassword' on this record model
        """
        self.set_field_value(self.SYSTEMPASSWORD__FIELD_NAME.field_name, value)

    def get_SystemPassword_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SystemPassword' from this record model
        """
        return self.get_field_value(self.SYSTEMPASSWORD__FIELD_NAME.field_name)

    def set_TemperatureEnforcement_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemperatureEnforcement' on this record model
        """
        self.set_field_value(self.TEMPERATUREENFORCEMENT__FIELD_NAME.field_name, value)

    def get_TemperatureEnforcement_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemperatureEnforcement' from this record model
        """
        return self.get_field_value(self.TEMPERATUREENFORCEMENT__FIELD_NAME.field_name)

    def set_TLSEnabled_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TLSEnabled' on this record model
        """
        self.set_field_value(self.TLSENABLED__FIELD_NAME.field_name, value)

    def get_TLSEnabled_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TLSEnabled' from this record model
        """
        return self.get_field_value(self.TLSENABLED__FIELD_NAME.field_name)

    def set_TLSRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TLSRequired' on this record model
        """
        self.set_field_value(self.TLSREQUIRED__FIELD_NAME.field_name, value)

    def get_TLSRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TLSRequired' from this record model
        """
        return self.get_field_value(self.TLSREQUIRED__FIELD_NAME.field_name)

    def set_UseRequestDefaultLayout_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseRequestDefaultLayout' on this record model
        """
        self.set_field_value(self.USEREQUESTDEFAULTLAYOUT__FIELD_NAME.field_name, value)

    def get_UseRequestDefaultLayout_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseRequestDefaultLayout' from this record model
        """
        return self.get_field_value(self.USEREQUESTDEFAULTLAYOUT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VerificationTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'VerificationTypes' on this record model
        """
        self.set_field_value(self.VERIFICATIONTYPES__FIELD_NAME.field_name, value)

    def get_VerificationTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VerificationTypes' from this record model
        """
        return self.get_field_value(self.VERIFICATIONTYPES__FIELD_NAME.field_name)

    def set_WitnessVisibleRoleType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'WitnessVisibleRoleType' on this record model
        """
        self.set_field_value(self.WITNESSVISIBLEROLETYPE__FIELD_NAME.field_name, value)

    def get_WitnessVisibleRoleType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'WitnessVisibleRoleType' from this record model
        """
        return self.get_field_value(self.WITNESSVISIBLEROLETYPE__FIELD_NAME.field_name)

    def set_WriteQCInputFileToUser_field(self, value: Optional[bool]):
        """
        Set data field with field name 'WriteQCInputFileToUser' on this record model
        """
        self.set_field_value(self.WRITEQCINPUTFILETOUSER__FIELD_NAME.field_name, value)

    def get_WriteQCInputFileToUser_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'WriteQCInputFileToUser' from this record model
        """
        return self.get_field_value(self.WRITEQCINPUTFILETOUSER__FIELD_NAME.field_name)


class ExemplarLabNotebookPDFModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExemplarLabNotebookPDF
    Data Type Display Name: Sapio Lab Notebook PDF (Sapio Lab Notebook PDFs)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    This data type is used to store the latest PDF file that has been generated from a given notebook.
    """
    DATA_TYPE_NAME: str = 'ExemplarLabNotebookPDF'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExemplarSDMSFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExemplarSDMSFile
    Data Type Display Name: SDMS File (SDMS Files)
    Fields: CreatedBy, DataRecordName, DateCreated, FileCreationDate, FileHash, FileLastModifiedDate, FilePath, FileSize, FileSourcePath, InstrumentType, IsLoaded, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    These are potentially very large files that will be stored as SDMS file. They will be retrieved through streamed download.
    """
    DATA_TYPE_NAME: str = 'ExemplarSDMSFile'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILECREATIONDATE__FIELD_NAME: WrapperField = WrapperField("FileCreationDate", FieldType.DATE)
    FILEHASH__FIELD_NAME: WrapperField = WrapperField("FileHash", FieldType.STRING)
    FILELASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("FileLastModifiedDate", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    FILESIZE__FIELD_NAME: WrapperField = WrapperField("FileSize", FieldType.LONG)
    FILESOURCEPATH__FIELD_NAME: WrapperField = WrapperField("FileSourcePath", FieldType.STRING)
    INSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("InstrumentType", FieldType.STRING)
    ISLOADED__FIELD_NAME: WrapperField = WrapperField("IsLoaded", FieldType.BOOLEAN)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileCreationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FileCreationDate' on this record model
        """
        self.set_field_value(self.FILECREATIONDATE__FIELD_NAME.field_name, value)

    def get_FileCreationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FileCreationDate' from this record model
        """
        return self.get_field_value(self.FILECREATIONDATE__FIELD_NAME.field_name)

    def set_FileHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileHash' on this record model
        """
        self.set_field_value(self.FILEHASH__FIELD_NAME.field_name, value)

    def get_FileHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileHash' from this record model
        """
        return self.get_field_value(self.FILEHASH__FIELD_NAME.field_name)

    def set_FileLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FileLastModifiedDate' on this record model
        """
        self.set_field_value(self.FILELASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_FileLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FileLastModifiedDate' from this record model
        """
        return self.get_field_value(self.FILELASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_FileSize_field(self, value: Optional[int]):
        """
        Set data field with field name 'FileSize' on this record model
        """
        self.set_field_value(self.FILESIZE__FIELD_NAME.field_name, value)

    def get_FileSize_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FileSize' from this record model
        """
        return self.get_field_value(self.FILESIZE__FIELD_NAME.field_name)

    def set_FileSourcePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileSourcePath' on this record model
        """
        self.set_field_value(self.FILESOURCEPATH__FIELD_NAME.field_name, value)

    def get_FileSourcePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileSourcePath' from this record model
        """
        return self.get_field_value(self.FILESOURCEPATH__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_IsLoaded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsLoaded' on this record model
        """
        self.set_field_value(self.ISLOADED__FIELD_NAME.field_name, value)

    def get_IsLoaded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsLoaded' from this record model
        """
        return self.get_field_value(self.ISLOADED__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExperimentGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExperimentGroup
    Data Type Display Name: Experiment Group (Experiment Groups)
    Fields: CreatedBy, DataRecordName, DateCreated, GroupMonth, GroupYear, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ExperimentGroup'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GROUPMONTH__FIELD_NAME: WrapperField = WrapperField("GroupMonth", FieldType.PICKLIST)
    GROUPYEAR__FIELD_NAME: WrapperField = WrapperField("GroupYear", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupMonth_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupMonth' on this record model
        """
        self.set_field_value(self.GROUPMONTH__FIELD_NAME.field_name, value)

    def get_GroupMonth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupMonth' from this record model
        """
        return self.get_field_value(self.GROUPMONTH__FIELD_NAME.field_name)

    def set_GroupYear_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupYear' on this record model
        """
        self.set_field_value(self.GROUPYEAR__FIELD_NAME.field_name, value)

    def get_GroupYear_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupYear' from this record model
        """
        return self.get_field_value(self.GROUPYEAR__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExpoentialDecayModelModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExpoentialDecayModel
    Data Type Display Name: Exponential Decay Model (Exponential Decay Models)
    Fields: c, CreatedBy, d, DataRecordName, DateCreated, e, EntryName, Formula, MultiParentLink215, RSE, RSEDOF, RSquared, SeriesName, SourceEntryId, VeloxLastModifiedBy, VeloxLastModifiedDate
    Exponential Decay follows this formula:

Y = c + (d-c) exp(-x/e)
    """
    DATA_TYPE_NAME: str = 'ExpoentialDecayModel'
    C__FIELD_NAME: WrapperField = WrapperField("c", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    D__FIELD_NAME: WrapperField = WrapperField("d", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    E__FIELD_NAME: WrapperField = WrapperField("e", FieldType.DOUBLE)
    ENTRYNAME__FIELD_NAME: WrapperField = WrapperField("EntryName", FieldType.STRING)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    RSE__FIELD_NAME: WrapperField = WrapperField("RSE", FieldType.DOUBLE)
    RSEDOF__FIELD_NAME: WrapperField = WrapperField("RSEDOF", FieldType.DOUBLE)
    RSQUARED__FIELD_NAME: WrapperField = WrapperField("RSquared", FieldType.DOUBLE)
    SERIESNAME__FIELD_NAME: WrapperField = WrapperField("SeriesName", FieldType.STRING)
    SOURCEENTRYID__FIELD_NAME: WrapperField = WrapperField("SourceEntryId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_c_field(self, value: Optional[float]):
        """
        Set data field with field name 'c' on this record model
        """
        self.set_field_value(self.C__FIELD_NAME.field_name, value)

    def get_c_field(self) -> Optional[float]:
        """
        Get data field value with field name 'c' from this record model
        """
        return self.get_field_value(self.C__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_d_field(self, value: Optional[float]):
        """
        Set data field with field name 'd' on this record model
        """
        self.set_field_value(self.D__FIELD_NAME.field_name, value)

    def get_d_field(self) -> Optional[float]:
        """
        Get data field value with field name 'd' from this record model
        """
        return self.get_field_value(self.D__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_e_field(self, value: Optional[float]):
        """
        Set data field with field name 'e' on this record model
        """
        self.set_field_value(self.E__FIELD_NAME.field_name, value)

    def get_e_field(self) -> Optional[float]:
        """
        Get data field value with field name 'e' from this record model
        """
        return self.get_field_value(self.E__FIELD_NAME.field_name)

    def set_EntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EntryName' on this record model
        """
        self.set_field_value(self.ENTRYNAME__FIELD_NAME.field_name, value)

    def get_EntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EntryName' from this record model
        """
        return self.get_field_value(self.ENTRYNAME__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_RSE_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSE' on this record model
        """
        self.set_field_value(self.RSE__FIELD_NAME.field_name, value)

    def get_RSE_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSE' from this record model
        """
        return self.get_field_value(self.RSE__FIELD_NAME.field_name)

    def set_RSEDOF_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSEDOF' on this record model
        """
        self.set_field_value(self.RSEDOF__FIELD_NAME.field_name, value)

    def get_RSEDOF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSEDOF' from this record model
        """
        return self.get_field_value(self.RSEDOF__FIELD_NAME.field_name)

    def set_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSquared' on this record model
        """
        self.set_field_value(self.RSQUARED__FIELD_NAME.field_name, value)

    def get_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSquared' from this record model
        """
        return self.get_field_value(self.RSQUARED__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SourceEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceEntryId' on this record model
        """
        self.set_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name, value)

    def get_SourceEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceEntryId' from this record model
        """
        return self.get_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExponentialDecayRegParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExponentialDecayRegParameter
    Data Type Display Name: Exponential Decay Regression Parameters (Exponential Decay Regression Parameters)
    Fields: CreatedBy, DataRecordName, DateCreated, DecayRate, Intercept, OriginalAmount, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ExponentialDecayRegParameter'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DECAYRATE__FIELD_NAME: WrapperField = WrapperField("DecayRate", FieldType.DOUBLE)
    INTERCEPT__FIELD_NAME: WrapperField = WrapperField("Intercept", FieldType.DOUBLE)
    ORIGINALAMOUNT__FIELD_NAME: WrapperField = WrapperField("OriginalAmount", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DecayRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'DecayRate' on this record model
        """
        self.set_field_value(self.DECAYRATE__FIELD_NAME.field_name, value)

    def get_DecayRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DecayRate' from this record model
        """
        return self.get_field_value(self.DECAYRATE__FIELD_NAME.field_name)

    def set_Intercept_field(self, value: Optional[float]):
        """
        Set data field with field name 'Intercept' on this record model
        """
        self.set_field_value(self.INTERCEPT__FIELD_NAME.field_name, value)

    def get_Intercept_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Intercept' from this record model
        """
        return self.get_field_value(self.INTERCEPT__FIELD_NAME.field_name)

    def set_OriginalAmount_field(self, value: Optional[float]):
        """
        Set data field with field name 'OriginalAmount' on this record model
        """
        self.set_field_value(self.ORIGINALAMOUNT__FIELD_NAME.field_name, value)

    def get_OriginalAmount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'OriginalAmount' from this record model
        """
        return self.get_field_value(self.ORIGINALAMOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FailedSampleDetailsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FailedSampleDetails
    Data Type Display Name: Failure Details (Failure Details)
    Fields: ActiveTaskName, ActiveWorkflowName, CreatedBy, DataRecordName, DateCreated, FailureComment, FailureStatus, OtherSampleId, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FailedSampleDetails'
    ACTIVETASKNAME__FIELD_NAME: WrapperField = WrapperField("ActiveTaskName", FieldType.STRING)
    ACTIVEWORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FAILURECOMMENT__FIELD_NAME: WrapperField = WrapperField("FailureComment", FieldType.STRING)
    FAILURESTATUS__FIELD_NAME: WrapperField = WrapperField("FailureStatus", FieldType.PICKLIST)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveTaskName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveTaskName' on this record model
        """
        self.set_field_value(self.ACTIVETASKNAME__FIELD_NAME.field_name, value)

    def get_ActiveTaskName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveTaskName' from this record model
        """
        return self.get_field_value(self.ACTIVETASKNAME__FIELD_NAME.field_name)

    def set_ActiveWorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveWorkflowName' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveWorkflowName' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FailureComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureComment' on this record model
        """
        self.set_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name, value)

    def get_FailureComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureComment' from this record model
        """
        return self.get_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name)

    def set_FailureStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureStatus' on this record model
        """
        self.set_field_value(self.FAILURESTATUS__FIELD_NAME.field_name, value)

    def get_FailureStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureStatus' from this record model
        """
        return self.get_field_value(self.FAILURESTATUS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FCSFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FCSFile
    Data Type Display Name: Flow Cytometry Standard File (Flow Cytometry Standard Files)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, IsDataComplete, IsMetadataLoaded, IsTopLevel, PercentCellsToParentLevel, PercentCellsToTopLevel, RootFCSRecordId, TotalNumberOfCells, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FCSFile'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    ISDATACOMPLETE__FIELD_NAME: WrapperField = WrapperField("IsDataComplete", FieldType.BOOLEAN)
    ISMETADATALOADED__FIELD_NAME: WrapperField = WrapperField("IsMetadataLoaded", FieldType.BOOLEAN)
    ISTOPLEVEL__FIELD_NAME: WrapperField = WrapperField("IsTopLevel", FieldType.BOOLEAN)
    PERCENTCELLSTOPARENTLEVEL__FIELD_NAME: WrapperField = WrapperField("PercentCellsToParentLevel", FieldType.DOUBLE)
    PERCENTCELLSTOTOPLEVEL__FIELD_NAME: WrapperField = WrapperField("PercentCellsToTopLevel", FieldType.DOUBLE)
    ROOTFCSRECORDID__FIELD_NAME: WrapperField = WrapperField("RootFCSRecordId", FieldType.LONG)
    TOTALNUMBEROFCELLS__FIELD_NAME: WrapperField = WrapperField("TotalNumberOfCells", FieldType.LONG)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsDataComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsDataComplete' on this record model
        """
        self.set_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name, value)

    def get_IsDataComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsDataComplete' from this record model
        """
        return self.get_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name)

    def set_IsMetadataLoaded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsMetadataLoaded' on this record model
        """
        self.set_field_value(self.ISMETADATALOADED__FIELD_NAME.field_name, value)

    def get_IsMetadataLoaded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsMetadataLoaded' from this record model
        """
        return self.get_field_value(self.ISMETADATALOADED__FIELD_NAME.field_name)

    def set_IsTopLevel_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsTopLevel' on this record model
        """
        self.set_field_value(self.ISTOPLEVEL__FIELD_NAME.field_name, value)

    def get_IsTopLevel_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsTopLevel' from this record model
        """
        return self.get_field_value(self.ISTOPLEVEL__FIELD_NAME.field_name)

    def set_PercentCellsToParentLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentCellsToParentLevel' on this record model
        """
        self.set_field_value(self.PERCENTCELLSTOPARENTLEVEL__FIELD_NAME.field_name, value)

    def get_PercentCellsToParentLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentCellsToParentLevel' from this record model
        """
        return self.get_field_value(self.PERCENTCELLSTOPARENTLEVEL__FIELD_NAME.field_name)

    def set_PercentCellsToTopLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentCellsToTopLevel' on this record model
        """
        self.set_field_value(self.PERCENTCELLSTOTOPLEVEL__FIELD_NAME.field_name, value)

    def get_PercentCellsToTopLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentCellsToTopLevel' from this record model
        """
        return self.get_field_value(self.PERCENTCELLSTOTOPLEVEL__FIELD_NAME.field_name)

    def set_RootFCSRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RootFCSRecordId' on this record model
        """
        self.set_field_value(self.ROOTFCSRECORDID__FIELD_NAME.field_name, value)

    def get_RootFCSRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RootFCSRecordId' from this record model
        """
        return self.get_field_value(self.ROOTFCSRECORDID__FIELD_NAME.field_name)

    def set_TotalNumberOfCells_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalNumberOfCells' on this record model
        """
        self.set_field_value(self.TOTALNUMBEROFCELLS__FIELD_NAME.field_name, value)

    def get_TotalNumberOfCells_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalNumberOfCells' from this record model
        """
        return self.get_field_value(self.TOTALNUMBEROFCELLS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FCSStatisticModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FCSStatistic
    Data Type Display Name: Flow Cytometry Statistic (Flow Cytometry Statistic)
    Fields: ChannelName, CreatedBy, DataRecordName, DateCreated, NumericValue, StatName, VeloxLastModifiedBy, VeloxLastModifiedDate
    A statistic record for FCS file, usually for a specific channel so they are not suited directly added to the FCSFile record.
    """
    DATA_TYPE_NAME: str = 'FCSStatistic'
    CHANNELNAME__FIELD_NAME: WrapperField = WrapperField("ChannelName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    NUMERICVALUE__FIELD_NAME: WrapperField = WrapperField("NumericValue", FieldType.DOUBLE)
    STATNAME__FIELD_NAME: WrapperField = WrapperField("StatName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelName' on this record model
        """
        self.set_field_value(self.CHANNELNAME__FIELD_NAME.field_name, value)

    def get_ChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelName' from this record model
        """
        return self.get_field_value(self.CHANNELNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_NumericValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'NumericValue' on this record model
        """
        self.set_field_value(self.NUMERICVALUE__FIELD_NAME.field_name, value)

    def get_NumericValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NumericValue' from this record model
        """
        return self.get_field_value(self.NUMERICVALUE__FIELD_NAME.field_name)

    def set_StatName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StatName' on this record model
        """
        self.set_field_value(self.STATNAME__FIELD_NAME.field_name, value)

    def get_StatName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StatName' from this record model
        """
        return self.get_field_value(self.STATNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FermentationResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FermentationResult
    Data Type Display Name: Fermentation Result (Fermentation Results)
    Fields: AGIT, AIR, CER, CreatedBy, DataRecordName, DateCreated, DO1, LH, O2, OUR, PH, Temperature, TOTFLOW, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FermentationResult'
    AGIT__FIELD_NAME: WrapperField = WrapperField("AGIT", FieldType.DOUBLE)
    AIR__FIELD_NAME: WrapperField = WrapperField("AIR", FieldType.DOUBLE)
    CER__FIELD_NAME: WrapperField = WrapperField("CER", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DO1__FIELD_NAME: WrapperField = WrapperField("DO1", FieldType.DOUBLE)
    LH__FIELD_NAME: WrapperField = WrapperField("LH", FieldType.DOUBLE)
    O2__FIELD_NAME: WrapperField = WrapperField("O2", FieldType.DOUBLE)
    OUR__FIELD_NAME: WrapperField = WrapperField("OUR", FieldType.DOUBLE)
    PH__FIELD_NAME: WrapperField = WrapperField("PH", FieldType.DOUBLE)
    TEMPERATURE__FIELD_NAME: WrapperField = WrapperField("Temperature", FieldType.DOUBLE)
    TOTFLOW__FIELD_NAME: WrapperField = WrapperField("TOTFLOW", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AGIT_field(self, value: Optional[float]):
        """
        Set data field with field name 'AGIT' on this record model
        """
        self.set_field_value(self.AGIT__FIELD_NAME.field_name, value)

    def get_AGIT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AGIT' from this record model
        """
        return self.get_field_value(self.AGIT__FIELD_NAME.field_name)

    def set_AIR_field(self, value: Optional[float]):
        """
        Set data field with field name 'AIR' on this record model
        """
        self.set_field_value(self.AIR__FIELD_NAME.field_name, value)

    def get_AIR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AIR' from this record model
        """
        return self.get_field_value(self.AIR__FIELD_NAME.field_name)

    def set_CER_field(self, value: Optional[float]):
        """
        Set data field with field name 'CER' on this record model
        """
        self.set_field_value(self.CER__FIELD_NAME.field_name, value)

    def get_CER_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CER' from this record model
        """
        return self.get_field_value(self.CER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DO1_field(self, value: Optional[float]):
        """
        Set data field with field name 'DO1' on this record model
        """
        self.set_field_value(self.DO1__FIELD_NAME.field_name, value)

    def get_DO1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DO1' from this record model
        """
        return self.get_field_value(self.DO1__FIELD_NAME.field_name)

    def set_LH_field(self, value: Optional[float]):
        """
        Set data field with field name 'LH' on this record model
        """
        self.set_field_value(self.LH__FIELD_NAME.field_name, value)

    def get_LH_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LH' from this record model
        """
        return self.get_field_value(self.LH__FIELD_NAME.field_name)

    def set_O2_field(self, value: Optional[float]):
        """
        Set data field with field name 'O2' on this record model
        """
        self.set_field_value(self.O2__FIELD_NAME.field_name, value)

    def get_O2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'O2' from this record model
        """
        return self.get_field_value(self.O2__FIELD_NAME.field_name)

    def set_OUR_field(self, value: Optional[float]):
        """
        Set data field with field name 'OUR' on this record model
        """
        self.set_field_value(self.OUR__FIELD_NAME.field_name, value)

    def get_OUR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'OUR' from this record model
        """
        return self.get_field_value(self.OUR__FIELD_NAME.field_name)

    def set_PH_field(self, value: Optional[float]):
        """
        Set data field with field name 'PH' on this record model
        """
        self.set_field_value(self.PH__FIELD_NAME.field_name, value)

    def get_PH_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PH' from this record model
        """
        return self.get_field_value(self.PH__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_TOTFLOW_field(self, value: Optional[float]):
        """
        Set data field with field name 'TOTFLOW' on this record model
        """
        self.set_field_value(self.TOTFLOW__FIELD_NAME.field_name, value)

    def get_TOTFLOW_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TOTFLOW' from this record model
        """
        return self.get_field_value(self.TOTFLOW__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FileBridgeConnectionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FileBridgeConnection
    Data Type Display Name: File Bridge Connection (File Bridge Connections)
    Fields: AesKey, AgentRoot, AuthToken, ConnectionName, CreatedBy, DataRecordName, DateCreated, ProxyHost, ProxyPort, VeloxLastModifiedBy, VeloxLastModifiedDate
    This data type describes the configuration of a File Bridge Connection to be used by Exemplar.
    """
    DATA_TYPE_NAME: str = 'FileBridgeConnection'
    AESKEY__FIELD_NAME: WrapperField = WrapperField("AesKey", FieldType.STRING)
    AGENTROOT__FIELD_NAME: WrapperField = WrapperField("AgentRoot", FieldType.STRING)
    AUTHTOKEN__FIELD_NAME: WrapperField = WrapperField("AuthToken", FieldType.STRING)
    CONNECTIONNAME__FIELD_NAME: WrapperField = WrapperField("ConnectionName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PROXYHOST__FIELD_NAME: WrapperField = WrapperField("ProxyHost", FieldType.STRING)
    PROXYPORT__FIELD_NAME: WrapperField = WrapperField("ProxyPort", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AesKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'AesKey' on this record model
        """
        self.set_field_value(self.AESKEY__FIELD_NAME.field_name, value)

    def get_AesKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AesKey' from this record model
        """
        return self.get_field_value(self.AESKEY__FIELD_NAME.field_name)

    def set_AgentRoot_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentRoot' on this record model
        """
        self.set_field_value(self.AGENTROOT__FIELD_NAME.field_name, value)

    def get_AgentRoot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentRoot' from this record model
        """
        return self.get_field_value(self.AGENTROOT__FIELD_NAME.field_name)

    def set_AuthToken_field(self, value: Optional[str]):
        """
        Set data field with field name 'AuthToken' on this record model
        """
        self.set_field_value(self.AUTHTOKEN__FIELD_NAME.field_name, value)

    def get_AuthToken_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AuthToken' from this record model
        """
        return self.get_field_value(self.AUTHTOKEN__FIELD_NAME.field_name)

    def set_ConnectionName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConnectionName' on this record model
        """
        self.set_field_value(self.CONNECTIONNAME__FIELD_NAME.field_name, value)

    def get_ConnectionName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConnectionName' from this record model
        """
        return self.get_field_value(self.CONNECTIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ProxyHost_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProxyHost' on this record model
        """
        self.set_field_value(self.PROXYHOST__FIELD_NAME.field_name, value)

    def get_ProxyHost_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProxyHost' from this record model
        """
        return self.get_field_value(self.PROXYHOST__FIELD_NAME.field_name)

    def set_ProxyPort_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProxyPort' on this record model
        """
        self.set_field_value(self.PROXYPORT__FIELD_NAME.field_name, value)

    def get_ProxyPort_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProxyPort' from this record model
        """
        return self.get_field_value(self.PROXYPORT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowAIRunResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowAIRunResult
    Data Type Display Name: FlowAI Run result (FlowAI Run Results)
    Fields: alphaFR, CreatedBy, DataRecordName, DateCreated, decompFR, FilePath, max_cptFS, outlier_binsFS, pen_valueFS, second_fractionFR, sideFM, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FlowAIRunResult'
    ALPHAFR__FIELD_NAME: WrapperField = WrapperField("alphaFR", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DECOMPFR__FIELD_NAME: WrapperField = WrapperField("decompFR", FieldType.BOOLEAN)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    MAX_CPTFS__FIELD_NAME: WrapperField = WrapperField("max_cptFS", FieldType.INTEGER)
    OUTLIER_BINSFS__FIELD_NAME: WrapperField = WrapperField("outlier_binsFS", FieldType.BOOLEAN)
    PEN_VALUEFS__FIELD_NAME: WrapperField = WrapperField("pen_valueFS", FieldType.STRING)
    SECOND_FRACTIONFR__FIELD_NAME: WrapperField = WrapperField("second_fractionFR", FieldType.DOUBLE)
    SIDEFM__FIELD_NAME: WrapperField = WrapperField("sideFM", FieldType.PICKLIST)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_alphaFR_field(self, value: Optional[float]):
        """
        Set data field with field name 'alphaFR' on this record model
        """
        self.set_field_value(self.ALPHAFR__FIELD_NAME.field_name, value)

    def get_alphaFR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'alphaFR' from this record model
        """
        return self.get_field_value(self.ALPHAFR__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_decompFR_field(self, value: Optional[bool]):
        """
        Set data field with field name 'decompFR' on this record model
        """
        self.set_field_value(self.DECOMPFR__FIELD_NAME.field_name, value)

    def get_decompFR_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'decompFR' from this record model
        """
        return self.get_field_value(self.DECOMPFR__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_max_cptFS_field(self, value: Optional[int]):
        """
        Set data field with field name 'max_cptFS' on this record model
        """
        self.set_field_value(self.MAX_CPTFS__FIELD_NAME.field_name, value)

    def get_max_cptFS_field(self) -> Optional[int]:
        """
        Get data field value with field name 'max_cptFS' from this record model
        """
        return self.get_field_value(self.MAX_CPTFS__FIELD_NAME.field_name)

    def set_outlier_binsFS_field(self, value: Optional[bool]):
        """
        Set data field with field name 'outlier_binsFS' on this record model
        """
        self.set_field_value(self.OUTLIER_BINSFS__FIELD_NAME.field_name, value)

    def get_outlier_binsFS_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'outlier_binsFS' from this record model
        """
        return self.get_field_value(self.OUTLIER_BINSFS__FIELD_NAME.field_name)

    def set_pen_valueFS_field(self, value: Optional[str]):
        """
        Set data field with field name 'pen_valueFS' on this record model
        """
        self.set_field_value(self.PEN_VALUEFS__FIELD_NAME.field_name, value)

    def get_pen_valueFS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'pen_valueFS' from this record model
        """
        return self.get_field_value(self.PEN_VALUEFS__FIELD_NAME.field_name)

    def set_second_fractionFR_field(self, value: Optional[float]):
        """
        Set data field with field name 'second_fractionFR' on this record model
        """
        self.set_field_value(self.SECOND_FRACTIONFR__FIELD_NAME.field_name, value)

    def get_second_fractionFR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'second_fractionFR' from this record model
        """
        return self.get_field_value(self.SECOND_FRACTIONFR__FIELD_NAME.field_name)

    def set_sideFM_field(self, value: Optional[str]):
        """
        Set data field with field name 'sideFM' on this record model
        """
        self.set_field_value(self.SIDEFM__FIELD_NAME.field_name, value)

    def get_sideFM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'sideFM' from this record model
        """
        return self.get_field_value(self.SIDEFM__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCell
    Data Type Display Name: Flow Cell (Flow Cells)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, FlowcellId, OccupancyProxyClusterCount, OccupiedClusterCount, PercentOccupied, pfClusterCount, RawClusterCount, RowPosition, StorageLocationBarcode, StorageUnitPath, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FlowCell'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FLOWCELLID__FIELD_NAME: WrapperField = WrapperField("FlowcellId", FieldType.STRING)
    OCCUPANCYPROXYCLUSTERCOUNT__FIELD_NAME: WrapperField = WrapperField("OccupancyProxyClusterCount", FieldType.LONG)
    OCCUPIEDCLUSTERCOUNT__FIELD_NAME: WrapperField = WrapperField("OccupiedClusterCount", FieldType.LONG)
    PERCENTOCCUPIED__FIELD_NAME: WrapperField = WrapperField("PercentOccupied", FieldType.DOUBLE)
    PFCLUSTERCOUNT__FIELD_NAME: WrapperField = WrapperField("pfClusterCount", FieldType.LONG)
    RAWCLUSTERCOUNT__FIELD_NAME: WrapperField = WrapperField("RawClusterCount", FieldType.LONG)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    STORAGELOCATIONBARCODE__FIELD_NAME: WrapperField = WrapperField("StorageLocationBarcode", FieldType.SELECTION)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_OccupancyProxyClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'OccupancyProxyClusterCount' on this record model
        """
        self.set_field_value(self.OCCUPANCYPROXYCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_OccupancyProxyClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'OccupancyProxyClusterCount' from this record model
        """
        return self.get_field_value(self.OCCUPANCYPROXYCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_OccupiedClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'OccupiedClusterCount' on this record model
        """
        self.set_field_value(self.OCCUPIEDCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_OccupiedClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'OccupiedClusterCount' from this record model
        """
        return self.get_field_value(self.OCCUPIEDCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_PercentOccupied_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentOccupied' on this record model
        """
        self.set_field_value(self.PERCENTOCCUPIED__FIELD_NAME.field_name, value)

    def get_PercentOccupied_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentOccupied' from this record model
        """
        return self.get_field_value(self.PERCENTOCCUPIED__FIELD_NAME.field_name)

    def set_pfClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'pfClusterCount' on this record model
        """
        self.set_field_value(self.PFCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_pfClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'pfClusterCount' from this record model
        """
        return self.get_field_value(self.PFCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_RawClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'RawClusterCount' on this record model
        """
        self.set_field_value(self.RAWCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_RawClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RawClusterCount' from this record model
        """
        return self.get_field_value(self.RAWCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCellLaneModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCellLane
    Data Type Display Name: Flow Cell Lane (Flow Cell Lanes)
    Fields: CreatedBy, DataRecordName, DateCreated, ExpRecId, FlowcellId, LaneNum, MultiParentLink215, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FlowCellLane'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPRECID__FIELD_NAME: WrapperField = WrapperField("ExpRecId", FieldType.LONG)
    FLOWCELLID__FIELD_NAME: WrapperField = WrapperField("FlowcellId", FieldType.STRING)
    LANENUM__FIELD_NAME: WrapperField = WrapperField("LaneNum", FieldType.LONG)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpRecId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpRecId' on this record model
        """
        self.set_field_value(self.EXPRECID__FIELD_NAME.field_name, value)

    def get_ExpRecId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpRecId' from this record model
        """
        return self.get_field_value(self.EXPRECID__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_LaneNum_field(self, value: Optional[int]):
        """
        Set data field with field name 'LaneNum' on this record model
        """
        self.set_field_value(self.LANENUM__FIELD_NAME.field_name, value)

    def get_LaneNum_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LaneNum' from this record model
        """
        return self.get_field_value(self.LANENUM__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowClustClusterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowClustCluster
    Data Type Display Name: FlowClust Cluster (FlowClust Clusters)
    Fields: ClusterNum, ColorHTML, ColorName, CreatedBy, DataRecordName, DateCreated, UserAnnotation, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FlowClustCluster'
    CLUSTERNUM__FIELD_NAME: WrapperField = WrapperField("ClusterNum", FieldType.STRING)
    COLORHTML__FIELD_NAME: WrapperField = WrapperField("ColorHTML", FieldType.STRING)
    COLORNAME__FIELD_NAME: WrapperField = WrapperField("ColorName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    USERANNOTATION__FIELD_NAME: WrapperField = WrapperField("UserAnnotation", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ClusterNum_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterNum' on this record model
        """
        self.set_field_value(self.CLUSTERNUM__FIELD_NAME.field_name, value)

    def get_ClusterNum_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterNum' from this record model
        """
        return self.get_field_value(self.CLUSTERNUM__FIELD_NAME.field_name)

    def set_ColorHTML_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColorHTML' on this record model
        """
        self.set_field_value(self.COLORHTML__FIELD_NAME.field_name, value)

    def get_ColorHTML_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColorHTML' from this record model
        """
        return self.get_field_value(self.COLORHTML__FIELD_NAME.field_name)

    def set_ColorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColorName' on this record model
        """
        self.set_field_value(self.COLORNAME__FIELD_NAME.field_name, value)

    def get_ColorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColorName' from this record model
        """
        return self.get_field_value(self.COLORNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_UserAnnotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserAnnotation' on this record model
        """
        self.set_field_value(self.USERANNOTATION__FIELD_NAME.field_name, value)

    def get_UserAnnotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserAnnotation' from this record model
        """
        return self.get_field_value(self.USERANNOTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowClustConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowClustConfig
    Data Type Display Name: FlowClust Config (FlowClust Configs)
    Fields: BInit, ChannelConfigJSON, ClusterGroupName, CreatedBy, criterion, DataRecordName, DateCreated, FilePath, IsDataComplete, lam, LLevel, maxcount, MaxEMIterations, mincount, nu, nuest, NumberOfClusters, randomStart, seed, tol, tolInit, trans, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate, zcutoff
    Sets up a FlowClust clustering package configurations.
    """
    DATA_TYPE_NAME: str = 'FlowClustConfig'
    BINIT__FIELD_NAME: WrapperField = WrapperField("BInit", FieldType.INTEGER)
    CHANNELCONFIGJSON__FIELD_NAME: WrapperField = WrapperField("ChannelConfigJSON", FieldType.STRING)
    CLUSTERGROUPNAME__FIELD_NAME: WrapperField = WrapperField("ClusterGroupName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CRITERION__FIELD_NAME: WrapperField = WrapperField("criterion", FieldType.PICKLIST)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    ISDATACOMPLETE__FIELD_NAME: WrapperField = WrapperField("IsDataComplete", FieldType.BOOLEAN)
    LAM__FIELD_NAME: WrapperField = WrapperField("lam", FieldType.DOUBLE)
    LLEVEL__FIELD_NAME: WrapperField = WrapperField("LLevel", FieldType.DOUBLE)
    MAXCOUNT__FIELD_NAME: WrapperField = WrapperField("maxcount", FieldType.INTEGER)
    MAXEMITERATIONS__FIELD_NAME: WrapperField = WrapperField("MaxEMIterations", FieldType.INTEGER)
    MINCOUNT__FIELD_NAME: WrapperField = WrapperField("mincount", FieldType.INTEGER)
    NU__FIELD_NAME: WrapperField = WrapperField("nu", FieldType.INTEGER)
    NUEST__FIELD_NAME: WrapperField = WrapperField("nuest", FieldType.PICKLIST)
    NUMBEROFCLUSTERS__FIELD_NAME: WrapperField = WrapperField("NumberOfClusters", FieldType.INTEGER)
    RANDOMSTART__FIELD_NAME: WrapperField = WrapperField("randomStart", FieldType.INTEGER)
    SEED__FIELD_NAME: WrapperField = WrapperField("seed", FieldType.INTEGER)
    TOL__FIELD_NAME: WrapperField = WrapperField("tol", FieldType.DOUBLE)
    TOLINIT__FIELD_NAME: WrapperField = WrapperField("tolInit", FieldType.DOUBLE)
    TRANS__FIELD_NAME: WrapperField = WrapperField("trans", FieldType.PICKLIST)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    ZCUTOFF__FIELD_NAME: WrapperField = WrapperField("zcutoff", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BInit_field(self, value: Optional[int]):
        """
        Set data field with field name 'BInit' on this record model
        """
        self.set_field_value(self.BINIT__FIELD_NAME.field_name, value)

    def get_BInit_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BInit' from this record model
        """
        return self.get_field_value(self.BINIT__FIELD_NAME.field_name)

    def set_ChannelConfigJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelConfigJSON' on this record model
        """
        self.set_field_value(self.CHANNELCONFIGJSON__FIELD_NAME.field_name, value)

    def get_ChannelConfigJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelConfigJSON' from this record model
        """
        return self.get_field_value(self.CHANNELCONFIGJSON__FIELD_NAME.field_name)

    def set_ClusterGroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterGroupName' on this record model
        """
        self.set_field_value(self.CLUSTERGROUPNAME__FIELD_NAME.field_name, value)

    def get_ClusterGroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterGroupName' from this record model
        """
        return self.get_field_value(self.CLUSTERGROUPNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_criterion_field(self, value: Optional[str]):
        """
        Set data field with field name 'criterion' on this record model
        """
        self.set_field_value(self.CRITERION__FIELD_NAME.field_name, value)

    def get_criterion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'criterion' from this record model
        """
        return self.get_field_value(self.CRITERION__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsDataComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsDataComplete' on this record model
        """
        self.set_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name, value)

    def get_IsDataComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsDataComplete' from this record model
        """
        return self.get_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name)

    def set_lam_field(self, value: Optional[float]):
        """
        Set data field with field name 'lam' on this record model
        """
        self.set_field_value(self.LAM__FIELD_NAME.field_name, value)

    def get_lam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'lam' from this record model
        """
        return self.get_field_value(self.LAM__FIELD_NAME.field_name)

    def set_LLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'LLevel' on this record model
        """
        self.set_field_value(self.LLEVEL__FIELD_NAME.field_name, value)

    def get_LLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LLevel' from this record model
        """
        return self.get_field_value(self.LLEVEL__FIELD_NAME.field_name)

    def set_maxcount_field(self, value: Optional[int]):
        """
        Set data field with field name 'maxcount' on this record model
        """
        self.set_field_value(self.MAXCOUNT__FIELD_NAME.field_name, value)

    def get_maxcount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'maxcount' from this record model
        """
        return self.get_field_value(self.MAXCOUNT__FIELD_NAME.field_name)

    def set_MaxEMIterations_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaxEMIterations' on this record model
        """
        self.set_field_value(self.MAXEMITERATIONS__FIELD_NAME.field_name, value)

    def get_MaxEMIterations_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaxEMIterations' from this record model
        """
        return self.get_field_value(self.MAXEMITERATIONS__FIELD_NAME.field_name)

    def set_mincount_field(self, value: Optional[int]):
        """
        Set data field with field name 'mincount' on this record model
        """
        self.set_field_value(self.MINCOUNT__FIELD_NAME.field_name, value)

    def get_mincount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'mincount' from this record model
        """
        return self.get_field_value(self.MINCOUNT__FIELD_NAME.field_name)

    def set_nu_field(self, value: Optional[int]):
        """
        Set data field with field name 'nu' on this record model
        """
        self.set_field_value(self.NU__FIELD_NAME.field_name, value)

    def get_nu_field(self) -> Optional[int]:
        """
        Get data field value with field name 'nu' from this record model
        """
        return self.get_field_value(self.NU__FIELD_NAME.field_name)

    def set_nuest_field(self, value: Optional[str]):
        """
        Set data field with field name 'nuest' on this record model
        """
        self.set_field_value(self.NUEST__FIELD_NAME.field_name, value)

    def get_nuest_field(self) -> Optional[str]:
        """
        Get data field value with field name 'nuest' from this record model
        """
        return self.get_field_value(self.NUEST__FIELD_NAME.field_name)

    def set_NumberOfClusters_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfClusters' on this record model
        """
        self.set_field_value(self.NUMBEROFCLUSTERS__FIELD_NAME.field_name, value)

    def get_NumberOfClusters_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfClusters' from this record model
        """
        return self.get_field_value(self.NUMBEROFCLUSTERS__FIELD_NAME.field_name)

    def set_randomStart_field(self, value: Optional[int]):
        """
        Set data field with field name 'randomStart' on this record model
        """
        self.set_field_value(self.RANDOMSTART__FIELD_NAME.field_name, value)

    def get_randomStart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'randomStart' from this record model
        """
        return self.get_field_value(self.RANDOMSTART__FIELD_NAME.field_name)

    def set_seed_field(self, value: Optional[int]):
        """
        Set data field with field name 'seed' on this record model
        """
        self.set_field_value(self.SEED__FIELD_NAME.field_name, value)

    def get_seed_field(self) -> Optional[int]:
        """
        Get data field value with field name 'seed' from this record model
        """
        return self.get_field_value(self.SEED__FIELD_NAME.field_name)

    def set_tol_field(self, value: Optional[float]):
        """
        Set data field with field name 'tol' on this record model
        """
        self.set_field_value(self.TOL__FIELD_NAME.field_name, value)

    def get_tol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'tol' from this record model
        """
        return self.get_field_value(self.TOL__FIELD_NAME.field_name)

    def set_tolInit_field(self, value: Optional[float]):
        """
        Set data field with field name 'tolInit' on this record model
        """
        self.set_field_value(self.TOLINIT__FIELD_NAME.field_name, value)

    def get_tolInit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'tolInit' from this record model
        """
        return self.get_field_value(self.TOLINIT__FIELD_NAME.field_name)

    def set_trans_field(self, value: Optional[str]):
        """
        Set data field with field name 'trans' on this record model
        """
        self.set_field_value(self.TRANS__FIELD_NAME.field_name, value)

    def get_trans_field(self) -> Optional[str]:
        """
        Get data field value with field name 'trans' from this record model
        """
        return self.get_field_value(self.TRANS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_zcutoff_field(self, value: Optional[float]):
        """
        Set data field with field name 'zcutoff' on this record model
        """
        self.set_field_value(self.ZCUTOFF__FIELD_NAME.field_name, value)

    def get_zcutoff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'zcutoff' from this record model
        """
        return self.get_field_value(self.ZCUTOFF__FIELD_NAME.field_name)


class FlowCompensationMatrixDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCompensationMatrixDatum
    Data Type Display Name: Flow Compensation Matrix Datum (Flow Compensation Matrix Data)
    Fields: ColumnChannelName, ColumnIndex, CompensationValue, CreatedBy, DataRecordName, DateCreated, RowChannelName, RowIndex, VeloxLastModifiedBy, VeloxLastModifiedDate
    Individual flow compensation matrix data value in the matrix.
    """
    DATA_TYPE_NAME: str = 'FlowCompensationMatrixDatum'
    COLUMNCHANNELNAME__FIELD_NAME: WrapperField = WrapperField("ColumnChannelName", FieldType.STRING)
    COLUMNINDEX__FIELD_NAME: WrapperField = WrapperField("ColumnIndex", FieldType.INTEGER)
    COMPENSATIONVALUE__FIELD_NAME: WrapperField = WrapperField("CompensationValue", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ROWCHANNELNAME__FIELD_NAME: WrapperField = WrapperField("RowChannelName", FieldType.STRING)
    ROWINDEX__FIELD_NAME: WrapperField = WrapperField("RowIndex", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColumnChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColumnChannelName' on this record model
        """
        self.set_field_value(self.COLUMNCHANNELNAME__FIELD_NAME.field_name, value)

    def get_ColumnChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColumnChannelName' from this record model
        """
        return self.get_field_value(self.COLUMNCHANNELNAME__FIELD_NAME.field_name)

    def set_ColumnIndex_field(self, value: Optional[int]):
        """
        Set data field with field name 'ColumnIndex' on this record model
        """
        self.set_field_value(self.COLUMNINDEX__FIELD_NAME.field_name, value)

    def get_ColumnIndex_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ColumnIndex' from this record model
        """
        return self.get_field_value(self.COLUMNINDEX__FIELD_NAME.field_name)

    def set_CompensationValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'CompensationValue' on this record model
        """
        self.set_field_value(self.COMPENSATIONVALUE__FIELD_NAME.field_name, value)

    def get_CompensationValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CompensationValue' from this record model
        """
        return self.get_field_value(self.COMPENSATIONVALUE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_RowChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowChannelName' on this record model
        """
        self.set_field_value(self.ROWCHANNELNAME__FIELD_NAME.field_name, value)

    def get_RowChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowChannelName' from this record model
        """
        return self.get_field_value(self.ROWCHANNELNAME__FIELD_NAME.field_name)

    def set_RowIndex_field(self, value: Optional[int]):
        """
        Set data field with field name 'RowIndex' on this record model
        """
        self.set_field_value(self.ROWINDEX__FIELD_NAME.field_name, value)

    def get_RowIndex_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RowIndex' from this record model
        """
        return self.get_field_value(self.ROWINDEX__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCompensationMatrixInfoModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCompensationMatrixInfo
    Data Type Display Name: Flow Compensation Matrix Info (Flow Compensation Matrix Info)
    Fields: ChannelNameList, CreatedBy, DataRecordName, DateCreated, Emedded, MatrixName, VeloxLastModifiedBy, VeloxLastModifiedDate
    Contains the info about the matrix itself.

The parents of this matrix are those that are used to create this info file. There can be more than one parent.

This is not directly linked to children FCS files. It will be linked through FlowCompMatrixApplication type.
    """
    DATA_TYPE_NAME: str = 'FlowCompensationMatrixInfo'
    CHANNELNAMELIST__FIELD_NAME: WrapperField = WrapperField("ChannelNameList", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EMEDDED__FIELD_NAME: WrapperField = WrapperField("Emedded", FieldType.BOOLEAN)
    MATRIXNAME__FIELD_NAME: WrapperField = WrapperField("MatrixName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChannelNameList_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelNameList' on this record model
        """
        self.set_field_value(self.CHANNELNAMELIST__FIELD_NAME.field_name, value)

    def get_ChannelNameList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelNameList' from this record model
        """
        return self.get_field_value(self.CHANNELNAMELIST__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Emedded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Emedded' on this record model
        """
        self.set_field_value(self.EMEDDED__FIELD_NAME.field_name, value)

    def get_Emedded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Emedded' from this record model
        """
        return self.get_field_value(self.EMEDDED__FIELD_NAME.field_name)

    def set_MatrixName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MatrixName' on this record model
        """
        self.set_field_value(self.MATRIXNAME__FIELD_NAME.field_name, value)

    def get_MatrixName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MatrixName' from this record model
        """
        return self.get_field_value(self.MATRIXNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCompMatrixApplicationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCompMatrixApplication
    Data Type Display Name: Flow Comp Matrix Application (Flow Comp Matrix Applications)
    Fields: CreatedBy, DataRecordName, DateCreated, Emedded, MatrixInfoRecordId, VeloxLastModifiedBy, VeloxLastModifiedDate
    Apply a flow cyto compensation matrix for a target (parent FCS) file, against a matrix info.
    """
    DATA_TYPE_NAME: str = 'FlowCompMatrixApplication'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EMEDDED__FIELD_NAME: WrapperField = WrapperField("Emedded", FieldType.BOOLEAN)
    MATRIXINFORECORDID__FIELD_NAME: WrapperField = WrapperField("MatrixInfoRecordId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Emedded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Emedded' on this record model
        """
        self.set_field_value(self.EMEDDED__FIELD_NAME.field_name, value)

    def get_Emedded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Emedded' from this record model
        """
        return self.get_field_value(self.EMEDDED__FIELD_NAME.field_name)

    def set_MatrixInfoRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'MatrixInfoRecordId' on this record model
        """
        self.set_field_value(self.MATRIXINFORECORDID__FIELD_NAME.field_name, value)

    def get_MatrixInfoRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MatrixInfoRecordId' from this record model
        """
        return self.get_field_value(self.MATRIXINFORECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCytoFileTemplateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCytoFileTemplate
    Data Type Display Name: Flow Cyto File Template (Flow Cyto File Templates)
    Fields: CreatedBy, DataRecordName, DateCreated, TemplateData, TemplateDescription, TemplateName, VeloxLastModifiedBy, VeloxLastModifiedDate
    Describes a saved gating and compensation strategy for a flow cytometry file.
    """
    DATA_TYPE_NAME: str = 'FlowCytoFileTemplate'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    TEMPLATEDATA__FIELD_NAME: WrapperField = WrapperField("TemplateData", FieldType.STRING)
    TEMPLATEDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("TemplateDescription", FieldType.STRING)
    TEMPLATENAME__FIELD_NAME: WrapperField = WrapperField("TemplateName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TemplateData_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateData' on this record model
        """
        self.set_field_value(self.TEMPLATEDATA__FIELD_NAME.field_name, value)

    def get_TemplateData_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateData' from this record model
        """
        return self.get_field_value(self.TEMPLATEDATA__FIELD_NAME.field_name)

    def set_TemplateDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateDescription' on this record model
        """
        self.set_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_TemplateDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateDescription' from this record model
        """
        return self.get_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name)

    def set_TemplateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateName' on this record model
        """
        self.set_field_value(self.TEMPLATENAME__FIELD_NAME.field_name, value)

    def get_TemplateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateName' from this record model
        """
        return self.get_field_value(self.TEMPLATENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCytometryChannelInfoModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCytometryChannelInfo
    Data Type Display Name: Flow Cytometry Channel Info (Flow Cytometry Channel Info)
    Fields: Annotation, AxisMax, AxisMin, AxisRange, ChannelName, CreatedBy, DataRecordName, DateCreated, TransformDenominator, TransformGML2A, TransformGML2B, TransformGML2C, TransformGML2M, TransformGML2T, TransformGML2W, TransformLogicleA, TransformLogicleM, TransformLogicleTop, TransformLogicleW, TransformMethod, TransformNumerator, TransformVarA, TransformVarB, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FlowCytometryChannelInfo'
    ANNOTATION__FIELD_NAME: WrapperField = WrapperField("Annotation", FieldType.STRING)
    AXISMAX__FIELD_NAME: WrapperField = WrapperField("AxisMax", FieldType.DOUBLE)
    AXISMIN__FIELD_NAME: WrapperField = WrapperField("AxisMin", FieldType.DOUBLE)
    AXISRANGE__FIELD_NAME: WrapperField = WrapperField("AxisRange", FieldType.DOUBLE)
    CHANNELNAME__FIELD_NAME: WrapperField = WrapperField("ChannelName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    TRANSFORMDENOMINATOR__FIELD_NAME: WrapperField = WrapperField("TransformDenominator", FieldType.STRING)
    TRANSFORMGML2A__FIELD_NAME: WrapperField = WrapperField("TransformGML2A", FieldType.DOUBLE)
    TRANSFORMGML2B__FIELD_NAME: WrapperField = WrapperField("TransformGML2B", FieldType.DOUBLE)
    TRANSFORMGML2C__FIELD_NAME: WrapperField = WrapperField("TransformGML2C", FieldType.DOUBLE)
    TRANSFORMGML2M__FIELD_NAME: WrapperField = WrapperField("TransformGML2M", FieldType.DOUBLE)
    TRANSFORMGML2T__FIELD_NAME: WrapperField = WrapperField("TransformGML2T", FieldType.DOUBLE)
    TRANSFORMGML2W__FIELD_NAME: WrapperField = WrapperField("TransformGML2W", FieldType.DOUBLE)
    TRANSFORMLOGICLEA__FIELD_NAME: WrapperField = WrapperField("TransformLogicleA", FieldType.DOUBLE)
    TRANSFORMLOGICLEM__FIELD_NAME: WrapperField = WrapperField("TransformLogicleM", FieldType.DOUBLE)
    TRANSFORMLOGICLETOP__FIELD_NAME: WrapperField = WrapperField("TransformLogicleTop", FieldType.DOUBLE)
    TRANSFORMLOGICLEW__FIELD_NAME: WrapperField = WrapperField("TransformLogicleW", FieldType.DOUBLE)
    TRANSFORMMETHOD__FIELD_NAME: WrapperField = WrapperField("TransformMethod", FieldType.PICKLIST)
    TRANSFORMNUMERATOR__FIELD_NAME: WrapperField = WrapperField("TransformNumerator", FieldType.STRING)
    TRANSFORMVARA__FIELD_NAME: WrapperField = WrapperField("TransformVarA", FieldType.DOUBLE)
    TRANSFORMVARB__FIELD_NAME: WrapperField = WrapperField("TransformVarB", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Annotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Annotation' on this record model
        """
        self.set_field_value(self.ANNOTATION__FIELD_NAME.field_name, value)

    def get_Annotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Annotation' from this record model
        """
        return self.get_field_value(self.ANNOTATION__FIELD_NAME.field_name)

    def set_AxisMax_field(self, value: Optional[float]):
        """
        Set data field with field name 'AxisMax' on this record model
        """
        self.set_field_value(self.AXISMAX__FIELD_NAME.field_name, value)

    def get_AxisMax_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AxisMax' from this record model
        """
        return self.get_field_value(self.AXISMAX__FIELD_NAME.field_name)

    def set_AxisMin_field(self, value: Optional[float]):
        """
        Set data field with field name 'AxisMin' on this record model
        """
        self.set_field_value(self.AXISMIN__FIELD_NAME.field_name, value)

    def get_AxisMin_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AxisMin' from this record model
        """
        return self.get_field_value(self.AXISMIN__FIELD_NAME.field_name)

    def set_AxisRange_field(self, value: Optional[float]):
        """
        Set data field with field name 'AxisRange' on this record model
        """
        self.set_field_value(self.AXISRANGE__FIELD_NAME.field_name, value)

    def get_AxisRange_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AxisRange' from this record model
        """
        return self.get_field_value(self.AXISRANGE__FIELD_NAME.field_name)

    def set_ChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelName' on this record model
        """
        self.set_field_value(self.CHANNELNAME__FIELD_NAME.field_name, value)

    def get_ChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelName' from this record model
        """
        return self.get_field_value(self.CHANNELNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TransformDenominator_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformDenominator' on this record model
        """
        self.set_field_value(self.TRANSFORMDENOMINATOR__FIELD_NAME.field_name, value)

    def get_TransformDenominator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformDenominator' from this record model
        """
        return self.get_field_value(self.TRANSFORMDENOMINATOR__FIELD_NAME.field_name)

    def set_TransformGML2A_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2A' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2A__FIELD_NAME.field_name, value)

    def get_TransformGML2A_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2A' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2A__FIELD_NAME.field_name)

    def set_TransformGML2B_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2B' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2B__FIELD_NAME.field_name, value)

    def get_TransformGML2B_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2B' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2B__FIELD_NAME.field_name)

    def set_TransformGML2C_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2C' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2C__FIELD_NAME.field_name, value)

    def get_TransformGML2C_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2C' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2C__FIELD_NAME.field_name)

    def set_TransformGML2M_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2M' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2M__FIELD_NAME.field_name, value)

    def get_TransformGML2M_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2M' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2M__FIELD_NAME.field_name)

    def set_TransformGML2T_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2T' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2T__FIELD_NAME.field_name, value)

    def get_TransformGML2T_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2T' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2T__FIELD_NAME.field_name)

    def set_TransformGML2W_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2W' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2W__FIELD_NAME.field_name, value)

    def get_TransformGML2W_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2W' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2W__FIELD_NAME.field_name)

    def set_TransformLogicleA_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleA' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLEA__FIELD_NAME.field_name, value)

    def get_TransformLogicleA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleA' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLEA__FIELD_NAME.field_name)

    def set_TransformLogicleM_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleM' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLEM__FIELD_NAME.field_name, value)

    def get_TransformLogicleM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleM' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLEM__FIELD_NAME.field_name)

    def set_TransformLogicleTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleTop' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLETOP__FIELD_NAME.field_name, value)

    def get_TransformLogicleTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleTop' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLETOP__FIELD_NAME.field_name)

    def set_TransformLogicleW_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleW' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLEW__FIELD_NAME.field_name, value)

    def get_TransformLogicleW_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleW' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLEW__FIELD_NAME.field_name)

    def set_TransformMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformMethod' on this record model
        """
        self.set_field_value(self.TRANSFORMMETHOD__FIELD_NAME.field_name, value)

    def get_TransformMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformMethod' from this record model
        """
        return self.get_field_value(self.TRANSFORMMETHOD__FIELD_NAME.field_name)

    def set_TransformNumerator_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformNumerator' on this record model
        """
        self.set_field_value(self.TRANSFORMNUMERATOR__FIELD_NAME.field_name, value)

    def get_TransformNumerator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformNumerator' from this record model
        """
        return self.get_field_value(self.TRANSFORMNUMERATOR__FIELD_NAME.field_name)

    def set_TransformVarA_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformVarA' on this record model
        """
        self.set_field_value(self.TRANSFORMVARA__FIELD_NAME.field_name, value)

    def get_TransformVarA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformVarA' from this record model
        """
        return self.get_field_value(self.TRANSFORMVARA__FIELD_NAME.field_name)

    def set_TransformVarB_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformVarB' on this record model
        """
        self.set_field_value(self.TRANSFORMVARB__FIELD_NAME.field_name, value)

    def get_TransformVarB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformVarB' from this record model
        """
        return self.get_field_value(self.TRANSFORMVARB__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowDensityGateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowDensityGate
    Data Type Display Name: Flow Density Gate (Flow Density Gates)
    Fields: CreatedBy, DataRecordName, DateCreated, IsPositiveX, IsPositiveY, PercentileX, PercentileY, ShapeJSON, UserAnnotation, VeloxLastModifiedBy, VeloxLastModifiedDate, XChannelName, YChannelName
    """
    DATA_TYPE_NAME: str = 'FlowDensityGate'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISPOSITIVEX__FIELD_NAME: WrapperField = WrapperField("IsPositiveX", FieldType.BOOLEAN)
    ISPOSITIVEY__FIELD_NAME: WrapperField = WrapperField("IsPositiveY", FieldType.BOOLEAN)
    PERCENTILEX__FIELD_NAME: WrapperField = WrapperField("PercentileX", FieldType.DOUBLE)
    PERCENTILEY__FIELD_NAME: WrapperField = WrapperField("PercentileY", FieldType.DOUBLE)
    SHAPEJSON__FIELD_NAME: WrapperField = WrapperField("ShapeJSON", FieldType.STRING)
    USERANNOTATION__FIELD_NAME: WrapperField = WrapperField("UserAnnotation", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    XCHANNELNAME__FIELD_NAME: WrapperField = WrapperField("XChannelName", FieldType.STRING)
    YCHANNELNAME__FIELD_NAME: WrapperField = WrapperField("YChannelName", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsPositiveX_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveX' on this record model
        """
        self.set_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name, value)

    def get_IsPositiveX_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveX' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name)

    def set_IsPositiveY_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveY' on this record model
        """
        self.set_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name, value)

    def get_IsPositiveY_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveY' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name)

    def set_PercentileX_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileX' on this record model
        """
        self.set_field_value(self.PERCENTILEX__FIELD_NAME.field_name, value)

    def get_PercentileX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileX' from this record model
        """
        return self.get_field_value(self.PERCENTILEX__FIELD_NAME.field_name)

    def set_PercentileY_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileY' on this record model
        """
        self.set_field_value(self.PERCENTILEY__FIELD_NAME.field_name, value)

    def get_PercentileY_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileY' from this record model
        """
        return self.get_field_value(self.PERCENTILEY__FIELD_NAME.field_name)

    def set_ShapeJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShapeJSON' on this record model
        """
        self.set_field_value(self.SHAPEJSON__FIELD_NAME.field_name, value)

    def get_ShapeJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShapeJSON' from this record model
        """
        return self.get_field_value(self.SHAPEJSON__FIELD_NAME.field_name)

    def set_UserAnnotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserAnnotation' on this record model
        """
        self.set_field_value(self.USERANNOTATION__FIELD_NAME.field_name, value)

    def get_UserAnnotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserAnnotation' from this record model
        """
        return self.get_field_value(self.USERANNOTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_XChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'XChannelName' on this record model
        """
        self.set_field_value(self.XCHANNELNAME__FIELD_NAME.field_name, value)

    def get_XChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'XChannelName' from this record model
        """
        return self.get_field_value(self.XCHANNELNAME__FIELD_NAME.field_name)

    def set_YChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'YChannelName' on this record model
        """
        self.set_field_value(self.YCHANNELNAME__FIELD_NAME.field_name, value)

    def get_YChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'YChannelName' from this record model
        """
        return self.get_field_value(self.YCHANNELNAME__FIELD_NAME.field_name)


class FlowDensityGatingStrategyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowDensityGatingStrategy
    Data Type Display Name: Flow Density Gating Strategy (Flow Density Gating Strategies)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, IsEvaluated, IsPositiveX, IsPositiveY, PercentileX, PercentileY, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate, XAxisChannel, YAxisChannel
    """
    DATA_TYPE_NAME: str = 'FlowDensityGatingStrategy'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    ISEVALUATED__FIELD_NAME: WrapperField = WrapperField("IsEvaluated", FieldType.BOOLEAN)
    ISPOSITIVEX__FIELD_NAME: WrapperField = WrapperField("IsPositiveX", FieldType.BOOLEAN)
    ISPOSITIVEY__FIELD_NAME: WrapperField = WrapperField("IsPositiveY", FieldType.BOOLEAN)
    PERCENTILEX__FIELD_NAME: WrapperField = WrapperField("PercentileX", FieldType.DOUBLE)
    PERCENTILEY__FIELD_NAME: WrapperField = WrapperField("PercentileY", FieldType.DOUBLE)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    XAXISCHANNEL__FIELD_NAME: WrapperField = WrapperField("XAxisChannel", FieldType.SELECTION)
    YAXISCHANNEL__FIELD_NAME: WrapperField = WrapperField("YAxisChannel", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsEvaluated_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsEvaluated' on this record model
        """
        self.set_field_value(self.ISEVALUATED__FIELD_NAME.field_name, value)

    def get_IsEvaluated_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsEvaluated' from this record model
        """
        return self.get_field_value(self.ISEVALUATED__FIELD_NAME.field_name)

    def set_IsPositiveX_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveX' on this record model
        """
        self.set_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name, value)

    def get_IsPositiveX_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveX' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name)

    def set_IsPositiveY_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveY' on this record model
        """
        self.set_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name, value)

    def get_IsPositiveY_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveY' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name)

    def set_PercentileX_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileX' on this record model
        """
        self.set_field_value(self.PERCENTILEX__FIELD_NAME.field_name, value)

    def get_PercentileX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileX' from this record model
        """
        return self.get_field_value(self.PERCENTILEX__FIELD_NAME.field_name)

    def set_PercentileY_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileY' on this record model
        """
        self.set_field_value(self.PERCENTILEY__FIELD_NAME.field_name, value)

    def get_PercentileY_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileY' from this record model
        """
        return self.get_field_value(self.PERCENTILEY__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_XAxisChannel_field(self, value: Optional[str]):
        """
        Set data field with field name 'XAxisChannel' on this record model
        """
        self.set_field_value(self.XAXISCHANNEL__FIELD_NAME.field_name, value)

    def get_XAxisChannel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'XAxisChannel' from this record model
        """
        return self.get_field_value(self.XAXISCHANNEL__FIELD_NAME.field_name)

    def set_YAxisChannel_field(self, value: Optional[str]):
        """
        Set data field with field name 'YAxisChannel' on this record model
        """
        self.set_field_value(self.YAXISCHANNEL__FIELD_NAME.field_name, value)

    def get_YAxisChannel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'YAxisChannel' from this record model
        """
        return self.get_field_value(self.YAXISCHANNEL__FIELD_NAME.field_name)


class FlowJoWorkspaceFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowJoWorkspaceFile
    Data Type Display Name: FlowJo Workspace File (FlowJo Workspace Files)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    The raw FlowJo workspace file, in wsp format. Sapio does not use this directly after parsing the root. The workspace file here is for archival purpose.
    """
    DATA_TYPE_NAME: str = 'FlowJoWorkspaceFile'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowJoWorkspaceGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowJoWorkspaceGroup
    Data Type Display Name: FlowJo Workspace Group (FlowJo Workspace Groups)
    Fields: CreatedBy, DataLoadComplete, DataRecordName, DateCreated, FilePath, GroupName, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    A group in FlowJo workspace may contain zero, one, or more samples. Each group can have a separate gating hierarchy.
Processing for a group is completed when all samples have been found and processed.
    """
    DATA_TYPE_NAME: str = 'FlowJoWorkspaceGroup'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATALOADCOMPLETE__FIELD_NAME: WrapperField = WrapperField("DataLoadComplete", FieldType.BOOLEAN)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    GROUPNAME__FIELD_NAME: WrapperField = WrapperField("GroupName", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataLoadComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DataLoadComplete' on this record model
        """
        self.set_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name, value)

    def get_DataLoadComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DataLoadComplete' from this record model
        """
        return self.get_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowJoWorkspaceRootModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowJoWorkspaceRoot
    Data Type Display Name: FlowJo Workspace Root (FlowJo Workspace Roots)
    Fields: CreatedBy, DataLoadComplete, DataRecordName, DateCreated, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    At the top of the FlowJo Sapio workspace hierarchy when importing a wsp file. The raw data contains Sapio JSON representation of the FlowJo workspace data. The raw JSON data will be used when processing samples.
    """
    DATA_TYPE_NAME: str = 'FlowJoWorkspaceRoot'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATALOADCOMPLETE__FIELD_NAME: WrapperField = WrapperField("DataLoadComplete", FieldType.BOOLEAN)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataLoadComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DataLoadComplete' on this record model
        """
        self.set_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name, value)

    def get_DataLoadComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DataLoadComplete' from this record model
        """
        return self.get_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowManualGateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowManualGate
    Data Type Display Name: Flow Manual Gate (Flow Manual Gates)
    Fields: CreatedBy, DataRecordName, DateCreated, IsNegated, ShapeID, ShapeJSON, ShapeType, UserAnnotation, VeloxLastModifiedBy, VeloxLastModifiedDate, XChannelName, YChannelName
    """
    DATA_TYPE_NAME: str = 'FlowManualGate'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISNEGATED__FIELD_NAME: WrapperField = WrapperField("IsNegated", FieldType.BOOLEAN)
    SHAPEID__FIELD_NAME: WrapperField = WrapperField("ShapeID", FieldType.LONG)
    SHAPEJSON__FIELD_NAME: WrapperField = WrapperField("ShapeJSON", FieldType.STRING)
    SHAPETYPE__FIELD_NAME: WrapperField = WrapperField("ShapeType", FieldType.STRING)
    USERANNOTATION__FIELD_NAME: WrapperField = WrapperField("UserAnnotation", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    XCHANNELNAME__FIELD_NAME: WrapperField = WrapperField("XChannelName", FieldType.STRING)
    YCHANNELNAME__FIELD_NAME: WrapperField = WrapperField("YChannelName", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsNegated_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNegated' on this record model
        """
        self.set_field_value(self.ISNEGATED__FIELD_NAME.field_name, value)

    def get_IsNegated_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNegated' from this record model
        """
        return self.get_field_value(self.ISNEGATED__FIELD_NAME.field_name)

    def set_ShapeID_field(self, value: Optional[int]):
        """
        Set data field with field name 'ShapeID' on this record model
        """
        self.set_field_value(self.SHAPEID__FIELD_NAME.field_name, value)

    def get_ShapeID_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ShapeID' from this record model
        """
        return self.get_field_value(self.SHAPEID__FIELD_NAME.field_name)

    def set_ShapeJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShapeJSON' on this record model
        """
        self.set_field_value(self.SHAPEJSON__FIELD_NAME.field_name, value)

    def get_ShapeJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShapeJSON' from this record model
        """
        return self.get_field_value(self.SHAPEJSON__FIELD_NAME.field_name)

    def set_ShapeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShapeType' on this record model
        """
        self.set_field_value(self.SHAPETYPE__FIELD_NAME.field_name, value)

    def get_ShapeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShapeType' from this record model
        """
        return self.get_field_value(self.SHAPETYPE__FIELD_NAME.field_name)

    def set_UserAnnotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserAnnotation' on this record model
        """
        self.set_field_value(self.USERANNOTATION__FIELD_NAME.field_name, value)

    def get_UserAnnotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserAnnotation' from this record model
        """
        return self.get_field_value(self.USERANNOTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_XChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'XChannelName' on this record model
        """
        self.set_field_value(self.XCHANNELNAME__FIELD_NAME.field_name, value)

    def get_XChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'XChannelName' from this record model
        """
        return self.get_field_value(self.XCHANNELNAME__FIELD_NAME.field_name)

    def set_YChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'YChannelName' on this record model
        """
        self.set_field_value(self.YCHANNELNAME__FIELD_NAME.field_name, value)

    def get_YChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'YChannelName' from this record model
        """
        return self.get_field_value(self.YCHANNELNAME__FIELD_NAME.field_name)


class FormulationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Formulation
    Data Type Display Name: Formulation (Formulations)
    Fields: CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Formulation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FourPLLModelModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FourPLLModel
    Data Type Display Name: Four Parameter Logistic Regression (Four Parameter Logistic Regressions)
    Fields: b, c, CreatedBy, d, DataRecordName, DateCreated, e, ED10, ED50, ED90, ED95, EntryName, FilePath, MultiParentLink215, RSquared, SeriesName, SourceEntryId, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    Records advanced curve viewer's four parameter logistic regression result, when measuring sample data.
    """
    DATA_TYPE_NAME: str = 'FourPLLModel'
    B__FIELD_NAME: WrapperField = WrapperField("b", FieldType.DOUBLE)
    C__FIELD_NAME: WrapperField = WrapperField("c", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    D__FIELD_NAME: WrapperField = WrapperField("d", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    E__FIELD_NAME: WrapperField = WrapperField("e", FieldType.DOUBLE)
    ED10__FIELD_NAME: WrapperField = WrapperField("ED10", FieldType.DOUBLE)
    ED50__FIELD_NAME: WrapperField = WrapperField("ED50", FieldType.DOUBLE)
    ED90__FIELD_NAME: WrapperField = WrapperField("ED90", FieldType.DOUBLE)
    ED95__FIELD_NAME: WrapperField = WrapperField("ED95", FieldType.DOUBLE)
    ENTRYNAME__FIELD_NAME: WrapperField = WrapperField("EntryName", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    RSQUARED__FIELD_NAME: WrapperField = WrapperField("RSquared", FieldType.DOUBLE)
    SERIESNAME__FIELD_NAME: WrapperField = WrapperField("SeriesName", FieldType.STRING)
    SOURCEENTRYID__FIELD_NAME: WrapperField = WrapperField("SourceEntryId", FieldType.LONG)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_b_field(self, value: Optional[float]):
        """
        Set data field with field name 'b' on this record model
        """
        self.set_field_value(self.B__FIELD_NAME.field_name, value)

    def get_b_field(self) -> Optional[float]:
        """
        Get data field value with field name 'b' from this record model
        """
        return self.get_field_value(self.B__FIELD_NAME.field_name)

    def set_c_field(self, value: Optional[float]):
        """
        Set data field with field name 'c' on this record model
        """
        self.set_field_value(self.C__FIELD_NAME.field_name, value)

    def get_c_field(self) -> Optional[float]:
        """
        Get data field value with field name 'c' from this record model
        """
        return self.get_field_value(self.C__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_d_field(self, value: Optional[float]):
        """
        Set data field with field name 'd' on this record model
        """
        self.set_field_value(self.D__FIELD_NAME.field_name, value)

    def get_d_field(self) -> Optional[float]:
        """
        Get data field value with field name 'd' from this record model
        """
        return self.get_field_value(self.D__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_e_field(self, value: Optional[float]):
        """
        Set data field with field name 'e' on this record model
        """
        self.set_field_value(self.E__FIELD_NAME.field_name, value)

    def get_e_field(self) -> Optional[float]:
        """
        Get data field value with field name 'e' from this record model
        """
        return self.get_field_value(self.E__FIELD_NAME.field_name)

    def set_ED10_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED10' on this record model
        """
        self.set_field_value(self.ED10__FIELD_NAME.field_name, value)

    def get_ED10_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED10' from this record model
        """
        return self.get_field_value(self.ED10__FIELD_NAME.field_name)

    def set_ED50_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED50' on this record model
        """
        self.set_field_value(self.ED50__FIELD_NAME.field_name, value)

    def get_ED50_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED50' from this record model
        """
        return self.get_field_value(self.ED50__FIELD_NAME.field_name)

    def set_ED90_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED90' on this record model
        """
        self.set_field_value(self.ED90__FIELD_NAME.field_name, value)

    def get_ED90_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED90' from this record model
        """
        return self.get_field_value(self.ED90__FIELD_NAME.field_name)

    def set_ED95_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED95' on this record model
        """
        self.set_field_value(self.ED95__FIELD_NAME.field_name, value)

    def get_ED95_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED95' from this record model
        """
        return self.get_field_value(self.ED95__FIELD_NAME.field_name)

    def set_EntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EntryName' on this record model
        """
        self.set_field_value(self.ENTRYNAME__FIELD_NAME.field_name, value)

    def get_EntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EntryName' from this record model
        """
        return self.get_field_value(self.ENTRYNAME__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSquared' on this record model
        """
        self.set_field_value(self.RSQUARED__FIELD_NAME.field_name, value)

    def get_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSquared' from this record model
        """
        return self.get_field_value(self.RSQUARED__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SourceEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceEntryId' on this record model
        """
        self.set_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name, value)

    def get_SourceEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceEntryId' from this record model
        """
        return self.get_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FragmentAnalyzerResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FragmentAnalyzerResult
    Data Type Display Name: Fragment Analyzer Result (Fragment Analyzer Results)
    Fields: AvgBPSize, CreatedBy, DataRecordName, DateCreated, Molarity, MolarityUnits, PeakRegionIdentifier, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'FragmentAnalyzerResult'
    AVGBPSIZE__FIELD_NAME: WrapperField = WrapperField("AvgBPSize", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MOLARITY__FIELD_NAME: WrapperField = WrapperField("Molarity", FieldType.DOUBLE)
    MOLARITYUNITS__FIELD_NAME: WrapperField = WrapperField("MolarityUnits", FieldType.STRING)
    PEAKREGIONIDENTIFIER__FIELD_NAME: WrapperField = WrapperField("PeakRegionIdentifier", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBPSize' on this record model
        """
        self.set_field_value(self.AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_AvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBPSize' from this record model
        """
        return self.get_field_value(self.AVGBPSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_PeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_PeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HelmChemPropertyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HelmChemProperty
    Data Type Display Name: Helm Chem Property (Helm Chem Properties)
    Fields: Charge, cLogP, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, ExactMass, Formula, HasOrStereoGroup, inchi, InchiKey, MOL, MolecularWeight, PolarSurfaceArea, SMILES, StereoRegHash, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HelmChemProperty'
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HighThroughputScreeningDetailsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HighThroughputScreeningDetails
    Data Type Display Name: High Throughput Screening Details (High Throughput Screening Details)
    Fields: CreatedBy, DataRecordName, DateCreated, Humidity, Length, MultiParentLink159, MultiParentLink215, NumDaughterPlates, RPM, Temperature, TransferVolume, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HighThroughputScreeningDetails'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HUMIDITY__FIELD_NAME: WrapperField = WrapperField("Humidity", FieldType.DOUBLE)
    LENGTH__FIELD_NAME: WrapperField = WrapperField("Length", FieldType.DOUBLE)
    MULTIPARENTLINK159__FIELD_NAME: WrapperField = WrapperField("MultiParentLink159", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    NUMDAUGHTERPLATES__FIELD_NAME: WrapperField = WrapperField("NumDaughterPlates", FieldType.INTEGER)
    RPM__FIELD_NAME: WrapperField = WrapperField("RPM", FieldType.DOUBLE)
    TEMPERATURE__FIELD_NAME: WrapperField = WrapperField("Temperature", FieldType.DOUBLE)
    TRANSFERVOLUME__FIELD_NAME: WrapperField = WrapperField("TransferVolume", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Humidity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Humidity' on this record model
        """
        self.set_field_value(self.HUMIDITY__FIELD_NAME.field_name, value)

    def get_Humidity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Humidity' from this record model
        """
        return self.get_field_value(self.HUMIDITY__FIELD_NAME.field_name)

    def set_Length_field(self, value: Optional[float]):
        """
        Set data field with field name 'Length' on this record model
        """
        self.set_field_value(self.LENGTH__FIELD_NAME.field_name, value)

    def get_Length_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Length' from this record model
        """
        return self.get_field_value(self.LENGTH__FIELD_NAME.field_name)

    def set_NumDaughterPlates_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumDaughterPlates' on this record model
        """
        self.set_field_value(self.NUMDAUGHTERPLATES__FIELD_NAME.field_name, value)

    def get_NumDaughterPlates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumDaughterPlates' from this record model
        """
        return self.get_field_value(self.NUMDAUGHTERPLATES__FIELD_NAME.field_name)

    def set_RPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'RPM' on this record model
        """
        self.set_field_value(self.RPM__FIELD_NAME.field_name, value)

    def get_RPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RPM' from this record model
        """
        return self.get_field_value(self.RPM__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_TransferVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransferVolume' on this record model
        """
        self.set_field_value(self.TRANSFERVOLUME__FIELD_NAME.field_name, value)

    def get_TransferVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransferVolume' from this record model
        """
        return self.get_field_value(self.TRANSFERVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HiSeqFirstBaseReportModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HiSeqFirstBaseReport
    Data Type Display Name: HiSeq First Base Report (HiSeq First Base Reports)
    Fields: A_Focus_Score, A_Intensity, C_Focus_Score, C_Intensity, ClusterDensity, CreatedBy, DataRecordName, DateCreated, G_Focus_Score, G_Intensity, Lane, Surface, T_Focus_Score, T_Intensity, VeloxLastModifiedBy, VeloxLastModifiedDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'HiSeqFirstBaseReport'
    A_FOCUS_SCORE__FIELD_NAME: WrapperField = WrapperField("A_Focus_Score", FieldType.DOUBLE)
    A_INTENSITY__FIELD_NAME: WrapperField = WrapperField("A_Intensity", FieldType.DOUBLE)
    C_FOCUS_SCORE__FIELD_NAME: WrapperField = WrapperField("C_Focus_Score", FieldType.DOUBLE)
    C_INTENSITY__FIELD_NAME: WrapperField = WrapperField("C_Intensity", FieldType.DOUBLE)
    CLUSTERDENSITY__FIELD_NAME: WrapperField = WrapperField("ClusterDensity", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    G_FOCUS_SCORE__FIELD_NAME: WrapperField = WrapperField("G_Focus_Score", FieldType.DOUBLE)
    G_INTENSITY__FIELD_NAME: WrapperField = WrapperField("G_Intensity", FieldType.DOUBLE)
    LANE__FIELD_NAME: WrapperField = WrapperField("Lane", FieldType.STRING)
    SURFACE__FIELD_NAME: WrapperField = WrapperField("Surface", FieldType.STRING)
    T_FOCUS_SCORE__FIELD_NAME: WrapperField = WrapperField("T_Focus_Score", FieldType.DOUBLE)
    T_INTENSITY__FIELD_NAME: WrapperField = WrapperField("T_Intensity", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'A_Focus_Score' on this record model
        """
        self.set_field_value(self.A_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_A_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A_Focus_Score' from this record model
        """
        return self.get_field_value(self.A_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_A_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'A_Intensity' on this record model
        """
        self.set_field_value(self.A_INTENSITY__FIELD_NAME.field_name, value)

    def get_A_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A_Intensity' from this record model
        """
        return self.get_field_value(self.A_INTENSITY__FIELD_NAME.field_name)

    def set_C_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'C_Focus_Score' on this record model
        """
        self.set_field_value(self.C_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_C_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'C_Focus_Score' from this record model
        """
        return self.get_field_value(self.C_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_C_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'C_Intensity' on this record model
        """
        self.set_field_value(self.C_INTENSITY__FIELD_NAME.field_name, value)

    def get_C_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'C_Intensity' from this record model
        """
        return self.get_field_value(self.C_INTENSITY__FIELD_NAME.field_name)

    def set_ClusterDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterDensity' on this record model
        """
        self.set_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name, value)

    def get_ClusterDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterDensity' from this record model
        """
        return self.get_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_G_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'G_Focus_Score' on this record model
        """
        self.set_field_value(self.G_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_G_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'G_Focus_Score' from this record model
        """
        return self.get_field_value(self.G_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_G_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'G_Intensity' on this record model
        """
        self.set_field_value(self.G_INTENSITY__FIELD_NAME.field_name, value)

    def get_G_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'G_Intensity' from this record model
        """
        return self.get_field_value(self.G_INTENSITY__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[str]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_Surface_field(self, value: Optional[str]):
        """
        Set data field with field name 'Surface' on this record model
        """
        self.set_field_value(self.SURFACE__FIELD_NAME.field_name, value)

    def get_Surface_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Surface' from this record model
        """
        return self.get_field_value(self.SURFACE__FIELD_NAME.field_name)

    def set_T_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'T_Focus_Score' on this record model
        """
        self.set_field_value(self.T_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_T_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'T_Focus_Score' from this record model
        """
        return self.get_field_value(self.T_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_T_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'T_Intensity' on this record model
        """
        self.set_field_value(self.T_INTENSITY__FIELD_NAME.field_name, value)

    def get_T_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'T_Intensity' from this record model
        """
        return self.get_field_value(self.T_INTENSITY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyGroup
    Data Type Display Name: Histology Group (Histology Groups)
    Fields: CreatedBy, DataRecordName, DateCreated, DrugDosingDetails, GroupName, Histology_GroupComment, HistologyGroupID, Stain, StainRecordId, TmContainerType, TmDirection, TmSampleSubtype, TmSampleType, TmTimepoint, TreatmentDetails, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HistologyGroup'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DRUGDOSINGDETAILS__FIELD_NAME: WrapperField = WrapperField("DrugDosingDetails", FieldType.STRING)
    GROUPNAME__FIELD_NAME: WrapperField = WrapperField("GroupName", FieldType.STRING)
    HISTOLOGY_GROUPCOMMENT__FIELD_NAME: WrapperField = WrapperField("Histology_GroupComment", FieldType.STRING)
    HISTOLOGYGROUPID__FIELD_NAME: WrapperField = WrapperField("HistologyGroupID", FieldType.STRING)
    STAIN__FIELD_NAME: WrapperField = WrapperField("Stain", FieldType.SELECTION)
    STAINRECORDID__FIELD_NAME: WrapperField = WrapperField("StainRecordId", FieldType.LONG)
    TMCONTAINERTYPE__FIELD_NAME: WrapperField = WrapperField("TmContainerType", FieldType.STRING)
    TMDIRECTION__FIELD_NAME: WrapperField = WrapperField("TmDirection", FieldType.STRING)
    TMSAMPLESUBTYPE__FIELD_NAME: WrapperField = WrapperField("TmSampleSubtype", FieldType.STRING)
    TMSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("TmSampleType", FieldType.STRING)
    TMTIMEPOINT__FIELD_NAME: WrapperField = WrapperField("TmTimepoint", FieldType.STRING)
    TREATMENTDETAILS__FIELD_NAME: WrapperField = WrapperField("TreatmentDetails", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DrugDosingDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'DrugDosingDetails' on this record model
        """
        self.set_field_value(self.DRUGDOSINGDETAILS__FIELD_NAME.field_name, value)

    def get_DrugDosingDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DrugDosingDetails' from this record model
        """
        return self.get_field_value(self.DRUGDOSINGDETAILS__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_Histology_GroupComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'Histology_GroupComment' on this record model
        """
        self.set_field_value(self.HISTOLOGY_GROUPCOMMENT__FIELD_NAME.field_name, value)

    def get_Histology_GroupComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Histology_GroupComment' from this record model
        """
        return self.get_field_value(self.HISTOLOGY_GROUPCOMMENT__FIELD_NAME.field_name)

    def set_HistologyGroupID_field(self, value: Optional[str]):
        """
        Set data field with field name 'HistologyGroupID' on this record model
        """
        self.set_field_value(self.HISTOLOGYGROUPID__FIELD_NAME.field_name, value)

    def get_HistologyGroupID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HistologyGroupID' from this record model
        """
        return self.get_field_value(self.HISTOLOGYGROUPID__FIELD_NAME.field_name)

    def set_Stain_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain' on this record model
        """
        self.set_field_value(self.STAIN__FIELD_NAME.field_name, value)

    def get_Stain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain' from this record model
        """
        return self.get_field_value(self.STAIN__FIELD_NAME.field_name)

    def set_StainRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StainRecordId' on this record model
        """
        self.set_field_value(self.STAINRECORDID__FIELD_NAME.field_name, value)

    def get_StainRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StainRecordId' from this record model
        """
        return self.get_field_value(self.STAINRECORDID__FIELD_NAME.field_name)

    def set_TmContainerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmContainerType' on this record model
        """
        self.set_field_value(self.TMCONTAINERTYPE__FIELD_NAME.field_name, value)

    def get_TmContainerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmContainerType' from this record model
        """
        return self.get_field_value(self.TMCONTAINERTYPE__FIELD_NAME.field_name)

    def set_TmDirection_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmDirection' on this record model
        """
        self.set_field_value(self.TMDIRECTION__FIELD_NAME.field_name, value)

    def get_TmDirection_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmDirection' from this record model
        """
        return self.get_field_value(self.TMDIRECTION__FIELD_NAME.field_name)

    def set_TmSampleSubtype_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmSampleSubtype' on this record model
        """
        self.set_field_value(self.TMSAMPLESUBTYPE__FIELD_NAME.field_name, value)

    def get_TmSampleSubtype_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmSampleSubtype' from this record model
        """
        return self.get_field_value(self.TMSAMPLESUBTYPE__FIELD_NAME.field_name)

    def set_TmSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmSampleType' on this record model
        """
        self.set_field_value(self.TMSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_TmSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmSampleType' from this record model
        """
        return self.get_field_value(self.TMSAMPLETYPE__FIELD_NAME.field_name)

    def set_TmTimepoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmTimepoint' on this record model
        """
        self.set_field_value(self.TMTIMEPOINT__FIELD_NAME.field_name, value)

    def get_TmTimepoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmTimepoint' from this record model
        """
        return self.get_field_value(self.TMTIMEPOINT__FIELD_NAME.field_name)

    def set_TreatmentDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentDetails' on this record model
        """
        self.set_field_value(self.TREATMENTDETAILS__FIELD_NAME.field_name, value)

    def get_TreatmentDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentDetails' from this record model
        """
        return self.get_field_value(self.TREATMENTDETAILS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyProtocol1Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyProtocol1
    Data Type Display Name: Histology Protocol (Histology Protocols)
    Fields: CreatedBy, DataRecordName, DateCreated, GroupName, MultiParentLink215, NextUidNumberPerPrefix, RequestId, SampleId, SubjectId, SubjectNumber, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HistologyProtocol1'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GROUPNAME__FIELD_NAME: WrapperField = WrapperField("GroupName", FieldType.STRING)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    NEXTUIDNUMBERPERPREFIX__FIELD_NAME: WrapperField = WrapperField("NextUidNumberPerPrefix", FieldType.STRING)
    REQUESTID__FIELD_NAME: WrapperField = WrapperField("RequestId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SUBJECTID__FIELD_NAME: WrapperField = WrapperField("SubjectId", FieldType.STRING)
    SUBJECTNUMBER__FIELD_NAME: WrapperField = WrapperField("SubjectNumber", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_NextUidNumberPerPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'NextUidNumberPerPrefix' on this record model
        """
        self.set_field_value(self.NEXTUIDNUMBERPERPREFIX__FIELD_NAME.field_name, value)

    def get_NextUidNumberPerPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NextUidNumberPerPrefix' from this record model
        """
        return self.get_field_value(self.NEXTUIDNUMBERPERPREFIX__FIELD_NAME.field_name)

    def set_RequestId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestId' on this record model
        """
        self.set_field_value(self.REQUESTID__FIELD_NAME.field_name, value)

    def get_RequestId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestId' from this record model
        """
        return self.get_field_value(self.REQUESTID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SubjectId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectId' on this record model
        """
        self.set_field_value(self.SUBJECTID__FIELD_NAME.field_name, value)

    def get_SubjectId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectId' from this record model
        """
        return self.get_field_value(self.SUBJECTID__FIELD_NAME.field_name)

    def set_SubjectNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectNumber' on this record model
        """
        self.set_field_value(self.SUBJECTNUMBER__FIELD_NAME.field_name, value)

    def get_SubjectNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectNumber' from this record model
        """
        return self.get_field_value(self.SUBJECTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyProtocol2Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyProtocol2
    Data Type Display Name: Histology Protocol 2 (Histology Protocol 2s)
    Fields: CreatedBy, DataRecordName, DateCreated, SampleId, SlideId, SlidePosition, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HistologyProtocol2'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SLIDEID__FIELD_NAME: WrapperField = WrapperField("SlideId", FieldType.STRING)
    SLIDEPOSITION__FIELD_NAME: WrapperField = WrapperField("SlidePosition", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SlideId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideId' on this record model
        """
        self.set_field_value(self.SLIDEID__FIELD_NAME.field_name, value)

    def get_SlideId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideId' from this record model
        """
        return self.get_field_value(self.SLIDEID__FIELD_NAME.field_name)

    def set_SlidePosition_field(self, value: Optional[int]):
        """
        Set data field with field name 'SlidePosition' on this record model
        """
        self.set_field_value(self.SLIDEPOSITION__FIELD_NAME.field_name, value)

    def get_SlidePosition_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SlidePosition' from this record model
        """
        return self.get_field_value(self.SLIDEPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyProtocol3Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyProtocol3
    Data Type Display Name: Histology Protocol 3 (Histology Protocol 3s)
    Fields: AssignedSpecialStain, CreatedBy, DataRecordName, DateCreated, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HistologyProtocol3'
    ASSIGNEDSPECIALSTAIN__FIELD_NAME: WrapperField = WrapperField("AssignedSpecialStain", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedSpecialStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedSpecialStain' on this record model
        """
        self.set_field_value(self.ASSIGNEDSPECIALSTAIN__FIELD_NAME.field_name, value)

    def get_AssignedSpecialStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedSpecialStain' from this record model
        """
        return self.get_field_value(self.ASSIGNEDSPECIALSTAIN__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologySlideModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologySlide
    Data Type Display Name: Histology Slide (Histology Slide)
    Fields: AperioId, AperioImageId, AssignedDosage, AssignedGroups, AssignedStain, AssignedTissue, CreatedBy, DataRecordName, DateCreated, FileIdentifier, FilePath, GeneratedLayoutAssignedStain, GeneratedLayoutSlideId, MultiParentLink215, NumSections, ProtocolNumber, SampleGroupByFieldIds, SlideId, SlideIdClonedFrom, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HistologySlide'
    APERIOID__FIELD_NAME: WrapperField = WrapperField("AperioId", FieldType.STRING)
    APERIOIMAGEID__FIELD_NAME: WrapperField = WrapperField("AperioImageId", FieldType.STRING)
    ASSIGNEDDOSAGE__FIELD_NAME: WrapperField = WrapperField("AssignedDosage", FieldType.STRING)
    ASSIGNEDGROUPS__FIELD_NAME: WrapperField = WrapperField("AssignedGroups", FieldType.STRING)
    ASSIGNEDSTAIN__FIELD_NAME: WrapperField = WrapperField("AssignedStain", FieldType.STRING)
    ASSIGNEDTISSUE__FIELD_NAME: WrapperField = WrapperField("AssignedTissue", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEIDENTIFIER__FIELD_NAME: WrapperField = WrapperField("FileIdentifier", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    GENERATEDLAYOUTASSIGNEDSTAIN__FIELD_NAME: WrapperField = WrapperField("GeneratedLayoutAssignedStain", FieldType.STRING)
    GENERATEDLAYOUTSLIDEID__FIELD_NAME: WrapperField = WrapperField("GeneratedLayoutSlideId", FieldType.STRING)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    NUMSECTIONS__FIELD_NAME: WrapperField = WrapperField("NumSections", FieldType.INTEGER)
    PROTOCOLNUMBER__FIELD_NAME: WrapperField = WrapperField("ProtocolNumber", FieldType.STRING)
    SAMPLEGROUPBYFIELDIDS__FIELD_NAME: WrapperField = WrapperField("SampleGroupByFieldIds", FieldType.STRING)
    SLIDEID__FIELD_NAME: WrapperField = WrapperField("SlideId", FieldType.STRING)
    SLIDEIDCLONEDFROM__FIELD_NAME: WrapperField = WrapperField("SlideIdClonedFrom", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AperioId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AperioId' on this record model
        """
        self.set_field_value(self.APERIOID__FIELD_NAME.field_name, value)

    def get_AperioId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AperioId' from this record model
        """
        return self.get_field_value(self.APERIOID__FIELD_NAME.field_name)

    def set_AperioImageId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AperioImageId' on this record model
        """
        self.set_field_value(self.APERIOIMAGEID__FIELD_NAME.field_name, value)

    def get_AperioImageId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AperioImageId' from this record model
        """
        return self.get_field_value(self.APERIOIMAGEID__FIELD_NAME.field_name)

    def set_AssignedDosage_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedDosage' on this record model
        """
        self.set_field_value(self.ASSIGNEDDOSAGE__FIELD_NAME.field_name, value)

    def get_AssignedDosage_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedDosage' from this record model
        """
        return self.get_field_value(self.ASSIGNEDDOSAGE__FIELD_NAME.field_name)

    def set_AssignedGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedGroups' on this record model
        """
        self.set_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name, value)

    def get_AssignedGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedGroups' from this record model
        """
        return self.get_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name)

    def set_AssignedStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedStain' on this record model
        """
        self.set_field_value(self.ASSIGNEDSTAIN__FIELD_NAME.field_name, value)

    def get_AssignedStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedStain' from this record model
        """
        return self.get_field_value(self.ASSIGNEDSTAIN__FIELD_NAME.field_name)

    def set_AssignedTissue_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedTissue' on this record model
        """
        self.set_field_value(self.ASSIGNEDTISSUE__FIELD_NAME.field_name, value)

    def get_AssignedTissue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedTissue' from this record model
        """
        return self.get_field_value(self.ASSIGNEDTISSUE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileIdentifier' on this record model
        """
        self.set_field_value(self.FILEIDENTIFIER__FIELD_NAME.field_name, value)

    def get_FileIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileIdentifier' from this record model
        """
        return self.get_field_value(self.FILEIDENTIFIER__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GeneratedLayoutAssignedStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneratedLayoutAssignedStain' on this record model
        """
        self.set_field_value(self.GENERATEDLAYOUTASSIGNEDSTAIN__FIELD_NAME.field_name, value)

    def get_GeneratedLayoutAssignedStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneratedLayoutAssignedStain' from this record model
        """
        return self.get_field_value(self.GENERATEDLAYOUTASSIGNEDSTAIN__FIELD_NAME.field_name)

    def set_GeneratedLayoutSlideId_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneratedLayoutSlideId' on this record model
        """
        self.set_field_value(self.GENERATEDLAYOUTSLIDEID__FIELD_NAME.field_name, value)

    def get_GeneratedLayoutSlideId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneratedLayoutSlideId' from this record model
        """
        return self.get_field_value(self.GENERATEDLAYOUTSLIDEID__FIELD_NAME.field_name)

    def set_NumSections_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumSections' on this record model
        """
        self.set_field_value(self.NUMSECTIONS__FIELD_NAME.field_name, value)

    def get_NumSections_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumSections' from this record model
        """
        return self.get_field_value(self.NUMSECTIONS__FIELD_NAME.field_name)

    def set_ProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProtocolNumber' on this record model
        """
        self.set_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_ProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProtocolNumber' from this record model
        """
        return self.get_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name)

    def set_SampleGroupByFieldIds_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleGroupByFieldIds' on this record model
        """
        self.set_field_value(self.SAMPLEGROUPBYFIELDIDS__FIELD_NAME.field_name, value)

    def get_SampleGroupByFieldIds_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleGroupByFieldIds' from this record model
        """
        return self.get_field_value(self.SAMPLEGROUPBYFIELDIDS__FIELD_NAME.field_name)

    def set_SlideId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideId' on this record model
        """
        self.set_field_value(self.SLIDEID__FIELD_NAME.field_name, value)

    def get_SlideId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideId' from this record model
        """
        return self.get_field_value(self.SLIDEID__FIELD_NAME.field_name)

    def set_SlideIdClonedFrom_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideIdClonedFrom' on this record model
        """
        self.set_field_value(self.SLIDEIDCLONEDFROM__FIELD_NAME.field_name, value)

    def get_SlideIdClonedFrom_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideIdClonedFrom' from this record model
        """
        return self.get_field_value(self.SLIDEIDCLONEDFROM__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HPLCDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HPLCDetail
    Data Type Display Name: HPLC Detail (HPLC Details)
    Fields: CreatedBy, DataRecordName, DateCreated, HPLCHigh, HPLCLow, HPLCValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'HPLCDetail'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HPLCHIGH__FIELD_NAME: WrapperField = WrapperField("HPLCHigh", FieldType.DOUBLE)
    HPLCLOW__FIELD_NAME: WrapperField = WrapperField("HPLCLow", FieldType.DOUBLE)
    HPLCVALUE__FIELD_NAME: WrapperField = WrapperField("HPLCValue", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HPLCHigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'HPLCHigh' on this record model
        """
        self.set_field_value(self.HPLCHIGH__FIELD_NAME.field_name, value)

    def get_HPLCHigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HPLCHigh' from this record model
        """
        return self.get_field_value(self.HPLCHIGH__FIELD_NAME.field_name)

    def set_HPLCLow_field(self, value: Optional[float]):
        """
        Set data field with field name 'HPLCLow' on this record model
        """
        self.set_field_value(self.HPLCLOW__FIELD_NAME.field_name, value)

    def get_HPLCLow_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HPLCLow' from this record model
        """
        return self.get_field_value(self.HPLCLOW__FIELD_NAME.field_name)

    def set_HPLCValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'HPLCValue' on this record model
        """
        self.set_field_value(self.HPLCVALUE__FIELD_NAME.field_name, value)

    def get_HPLCValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HPLCValue' from this record model
        """
        return self.get_field_value(self.HPLCVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IGBlastNGermlineModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IGBlastNGermline
    Data Type Display Name: igBlastN Germline (igBlastN Germlines)
    Fields: AuxFileName, CreatedBy, DataRecordName, DateCreated, DFileName, FilePath, GermlineName, JFileName, Organism, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate, VFileName
    An attachment of germline file used for IGBlastN.
    """
    DATA_TYPE_NAME: str = 'IGBlastNGermline'
    AUXFILENAME__FIELD_NAME: WrapperField = WrapperField("AuxFileName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DFILENAME__FIELD_NAME: WrapperField = WrapperField("DFileName", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    GERMLINENAME__FIELD_NAME: WrapperField = WrapperField("GermlineName", FieldType.STRING)
    JFILENAME__FIELD_NAME: WrapperField = WrapperField("JFileName", FieldType.STRING)
    ORGANISM__FIELD_NAME: WrapperField = WrapperField("Organism", FieldType.PICKLIST)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VFILENAME__FIELD_NAME: WrapperField = WrapperField("VFileName", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AuxFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AuxFileName' on this record model
        """
        self.set_field_value(self.AUXFILENAME__FIELD_NAME.field_name, value)

    def get_AuxFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AuxFileName' from this record model
        """
        return self.get_field_value(self.AUXFILENAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DFileName' on this record model
        """
        self.set_field_value(self.DFILENAME__FIELD_NAME.field_name, value)

    def get_DFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DFileName' from this record model
        """
        return self.get_field_value(self.DFILENAME__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GermlineName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineName' on this record model
        """
        self.set_field_value(self.GERMLINENAME__FIELD_NAME.field_name, value)

    def get_GermlineName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineName' from this record model
        """
        return self.get_field_value(self.GERMLINENAME__FIELD_NAME.field_name)

    def set_JFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'JFileName' on this record model
        """
        self.set_field_value(self.JFILENAME__FIELD_NAME.field_name, value)

    def get_JFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'JFileName' from this record model
        """
        return self.get_field_value(self.JFILENAME__FIELD_NAME.field_name)

    def set_Organism_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organism' on this record model
        """
        self.set_field_value(self.ORGANISM__FIELD_NAME.field_name, value)

    def get_Organism_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organism' from this record model
        """
        return self.get_field_value(self.ORGANISM__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'VFileName' on this record model
        """
        self.set_field_value(self.VFILENAME__FIELD_NAME.field_name, value)

    def get_VFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VFileName' from this record model
        """
        return self.get_field_value(self.VFILENAME__FIELD_NAME.field_name)


class IGBlastNResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IGBlastNResult
    Data Type Display Name: igBlastN Result (igBlastN Results)
    Fields: CDR3UND, CDRTranslation, CreatedBy, CysNotTwo, DataRecordName, DateCreated, FilePath, FR4_Res1_NoTrp, FR4Res1NoPhe, germline, GermlineAllD, GermlineAllJ, GermlineAllV, NGlycosilationsites, NonProductive, NumCDRHistidine, NumCDRLysine, Siblings, StopCodons, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IGBlastNResult'
    CDR3UND__FIELD_NAME: WrapperField = WrapperField("CDR3UND", FieldType.BOOLEAN)
    CDRTRANSLATION__FIELD_NAME: WrapperField = WrapperField("CDRTranslation", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CYSNOTTWO__FIELD_NAME: WrapperField = WrapperField("CysNotTwo", FieldType.BOOLEAN)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    FR4_RES1_NOTRP__FIELD_NAME: WrapperField = WrapperField("FR4_Res1_NoTrp", FieldType.BOOLEAN)
    FR4RES1NOPHE__FIELD_NAME: WrapperField = WrapperField("FR4Res1NoPhe", FieldType.BOOLEAN)
    GERMLINE__FIELD_NAME: WrapperField = WrapperField("germline", FieldType.STRING)
    GERMLINEALLD__FIELD_NAME: WrapperField = WrapperField("GermlineAllD", FieldType.STRING)
    GERMLINEALLJ__FIELD_NAME: WrapperField = WrapperField("GermlineAllJ", FieldType.STRING)
    GERMLINEALLV__FIELD_NAME: WrapperField = WrapperField("GermlineAllV", FieldType.STRING)
    NGLYCOSILATIONSITES__FIELD_NAME: WrapperField = WrapperField("NGlycosilationsites", FieldType.BOOLEAN)
    NONPRODUCTIVE__FIELD_NAME: WrapperField = WrapperField("NonProductive", FieldType.BOOLEAN)
    NUMCDRHISTIDINE__FIELD_NAME: WrapperField = WrapperField("NumCDRHistidine", FieldType.INTEGER)
    NUMCDRLYSINE__FIELD_NAME: WrapperField = WrapperField("NumCDRLysine", FieldType.INTEGER)
    SIBLINGS__FIELD_NAME: WrapperField = WrapperField("Siblings", FieldType.BOOLEAN)
    STOPCODONS__FIELD_NAME: WrapperField = WrapperField("StopCodons", FieldType.BOOLEAN)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CDR3UND_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CDR3UND' on this record model
        """
        self.set_field_value(self.CDR3UND__FIELD_NAME.field_name, value)

    def get_CDR3UND_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CDR3UND' from this record model
        """
        return self.get_field_value(self.CDR3UND__FIELD_NAME.field_name)

    def set_CDRTranslation_field(self, value: Optional[str]):
        """
        Set data field with field name 'CDRTranslation' on this record model
        """
        self.set_field_value(self.CDRTRANSLATION__FIELD_NAME.field_name, value)

    def get_CDRTranslation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CDRTranslation' from this record model
        """
        return self.get_field_value(self.CDRTRANSLATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CysNotTwo_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CysNotTwo' on this record model
        """
        self.set_field_value(self.CYSNOTTWO__FIELD_NAME.field_name, value)

    def get_CysNotTwo_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CysNotTwo' from this record model
        """
        return self.get_field_value(self.CYSNOTTWO__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_FR4_Res1_NoTrp_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FR4_Res1_NoTrp' on this record model
        """
        self.set_field_value(self.FR4_RES1_NOTRP__FIELD_NAME.field_name, value)

    def get_FR4_Res1_NoTrp_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FR4_Res1_NoTrp' from this record model
        """
        return self.get_field_value(self.FR4_RES1_NOTRP__FIELD_NAME.field_name)

    def set_FR4Res1NoPhe_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FR4Res1NoPhe' on this record model
        """
        self.set_field_value(self.FR4RES1NOPHE__FIELD_NAME.field_name, value)

    def get_FR4Res1NoPhe_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FR4Res1NoPhe' from this record model
        """
        return self.get_field_value(self.FR4RES1NOPHE__FIELD_NAME.field_name)

    def set_germline_field(self, value: Optional[str]):
        """
        Set data field with field name 'germline' on this record model
        """
        self.set_field_value(self.GERMLINE__FIELD_NAME.field_name, value)

    def get_germline_field(self) -> Optional[str]:
        """
        Get data field value with field name 'germline' from this record model
        """
        return self.get_field_value(self.GERMLINE__FIELD_NAME.field_name)

    def set_GermlineAllD_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineAllD' on this record model
        """
        self.set_field_value(self.GERMLINEALLD__FIELD_NAME.field_name, value)

    def get_GermlineAllD_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineAllD' from this record model
        """
        return self.get_field_value(self.GERMLINEALLD__FIELD_NAME.field_name)

    def set_GermlineAllJ_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineAllJ' on this record model
        """
        self.set_field_value(self.GERMLINEALLJ__FIELD_NAME.field_name, value)

    def get_GermlineAllJ_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineAllJ' from this record model
        """
        return self.get_field_value(self.GERMLINEALLJ__FIELD_NAME.field_name)

    def set_GermlineAllV_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineAllV' on this record model
        """
        self.set_field_value(self.GERMLINEALLV__FIELD_NAME.field_name, value)

    def get_GermlineAllV_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineAllV' from this record model
        """
        return self.get_field_value(self.GERMLINEALLV__FIELD_NAME.field_name)

    def set_NGlycosilationsites_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NGlycosilationsites' on this record model
        """
        self.set_field_value(self.NGLYCOSILATIONSITES__FIELD_NAME.field_name, value)

    def get_NGlycosilationsites_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NGlycosilationsites' from this record model
        """
        return self.get_field_value(self.NGLYCOSILATIONSITES__FIELD_NAME.field_name)

    def set_NonProductive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NonProductive' on this record model
        """
        self.set_field_value(self.NONPRODUCTIVE__FIELD_NAME.field_name, value)

    def get_NonProductive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NonProductive' from this record model
        """
        return self.get_field_value(self.NONPRODUCTIVE__FIELD_NAME.field_name)

    def set_NumCDRHistidine_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumCDRHistidine' on this record model
        """
        self.set_field_value(self.NUMCDRHISTIDINE__FIELD_NAME.field_name, value)

    def get_NumCDRHistidine_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumCDRHistidine' from this record model
        """
        return self.get_field_value(self.NUMCDRHISTIDINE__FIELD_NAME.field_name)

    def set_NumCDRLysine_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumCDRLysine' on this record model
        """
        self.set_field_value(self.NUMCDRLYSINE__FIELD_NAME.field_name, value)

    def get_NumCDRLysine_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumCDRLysine' from this record model
        """
        return self.get_field_value(self.NUMCDRLYSINE__FIELD_NAME.field_name)

    def set_Siblings_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Siblings' on this record model
        """
        self.set_field_value(self.SIBLINGS__FIELD_NAME.field_name, value)

    def get_Siblings_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Siblings' from this record model
        """
        return self.get_field_value(self.SIBLINGS__FIELD_NAME.field_name)

    def set_StopCodons_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StopCodons' on this record model
        """
        self.set_field_value(self.STOPCODONS__FIELD_NAME.field_name, value)

    def get_StopCodons_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StopCodons' from this record model
        """
        return self.get_field_value(self.STOPCODONS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IllSeqReadModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IllSeqRead
    Data Type Display Name: Illumina Sequencing Read (Illumina Sequencing Reads)
    Fields: CreatedBy, DataRecordName, DateCreated, IsIndexedRead, NumCycles, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IllSeqRead'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISINDEXEDREAD__FIELD_NAME: WrapperField = WrapperField("IsIndexedRead", FieldType.BOOLEAN)
    NUMCYCLES__FIELD_NAME: WrapperField = WrapperField("NumCycles", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsIndexedRead_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsIndexedRead' on this record model
        """
        self.set_field_value(self.ISINDEXEDREAD__FIELD_NAME.field_name, value)

    def get_IsIndexedRead_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsIndexedRead' from this record model
        """
        return self.get_field_value(self.ISINDEXEDREAD__FIELD_NAME.field_name)

    def set_NumCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumCycles' on this record model
        """
        self.set_field_value(self.NUMCYCLES__FIELD_NAME.field_name, value)

    def get_NumCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumCycles' from this record model
        """
        return self.get_field_value(self.NUMCYCLES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaHiSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaHiSeqRunParameters
    Data Type Display Name: Illumina HiSeq Run Parameters (Illumina HiSeq Run Parameters')
    Fields: AdapterPlate, AlignToPhiXLane, ApplicationName, ApplicationVersion, AutoTiltOnce, Barcode, BaseSpaceRunId, BaseSpaceRunMonitoringOnly, BaseSpaceTempFolder, BaseSpaceUseBaseSpace, BaseSpaceUsername, CameraDriver, CameraFirmware, CanEditRunMode, ChemistryVersion, ComputerName, ControlLane, CopyImages, CPLDVersion, CreatedBy, CVGainPosLocked, CVGainStart, DataRecordName, DateCreated, DitherSize, EnableAnalysis, EnableAutoCenter, EnableBasecalling, EnableCameraLogging, EnableLft, EnableNotifications, ExperimentName, FCPosition, FirstBaseConfirmation, Flowcell, FocusCameraFirmware, FocusMethod, FPGAVersion, HotPixel, IGain, IHistory, ImageHeight, ImageWidth, IndexQuantity, IndexRead, IndexSerialNumber, IntensityCeiling, IsNew50Cycle, IsNew200Cycle, KeepIntensityFiles, LaneLength, MaxInitialZJumpHalfUm, MaxSubsequentZJumpHalfUm, MockRun, MotorDelayFrames, NumAnalysisThreads, NumberCyclesRemaining, NumberOfInitialZJumps, NumSwaths, NumTilesPerSwath, Offset, OutputFolder, PeQuantity, PerformPreRunFluidicsCheck, PeriodicSave, PeSerialNumber, Prime, PromptForPeReagents, Read1, Read2, RecipeFragmentVersion, Rehyb, Resume, ResumeCycle, RTAVersion, RunID, RunMode, RunStartDate, SampleSheet, SbsQuantity, SbsSerialNumber, ScanID, ScannerID, ScanNumber, SelectedSection_1, SelectedSection_2, SelectedSection_3, SelectedSection_4, SelectedSection_5, SelectedSection_6, SelectedSection_7, SelectedSection_8, SelectedSurface, SlideHolder, SupportMultipleSurfacesInUI, SwathScanMode, TempFolder, TemplateCycleCount, TileHeight, TileWidth, UseExistingRecipe, Username, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkFlowType
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IlluminaHiSeqRunParameters'
    ADAPTERPLATE__FIELD_NAME: WrapperField = WrapperField("AdapterPlate", FieldType.STRING)
    ALIGNTOPHIXLANE__FIELD_NAME: WrapperField = WrapperField("AlignToPhiXLane", FieldType.STRING)
    APPLICATIONNAME__FIELD_NAME: WrapperField = WrapperField("ApplicationName", FieldType.STRING)
    APPLICATIONVERSION__FIELD_NAME: WrapperField = WrapperField("ApplicationVersion", FieldType.STRING)
    AUTOTILTONCE__FIELD_NAME: WrapperField = WrapperField("AutoTiltOnce", FieldType.BOOLEAN)
    BARCODE__FIELD_NAME: WrapperField = WrapperField("Barcode", FieldType.STRING)
    BASESPACERUNID__FIELD_NAME: WrapperField = WrapperField("BaseSpaceRunId", FieldType.STRING)
    BASESPACERUNMONITORINGONLY__FIELD_NAME: WrapperField = WrapperField("BaseSpaceRunMonitoringOnly", FieldType.BOOLEAN)
    BASESPACETEMPFOLDER__FIELD_NAME: WrapperField = WrapperField("BaseSpaceTempFolder", FieldType.STRING)
    BASESPACEUSEBASESPACE__FIELD_NAME: WrapperField = WrapperField("BaseSpaceUseBaseSpace", FieldType.BOOLEAN)
    BASESPACEUSERNAME__FIELD_NAME: WrapperField = WrapperField("BaseSpaceUsername", FieldType.STRING)
    CAMERADRIVER__FIELD_NAME: WrapperField = WrapperField("CameraDriver", FieldType.STRING)
    CAMERAFIRMWARE__FIELD_NAME: WrapperField = WrapperField("CameraFirmware", FieldType.STRING)
    CANEDITRUNMODE__FIELD_NAME: WrapperField = WrapperField("CanEditRunMode", FieldType.BOOLEAN)
    CHEMISTRYVERSION__FIELD_NAME: WrapperField = WrapperField("ChemistryVersion", FieldType.STRING)
    COMPUTERNAME__FIELD_NAME: WrapperField = WrapperField("ComputerName", FieldType.STRING)
    CONTROLLANE__FIELD_NAME: WrapperField = WrapperField("ControlLane", FieldType.STRING)
    COPYIMAGES__FIELD_NAME: WrapperField = WrapperField("CopyImages", FieldType.BOOLEAN)
    CPLDVERSION__FIELD_NAME: WrapperField = WrapperField("CPLDVersion", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CVGAINPOSLOCKED__FIELD_NAME: WrapperField = WrapperField("CVGainPosLocked", FieldType.STRING)
    CVGAINSTART__FIELD_NAME: WrapperField = WrapperField("CVGainStart", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DITHERSIZE__FIELD_NAME: WrapperField = WrapperField("DitherSize", FieldType.STRING)
    ENABLEANALYSIS__FIELD_NAME: WrapperField = WrapperField("EnableAnalysis", FieldType.BOOLEAN)
    ENABLEAUTOCENTER__FIELD_NAME: WrapperField = WrapperField("EnableAutoCenter", FieldType.BOOLEAN)
    ENABLEBASECALLING__FIELD_NAME: WrapperField = WrapperField("EnableBasecalling", FieldType.BOOLEAN)
    ENABLECAMERALOGGING__FIELD_NAME: WrapperField = WrapperField("EnableCameraLogging", FieldType.BOOLEAN)
    ENABLELFT__FIELD_NAME: WrapperField = WrapperField("EnableLft", FieldType.BOOLEAN)
    ENABLENOTIFICATIONS__FIELD_NAME: WrapperField = WrapperField("EnableNotifications", FieldType.BOOLEAN)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FCPOSITION__FIELD_NAME: WrapperField = WrapperField("FCPosition", FieldType.STRING)
    FIRSTBASECONFIRMATION__FIELD_NAME: WrapperField = WrapperField("FirstBaseConfirmation", FieldType.STRING)
    FLOWCELL__FIELD_NAME: WrapperField = WrapperField("Flowcell", FieldType.STRING)
    FOCUSCAMERAFIRMWARE__FIELD_NAME: WrapperField = WrapperField("FocusCameraFirmware", FieldType.STRING)
    FOCUSMETHOD__FIELD_NAME: WrapperField = WrapperField("FocusMethod", FieldType.STRING)
    FPGAVERSION__FIELD_NAME: WrapperField = WrapperField("FPGAVersion", FieldType.STRING)
    HOTPIXEL__FIELD_NAME: WrapperField = WrapperField("HotPixel", FieldType.STRING)
    IGAIN__FIELD_NAME: WrapperField = WrapperField("IGain", FieldType.STRING)
    IHISTORY__FIELD_NAME: WrapperField = WrapperField("IHistory", FieldType.STRING)
    IMAGEHEIGHT__FIELD_NAME: WrapperField = WrapperField("ImageHeight", FieldType.STRING)
    IMAGEWIDTH__FIELD_NAME: WrapperField = WrapperField("ImageWidth", FieldType.STRING)
    INDEXQUANTITY__FIELD_NAME: WrapperField = WrapperField("IndexQuantity", FieldType.DOUBLE)
    INDEXREAD__FIELD_NAME: WrapperField = WrapperField("IndexRead", FieldType.STRING)
    INDEXSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("IndexSerialNumber", FieldType.SELECTION)
    INTENSITYCEILING__FIELD_NAME: WrapperField = WrapperField("IntensityCeiling", FieldType.STRING)
    ISNEW50CYCLE__FIELD_NAME: WrapperField = WrapperField("IsNew50Cycle", FieldType.BOOLEAN)
    ISNEW200CYCLE__FIELD_NAME: WrapperField = WrapperField("IsNew200Cycle", FieldType.BOOLEAN)
    KEEPINTENSITYFILES__FIELD_NAME: WrapperField = WrapperField("KeepIntensityFiles", FieldType.STRING)
    LANELENGTH__FIELD_NAME: WrapperField = WrapperField("LaneLength", FieldType.STRING)
    MAXINITIALZJUMPHALFUM__FIELD_NAME: WrapperField = WrapperField("MaxInitialZJumpHalfUm", FieldType.STRING)
    MAXSUBSEQUENTZJUMPHALFUM__FIELD_NAME: WrapperField = WrapperField("MaxSubsequentZJumpHalfUm", FieldType.STRING)
    MOCKRUN__FIELD_NAME: WrapperField = WrapperField("MockRun", FieldType.BOOLEAN)
    MOTORDELAYFRAMES__FIELD_NAME: WrapperField = WrapperField("MotorDelayFrames", FieldType.STRING)
    NUMANALYSISTHREADS__FIELD_NAME: WrapperField = WrapperField("NumAnalysisThreads", FieldType.STRING)
    NUMBERCYCLESREMAINING__FIELD_NAME: WrapperField = WrapperField("NumberCyclesRemaining", FieldType.LONG)
    NUMBEROFINITIALZJUMPS__FIELD_NAME: WrapperField = WrapperField("NumberOfInitialZJumps", FieldType.STRING)
    NUMSWATHS__FIELD_NAME: WrapperField = WrapperField("NumSwaths", FieldType.STRING)
    NUMTILESPERSWATH__FIELD_NAME: WrapperField = WrapperField("NumTilesPerSwath", FieldType.STRING)
    OFFSET__FIELD_NAME: WrapperField = WrapperField("Offset", FieldType.STRING)
    OUTPUTFOLDER__FIELD_NAME: WrapperField = WrapperField("OutputFolder", FieldType.STRING)
    PEQUANTITY__FIELD_NAME: WrapperField = WrapperField("PeQuantity", FieldType.DOUBLE)
    PERFORMPRERUNFLUIDICSCHECK__FIELD_NAME: WrapperField = WrapperField("PerformPreRunFluidicsCheck", FieldType.BOOLEAN)
    PERIODICSAVE__FIELD_NAME: WrapperField = WrapperField("PeriodicSave", FieldType.STRING)
    PESERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("PeSerialNumber", FieldType.SELECTION)
    PRIME__FIELD_NAME: WrapperField = WrapperField("Prime", FieldType.BOOLEAN)
    PROMPTFORPEREAGENTS__FIELD_NAME: WrapperField = WrapperField("PromptForPeReagents", FieldType.BOOLEAN)
    READ1__FIELD_NAME: WrapperField = WrapperField("Read1", FieldType.STRING)
    READ2__FIELD_NAME: WrapperField = WrapperField("Read2", FieldType.STRING)
    RECIPEFRAGMENTVERSION__FIELD_NAME: WrapperField = WrapperField("RecipeFragmentVersion", FieldType.STRING)
    REHYB__FIELD_NAME: WrapperField = WrapperField("Rehyb", FieldType.STRING)
    RESUME__FIELD_NAME: WrapperField = WrapperField("Resume", FieldType.BOOLEAN)
    RESUMECYCLE__FIELD_NAME: WrapperField = WrapperField("ResumeCycle", FieldType.STRING)
    RTAVERSION__FIELD_NAME: WrapperField = WrapperField("RTAVersion", FieldType.STRING)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunID", FieldType.STRING)
    RUNMODE__FIELD_NAME: WrapperField = WrapperField("RunMode", FieldType.STRING)
    RUNSTARTDATE__FIELD_NAME: WrapperField = WrapperField("RunStartDate", FieldType.DATE)
    SAMPLESHEET__FIELD_NAME: WrapperField = WrapperField("SampleSheet", FieldType.STRING)
    SBSQUANTITY__FIELD_NAME: WrapperField = WrapperField("SbsQuantity", FieldType.DOUBLE)
    SBSSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("SbsSerialNumber", FieldType.SELECTION)
    SCANID__FIELD_NAME: WrapperField = WrapperField("ScanID", FieldType.STRING)
    SCANNERID__FIELD_NAME: WrapperField = WrapperField("ScannerID", FieldType.STRING)
    SCANNUMBER__FIELD_NAME: WrapperField = WrapperField("ScanNumber", FieldType.LONG)
    SELECTEDSECTION_1__FIELD_NAME: WrapperField = WrapperField("SelectedSection_1", FieldType.STRING)
    SELECTEDSECTION_2__FIELD_NAME: WrapperField = WrapperField("SelectedSection_2", FieldType.STRING)
    SELECTEDSECTION_3__FIELD_NAME: WrapperField = WrapperField("SelectedSection_3", FieldType.STRING)
    SELECTEDSECTION_4__FIELD_NAME: WrapperField = WrapperField("SelectedSection_4", FieldType.STRING)
    SELECTEDSECTION_5__FIELD_NAME: WrapperField = WrapperField("SelectedSection_5", FieldType.STRING)
    SELECTEDSECTION_6__FIELD_NAME: WrapperField = WrapperField("SelectedSection_6", FieldType.STRING)
    SELECTEDSECTION_7__FIELD_NAME: WrapperField = WrapperField("SelectedSection_7", FieldType.STRING)
    SELECTEDSECTION_8__FIELD_NAME: WrapperField = WrapperField("SelectedSection_8", FieldType.STRING)
    SELECTEDSURFACE__FIELD_NAME: WrapperField = WrapperField("SelectedSurface", FieldType.STRING)
    SLIDEHOLDER__FIELD_NAME: WrapperField = WrapperField("SlideHolder", FieldType.STRING)
    SUPPORTMULTIPLESURFACESINUI__FIELD_NAME: WrapperField = WrapperField("SupportMultipleSurfacesInUI", FieldType.BOOLEAN)
    SWATHSCANMODE__FIELD_NAME: WrapperField = WrapperField("SwathScanMode", FieldType.STRING)
    TEMPFOLDER__FIELD_NAME: WrapperField = WrapperField("TempFolder", FieldType.STRING)
    TEMPLATECYCLECOUNT__FIELD_NAME: WrapperField = WrapperField("TemplateCycleCount", FieldType.STRING)
    TILEHEIGHT__FIELD_NAME: WrapperField = WrapperField("TileHeight", FieldType.STRING)
    TILEWIDTH__FIELD_NAME: WrapperField = WrapperField("TileWidth", FieldType.STRING)
    USEEXISTINGRECIPE__FIELD_NAME: WrapperField = WrapperField("UseExistingRecipe", FieldType.BOOLEAN)
    USERNAME__FIELD_NAME: WrapperField = WrapperField("Username", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWTYPE__FIELD_NAME: WrapperField = WrapperField("WorkFlowType", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AdapterPlate_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterPlate' on this record model
        """
        self.set_field_value(self.ADAPTERPLATE__FIELD_NAME.field_name, value)

    def get_AdapterPlate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterPlate' from this record model
        """
        return self.get_field_value(self.ADAPTERPLATE__FIELD_NAME.field_name)

    def set_AlignToPhiXLane_field(self, value: Optional[str]):
        """
        Set data field with field name 'AlignToPhiXLane' on this record model
        """
        self.set_field_value(self.ALIGNTOPHIXLANE__FIELD_NAME.field_name, value)

    def get_AlignToPhiXLane_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AlignToPhiXLane' from this record model
        """
        return self.get_field_value(self.ALIGNTOPHIXLANE__FIELD_NAME.field_name)

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_AutoTiltOnce_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AutoTiltOnce' on this record model
        """
        self.set_field_value(self.AUTOTILTONCE__FIELD_NAME.field_name, value)

    def get_AutoTiltOnce_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AutoTiltOnce' from this record model
        """
        return self.get_field_value(self.AUTOTILTONCE__FIELD_NAME.field_name)

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_BaseSpaceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunId' on this record model
        """
        self.set_field_value(self.BASESPACERUNID__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunId' from this record model
        """
        return self.get_field_value(self.BASESPACERUNID__FIELD_NAME.field_name)

    def set_BaseSpaceRunMonitoringOnly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BaseSpaceRunMonitoringOnly' on this record model
        """
        self.set_field_value(self.BASESPACERUNMONITORINGONLY__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunMonitoringOnly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BaseSpaceRunMonitoringOnly' from this record model
        """
        return self.get_field_value(self.BASESPACERUNMONITORINGONLY__FIELD_NAME.field_name)

    def set_BaseSpaceTempFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceTempFolder' on this record model
        """
        self.set_field_value(self.BASESPACETEMPFOLDER__FIELD_NAME.field_name, value)

    def get_BaseSpaceTempFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceTempFolder' from this record model
        """
        return self.get_field_value(self.BASESPACETEMPFOLDER__FIELD_NAME.field_name)

    def set_BaseSpaceUseBaseSpace_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BaseSpaceUseBaseSpace' on this record model
        """
        self.set_field_value(self.BASESPACEUSEBASESPACE__FIELD_NAME.field_name, value)

    def get_BaseSpaceUseBaseSpace_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BaseSpaceUseBaseSpace' from this record model
        """
        return self.get_field_value(self.BASESPACEUSEBASESPACE__FIELD_NAME.field_name)

    def set_BaseSpaceUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceUsername' on this record model
        """
        self.set_field_value(self.BASESPACEUSERNAME__FIELD_NAME.field_name, value)

    def get_BaseSpaceUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceUsername' from this record model
        """
        return self.get_field_value(self.BASESPACEUSERNAME__FIELD_NAME.field_name)

    def set_CameraDriver_field(self, value: Optional[str]):
        """
        Set data field with field name 'CameraDriver' on this record model
        """
        self.set_field_value(self.CAMERADRIVER__FIELD_NAME.field_name, value)

    def get_CameraDriver_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CameraDriver' from this record model
        """
        return self.get_field_value(self.CAMERADRIVER__FIELD_NAME.field_name)

    def set_CameraFirmware_field(self, value: Optional[str]):
        """
        Set data field with field name 'CameraFirmware' on this record model
        """
        self.set_field_value(self.CAMERAFIRMWARE__FIELD_NAME.field_name, value)

    def get_CameraFirmware_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CameraFirmware' from this record model
        """
        return self.get_field_value(self.CAMERAFIRMWARE__FIELD_NAME.field_name)

    def set_CanEditRunMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanEditRunMode' on this record model
        """
        self.set_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name, value)

    def get_CanEditRunMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanEditRunMode' from this record model
        """
        return self.get_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name)

    def set_ChemistryVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemistryVersion' on this record model
        """
        self.set_field_value(self.CHEMISTRYVERSION__FIELD_NAME.field_name, value)

    def get_ChemistryVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemistryVersion' from this record model
        """
        return self.get_field_value(self.CHEMISTRYVERSION__FIELD_NAME.field_name)

    def set_ComputerName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ComputerName' on this record model
        """
        self.set_field_value(self.COMPUTERNAME__FIELD_NAME.field_name, value)

    def get_ComputerName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ComputerName' from this record model
        """
        return self.get_field_value(self.COMPUTERNAME__FIELD_NAME.field_name)

    def set_ControlLane_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlLane' on this record model
        """
        self.set_field_value(self.CONTROLLANE__FIELD_NAME.field_name, value)

    def get_ControlLane_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlLane' from this record model
        """
        return self.get_field_value(self.CONTROLLANE__FIELD_NAME.field_name)

    def set_CopyImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CopyImages' on this record model
        """
        self.set_field_value(self.COPYIMAGES__FIELD_NAME.field_name, value)

    def get_CopyImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CopyImages' from this record model
        """
        return self.get_field_value(self.COPYIMAGES__FIELD_NAME.field_name)

    def set_CPLDVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CPLDVersion' on this record model
        """
        self.set_field_value(self.CPLDVERSION__FIELD_NAME.field_name, value)

    def get_CPLDVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CPLDVersion' from this record model
        """
        return self.get_field_value(self.CPLDVERSION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CVGainPosLocked_field(self, value: Optional[str]):
        """
        Set data field with field name 'CVGainPosLocked' on this record model
        """
        self.set_field_value(self.CVGAINPOSLOCKED__FIELD_NAME.field_name, value)

    def get_CVGainPosLocked_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CVGainPosLocked' from this record model
        """
        return self.get_field_value(self.CVGAINPOSLOCKED__FIELD_NAME.field_name)

    def set_CVGainStart_field(self, value: Optional[str]):
        """
        Set data field with field name 'CVGainStart' on this record model
        """
        self.set_field_value(self.CVGAINSTART__FIELD_NAME.field_name, value)

    def get_CVGainStart_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CVGainStart' from this record model
        """
        return self.get_field_value(self.CVGAINSTART__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DitherSize_field(self, value: Optional[str]):
        """
        Set data field with field name 'DitherSize' on this record model
        """
        self.set_field_value(self.DITHERSIZE__FIELD_NAME.field_name, value)

    def get_DitherSize_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DitherSize' from this record model
        """
        return self.get_field_value(self.DITHERSIZE__FIELD_NAME.field_name)

    def set_EnableAnalysis_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAnalysis' on this record model
        """
        self.set_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name, value)

    def get_EnableAnalysis_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAnalysis' from this record model
        """
        return self.get_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name)

    def set_EnableAutoCenter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAutoCenter' on this record model
        """
        self.set_field_value(self.ENABLEAUTOCENTER__FIELD_NAME.field_name, value)

    def get_EnableAutoCenter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAutoCenter' from this record model
        """
        return self.get_field_value(self.ENABLEAUTOCENTER__FIELD_NAME.field_name)

    def set_EnableBasecalling_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableBasecalling' on this record model
        """
        self.set_field_value(self.ENABLEBASECALLING__FIELD_NAME.field_name, value)

    def get_EnableBasecalling_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableBasecalling' from this record model
        """
        return self.get_field_value(self.ENABLEBASECALLING__FIELD_NAME.field_name)

    def set_EnableCameraLogging_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableCameraLogging' on this record model
        """
        self.set_field_value(self.ENABLECAMERALOGGING__FIELD_NAME.field_name, value)

    def get_EnableCameraLogging_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableCameraLogging' from this record model
        """
        return self.get_field_value(self.ENABLECAMERALOGGING__FIELD_NAME.field_name)

    def set_EnableLft_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableLft' on this record model
        """
        self.set_field_value(self.ENABLELFT__FIELD_NAME.field_name, value)

    def get_EnableLft_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableLft' from this record model
        """
        return self.get_field_value(self.ENABLELFT__FIELD_NAME.field_name)

    def set_EnableNotifications_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableNotifications' on this record model
        """
        self.set_field_value(self.ENABLENOTIFICATIONS__FIELD_NAME.field_name, value)

    def get_EnableNotifications_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableNotifications' from this record model
        """
        return self.get_field_value(self.ENABLENOTIFICATIONS__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FCPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'FCPosition' on this record model
        """
        self.set_field_value(self.FCPOSITION__FIELD_NAME.field_name, value)

    def get_FCPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FCPosition' from this record model
        """
        return self.get_field_value(self.FCPOSITION__FIELD_NAME.field_name)

    def set_FirstBaseConfirmation_field(self, value: Optional[str]):
        """
        Set data field with field name 'FirstBaseConfirmation' on this record model
        """
        self.set_field_value(self.FIRSTBASECONFIRMATION__FIELD_NAME.field_name, value)

    def get_FirstBaseConfirmation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FirstBaseConfirmation' from this record model
        """
        return self.get_field_value(self.FIRSTBASECONFIRMATION__FIELD_NAME.field_name)

    def set_Flowcell_field(self, value: Optional[str]):
        """
        Set data field with field name 'Flowcell' on this record model
        """
        self.set_field_value(self.FLOWCELL__FIELD_NAME.field_name, value)

    def get_Flowcell_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Flowcell' from this record model
        """
        return self.get_field_value(self.FLOWCELL__FIELD_NAME.field_name)

    def set_FocusCameraFirmware_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusCameraFirmware' on this record model
        """
        self.set_field_value(self.FOCUSCAMERAFIRMWARE__FIELD_NAME.field_name, value)

    def get_FocusCameraFirmware_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusCameraFirmware' from this record model
        """
        return self.get_field_value(self.FOCUSCAMERAFIRMWARE__FIELD_NAME.field_name)

    def set_FocusMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusMethod' on this record model
        """
        self.set_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name, value)

    def get_FocusMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusMethod' from this record model
        """
        return self.get_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name)

    def set_FPGAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FPGAVersion' on this record model
        """
        self.set_field_value(self.FPGAVERSION__FIELD_NAME.field_name, value)

    def get_FPGAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FPGAVersion' from this record model
        """
        return self.get_field_value(self.FPGAVERSION__FIELD_NAME.field_name)

    def set_HotPixel_field(self, value: Optional[str]):
        """
        Set data field with field name 'HotPixel' on this record model
        """
        self.set_field_value(self.HOTPIXEL__FIELD_NAME.field_name, value)

    def get_HotPixel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HotPixel' from this record model
        """
        return self.get_field_value(self.HOTPIXEL__FIELD_NAME.field_name)

    def set_IGain_field(self, value: Optional[str]):
        """
        Set data field with field name 'IGain' on this record model
        """
        self.set_field_value(self.IGAIN__FIELD_NAME.field_name, value)

    def get_IGain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IGain' from this record model
        """
        return self.get_field_value(self.IGAIN__FIELD_NAME.field_name)

    def set_IHistory_field(self, value: Optional[str]):
        """
        Set data field with field name 'IHistory' on this record model
        """
        self.set_field_value(self.IHISTORY__FIELD_NAME.field_name, value)

    def get_IHistory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IHistory' from this record model
        """
        return self.get_field_value(self.IHISTORY__FIELD_NAME.field_name)

    def set_ImageHeight_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageHeight' on this record model
        """
        self.set_field_value(self.IMAGEHEIGHT__FIELD_NAME.field_name, value)

    def get_ImageHeight_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageHeight' from this record model
        """
        return self.get_field_value(self.IMAGEHEIGHT__FIELD_NAME.field_name)

    def set_ImageWidth_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageWidth' on this record model
        """
        self.set_field_value(self.IMAGEWIDTH__FIELD_NAME.field_name, value)

    def get_ImageWidth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageWidth' from this record model
        """
        return self.get_field_value(self.IMAGEWIDTH__FIELD_NAME.field_name)

    def set_IndexQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'IndexQuantity' on this record model
        """
        self.set_field_value(self.INDEXQUANTITY__FIELD_NAME.field_name, value)

    def get_IndexQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'IndexQuantity' from this record model
        """
        return self.get_field_value(self.INDEXQUANTITY__FIELD_NAME.field_name)

    def set_IndexRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexRead' on this record model
        """
        self.set_field_value(self.INDEXREAD__FIELD_NAME.field_name, value)

    def get_IndexRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexRead' from this record model
        """
        return self.get_field_value(self.INDEXREAD__FIELD_NAME.field_name)

    def set_IndexSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSerialNumber' on this record model
        """
        self.set_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_IndexSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSerialNumber' from this record model
        """
        return self.get_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name)

    def set_IntensityCeiling_field(self, value: Optional[str]):
        """
        Set data field with field name 'IntensityCeiling' on this record model
        """
        self.set_field_value(self.INTENSITYCEILING__FIELD_NAME.field_name, value)

    def get_IntensityCeiling_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IntensityCeiling' from this record model
        """
        return self.get_field_value(self.INTENSITYCEILING__FIELD_NAME.field_name)

    def set_IsNew50Cycle_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNew50Cycle' on this record model
        """
        self.set_field_value(self.ISNEW50CYCLE__FIELD_NAME.field_name, value)

    def get_IsNew50Cycle_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNew50Cycle' from this record model
        """
        return self.get_field_value(self.ISNEW50CYCLE__FIELD_NAME.field_name)

    def set_IsNew200Cycle_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNew200Cycle' on this record model
        """
        self.set_field_value(self.ISNEW200CYCLE__FIELD_NAME.field_name, value)

    def get_IsNew200Cycle_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNew200Cycle' from this record model
        """
        return self.get_field_value(self.ISNEW200CYCLE__FIELD_NAME.field_name)

    def set_KeepIntensityFiles_field(self, value: Optional[str]):
        """
        Set data field with field name 'KeepIntensityFiles' on this record model
        """
        self.set_field_value(self.KEEPINTENSITYFILES__FIELD_NAME.field_name, value)

    def get_KeepIntensityFiles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'KeepIntensityFiles' from this record model
        """
        return self.get_field_value(self.KEEPINTENSITYFILES__FIELD_NAME.field_name)

    def set_LaneLength_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneLength' on this record model
        """
        self.set_field_value(self.LANELENGTH__FIELD_NAME.field_name, value)

    def get_LaneLength_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneLength' from this record model
        """
        return self.get_field_value(self.LANELENGTH__FIELD_NAME.field_name)

    def set_MaxInitialZJumpHalfUm_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaxInitialZJumpHalfUm' on this record model
        """
        self.set_field_value(self.MAXINITIALZJUMPHALFUM__FIELD_NAME.field_name, value)

    def get_MaxInitialZJumpHalfUm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaxInitialZJumpHalfUm' from this record model
        """
        return self.get_field_value(self.MAXINITIALZJUMPHALFUM__FIELD_NAME.field_name)

    def set_MaxSubsequentZJumpHalfUm_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaxSubsequentZJumpHalfUm' on this record model
        """
        self.set_field_value(self.MAXSUBSEQUENTZJUMPHALFUM__FIELD_NAME.field_name, value)

    def get_MaxSubsequentZJumpHalfUm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaxSubsequentZJumpHalfUm' from this record model
        """
        return self.get_field_value(self.MAXSUBSEQUENTZJUMPHALFUM__FIELD_NAME.field_name)

    def set_MockRun_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MockRun' on this record model
        """
        self.set_field_value(self.MOCKRUN__FIELD_NAME.field_name, value)

    def get_MockRun_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MockRun' from this record model
        """
        return self.get_field_value(self.MOCKRUN__FIELD_NAME.field_name)

    def set_MotorDelayFrames_field(self, value: Optional[str]):
        """
        Set data field with field name 'MotorDelayFrames' on this record model
        """
        self.set_field_value(self.MOTORDELAYFRAMES__FIELD_NAME.field_name, value)

    def get_MotorDelayFrames_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MotorDelayFrames' from this record model
        """
        return self.get_field_value(self.MOTORDELAYFRAMES__FIELD_NAME.field_name)

    def set_NumAnalysisThreads_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumAnalysisThreads' on this record model
        """
        self.set_field_value(self.NUMANALYSISTHREADS__FIELD_NAME.field_name, value)

    def get_NumAnalysisThreads_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumAnalysisThreads' from this record model
        """
        return self.get_field_value(self.NUMANALYSISTHREADS__FIELD_NAME.field_name)

    def set_NumberCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberCyclesRemaining' on this record model
        """
        self.set_field_value(self.NUMBERCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_NumberCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberCyclesRemaining' from this record model
        """
        return self.get_field_value(self.NUMBERCYCLESREMAINING__FIELD_NAME.field_name)

    def set_NumberOfInitialZJumps_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumberOfInitialZJumps' on this record model
        """
        self.set_field_value(self.NUMBEROFINITIALZJUMPS__FIELD_NAME.field_name, value)

    def get_NumberOfInitialZJumps_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumberOfInitialZJumps' from this record model
        """
        return self.get_field_value(self.NUMBEROFINITIALZJUMPS__FIELD_NAME.field_name)

    def set_NumSwaths_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumSwaths' on this record model
        """
        self.set_field_value(self.NUMSWATHS__FIELD_NAME.field_name, value)

    def get_NumSwaths_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumSwaths' from this record model
        """
        return self.get_field_value(self.NUMSWATHS__FIELD_NAME.field_name)

    def set_NumTilesPerSwath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumTilesPerSwath' on this record model
        """
        self.set_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name, value)

    def get_NumTilesPerSwath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumTilesPerSwath' from this record model
        """
        return self.get_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name)

    def set_Offset_field(self, value: Optional[str]):
        """
        Set data field with field name 'Offset' on this record model
        """
        self.set_field_value(self.OFFSET__FIELD_NAME.field_name, value)

    def get_Offset_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Offset' from this record model
        """
        return self.get_field_value(self.OFFSET__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PeQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeQuantity' on this record model
        """
        self.set_field_value(self.PEQUANTITY__FIELD_NAME.field_name, value)

    def get_PeQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeQuantity' from this record model
        """
        return self.get_field_value(self.PEQUANTITY__FIELD_NAME.field_name)

    def set_PerformPreRunFluidicsCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PerformPreRunFluidicsCheck' on this record model
        """
        self.set_field_value(self.PERFORMPRERUNFLUIDICSCHECK__FIELD_NAME.field_name, value)

    def get_PerformPreRunFluidicsCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PerformPreRunFluidicsCheck' from this record model
        """
        return self.get_field_value(self.PERFORMPRERUNFLUIDICSCHECK__FIELD_NAME.field_name)

    def set_PeriodicSave_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeriodicSave' on this record model
        """
        self.set_field_value(self.PERIODICSAVE__FIELD_NAME.field_name, value)

    def get_PeriodicSave_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeriodicSave' from this record model
        """
        return self.get_field_value(self.PERIODICSAVE__FIELD_NAME.field_name)

    def set_PeSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeSerialNumber' on this record model
        """
        self.set_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_PeSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeSerialNumber' from this record model
        """
        return self.get_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name)

    def set_Prime_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Prime' on this record model
        """
        self.set_field_value(self.PRIME__FIELD_NAME.field_name, value)

    def get_Prime_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Prime' from this record model
        """
        return self.get_field_value(self.PRIME__FIELD_NAME.field_name)

    def set_PromptForPeReagents_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PromptForPeReagents' on this record model
        """
        self.set_field_value(self.PROMPTFORPEREAGENTS__FIELD_NAME.field_name, value)

    def get_PromptForPeReagents_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PromptForPeReagents' from this record model
        """
        return self.get_field_value(self.PROMPTFORPEREAGENTS__FIELD_NAME.field_name)

    def set_Read1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Read1' on this record model
        """
        self.set_field_value(self.READ1__FIELD_NAME.field_name, value)

    def get_Read1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Read1' from this record model
        """
        return self.get_field_value(self.READ1__FIELD_NAME.field_name)

    def set_Read2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Read2' on this record model
        """
        self.set_field_value(self.READ2__FIELD_NAME.field_name, value)

    def get_Read2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Read2' from this record model
        """
        return self.get_field_value(self.READ2__FIELD_NAME.field_name)

    def set_RecipeFragmentVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFragmentVersion' on this record model
        """
        self.set_field_value(self.RECIPEFRAGMENTVERSION__FIELD_NAME.field_name, value)

    def get_RecipeFragmentVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFragmentVersion' from this record model
        """
        return self.get_field_value(self.RECIPEFRAGMENTVERSION__FIELD_NAME.field_name)

    def set_Rehyb_field(self, value: Optional[str]):
        """
        Set data field with field name 'Rehyb' on this record model
        """
        self.set_field_value(self.REHYB__FIELD_NAME.field_name, value)

    def get_Rehyb_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Rehyb' from this record model
        """
        return self.get_field_value(self.REHYB__FIELD_NAME.field_name)

    def set_Resume_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Resume' on this record model
        """
        self.set_field_value(self.RESUME__FIELD_NAME.field_name, value)

    def get_Resume_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Resume' from this record model
        """
        return self.get_field_value(self.RESUME__FIELD_NAME.field_name)

    def set_ResumeCycle_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResumeCycle' on this record model
        """
        self.set_field_value(self.RESUMECYCLE__FIELD_NAME.field_name, value)

    def get_ResumeCycle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResumeCycle' from this record model
        """
        return self.get_field_value(self.RESUMECYCLE__FIELD_NAME.field_name)

    def set_RTAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTAVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RTAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTAVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RunID_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunID' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunID' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunMode' on this record model
        """
        self.set_field_value(self.RUNMODE__FIELD_NAME.field_name, value)

    def get_RunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunMode' from this record model
        """
        return self.get_field_value(self.RUNMODE__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SampleSheet_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheet' on this record model
        """
        self.set_field_value(self.SAMPLESHEET__FIELD_NAME.field_name, value)

    def get_SampleSheet_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheet' from this record model
        """
        return self.get_field_value(self.SAMPLESHEET__FIELD_NAME.field_name)

    def set_SbsQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'SbsQuantity' on this record model
        """
        self.set_field_value(self.SBSQUANTITY__FIELD_NAME.field_name, value)

    def get_SbsQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SbsQuantity' from this record model
        """
        return self.get_field_value(self.SBSQUANTITY__FIELD_NAME.field_name)

    def set_SbsSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSerialNumber' on this record model
        """
        self.set_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SbsSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSerialNumber' from this record model
        """
        return self.get_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name)

    def set_ScanID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScanID' on this record model
        """
        self.set_field_value(self.SCANID__FIELD_NAME.field_name, value)

    def get_ScanID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScanID' from this record model
        """
        return self.get_field_value(self.SCANID__FIELD_NAME.field_name)

    def set_ScannerID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScannerID' on this record model
        """
        self.set_field_value(self.SCANNERID__FIELD_NAME.field_name, value)

    def get_ScannerID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScannerID' from this record model
        """
        return self.get_field_value(self.SCANNERID__FIELD_NAME.field_name)

    def set_ScanNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScanNumber' on this record model
        """
        self.set_field_value(self.SCANNUMBER__FIELD_NAME.field_name, value)

    def get_ScanNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScanNumber' from this record model
        """
        return self.get_field_value(self.SCANNUMBER__FIELD_NAME.field_name)

    def set_SelectedSection_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_1' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_1__FIELD_NAME.field_name, value)

    def get_SelectedSection_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_1' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_1__FIELD_NAME.field_name)

    def set_SelectedSection_2_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_2' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_2__FIELD_NAME.field_name, value)

    def get_SelectedSection_2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_2' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_2__FIELD_NAME.field_name)

    def set_SelectedSection_3_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_3' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_3__FIELD_NAME.field_name, value)

    def get_SelectedSection_3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_3' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_3__FIELD_NAME.field_name)

    def set_SelectedSection_4_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_4' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_4__FIELD_NAME.field_name, value)

    def get_SelectedSection_4_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_4' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_4__FIELD_NAME.field_name)

    def set_SelectedSection_5_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_5' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_5__FIELD_NAME.field_name, value)

    def get_SelectedSection_5_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_5' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_5__FIELD_NAME.field_name)

    def set_SelectedSection_6_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_6' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_6__FIELD_NAME.field_name, value)

    def get_SelectedSection_6_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_6' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_6__FIELD_NAME.field_name)

    def set_SelectedSection_7_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_7' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_7__FIELD_NAME.field_name, value)

    def get_SelectedSection_7_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_7' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_7__FIELD_NAME.field_name)

    def set_SelectedSection_8_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_8' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_8__FIELD_NAME.field_name, value)

    def get_SelectedSection_8_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_8' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_8__FIELD_NAME.field_name)

    def set_SelectedSurface_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSurface' on this record model
        """
        self.set_field_value(self.SELECTEDSURFACE__FIELD_NAME.field_name, value)

    def get_SelectedSurface_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSurface' from this record model
        """
        return self.get_field_value(self.SELECTEDSURFACE__FIELD_NAME.field_name)

    def set_SlideHolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideHolder' on this record model
        """
        self.set_field_value(self.SLIDEHOLDER__FIELD_NAME.field_name, value)

    def get_SlideHolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideHolder' from this record model
        """
        return self.get_field_value(self.SLIDEHOLDER__FIELD_NAME.field_name)

    def set_SupportMultipleSurfacesInUI_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportMultipleSurfacesInUI' on this record model
        """
        self.set_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name, value)

    def get_SupportMultipleSurfacesInUI_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportMultipleSurfacesInUI' from this record model
        """
        return self.get_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name)

    def set_SwathScanMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SwathScanMode' on this record model
        """
        self.set_field_value(self.SWATHSCANMODE__FIELD_NAME.field_name, value)

    def get_SwathScanMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SwathScanMode' from this record model
        """
        return self.get_field_value(self.SWATHSCANMODE__FIELD_NAME.field_name)

    def set_TempFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'TempFolder' on this record model
        """
        self.set_field_value(self.TEMPFOLDER__FIELD_NAME.field_name, value)

    def get_TempFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TempFolder' from this record model
        """
        return self.get_field_value(self.TEMPFOLDER__FIELD_NAME.field_name)

    def set_TemplateCycleCount_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateCycleCount' on this record model
        """
        self.set_field_value(self.TEMPLATECYCLECOUNT__FIELD_NAME.field_name, value)

    def get_TemplateCycleCount_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateCycleCount' from this record model
        """
        return self.get_field_value(self.TEMPLATECYCLECOUNT__FIELD_NAME.field_name)

    def set_TileHeight_field(self, value: Optional[str]):
        """
        Set data field with field name 'TileHeight' on this record model
        """
        self.set_field_value(self.TILEHEIGHT__FIELD_NAME.field_name, value)

    def get_TileHeight_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TileHeight' from this record model
        """
        return self.get_field_value(self.TILEHEIGHT__FIELD_NAME.field_name)

    def set_TileWidth_field(self, value: Optional[str]):
        """
        Set data field with field name 'TileWidth' on this record model
        """
        self.set_field_value(self.TILEWIDTH__FIELD_NAME.field_name, value)

    def get_TileWidth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TileWidth' from this record model
        """
        return self.get_field_value(self.TILEWIDTH__FIELD_NAME.field_name)

    def set_UseExistingRecipe_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseExistingRecipe' on this record model
        """
        self.set_field_value(self.USEEXISTINGRECIPE__FIELD_NAME.field_name, value)

    def get_UseExistingRecipe_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseExistingRecipe' from this record model
        """
        return self.get_field_value(self.USEEXISTINGRECIPE__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkFlowType_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkFlowType' on this record model
        """
        self.set_field_value(self.WORKFLOWTYPE__FIELD_NAME.field_name, value)

    def get_WorkFlowType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkFlowType' from this record model
        """
        return self.get_field_value(self.WORKFLOWTYPE__FIELD_NAME.field_name)


class IlluminaMiSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaMiSeqRunParameters
    Data Type Display Name: Illumina MiSeq Run Parameters (Illumina MiSeq Run Parameters')
    Fields: AfterRunWashMethod, AnalysisFolder, ApplicationName, ApplicationVersion, Chemistry, CloudRunId, CloudUsername, CopyManifests, CreatedBy, DataRecordName, DateCreated, EnableAnalysis, EnableCloud, ExperimentName, FlowcellExpirationDate, FlowcellPartNumber, FlowcellSerialNumber, FocusMethod, FPGAVersion, ILMNOnlyRecipeFolder, ManifestFolder, MCSVersion, MostRecentWashType, NumLanes, NumSwaths, NumTilesPerSwath, OutputFolder, PR2BottleExpirationDate, PR2BottlePartNumber, PR2BottleSerialNumber, ReagentKitExpirationDate, ReagentKitPartNumber, ReagentKitSerialNumber, ReagentKitVersion, RecipeFolder, Resumable, RTAVersion, RunID, RunNumber, RunStartDate, SampleSheetFolder, SampleSheetName, SaveFocusImages, SaveScanImages, ScannerID, SendInstrumentHealthToILMN, SupportMultipleSurfacesInUI, SurfaceToScan, TempFolder, Username, VeloxLastModifiedBy, VeloxLastModifiedDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IlluminaMiSeqRunParameters'
    AFTERRUNWASHMETHOD__FIELD_NAME: WrapperField = WrapperField("AfterRunWashMethod", FieldType.STRING)
    ANALYSISFOLDER__FIELD_NAME: WrapperField = WrapperField("AnalysisFolder", FieldType.STRING)
    APPLICATIONNAME__FIELD_NAME: WrapperField = WrapperField("ApplicationName", FieldType.STRING)
    APPLICATIONVERSION__FIELD_NAME: WrapperField = WrapperField("ApplicationVersion", FieldType.STRING)
    CHEMISTRY__FIELD_NAME: WrapperField = WrapperField("Chemistry", FieldType.STRING)
    CLOUDRUNID__FIELD_NAME: WrapperField = WrapperField("CloudRunId", FieldType.STRING)
    CLOUDUSERNAME__FIELD_NAME: WrapperField = WrapperField("CloudUsername", FieldType.STRING)
    COPYMANIFESTS__FIELD_NAME: WrapperField = WrapperField("CopyManifests", FieldType.BOOLEAN)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ENABLEANALYSIS__FIELD_NAME: WrapperField = WrapperField("EnableAnalysis", FieldType.BOOLEAN)
    ENABLECLOUD__FIELD_NAME: WrapperField = WrapperField("EnableCloud", FieldType.BOOLEAN)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FLOWCELLEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("FlowcellExpirationDate", FieldType.STRING)
    FLOWCELLPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowcellPartNumber", FieldType.STRING)
    FLOWCELLSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowcellSerialNumber", FieldType.STRING)
    FOCUSMETHOD__FIELD_NAME: WrapperField = WrapperField("FocusMethod", FieldType.STRING)
    FPGAVERSION__FIELD_NAME: WrapperField = WrapperField("FPGAVersion", FieldType.STRING)
    ILMNONLYRECIPEFOLDER__FIELD_NAME: WrapperField = WrapperField("ILMNOnlyRecipeFolder", FieldType.STRING)
    MANIFESTFOLDER__FIELD_NAME: WrapperField = WrapperField("ManifestFolder", FieldType.STRING)
    MCSVERSION__FIELD_NAME: WrapperField = WrapperField("MCSVersion", FieldType.STRING)
    MOSTRECENTWASHTYPE__FIELD_NAME: WrapperField = WrapperField("MostRecentWashType", FieldType.STRING)
    NUMLANES__FIELD_NAME: WrapperField = WrapperField("NumLanes", FieldType.LONG)
    NUMSWATHS__FIELD_NAME: WrapperField = WrapperField("NumSwaths", FieldType.LONG)
    NUMTILESPERSWATH__FIELD_NAME: WrapperField = WrapperField("NumTilesPerSwath", FieldType.LONG)
    OUTPUTFOLDER__FIELD_NAME: WrapperField = WrapperField("OutputFolder", FieldType.STRING)
    PR2BOTTLEEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("PR2BottleExpirationDate", FieldType.STRING)
    PR2BOTTLEPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PR2BottlePartNumber", FieldType.STRING)
    PR2BOTTLESERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("PR2BottleSerialNumber", FieldType.STRING)
    REAGENTKITEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ReagentKitExpirationDate", FieldType.STRING)
    REAGENTKITPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("ReagentKitPartNumber", FieldType.STRING)
    REAGENTKITSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("ReagentKitSerialNumber", FieldType.STRING)
    REAGENTKITVERSION__FIELD_NAME: WrapperField = WrapperField("ReagentKitVersion", FieldType.STRING)
    RECIPEFOLDER__FIELD_NAME: WrapperField = WrapperField("RecipeFolder", FieldType.STRING)
    RESUMABLE__FIELD_NAME: WrapperField = WrapperField("Resumable", FieldType.BOOLEAN)
    RTAVERSION__FIELD_NAME: WrapperField = WrapperField("RTAVersion", FieldType.STRING)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunID", FieldType.STRING)
    RUNNUMBER__FIELD_NAME: WrapperField = WrapperField("RunNumber", FieldType.LONG)
    RUNSTARTDATE__FIELD_NAME: WrapperField = WrapperField("RunStartDate", FieldType.DATE)
    SAMPLESHEETFOLDER__FIELD_NAME: WrapperField = WrapperField("SampleSheetFolder", FieldType.STRING)
    SAMPLESHEETNAME__FIELD_NAME: WrapperField = WrapperField("SampleSheetName", FieldType.STRING)
    SAVEFOCUSIMAGES__FIELD_NAME: WrapperField = WrapperField("SaveFocusImages", FieldType.BOOLEAN)
    SAVESCANIMAGES__FIELD_NAME: WrapperField = WrapperField("SaveScanImages", FieldType.BOOLEAN)
    SCANNERID__FIELD_NAME: WrapperField = WrapperField("ScannerID", FieldType.STRING)
    SENDINSTRUMENTHEALTHTOILMN__FIELD_NAME: WrapperField = WrapperField("SendInstrumentHealthToILMN", FieldType.BOOLEAN)
    SUPPORTMULTIPLESURFACESINUI__FIELD_NAME: WrapperField = WrapperField("SupportMultipleSurfacesInUI", FieldType.BOOLEAN)
    SURFACETOSCAN__FIELD_NAME: WrapperField = WrapperField("SurfaceToScan", FieldType.STRING)
    TEMPFOLDER__FIELD_NAME: WrapperField = WrapperField("TempFolder", FieldType.STRING)
    USERNAME__FIELD_NAME: WrapperField = WrapperField("Username", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AfterRunWashMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'AfterRunWashMethod' on this record model
        """
        self.set_field_value(self.AFTERRUNWASHMETHOD__FIELD_NAME.field_name, value)

    def get_AfterRunWashMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AfterRunWashMethod' from this record model
        """
        return self.get_field_value(self.AFTERRUNWASHMETHOD__FIELD_NAME.field_name)

    def set_AnalysisFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalysisFolder' on this record model
        """
        self.set_field_value(self.ANALYSISFOLDER__FIELD_NAME.field_name, value)

    def get_AnalysisFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalysisFolder' from this record model
        """
        return self.get_field_value(self.ANALYSISFOLDER__FIELD_NAME.field_name)

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_Chemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Chemistry' on this record model
        """
        self.set_field_value(self.CHEMISTRY__FIELD_NAME.field_name, value)

    def get_Chemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Chemistry' from this record model
        """
        return self.get_field_value(self.CHEMISTRY__FIELD_NAME.field_name)

    def set_CloudRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CloudRunId' on this record model
        """
        self.set_field_value(self.CLOUDRUNID__FIELD_NAME.field_name, value)

    def get_CloudRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CloudRunId' from this record model
        """
        return self.get_field_value(self.CLOUDRUNID__FIELD_NAME.field_name)

    def set_CloudUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'CloudUsername' on this record model
        """
        self.set_field_value(self.CLOUDUSERNAME__FIELD_NAME.field_name, value)

    def get_CloudUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CloudUsername' from this record model
        """
        return self.get_field_value(self.CLOUDUSERNAME__FIELD_NAME.field_name)

    def set_CopyManifests_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CopyManifests' on this record model
        """
        self.set_field_value(self.COPYMANIFESTS__FIELD_NAME.field_name, value)

    def get_CopyManifests_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CopyManifests' from this record model
        """
        return self.get_field_value(self.COPYMANIFESTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnableAnalysis_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAnalysis' on this record model
        """
        self.set_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name, value)

    def get_EnableAnalysis_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAnalysis' from this record model
        """
        return self.get_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name)

    def set_EnableCloud_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableCloud' on this record model
        """
        self.set_field_value(self.ENABLECLOUD__FIELD_NAME.field_name, value)

    def get_EnableCloud_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableCloud' from this record model
        """
        return self.get_field_value(self.ENABLECLOUD__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowcellExpirationDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellExpirationDate' on this record model
        """
        self.set_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_FlowcellExpirationDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellExpirationDate' from this record model
        """
        return self.get_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowcellPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellPartNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowcellPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellPartNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name)

    def set_FlowcellSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellSerialNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_FlowcellSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellSerialNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name)

    def set_FocusMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusMethod' on this record model
        """
        self.set_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name, value)

    def get_FocusMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusMethod' from this record model
        """
        return self.get_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name)

    def set_FPGAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FPGAVersion' on this record model
        """
        self.set_field_value(self.FPGAVERSION__FIELD_NAME.field_name, value)

    def get_FPGAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FPGAVersion' from this record model
        """
        return self.get_field_value(self.FPGAVERSION__FIELD_NAME.field_name)

    def set_ILMNOnlyRecipeFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'ILMNOnlyRecipeFolder' on this record model
        """
        self.set_field_value(self.ILMNONLYRECIPEFOLDER__FIELD_NAME.field_name, value)

    def get_ILMNOnlyRecipeFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ILMNOnlyRecipeFolder' from this record model
        """
        return self.get_field_value(self.ILMNONLYRECIPEFOLDER__FIELD_NAME.field_name)

    def set_ManifestFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'ManifestFolder' on this record model
        """
        self.set_field_value(self.MANIFESTFOLDER__FIELD_NAME.field_name, value)

    def get_ManifestFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ManifestFolder' from this record model
        """
        return self.get_field_value(self.MANIFESTFOLDER__FIELD_NAME.field_name)

    def set_MCSVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'MCSVersion' on this record model
        """
        self.set_field_value(self.MCSVERSION__FIELD_NAME.field_name, value)

    def get_MCSVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MCSVersion' from this record model
        """
        return self.get_field_value(self.MCSVERSION__FIELD_NAME.field_name)

    def set_MostRecentWashType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MostRecentWashType' on this record model
        """
        self.set_field_value(self.MOSTRECENTWASHTYPE__FIELD_NAME.field_name, value)

    def get_MostRecentWashType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MostRecentWashType' from this record model
        """
        return self.get_field_value(self.MOSTRECENTWASHTYPE__FIELD_NAME.field_name)

    def set_NumLanes_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumLanes' on this record model
        """
        self.set_field_value(self.NUMLANES__FIELD_NAME.field_name, value)

    def get_NumLanes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumLanes' from this record model
        """
        return self.get_field_value(self.NUMLANES__FIELD_NAME.field_name)

    def set_NumSwaths_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumSwaths' on this record model
        """
        self.set_field_value(self.NUMSWATHS__FIELD_NAME.field_name, value)

    def get_NumSwaths_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumSwaths' from this record model
        """
        return self.get_field_value(self.NUMSWATHS__FIELD_NAME.field_name)

    def set_NumTilesPerSwath_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumTilesPerSwath' on this record model
        """
        self.set_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name, value)

    def get_NumTilesPerSwath_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumTilesPerSwath' from this record model
        """
        return self.get_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PR2BottleExpirationDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottleExpirationDate' on this record model
        """
        self.set_field_value(self.PR2BOTTLEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_PR2BottleExpirationDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottleExpirationDate' from this record model
        """
        return self.get_field_value(self.PR2BOTTLEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_PR2BottlePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottlePartNumber' on this record model
        """
        self.set_field_value(self.PR2BOTTLEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_PR2BottlePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottlePartNumber' from this record model
        """
        return self.get_field_value(self.PR2BOTTLEPARTNUMBER__FIELD_NAME.field_name)

    def set_PR2BottleSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottleSerialNumber' on this record model
        """
        self.set_field_value(self.PR2BOTTLESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_PR2BottleSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottleSerialNumber' from this record model
        """
        return self.get_field_value(self.PR2BOTTLESERIALNUMBER__FIELD_NAME.field_name)

    def set_ReagentKitExpirationDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitExpirationDate' on this record model
        """
        self.set_field_value(self.REAGENTKITEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ReagentKitExpirationDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitExpirationDate' from this record model
        """
        return self.get_field_value(self.REAGENTKITEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ReagentKitPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitPartNumber' on this record model
        """
        self.set_field_value(self.REAGENTKITPARTNUMBER__FIELD_NAME.field_name, value)

    def get_ReagentKitPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitPartNumber' from this record model
        """
        return self.get_field_value(self.REAGENTKITPARTNUMBER__FIELD_NAME.field_name)

    def set_ReagentKitSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitSerialNumber' on this record model
        """
        self.set_field_value(self.REAGENTKITSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_ReagentKitSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitSerialNumber' from this record model
        """
        return self.get_field_value(self.REAGENTKITSERIALNUMBER__FIELD_NAME.field_name)

    def set_ReagentKitVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitVersion' on this record model
        """
        self.set_field_value(self.REAGENTKITVERSION__FIELD_NAME.field_name, value)

    def get_ReagentKitVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitVersion' from this record model
        """
        return self.get_field_value(self.REAGENTKITVERSION__FIELD_NAME.field_name)

    def set_RecipeFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFolder' on this record model
        """
        self.set_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name, value)

    def get_RecipeFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFolder' from this record model
        """
        return self.get_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name)

    def set_Resumable_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Resumable' on this record model
        """
        self.set_field_value(self.RESUMABLE__FIELD_NAME.field_name, value)

    def get_Resumable_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Resumable' from this record model
        """
        return self.get_field_value(self.RESUMABLE__FIELD_NAME.field_name)

    def set_RTAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTAVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RTAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTAVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RunID_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunID' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunID' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SampleSheetFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetFolder' on this record model
        """
        self.set_field_value(self.SAMPLESHEETFOLDER__FIELD_NAME.field_name, value)

    def get_SampleSheetFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetFolder' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETFOLDER__FIELD_NAME.field_name)

    def set_SampleSheetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetName' on this record model
        """
        self.set_field_value(self.SAMPLESHEETNAME__FIELD_NAME.field_name, value)

    def get_SampleSheetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetName' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETNAME__FIELD_NAME.field_name)

    def set_SaveFocusImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveFocusImages' on this record model
        """
        self.set_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name, value)

    def get_SaveFocusImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveFocusImages' from this record model
        """
        return self.get_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name)

    def set_SaveScanImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveScanImages' on this record model
        """
        self.set_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name, value)

    def get_SaveScanImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveScanImages' from this record model
        """
        return self.get_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name)

    def set_ScannerID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScannerID' on this record model
        """
        self.set_field_value(self.SCANNERID__FIELD_NAME.field_name, value)

    def get_ScannerID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScannerID' from this record model
        """
        return self.get_field_value(self.SCANNERID__FIELD_NAME.field_name)

    def set_SendInstrumentHealthToILMN_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SendInstrumentHealthToILMN' on this record model
        """
        self.set_field_value(self.SENDINSTRUMENTHEALTHTOILMN__FIELD_NAME.field_name, value)

    def get_SendInstrumentHealthToILMN_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SendInstrumentHealthToILMN' from this record model
        """
        return self.get_field_value(self.SENDINSTRUMENTHEALTHTOILMN__FIELD_NAME.field_name)

    def set_SupportMultipleSurfacesInUI_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportMultipleSurfacesInUI' on this record model
        """
        self.set_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name, value)

    def get_SupportMultipleSurfacesInUI_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportMultipleSurfacesInUI' from this record model
        """
        return self.get_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name)

    def set_SurfaceToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'SurfaceToScan' on this record model
        """
        self.set_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name, value)

    def get_SurfaceToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SurfaceToScan' from this record model
        """
        return self.get_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name)

    def set_TempFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'TempFolder' on this record model
        """
        self.set_field_value(self.TEMPFOLDER__FIELD_NAME.field_name, value)

    def get_TempFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TempFolder' from this record model
        """
        return self.get_field_value(self.TEMPFOLDER__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaMiSeqSSSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaMiSeqSSSettings
    Data Type Display Name: Illumina MiSeq Sample Sheet Settings (Illumina MiSeq Sample Sheet Settings)
    Fields: Adapter, AdapterRead2, AdapterTrimmingStringency, Aligner, Assay, BaitManifestFileName, CreatedBy, CustomAmpliconAlignerMaxIndel, CustomIndexPrimerMix, CustomRead1PrimerMix, CustomRead2PrimerMix, CyclesRead1, CyclesRead2, DataRecordName, DateCreated, Description, EnrichmentMaxRegionStatistics, ExcludeRegionsManifestA, ExperimentName, FilterOutSingleStrandVariants, FlagPCRDuplicates, IndexReads, InvestigatorName, Kmer, MinimumCoverageDepth, OutputGenomeVCF, PercentTilesToScan, PicardHSmetrics, QualityScoreTrim, ReadType, ReagentCartridgeBarcode, ReverseComplement, RunDate, StitchReads, TaxonomyFile, VariantCaller, VariantFilterQualityCutoff, VeloxLastModifiedBy, VeloxLastModifiedDate, Workflow
    """
    DATA_TYPE_NAME: str = 'IlluminaMiSeqSSSettings'
    ADAPTER__FIELD_NAME: WrapperField = WrapperField("Adapter", FieldType.STRING)
    ADAPTERREAD2__FIELD_NAME: WrapperField = WrapperField("AdapterRead2", FieldType.STRING)
    ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME: WrapperField = WrapperField("AdapterTrimmingStringency", FieldType.STRING)
    ALIGNER__FIELD_NAME: WrapperField = WrapperField("Aligner", FieldType.STRING)
    ASSAY__FIELD_NAME: WrapperField = WrapperField("Assay", FieldType.STRING)
    BAITMANIFESTFILENAME__FIELD_NAME: WrapperField = WrapperField("BaitManifestFileName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMAMPLICONALIGNERMAXINDEL__FIELD_NAME: WrapperField = WrapperField("CustomAmpliconAlignerMaxIndel", FieldType.STRING)
    CUSTOMINDEXPRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomIndexPrimerMix", FieldType.STRING)
    CUSTOMREAD1PRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomRead1PrimerMix", FieldType.STRING)
    CUSTOMREAD2PRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomRead2PrimerMix", FieldType.STRING)
    CYCLESREAD1__FIELD_NAME: WrapperField = WrapperField("CyclesRead1", FieldType.INTEGER)
    CYCLESREAD2__FIELD_NAME: WrapperField = WrapperField("CyclesRead2", FieldType.INTEGER)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    ENRICHMENTMAXREGIONSTATISTICS__FIELD_NAME: WrapperField = WrapperField("EnrichmentMaxRegionStatistics", FieldType.STRING)
    EXCLUDEREGIONSMANIFESTA__FIELD_NAME: WrapperField = WrapperField("ExcludeRegionsManifestA", FieldType.STRING)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME: WrapperField = WrapperField("FilterOutSingleStrandVariants", FieldType.STRING)
    FLAGPCRDUPLICATES__FIELD_NAME: WrapperField = WrapperField("FlagPCRDuplicates", FieldType.BOOLEAN)
    INDEXREADS__FIELD_NAME: WrapperField = WrapperField("IndexReads", FieldType.SHORT)
    INVESTIGATORNAME__FIELD_NAME: WrapperField = WrapperField("InvestigatorName", FieldType.STRING)
    KMER__FIELD_NAME: WrapperField = WrapperField("Kmer", FieldType.STRING)
    MINIMUMCOVERAGEDEPTH__FIELD_NAME: WrapperField = WrapperField("MinimumCoverageDepth", FieldType.STRING)
    OUTPUTGENOMEVCF__FIELD_NAME: WrapperField = WrapperField("OutputGenomeVCF", FieldType.BOOLEAN)
    PERCENTTILESTOSCAN__FIELD_NAME: WrapperField = WrapperField("PercentTilesToScan", FieldType.STRING)
    PICARDHSMETRICS__FIELD_NAME: WrapperField = WrapperField("PicardHSmetrics", FieldType.BOOLEAN)
    QUALITYSCORETRIM__FIELD_NAME: WrapperField = WrapperField("QualityScoreTrim", FieldType.STRING)
    READTYPE__FIELD_NAME: WrapperField = WrapperField("ReadType", FieldType.PICKLIST)
    REAGENTCARTRIDGEBARCODE__FIELD_NAME: WrapperField = WrapperField("ReagentCartridgeBarcode", FieldType.STRING)
    REVERSECOMPLEMENT__FIELD_NAME: WrapperField = WrapperField("ReverseComplement", FieldType.BOOLEAN)
    RUNDATE__FIELD_NAME: WrapperField = WrapperField("RunDate", FieldType.DATE)
    STITCHREADS__FIELD_NAME: WrapperField = WrapperField("StitchReads", FieldType.BOOLEAN)
    TAXONOMYFILE__FIELD_NAME: WrapperField = WrapperField("TaxonomyFile", FieldType.STRING)
    VARIANTCALLER__FIELD_NAME: WrapperField = WrapperField("VariantCaller", FieldType.STRING)
    VARIANTFILTERQUALITYCUTOFF__FIELD_NAME: WrapperField = WrapperField("VariantFilterQualityCutoff", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOW__FIELD_NAME: WrapperField = WrapperField("Workflow", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Adapter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Adapter' on this record model
        """
        self.set_field_value(self.ADAPTER__FIELD_NAME.field_name, value)

    def get_Adapter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Adapter' from this record model
        """
        return self.get_field_value(self.ADAPTER__FIELD_NAME.field_name)

    def set_AdapterRead2_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterRead2' on this record model
        """
        self.set_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name, value)

    def get_AdapterRead2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterRead2' from this record model
        """
        return self.get_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name)

    def set_AdapterTrimmingStringency_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterTrimmingStringency' on this record model
        """
        self.set_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name, value)

    def get_AdapterTrimmingStringency_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterTrimmingStringency' from this record model
        """
        return self.get_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name)

    def set_Aligner_field(self, value: Optional[str]):
        """
        Set data field with field name 'Aligner' on this record model
        """
        self.set_field_value(self.ALIGNER__FIELD_NAME.field_name, value)

    def get_Aligner_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Aligner' from this record model
        """
        return self.get_field_value(self.ALIGNER__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def set_BaitManifestFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaitManifestFileName' on this record model
        """
        self.set_field_value(self.BAITMANIFESTFILENAME__FIELD_NAME.field_name, value)

    def get_BaitManifestFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaitManifestFileName' from this record model
        """
        return self.get_field_value(self.BAITMANIFESTFILENAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomAmpliconAlignerMaxIndel_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomAmpliconAlignerMaxIndel' on this record model
        """
        self.set_field_value(self.CUSTOMAMPLICONALIGNERMAXINDEL__FIELD_NAME.field_name, value)

    def get_CustomAmpliconAlignerMaxIndel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomAmpliconAlignerMaxIndel' from this record model
        """
        return self.get_field_value(self.CUSTOMAMPLICONALIGNERMAXINDEL__FIELD_NAME.field_name)

    def set_CustomIndexPrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndexPrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomIndexPrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndexPrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead1PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead1PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead2PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead2PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name)

    def set_CyclesRead1_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead1' on this record model
        """
        self.set_field_value(self.CYCLESREAD1__FIELD_NAME.field_name, value)

    def get_CyclesRead1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead1' from this record model
        """
        return self.get_field_value(self.CYCLESREAD1__FIELD_NAME.field_name)

    def set_CyclesRead2_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead2' on this record model
        """
        self.set_field_value(self.CYCLESREAD2__FIELD_NAME.field_name, value)

    def get_CyclesRead2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead2' from this record model
        """
        return self.get_field_value(self.CYCLESREAD2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EnrichmentMaxRegionStatistics_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnrichmentMaxRegionStatistics' on this record model
        """
        self.set_field_value(self.ENRICHMENTMAXREGIONSTATISTICS__FIELD_NAME.field_name, value)

    def get_EnrichmentMaxRegionStatistics_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnrichmentMaxRegionStatistics' from this record model
        """
        return self.get_field_value(self.ENRICHMENTMAXREGIONSTATISTICS__FIELD_NAME.field_name)

    def set_ExcludeRegionsManifestA_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExcludeRegionsManifestA' on this record model
        """
        self.set_field_value(self.EXCLUDEREGIONSMANIFESTA__FIELD_NAME.field_name, value)

    def get_ExcludeRegionsManifestA_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExcludeRegionsManifestA' from this record model
        """
        return self.get_field_value(self.EXCLUDEREGIONSMANIFESTA__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FilterOutSingleStrandVariants_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilterOutSingleStrandVariants' on this record model
        """
        self.set_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name, value)

    def get_FilterOutSingleStrandVariants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilterOutSingleStrandVariants' from this record model
        """
        return self.get_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name)

    def set_FlagPCRDuplicates_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FlagPCRDuplicates' on this record model
        """
        self.set_field_value(self.FLAGPCRDUPLICATES__FIELD_NAME.field_name, value)

    def get_FlagPCRDuplicates_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FlagPCRDuplicates' from this record model
        """
        return self.get_field_value(self.FLAGPCRDUPLICATES__FIELD_NAME.field_name)

    def set_IndexReads_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexReads' on this record model
        """
        self.set_field_value(self.INDEXREADS__FIELD_NAME.field_name, value)

    def get_IndexReads_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexReads' from this record model
        """
        return self.get_field_value(self.INDEXREADS__FIELD_NAME.field_name)

    def set_InvestigatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InvestigatorName' on this record model
        """
        self.set_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name, value)

    def get_InvestigatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InvestigatorName' from this record model
        """
        return self.get_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name)

    def set_Kmer_field(self, value: Optional[str]):
        """
        Set data field with field name 'Kmer' on this record model
        """
        self.set_field_value(self.KMER__FIELD_NAME.field_name, value)

    def get_Kmer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Kmer' from this record model
        """
        return self.get_field_value(self.KMER__FIELD_NAME.field_name)

    def set_MinimumCoverageDepth_field(self, value: Optional[str]):
        """
        Set data field with field name 'MinimumCoverageDepth' on this record model
        """
        self.set_field_value(self.MINIMUMCOVERAGEDEPTH__FIELD_NAME.field_name, value)

    def get_MinimumCoverageDepth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MinimumCoverageDepth' from this record model
        """
        return self.get_field_value(self.MINIMUMCOVERAGEDEPTH__FIELD_NAME.field_name)

    def set_OutputGenomeVCF_field(self, value: Optional[bool]):
        """
        Set data field with field name 'OutputGenomeVCF' on this record model
        """
        self.set_field_value(self.OUTPUTGENOMEVCF__FIELD_NAME.field_name, value)

    def get_OutputGenomeVCF_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'OutputGenomeVCF' from this record model
        """
        return self.get_field_value(self.OUTPUTGENOMEVCF__FIELD_NAME.field_name)

    def set_PercentTilesToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'PercentTilesToScan' on this record model
        """
        self.set_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name, value)

    def get_PercentTilesToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PercentTilesToScan' from this record model
        """
        return self.get_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name)

    def set_PicardHSmetrics_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PicardHSmetrics' on this record model
        """
        self.set_field_value(self.PICARDHSMETRICS__FIELD_NAME.field_name, value)

    def get_PicardHSmetrics_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PicardHSmetrics' from this record model
        """
        return self.get_field_value(self.PICARDHSMETRICS__FIELD_NAME.field_name)

    def set_QualityScoreTrim_field(self, value: Optional[str]):
        """
        Set data field with field name 'QualityScoreTrim' on this record model
        """
        self.set_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name, value)

    def get_QualityScoreTrim_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QualityScoreTrim' from this record model
        """
        return self.get_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_ReagentCartridgeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentCartridgeBarcode' on this record model
        """
        self.set_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name, value)

    def get_ReagentCartridgeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentCartridgeBarcode' from this record model
        """
        return self.get_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name)

    def set_ReverseComplement_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReverseComplement' on this record model
        """
        self.set_field_value(self.REVERSECOMPLEMENT__FIELD_NAME.field_name, value)

    def get_ReverseComplement_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReverseComplement' from this record model
        """
        return self.get_field_value(self.REVERSECOMPLEMENT__FIELD_NAME.field_name)

    def set_RunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunDate' on this record model
        """
        self.set_field_value(self.RUNDATE__FIELD_NAME.field_name, value)

    def get_RunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunDate' from this record model
        """
        return self.get_field_value(self.RUNDATE__FIELD_NAME.field_name)

    def set_StitchReads_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StitchReads' on this record model
        """
        self.set_field_value(self.STITCHREADS__FIELD_NAME.field_name, value)

    def get_StitchReads_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StitchReads' from this record model
        """
        return self.get_field_value(self.STITCHREADS__FIELD_NAME.field_name)

    def set_TaxonomyFile_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaxonomyFile' on this record model
        """
        self.set_field_value(self.TAXONOMYFILE__FIELD_NAME.field_name, value)

    def get_TaxonomyFile_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaxonomyFile' from this record model
        """
        return self.get_field_value(self.TAXONOMYFILE__FIELD_NAME.field_name)

    def set_VariantCaller_field(self, value: Optional[str]):
        """
        Set data field with field name 'VariantCaller' on this record model
        """
        self.set_field_value(self.VARIANTCALLER__FIELD_NAME.field_name, value)

    def get_VariantCaller_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VariantCaller' from this record model
        """
        return self.get_field_value(self.VARIANTCALLER__FIELD_NAME.field_name)

    def set_VariantFilterQualityCutoff_field(self, value: Optional[str]):
        """
        Set data field with field name 'VariantFilterQualityCutoff' on this record model
        """
        self.set_field_value(self.VARIANTFILTERQUALITYCUTOFF__FIELD_NAME.field_name, value)

    def get_VariantFilterQualityCutoff_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VariantFilterQualityCutoff' from this record model
        """
        return self.get_field_value(self.VARIANTFILTERQUALITYCUTOFF__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Workflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'Workflow' on this record model
        """
        self.set_field_value(self.WORKFLOW__FIELD_NAME.field_name, value)

    def get_Workflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Workflow' from this record model
        """
        return self.get_field_value(self.WORKFLOW__FIELD_NAME.field_name)


class IlluminaNextGenConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNextGenConfig
    Data Type Display Name: Illumina Next-Gen Configuration (Illumina Next-Gen Configurations)
    Fields: AssociatedProcessName, CreatedBy, DataRecordName, DateCreated, Description, MultiplexInstructions, RunType, VeloxLastModifiedBy, VeloxLastModifiedDate
    Configuration fields required for the Illumina Next-Gen Sequencing request form
    """
    DATA_TYPE_NAME: str = 'IlluminaNextGenConfig'
    ASSOCIATEDPROCESSNAME__FIELD_NAME: WrapperField = WrapperField("AssociatedProcessName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: WrapperField = WrapperField("MultiplexInstructions", FieldType.SELECTION)
    RUNTYPE__FIELD_NAME: WrapperField = WrapperField("RunType", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssociatedProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssociatedProcessName' on this record model
        """
        self.set_field_value(self.ASSOCIATEDPROCESSNAME__FIELD_NAME.field_name, value)

    def get_AssociatedProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssociatedProcessName' from this record model
        """
        return self.get_field_value(self.ASSOCIATEDPROCESSNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_RunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunType' on this record model
        """
        self.set_field_value(self.RUNTYPE__FIELD_NAME.field_name, value)

    def get_RunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunType' from this record model
        """
        return self.get_field_value(self.RUNTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaNextSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNextSeqRunParameters
    Data Type Display Name: Illumina NextSeq Run Parameters (Illumina NextSeq Run Parameters')
    Fields: AnalysisWorkflowType, ApplicationName, ApplicationVersion, BaseSpaceRunId, BaseSpaceRunMode, Chemistry, ComputerName, CreatedBy, CustomReadOnePrimer, CustomReadTwoPrimer, DataRecordName, DateCreated, ExperimentName, FlowCellSerial, FocusMethod, Index1Read, Index2Read, InstrumentID, IsPairedEnd, LanePerSection, LibraryID, NumLanes, NumSwaths, NumTilesPerSwath, OutputFolder, PR2BottleSerial, Read1, Read2, ReagentKitSerial, RecipeFolder, RKitSerialEnteredInBaseSpace, RTAVersion, RunFolder, RunID, RunManagementType, RunNumber, RunStartDate, SaveFocusImages, SaveScanImages, SectionPerLane, SelectiveSave, SeqCompletedWithoutErrors, SequencingCompletedOrAborted, SequencingStarted, SupportMultipleSurfacesInUI, SurfaceToScan, UsesCustomIndexPrimer, UsesCustomPrimer1, UsesCustomPrimer2, VeloxLastModifiedBy, VeloxLastModifiedDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IlluminaNextSeqRunParameters'
    ANALYSISWORKFLOWTYPE__FIELD_NAME: WrapperField = WrapperField("AnalysisWorkflowType", FieldType.STRING)
    APPLICATIONNAME__FIELD_NAME: WrapperField = WrapperField("ApplicationName", FieldType.STRING)
    APPLICATIONVERSION__FIELD_NAME: WrapperField = WrapperField("ApplicationVersion", FieldType.STRING)
    BASESPACERUNID__FIELD_NAME: WrapperField = WrapperField("BaseSpaceRunId", FieldType.STRING)
    BASESPACERUNMODE__FIELD_NAME: WrapperField = WrapperField("BaseSpaceRunMode", FieldType.STRING)
    CHEMISTRY__FIELD_NAME: WrapperField = WrapperField("Chemistry", FieldType.STRING)
    COMPUTERNAME__FIELD_NAME: WrapperField = WrapperField("ComputerName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMREADONEPRIMER__FIELD_NAME: WrapperField = WrapperField("CustomReadOnePrimer", FieldType.STRING)
    CUSTOMREADTWOPRIMER__FIELD_NAME: WrapperField = WrapperField("CustomReadTwoPrimer", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FLOWCELLSERIAL__FIELD_NAME: WrapperField = WrapperField("FlowCellSerial", FieldType.STRING)
    FOCUSMETHOD__FIELD_NAME: WrapperField = WrapperField("FocusMethod", FieldType.STRING)
    INDEX1READ__FIELD_NAME: WrapperField = WrapperField("Index1Read", FieldType.LONG)
    INDEX2READ__FIELD_NAME: WrapperField = WrapperField("Index2Read", FieldType.LONG)
    INSTRUMENTID__FIELD_NAME: WrapperField = WrapperField("InstrumentID", FieldType.STRING)
    ISPAIREDEND__FIELD_NAME: WrapperField = WrapperField("IsPairedEnd", FieldType.BOOLEAN)
    LANEPERSECTION__FIELD_NAME: WrapperField = WrapperField("LanePerSection", FieldType.LONG)
    LIBRARYID__FIELD_NAME: WrapperField = WrapperField("LibraryID", FieldType.STRING)
    NUMLANES__FIELD_NAME: WrapperField = WrapperField("NumLanes", FieldType.LONG)
    NUMSWATHS__FIELD_NAME: WrapperField = WrapperField("NumSwaths", FieldType.LONG)
    NUMTILESPERSWATH__FIELD_NAME: WrapperField = WrapperField("NumTilesPerSwath", FieldType.LONG)
    OUTPUTFOLDER__FIELD_NAME: WrapperField = WrapperField("OutputFolder", FieldType.STRING)
    PR2BOTTLESERIAL__FIELD_NAME: WrapperField = WrapperField("PR2BottleSerial", FieldType.STRING)
    READ1__FIELD_NAME: WrapperField = WrapperField("Read1", FieldType.LONG)
    READ2__FIELD_NAME: WrapperField = WrapperField("Read2", FieldType.LONG)
    REAGENTKITSERIAL__FIELD_NAME: WrapperField = WrapperField("ReagentKitSerial", FieldType.STRING)
    RECIPEFOLDER__FIELD_NAME: WrapperField = WrapperField("RecipeFolder", FieldType.STRING)
    RKITSERIALENTEREDINBASESPACE__FIELD_NAME: WrapperField = WrapperField("RKitSerialEnteredInBaseSpace", FieldType.BOOLEAN)
    RTAVERSION__FIELD_NAME: WrapperField = WrapperField("RTAVersion", FieldType.STRING)
    RUNFOLDER__FIELD_NAME: WrapperField = WrapperField("RunFolder", FieldType.STRING)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunID", FieldType.STRING)
    RUNMANAGEMENTTYPE__FIELD_NAME: WrapperField = WrapperField("RunManagementType", FieldType.STRING)
    RUNNUMBER__FIELD_NAME: WrapperField = WrapperField("RunNumber", FieldType.LONG)
    RUNSTARTDATE__FIELD_NAME: WrapperField = WrapperField("RunStartDate", FieldType.DATE)
    SAVEFOCUSIMAGES__FIELD_NAME: WrapperField = WrapperField("SaveFocusImages", FieldType.BOOLEAN)
    SAVESCANIMAGES__FIELD_NAME: WrapperField = WrapperField("SaveScanImages", FieldType.BOOLEAN)
    SECTIONPERLANE__FIELD_NAME: WrapperField = WrapperField("SectionPerLane", FieldType.LONG)
    SELECTIVESAVE__FIELD_NAME: WrapperField = WrapperField("SelectiveSave", FieldType.BOOLEAN)
    SEQCOMPLETEDWITHOUTERRORS__FIELD_NAME: WrapperField = WrapperField("SeqCompletedWithoutErrors", FieldType.BOOLEAN)
    SEQUENCINGCOMPLETEDORABORTED__FIELD_NAME: WrapperField = WrapperField("SequencingCompletedOrAborted", FieldType.BOOLEAN)
    SEQUENCINGSTARTED__FIELD_NAME: WrapperField = WrapperField("SequencingStarted", FieldType.BOOLEAN)
    SUPPORTMULTIPLESURFACESINUI__FIELD_NAME: WrapperField = WrapperField("SupportMultipleSurfacesInUI", FieldType.BOOLEAN)
    SURFACETOSCAN__FIELD_NAME: WrapperField = WrapperField("SurfaceToScan", FieldType.STRING)
    USESCUSTOMINDEXPRIMER__FIELD_NAME: WrapperField = WrapperField("UsesCustomIndexPrimer", FieldType.BOOLEAN)
    USESCUSTOMPRIMER1__FIELD_NAME: WrapperField = WrapperField("UsesCustomPrimer1", FieldType.BOOLEAN)
    USESCUSTOMPRIMER2__FIELD_NAME: WrapperField = WrapperField("UsesCustomPrimer2", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnalysisWorkflowType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalysisWorkflowType' on this record model
        """
        self.set_field_value(self.ANALYSISWORKFLOWTYPE__FIELD_NAME.field_name, value)

    def get_AnalysisWorkflowType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalysisWorkflowType' from this record model
        """
        return self.get_field_value(self.ANALYSISWORKFLOWTYPE__FIELD_NAME.field_name)

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_BaseSpaceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunId' on this record model
        """
        self.set_field_value(self.BASESPACERUNID__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunId' from this record model
        """
        return self.get_field_value(self.BASESPACERUNID__FIELD_NAME.field_name)

    def set_BaseSpaceRunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunMode' on this record model
        """
        self.set_field_value(self.BASESPACERUNMODE__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunMode' from this record model
        """
        return self.get_field_value(self.BASESPACERUNMODE__FIELD_NAME.field_name)

    def set_Chemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Chemistry' on this record model
        """
        self.set_field_value(self.CHEMISTRY__FIELD_NAME.field_name, value)

    def get_Chemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Chemistry' from this record model
        """
        return self.get_field_value(self.CHEMISTRY__FIELD_NAME.field_name)

    def set_ComputerName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ComputerName' on this record model
        """
        self.set_field_value(self.COMPUTERNAME__FIELD_NAME.field_name, value)

    def get_ComputerName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ComputerName' from this record model
        """
        return self.get_field_value(self.COMPUTERNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomReadOnePrimer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomReadOnePrimer' on this record model
        """
        self.set_field_value(self.CUSTOMREADONEPRIMER__FIELD_NAME.field_name, value)

    def get_CustomReadOnePrimer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomReadOnePrimer' from this record model
        """
        return self.get_field_value(self.CUSTOMREADONEPRIMER__FIELD_NAME.field_name)

    def set_CustomReadTwoPrimer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomReadTwoPrimer' on this record model
        """
        self.set_field_value(self.CUSTOMREADTWOPRIMER__FIELD_NAME.field_name, value)

    def get_CustomReadTwoPrimer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomReadTwoPrimer' from this record model
        """
        return self.get_field_value(self.CUSTOMREADTWOPRIMER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellSerial_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSerial' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIAL__FIELD_NAME.field_name, value)

    def get_FlowCellSerial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSerial' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIAL__FIELD_NAME.field_name)

    def set_FocusMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusMethod' on this record model
        """
        self.set_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name, value)

    def get_FocusMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusMethod' from this record model
        """
        return self.get_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name)

    def set_Index1Read_field(self, value: Optional[int]):
        """
        Set data field with field name 'Index1Read' on this record model
        """
        self.set_field_value(self.INDEX1READ__FIELD_NAME.field_name, value)

    def get_Index1Read_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Index1Read' from this record model
        """
        return self.get_field_value(self.INDEX1READ__FIELD_NAME.field_name)

    def set_Index2Read_field(self, value: Optional[int]):
        """
        Set data field with field name 'Index2Read' on this record model
        """
        self.set_field_value(self.INDEX2READ__FIELD_NAME.field_name, value)

    def get_Index2Read_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Index2Read' from this record model
        """
        return self.get_field_value(self.INDEX2READ__FIELD_NAME.field_name)

    def set_InstrumentID_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentID' on this record model
        """
        self.set_field_value(self.INSTRUMENTID__FIELD_NAME.field_name, value)

    def get_InstrumentID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentID' from this record model
        """
        return self.get_field_value(self.INSTRUMENTID__FIELD_NAME.field_name)

    def set_IsPairedEnd_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPairedEnd' on this record model
        """
        self.set_field_value(self.ISPAIREDEND__FIELD_NAME.field_name, value)

    def get_IsPairedEnd_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPairedEnd' from this record model
        """
        return self.get_field_value(self.ISPAIREDEND__FIELD_NAME.field_name)

    def set_LanePerSection_field(self, value: Optional[int]):
        """
        Set data field with field name 'LanePerSection' on this record model
        """
        self.set_field_value(self.LANEPERSECTION__FIELD_NAME.field_name, value)

    def get_LanePerSection_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LanePerSection' from this record model
        """
        return self.get_field_value(self.LANEPERSECTION__FIELD_NAME.field_name)

    def set_LibraryID_field(self, value: Optional[str]):
        """
        Set data field with field name 'LibraryID' on this record model
        """
        self.set_field_value(self.LIBRARYID__FIELD_NAME.field_name, value)

    def get_LibraryID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LibraryID' from this record model
        """
        return self.get_field_value(self.LIBRARYID__FIELD_NAME.field_name)

    def set_NumLanes_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumLanes' on this record model
        """
        self.set_field_value(self.NUMLANES__FIELD_NAME.field_name, value)

    def get_NumLanes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumLanes' from this record model
        """
        return self.get_field_value(self.NUMLANES__FIELD_NAME.field_name)

    def set_NumSwaths_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumSwaths' on this record model
        """
        self.set_field_value(self.NUMSWATHS__FIELD_NAME.field_name, value)

    def get_NumSwaths_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumSwaths' from this record model
        """
        return self.get_field_value(self.NUMSWATHS__FIELD_NAME.field_name)

    def set_NumTilesPerSwath_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumTilesPerSwath' on this record model
        """
        self.set_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name, value)

    def get_NumTilesPerSwath_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumTilesPerSwath' from this record model
        """
        return self.get_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PR2BottleSerial_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottleSerial' on this record model
        """
        self.set_field_value(self.PR2BOTTLESERIAL__FIELD_NAME.field_name, value)

    def get_PR2BottleSerial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottleSerial' from this record model
        """
        return self.get_field_value(self.PR2BOTTLESERIAL__FIELD_NAME.field_name)

    def set_Read1_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read1' on this record model
        """
        self.set_field_value(self.READ1__FIELD_NAME.field_name, value)

    def get_Read1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read1' from this record model
        """
        return self.get_field_value(self.READ1__FIELD_NAME.field_name)

    def set_Read2_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read2' on this record model
        """
        self.set_field_value(self.READ2__FIELD_NAME.field_name, value)

    def get_Read2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read2' from this record model
        """
        return self.get_field_value(self.READ2__FIELD_NAME.field_name)

    def set_ReagentKitSerial_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitSerial' on this record model
        """
        self.set_field_value(self.REAGENTKITSERIAL__FIELD_NAME.field_name, value)

    def get_ReagentKitSerial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitSerial' from this record model
        """
        return self.get_field_value(self.REAGENTKITSERIAL__FIELD_NAME.field_name)

    def set_RecipeFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFolder' on this record model
        """
        self.set_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name, value)

    def get_RecipeFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFolder' from this record model
        """
        return self.get_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name)

    def set_RKitSerialEnteredInBaseSpace_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RKitSerialEnteredInBaseSpace' on this record model
        """
        self.set_field_value(self.RKITSERIALENTEREDINBASESPACE__FIELD_NAME.field_name, value)

    def get_RKitSerialEnteredInBaseSpace_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RKitSerialEnteredInBaseSpace' from this record model
        """
        return self.get_field_value(self.RKITSERIALENTEREDINBASESPACE__FIELD_NAME.field_name)

    def set_RTAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTAVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RTAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTAVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunFolder' on this record model
        """
        self.set_field_value(self.RUNFOLDER__FIELD_NAME.field_name, value)

    def get_RunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunFolder' from this record model
        """
        return self.get_field_value(self.RUNFOLDER__FIELD_NAME.field_name)

    def set_RunID_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunID' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunID' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunManagementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunManagementType' on this record model
        """
        self.set_field_value(self.RUNMANAGEMENTTYPE__FIELD_NAME.field_name, value)

    def get_RunManagementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunManagementType' from this record model
        """
        return self.get_field_value(self.RUNMANAGEMENTTYPE__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SaveFocusImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveFocusImages' on this record model
        """
        self.set_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name, value)

    def get_SaveFocusImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveFocusImages' from this record model
        """
        return self.get_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name)

    def set_SaveScanImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveScanImages' on this record model
        """
        self.set_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name, value)

    def get_SaveScanImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveScanImages' from this record model
        """
        return self.get_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name)

    def set_SectionPerLane_field(self, value: Optional[int]):
        """
        Set data field with field name 'SectionPerLane' on this record model
        """
        self.set_field_value(self.SECTIONPERLANE__FIELD_NAME.field_name, value)

    def get_SectionPerLane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SectionPerLane' from this record model
        """
        return self.get_field_value(self.SECTIONPERLANE__FIELD_NAME.field_name)

    def set_SelectiveSave_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SelectiveSave' on this record model
        """
        self.set_field_value(self.SELECTIVESAVE__FIELD_NAME.field_name, value)

    def get_SelectiveSave_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SelectiveSave' from this record model
        """
        return self.get_field_value(self.SELECTIVESAVE__FIELD_NAME.field_name)

    def set_SeqCompletedWithoutErrors_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SeqCompletedWithoutErrors' on this record model
        """
        self.set_field_value(self.SEQCOMPLETEDWITHOUTERRORS__FIELD_NAME.field_name, value)

    def get_SeqCompletedWithoutErrors_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SeqCompletedWithoutErrors' from this record model
        """
        return self.get_field_value(self.SEQCOMPLETEDWITHOUTERRORS__FIELD_NAME.field_name)

    def set_SequencingCompletedOrAborted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SequencingCompletedOrAborted' on this record model
        """
        self.set_field_value(self.SEQUENCINGCOMPLETEDORABORTED__FIELD_NAME.field_name, value)

    def get_SequencingCompletedOrAborted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SequencingCompletedOrAborted' from this record model
        """
        return self.get_field_value(self.SEQUENCINGCOMPLETEDORABORTED__FIELD_NAME.field_name)

    def set_SequencingStarted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SequencingStarted' on this record model
        """
        self.set_field_value(self.SEQUENCINGSTARTED__FIELD_NAME.field_name, value)

    def get_SequencingStarted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SequencingStarted' from this record model
        """
        return self.get_field_value(self.SEQUENCINGSTARTED__FIELD_NAME.field_name)

    def set_SupportMultipleSurfacesInUI_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportMultipleSurfacesInUI' on this record model
        """
        self.set_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name, value)

    def get_SupportMultipleSurfacesInUI_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportMultipleSurfacesInUI' from this record model
        """
        return self.get_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name)

    def set_SurfaceToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'SurfaceToScan' on this record model
        """
        self.set_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name, value)

    def get_SurfaceToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SurfaceToScan' from this record model
        """
        return self.get_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name)

    def set_UsesCustomIndexPrimer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UsesCustomIndexPrimer' on this record model
        """
        self.set_field_value(self.USESCUSTOMINDEXPRIMER__FIELD_NAME.field_name, value)

    def get_UsesCustomIndexPrimer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UsesCustomIndexPrimer' from this record model
        """
        return self.get_field_value(self.USESCUSTOMINDEXPRIMER__FIELD_NAME.field_name)

    def set_UsesCustomPrimer1_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UsesCustomPrimer1' on this record model
        """
        self.set_field_value(self.USESCUSTOMPRIMER1__FIELD_NAME.field_name, value)

    def get_UsesCustomPrimer1_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UsesCustomPrimer1' from this record model
        """
        return self.get_field_value(self.USESCUSTOMPRIMER1__FIELD_NAME.field_name)

    def set_UsesCustomPrimer2_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UsesCustomPrimer2' on this record model
        """
        self.set_field_value(self.USESCUSTOMPRIMER2__FIELD_NAME.field_name, value)

    def get_UsesCustomPrimer2_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UsesCustomPrimer2' from this record model
        """
        return self.get_field_value(self.USESCUSTOMPRIMER2__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaNextSeqSSSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNextSeqSSSettings
    Data Type Display Name: Illumina NextSeq Sample Sheet Settings (Illumina NextSeq Sample Sheet Settings)
    Fields: Adapter, AdapterRead2, AdapterTrimmingStringency, Assay, CreatedBy, CustomIndexPrimerMix, CustomRead1PrimerMix, CustomRead2PrimerMix, CyclesRead1, CyclesRead2, DataRecordName, DateCreated, DateUnix, Description, ExperimentName, FilterOutSingleStrandVariants, IndexReads, InvestigatorName, PercentTilesToScan, QualityScoreTrim, ReadType, ReagentCartridgeBarcode, StitchReads, VeloxLastModifiedBy, VeloxLastModifiedDate, Workflow
    """
    DATA_TYPE_NAME: str = 'IlluminaNextSeqSSSettings'
    ADAPTER__FIELD_NAME: WrapperField = WrapperField("Adapter", FieldType.STRING)
    ADAPTERREAD2__FIELD_NAME: WrapperField = WrapperField("AdapterRead2", FieldType.STRING)
    ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME: WrapperField = WrapperField("AdapterTrimmingStringency", FieldType.STRING)
    ASSAY__FIELD_NAME: WrapperField = WrapperField("Assay", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMINDEXPRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomIndexPrimerMix", FieldType.STRING)
    CUSTOMREAD1PRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomRead1PrimerMix", FieldType.STRING)
    CUSTOMREAD2PRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomRead2PrimerMix", FieldType.STRING)
    CYCLESREAD1__FIELD_NAME: WrapperField = WrapperField("CyclesRead1", FieldType.INTEGER)
    CYCLESREAD2__FIELD_NAME: WrapperField = WrapperField("CyclesRead2", FieldType.INTEGER)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEUNIX__FIELD_NAME: WrapperField = WrapperField("DateUnix", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME: WrapperField = WrapperField("FilterOutSingleStrandVariants", FieldType.STRING)
    INDEXREADS__FIELD_NAME: WrapperField = WrapperField("IndexReads", FieldType.SHORT)
    INVESTIGATORNAME__FIELD_NAME: WrapperField = WrapperField("InvestigatorName", FieldType.STRING)
    PERCENTTILESTOSCAN__FIELD_NAME: WrapperField = WrapperField("PercentTilesToScan", FieldType.STRING)
    QUALITYSCORETRIM__FIELD_NAME: WrapperField = WrapperField("QualityScoreTrim", FieldType.STRING)
    READTYPE__FIELD_NAME: WrapperField = WrapperField("ReadType", FieldType.PICKLIST)
    REAGENTCARTRIDGEBARCODE__FIELD_NAME: WrapperField = WrapperField("ReagentCartridgeBarcode", FieldType.STRING)
    STITCHREADS__FIELD_NAME: WrapperField = WrapperField("StitchReads", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOW__FIELD_NAME: WrapperField = WrapperField("Workflow", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Adapter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Adapter' on this record model
        """
        self.set_field_value(self.ADAPTER__FIELD_NAME.field_name, value)

    def get_Adapter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Adapter' from this record model
        """
        return self.get_field_value(self.ADAPTER__FIELD_NAME.field_name)

    def set_AdapterRead2_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterRead2' on this record model
        """
        self.set_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name, value)

    def get_AdapterRead2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterRead2' from this record model
        """
        return self.get_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name)

    def set_AdapterTrimmingStringency_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterTrimmingStringency' on this record model
        """
        self.set_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name, value)

    def get_AdapterTrimmingStringency_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterTrimmingStringency' from this record model
        """
        return self.get_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomIndexPrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndexPrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomIndexPrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndexPrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead1PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead1PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead2PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead2PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name)

    def set_CyclesRead1_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead1' on this record model
        """
        self.set_field_value(self.CYCLESREAD1__FIELD_NAME.field_name, value)

    def get_CyclesRead1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead1' from this record model
        """
        return self.get_field_value(self.CYCLESREAD1__FIELD_NAME.field_name)

    def set_CyclesRead2_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead2' on this record model
        """
        self.set_field_value(self.CYCLESREAD2__FIELD_NAME.field_name, value)

    def get_CyclesRead2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead2' from this record model
        """
        return self.get_field_value(self.CYCLESREAD2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateUnix_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateUnix' on this record model
        """
        self.set_field_value(self.DATEUNIX__FIELD_NAME.field_name, value)

    def get_DateUnix_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateUnix' from this record model
        """
        return self.get_field_value(self.DATEUNIX__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FilterOutSingleStrandVariants_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilterOutSingleStrandVariants' on this record model
        """
        self.set_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name, value)

    def get_FilterOutSingleStrandVariants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilterOutSingleStrandVariants' from this record model
        """
        return self.get_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name)

    def set_IndexReads_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexReads' on this record model
        """
        self.set_field_value(self.INDEXREADS__FIELD_NAME.field_name, value)

    def get_IndexReads_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexReads' from this record model
        """
        return self.get_field_value(self.INDEXREADS__FIELD_NAME.field_name)

    def set_InvestigatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InvestigatorName' on this record model
        """
        self.set_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name, value)

    def get_InvestigatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InvestigatorName' from this record model
        """
        return self.get_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name)

    def set_PercentTilesToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'PercentTilesToScan' on this record model
        """
        self.set_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name, value)

    def get_PercentTilesToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PercentTilesToScan' from this record model
        """
        return self.get_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name)

    def set_QualityScoreTrim_field(self, value: Optional[str]):
        """
        Set data field with field name 'QualityScoreTrim' on this record model
        """
        self.set_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name, value)

    def get_QualityScoreTrim_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QualityScoreTrim' from this record model
        """
        return self.get_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_ReagentCartridgeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentCartridgeBarcode' on this record model
        """
        self.set_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name, value)

    def get_ReagentCartridgeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentCartridgeBarcode' from this record model
        """
        return self.get_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name)

    def set_StitchReads_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StitchReads' on this record model
        """
        self.set_field_value(self.STITCHREADS__FIELD_NAME.field_name, value)

    def get_StitchReads_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StitchReads' from this record model
        """
        return self.get_field_value(self.STITCHREADS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Workflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'Workflow' on this record model
        """
        self.set_field_value(self.WORKFLOW__FIELD_NAME.field_name, value)

    def get_Workflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Workflow' from this record model
        """
        return self.get_field_value(self.WORKFLOW__FIELD_NAME.field_name)


class IlluminaNovaSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNovaSeqRunParameters
    Data Type Display Name: Illumina NovaSeq Run Parameters (Illumina NovaSeq Run Parameters)
    Fields: Application, ApplicationVersion, AttachmentFile, Autocenter, BiDirectionalScanning, BufferExpirationdate, BufferLotNumber, BufferNumberOfCyclesRemaining, BufferPartNumber, BufferRssi, BufferSerialBarcode, BufferStartDate, BufferSupportedModes, CeLinuxRunFolder, CeMountRunFolder, ClusterCycleKit, ClusterExpirationdate, ClusterLotNumber, ClusterNumberOfCyclesRemaining, ClusterPartNumber, ClusterRssi, ClusterSerialBarcode, ClusterStartDate, ClusterSupportedModes, CreatedBy, DataRecordName, DateCreated, ExperimentName, FlowCellExpirationdate, FlowCellLotNumber, FlowCellMode, FlowCellNumberOfReuseRemaining, FlowCellPartNumber, FlowCellRssi, FlowCellSerialBarcode, FlowCellStartDate, FlowCellSupportedModes, IndexRead1NumberOfCycles, IndexRead2NumberOfCycles, InstrumentName, IsRehyb, LibraryTubeExpirationdate, LibraryTubeLotNumber, LibraryTubePartNumber, LibraryTubeRssi, LibraryTubeSerialBarcode, LibraryTubeStartDate, LibraryTubeSupportedModes, OutputRunFolder, PlannedIndex1ReadCycles, PlannedIndex2ReadCycles, PlannedRead1Cycles, PlannedRead2Cycles, PlatformType, PreRunFolder, Read1NumberOfCycles, Read2NumberOfCycles, ReadType, RecipeFilePath, RecipeVersion, RtaRawRunFolder, RtaVersion, RunId, RunNumber, RunStartDate, SbcRunFolder, SbsCycleKit, SbsExpirationdate, SbsLotNumber, SbsNumberOfCyclesRemaining, SbsNumberOfCyclesSupported, SbsPartNumber, SbsRssi, SbsSerialBarcode, SbsStartDate, SbsSupportedModes, SendIlluminaHealthData, Side, Surface, UcsRunId, UcsVersion, UseCustomIndexRead1Primer, UseCustomRead1Primer, UseCustomRead2Primer, VeloxLastModifiedBy, VeloxLastModifiedDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IlluminaNovaSeqRunParameters'
    APPLICATION__FIELD_NAME: WrapperField = WrapperField("Application", FieldType.STRING)
    APPLICATIONVERSION__FIELD_NAME: WrapperField = WrapperField("ApplicationVersion", FieldType.STRING)
    ATTACHMENTFILE__FIELD_NAME: WrapperField = WrapperField("AttachmentFile", FieldType.STRING)
    AUTOCENTER__FIELD_NAME: WrapperField = WrapperField("Autocenter", FieldType.BOOLEAN)
    BIDIRECTIONALSCANNING__FIELD_NAME: WrapperField = WrapperField("BiDirectionalScanning", FieldType.BOOLEAN)
    BUFFEREXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("BufferExpirationdate", FieldType.DATE)
    BUFFERLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("BufferLotNumber", FieldType.INTEGER)
    BUFFERNUMBEROFCYCLESREMAINING__FIELD_NAME: WrapperField = WrapperField("BufferNumberOfCyclesRemaining", FieldType.INTEGER)
    BUFFERPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("BufferPartNumber", FieldType.INTEGER)
    BUFFERRSSI__FIELD_NAME: WrapperField = WrapperField("BufferRssi", FieldType.INTEGER)
    BUFFERSERIALBARCODE__FIELD_NAME: WrapperField = WrapperField("BufferSerialBarcode", FieldType.STRING)
    BUFFERSTARTDATE__FIELD_NAME: WrapperField = WrapperField("BufferStartDate", FieldType.DATE)
    BUFFERSUPPORTEDMODES__FIELD_NAME: WrapperField = WrapperField("BufferSupportedModes", FieldType.STRING)
    CELINUXRUNFOLDER__FIELD_NAME: WrapperField = WrapperField("CeLinuxRunFolder", FieldType.STRING)
    CEMOUNTRUNFOLDER__FIELD_NAME: WrapperField = WrapperField("CeMountRunFolder", FieldType.STRING)
    CLUSTERCYCLEKIT__FIELD_NAME: WrapperField = WrapperField("ClusterCycleKit", FieldType.INTEGER)
    CLUSTEREXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ClusterExpirationdate", FieldType.DATE)
    CLUSTERLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("ClusterLotNumber", FieldType.INTEGER)
    CLUSTERNUMBEROFCYCLESREMAINING__FIELD_NAME: WrapperField = WrapperField("ClusterNumberOfCyclesRemaining", FieldType.INTEGER)
    CLUSTERPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("ClusterPartNumber", FieldType.STRING)
    CLUSTERRSSI__FIELD_NAME: WrapperField = WrapperField("ClusterRssi", FieldType.INTEGER)
    CLUSTERSERIALBARCODE__FIELD_NAME: WrapperField = WrapperField("ClusterSerialBarcode", FieldType.STRING)
    CLUSTERSTARTDATE__FIELD_NAME: WrapperField = WrapperField("ClusterStartDate", FieldType.DATE)
    CLUSTERSUPPORTEDMODES__FIELD_NAME: WrapperField = WrapperField("ClusterSupportedModes", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FLOWCELLEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("FlowCellExpirationdate", FieldType.DATE)
    FLOWCELLLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowCellLotNumber", FieldType.INTEGER)
    FLOWCELLMODE__FIELD_NAME: WrapperField = WrapperField("FlowCellMode", FieldType.STRING)
    FLOWCELLNUMBEROFREUSEREMAINING__FIELD_NAME: WrapperField = WrapperField("FlowCellNumberOfReuseRemaining", FieldType.INTEGER)
    FLOWCELLPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowCellPartNumber", FieldType.STRING)
    FLOWCELLRSSI__FIELD_NAME: WrapperField = WrapperField("FlowCellRssi", FieldType.INTEGER)
    FLOWCELLSERIALBARCODE__FIELD_NAME: WrapperField = WrapperField("FlowCellSerialBarcode", FieldType.STRING)
    FLOWCELLSTARTDATE__FIELD_NAME: WrapperField = WrapperField("FlowCellStartDate", FieldType.DATE)
    FLOWCELLSUPPORTEDMODES__FIELD_NAME: WrapperField = WrapperField("FlowCellSupportedModes", FieldType.STRING)
    INDEXREAD1NUMBEROFCYCLES__FIELD_NAME: WrapperField = WrapperField("IndexRead1NumberOfCycles", FieldType.INTEGER)
    INDEXREAD2NUMBEROFCYCLES__FIELD_NAME: WrapperField = WrapperField("IndexRead2NumberOfCycles", FieldType.INTEGER)
    INSTRUMENTNAME__FIELD_NAME: WrapperField = WrapperField("InstrumentName", FieldType.STRING)
    ISREHYB__FIELD_NAME: WrapperField = WrapperField("IsRehyb", FieldType.BOOLEAN)
    LIBRARYTUBEEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("LibraryTubeExpirationdate", FieldType.DATE)
    LIBRARYTUBELOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LibraryTubeLotNumber", FieldType.INTEGER)
    LIBRARYTUBEPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("LibraryTubePartNumber", FieldType.INTEGER)
    LIBRARYTUBERSSI__FIELD_NAME: WrapperField = WrapperField("LibraryTubeRssi", FieldType.INTEGER)
    LIBRARYTUBESERIALBARCODE__FIELD_NAME: WrapperField = WrapperField("LibraryTubeSerialBarcode", FieldType.STRING)
    LIBRARYTUBESTARTDATE__FIELD_NAME: WrapperField = WrapperField("LibraryTubeStartDate", FieldType.DATE)
    LIBRARYTUBESUPPORTEDMODES__FIELD_NAME: WrapperField = WrapperField("LibraryTubeSupportedModes", FieldType.STRING)
    OUTPUTRUNFOLDER__FIELD_NAME: WrapperField = WrapperField("OutputRunFolder", FieldType.STRING)
    PLANNEDINDEX1READCYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedIndex1ReadCycles", FieldType.INTEGER)
    PLANNEDINDEX2READCYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedIndex2ReadCycles", FieldType.INTEGER)
    PLANNEDREAD1CYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedRead1Cycles", FieldType.INTEGER)
    PLANNEDREAD2CYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedRead2Cycles", FieldType.INTEGER)
    PLATFORMTYPE__FIELD_NAME: WrapperField = WrapperField("PlatformType", FieldType.STRING)
    PRERUNFOLDER__FIELD_NAME: WrapperField = WrapperField("PreRunFolder", FieldType.STRING)
    READ1NUMBEROFCYCLES__FIELD_NAME: WrapperField = WrapperField("Read1NumberOfCycles", FieldType.INTEGER)
    READ2NUMBEROFCYCLES__FIELD_NAME: WrapperField = WrapperField("Read2NumberOfCycles", FieldType.INTEGER)
    READTYPE__FIELD_NAME: WrapperField = WrapperField("ReadType", FieldType.STRING)
    RECIPEFILEPATH__FIELD_NAME: WrapperField = WrapperField("RecipeFilePath", FieldType.STRING)
    RECIPEVERSION__FIELD_NAME: WrapperField = WrapperField("RecipeVersion", FieldType.STRING)
    RTARAWRUNFOLDER__FIELD_NAME: WrapperField = WrapperField("RtaRawRunFolder", FieldType.STRING)
    RTAVERSION__FIELD_NAME: WrapperField = WrapperField("RtaVersion", FieldType.STRING)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunId", FieldType.STRING)
    RUNNUMBER__FIELD_NAME: WrapperField = WrapperField("RunNumber", FieldType.INTEGER)
    RUNSTARTDATE__FIELD_NAME: WrapperField = WrapperField("RunStartDate", FieldType.STRING)
    SBCRUNFOLDER__FIELD_NAME: WrapperField = WrapperField("SbcRunFolder", FieldType.STRING)
    SBSCYCLEKIT__FIELD_NAME: WrapperField = WrapperField("SbsCycleKit", FieldType.INTEGER)
    SBSEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("SbsExpirationdate", FieldType.DATE)
    SBSLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("SbsLotNumber", FieldType.INTEGER)
    SBSNUMBEROFCYCLESREMAINING__FIELD_NAME: WrapperField = WrapperField("SbsNumberOfCyclesRemaining", FieldType.INTEGER)
    SBSNUMBEROFCYCLESSUPPORTED__FIELD_NAME: WrapperField = WrapperField("SbsNumberOfCyclesSupported", FieldType.INTEGER)
    SBSPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("SbsPartNumber", FieldType.STRING)
    SBSRSSI__FIELD_NAME: WrapperField = WrapperField("SbsRssi", FieldType.INTEGER)
    SBSSERIALBARCODE__FIELD_NAME: WrapperField = WrapperField("SbsSerialBarcode", FieldType.STRING)
    SBSSTARTDATE__FIELD_NAME: WrapperField = WrapperField("SbsStartDate", FieldType.DATE)
    SBSSUPPORTEDMODES__FIELD_NAME: WrapperField = WrapperField("SbsSupportedModes", FieldType.STRING)
    SENDILLUMINAHEALTHDATA__FIELD_NAME: WrapperField = WrapperField("SendIlluminaHealthData", FieldType.BOOLEAN)
    SIDE__FIELD_NAME: WrapperField = WrapperField("Side", FieldType.STRING)
    SURFACE__FIELD_NAME: WrapperField = WrapperField("Surface", FieldType.STRING)
    UCSRUNID__FIELD_NAME: WrapperField = WrapperField("UcsRunId", FieldType.STRING)
    UCSVERSION__FIELD_NAME: WrapperField = WrapperField("UcsVersion", FieldType.STRING)
    USECUSTOMINDEXREAD1PRIMER__FIELD_NAME: WrapperField = WrapperField("UseCustomIndexRead1Primer", FieldType.BOOLEAN)
    USECUSTOMREAD1PRIMER__FIELD_NAME: WrapperField = WrapperField("UseCustomRead1Primer", FieldType.BOOLEAN)
    USECUSTOMREAD2PRIMER__FIELD_NAME: WrapperField = WrapperField("UseCustomRead2Primer", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Application_field(self, value: Optional[str]):
        """
        Set data field with field name 'Application' on this record model
        """
        self.set_field_value(self.APPLICATION__FIELD_NAME.field_name, value)

    def get_Application_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Application' from this record model
        """
        return self.get_field_value(self.APPLICATION__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_AttachmentFile_field(self, value: Optional[str]):
        """
        Set data field with field name 'AttachmentFile' on this record model
        """
        self.set_field_value(self.ATTACHMENTFILE__FIELD_NAME.field_name, value)

    def get_AttachmentFile_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AttachmentFile' from this record model
        """
        return self.get_field_value(self.ATTACHMENTFILE__FIELD_NAME.field_name)

    def set_Autocenter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Autocenter' on this record model
        """
        self.set_field_value(self.AUTOCENTER__FIELD_NAME.field_name, value)

    def get_Autocenter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Autocenter' from this record model
        """
        return self.get_field_value(self.AUTOCENTER__FIELD_NAME.field_name)

    def set_BiDirectionalScanning_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BiDirectionalScanning' on this record model
        """
        self.set_field_value(self.BIDIRECTIONALSCANNING__FIELD_NAME.field_name, value)

    def get_BiDirectionalScanning_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BiDirectionalScanning' from this record model
        """
        return self.get_field_value(self.BIDIRECTIONALSCANNING__FIELD_NAME.field_name)

    def set_BufferExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferExpirationdate' on this record model
        """
        self.set_field_value(self.BUFFEREXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_BufferExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferExpirationdate' from this record model
        """
        return self.get_field_value(self.BUFFEREXPIRATIONDATE__FIELD_NAME.field_name)

    def set_BufferLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferLotNumber' on this record model
        """
        self.set_field_value(self.BUFFERLOTNUMBER__FIELD_NAME.field_name, value)

    def get_BufferLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferLotNumber' from this record model
        """
        return self.get_field_value(self.BUFFERLOTNUMBER__FIELD_NAME.field_name)

    def set_BufferNumberOfCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferNumberOfCyclesRemaining' on this record model
        """
        self.set_field_value(self.BUFFERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_BufferNumberOfCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferNumberOfCyclesRemaining' from this record model
        """
        return self.get_field_value(self.BUFFERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name)

    def set_BufferPartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferPartNumber' on this record model
        """
        self.set_field_value(self.BUFFERPARTNUMBER__FIELD_NAME.field_name, value)

    def get_BufferPartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferPartNumber' from this record model
        """
        return self.get_field_value(self.BUFFERPARTNUMBER__FIELD_NAME.field_name)

    def set_BufferRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferRssi' on this record model
        """
        self.set_field_value(self.BUFFERRSSI__FIELD_NAME.field_name, value)

    def get_BufferRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferRssi' from this record model
        """
        return self.get_field_value(self.BUFFERRSSI__FIELD_NAME.field_name)

    def set_BufferSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'BufferSerialBarcode' on this record model
        """
        self.set_field_value(self.BUFFERSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_BufferSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BufferSerialBarcode' from this record model
        """
        return self.get_field_value(self.BUFFERSERIALBARCODE__FIELD_NAME.field_name)

    def set_BufferStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferStartDate' on this record model
        """
        self.set_field_value(self.BUFFERSTARTDATE__FIELD_NAME.field_name, value)

    def get_BufferStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferStartDate' from this record model
        """
        return self.get_field_value(self.BUFFERSTARTDATE__FIELD_NAME.field_name)

    def set_BufferSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'BufferSupportedModes' on this record model
        """
        self.set_field_value(self.BUFFERSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_BufferSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BufferSupportedModes' from this record model
        """
        return self.get_field_value(self.BUFFERSUPPORTEDMODES__FIELD_NAME.field_name)

    def set_CeLinuxRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'CeLinuxRunFolder' on this record model
        """
        self.set_field_value(self.CELINUXRUNFOLDER__FIELD_NAME.field_name, value)

    def get_CeLinuxRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CeLinuxRunFolder' from this record model
        """
        return self.get_field_value(self.CELINUXRUNFOLDER__FIELD_NAME.field_name)

    def set_CeMountRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'CeMountRunFolder' on this record model
        """
        self.set_field_value(self.CEMOUNTRUNFOLDER__FIELD_NAME.field_name, value)

    def get_CeMountRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CeMountRunFolder' from this record model
        """
        return self.get_field_value(self.CEMOUNTRUNFOLDER__FIELD_NAME.field_name)

    def set_ClusterCycleKit_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterCycleKit' on this record model
        """
        self.set_field_value(self.CLUSTERCYCLEKIT__FIELD_NAME.field_name, value)

    def get_ClusterCycleKit_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterCycleKit' from this record model
        """
        return self.get_field_value(self.CLUSTERCYCLEKIT__FIELD_NAME.field_name)

    def set_ClusterExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterExpirationdate' on this record model
        """
        self.set_field_value(self.CLUSTEREXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ClusterExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterExpirationdate' from this record model
        """
        return self.get_field_value(self.CLUSTEREXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ClusterLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterLotNumber' on this record model
        """
        self.set_field_value(self.CLUSTERLOTNUMBER__FIELD_NAME.field_name, value)

    def get_ClusterLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterLotNumber' from this record model
        """
        return self.get_field_value(self.CLUSTERLOTNUMBER__FIELD_NAME.field_name)

    def set_ClusterNumberOfCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterNumberOfCyclesRemaining' on this record model
        """
        self.set_field_value(self.CLUSTERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_ClusterNumberOfCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterNumberOfCyclesRemaining' from this record model
        """
        return self.get_field_value(self.CLUSTERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name)

    def set_ClusterPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterPartNumber' on this record model
        """
        self.set_field_value(self.CLUSTERPARTNUMBER__FIELD_NAME.field_name, value)

    def get_ClusterPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterPartNumber' from this record model
        """
        return self.get_field_value(self.CLUSTERPARTNUMBER__FIELD_NAME.field_name)

    def set_ClusterRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterRssi' on this record model
        """
        self.set_field_value(self.CLUSTERRSSI__FIELD_NAME.field_name, value)

    def get_ClusterRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterRssi' from this record model
        """
        return self.get_field_value(self.CLUSTERRSSI__FIELD_NAME.field_name)

    def set_ClusterSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterSerialBarcode' on this record model
        """
        self.set_field_value(self.CLUSTERSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_ClusterSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterSerialBarcode' from this record model
        """
        return self.get_field_value(self.CLUSTERSERIALBARCODE__FIELD_NAME.field_name)

    def set_ClusterStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterStartDate' on this record model
        """
        self.set_field_value(self.CLUSTERSTARTDATE__FIELD_NAME.field_name, value)

    def get_ClusterStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterStartDate' from this record model
        """
        return self.get_field_value(self.CLUSTERSTARTDATE__FIELD_NAME.field_name)

    def set_ClusterSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterSupportedModes' on this record model
        """
        self.set_field_value(self.CLUSTERSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_ClusterSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterSupportedModes' from this record model
        """
        return self.get_field_value(self.CLUSTERSUPPORTEDMODES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellExpirationdate' on this record model
        """
        self.set_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_FlowCellExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellExpirationdate' from this record model
        """
        return self.get_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowCellLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellLotNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellLotNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellMode' on this record model
        """
        self.set_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name, value)

    def get_FlowCellMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellMode' from this record model
        """
        return self.get_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name)

    def set_FlowCellNumberOfReuseRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellNumberOfReuseRemaining' on this record model
        """
        self.set_field_value(self.FLOWCELLNUMBEROFREUSEREMAINING__FIELD_NAME.field_name, value)

    def get_FlowCellNumberOfReuseRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellNumberOfReuseRemaining' from this record model
        """
        return self.get_field_value(self.FLOWCELLNUMBEROFREUSEREMAINING__FIELD_NAME.field_name)

    def set_FlowCellPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellPartNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellPartNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellRssi' on this record model
        """
        self.set_field_value(self.FLOWCELLRSSI__FIELD_NAME.field_name, value)

    def get_FlowCellRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellRssi' from this record model
        """
        return self.get_field_value(self.FLOWCELLRSSI__FIELD_NAME.field_name)

    def set_FlowCellSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSerialBarcode' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_FlowCellSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSerialBarcode' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIALBARCODE__FIELD_NAME.field_name)

    def set_FlowCellStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellStartDate' on this record model
        """
        self.set_field_value(self.FLOWCELLSTARTDATE__FIELD_NAME.field_name, value)

    def get_FlowCellStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellStartDate' from this record model
        """
        return self.get_field_value(self.FLOWCELLSTARTDATE__FIELD_NAME.field_name)

    def set_FlowCellSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSupportedModes' on this record model
        """
        self.set_field_value(self.FLOWCELLSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_FlowCellSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSupportedModes' from this record model
        """
        return self.get_field_value(self.FLOWCELLSUPPORTEDMODES__FIELD_NAME.field_name)

    def set_IndexRead1NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexRead1NumberOfCycles' on this record model
        """
        self.set_field_value(self.INDEXREAD1NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_IndexRead1NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexRead1NumberOfCycles' from this record model
        """
        return self.get_field_value(self.INDEXREAD1NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_IndexRead2NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexRead2NumberOfCycles' on this record model
        """
        self.set_field_value(self.INDEXREAD2NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_IndexRead2NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexRead2NumberOfCycles' from this record model
        """
        return self.get_field_value(self.INDEXREAD2NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_IsRehyb_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsRehyb' on this record model
        """
        self.set_field_value(self.ISREHYB__FIELD_NAME.field_name, value)

    def get_IsRehyb_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsRehyb' from this record model
        """
        return self.get_field_value(self.ISREHYB__FIELD_NAME.field_name)

    def set_LibraryTubeExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeExpirationdate' on this record model
        """
        self.set_field_value(self.LIBRARYTUBEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_LibraryTubeExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeExpirationdate' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LibraryTubeLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeLotNumber' on this record model
        """
        self.set_field_value(self.LIBRARYTUBELOTNUMBER__FIELD_NAME.field_name, value)

    def get_LibraryTubeLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeLotNumber' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBELOTNUMBER__FIELD_NAME.field_name)

    def set_LibraryTubePartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubePartNumber' on this record model
        """
        self.set_field_value(self.LIBRARYTUBEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_LibraryTubePartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubePartNumber' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBEPARTNUMBER__FIELD_NAME.field_name)

    def set_LibraryTubeRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeRssi' on this record model
        """
        self.set_field_value(self.LIBRARYTUBERSSI__FIELD_NAME.field_name, value)

    def get_LibraryTubeRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeRssi' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBERSSI__FIELD_NAME.field_name)

    def set_LibraryTubeSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'LibraryTubeSerialBarcode' on this record model
        """
        self.set_field_value(self.LIBRARYTUBESERIALBARCODE__FIELD_NAME.field_name, value)

    def get_LibraryTubeSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LibraryTubeSerialBarcode' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBESERIALBARCODE__FIELD_NAME.field_name)

    def set_LibraryTubeStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeStartDate' on this record model
        """
        self.set_field_value(self.LIBRARYTUBESTARTDATE__FIELD_NAME.field_name, value)

    def get_LibraryTubeStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeStartDate' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBESTARTDATE__FIELD_NAME.field_name)

    def set_LibraryTubeSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'LibraryTubeSupportedModes' on this record model
        """
        self.set_field_value(self.LIBRARYTUBESUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_LibraryTubeSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LibraryTubeSupportedModes' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBESUPPORTEDMODES__FIELD_NAME.field_name)

    def set_OutputRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputRunFolder' on this record model
        """
        self.set_field_value(self.OUTPUTRUNFOLDER__FIELD_NAME.field_name, value)

    def get_OutputRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputRunFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTRUNFOLDER__FIELD_NAME.field_name)

    def set_PlannedIndex1ReadCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex1ReadCycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX1READCYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex1ReadCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex1ReadCycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX1READCYCLES__FIELD_NAME.field_name)

    def set_PlannedIndex2ReadCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex2ReadCycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX2READCYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex2ReadCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex2ReadCycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX2READCYCLES__FIELD_NAME.field_name)

    def set_PlannedRead1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead1Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead1Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name)

    def set_PlannedRead2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead2Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead2Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name)

    def set_PlatformType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlatformType' on this record model
        """
        self.set_field_value(self.PLATFORMTYPE__FIELD_NAME.field_name, value)

    def get_PlatformType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlatformType' from this record model
        """
        return self.get_field_value(self.PLATFORMTYPE__FIELD_NAME.field_name)

    def set_PreRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'PreRunFolder' on this record model
        """
        self.set_field_value(self.PRERUNFOLDER__FIELD_NAME.field_name, value)

    def get_PreRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PreRunFolder' from this record model
        """
        return self.get_field_value(self.PRERUNFOLDER__FIELD_NAME.field_name)

    def set_Read1NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read1NumberOfCycles' on this record model
        """
        self.set_field_value(self.READ1NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_Read1NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read1NumberOfCycles' from this record model
        """
        return self.get_field_value(self.READ1NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_Read2NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read2NumberOfCycles' on this record model
        """
        self.set_field_value(self.READ2NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_Read2NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read2NumberOfCycles' from this record model
        """
        return self.get_field_value(self.READ2NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_RecipeFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFilePath' on this record model
        """
        self.set_field_value(self.RECIPEFILEPATH__FIELD_NAME.field_name, value)

    def get_RecipeFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFilePath' from this record model
        """
        return self.get_field_value(self.RECIPEFILEPATH__FIELD_NAME.field_name)

    def set_RecipeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeVersion' on this record model
        """
        self.set_field_value(self.RECIPEVERSION__FIELD_NAME.field_name, value)

    def get_RecipeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeVersion' from this record model
        """
        return self.get_field_value(self.RECIPEVERSION__FIELD_NAME.field_name)

    def set_RtaRawRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RtaRawRunFolder' on this record model
        """
        self.set_field_value(self.RTARAWRUNFOLDER__FIELD_NAME.field_name, value)

    def get_RtaRawRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RtaRawRunFolder' from this record model
        """
        return self.get_field_value(self.RTARAWRUNFOLDER__FIELD_NAME.field_name)

    def set_RtaVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RtaVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RtaVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RtaVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SbcRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbcRunFolder' on this record model
        """
        self.set_field_value(self.SBCRUNFOLDER__FIELD_NAME.field_name, value)

    def get_SbcRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbcRunFolder' from this record model
        """
        return self.get_field_value(self.SBCRUNFOLDER__FIELD_NAME.field_name)

    def set_SbsCycleKit_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsCycleKit' on this record model
        """
        self.set_field_value(self.SBSCYCLEKIT__FIELD_NAME.field_name, value)

    def get_SbsCycleKit_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsCycleKit' from this record model
        """
        return self.get_field_value(self.SBSCYCLEKIT__FIELD_NAME.field_name)

    def set_SbsExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsExpirationdate' on this record model
        """
        self.set_field_value(self.SBSEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_SbsExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsExpirationdate' from this record model
        """
        return self.get_field_value(self.SBSEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_SbsLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsLotNumber' on this record model
        """
        self.set_field_value(self.SBSLOTNUMBER__FIELD_NAME.field_name, value)

    def get_SbsLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsLotNumber' from this record model
        """
        return self.get_field_value(self.SBSLOTNUMBER__FIELD_NAME.field_name)

    def set_SbsNumberOfCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsNumberOfCyclesRemaining' on this record model
        """
        self.set_field_value(self.SBSNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_SbsNumberOfCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsNumberOfCyclesRemaining' from this record model
        """
        return self.get_field_value(self.SBSNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name)

    def set_SbsNumberOfCyclesSupported_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsNumberOfCyclesSupported' on this record model
        """
        self.set_field_value(self.SBSNUMBEROFCYCLESSUPPORTED__FIELD_NAME.field_name, value)

    def get_SbsNumberOfCyclesSupported_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsNumberOfCyclesSupported' from this record model
        """
        return self.get_field_value(self.SBSNUMBEROFCYCLESSUPPORTED__FIELD_NAME.field_name)

    def set_SbsPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsPartNumber' on this record model
        """
        self.set_field_value(self.SBSPARTNUMBER__FIELD_NAME.field_name, value)

    def get_SbsPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsPartNumber' from this record model
        """
        return self.get_field_value(self.SBSPARTNUMBER__FIELD_NAME.field_name)

    def set_SbsRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsRssi' on this record model
        """
        self.set_field_value(self.SBSRSSI__FIELD_NAME.field_name, value)

    def get_SbsRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsRssi' from this record model
        """
        return self.get_field_value(self.SBSRSSI__FIELD_NAME.field_name)

    def set_SbsSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSerialBarcode' on this record model
        """
        self.set_field_value(self.SBSSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_SbsSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSerialBarcode' from this record model
        """
        return self.get_field_value(self.SBSSERIALBARCODE__FIELD_NAME.field_name)

    def set_SbsStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsStartDate' on this record model
        """
        self.set_field_value(self.SBSSTARTDATE__FIELD_NAME.field_name, value)

    def get_SbsStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsStartDate' from this record model
        """
        return self.get_field_value(self.SBSSTARTDATE__FIELD_NAME.field_name)

    def set_SbsSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSupportedModes' on this record model
        """
        self.set_field_value(self.SBSSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_SbsSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSupportedModes' from this record model
        """
        return self.get_field_value(self.SBSSUPPORTEDMODES__FIELD_NAME.field_name)

    def set_SendIlluminaHealthData_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SendIlluminaHealthData' on this record model
        """
        self.set_field_value(self.SENDILLUMINAHEALTHDATA__FIELD_NAME.field_name, value)

    def get_SendIlluminaHealthData_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SendIlluminaHealthData' from this record model
        """
        return self.get_field_value(self.SENDILLUMINAHEALTHDATA__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_Surface_field(self, value: Optional[str]):
        """
        Set data field with field name 'Surface' on this record model
        """
        self.set_field_value(self.SURFACE__FIELD_NAME.field_name, value)

    def get_Surface_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Surface' from this record model
        """
        return self.get_field_value(self.SURFACE__FIELD_NAME.field_name)

    def set_UcsRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'UcsRunId' on this record model
        """
        self.set_field_value(self.UCSRUNID__FIELD_NAME.field_name, value)

    def get_UcsRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UcsRunId' from this record model
        """
        return self.get_field_value(self.UCSRUNID__FIELD_NAME.field_name)

    def set_UcsVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'UcsVersion' on this record model
        """
        self.set_field_value(self.UCSVERSION__FIELD_NAME.field_name, value)

    def get_UcsVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UcsVersion' from this record model
        """
        return self.get_field_value(self.UCSVERSION__FIELD_NAME.field_name)

    def set_UseCustomIndexRead1Primer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomIndexRead1Primer' on this record model
        """
        self.set_field_value(self.USECUSTOMINDEXREAD1PRIMER__FIELD_NAME.field_name, value)

    def get_UseCustomIndexRead1Primer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomIndexRead1Primer' from this record model
        """
        return self.get_field_value(self.USECUSTOMINDEXREAD1PRIMER__FIELD_NAME.field_name)

    def set_UseCustomRead1Primer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomRead1Primer' on this record model
        """
        self.set_field_value(self.USECUSTOMREAD1PRIMER__FIELD_NAME.field_name, value)

    def get_UseCustomRead1Primer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomRead1Primer' from this record model
        """
        return self.get_field_value(self.USECUSTOMREAD1PRIMER__FIELD_NAME.field_name)

    def set_UseCustomRead2Primer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomRead2Primer' on this record model
        """
        self.set_field_value(self.USECUSTOMREAD2PRIMER__FIELD_NAME.field_name, value)

    def get_UseCustomRead2Primer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomRead2Primer' from this record model
        """
        return self.get_field_value(self.USECUSTOMREAD2PRIMER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaNovaSeqSSSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNovaSeqSSSettings
    Data Type Display Name: Illumina NovaSeq Sample Sheet Settings (Illumina NovaSeq Sample Sheet Settings)
    Fields: Adapter, AdapterRead2, AdapterTrimmingStringency, Assay, CreatedBy, CustomIndexPrimerMix, CustomRead1PrimerMix, CustomRead2PrimerMix, CyclesRead1, CyclesRead2, DataRecordName, DateCreated, DateUnix, Description, ExperimentName, FilterOutSingleStrandVariants, IndexReads, InvestigatorName, PercentTilesToScan, QualityScoreTrim, ReadType, ReagentCartridgeBarcode, StitchReads, VeloxLastModifiedBy, VeloxLastModifiedDate, Workflow
    """
    DATA_TYPE_NAME: str = 'IlluminaNovaSeqSSSettings'
    ADAPTER__FIELD_NAME: WrapperField = WrapperField("Adapter", FieldType.STRING)
    ADAPTERREAD2__FIELD_NAME: WrapperField = WrapperField("AdapterRead2", FieldType.STRING)
    ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME: WrapperField = WrapperField("AdapterTrimmingStringency", FieldType.STRING)
    ASSAY__FIELD_NAME: WrapperField = WrapperField("Assay", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMINDEXPRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomIndexPrimerMix", FieldType.STRING)
    CUSTOMREAD1PRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomRead1PrimerMix", FieldType.STRING)
    CUSTOMREAD2PRIMERMIX__FIELD_NAME: WrapperField = WrapperField("CustomRead2PrimerMix", FieldType.STRING)
    CYCLESREAD1__FIELD_NAME: WrapperField = WrapperField("CyclesRead1", FieldType.INTEGER)
    CYCLESREAD2__FIELD_NAME: WrapperField = WrapperField("CyclesRead2", FieldType.INTEGER)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEUNIX__FIELD_NAME: WrapperField = WrapperField("DateUnix", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME: WrapperField = WrapperField("FilterOutSingleStrandVariants", FieldType.STRING)
    INDEXREADS__FIELD_NAME: WrapperField = WrapperField("IndexReads", FieldType.SHORT)
    INVESTIGATORNAME__FIELD_NAME: WrapperField = WrapperField("InvestigatorName", FieldType.STRING)
    PERCENTTILESTOSCAN__FIELD_NAME: WrapperField = WrapperField("PercentTilesToScan", FieldType.STRING)
    QUALITYSCORETRIM__FIELD_NAME: WrapperField = WrapperField("QualityScoreTrim", FieldType.STRING)
    READTYPE__FIELD_NAME: WrapperField = WrapperField("ReadType", FieldType.PICKLIST)
    REAGENTCARTRIDGEBARCODE__FIELD_NAME: WrapperField = WrapperField("ReagentCartridgeBarcode", FieldType.STRING)
    STITCHREADS__FIELD_NAME: WrapperField = WrapperField("StitchReads", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOW__FIELD_NAME: WrapperField = WrapperField("Workflow", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Adapter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Adapter' on this record model
        """
        self.set_field_value(self.ADAPTER__FIELD_NAME.field_name, value)

    def get_Adapter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Adapter' from this record model
        """
        return self.get_field_value(self.ADAPTER__FIELD_NAME.field_name)

    def set_AdapterRead2_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterRead2' on this record model
        """
        self.set_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name, value)

    def get_AdapterRead2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterRead2' from this record model
        """
        return self.get_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name)

    def set_AdapterTrimmingStringency_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterTrimmingStringency' on this record model
        """
        self.set_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name, value)

    def get_AdapterTrimmingStringency_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterTrimmingStringency' from this record model
        """
        return self.get_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomIndexPrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndexPrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomIndexPrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndexPrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead1PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead1PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead2PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead2PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name)

    def set_CyclesRead1_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead1' on this record model
        """
        self.set_field_value(self.CYCLESREAD1__FIELD_NAME.field_name, value)

    def get_CyclesRead1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead1' from this record model
        """
        return self.get_field_value(self.CYCLESREAD1__FIELD_NAME.field_name)

    def set_CyclesRead2_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead2' on this record model
        """
        self.set_field_value(self.CYCLESREAD2__FIELD_NAME.field_name, value)

    def get_CyclesRead2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead2' from this record model
        """
        return self.get_field_value(self.CYCLESREAD2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateUnix_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateUnix' on this record model
        """
        self.set_field_value(self.DATEUNIX__FIELD_NAME.field_name, value)

    def get_DateUnix_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateUnix' from this record model
        """
        return self.get_field_value(self.DATEUNIX__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FilterOutSingleStrandVariants_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilterOutSingleStrandVariants' on this record model
        """
        self.set_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name, value)

    def get_FilterOutSingleStrandVariants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilterOutSingleStrandVariants' from this record model
        """
        return self.get_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name)

    def set_IndexReads_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexReads' on this record model
        """
        self.set_field_value(self.INDEXREADS__FIELD_NAME.field_name, value)

    def get_IndexReads_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexReads' from this record model
        """
        return self.get_field_value(self.INDEXREADS__FIELD_NAME.field_name)

    def set_InvestigatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InvestigatorName' on this record model
        """
        self.set_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name, value)

    def get_InvestigatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InvestigatorName' from this record model
        """
        return self.get_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name)

    def set_PercentTilesToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'PercentTilesToScan' on this record model
        """
        self.set_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name, value)

    def get_PercentTilesToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PercentTilesToScan' from this record model
        """
        return self.get_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name)

    def set_QualityScoreTrim_field(self, value: Optional[str]):
        """
        Set data field with field name 'QualityScoreTrim' on this record model
        """
        self.set_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name, value)

    def get_QualityScoreTrim_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QualityScoreTrim' from this record model
        """
        return self.get_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_ReagentCartridgeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentCartridgeBarcode' on this record model
        """
        self.set_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name, value)

    def get_ReagentCartridgeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentCartridgeBarcode' from this record model
        """
        return self.get_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name)

    def set_StitchReads_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StitchReads' on this record model
        """
        self.set_field_value(self.STITCHREADS__FIELD_NAME.field_name, value)

    def get_StitchReads_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StitchReads' from this record model
        """
        return self.get_field_value(self.STITCHREADS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Workflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'Workflow' on this record model
        """
        self.set_field_value(self.WORKFLOW__FIELD_NAME.field_name, value)

    def get_Workflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Workflow' from this record model
        """
        return self.get_field_value(self.WORKFLOW__FIELD_NAME.field_name)


class IlluminaNovaSeqXRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNovaSeqXRunParameters
    Data Type Display Name: Illumina NovaSeq X Run Parameter (Illumina NovaSeq X Run Parameters)
    Fields: Application, CloudUploadMode, CreatedBy, DataRecordName, DateCreated, ExperimentName, FlowCellName, FlowCellType, InstrumentSerialNumber, InstrumentType, OutputFolder, RecipeName, RecipeVersion, RunCounter, RunId, ScanSpeedMmPerSec, Side, SystemSuiteVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IlluminaNovaSeqXRunParameters'
    APPLICATION__FIELD_NAME: WrapperField = WrapperField("Application", FieldType.STRING)
    CLOUDUPLOADMODE__FIELD_NAME: WrapperField = WrapperField("CloudUploadMode", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FLOWCELLNAME__FIELD_NAME: WrapperField = WrapperField("FlowCellName", FieldType.STRING)
    FLOWCELLTYPE__FIELD_NAME: WrapperField = WrapperField("FlowCellType", FieldType.STRING)
    INSTRUMENTSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("InstrumentSerialNumber", FieldType.STRING)
    INSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("InstrumentType", FieldType.STRING)
    OUTPUTFOLDER__FIELD_NAME: WrapperField = WrapperField("OutputFolder", FieldType.STRING)
    RECIPENAME__FIELD_NAME: WrapperField = WrapperField("RecipeName", FieldType.STRING)
    RECIPEVERSION__FIELD_NAME: WrapperField = WrapperField("RecipeVersion", FieldType.STRING)
    RUNCOUNTER__FIELD_NAME: WrapperField = WrapperField("RunCounter", FieldType.INTEGER)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunId", FieldType.STRING)
    SCANSPEEDMMPERSEC__FIELD_NAME: WrapperField = WrapperField("ScanSpeedMmPerSec", FieldType.DOUBLE)
    SIDE__FIELD_NAME: WrapperField = WrapperField("Side", FieldType.STRING)
    SYSTEMSUITEVERSION__FIELD_NAME: WrapperField = WrapperField("SystemSuiteVersion", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Application_field(self, value: Optional[str]):
        """
        Set data field with field name 'Application' on this record model
        """
        self.set_field_value(self.APPLICATION__FIELD_NAME.field_name, value)

    def get_Application_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Application' from this record model
        """
        return self.get_field_value(self.APPLICATION__FIELD_NAME.field_name)

    def set_CloudUploadMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'CloudUploadMode' on this record model
        """
        self.set_field_value(self.CLOUDUPLOADMODE__FIELD_NAME.field_name, value)

    def get_CloudUploadMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CloudUploadMode' from this record model
        """
        return self.get_field_value(self.CLOUDUPLOADMODE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellName' on this record model
        """
        self.set_field_value(self.FLOWCELLNAME__FIELD_NAME.field_name, value)

    def get_FlowCellName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellName' from this record model
        """
        return self.get_field_value(self.FLOWCELLNAME__FIELD_NAME.field_name)

    def set_FlowCellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellType' on this record model
        """
        self.set_field_value(self.FLOWCELLTYPE__FIELD_NAME.field_name, value)

    def get_FlowCellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellType' from this record model
        """
        return self.get_field_value(self.FLOWCELLTYPE__FIELD_NAME.field_name)

    def set_InstrumentSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentSerialNumber' on this record model
        """
        self.set_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_InstrumentSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentSerialNumber' from this record model
        """
        return self.get_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_RecipeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeName' on this record model
        """
        self.set_field_value(self.RECIPENAME__FIELD_NAME.field_name, value)

    def get_RecipeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeName' from this record model
        """
        return self.get_field_value(self.RECIPENAME__FIELD_NAME.field_name)

    def set_RecipeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeVersion' on this record model
        """
        self.set_field_value(self.RECIPEVERSION__FIELD_NAME.field_name, value)

    def get_RecipeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeVersion' from this record model
        """
        return self.get_field_value(self.RECIPEVERSION__FIELD_NAME.field_name)

    def set_RunCounter_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunCounter' on this record model
        """
        self.set_field_value(self.RUNCOUNTER__FIELD_NAME.field_name, value)

    def get_RunCounter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunCounter' from this record model
        """
        return self.get_field_value(self.RUNCOUNTER__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_ScanSpeedMmPerSec_field(self, value: Optional[float]):
        """
        Set data field with field name 'ScanSpeedMmPerSec' on this record model
        """
        self.set_field_value(self.SCANSPEEDMMPERSEC__FIELD_NAME.field_name, value)

    def get_ScanSpeedMmPerSec_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ScanSpeedMmPerSec' from this record model
        """
        return self.get_field_value(self.SCANSPEEDMMPERSEC__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_SystemSuiteVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'SystemSuiteVersion' on this record model
        """
        self.set_field_value(self.SYSTEMSUITEVERSION__FIELD_NAME.field_name, value)

    def get_SystemSuiteVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SystemSuiteVersion' from this record model
        """
        return self.get_field_value(self.SYSTEMSUITEVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqExperimentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqExperiment
    Data Type Display Name: Illumina Sequencing Experiment (Illumina Sequencing Experiments)
    Fields: ActiveWorkflowId, CanEditRunMode, cBotReagentPlateBarcode, cBotReagentPlateQuantity, ClusterWithCBot, Comments, CreatedBy, DataRecordName, DateCompleted, DateCreated, ExperimentId, ExperimentName, FlowcellId, PhiXLibraryBarcode, PhiXLibraryVolume, RunCompleted, RunId, SequencerInstrument, SequencerRunDate, SequencerRunFolder, SequencingRunMode, SequencingRunType, Side, TimeCompleted, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IlluminaSeqExperiment'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    CANEDITRUNMODE__FIELD_NAME: WrapperField = WrapperField("CanEditRunMode", FieldType.BOOLEAN)
    CBOTREAGENTPLATEBARCODE__FIELD_NAME: WrapperField = WrapperField("cBotReagentPlateBarcode", FieldType.STRING)
    CBOTREAGENTPLATEQUANTITY__FIELD_NAME: WrapperField = WrapperField("cBotReagentPlateQuantity", FieldType.DOUBLE)
    CLUSTERWITHCBOT__FIELD_NAME: WrapperField = WrapperField("ClusterWithCBot", FieldType.BOOLEAN)
    COMMENTS__FIELD_NAME: WrapperField = WrapperField("Comments", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECOMPLETED__FIELD_NAME: WrapperField = WrapperField("DateCompleted", FieldType.DATE)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPERIMENTID__FIELD_NAME: WrapperField = WrapperField("ExperimentId", FieldType.STRING)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FLOWCELLID__FIELD_NAME: WrapperField = WrapperField("FlowcellId", FieldType.STRING)
    PHIXLIBRARYBARCODE__FIELD_NAME: WrapperField = WrapperField("PhiXLibraryBarcode", FieldType.SELECTION)
    PHIXLIBRARYVOLUME__FIELD_NAME: WrapperField = WrapperField("PhiXLibraryVolume", FieldType.DOUBLE)
    RUNCOMPLETED__FIELD_NAME: WrapperField = WrapperField("RunCompleted", FieldType.BOOLEAN)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunId", FieldType.STRING)
    SEQUENCERINSTRUMENT__FIELD_NAME: WrapperField = WrapperField("SequencerInstrument", FieldType.SELECTION)
    SEQUENCERRUNDATE__FIELD_NAME: WrapperField = WrapperField("SequencerRunDate", FieldType.DATE)
    SEQUENCERRUNFOLDER__FIELD_NAME: WrapperField = WrapperField("SequencerRunFolder", FieldType.STRING)
    SEQUENCINGRUNMODE__FIELD_NAME: WrapperField = WrapperField("SequencingRunMode", FieldType.PICKLIST)
    SEQUENCINGRUNTYPE__FIELD_NAME: WrapperField = WrapperField("SequencingRunType", FieldType.PICKLIST)
    SIDE__FIELD_NAME: WrapperField = WrapperField("Side", FieldType.STRING)
    TIMECOMPLETED__FIELD_NAME: WrapperField = WrapperField("TimeCompleted", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_CanEditRunMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanEditRunMode' on this record model
        """
        self.set_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name, value)

    def get_CanEditRunMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanEditRunMode' from this record model
        """
        return self.get_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name)

    def set_cBotReagentPlateBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'cBotReagentPlateBarcode' on this record model
        """
        self.set_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name, value)

    def get_cBotReagentPlateBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'cBotReagentPlateBarcode' from this record model
        """
        return self.get_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name)

    def set_cBotReagentPlateQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'cBotReagentPlateQuantity' on this record model
        """
        self.set_field_value(self.CBOTREAGENTPLATEQUANTITY__FIELD_NAME.field_name, value)

    def get_cBotReagentPlateQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cBotReagentPlateQuantity' from this record model
        """
        return self.get_field_value(self.CBOTREAGENTPLATEQUANTITY__FIELD_NAME.field_name)

    def set_ClusterWithCBot_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ClusterWithCBot' on this record model
        """
        self.set_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name, value)

    def get_ClusterWithCBot_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ClusterWithCBot' from this record model
        """
        return self.get_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_PhiXLibraryBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PhiXLibraryBarcode' on this record model
        """
        self.set_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name, value)

    def get_PhiXLibraryBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PhiXLibraryBarcode' from this record model
        """
        return self.get_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name)

    def set_PhiXLibraryVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'PhiXLibraryVolume' on this record model
        """
        self.set_field_value(self.PHIXLIBRARYVOLUME__FIELD_NAME.field_name, value)

    def get_PhiXLibraryVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PhiXLibraryVolume' from this record model
        """
        return self.get_field_value(self.PHIXLIBRARYVOLUME__FIELD_NAME.field_name)

    def set_RunCompleted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RunCompleted' on this record model
        """
        self.set_field_value(self.RUNCOMPLETED__FIELD_NAME.field_name, value)

    def get_RunCompleted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RunCompleted' from this record model
        """
        return self.get_field_value(self.RUNCOMPLETED__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_SequencerInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerInstrument' on this record model
        """
        self.set_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name, value)

    def get_SequencerInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerInstrument' from this record model
        """
        return self.get_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name)

    def set_SequencerRunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SequencerRunDate' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNDATE__FIELD_NAME.field_name, value)

    def get_SequencerRunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SequencerRunDate' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNDATE__FIELD_NAME.field_name)

    def set_SequencerRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerRunFolder' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name, value)

    def get_SequencerRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerRunFolder' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name)

    def set_SequencingRunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunMode' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name, value)

    def get_SequencingRunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunMode' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name)

    def set_SequencingRunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunType' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNTYPE__FIELD_NAME.field_name, value)

    def get_SequencingRunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunType' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNTYPE__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_TimeCompleted_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeCompleted' on this record model
        """
        self.set_field_value(self.TIMECOMPLETED__FIELD_NAME.field_name, value)

    def get_TimeCompleted_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeCompleted' from this record model
        """
        return self.get_field_value(self.TIMECOMPLETED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqProtocol1Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqProtocol1
    Data Type Display Name: Illumina Seq Normalization Protocol (Illumina Seq Normalization Protocols)
    Fields: ActiveWorkflowId, Aliq1StartingConcentration, Aliq1StartingVolume, Aliq1TargetConcentration, Aliq1TargetVolume, CreatedBy, DataRecordName, DateCreated, ExistingPlateRecordId, ExperimentId, ExperimentRecordId, ExperimentType, InputLibMolarity, InputLibVolToUse, OtherSampleId, SampleId, TwoNmHt1ToUse, TwoNmMolarity, TwoNmTargetVolume, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IlluminaSeqProtocol1'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    ALIQ1STARTINGCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Aliq1StartingConcentration", FieldType.DOUBLE)
    ALIQ1STARTINGVOLUME__FIELD_NAME: WrapperField = WrapperField("Aliq1StartingVolume", FieldType.DOUBLE)
    ALIQ1TARGETCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Aliq1TargetConcentration", FieldType.DOUBLE)
    ALIQ1TARGETVOLUME__FIELD_NAME: WrapperField = WrapperField("Aliq1TargetVolume", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXISTINGPLATERECORDID__FIELD_NAME: WrapperField = WrapperField("ExistingPlateRecordId", FieldType.LONG)
    EXPERIMENTID__FIELD_NAME: WrapperField = WrapperField("ExperimentId", FieldType.STRING)
    EXPERIMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("ExperimentRecordId", FieldType.LONG)
    EXPERIMENTTYPE__FIELD_NAME: WrapperField = WrapperField("ExperimentType", FieldType.STRING)
    INPUTLIBMOLARITY__FIELD_NAME: WrapperField = WrapperField("InputLibMolarity", FieldType.DOUBLE)
    INPUTLIBVOLTOUSE__FIELD_NAME: WrapperField = WrapperField("InputLibVolToUse", FieldType.DOUBLE)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    TWONMHT1TOUSE__FIELD_NAME: WrapperField = WrapperField("TwoNmHt1ToUse", FieldType.DOUBLE)
    TWONMMOLARITY__FIELD_NAME: WrapperField = WrapperField("TwoNmMolarity", FieldType.DOUBLE)
    TWONMTARGETVOLUME__FIELD_NAME: WrapperField = WrapperField("TwoNmTargetVolume", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_Aliq1StartingConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1StartingConcentration' on this record model
        """
        self.set_field_value(self.ALIQ1STARTINGCONCENTRATION__FIELD_NAME.field_name, value)

    def get_Aliq1StartingConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1StartingConcentration' from this record model
        """
        return self.get_field_value(self.ALIQ1STARTINGCONCENTRATION__FIELD_NAME.field_name)

    def set_Aliq1StartingVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1StartingVolume' on this record model
        """
        self.set_field_value(self.ALIQ1STARTINGVOLUME__FIELD_NAME.field_name, value)

    def get_Aliq1StartingVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1StartingVolume' from this record model
        """
        return self.get_field_value(self.ALIQ1STARTINGVOLUME__FIELD_NAME.field_name)

    def set_Aliq1TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1TargetConcentration' on this record model
        """
        self.set_field_value(self.ALIQ1TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_Aliq1TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1TargetConcentration' from this record model
        """
        return self.get_field_value(self.ALIQ1TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_Aliq1TargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1TargetVolume' on this record model
        """
        self.set_field_value(self.ALIQ1TARGETVOLUME__FIELD_NAME.field_name, value)

    def get_Aliq1TargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1TargetVolume' from this record model
        """
        return self.get_field_value(self.ALIQ1TARGETVOLUME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExistingPlateRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExistingPlateRecordId' on this record model
        """
        self.set_field_value(self.EXISTINGPLATERECORDID__FIELD_NAME.field_name, value)

    def get_ExistingPlateRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExistingPlateRecordId' from this record model
        """
        return self.get_field_value(self.EXISTINGPLATERECORDID__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_InputLibMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'InputLibMolarity' on this record model
        """
        self.set_field_value(self.INPUTLIBMOLARITY__FIELD_NAME.field_name, value)

    def get_InputLibMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InputLibMolarity' from this record model
        """
        return self.get_field_value(self.INPUTLIBMOLARITY__FIELD_NAME.field_name)

    def set_InputLibVolToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'InputLibVolToUse' on this record model
        """
        self.set_field_value(self.INPUTLIBVOLTOUSE__FIELD_NAME.field_name, value)

    def get_InputLibVolToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InputLibVolToUse' from this record model
        """
        return self.get_field_value(self.INPUTLIBVOLTOUSE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_TwoNmHt1ToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmHt1ToUse' on this record model
        """
        self.set_field_value(self.TWONMHT1TOUSE__FIELD_NAME.field_name, value)

    def get_TwoNmHt1ToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmHt1ToUse' from this record model
        """
        return self.get_field_value(self.TWONMHT1TOUSE__FIELD_NAME.field_name)

    def set_TwoNmMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmMolarity' on this record model
        """
        self.set_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name, value)

    def get_TwoNmMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmMolarity' from this record model
        """
        return self.get_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name)

    def set_TwoNmTargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmTargetVolume' on this record model
        """
        self.set_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TwoNmTargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmTargetVolume' from this record model
        """
        return self.get_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqProtocol2Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqProtocol2
    Data Type Display Name: Illumina Seq Denaturing Protocol (Illumina Seq Denaturing Protocols)
    Fields: ActiveWorkflowId, CreatedBy, DataRecordName, DateCreated, DenaturedTubeConc, DenaturedTubeVolume, DenatureHT1ToUse, DenatureNaOHToUse, DenatureNormdWellToRmv, ExperimentId, ExperimentRecordId, ExperimentType, OtherSampleId, SampleId, TwoNmMolarity, TwoNmTargetVolume, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IlluminaSeqProtocol2'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DENATUREDTUBECONC__FIELD_NAME: WrapperField = WrapperField("DenaturedTubeConc", FieldType.DOUBLE)
    DENATUREDTUBEVOLUME__FIELD_NAME: WrapperField = WrapperField("DenaturedTubeVolume", FieldType.DOUBLE)
    DENATUREHT1TOUSE__FIELD_NAME: WrapperField = WrapperField("DenatureHT1ToUse", FieldType.DOUBLE)
    DENATURENAOHTOUSE__FIELD_NAME: WrapperField = WrapperField("DenatureNaOHToUse", FieldType.DOUBLE)
    DENATURENORMDWELLTORMV__FIELD_NAME: WrapperField = WrapperField("DenatureNormdWellToRmv", FieldType.DOUBLE)
    EXPERIMENTID__FIELD_NAME: WrapperField = WrapperField("ExperimentId", FieldType.STRING)
    EXPERIMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("ExperimentRecordId", FieldType.LONG)
    EXPERIMENTTYPE__FIELD_NAME: WrapperField = WrapperField("ExperimentType", FieldType.STRING)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    TWONMMOLARITY__FIELD_NAME: WrapperField = WrapperField("TwoNmMolarity", FieldType.DOUBLE)
    TWONMTARGETVOLUME__FIELD_NAME: WrapperField = WrapperField("TwoNmTargetVolume", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DenaturedTubeConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeConc' on this record model
        """
        self.set_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name, value)

    def get_DenaturedTubeConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeConc' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name)

    def set_DenaturedTubeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeVolume' on this record model
        """
        self.set_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name, value)

    def get_DenaturedTubeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeVolume' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name)

    def set_DenatureHT1ToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenatureHT1ToUse' on this record model
        """
        self.set_field_value(self.DENATUREHT1TOUSE__FIELD_NAME.field_name, value)

    def get_DenatureHT1ToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenatureHT1ToUse' from this record model
        """
        return self.get_field_value(self.DENATUREHT1TOUSE__FIELD_NAME.field_name)

    def set_DenatureNaOHToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenatureNaOHToUse' on this record model
        """
        self.set_field_value(self.DENATURENAOHTOUSE__FIELD_NAME.field_name, value)

    def get_DenatureNaOHToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenatureNaOHToUse' from this record model
        """
        return self.get_field_value(self.DENATURENAOHTOUSE__FIELD_NAME.field_name)

    def set_DenatureNormdWellToRmv_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenatureNormdWellToRmv' on this record model
        """
        self.set_field_value(self.DENATURENORMDWELLTORMV__FIELD_NAME.field_name, value)

    def get_DenatureNormdWellToRmv_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenatureNormdWellToRmv' from this record model
        """
        return self.get_field_value(self.DENATURENORMDWELLTORMV__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_TwoNmMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmMolarity' on this record model
        """
        self.set_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name, value)

    def get_TwoNmMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmMolarity' from this record model
        """
        return self.get_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name)

    def set_TwoNmTargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmTargetVolume' on this record model
        """
        self.set_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TwoNmTargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmTargetVolume' from this record model
        """
        return self.get_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqProtocol3Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqProtocol3
    Data Type Display Name: Illumina Seq Final Protocol (Illumina Seq Final Protocols)
    Fields: ActiveWorkflowId, cBotReagentPlateBarcode, CreatedBy, DataRecordName, DateCreated, DenaturedTubeConc, DenaturedTubeVolume, DilutedDNAConcentration, DilutedDNAVolume, DiluteDenaturedDNAVol, DiluteHT1VolToUse, ExperimentId, ExperimentRecordId, ExperimentType, IndexSerialNumber, OtherSampleId, PeSerialNumber, PhiXLibraryBarcode, SampleId, SbsSerialNumber, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IlluminaSeqProtocol3'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    CBOTREAGENTPLATEBARCODE__FIELD_NAME: WrapperField = WrapperField("cBotReagentPlateBarcode", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DENATUREDTUBECONC__FIELD_NAME: WrapperField = WrapperField("DenaturedTubeConc", FieldType.DOUBLE)
    DENATUREDTUBEVOLUME__FIELD_NAME: WrapperField = WrapperField("DenaturedTubeVolume", FieldType.DOUBLE)
    DILUTEDDNACONCENTRATION__FIELD_NAME: WrapperField = WrapperField("DilutedDNAConcentration", FieldType.DOUBLE)
    DILUTEDDNAVOLUME__FIELD_NAME: WrapperField = WrapperField("DilutedDNAVolume", FieldType.DOUBLE)
    DILUTEDENATUREDDNAVOL__FIELD_NAME: WrapperField = WrapperField("DiluteDenaturedDNAVol", FieldType.DOUBLE)
    DILUTEHT1VOLTOUSE__FIELD_NAME: WrapperField = WrapperField("DiluteHT1VolToUse", FieldType.DOUBLE)
    EXPERIMENTID__FIELD_NAME: WrapperField = WrapperField("ExperimentId", FieldType.STRING)
    EXPERIMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("ExperimentRecordId", FieldType.LONG)
    EXPERIMENTTYPE__FIELD_NAME: WrapperField = WrapperField("ExperimentType", FieldType.STRING)
    INDEXSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("IndexSerialNumber", FieldType.SELECTION)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    PESERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("PeSerialNumber", FieldType.SELECTION)
    PHIXLIBRARYBARCODE__FIELD_NAME: WrapperField = WrapperField("PhiXLibraryBarcode", FieldType.SELECTION)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SBSSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("SbsSerialNumber", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_cBotReagentPlateBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'cBotReagentPlateBarcode' on this record model
        """
        self.set_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name, value)

    def get_cBotReagentPlateBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'cBotReagentPlateBarcode' from this record model
        """
        return self.get_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DenaturedTubeConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeConc' on this record model
        """
        self.set_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name, value)

    def get_DenaturedTubeConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeConc' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name)

    def set_DenaturedTubeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeVolume' on this record model
        """
        self.set_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name, value)

    def get_DenaturedTubeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeVolume' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name)

    def set_DilutedDNAConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutedDNAConcentration' on this record model
        """
        self.set_field_value(self.DILUTEDDNACONCENTRATION__FIELD_NAME.field_name, value)

    def get_DilutedDNAConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutedDNAConcentration' from this record model
        """
        return self.get_field_value(self.DILUTEDDNACONCENTRATION__FIELD_NAME.field_name)

    def set_DilutedDNAVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutedDNAVolume' on this record model
        """
        self.set_field_value(self.DILUTEDDNAVOLUME__FIELD_NAME.field_name, value)

    def get_DilutedDNAVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutedDNAVolume' from this record model
        """
        return self.get_field_value(self.DILUTEDDNAVOLUME__FIELD_NAME.field_name)

    def set_DiluteDenaturedDNAVol_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiluteDenaturedDNAVol' on this record model
        """
        self.set_field_value(self.DILUTEDENATUREDDNAVOL__FIELD_NAME.field_name, value)

    def get_DiluteDenaturedDNAVol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiluteDenaturedDNAVol' from this record model
        """
        return self.get_field_value(self.DILUTEDENATUREDDNAVOL__FIELD_NAME.field_name)

    def set_DiluteHT1VolToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiluteHT1VolToUse' on this record model
        """
        self.set_field_value(self.DILUTEHT1VOLTOUSE__FIELD_NAME.field_name, value)

    def get_DiluteHT1VolToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiluteHT1VolToUse' from this record model
        """
        return self.get_field_value(self.DILUTEHT1VOLTOUSE__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_IndexSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSerialNumber' on this record model
        """
        self.set_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_IndexSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSerialNumber' from this record model
        """
        return self.get_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PeSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeSerialNumber' on this record model
        """
        self.set_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_PeSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeSerialNumber' from this record model
        """
        return self.get_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name)

    def set_PhiXLibraryBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PhiXLibraryBarcode' on this record model
        """
        self.set_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name, value)

    def get_PhiXLibraryBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PhiXLibraryBarcode' from this record model
        """
        return self.get_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SbsSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSerialNumber' on this record model
        """
        self.set_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SbsSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSerialNumber' from this record model
        """
        return self.get_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSequenceStatusModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSequenceStatus
    Data Type Display Name: Illumina Sequencing Status (Illumina Sequencing Statuses)
    Fields: CreatedBy, CurrentRead, CyclesCompleted, DataRecordName, DateCreated, DateOfRun, DateOfUpdate, FlowcellId, InstrumentId, LaneCount, ReadIndexed, RunId, RunNumber, SurfaceCount, SwathCount, TileCount, TimeOfRun, TimeOfUpdate, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IlluminaSequenceStatus'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CURRENTREAD__FIELD_NAME: WrapperField = WrapperField("CurrentRead", FieldType.LONG)
    CYCLESCOMPLETED__FIELD_NAME: WrapperField = WrapperField("CyclesCompleted", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEOFRUN__FIELD_NAME: WrapperField = WrapperField("DateOfRun", FieldType.DATE)
    DATEOFUPDATE__FIELD_NAME: WrapperField = WrapperField("DateOfUpdate", FieldType.DATE)
    FLOWCELLID__FIELD_NAME: WrapperField = WrapperField("FlowcellId", FieldType.STRING)
    INSTRUMENTID__FIELD_NAME: WrapperField = WrapperField("InstrumentId", FieldType.STRING)
    LANECOUNT__FIELD_NAME: WrapperField = WrapperField("LaneCount", FieldType.LONG)
    READINDEXED__FIELD_NAME: WrapperField = WrapperField("ReadIndexed", FieldType.BOOLEAN)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunId", FieldType.STRING)
    RUNNUMBER__FIELD_NAME: WrapperField = WrapperField("RunNumber", FieldType.LONG)
    SURFACECOUNT__FIELD_NAME: WrapperField = WrapperField("SurfaceCount", FieldType.INTEGER)
    SWATHCOUNT__FIELD_NAME: WrapperField = WrapperField("SwathCount", FieldType.LONG)
    TILECOUNT__FIELD_NAME: WrapperField = WrapperField("TileCount", FieldType.LONG)
    TIMEOFRUN__FIELD_NAME: WrapperField = WrapperField("TimeOfRun", FieldType.STRING)
    TIMEOFUPDATE__FIELD_NAME: WrapperField = WrapperField("TimeOfUpdate", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CurrentRead_field(self, value: Optional[int]):
        """
        Set data field with field name 'CurrentRead' on this record model
        """
        self.set_field_value(self.CURRENTREAD__FIELD_NAME.field_name, value)

    def get_CurrentRead_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CurrentRead' from this record model
        """
        return self.get_field_value(self.CURRENTREAD__FIELD_NAME.field_name)

    def set_CyclesCompleted_field(self, value: Optional[str]):
        """
        Set data field with field name 'CyclesCompleted' on this record model
        """
        self.set_field_value(self.CYCLESCOMPLETED__FIELD_NAME.field_name, value)

    def get_CyclesCompleted_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CyclesCompleted' from this record model
        """
        return self.get_field_value(self.CYCLESCOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateOfRun_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfRun' on this record model
        """
        self.set_field_value(self.DATEOFRUN__FIELD_NAME.field_name, value)

    def get_DateOfRun_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfRun' from this record model
        """
        return self.get_field_value(self.DATEOFRUN__FIELD_NAME.field_name)

    def set_DateOfUpdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfUpdate' on this record model
        """
        self.set_field_value(self.DATEOFUPDATE__FIELD_NAME.field_name, value)

    def get_DateOfUpdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfUpdate' from this record model
        """
        return self.get_field_value(self.DATEOFUPDATE__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_InstrumentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentId' on this record model
        """
        self.set_field_value(self.INSTRUMENTID__FIELD_NAME.field_name, value)

    def get_InstrumentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentId' from this record model
        """
        return self.get_field_value(self.INSTRUMENTID__FIELD_NAME.field_name)

    def set_LaneCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'LaneCount' on this record model
        """
        self.set_field_value(self.LANECOUNT__FIELD_NAME.field_name, value)

    def get_LaneCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LaneCount' from this record model
        """
        return self.get_field_value(self.LANECOUNT__FIELD_NAME.field_name)

    def set_ReadIndexed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReadIndexed' on this record model
        """
        self.set_field_value(self.READINDEXED__FIELD_NAME.field_name, value)

    def get_ReadIndexed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReadIndexed' from this record model
        """
        return self.get_field_value(self.READINDEXED__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_SurfaceCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'SurfaceCount' on this record model
        """
        self.set_field_value(self.SURFACECOUNT__FIELD_NAME.field_name, value)

    def get_SurfaceCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SurfaceCount' from this record model
        """
        return self.get_field_value(self.SURFACECOUNT__FIELD_NAME.field_name)

    def set_SwathCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'SwathCount' on this record model
        """
        self.set_field_value(self.SWATHCOUNT__FIELD_NAME.field_name, value)

    def get_SwathCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SwathCount' from this record model
        """
        return self.get_field_value(self.SWATHCOUNT__FIELD_NAME.field_name)

    def set_TileCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TileCount' on this record model
        """
        self.set_field_value(self.TILECOUNT__FIELD_NAME.field_name, value)

    def get_TileCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TileCount' from this record model
        """
        return self.get_field_value(self.TILECOUNT__FIELD_NAME.field_name)

    def set_TimeOfRun_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeOfRun' on this record model
        """
        self.set_field_value(self.TIMEOFRUN__FIELD_NAME.field_name, value)

    def get_TimeOfRun_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeOfRun' from this record model
        """
        return self.get_field_value(self.TIMEOFRUN__FIELD_NAME.field_name)

    def set_TimeOfUpdate_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeOfUpdate' on this record model
        """
        self.set_field_value(self.TIMEOFUPDATE__FIELD_NAME.field_name, value)

    def get_TimeOfUpdate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeOfUpdate' from this record model
        """
        return self.get_field_value(self.TIMEOFUPDATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ImageCaptureConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ImageCaptureConfig
    Data Type Display Name: Image Capture Configuration (Image Capture Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, ImageCaptureFileExtensions, ImageCaptureFileName, ImageCaptureFilePath, InputType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ImageCaptureConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME: WrapperField = WrapperField("ImageCaptureFileExtensions", FieldType.SELECTION)
    IMAGECAPTUREFILENAME__FIELD_NAME: WrapperField = WrapperField("ImageCaptureFileName", FieldType.STRING)
    IMAGECAPTUREFILEPATH__FIELD_NAME: WrapperField = WrapperField("ImageCaptureFilePath", FieldType.STRING)
    INPUTTYPE__FIELD_NAME: WrapperField = WrapperField("InputType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ImageCaptureFileExtensions_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureFileExtensions' on this record model
        """
        self.set_field_value(self.IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME.field_name, value)

    def get_ImageCaptureFileExtensions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureFileExtensions' from this record model
        """
        return self.get_field_value(self.IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME.field_name)

    def set_ImageCaptureFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureFileName' on this record model
        """
        self.set_field_value(self.IMAGECAPTUREFILENAME__FIELD_NAME.field_name, value)

    def get_ImageCaptureFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureFileName' from this record model
        """
        return self.get_field_value(self.IMAGECAPTUREFILENAME__FIELD_NAME.field_name)

    def set_ImageCaptureFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureFilePath' on this record model
        """
        self.set_field_value(self.IMAGECAPTUREFILEPATH__FIELD_NAME.field_name, value)

    def get_ImageCaptureFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureFilePath' from this record model
        """
        return self.get_field_value(self.IMAGECAPTUREFILEPATH__FIELD_NAME.field_name)

    def set_InputType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputType' on this record model
        """
        self.set_field_value(self.INPUTTYPE__FIELD_NAME.field_name, value)

    def get_InputType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputType' from this record model
        """
        return self.get_field_value(self.INPUTTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexAssignmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexAssignment
    Data Type Display Name: Index Assignment (Index Assignments)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, IndexId, IndexTag, IndexType, MultiParentLink200, MultiParentLink286, MultiplexInstructions, RowPosition, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IndexAssignment'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INDEXID__FIELD_NAME: WrapperField = WrapperField("IndexId", FieldType.STRING)
    INDEXTAG__FIELD_NAME: WrapperField = WrapperField("IndexTag", FieldType.STRING)
    INDEXTYPE__FIELD_NAME: WrapperField = WrapperField("IndexType", FieldType.PICKLIST)
    MULTIPARENTLINK200__FIELD_NAME: WrapperField = WrapperField("MultiParentLink200", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK286__FIELD_NAME: WrapperField = WrapperField("MultiParentLink286", FieldType.MULTIPARENTLINK)
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: WrapperField = WrapperField("MultiplexInstructions", FieldType.PICKLIST)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_IndexType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexType' on this record model
        """
        self.set_field_value(self.INDEXTYPE__FIELD_NAME.field_name, value)

    def get_IndexType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexType' from this record model
        """
        return self.get_field_value(self.INDEXTYPE__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexAssignmentBatchModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexAssignmentBatch
    Data Type Display Name: Index Assignment Batch (Index Assignment Batches)
    Fields: BatchSize, CreatedBy, DataRecordName, DateCreated, IndexSetName, IndexType, LastUsed, MultiplexInstructions, VeloxLastModifiedBy, VeloxLastModifiedDate
    A batch record that contains Index Assignment data records. This is used in providing support to Multiplexing specifications in index assignment.
    """
    DATA_TYPE_NAME: str = 'IndexAssignmentBatch'
    BATCHSIZE__FIELD_NAME: WrapperField = WrapperField("BatchSize", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INDEXSETNAME__FIELD_NAME: WrapperField = WrapperField("IndexSetName", FieldType.STRING)
    INDEXTYPE__FIELD_NAME: WrapperField = WrapperField("IndexType", FieldType.STRING)
    LASTUSED__FIELD_NAME: WrapperField = WrapperField("LastUsed", FieldType.BOOLEAN)
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: WrapperField = WrapperField("MultiplexInstructions", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BatchSize_field(self, value: Optional[int]):
        """
        Set data field with field name 'BatchSize' on this record model
        """
        self.set_field_value(self.BATCHSIZE__FIELD_NAME.field_name, value)

    def get_BatchSize_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BatchSize' from this record model
        """
        return self.get_field_value(self.BATCHSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexSetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSetName' on this record model
        """
        self.set_field_value(self.INDEXSETNAME__FIELD_NAME.field_name, value)

    def get_IndexSetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSetName' from this record model
        """
        return self.get_field_value(self.INDEXSETNAME__FIELD_NAME.field_name)

    def set_IndexType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexType' on this record model
        """
        self.set_field_value(self.INDEXTYPE__FIELD_NAME.field_name, value)

    def get_IndexType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexType' from this record model
        """
        return self.get_field_value(self.INDEXTYPE__FIELD_NAME.field_name)

    def set_LastUsed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LastUsed' on this record model
        """
        self.set_field_value(self.LASTUSED__FIELD_NAME.field_name, value)

    def get_LastUsed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LastUsed' from this record model
        """
        return self.get_field_value(self.LASTUSED__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexAssignmentTypeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexAssignmentType
    Data Type Display Name: Index Assignment Type (Index Assignment Types)
    Fields: CreatedBy, DataRecordName, DateCreated, IndexQty, IndexType, VeloxLastModifiedBy, VeloxLastModifiedDate
    A data record that encompasses multiple Index Assignment records and groups them into a single type.
    """
    DATA_TYPE_NAME: str = 'IndexAssignmentType'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INDEXQTY__FIELD_NAME: WrapperField = WrapperField("IndexQty", FieldType.LONG)
    INDEXTYPE__FIELD_NAME: WrapperField = WrapperField("IndexType", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexQty_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexQty' on this record model
        """
        self.set_field_value(self.INDEXQTY__FIELD_NAME.field_name, value)

    def get_IndexQty_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexQty' from this record model
        """
        return self.get_field_value(self.INDEXQTY__FIELD_NAME.field_name)

    def set_IndexType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexType' on this record model
        """
        self.set_field_value(self.INDEXTYPE__FIELD_NAME.field_name, value)

    def get_IndexType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexType' from this record model
        """
        return self.get_field_value(self.INDEXTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexBarcodeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexBarcode
    Data Type Display Name: Assigned Index (Assigned Indices)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, IndexId, IndexTag, InputAssignmentMultiRecordId, InputAssignmentRecordId, MultiplexInstructions, OtherSampleId, RowPosition, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'IndexBarcode'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INDEXID__FIELD_NAME: WrapperField = WrapperField("IndexId", FieldType.STRING)
    INDEXTAG__FIELD_NAME: WrapperField = WrapperField("IndexTag", FieldType.STRING)
    INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME: WrapperField = WrapperField("InputAssignmentMultiRecordId", FieldType.STRING)
    INPUTASSIGNMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("InputAssignmentRecordId", FieldType.LONG)
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: WrapperField = WrapperField("MultiplexInstructions", FieldType.SELECTION)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_InputAssignmentMultiRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputAssignmentMultiRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentMultiRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputAssignmentMultiRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name)

    def set_InputAssignmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InputAssignmentRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InputAssignmentRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexMetricModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexMetric
    Data Type Display Name: Index Metric (Index Metrics)
    Fields: ColRead, CreatedBy, DataRecordName, DateCreated, IndexSeq, Lane, LaneCol, NumClusters, Project, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'IndexMetric'
    COLREAD__FIELD_NAME: WrapperField = WrapperField("ColRead", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INDEXSEQ__FIELD_NAME: WrapperField = WrapperField("IndexSeq", FieldType.STRING)
    LANE__FIELD_NAME: WrapperField = WrapperField("Lane", FieldType.LONG)
    LANECOL__FIELD_NAME: WrapperField = WrapperField("LaneCol", FieldType.STRING)
    NUMCLUSTERS__FIELD_NAME: WrapperField = WrapperField("NumClusters", FieldType.LONG)
    PROJECT__FIELD_NAME: WrapperField = WrapperField("Project", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexSeq_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSeq' on this record model
        """
        self.set_field_value(self.INDEXSEQ__FIELD_NAME.field_name, value)

    def get_IndexSeq_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSeq' from this record model
        """
        return self.get_field_value(self.INDEXSEQ__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_NumClusters_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumClusters' on this record model
        """
        self.set_field_value(self.NUMCLUSTERS__FIELD_NAME.field_name, value)

    def get_NumClusters_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumClusters' from this record model
        """
        return self.get_field_value(self.NUMCLUSTERS__FIELD_NAME.field_name)

    def set_Project_field(self, value: Optional[str]):
        """
        Set data field with field name 'Project' on this record model
        """
        self.set_field_value(self.PROJECT__FIELD_NAME.field_name, value)

    def get_Project_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Project' from this record model
        """
        return self.get_field_value(self.PROJECT__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InhibitionCalcModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InhibitionCalc
    Data Type Display Name: Inhibition Calc (Inhibition Calcs)
    Fields: CreatedBy, DataRecordName, DateCreated, ParentSampleId, PercentInhibition, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'InhibitionCalc'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PARENTSAMPLEID__FIELD_NAME: WrapperField = WrapperField("ParentSampleId", FieldType.STRING)
    PERCENTINHIBITION__FIELD_NAME: WrapperField = WrapperField("PercentInhibition", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ParentSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ParentSampleId' on this record model
        """
        self.set_field_value(self.PARENTSAMPLEID__FIELD_NAME.field_name, value)

    def get_ParentSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ParentSampleId' from this record model
        """
        return self.get_field_value(self.PARENTSAMPLEID__FIELD_NAME.field_name)

    def set_PercentInhibition_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentInhibition' on this record model
        """
        self.set_field_value(self.PERCENTINHIBITION__FIELD_NAME.field_name, value)

    def get_PercentInhibition_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentInhibition' from this record model
        """
        return self.get_field_value(self.PERCENTINHIBITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Instrument
    Data Type Display Name: Instrument (Instruments)
    Fields: Barcode, ColPosition, CreatedBy, DataRecordName, DateCreated, DatePurchased, Description, FilePath, InstrumentName, InstrumentType, IsActive, ModelNumber, NetworkFilePath, ReservedDate, RowPosition, SerialNumber, Site, StorageLocationBarcode, StorageUnitPath, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor, WorkstationId
    <!-- CONFIG: Environmental -->
    """
    DATA_TYPE_NAME: str = 'Instrument'
    BARCODE__FIELD_NAME: WrapperField = WrapperField("Barcode", FieldType.STRING)
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEPURCHASED__FIELD_NAME: WrapperField = WrapperField("DatePurchased", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    INSTRUMENTNAME__FIELD_NAME: WrapperField = WrapperField("InstrumentName", FieldType.STRING)
    INSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("InstrumentType", FieldType.SELECTION)
    ISACTIVE__FIELD_NAME: WrapperField = WrapperField("IsActive", FieldType.BOOLEAN)
    MODELNUMBER__FIELD_NAME: WrapperField = WrapperField("ModelNumber", FieldType.STRING)
    NETWORKFILEPATH__FIELD_NAME: WrapperField = WrapperField("NetworkFilePath", FieldType.STRING)
    RESERVEDDATE__FIELD_NAME: WrapperField = WrapperField("ReservedDate", FieldType.DATE)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("SerialNumber", FieldType.STRING)
    SITE__FIELD_NAME: WrapperField = WrapperField("Site", FieldType.STRING)
    STORAGELOCATIONBARCODE__FIELD_NAME: WrapperField = WrapperField("StorageLocationBarcode", FieldType.SELECTION)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.STRING)
    WORKSTATIONID__FIELD_NAME: WrapperField = WrapperField("WorkstationId", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DatePurchased_field(self, value: Optional[int]):
        """
        Set data field with field name 'DatePurchased' on this record model
        """
        self.set_field_value(self.DATEPURCHASED__FIELD_NAME.field_name, value)

    def get_DatePurchased_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DatePurchased' from this record model
        """
        return self.get_field_value(self.DATEPURCHASED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_ModelNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelNumber' on this record model
        """
        self.set_field_value(self.MODELNUMBER__FIELD_NAME.field_name, value)

    def get_ModelNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelNumber' from this record model
        """
        return self.get_field_value(self.MODELNUMBER__FIELD_NAME.field_name)

    def set_NetworkFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NetworkFilePath' on this record model
        """
        self.set_field_value(self.NETWORKFILEPATH__FIELD_NAME.field_name, value)

    def get_NetworkFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NetworkFilePath' from this record model
        """
        return self.get_field_value(self.NETWORKFILEPATH__FIELD_NAME.field_name)

    def set_ReservedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReservedDate' on this record model
        """
        self.set_field_value(self.RESERVEDDATE__FIELD_NAME.field_name, value)

    def get_ReservedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReservedDate' from this record model
        """
        return self.get_field_value(self.RESERVEDDATE__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SerialNumber' on this record model
        """
        self.set_field_value(self.SERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SerialNumber' from this record model
        """
        return self.get_field_value(self.SERIALNUMBER__FIELD_NAME.field_name)

    def set_Site_field(self, value: Optional[str]):
        """
        Set data field with field name 'Site' on this record model
        """
        self.set_field_value(self.SITE__FIELD_NAME.field_name, value)

    def get_Site_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Site' from this record model
        """
        return self.get_field_value(self.SITE__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)

    def set_WorkstationId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkstationId' on this record model
        """
        self.set_field_value(self.WORKSTATIONID__FIELD_NAME.field_name, value)

    def get_WorkstationId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkstationId' from this record model
        """
        return self.get_field_value(self.WORKSTATIONID__FIELD_NAME.field_name)


class InstrumentConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentConfig
    Data Type Display Name: Instrument Configuration (Instrument Configurations)
    Fields: ContainsKey1, ContainsKey2, ContainsKey3, CreatedBy, DataRecordName, DateCreated, FileCreator, FileDifferentiator, FileKeyIdentifier1, FileKeyIdentifier2, FileKeyIdentifier3, FileLoader, FileParser, InstrumentConfigurationName, InstrumentType, OutputFileCreator, Presenter, RecordHandler, RecordProcessor, SupportsMolarity, Validator, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'InstrumentConfig'
    CONTAINSKEY1__FIELD_NAME: WrapperField = WrapperField("ContainsKey1", FieldType.BOOLEAN)
    CONTAINSKEY2__FIELD_NAME: WrapperField = WrapperField("ContainsKey2", FieldType.BOOLEAN)
    CONTAINSKEY3__FIELD_NAME: WrapperField = WrapperField("ContainsKey3", FieldType.BOOLEAN)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILECREATOR__FIELD_NAME: WrapperField = WrapperField("FileCreator", FieldType.SELECTION)
    FILEDIFFERENTIATOR__FIELD_NAME: WrapperField = WrapperField("FileDifferentiator", FieldType.SELECTION)
    FILEKEYIDENTIFIER1__FIELD_NAME: WrapperField = WrapperField("FileKeyIdentifier1", FieldType.STRING)
    FILEKEYIDENTIFIER2__FIELD_NAME: WrapperField = WrapperField("FileKeyIdentifier2", FieldType.STRING)
    FILEKEYIDENTIFIER3__FIELD_NAME: WrapperField = WrapperField("FileKeyIdentifier3", FieldType.STRING)
    FILELOADER__FIELD_NAME: WrapperField = WrapperField("FileLoader", FieldType.SELECTION)
    FILEPARSER__FIELD_NAME: WrapperField = WrapperField("FileParser", FieldType.SELECTION)
    INSTRUMENTCONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("InstrumentConfigurationName", FieldType.STRING)
    INSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("InstrumentType", FieldType.STRING)
    OUTPUTFILECREATOR__FIELD_NAME: WrapperField = WrapperField("OutputFileCreator", FieldType.SELECTION)
    PRESENTER__FIELD_NAME: WrapperField = WrapperField("Presenter", FieldType.SELECTION)
    RECORDHANDLER__FIELD_NAME: WrapperField = WrapperField("RecordHandler", FieldType.SELECTION)
    RECORDPROCESSOR__FIELD_NAME: WrapperField = WrapperField("RecordProcessor", FieldType.SELECTION)
    SUPPORTSMOLARITY__FIELD_NAME: WrapperField = WrapperField("SupportsMolarity", FieldType.BOOLEAN)
    VALIDATOR__FIELD_NAME: WrapperField = WrapperField("Validator", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ContainsKey1_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ContainsKey1' on this record model
        """
        self.set_field_value(self.CONTAINSKEY1__FIELD_NAME.field_name, value)

    def get_ContainsKey1_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ContainsKey1' from this record model
        """
        return self.get_field_value(self.CONTAINSKEY1__FIELD_NAME.field_name)

    def set_ContainsKey2_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ContainsKey2' on this record model
        """
        self.set_field_value(self.CONTAINSKEY2__FIELD_NAME.field_name, value)

    def get_ContainsKey2_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ContainsKey2' from this record model
        """
        return self.get_field_value(self.CONTAINSKEY2__FIELD_NAME.field_name)

    def set_ContainsKey3_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ContainsKey3' on this record model
        """
        self.set_field_value(self.CONTAINSKEY3__FIELD_NAME.field_name, value)

    def get_ContainsKey3_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ContainsKey3' from this record model
        """
        return self.get_field_value(self.CONTAINSKEY3__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileCreator_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileCreator' on this record model
        """
        self.set_field_value(self.FILECREATOR__FIELD_NAME.field_name, value)

    def get_FileCreator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileCreator' from this record model
        """
        return self.get_field_value(self.FILECREATOR__FIELD_NAME.field_name)

    def set_FileDifferentiator_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileDifferentiator' on this record model
        """
        self.set_field_value(self.FILEDIFFERENTIATOR__FIELD_NAME.field_name, value)

    def get_FileDifferentiator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileDifferentiator' from this record model
        """
        return self.get_field_value(self.FILEDIFFERENTIATOR__FIELD_NAME.field_name)

    def set_FileKeyIdentifier1_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileKeyIdentifier1' on this record model
        """
        self.set_field_value(self.FILEKEYIDENTIFIER1__FIELD_NAME.field_name, value)

    def get_FileKeyIdentifier1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileKeyIdentifier1' from this record model
        """
        return self.get_field_value(self.FILEKEYIDENTIFIER1__FIELD_NAME.field_name)

    def set_FileKeyIdentifier2_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileKeyIdentifier2' on this record model
        """
        self.set_field_value(self.FILEKEYIDENTIFIER2__FIELD_NAME.field_name, value)

    def get_FileKeyIdentifier2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileKeyIdentifier2' from this record model
        """
        return self.get_field_value(self.FILEKEYIDENTIFIER2__FIELD_NAME.field_name)

    def set_FileKeyIdentifier3_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileKeyIdentifier3' on this record model
        """
        self.set_field_value(self.FILEKEYIDENTIFIER3__FIELD_NAME.field_name, value)

    def get_FileKeyIdentifier3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileKeyIdentifier3' from this record model
        """
        return self.get_field_value(self.FILEKEYIDENTIFIER3__FIELD_NAME.field_name)

    def set_FileLoader_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileLoader' on this record model
        """
        self.set_field_value(self.FILELOADER__FIELD_NAME.field_name, value)

    def get_FileLoader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileLoader' from this record model
        """
        return self.get_field_value(self.FILELOADER__FIELD_NAME.field_name)

    def set_FileParser_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileParser' on this record model
        """
        self.set_field_value(self.FILEPARSER__FIELD_NAME.field_name, value)

    def get_FileParser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileParser' from this record model
        """
        return self.get_field_value(self.FILEPARSER__FIELD_NAME.field_name)

    def set_InstrumentConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentConfigurationName' on this record model
        """
        self.set_field_value(self.INSTRUMENTCONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_InstrumentConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentConfigurationName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTCONFIGURATIONNAME__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_OutputFileCreator_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFileCreator' on this record model
        """
        self.set_field_value(self.OUTPUTFILECREATOR__FIELD_NAME.field_name, value)

    def get_OutputFileCreator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFileCreator' from this record model
        """
        return self.get_field_value(self.OUTPUTFILECREATOR__FIELD_NAME.field_name)

    def set_Presenter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Presenter' on this record model
        """
        self.set_field_value(self.PRESENTER__FIELD_NAME.field_name, value)

    def get_Presenter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Presenter' from this record model
        """
        return self.get_field_value(self.PRESENTER__FIELD_NAME.field_name)

    def set_RecordHandler_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordHandler' on this record model
        """
        self.set_field_value(self.RECORDHANDLER__FIELD_NAME.field_name, value)

    def get_RecordHandler_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordHandler' from this record model
        """
        return self.get_field_value(self.RECORDHANDLER__FIELD_NAME.field_name)

    def set_RecordProcessor_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordProcessor' on this record model
        """
        self.set_field_value(self.RECORDPROCESSOR__FIELD_NAME.field_name, value)

    def get_RecordProcessor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordProcessor' from this record model
        """
        return self.get_field_value(self.RECORDPROCESSOR__FIELD_NAME.field_name)

    def set_SupportsMolarity_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportsMolarity' on this record model
        """
        self.set_field_value(self.SUPPORTSMOLARITY__FIELD_NAME.field_name, value)

    def get_SupportsMolarity_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportsMolarity' from this record model
        """
        return self.get_field_value(self.SUPPORTSMOLARITY__FIELD_NAME.field_name)

    def set_Validator_field(self, value: Optional[str]):
        """
        Set data field with field name 'Validator' on this record model
        """
        self.set_field_value(self.VALIDATOR__FIELD_NAME.field_name, value)

    def get_Validator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Validator' from this record model
        """
        return self.get_field_value(self.VALIDATOR__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentConsumableDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentConsumableDatum
    Data Type Display Name: Instrument Consumable (Instrument Consumable)
    Fields: ActiveTaskId, ActiveWorkflowId, CreatedBy, DataRecordName, DateCreated, ExperimentRecordId, ExperimentType, OtherSampleId, SampleId, TaskName, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkflowName
    """
    DATA_TYPE_NAME: str = 'InstrumentConsumableDatum'
    ACTIVETASKID__FIELD_NAME: WrapperField = WrapperField("ActiveTaskId", FieldType.LONG)
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPERIMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("ExperimentRecordId", FieldType.LONG)
    EXPERIMENTTYPE__FIELD_NAME: WrapperField = WrapperField("ExperimentType", FieldType.STRING)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    TASKNAME__FIELD_NAME: WrapperField = WrapperField("TaskName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowName", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveTaskId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveTaskId' on this record model
        """
        self.set_field_value(self.ACTIVETASKID__FIELD_NAME.field_name, value)

    def get_ActiveTaskId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveTaskId' from this record model
        """
        return self.get_field_value(self.ACTIVETASKID__FIELD_NAME.field_name)

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_TaskName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskName' on this record model
        """
        self.set_field_value(self.TASKNAME__FIELD_NAME.field_name, value)

    def get_TaskName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskName' from this record model
        """
        return self.get_field_value(self.TASKNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class InstrumentFieldMapModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentFieldMap
    Data Type Display Name: Instrument Field Map (Instrument Field Maps)
    Fields: CreatedBy, DataRecordName, DateCreated, FromFileField, ToRecordField, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'InstrumentFieldMap'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FROMFILEFIELD__FIELD_NAME: WrapperField = WrapperField("FromFileField", FieldType.STRING)
    TORECORDFIELD__FIELD_NAME: WrapperField = WrapperField("ToRecordField", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FromFileField_field(self, value: Optional[str]):
        """
        Set data field with field name 'FromFileField' on this record model
        """
        self.set_field_value(self.FROMFILEFIELD__FIELD_NAME.field_name, value)

    def get_FromFileField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FromFileField' from this record model
        """
        return self.get_field_value(self.FROMFILEFIELD__FIELD_NAME.field_name)

    def set_ToRecordField_field(self, value: Optional[str]):
        """
        Set data field with field name 'ToRecordField' on this record model
        """
        self.set_field_value(self.TORECORDFIELD__FIELD_NAME.field_name, value)

    def get_ToRecordField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ToRecordField' from this record model
        """
        return self.get_field_value(self.TORECORDFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentImporterMapConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentImporterMapConfig
    Data Type Display Name: Instrument Importer Mapping Configuration (Instrument Importer Mapping Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, MappingGroup, MappingOrder, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'InstrumentImporterMapConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MAPPINGGROUP__FIELD_NAME: WrapperField = WrapperField("MappingGroup", FieldType.STRING)
    MAPPINGORDER__FIELD_NAME: WrapperField = WrapperField("MappingOrder", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentImporterMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentImporterMapping
    Data Type Display Name: Instrument Importer Mapping (Instrument Importer Mappings)
    Fields: CreatedBy, DataField, DataRecordName, DataType, DateCreated, DisplayName, MappingGroup, MappingName, MappingOrder, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'InstrumentImporterMapping'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATAFIELD__FIELD_NAME: WrapperField = WrapperField("DataField", FieldType.SELECTION)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.PICKLIST)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("DisplayName", FieldType.STRING)
    MAPPINGGROUP__FIELD_NAME: WrapperField = WrapperField("MappingGroup", FieldType.STRING)
    MAPPINGNAME__FIELD_NAME: WrapperField = WrapperField("MappingName", FieldType.STRING)
    MAPPINGORDER__FIELD_NAME: WrapperField = WrapperField("MappingOrder", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataField' on this record model
        """
        self.set_field_value(self.DATAFIELD__FIELD_NAME.field_name, value)

    def get_DataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataField' from this record model
        """
        return self.get_field_value(self.DATAFIELD__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentMaintenanceReceiptModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentMaintenanceReceipt
    Data Type Display Name: Instrument Maintenance Log (Instrument Maintenance Logs)
    Fields: ActiveWorkflowId, ActiveWorkflowName, ApproverComment, ApproverGroupName, ApproverName, ApproverUsername, CreatedBy, DataRecordName, DateApproved, DateCreated, MaintenanceComments, MaintenancePendingDate, MaintenancePerformedBy, MaintenancePerformedDate, MaintenanceStatus, NextDueDate, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'InstrumentMaintenanceReceipt'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    ACTIVEWORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowName", FieldType.SELECTION)
    APPROVERCOMMENT__FIELD_NAME: WrapperField = WrapperField("ApproverComment", FieldType.STRING)
    APPROVERGROUPNAME__FIELD_NAME: WrapperField = WrapperField("ApproverGroupName", FieldType.STRING)
    APPROVERNAME__FIELD_NAME: WrapperField = WrapperField("ApproverName", FieldType.STRING)
    APPROVERUSERNAME__FIELD_NAME: WrapperField = WrapperField("ApproverUsername", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATEAPPROVED__FIELD_NAME: WrapperField = WrapperField("DateApproved", FieldType.DATE)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MAINTENANCECOMMENTS__FIELD_NAME: WrapperField = WrapperField("MaintenanceComments", FieldType.STRING)
    MAINTENANCEPENDINGDATE__FIELD_NAME: WrapperField = WrapperField("MaintenancePendingDate", FieldType.DATE)
    MAINTENANCEPERFORMEDBY__FIELD_NAME: WrapperField = WrapperField("MaintenancePerformedBy", FieldType.SELECTION)
    MAINTENANCEPERFORMEDDATE__FIELD_NAME: WrapperField = WrapperField("MaintenancePerformedDate", FieldType.DATE)
    MAINTENANCESTATUS__FIELD_NAME: WrapperField = WrapperField("MaintenanceStatus", FieldType.PICKLIST)
    NEXTDUEDATE__FIELD_NAME: WrapperField = WrapperField("NextDueDate", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_ActiveWorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveWorkflowName' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveWorkflowName' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name)

    def set_ApproverComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverComment' on this record model
        """
        self.set_field_value(self.APPROVERCOMMENT__FIELD_NAME.field_name, value)

    def get_ApproverComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverComment' from this record model
        """
        return self.get_field_value(self.APPROVERCOMMENT__FIELD_NAME.field_name)

    def set_ApproverGroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverGroupName' on this record model
        """
        self.set_field_value(self.APPROVERGROUPNAME__FIELD_NAME.field_name, value)

    def get_ApproverGroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverGroupName' from this record model
        """
        return self.get_field_value(self.APPROVERGROUPNAME__FIELD_NAME.field_name)

    def set_ApproverName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverName' on this record model
        """
        self.set_field_value(self.APPROVERNAME__FIELD_NAME.field_name, value)

    def get_ApproverName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverName' from this record model
        """
        return self.get_field_value(self.APPROVERNAME__FIELD_NAME.field_name)

    def set_ApproverUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverUsername' on this record model
        """
        self.set_field_value(self.APPROVERUSERNAME__FIELD_NAME.field_name, value)

    def get_ApproverUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverUsername' from this record model
        """
        return self.get_field_value(self.APPROVERUSERNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateApproved_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateApproved' on this record model
        """
        self.set_field_value(self.DATEAPPROVED__FIELD_NAME.field_name, value)

    def get_DateApproved_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateApproved' from this record model
        """
        return self.get_field_value(self.DATEAPPROVED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MaintenanceComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceComments' on this record model
        """
        self.set_field_value(self.MAINTENANCECOMMENTS__FIELD_NAME.field_name, value)

    def get_MaintenanceComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceComments' from this record model
        """
        return self.get_field_value(self.MAINTENANCECOMMENTS__FIELD_NAME.field_name)

    def set_MaintenancePendingDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenancePendingDate' on this record model
        """
        self.set_field_value(self.MAINTENANCEPENDINGDATE__FIELD_NAME.field_name, value)

    def get_MaintenancePendingDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenancePendingDate' from this record model
        """
        return self.get_field_value(self.MAINTENANCEPENDINGDATE__FIELD_NAME.field_name)

    def set_MaintenancePerformedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenancePerformedBy' on this record model
        """
        self.set_field_value(self.MAINTENANCEPERFORMEDBY__FIELD_NAME.field_name, value)

    def get_MaintenancePerformedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenancePerformedBy' from this record model
        """
        return self.get_field_value(self.MAINTENANCEPERFORMEDBY__FIELD_NAME.field_name)

    def set_MaintenancePerformedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenancePerformedDate' on this record model
        """
        self.set_field_value(self.MAINTENANCEPERFORMEDDATE__FIELD_NAME.field_name, value)

    def get_MaintenancePerformedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenancePerformedDate' from this record model
        """
        return self.get_field_value(self.MAINTENANCEPERFORMEDDATE__FIELD_NAME.field_name)

    def set_MaintenanceStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceStatus' on this record model
        """
        self.set_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name, value)

    def get_MaintenanceStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceStatus' from this record model
        """
        return self.get_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name)

    def set_NextDueDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NextDueDate' on this record model
        """
        self.set_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name, value)

    def get_NextDueDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NextDueDate' from this record model
        """
        return self.get_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentParseConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentParseConfig
    Data Type Display Name: Instrument Parser Config (Instrument Parser Configs)
    Fields: BlockIdentifier, BlockType, CreatedBy, DataLoaderConfig, DataRecordName, DateCreated, EndPivotOnColumn, FieldName1, FieldName2, FieldName3, StartPivotOnColumn, VeloxLastModifiedBy, VeloxLastModifiedDate
    This is for the Generic Instrument Parser.
    """
    DATA_TYPE_NAME: str = 'InstrumentParseConfig'
    BLOCKIDENTIFIER__FIELD_NAME: WrapperField = WrapperField("BlockIdentifier", FieldType.STRING)
    BLOCKTYPE__FIELD_NAME: WrapperField = WrapperField("BlockType", FieldType.PICKLIST)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATALOADERCONFIG__FIELD_NAME: WrapperField = WrapperField("DataLoaderConfig", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ENDPIVOTONCOLUMN__FIELD_NAME: WrapperField = WrapperField("EndPivotOnColumn", FieldType.STRING)
    FIELDNAME1__FIELD_NAME: WrapperField = WrapperField("FieldName1", FieldType.STRING)
    FIELDNAME2__FIELD_NAME: WrapperField = WrapperField("FieldName2", FieldType.STRING)
    FIELDNAME3__FIELD_NAME: WrapperField = WrapperField("FieldName3", FieldType.STRING)
    STARTPIVOTONCOLUMN__FIELD_NAME: WrapperField = WrapperField("StartPivotOnColumn", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BlockIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'BlockIdentifier' on this record model
        """
        self.set_field_value(self.BLOCKIDENTIFIER__FIELD_NAME.field_name, value)

    def get_BlockIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BlockIdentifier' from this record model
        """
        return self.get_field_value(self.BLOCKIDENTIFIER__FIELD_NAME.field_name)

    def set_BlockType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BlockType' on this record model
        """
        self.set_field_value(self.BLOCKTYPE__FIELD_NAME.field_name, value)

    def get_BlockType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BlockType' from this record model
        """
        return self.get_field_value(self.BLOCKTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataLoaderConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataLoaderConfig' on this record model
        """
        self.set_field_value(self.DATALOADERCONFIG__FIELD_NAME.field_name, value)

    def get_DataLoaderConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataLoaderConfig' from this record model
        """
        return self.get_field_value(self.DATALOADERCONFIG__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndPivotOnColumn_field(self, value: Optional[str]):
        """
        Set data field with field name 'EndPivotOnColumn' on this record model
        """
        self.set_field_value(self.ENDPIVOTONCOLUMN__FIELD_NAME.field_name, value)

    def get_EndPivotOnColumn_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EndPivotOnColumn' from this record model
        """
        return self.get_field_value(self.ENDPIVOTONCOLUMN__FIELD_NAME.field_name)

    def set_FieldName1_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldName1' on this record model
        """
        self.set_field_value(self.FIELDNAME1__FIELD_NAME.field_name, value)

    def get_FieldName1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldName1' from this record model
        """
        return self.get_field_value(self.FIELDNAME1__FIELD_NAME.field_name)

    def set_FieldName2_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldName2' on this record model
        """
        self.set_field_value(self.FIELDNAME2__FIELD_NAME.field_name, value)

    def get_FieldName2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldName2' from this record model
        """
        return self.get_field_value(self.FIELDNAME2__FIELD_NAME.field_name)

    def set_FieldName3_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldName3' on this record model
        """
        self.set_field_value(self.FIELDNAME3__FIELD_NAME.field_name, value)

    def get_FieldName3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldName3' from this record model
        """
        return self.get_field_value(self.FIELDNAME3__FIELD_NAME.field_name)

    def set_StartPivotOnColumn_field(self, value: Optional[str]):
        """
        Set data field with field name 'StartPivotOnColumn' on this record model
        """
        self.set_field_value(self.STARTPIVOTONCOLUMN__FIELD_NAME.field_name, value)

    def get_StartPivotOnColumn_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StartPivotOnColumn' from this record model
        """
        return self.get_field_value(self.STARTPIVOTONCOLUMN__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentReservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentReservation
    Data Type Display Name: Reservation (Reservations)
    Fields: CreatedBy, DataRecordName, DateCreated, Duration, Summary, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'InstrumentReservation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DURATION__FIELD_NAME: WrapperField = WrapperField("Duration", FieldType.DATE_RANGE)
    SUMMARY__FIELD_NAME: WrapperField = WrapperField("Summary", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Duration_field(self, value: Optional[DateRange]):
        """
        Set data field with field name 'Duration' on this record model
        """
        if value is None:
            self.set_field_value(self.DURATION__FIELD_NAME.field_name, None)
        else:
            self.set_field_value(self.DURATION__FIELD_NAME.field_name, str(value))

    def get_Duration_field(self) -> Optional[DateRange]:
        """
        Get data field value with field name 'Duration' from this record model
        """
        return DateRange.from_str(self.get_field_value(self.DURATION__FIELD_NAME.field_name))

    def set_Summary_field(self, value: Optional[str]):
        """
        Set data field with field name 'Summary' on this record model
        """
        self.set_field_value(self.SUMMARY__FIELD_NAME.field_name, value)

    def get_Summary_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Summary' from this record model
        """
        return self.get_field_value(self.SUMMARY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentStatusModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentStatus
    Data Type Display Name: Instrument Status (Instrument Status)
    Fields: CreatedBy, CurrentRunDate, CurrentRunId, DataRecordName, DateCreated, LastUpdated, PercentCompletion, Position, Status, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'InstrumentStatus'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CURRENTRUNDATE__FIELD_NAME: WrapperField = WrapperField("CurrentRunDate", FieldType.INTEGER)
    CURRENTRUNID__FIELD_NAME: WrapperField = WrapperField("CurrentRunId", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LASTUPDATED__FIELD_NAME: WrapperField = WrapperField("LastUpdated", FieldType.DATE)
    PERCENTCOMPLETION__FIELD_NAME: WrapperField = WrapperField("PercentCompletion", FieldType.DOUBLE)
    POSITION__FIELD_NAME: WrapperField = WrapperField("Position", FieldType.STRING)
    STATUS__FIELD_NAME: WrapperField = WrapperField("Status", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CurrentRunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CurrentRunDate' on this record model
        """
        self.set_field_value(self.CURRENTRUNDATE__FIELD_NAME.field_name, value)

    def get_CurrentRunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CurrentRunDate' from this record model
        """
        return self.get_field_value(self.CURRENTRUNDATE__FIELD_NAME.field_name)

    def set_CurrentRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CurrentRunId' on this record model
        """
        self.set_field_value(self.CURRENTRUNID__FIELD_NAME.field_name, value)

    def get_CurrentRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CurrentRunId' from this record model
        """
        return self.get_field_value(self.CURRENTRUNID__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LastUpdated_field(self, value: Optional[int]):
        """
        Set data field with field name 'LastUpdated' on this record model
        """
        self.set_field_value(self.LASTUPDATED__FIELD_NAME.field_name, value)

    def get_LastUpdated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LastUpdated' from this record model
        """
        return self.get_field_value(self.LASTUPDATED__FIELD_NAME.field_name)

    def set_PercentCompletion_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentCompletion' on this record model
        """
        self.set_field_value(self.PERCENTCOMPLETION__FIELD_NAME.field_name, value)

    def get_PercentCompletion_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentCompletion' from this record model
        """
        return self.get_field_value(self.PERCENTCOMPLETION__FIELD_NAME.field_name)

    def set_Position_field(self, value: Optional[str]):
        """
        Set data field with field name 'Position' on this record model
        """
        self.set_field_value(self.POSITION__FIELD_NAME.field_name, value)

    def get_Position_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Position' from this record model
        """
        return self.get_field_value(self.POSITION__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LCMSResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LCMSResult
    Data Type Display Name: LCMS Result (LCMS Results)
    Fields: AccuracyPercent, AnalyteISArea, Area, CalculatedConcentration, CompoundName, Concentration, CreatedBy, DataRecordName, DateCreated, DilutionFactor, Filename, FileType, Height, ISArea, ISHeight, SampleType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'LCMSResult'
    ACCURACYPERCENT__FIELD_NAME: WrapperField = WrapperField("AccuracyPercent", FieldType.STRING)
    ANALYTEISAREA__FIELD_NAME: WrapperField = WrapperField("AnalyteISArea", FieldType.DOUBLE)
    AREA__FIELD_NAME: WrapperField = WrapperField("Area", FieldType.DOUBLE)
    CALCULATEDCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("CalculatedConcentration", FieldType.DOUBLE)
    COMPOUNDNAME__FIELD_NAME: WrapperField = WrapperField("CompoundName", FieldType.STRING)
    CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Concentration", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DILUTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("DilutionFactor", FieldType.DOUBLE)
    FILENAME__FIELD_NAME: WrapperField = WrapperField("Filename", FieldType.STRING)
    FILETYPE__FIELD_NAME: WrapperField = WrapperField("FileType", FieldType.STRING)
    HEIGHT__FIELD_NAME: WrapperField = WrapperField("Height", FieldType.DOUBLE)
    ISAREA__FIELD_NAME: WrapperField = WrapperField("ISArea", FieldType.DOUBLE)
    ISHEIGHT__FIELD_NAME: WrapperField = WrapperField("ISHeight", FieldType.DOUBLE)
    SAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("SampleType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccuracyPercent_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccuracyPercent' on this record model
        """
        self.set_field_value(self.ACCURACYPERCENT__FIELD_NAME.field_name, value)

    def get_AccuracyPercent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccuracyPercent' from this record model
        """
        return self.get_field_value(self.ACCURACYPERCENT__FIELD_NAME.field_name)

    def set_AnalyteISArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'AnalyteISArea' on this record model
        """
        self.set_field_value(self.ANALYTEISAREA__FIELD_NAME.field_name, value)

    def get_AnalyteISArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AnalyteISArea' from this record model
        """
        return self.get_field_value(self.ANALYTEISAREA__FIELD_NAME.field_name)

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_CalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentration' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def set_CompoundName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompoundName' on this record model
        """
        self.set_field_value(self.COMPOUNDNAME__FIELD_NAME.field_name, value)

    def get_CompoundName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompoundName' from this record model
        """
        return self.get_field_value(self.COMPOUNDNAME__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_Filename_field(self, value: Optional[str]):
        """
        Set data field with field name 'Filename' on this record model
        """
        self.set_field_value(self.FILENAME__FIELD_NAME.field_name, value)

    def get_Filename_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Filename' from this record model
        """
        return self.get_field_value(self.FILENAME__FIELD_NAME.field_name)

    def set_FileType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileType' on this record model
        """
        self.set_field_value(self.FILETYPE__FIELD_NAME.field_name, value)

    def get_FileType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileType' from this record model
        """
        return self.get_field_value(self.FILETYPE__FIELD_NAME.field_name)

    def set_Height_field(self, value: Optional[float]):
        """
        Set data field with field name 'Height' on this record model
        """
        self.set_field_value(self.HEIGHT__FIELD_NAME.field_name, value)

    def get_Height_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Height' from this record model
        """
        return self.get_field_value(self.HEIGHT__FIELD_NAME.field_name)

    def set_ISArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'ISArea' on this record model
        """
        self.set_field_value(self.ISAREA__FIELD_NAME.field_name, value)

    def get_ISArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ISArea' from this record model
        """
        return self.get_field_value(self.ISAREA__FIELD_NAME.field_name)

    def set_ISHeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'ISHeight' on this record model
        """
        self.set_field_value(self.ISHEIGHT__FIELD_NAME.field_name, value)

    def get_ISHeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ISHeight' from this record model
        """
        return self.get_field_value(self.ISHEIGHT__FIELD_NAME.field_name)

    def set_SampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleType' on this record model
        """
        self.set_field_value(self.SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_SampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleType' from this record model
        """
        return self.get_field_value(self.SAMPLETYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LearnedModelsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LearnedModels
    Data Type Display Name: Learned Model (Learned Models)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, FormulaName, IndependentVariableNames, IndependentVariableTypes, ModelId, ModelInputType, ModelType, ResponseVariableName, ResponseVariableType, SoftwareSuite, SoftwareVersion, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    This is a repository of all statistical models which can be used to generate predictions.
    """
    DATA_TYPE_NAME: str = 'LearnedModels'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    FORMULANAME__FIELD_NAME: WrapperField = WrapperField("FormulaName", FieldType.STRING)
    INDEPENDENTVARIABLENAMES__FIELD_NAME: WrapperField = WrapperField("IndependentVariableNames", FieldType.SELECTION)
    INDEPENDENTVARIABLETYPES__FIELD_NAME: WrapperField = WrapperField("IndependentVariableTypes", FieldType.STRING)
    MODELID__FIELD_NAME: WrapperField = WrapperField("ModelId", FieldType.STRING)
    MODELINPUTTYPE__FIELD_NAME: WrapperField = WrapperField("ModelInputType", FieldType.STRING)
    MODELTYPE__FIELD_NAME: WrapperField = WrapperField("ModelType", FieldType.STRING)
    RESPONSEVARIABLENAME__FIELD_NAME: WrapperField = WrapperField("ResponseVariableName", FieldType.STRING)
    RESPONSEVARIABLETYPE__FIELD_NAME: WrapperField = WrapperField("ResponseVariableType", FieldType.STRING)
    SOFTWARESUITE__FIELD_NAME: WrapperField = WrapperField("SoftwareSuite", FieldType.STRING)
    SOFTWAREVERSION__FIELD_NAME: WrapperField = WrapperField("SoftwareVersion", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_FormulaName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FormulaName' on this record model
        """
        self.set_field_value(self.FORMULANAME__FIELD_NAME.field_name, value)

    def get_FormulaName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FormulaName' from this record model
        """
        return self.get_field_value(self.FORMULANAME__FIELD_NAME.field_name)

    def set_IndependentVariableNames_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndependentVariableNames' on this record model
        """
        self.set_field_value(self.INDEPENDENTVARIABLENAMES__FIELD_NAME.field_name, value)

    def get_IndependentVariableNames_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndependentVariableNames' from this record model
        """
        return self.get_field_value(self.INDEPENDENTVARIABLENAMES__FIELD_NAME.field_name)

    def set_IndependentVariableTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndependentVariableTypes' on this record model
        """
        self.set_field_value(self.INDEPENDENTVARIABLETYPES__FIELD_NAME.field_name, value)

    def get_IndependentVariableTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndependentVariableTypes' from this record model
        """
        return self.get_field_value(self.INDEPENDENTVARIABLETYPES__FIELD_NAME.field_name)

    def set_ModelId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelId' on this record model
        """
        self.set_field_value(self.MODELID__FIELD_NAME.field_name, value)

    def get_ModelId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelId' from this record model
        """
        return self.get_field_value(self.MODELID__FIELD_NAME.field_name)

    def set_ModelInputType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelInputType' on this record model
        """
        self.set_field_value(self.MODELINPUTTYPE__FIELD_NAME.field_name, value)

    def get_ModelInputType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelInputType' from this record model
        """
        return self.get_field_value(self.MODELINPUTTYPE__FIELD_NAME.field_name)

    def set_ModelType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelType' on this record model
        """
        self.set_field_value(self.MODELTYPE__FIELD_NAME.field_name, value)

    def get_ModelType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelType' from this record model
        """
        return self.get_field_value(self.MODELTYPE__FIELD_NAME.field_name)

    def set_ResponseVariableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResponseVariableName' on this record model
        """
        self.set_field_value(self.RESPONSEVARIABLENAME__FIELD_NAME.field_name, value)

    def get_ResponseVariableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResponseVariableName' from this record model
        """
        return self.get_field_value(self.RESPONSEVARIABLENAME__FIELD_NAME.field_name)

    def set_ResponseVariableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResponseVariableType' on this record model
        """
        self.set_field_value(self.RESPONSEVARIABLETYPE__FIELD_NAME.field_name, value)

    def get_ResponseVariableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResponseVariableType' from this record model
        """
        return self.get_field_value(self.RESPONSEVARIABLETYPE__FIELD_NAME.field_name)

    def set_SoftwareSuite_field(self, value: Optional[str]):
        """
        Set data field with field name 'SoftwareSuite' on this record model
        """
        self.set_field_value(self.SOFTWARESUITE__FIELD_NAME.field_name, value)

    def get_SoftwareSuite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SoftwareSuite' from this record model
        """
        return self.get_field_value(self.SOFTWARESUITE__FIELD_NAME.field_name)

    def set_SoftwareVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'SoftwareVersion' on this record model
        """
        self.set_field_value(self.SOFTWAREVERSION__FIELD_NAME.field_name, value)

    def get_SoftwareVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SoftwareVersion' from this record model
        """
        return self.get_field_value(self.SOFTWAREVERSION__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LinearRegressionModelModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LinearRegressionModel
    Data Type Display Name: Linear Regression Model (Linear Regression Models)
    Fields: A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, AdjRSquared, CreatedBy, DataRecordName, DateCreated, DegreeOfPolynomial, DenominatorDOF, EntryName, fValue, MultiParentLink215, NumeratorDOF, pValue, RSquared, SeriesName, SourceEntryId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'LinearRegressionModel'
    A0__FIELD_NAME: WrapperField = WrapperField("A0", FieldType.DOUBLE)
    A1__FIELD_NAME: WrapperField = WrapperField("A1", FieldType.DOUBLE)
    A2__FIELD_NAME: WrapperField = WrapperField("A2", FieldType.DOUBLE)
    A3__FIELD_NAME: WrapperField = WrapperField("A3", FieldType.DOUBLE)
    A4__FIELD_NAME: WrapperField = WrapperField("A4", FieldType.DOUBLE)
    A5__FIELD_NAME: WrapperField = WrapperField("A5", FieldType.DOUBLE)
    A6__FIELD_NAME: WrapperField = WrapperField("A6", FieldType.DOUBLE)
    A7__FIELD_NAME: WrapperField = WrapperField("A7", FieldType.DOUBLE)
    A8__FIELD_NAME: WrapperField = WrapperField("A8", FieldType.DOUBLE)
    A9__FIELD_NAME: WrapperField = WrapperField("A9", FieldType.DOUBLE)
    A10__FIELD_NAME: WrapperField = WrapperField("A10", FieldType.DOUBLE)
    ADJRSQUARED__FIELD_NAME: WrapperField = WrapperField("AdjRSquared", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEGREEOFPOLYNOMIAL__FIELD_NAME: WrapperField = WrapperField("DegreeOfPolynomial", FieldType.INTEGER)
    DENOMINATORDOF__FIELD_NAME: WrapperField = WrapperField("DenominatorDOF", FieldType.DOUBLE)
    ENTRYNAME__FIELD_NAME: WrapperField = WrapperField("EntryName", FieldType.STRING)
    FVALUE__FIELD_NAME: WrapperField = WrapperField("fValue", FieldType.DOUBLE)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    NUMERATORDOF__FIELD_NAME: WrapperField = WrapperField("NumeratorDOF", FieldType.DOUBLE)
    PVALUE__FIELD_NAME: WrapperField = WrapperField("pValue", FieldType.DOUBLE)
    RSQUARED__FIELD_NAME: WrapperField = WrapperField("RSquared", FieldType.DOUBLE)
    SERIESNAME__FIELD_NAME: WrapperField = WrapperField("SeriesName", FieldType.STRING)
    SOURCEENTRYID__FIELD_NAME: WrapperField = WrapperField("SourceEntryId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A0_field(self, value: Optional[float]):
        """
        Set data field with field name 'A0' on this record model
        """
        self.set_field_value(self.A0__FIELD_NAME.field_name, value)

    def get_A0_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A0' from this record model
        """
        return self.get_field_value(self.A0__FIELD_NAME.field_name)

    def set_A1_field(self, value: Optional[float]):
        """
        Set data field with field name 'A1' on this record model
        """
        self.set_field_value(self.A1__FIELD_NAME.field_name, value)

    def get_A1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A1' from this record model
        """
        return self.get_field_value(self.A1__FIELD_NAME.field_name)

    def set_A2_field(self, value: Optional[float]):
        """
        Set data field with field name 'A2' on this record model
        """
        self.set_field_value(self.A2__FIELD_NAME.field_name, value)

    def get_A2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A2' from this record model
        """
        return self.get_field_value(self.A2__FIELD_NAME.field_name)

    def set_A3_field(self, value: Optional[float]):
        """
        Set data field with field name 'A3' on this record model
        """
        self.set_field_value(self.A3__FIELD_NAME.field_name, value)

    def get_A3_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A3' from this record model
        """
        return self.get_field_value(self.A3__FIELD_NAME.field_name)

    def set_A4_field(self, value: Optional[float]):
        """
        Set data field with field name 'A4' on this record model
        """
        self.set_field_value(self.A4__FIELD_NAME.field_name, value)

    def get_A4_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A4' from this record model
        """
        return self.get_field_value(self.A4__FIELD_NAME.field_name)

    def set_A5_field(self, value: Optional[float]):
        """
        Set data field with field name 'A5' on this record model
        """
        self.set_field_value(self.A5__FIELD_NAME.field_name, value)

    def get_A5_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A5' from this record model
        """
        return self.get_field_value(self.A5__FIELD_NAME.field_name)

    def set_A6_field(self, value: Optional[float]):
        """
        Set data field with field name 'A6' on this record model
        """
        self.set_field_value(self.A6__FIELD_NAME.field_name, value)

    def get_A6_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A6' from this record model
        """
        return self.get_field_value(self.A6__FIELD_NAME.field_name)

    def set_A7_field(self, value: Optional[float]):
        """
        Set data field with field name 'A7' on this record model
        """
        self.set_field_value(self.A7__FIELD_NAME.field_name, value)

    def get_A7_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A7' from this record model
        """
        return self.get_field_value(self.A7__FIELD_NAME.field_name)

    def set_A8_field(self, value: Optional[float]):
        """
        Set data field with field name 'A8' on this record model
        """
        self.set_field_value(self.A8__FIELD_NAME.field_name, value)

    def get_A8_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A8' from this record model
        """
        return self.get_field_value(self.A8__FIELD_NAME.field_name)

    def set_A9_field(self, value: Optional[float]):
        """
        Set data field with field name 'A9' on this record model
        """
        self.set_field_value(self.A9__FIELD_NAME.field_name, value)

    def get_A9_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A9' from this record model
        """
        return self.get_field_value(self.A9__FIELD_NAME.field_name)

    def set_A10_field(self, value: Optional[float]):
        """
        Set data field with field name 'A10' on this record model
        """
        self.set_field_value(self.A10__FIELD_NAME.field_name, value)

    def get_A10_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A10' from this record model
        """
        return self.get_field_value(self.A10__FIELD_NAME.field_name)

    def set_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'AdjRSquared' on this record model
        """
        self.set_field_value(self.ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AdjRSquared' from this record model
        """
        return self.get_field_value(self.ADJRSQUARED__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DegreeOfPolynomial_field(self, value: Optional[int]):
        """
        Set data field with field name 'DegreeOfPolynomial' on this record model
        """
        self.set_field_value(self.DEGREEOFPOLYNOMIAL__FIELD_NAME.field_name, value)

    def get_DegreeOfPolynomial_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DegreeOfPolynomial' from this record model
        """
        return self.get_field_value(self.DEGREEOFPOLYNOMIAL__FIELD_NAME.field_name)

    def set_DenominatorDOF_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenominatorDOF' on this record model
        """
        self.set_field_value(self.DENOMINATORDOF__FIELD_NAME.field_name, value)

    def get_DenominatorDOF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenominatorDOF' from this record model
        """
        return self.get_field_value(self.DENOMINATORDOF__FIELD_NAME.field_name)

    def set_EntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EntryName' on this record model
        """
        self.set_field_value(self.ENTRYNAME__FIELD_NAME.field_name, value)

    def get_EntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EntryName' from this record model
        """
        return self.get_field_value(self.ENTRYNAME__FIELD_NAME.field_name)

    def set_fValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'fValue' on this record model
        """
        self.set_field_value(self.FVALUE__FIELD_NAME.field_name, value)

    def get_fValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'fValue' from this record model
        """
        return self.get_field_value(self.FVALUE__FIELD_NAME.field_name)

    def set_NumeratorDOF_field(self, value: Optional[float]):
        """
        Set data field with field name 'NumeratorDOF' on this record model
        """
        self.set_field_value(self.NUMERATORDOF__FIELD_NAME.field_name, value)

    def get_NumeratorDOF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NumeratorDOF' from this record model
        """
        return self.get_field_value(self.NUMERATORDOF__FIELD_NAME.field_name)

    def set_pValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'pValue' on this record model
        """
        self.set_field_value(self.PVALUE__FIELD_NAME.field_name, value)

    def get_pValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'pValue' from this record model
        """
        return self.get_field_value(self.PVALUE__FIELD_NAME.field_name)

    def set_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSquared' on this record model
        """
        self.set_field_value(self.RSQUARED__FIELD_NAME.field_name, value)

    def get_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSquared' from this record model
        """
        return self.get_field_value(self.RSQUARED__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SourceEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceEntryId' on this record model
        """
        self.set_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name, value)

    def get_SourceEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceEntryId' from this record model
        """
        return self.get_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LinearRegressionParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LinearRegressionParameter
    Data Type Display Name: Linear Regression Parameter (Linear Regression Parameters)
    Fields: CreatedBy, DataRecordName, DateCreated, Intercept, SBA_AdjRSquared, SBA_RSquared, Slope, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'LinearRegressionParameter'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INTERCEPT__FIELD_NAME: WrapperField = WrapperField("Intercept", FieldType.DOUBLE)
    SBA_ADJRSQUARED__FIELD_NAME: WrapperField = WrapperField("SBA_AdjRSquared", FieldType.DOUBLE)
    SBA_RSQUARED__FIELD_NAME: WrapperField = WrapperField("SBA_RSquared", FieldType.DOUBLE)
    SLOPE__FIELD_NAME: WrapperField = WrapperField("Slope", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Intercept_field(self, value: Optional[float]):
        """
        Set data field with field name 'Intercept' on this record model
        """
        self.set_field_value(self.INTERCEPT__FIELD_NAME.field_name, value)

    def get_Intercept_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Intercept' from this record model
        """
        return self.get_field_value(self.INTERCEPT__FIELD_NAME.field_name)

    def set_SBA_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AdjRSquared' on this record model
        """
        self.set_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AdjRSquared' from this record model
        """
        return self.get_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name)

    def set_SBA_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RSquared' on this record model
        """
        self.set_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RSquared' from this record model
        """
        return self.get_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name)

    def set_Slope_field(self, value: Optional[float]):
        """
        Set data field with field name 'Slope' on this record model
        """
        self.set_field_value(self.SLOPE__FIELD_NAME.field_name, value)

    def get_Slope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Slope' from this record model
        """
        return self.get_field_value(self.SLOPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LogisticRegressionParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LogisticRegressionParameter
    Data Type Display Name: Logistic Regression Parameter (Logistic Regression Parameters)
    Fields: CreatedBy, DataRecordName, DateCreated, LogisticAsymmetry, LogisticBottom, LogisticICEC50, LogisticSlope, LogisticTop, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'LogisticRegressionParameter'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LOGISTICASYMMETRY__FIELD_NAME: WrapperField = WrapperField("LogisticAsymmetry", FieldType.DOUBLE)
    LOGISTICBOTTOM__FIELD_NAME: WrapperField = WrapperField("LogisticBottom", FieldType.DOUBLE)
    LOGISTICICEC50__FIELD_NAME: WrapperField = WrapperField("LogisticICEC50", FieldType.DOUBLE)
    LOGISTICSLOPE__FIELD_NAME: WrapperField = WrapperField("LogisticSlope", FieldType.DOUBLE)
    LOGISTICTOP__FIELD_NAME: WrapperField = WrapperField("LogisticTop", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LogisticAsymmetry_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticAsymmetry' on this record model
        """
        self.set_field_value(self.LOGISTICASYMMETRY__FIELD_NAME.field_name, value)

    def get_LogisticAsymmetry_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticAsymmetry' from this record model
        """
        return self.get_field_value(self.LOGISTICASYMMETRY__FIELD_NAME.field_name)

    def set_LogisticBottom_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticBottom' on this record model
        """
        self.set_field_value(self.LOGISTICBOTTOM__FIELD_NAME.field_name, value)

    def get_LogisticBottom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticBottom' from this record model
        """
        return self.get_field_value(self.LOGISTICBOTTOM__FIELD_NAME.field_name)

    def set_LogisticICEC50_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticICEC50' on this record model
        """
        self.set_field_value(self.LOGISTICICEC50__FIELD_NAME.field_name, value)

    def get_LogisticICEC50_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticICEC50' from this record model
        """
        return self.get_field_value(self.LOGISTICICEC50__FIELD_NAME.field_name)

    def set_LogisticSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticSlope' on this record model
        """
        self.set_field_value(self.LOGISTICSLOPE__FIELD_NAME.field_name, value)

    def get_LogisticSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticSlope' from this record model
        """
        return self.get_field_value(self.LOGISTICSLOPE__FIELD_NAME.field_name)

    def set_LogisticTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticTop' on this record model
        """
        self.set_field_value(self.LOGISTICTOP__FIELD_NAME.field_name, value)

    def get_LogisticTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticTop' from this record model
        """
        return self.get_field_value(self.LOGISTICTOP__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MaintenanceItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MaintenanceItem
    Data Type Display Name: Instrument Maintenance Item (Instrument Maintenance Items)
    Fields: ActiveWorkflowId, ActiveWorkflowName, AlertAdvanceNoticeInDays, CanPerformMaintenance, CreatedBy, DataRecordName, DateCreated, DeactivateIfPastDue, LastPerformedDate, MaintenanceComment, MaintenanceDate, MaintenanceGracePeriod, MaintenanceReason, MaintenanceStatus, MaintenanceTechnician, MaxNotifications, NextDueDate, NotificationUserGroupList, PreReceiptCount, RepeatInstrumentMaintenance, RepeatInterval, RepeatIntervalTime, RequirementType, RequiresApproval, RequiresESignatures, SentNotifications, ServiceDescription, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkOrderNumber
    """
    DATA_TYPE_NAME: str = 'MaintenanceItem'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    ACTIVEWORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowName", FieldType.SELECTION)
    ALERTADVANCENOTICEINDAYS__FIELD_NAME: WrapperField = WrapperField("AlertAdvanceNoticeInDays", FieldType.LONG)
    CANPERFORMMAINTENANCE__FIELD_NAME: WrapperField = WrapperField("CanPerformMaintenance", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEACTIVATEIFPASTDUE__FIELD_NAME: WrapperField = WrapperField("DeactivateIfPastDue", FieldType.BOOLEAN)
    LASTPERFORMEDDATE__FIELD_NAME: WrapperField = WrapperField("LastPerformedDate", FieldType.DATE)
    MAINTENANCECOMMENT__FIELD_NAME: WrapperField = WrapperField("MaintenanceComment", FieldType.STRING)
    MAINTENANCEDATE__FIELD_NAME: WrapperField = WrapperField("MaintenanceDate", FieldType.DATE)
    MAINTENANCEGRACEPERIOD__FIELD_NAME: WrapperField = WrapperField("MaintenanceGracePeriod", FieldType.LONG)
    MAINTENANCEREASON__FIELD_NAME: WrapperField = WrapperField("MaintenanceReason", FieldType.PICKLIST)
    MAINTENANCESTATUS__FIELD_NAME: WrapperField = WrapperField("MaintenanceStatus", FieldType.PICKLIST)
    MAINTENANCETECHNICIAN__FIELD_NAME: WrapperField = WrapperField("MaintenanceTechnician", FieldType.SELECTION)
    MAXNOTIFICATIONS__FIELD_NAME: WrapperField = WrapperField("MaxNotifications", FieldType.INTEGER)
    NEXTDUEDATE__FIELD_NAME: WrapperField = WrapperField("NextDueDate", FieldType.DATE)
    NOTIFICATIONUSERGROUPLIST__FIELD_NAME: WrapperField = WrapperField("NotificationUserGroupList", FieldType.SELECTION)
    PRERECEIPTCOUNT__FIELD_NAME: WrapperField = WrapperField("PreReceiptCount", FieldType.LONG)
    REPEATINSTRUMENTMAINTENANCE__FIELD_NAME: WrapperField = WrapperField("RepeatInstrumentMaintenance", FieldType.PICKLIST)
    REPEATINTERVAL__FIELD_NAME: WrapperField = WrapperField("RepeatInterval", FieldType.LONG)
    REPEATINTERVALTIME__FIELD_NAME: WrapperField = WrapperField("RepeatIntervalTime", FieldType.PICKLIST)
    REQUIREMENTTYPE__FIELD_NAME: WrapperField = WrapperField("RequirementType", FieldType.PICKLIST)
    REQUIRESAPPROVAL__FIELD_NAME: WrapperField = WrapperField("RequiresApproval", FieldType.PICKLIST)
    REQUIRESESIGNATURES__FIELD_NAME: WrapperField = WrapperField("RequiresESignatures", FieldType.BOOLEAN)
    SENTNOTIFICATIONS__FIELD_NAME: WrapperField = WrapperField("SentNotifications", FieldType.INTEGER)
    SERVICEDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("ServiceDescription", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKORDERNUMBER__FIELD_NAME: WrapperField = WrapperField("WorkOrderNumber", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_ActiveWorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveWorkflowName' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveWorkflowName' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name)

    def set_AlertAdvanceNoticeInDays_field(self, value: Optional[int]):
        """
        Set data field with field name 'AlertAdvanceNoticeInDays' on this record model
        """
        self.set_field_value(self.ALERTADVANCENOTICEINDAYS__FIELD_NAME.field_name, value)

    def get_AlertAdvanceNoticeInDays_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AlertAdvanceNoticeInDays' from this record model
        """
        return self.get_field_value(self.ALERTADVANCENOTICEINDAYS__FIELD_NAME.field_name)

    def set_CanPerformMaintenance_field(self, value: Optional[str]):
        """
        Set data field with field name 'CanPerformMaintenance' on this record model
        """
        self.set_field_value(self.CANPERFORMMAINTENANCE__FIELD_NAME.field_name, value)

    def get_CanPerformMaintenance_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CanPerformMaintenance' from this record model
        """
        return self.get_field_value(self.CANPERFORMMAINTENANCE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DeactivateIfPastDue_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DeactivateIfPastDue' on this record model
        """
        self.set_field_value(self.DEACTIVATEIFPASTDUE__FIELD_NAME.field_name, value)

    def get_DeactivateIfPastDue_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DeactivateIfPastDue' from this record model
        """
        return self.get_field_value(self.DEACTIVATEIFPASTDUE__FIELD_NAME.field_name)

    def set_LastPerformedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LastPerformedDate' on this record model
        """
        self.set_field_value(self.LASTPERFORMEDDATE__FIELD_NAME.field_name, value)

    def get_LastPerformedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LastPerformedDate' from this record model
        """
        return self.get_field_value(self.LASTPERFORMEDDATE__FIELD_NAME.field_name)

    def set_MaintenanceComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceComment' on this record model
        """
        self.set_field_value(self.MAINTENANCECOMMENT__FIELD_NAME.field_name, value)

    def get_MaintenanceComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceComment' from this record model
        """
        return self.get_field_value(self.MAINTENANCECOMMENT__FIELD_NAME.field_name)

    def set_MaintenanceDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenanceDate' on this record model
        """
        self.set_field_value(self.MAINTENANCEDATE__FIELD_NAME.field_name, value)

    def get_MaintenanceDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenanceDate' from this record model
        """
        return self.get_field_value(self.MAINTENANCEDATE__FIELD_NAME.field_name)

    def set_MaintenanceGracePeriod_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenanceGracePeriod' on this record model
        """
        self.set_field_value(self.MAINTENANCEGRACEPERIOD__FIELD_NAME.field_name, value)

    def get_MaintenanceGracePeriod_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenanceGracePeriod' from this record model
        """
        return self.get_field_value(self.MAINTENANCEGRACEPERIOD__FIELD_NAME.field_name)

    def set_MaintenanceReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceReason' on this record model
        """
        self.set_field_value(self.MAINTENANCEREASON__FIELD_NAME.field_name, value)

    def get_MaintenanceReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceReason' from this record model
        """
        return self.get_field_value(self.MAINTENANCEREASON__FIELD_NAME.field_name)

    def set_MaintenanceStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceStatus' on this record model
        """
        self.set_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name, value)

    def get_MaintenanceStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceStatus' from this record model
        """
        return self.get_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name)

    def set_MaintenanceTechnician_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceTechnician' on this record model
        """
        self.set_field_value(self.MAINTENANCETECHNICIAN__FIELD_NAME.field_name, value)

    def get_MaintenanceTechnician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceTechnician' from this record model
        """
        return self.get_field_value(self.MAINTENANCETECHNICIAN__FIELD_NAME.field_name)

    def set_MaxNotifications_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaxNotifications' on this record model
        """
        self.set_field_value(self.MAXNOTIFICATIONS__FIELD_NAME.field_name, value)

    def get_MaxNotifications_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaxNotifications' from this record model
        """
        return self.get_field_value(self.MAXNOTIFICATIONS__FIELD_NAME.field_name)

    def set_NextDueDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NextDueDate' on this record model
        """
        self.set_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name, value)

    def get_NextDueDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NextDueDate' from this record model
        """
        return self.get_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name)

    def set_NotificationUserGroupList_field(self, value: Optional[str]):
        """
        Set data field with field name 'NotificationUserGroupList' on this record model
        """
        self.set_field_value(self.NOTIFICATIONUSERGROUPLIST__FIELD_NAME.field_name, value)

    def get_NotificationUserGroupList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NotificationUserGroupList' from this record model
        """
        return self.get_field_value(self.NOTIFICATIONUSERGROUPLIST__FIELD_NAME.field_name)

    def set_PreReceiptCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'PreReceiptCount' on this record model
        """
        self.set_field_value(self.PRERECEIPTCOUNT__FIELD_NAME.field_name, value)

    def get_PreReceiptCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PreReceiptCount' from this record model
        """
        return self.get_field_value(self.PRERECEIPTCOUNT__FIELD_NAME.field_name)

    def set_RepeatInstrumentMaintenance_field(self, value: Optional[str]):
        """
        Set data field with field name 'RepeatInstrumentMaintenance' on this record model
        """
        self.set_field_value(self.REPEATINSTRUMENTMAINTENANCE__FIELD_NAME.field_name, value)

    def get_RepeatInstrumentMaintenance_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RepeatInstrumentMaintenance' from this record model
        """
        return self.get_field_value(self.REPEATINSTRUMENTMAINTENANCE__FIELD_NAME.field_name)

    def set_RepeatInterval_field(self, value: Optional[int]):
        """
        Set data field with field name 'RepeatInterval' on this record model
        """
        self.set_field_value(self.REPEATINTERVAL__FIELD_NAME.field_name, value)

    def get_RepeatInterval_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RepeatInterval' from this record model
        """
        return self.get_field_value(self.REPEATINTERVAL__FIELD_NAME.field_name)

    def set_RepeatIntervalTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'RepeatIntervalTime' on this record model
        """
        self.set_field_value(self.REPEATINTERVALTIME__FIELD_NAME.field_name, value)

    def get_RepeatIntervalTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RepeatIntervalTime' from this record model
        """
        return self.get_field_value(self.REPEATINTERVALTIME__FIELD_NAME.field_name)

    def set_RequirementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequirementType' on this record model
        """
        self.set_field_value(self.REQUIREMENTTYPE__FIELD_NAME.field_name, value)

    def get_RequirementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequirementType' from this record model
        """
        return self.get_field_value(self.REQUIREMENTTYPE__FIELD_NAME.field_name)

    def set_RequiresApproval_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequiresApproval' on this record model
        """
        self.set_field_value(self.REQUIRESAPPROVAL__FIELD_NAME.field_name, value)

    def get_RequiresApproval_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequiresApproval' from this record model
        """
        return self.get_field_value(self.REQUIRESAPPROVAL__FIELD_NAME.field_name)

    def set_RequiresESignatures_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequiresESignatures' on this record model
        """
        self.set_field_value(self.REQUIRESESIGNATURES__FIELD_NAME.field_name, value)

    def get_RequiresESignatures_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequiresESignatures' from this record model
        """
        return self.get_field_value(self.REQUIRESESIGNATURES__FIELD_NAME.field_name)

    def set_SentNotifications_field(self, value: Optional[int]):
        """
        Set data field with field name 'SentNotifications' on this record model
        """
        self.set_field_value(self.SENTNOTIFICATIONS__FIELD_NAME.field_name, value)

    def get_SentNotifications_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SentNotifications' from this record model
        """
        return self.get_field_value(self.SENTNOTIFICATIONS__FIELD_NAME.field_name)

    def set_ServiceDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ServiceDescription' on this record model
        """
        self.set_field_value(self.SERVICEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ServiceDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ServiceDescription' from this record model
        """
        return self.get_field_value(self.SERVICEDESCRIPTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkOrderNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkOrderNumber' on this record model
        """
        self.set_field_value(self.WORKORDERNUMBER__FIELD_NAME.field_name, value)

    def get_WorkOrderNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkOrderNumber' from this record model
        """
        return self.get_field_value(self.WORKORDERNUMBER__FIELD_NAME.field_name)


class MasterMixIngredientModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MasterMixIngredient
    Data Type Display Name: Master Mix Ingredient Definition (Master Mix Ingredient Definitions)
    Fields: ConcentrationUnits, ConsumableDataType, ConsumableItemDataType, ConsumableName, ConsumableRecordId, ConsumableType, ContributionPercent, CreatedBy, DataRecordName, DateCreated, ItemExtensionDataType, PartNumber, Quantity, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'MasterMixIngredient'
    CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("ConcentrationUnits", FieldType.PICKLIST)
    CONSUMABLEDATATYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableDataType", FieldType.STRING)
    CONSUMABLEITEMDATATYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableItemDataType", FieldType.SELECTION)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLERECORDID__FIELD_NAME: WrapperField = WrapperField("ConsumableRecordId", FieldType.LONG)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.STRING)
    CONTRIBUTIONPERCENT__FIELD_NAME: WrapperField = WrapperField("ContributionPercent", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ITEMEXTENSIONDATATYPE__FIELD_NAME: WrapperField = WrapperField("ItemExtensionDataType", FieldType.SELECTION)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITY__FIELD_NAME: WrapperField = WrapperField("Quantity", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ConsumableDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableItemDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableItemDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableItemDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableItemDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConsumableRecordId' on this record model
        """
        self.set_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name, value)

    def get_ConsumableRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConsumableRecordId' from this record model
        """
        return self.get_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ContributionPercent_field(self, value: Optional[float]):
        """
        Set data field with field name 'ContributionPercent' on this record model
        """
        self.set_field_value(self.CONTRIBUTIONPERCENT__FIELD_NAME.field_name, value)

    def get_ContributionPercent_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ContributionPercent' from this record model
        """
        return self.get_field_value(self.CONTRIBUTIONPERCENT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ItemExtensionDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemExtensionDataType' on this record model
        """
        self.set_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name, value)

    def get_ItemExtensionDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemExtensionDataType' from this record model
        """
        return self.get_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MasterMixInstructionsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MasterMixInstructions
    Data Type Display Name: Master Mix Instruction (Master Mix Instructions)
    Fields: CreatedBy, DataRecordName, DateCreated, Instructions, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'MasterMixInstructions'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INSTRUCTIONS__FIELD_NAME: WrapperField = WrapperField("Instructions", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Instructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'Instructions' on this record model
        """
        self.set_field_value(self.INSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_Instructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Instructions' from this record model
        """
        return self.get_field_value(self.INSTRUCTIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MasterMixItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MasterMixItem
    Data Type Display Name: Master Mix Ingredient (Master Mix Ingredients)
    Fields: ConcentrationUnits, ConsumableBarcode, ConsumableDataType, ConsumableItemDataType, ConsumableRecordId, ConsumableType, CreatedBy, DataRecordName, DateCreated, ItemExtensionDataType, LockFields, LotNumber, Notes, PartNumber, QuantityToUse, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    The MasterMixItem Data Type
    """
    DATA_TYPE_NAME: str = 'MasterMixItem'
    CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("ConcentrationUnits", FieldType.PICKLIST)
    CONSUMABLEBARCODE__FIELD_NAME: WrapperField = WrapperField("ConsumableBarcode", FieldType.SELECTION)
    CONSUMABLEDATATYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableDataType", FieldType.STRING)
    CONSUMABLEITEMDATATYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableItemDataType", FieldType.SELECTION)
    CONSUMABLERECORDID__FIELD_NAME: WrapperField = WrapperField("ConsumableRecordId", FieldType.LONG)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ITEMEXTENSIONDATATYPE__FIELD_NAME: WrapperField = WrapperField("ItemExtensionDataType", FieldType.SELECTION)
    LOCKFIELDS__FIELD_NAME: WrapperField = WrapperField("LockFields", FieldType.BOOLEAN)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.SELECTION)
    NOTES__FIELD_NAME: WrapperField = WrapperField("Notes", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYTOUSE__FIELD_NAME: WrapperField = WrapperField("QuantityToUse", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_ConsumableDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableItemDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableItemDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableItemDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableItemDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConsumableRecordId' on this record model
        """
        self.set_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name, value)

    def get_ConsumableRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConsumableRecordId' from this record model
        """
        return self.get_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ItemExtensionDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemExtensionDataType' on this record model
        """
        self.set_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name, value)

    def get_ItemExtensionDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemExtensionDataType' from this record model
        """
        return self.get_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name)

    def set_LockFields_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LockFields' on this record model
        """
        self.set_field_value(self.LOCKFIELDS__FIELD_NAME.field_name, value)

    def get_LockFields_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LockFields' from this record model
        """
        return self.get_field_value(self.LOCKFIELDS__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_Notes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Notes' on this record model
        """
        self.set_field_value(self.NOTES__FIELD_NAME.field_name, value)

    def get_Notes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Notes' from this record model
        """
        return self.get_field_value(self.NOTES__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityToUse' on this record model
        """
        self.set_field_value(self.QUANTITYTOUSE__FIELD_NAME.field_name, value)

    def get_QuantityToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityToUse' from this record model
        """
        return self.get_field_value(self.QUANTITYTOUSE__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MeasurementExceptionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MeasurementException
    Data Type Display Name: Observation Exception (Observation Exceptions)
    Fields: CreatedBy, DataRecordName, DateCreated, SubjectRecordId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'MeasurementException'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SUBJECTRECORDID__FIELD_NAME: WrapperField = WrapperField("SubjectRecordId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SubjectRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectRecordId' on this record model
        """
        self.set_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name, value)

    def get_SubjectRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectRecordId' from this record model
        """
        return self.get_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MoleculeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Molecule
    Data Type Display Name: Molecule (Molecules)
    Fields: ActualYield, ADCConcentration, ADCConcIncubationLabeled, Barcode, CAS_NO, Charge, ChEBI_ID, CompoundLocation, ConcWarhead, Conjugate, ConsumableName, ConsumableType, CreatedBy, CrudeSolvent, CrudeVolume, CrudeWeight, DAR, DataRecordName, DateCreated, DCNumber, DilutionFactor, ExactMass, ExpirationDate, FaSaltCoefficient, Formula, GenerateName, JchemId, LabLocation, Linker, LotNumber, MolarMass, MolWeight, MultiParentLink215, Nh3SaltCoefficient, PartNumber, PeptideString, ReactionCoefficient, Render, RequestNotes, ReturnFractionFormat, ReturnSolConc, ScientistEmail, ScientistName, SmallMolecularInhibitor, SMILES, Stereochemistry, SubstanceName, SupplierName, TfaSaltCoefficient, TheoreticalYield, UniSubId, VeloxLastModifiedBy, VeloxLastModifiedDate, YieldPercentage
    """
    DATA_TYPE_NAME: str = 'Molecule'
    ACTUALYIELD__FIELD_NAME: WrapperField = WrapperField("ActualYield", FieldType.DOUBLE)
    ADCCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("ADCConcentration", FieldType.DOUBLE)
    ADCCONCINCUBATIONLABELED__FIELD_NAME: WrapperField = WrapperField("ADCConcIncubationLabeled", FieldType.DOUBLE)
    BARCODE__FIELD_NAME: WrapperField = WrapperField("Barcode", FieldType.STRING)
    CAS_NO__FIELD_NAME: WrapperField = WrapperField("CAS_NO", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CHEBI_ID__FIELD_NAME: WrapperField = WrapperField("ChEBI_ID", FieldType.STRING)
    COMPOUNDLOCATION__FIELD_NAME: WrapperField = WrapperField("CompoundLocation", FieldType.PICKLIST)
    CONCWARHEAD__FIELD_NAME: WrapperField = WrapperField("ConcWarhead", FieldType.DOUBLE)
    CONJUGATE__FIELD_NAME: WrapperField = WrapperField("Conjugate", FieldType.STRING)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CRUDESOLVENT__FIELD_NAME: WrapperField = WrapperField("CrudeSolvent", FieldType.STRING)
    CRUDEVOLUME__FIELD_NAME: WrapperField = WrapperField("CrudeVolume", FieldType.DOUBLE)
    CRUDEWEIGHT__FIELD_NAME: WrapperField = WrapperField("CrudeWeight", FieldType.DOUBLE)
    DAR__FIELD_NAME: WrapperField = WrapperField("DAR", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DCNUMBER__FIELD_NAME: WrapperField = WrapperField("DCNumber", FieldType.STRING)
    DILUTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("DilutionFactor", FieldType.DOUBLE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    FASALTCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("FaSaltCoefficient", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GENERATENAME__FIELD_NAME: WrapperField = WrapperField("GenerateName", FieldType.ACTION)
    JCHEMID__FIELD_NAME: WrapperField = WrapperField("JchemId", FieldType.INTEGER)
    LABLOCATION__FIELD_NAME: WrapperField = WrapperField("LabLocation", FieldType.STRING)
    LINKER__FIELD_NAME: WrapperField = WrapperField("Linker", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLARMASS__FIELD_NAME: WrapperField = WrapperField("MolarMass", FieldType.DOUBLE)
    MOLWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolWeight", FieldType.DOUBLE)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    NH3SALTCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("Nh3SaltCoefficient", FieldType.DOUBLE)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    PEPTIDESTRING__FIELD_NAME: WrapperField = WrapperField("PeptideString", FieldType.STRING)
    REACTIONCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("ReactionCoefficient", FieldType.INTEGER)
    RENDER__FIELD_NAME: WrapperField = WrapperField("Render", FieldType.STRING)
    REQUESTNOTES__FIELD_NAME: WrapperField = WrapperField("RequestNotes", FieldType.STRING)
    RETURNFRACTIONFORMAT__FIELD_NAME: WrapperField = WrapperField("ReturnFractionFormat", FieldType.STRING)
    RETURNSOLCONC__FIELD_NAME: WrapperField = WrapperField("ReturnSolConc", FieldType.DOUBLE)
    SCIENTISTEMAIL__FIELD_NAME: WrapperField = WrapperField("ScientistEmail", FieldType.STRING)
    SCIENTISTNAME__FIELD_NAME: WrapperField = WrapperField("ScientistName", FieldType.STRING)
    SMALLMOLECULARINHIBITOR__FIELD_NAME: WrapperField = WrapperField("SmallMolecularInhibitor", FieldType.INTEGER)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    STEREOCHEMISTRY__FIELD_NAME: WrapperField = WrapperField("Stereochemistry", FieldType.STRING)
    SUBSTANCENAME__FIELD_NAME: WrapperField = WrapperField("SubstanceName", FieldType.STRING)
    SUPPLIERNAME__FIELD_NAME: WrapperField = WrapperField("SupplierName", FieldType.STRING)
    TFASALTCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("TfaSaltCoefficient", FieldType.DOUBLE)
    THEORETICALYIELD__FIELD_NAME: WrapperField = WrapperField("TheoreticalYield", FieldType.DOUBLE)
    UNISUBID__FIELD_NAME: WrapperField = WrapperField("UniSubId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELDPERCENTAGE__FIELD_NAME: WrapperField = WrapperField("YieldPercentage", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActualYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualYield' on this record model
        """
        self.set_field_value(self.ACTUALYIELD__FIELD_NAME.field_name, value)

    def get_ActualYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualYield' from this record model
        """
        return self.get_field_value(self.ACTUALYIELD__FIELD_NAME.field_name)

    def set_ADCConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'ADCConcentration' on this record model
        """
        self.set_field_value(self.ADCCONCENTRATION__FIELD_NAME.field_name, value)

    def get_ADCConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ADCConcentration' from this record model
        """
        return self.get_field_value(self.ADCCONCENTRATION__FIELD_NAME.field_name)

    def set_ADCConcIncubationLabeled_field(self, value: Optional[float]):
        """
        Set data field with field name 'ADCConcIncubationLabeled' on this record model
        """
        self.set_field_value(self.ADCCONCINCUBATIONLABELED__FIELD_NAME.field_name, value)

    def get_ADCConcIncubationLabeled_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ADCConcIncubationLabeled' from this record model
        """
        return self.get_field_value(self.ADCCONCINCUBATIONLABELED__FIELD_NAME.field_name)

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_CAS_NO_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS_NO' on this record model
        """
        self.set_field_value(self.CAS_NO__FIELD_NAME.field_name, value)

    def get_CAS_NO_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS_NO' from this record model
        """
        return self.get_field_value(self.CAS_NO__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ChEBI_ID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChEBI_ID' on this record model
        """
        self.set_field_value(self.CHEBI_ID__FIELD_NAME.field_name, value)

    def get_ChEBI_ID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChEBI_ID' from this record model
        """
        return self.get_field_value(self.CHEBI_ID__FIELD_NAME.field_name)

    def set_CompoundLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompoundLocation' on this record model
        """
        self.set_field_value(self.COMPOUNDLOCATION__FIELD_NAME.field_name, value)

    def get_CompoundLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompoundLocation' from this record model
        """
        return self.get_field_value(self.COMPOUNDLOCATION__FIELD_NAME.field_name)

    def set_ConcWarhead_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConcWarhead' on this record model
        """
        self.set_field_value(self.CONCWARHEAD__FIELD_NAME.field_name, value)

    def get_ConcWarhead_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConcWarhead' from this record model
        """
        return self.get_field_value(self.CONCWARHEAD__FIELD_NAME.field_name)

    def set_Conjugate_field(self, value: Optional[str]):
        """
        Set data field with field name 'Conjugate' on this record model
        """
        self.set_field_value(self.CONJUGATE__FIELD_NAME.field_name, value)

    def get_Conjugate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Conjugate' from this record model
        """
        return self.get_field_value(self.CONJUGATE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CrudeSolvent_field(self, value: Optional[str]):
        """
        Set data field with field name 'CrudeSolvent' on this record model
        """
        self.set_field_value(self.CRUDESOLVENT__FIELD_NAME.field_name, value)

    def get_CrudeSolvent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CrudeSolvent' from this record model
        """
        return self.get_field_value(self.CRUDESOLVENT__FIELD_NAME.field_name)

    def set_CrudeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'CrudeVolume' on this record model
        """
        self.set_field_value(self.CRUDEVOLUME__FIELD_NAME.field_name, value)

    def get_CrudeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CrudeVolume' from this record model
        """
        return self.get_field_value(self.CRUDEVOLUME__FIELD_NAME.field_name)

    def set_CrudeWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'CrudeWeight' on this record model
        """
        self.set_field_value(self.CRUDEWEIGHT__FIELD_NAME.field_name, value)

    def get_CrudeWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CrudeWeight' from this record model
        """
        return self.get_field_value(self.CRUDEWEIGHT__FIELD_NAME.field_name)

    def set_DAR_field(self, value: Optional[float]):
        """
        Set data field with field name 'DAR' on this record model
        """
        self.set_field_value(self.DAR__FIELD_NAME.field_name, value)

    def get_DAR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DAR' from this record model
        """
        return self.get_field_value(self.DAR__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DCNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'DCNumber' on this record model
        """
        self.set_field_value(self.DCNUMBER__FIELD_NAME.field_name, value)

    def get_DCNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DCNumber' from this record model
        """
        return self.get_field_value(self.DCNUMBER__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FaSaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'FaSaltCoefficient' on this record model
        """
        self.set_field_value(self.FASALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_FaSaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FaSaltCoefficient' from this record model
        """
        return self.get_field_value(self.FASALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_JchemId_field(self, value: Optional[int]):
        """
        Set data field with field name 'JchemId' on this record model
        """
        self.set_field_value(self.JCHEMID__FIELD_NAME.field_name, value)

    def get_JchemId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'JchemId' from this record model
        """
        return self.get_field_value(self.JCHEMID__FIELD_NAME.field_name)

    def set_LabLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'LabLocation' on this record model
        """
        self.set_field_value(self.LABLOCATION__FIELD_NAME.field_name, value)

    def get_LabLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LabLocation' from this record model
        """
        return self.get_field_value(self.LABLOCATION__FIELD_NAME.field_name)

    def set_Linker_field(self, value: Optional[str]):
        """
        Set data field with field name 'Linker' on this record model
        """
        self.set_field_value(self.LINKER__FIELD_NAME.field_name, value)

    def get_Linker_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Linker' from this record model
        """
        return self.get_field_value(self.LINKER__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolarMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolarMass' on this record model
        """
        self.set_field_value(self.MOLARMASS__FIELD_NAME.field_name, value)

    def get_MolarMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolarMass' from this record model
        """
        return self.get_field_value(self.MOLARMASS__FIELD_NAME.field_name)

    def set_MolWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolWeight' on this record model
        """
        self.set_field_value(self.MOLWEIGHT__FIELD_NAME.field_name, value)

    def get_MolWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolWeight' from this record model
        """
        return self.get_field_value(self.MOLWEIGHT__FIELD_NAME.field_name)

    def set_Nh3SaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nh3SaltCoefficient' on this record model
        """
        self.set_field_value(self.NH3SALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_Nh3SaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nh3SaltCoefficient' from this record model
        """
        return self.get_field_value(self.NH3SALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_PeptideString_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeptideString' on this record model
        """
        self.set_field_value(self.PEPTIDESTRING__FIELD_NAME.field_name, value)

    def get_PeptideString_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeptideString' from this record model
        """
        return self.get_field_value(self.PEPTIDESTRING__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_Render_field(self, value: Optional[str]):
        """
        Set data field with field name 'Render' on this record model
        """
        self.set_field_value(self.RENDER__FIELD_NAME.field_name, value)

    def get_Render_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Render' from this record model
        """
        return self.get_field_value(self.RENDER__FIELD_NAME.field_name)

    def set_RequestNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestNotes' on this record model
        """
        self.set_field_value(self.REQUESTNOTES__FIELD_NAME.field_name, value)

    def get_RequestNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestNotes' from this record model
        """
        return self.get_field_value(self.REQUESTNOTES__FIELD_NAME.field_name)

    def set_ReturnFractionFormat_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReturnFractionFormat' on this record model
        """
        self.set_field_value(self.RETURNFRACTIONFORMAT__FIELD_NAME.field_name, value)

    def get_ReturnFractionFormat_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReturnFractionFormat' from this record model
        """
        return self.get_field_value(self.RETURNFRACTIONFORMAT__FIELD_NAME.field_name)

    def set_ReturnSolConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReturnSolConc' on this record model
        """
        self.set_field_value(self.RETURNSOLCONC__FIELD_NAME.field_name, value)

    def get_ReturnSolConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReturnSolConc' from this record model
        """
        return self.get_field_value(self.RETURNSOLCONC__FIELD_NAME.field_name)

    def set_ScientistEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScientistEmail' on this record model
        """
        self.set_field_value(self.SCIENTISTEMAIL__FIELD_NAME.field_name, value)

    def get_ScientistEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScientistEmail' from this record model
        """
        return self.get_field_value(self.SCIENTISTEMAIL__FIELD_NAME.field_name)

    def set_ScientistName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScientistName' on this record model
        """
        self.set_field_value(self.SCIENTISTNAME__FIELD_NAME.field_name, value)

    def get_ScientistName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScientistName' from this record model
        """
        return self.get_field_value(self.SCIENTISTNAME__FIELD_NAME.field_name)

    def set_SmallMolecularInhibitor_field(self, value: Optional[int]):
        """
        Set data field with field name 'SmallMolecularInhibitor' on this record model
        """
        self.set_field_value(self.SMALLMOLECULARINHIBITOR__FIELD_NAME.field_name, value)

    def get_SmallMolecularInhibitor_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SmallMolecularInhibitor' from this record model
        """
        return self.get_field_value(self.SMALLMOLECULARINHIBITOR__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_Stereochemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stereochemistry' on this record model
        """
        self.set_field_value(self.STEREOCHEMISTRY__FIELD_NAME.field_name, value)

    def get_Stereochemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stereochemistry' from this record model
        """
        return self.get_field_value(self.STEREOCHEMISTRY__FIELD_NAME.field_name)

    def set_SubstanceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubstanceName' on this record model
        """
        self.set_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name, value)

    def get_SubstanceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubstanceName' from this record model
        """
        return self.get_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name)

    def set_SupplierName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SupplierName' on this record model
        """
        self.set_field_value(self.SUPPLIERNAME__FIELD_NAME.field_name, value)

    def get_SupplierName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SupplierName' from this record model
        """
        return self.get_field_value(self.SUPPLIERNAME__FIELD_NAME.field_name)

    def set_TfaSaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'TfaSaltCoefficient' on this record model
        """
        self.set_field_value(self.TFASALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_TfaSaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TfaSaltCoefficient' from this record model
        """
        return self.get_field_value(self.TFASALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_TheoreticalYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'TheoreticalYield' on this record model
        """
        self.set_field_value(self.THEORETICALYIELD__FIELD_NAME.field_name, value)

    def get_TheoreticalYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TheoreticalYield' from this record model
        """
        return self.get_field_value(self.THEORETICALYIELD__FIELD_NAME.field_name)

    def set_UniSubId_field(self, value: Optional[str]):
        """
        Set data field with field name 'UniSubId' on this record model
        """
        self.set_field_value(self.UNISUBID__FIELD_NAME.field_name, value)

    def get_UniSubId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UniSubId' from this record model
        """
        return self.get_field_value(self.UNISUBID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_YieldPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'YieldPercentage' on this record model
        """
        self.set_field_value(self.YIELDPERCENTAGE__FIELD_NAME.field_name, value)

    def get_YieldPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'YieldPercentage' from this record model
        """
        return self.get_field_value(self.YIELDPERCENTAGE__FIELD_NAME.field_name)


class MsdResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MsdResult
    Data Type Display Name: MSD Result (MSD Results)
    Fields: Algorithm, AlgorithmParamCalcAsymFactor, AlgorithmParamCalcBottom, AlgorithmParamCalcHillSlope, AlgorithmParamCalcMidPoint, AlgorithmParamCalcTop, AlgorithmParamCalcYInt, AlgorithmParameterWeighting, Assay, BackFitCurve, CalcConcCV, CalcConcentration, CalcConcMean, Concentration, CreatedBy, CV, DataRecordName, DateCreated, DetectionLimitsBotOfRangeParam, DetectionLimitsBotOfRangeType, DetectionLimitsCalcHigh, DetectionLimitsCalcLow, DetectionLimitsTopOfRangeParam, DetectionLimitsTopOfRangeType, DetectionRange, Dilution, Excluded, FitStatisticRSquared, Mean, PercentRecovery, PercentRecoveryMean, PlateName, Sample, SampleDescription, SampleGroup, SignalValue, Spot, VeloxLastModifiedBy, VeloxLastModifiedDate, Well
    """
    DATA_TYPE_NAME: str = 'MsdResult'
    ALGORITHM__FIELD_NAME: WrapperField = WrapperField("Algorithm", FieldType.STRING)
    ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME: WrapperField = WrapperField("AlgorithmParamCalcAsymFactor", FieldType.DOUBLE)
    ALGORITHMPARAMCALCBOTTOM__FIELD_NAME: WrapperField = WrapperField("AlgorithmParamCalcBottom", FieldType.DOUBLE)
    ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME: WrapperField = WrapperField("AlgorithmParamCalcHillSlope", FieldType.DOUBLE)
    ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME: WrapperField = WrapperField("AlgorithmParamCalcMidPoint", FieldType.DOUBLE)
    ALGORITHMPARAMCALCTOP__FIELD_NAME: WrapperField = WrapperField("AlgorithmParamCalcTop", FieldType.DOUBLE)
    ALGORITHMPARAMCALCYINT__FIELD_NAME: WrapperField = WrapperField("AlgorithmParamCalcYInt", FieldType.DOUBLE)
    ALGORITHMPARAMETERWEIGHTING__FIELD_NAME: WrapperField = WrapperField("AlgorithmParameterWeighting", FieldType.STRING)
    ASSAY__FIELD_NAME: WrapperField = WrapperField("Assay", FieldType.STRING)
    BACKFITCURVE__FIELD_NAME: WrapperField = WrapperField("BackFitCurve", FieldType.STRING)
    CALCCONCCV__FIELD_NAME: WrapperField = WrapperField("CalcConcCV", FieldType.DOUBLE)
    CALCCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("CalcConcentration", FieldType.DOUBLE)
    CALCCONCMEAN__FIELD_NAME: WrapperField = WrapperField("CalcConcMean", FieldType.DOUBLE)
    CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Concentration", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CV__FIELD_NAME: WrapperField = WrapperField("CV", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME: WrapperField = WrapperField("DetectionLimitsBotOfRangeParam", FieldType.DOUBLE)
    DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME: WrapperField = WrapperField("DetectionLimitsBotOfRangeType", FieldType.STRING)
    DETECTIONLIMITSCALCHIGH__FIELD_NAME: WrapperField = WrapperField("DetectionLimitsCalcHigh", FieldType.DOUBLE)
    DETECTIONLIMITSCALCLOW__FIELD_NAME: WrapperField = WrapperField("DetectionLimitsCalcLow", FieldType.DOUBLE)
    DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME: WrapperField = WrapperField("DetectionLimitsTopOfRangeParam", FieldType.DOUBLE)
    DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME: WrapperField = WrapperField("DetectionLimitsTopOfRangeType", FieldType.STRING)
    DETECTIONRANGE__FIELD_NAME: WrapperField = WrapperField("DetectionRange", FieldType.STRING)
    DILUTION__FIELD_NAME: WrapperField = WrapperField("Dilution", FieldType.DOUBLE)
    EXCLUDED__FIELD_NAME: WrapperField = WrapperField("Excluded", FieldType.PICKLIST)
    FITSTATISTICRSQUARED__FIELD_NAME: WrapperField = WrapperField("FitStatisticRSquared", FieldType.DOUBLE)
    MEAN__FIELD_NAME: WrapperField = WrapperField("Mean", FieldType.DOUBLE)
    PERCENTRECOVERY__FIELD_NAME: WrapperField = WrapperField("PercentRecovery", FieldType.DOUBLE)
    PERCENTRECOVERYMEAN__FIELD_NAME: WrapperField = WrapperField("PercentRecoveryMean", FieldType.DOUBLE)
    PLATENAME__FIELD_NAME: WrapperField = WrapperField("PlateName", FieldType.STRING)
    SAMPLE__FIELD_NAME: WrapperField = WrapperField("Sample", FieldType.STRING)
    SAMPLEDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("SampleDescription", FieldType.STRING)
    SAMPLEGROUP__FIELD_NAME: WrapperField = WrapperField("SampleGroup", FieldType.STRING)
    SIGNALVALUE__FIELD_NAME: WrapperField = WrapperField("SignalValue", FieldType.DOUBLE)
    SPOT__FIELD_NAME: WrapperField = WrapperField("Spot", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELL__FIELD_NAME: WrapperField = WrapperField("Well", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Algorithm_field(self, value: Optional[str]):
        """
        Set data field with field name 'Algorithm' on this record model
        """
        self.set_field_value(self.ALGORITHM__FIELD_NAME.field_name, value)

    def get_Algorithm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Algorithm' from this record model
        """
        return self.get_field_value(self.ALGORITHM__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcAsymFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcAsymFactor' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcAsymFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcAsymFactor' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcBottom_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcBottom' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCBOTTOM__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcBottom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcBottom' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCBOTTOM__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcHillSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcHillSlope' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcHillSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcHillSlope' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcMidPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcMidPoint' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcMidPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcMidPoint' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcTop' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCTOP__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcTop' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCTOP__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcYInt_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcYInt' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCYINT__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcYInt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcYInt' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCYINT__FIELD_NAME.field_name)

    def set_AlgorithmParameterWeighting_field(self, value: Optional[str]):
        """
        Set data field with field name 'AlgorithmParameterWeighting' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMETERWEIGHTING__FIELD_NAME.field_name, value)

    def get_AlgorithmParameterWeighting_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AlgorithmParameterWeighting' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMETERWEIGHTING__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def set_BackFitCurve_field(self, value: Optional[str]):
        """
        Set data field with field name 'BackFitCurve' on this record model
        """
        self.set_field_value(self.BACKFITCURVE__FIELD_NAME.field_name, value)

    def get_BackFitCurve_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BackFitCurve' from this record model
        """
        return self.get_field_value(self.BACKFITCURVE__FIELD_NAME.field_name)

    def set_CalcConcCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalcConcCV' on this record model
        """
        self.set_field_value(self.CALCCONCCV__FIELD_NAME.field_name, value)

    def get_CalcConcCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalcConcCV' from this record model
        """
        return self.get_field_value(self.CALCCONCCV__FIELD_NAME.field_name)

    def set_CalcConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalcConcentration' on this record model
        """
        self.set_field_value(self.CALCCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalcConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalcConcentration' from this record model
        """
        return self.get_field_value(self.CALCCONCENTRATION__FIELD_NAME.field_name)

    def set_CalcConcMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalcConcMean' on this record model
        """
        self.set_field_value(self.CALCCONCMEAN__FIELD_NAME.field_name, value)

    def get_CalcConcMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalcConcMean' from this record model
        """
        return self.get_field_value(self.CALCCONCMEAN__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CV' on this record model
        """
        self.set_field_value(self.CV__FIELD_NAME.field_name, value)

    def get_CV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CV' from this record model
        """
        return self.get_field_value(self.CV__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DetectionLimitsBotOfRangeParam_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsBotOfRangeParam' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME.field_name, value)

    def get_DetectionLimitsBotOfRangeParam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsBotOfRangeParam' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME.field_name)

    def set_DetectionLimitsBotOfRangeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionLimitsBotOfRangeType' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME.field_name, value)

    def get_DetectionLimitsBotOfRangeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionLimitsBotOfRangeType' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME.field_name)

    def set_DetectionLimitsCalcHigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsCalcHigh' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSCALCHIGH__FIELD_NAME.field_name, value)

    def get_DetectionLimitsCalcHigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsCalcHigh' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSCALCHIGH__FIELD_NAME.field_name)

    def set_DetectionLimitsCalcLow_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsCalcLow' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSCALCLOW__FIELD_NAME.field_name, value)

    def get_DetectionLimitsCalcLow_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsCalcLow' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSCALCLOW__FIELD_NAME.field_name)

    def set_DetectionLimitsTopOfRangeParam_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsTopOfRangeParam' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME.field_name, value)

    def get_DetectionLimitsTopOfRangeParam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsTopOfRangeParam' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME.field_name)

    def set_DetectionLimitsTopOfRangeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionLimitsTopOfRangeType' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME.field_name, value)

    def get_DetectionLimitsTopOfRangeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionLimitsTopOfRangeType' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME.field_name)

    def set_DetectionRange_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionRange' on this record model
        """
        self.set_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name, value)

    def get_DetectionRange_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionRange' from this record model
        """
        return self.get_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name)

    def set_Dilution_field(self, value: Optional[float]):
        """
        Set data field with field name 'Dilution' on this record model
        """
        self.set_field_value(self.DILUTION__FIELD_NAME.field_name, value)

    def get_Dilution_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Dilution' from this record model
        """
        return self.get_field_value(self.DILUTION__FIELD_NAME.field_name)

    def set_Excluded_field(self, value: Optional[str]):
        """
        Set data field with field name 'Excluded' on this record model
        """
        self.set_field_value(self.EXCLUDED__FIELD_NAME.field_name, value)

    def get_Excluded_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Excluded' from this record model
        """
        return self.get_field_value(self.EXCLUDED__FIELD_NAME.field_name)

    def set_FitStatisticRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'FitStatisticRSquared' on this record model
        """
        self.set_field_value(self.FITSTATISTICRSQUARED__FIELD_NAME.field_name, value)

    def get_FitStatisticRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FitStatisticRSquared' from this record model
        """
        return self.get_field_value(self.FITSTATISTICRSQUARED__FIELD_NAME.field_name)

    def set_Mean_field(self, value: Optional[float]):
        """
        Set data field with field name 'Mean' on this record model
        """
        self.set_field_value(self.MEAN__FIELD_NAME.field_name, value)

    def get_Mean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Mean' from this record model
        """
        return self.get_field_value(self.MEAN__FIELD_NAME.field_name)

    def set_PercentRecovery_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentRecovery' on this record model
        """
        self.set_field_value(self.PERCENTRECOVERY__FIELD_NAME.field_name, value)

    def get_PercentRecovery_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentRecovery' from this record model
        """
        return self.get_field_value(self.PERCENTRECOVERY__FIELD_NAME.field_name)

    def set_PercentRecoveryMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentRecoveryMean' on this record model
        """
        self.set_field_value(self.PERCENTRECOVERYMEAN__FIELD_NAME.field_name, value)

    def get_PercentRecoveryMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentRecoveryMean' from this record model
        """
        return self.get_field_value(self.PERCENTRECOVERYMEAN__FIELD_NAME.field_name)

    def set_PlateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateName' on this record model
        """
        self.set_field_value(self.PLATENAME__FIELD_NAME.field_name, value)

    def get_PlateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateName' from this record model
        """
        return self.get_field_value(self.PLATENAME__FIELD_NAME.field_name)

    def set_Sample_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sample' on this record model
        """
        self.set_field_value(self.SAMPLE__FIELD_NAME.field_name, value)

    def get_Sample_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sample' from this record model
        """
        return self.get_field_value(self.SAMPLE__FIELD_NAME.field_name)

    def set_SampleDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleDescription' on this record model
        """
        self.set_field_value(self.SAMPLEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_SampleDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleDescription' from this record model
        """
        return self.get_field_value(self.SAMPLEDESCRIPTION__FIELD_NAME.field_name)

    def set_SampleGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleGroup' on this record model
        """
        self.set_field_value(self.SAMPLEGROUP__FIELD_NAME.field_name, value)

    def get_SampleGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleGroup' from this record model
        """
        return self.get_field_value(self.SAMPLEGROUP__FIELD_NAME.field_name)

    def set_SignalValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SignalValue' on this record model
        """
        self.set_field_value(self.SIGNALVALUE__FIELD_NAME.field_name, value)

    def get_SignalValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SignalValue' from this record model
        """
        return self.get_field_value(self.SIGNALVALUE__FIELD_NAME.field_name)

    def set_Spot_field(self, value: Optional[str]):
        """
        Set data field with field name 'Spot' on this record model
        """
        self.set_field_value(self.SPOT__FIELD_NAME.field_name, value)

    def get_Spot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Spot' from this record model
        """
        return self.get_field_value(self.SPOT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Well_field(self, value: Optional[str]):
        """
        Set data field with field name 'Well' on this record model
        """
        self.set_field_value(self.WELL__FIELD_NAME.field_name, value)

    def get_Well_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Well' from this record model
        """
        return self.get_field_value(self.WELL__FIELD_NAME.field_name)


class NanodropResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NanodropResult
    Data Type Display Name: Nanodrop Result (Nanodrop Results)
    Fields: A260, A280, A260230, A260280, CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'NanodropResult'
    A260__FIELD_NAME: WrapperField = WrapperField("A260", FieldType.DOUBLE)
    A280__FIELD_NAME: WrapperField = WrapperField("A280", FieldType.DOUBLE)
    A260230__FIELD_NAME: WrapperField = WrapperField("A260230", FieldType.DOUBLE)
    A260280__FIELD_NAME: WrapperField = WrapperField("A260280", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260' on this record model
        """
        self.set_field_value(self.A260__FIELD_NAME.field_name, value)

    def get_A260_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260' from this record model
        """
        return self.get_field_value(self.A260__FIELD_NAME.field_name)

    def set_A280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280' on this record model
        """
        self.set_field_value(self.A280__FIELD_NAME.field_name, value)

    def get_A280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280' from this record model
        """
        return self.get_field_value(self.A280__FIELD_NAME.field_name)

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class nCounterResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type nCounterResult
    Data Type Display Name: nCounter Result (nCounter Results)
    Fields: CreatedBy, DataRecordName, DateCreated, ProbeCount, ProbeName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'nCounterResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PROBECOUNT__FIELD_NAME: WrapperField = WrapperField("ProbeCount", FieldType.DOUBLE)
    PROBENAME__FIELD_NAME: WrapperField = WrapperField("ProbeName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ProbeCount_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProbeCount' on this record model
        """
        self.set_field_value(self.PROBECOUNT__FIELD_NAME.field_name, value)

    def get_ProbeCount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProbeCount' from this record model
        """
        return self.get_field_value(self.PROBECOUNT__FIELD_NAME.field_name)

    def set_ProbeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProbeName' on this record model
        """
        self.set_field_value(self.PROBENAME__FIELD_NAME.field_name, value)

    def get_ProbeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProbeName' from this record model
        """
        return self.get_field_value(self.PROBENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NewChem1Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NewChem1
    Data Type Display Name: New Chem 1 (New Chems 1)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, inchi, InchiKey, IsGHSClassified, IUPAC, LotNumber, MolecularWeight, PolarSurfaceArea, PubchemCid, Purity, RegistryId, SMILES, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield
    The NewChem1 Data Type
    """
    DATA_TYPE_NAME: str = 'NewChem1'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    PURITY__FIELD_NAME: WrapperField = WrapperField("Purity", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class NewChem1PartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NewChem1Part
    Data Type Display Name: New Chem 1 Part (New Chem 1 Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, DataRecordName, DateCreated, EditLock, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, inchi, InchiKey, INCHIShadow, IsGHSClassified, IUPAC, MOL, MolecularWeight, PolarSurfaceArea, PubchemCid, QuantityOnHand, QuantityPerItem, RegisteredToCartridge, RegistryId, ReorderLevelQuantity, RequestImageUpdate, SMILES, SMILESShadow, TotalHBondAcceptors, TotalHBondCount, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    The NewChem1Part Data Type
    """
    DATA_TYPE_NAME: str = 'NewChem1Part'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    INCHISHADOW__FIELD_NAME: WrapperField = WrapperField("INCHIShadow", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    REQUESTIMAGEUPDATE__FIELD_NAME: WrapperField = WrapperField("RequestImageUpdate", FieldType.BOOLEAN)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SMILESSHADOW__FIELD_NAME: WrapperField = WrapperField("SMILESShadow", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NextSeq2KRunParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NextSeq2KRunParameter
    Data Type Display Name: Illumina NextSeq 2000 Run Parameter (Illumina NextSeq 2000 Run Parameters)
    Fields: ApplicationName, ApplicationVersion, BaseSpaceRunId, BsshMode, CartridgeExpirationDate, CartridgeLotNumber, CartridgeMode, CartridgePartNumber, CartridgeSerialNumber, CartridgeVersion, ChmVersion, CibFpgaVersion, CimVersion, CompletedIndex1Cycles, CompletedIndex2Cycles, CompletedRead1Cycles, CompletedRead2Cycles, CopyServiceRunId, CopyServiceVersion, CreatedBy, CustomIndex1Primer, CustomIndex2Primer, CustomRead1Primer, CustomRead2Primer, DataRecordName, DateCreated, ExperimentName, FlowCellExpirationDate, FlowCellLotNumber, FlowCellMode, FlowCellPartNumber, FlowCellSerialNumber, FlowCellVersion, ImbVersion, InstrumentName, InstrumentSerialNumber, InstrumentType, OutputFolder, PlannedIndex1Cycles, PlannedIndex2Cycles, PlannedRead1Cycles, PlannedRead2Cycles, PlannedRunId, PurgeReagentCartridge, RecipeName, RecipeVersion, RtaVersion, RtaVeRunStartTimersion, RunCounter, RunEndTime, RunId, RunSetupMode, SampleSheetFilePath, SecondAnalyPlatVer, SecondaryAnalysisMode, SecondaryAnalysisWorkflow, SkipObdd, VeloxLastModifiedBy, VeloxLastModifiedDate
    NextSeq 2000 series uses a different XML format and thus will require a different data type handling it.
    """
    DATA_TYPE_NAME: str = 'NextSeq2KRunParameter'
    APPLICATIONNAME__FIELD_NAME: WrapperField = WrapperField("ApplicationName", FieldType.STRING)
    APPLICATIONVERSION__FIELD_NAME: WrapperField = WrapperField("ApplicationVersion", FieldType.STRING)
    BASESPACERUNID__FIELD_NAME: WrapperField = WrapperField("BaseSpaceRunId", FieldType.STRING)
    BSSHMODE__FIELD_NAME: WrapperField = WrapperField("BsshMode", FieldType.STRING)
    CARTRIDGEEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("CartridgeExpirationDate", FieldType.DATE)
    CARTRIDGELOTNUMBER__FIELD_NAME: WrapperField = WrapperField("CartridgeLotNumber", FieldType.STRING)
    CARTRIDGEMODE__FIELD_NAME: WrapperField = WrapperField("CartridgeMode", FieldType.STRING)
    CARTRIDGEPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("CartridgePartNumber", FieldType.STRING)
    CARTRIDGESERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("CartridgeSerialNumber", FieldType.STRING)
    CARTRIDGEVERSION__FIELD_NAME: WrapperField = WrapperField("CartridgeVersion", FieldType.STRING)
    CHMVERSION__FIELD_NAME: WrapperField = WrapperField("ChmVersion", FieldType.STRING)
    CIBFPGAVERSION__FIELD_NAME: WrapperField = WrapperField("CibFpgaVersion", FieldType.STRING)
    CIMVERSION__FIELD_NAME: WrapperField = WrapperField("CimVersion", FieldType.STRING)
    COMPLETEDINDEX1CYCLES__FIELD_NAME: WrapperField = WrapperField("CompletedIndex1Cycles", FieldType.INTEGER)
    COMPLETEDINDEX2CYCLES__FIELD_NAME: WrapperField = WrapperField("CompletedIndex2Cycles", FieldType.INTEGER)
    COMPLETEDREAD1CYCLES__FIELD_NAME: WrapperField = WrapperField("CompletedRead1Cycles", FieldType.INTEGER)
    COMPLETEDREAD2CYCLES__FIELD_NAME: WrapperField = WrapperField("CompletedRead2Cycles", FieldType.INTEGER)
    COPYSERVICERUNID__FIELD_NAME: WrapperField = WrapperField("CopyServiceRunId", FieldType.STRING)
    COPYSERVICEVERSION__FIELD_NAME: WrapperField = WrapperField("CopyServiceVersion", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMINDEX1PRIMER__FIELD_NAME: WrapperField = WrapperField("CustomIndex1Primer", FieldType.STRING)
    CUSTOMINDEX2PRIMER__FIELD_NAME: WrapperField = WrapperField("CustomIndex2Primer", FieldType.STRING)
    CUSTOMREAD1PRIMER__FIELD_NAME: WrapperField = WrapperField("CustomRead1Primer", FieldType.STRING)
    CUSTOMREAD2PRIMER__FIELD_NAME: WrapperField = WrapperField("CustomRead2Primer", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPERIMENTNAME__FIELD_NAME: WrapperField = WrapperField("ExperimentName", FieldType.STRING)
    FLOWCELLEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("FlowCellExpirationDate", FieldType.DATE)
    FLOWCELLLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowCellLotNumber", FieldType.STRING)
    FLOWCELLMODE__FIELD_NAME: WrapperField = WrapperField("FlowCellMode", FieldType.STRING)
    FLOWCELLPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowCellPartNumber", FieldType.STRING)
    FLOWCELLSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("FlowCellSerialNumber", FieldType.STRING)
    FLOWCELLVERSION__FIELD_NAME: WrapperField = WrapperField("FlowCellVersion", FieldType.STRING)
    IMBVERSION__FIELD_NAME: WrapperField = WrapperField("ImbVersion", FieldType.STRING)
    INSTRUMENTNAME__FIELD_NAME: WrapperField = WrapperField("InstrumentName", FieldType.STRING)
    INSTRUMENTSERIALNUMBER__FIELD_NAME: WrapperField = WrapperField("InstrumentSerialNumber", FieldType.STRING)
    INSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("InstrumentType", FieldType.STRING)
    OUTPUTFOLDER__FIELD_NAME: WrapperField = WrapperField("OutputFolder", FieldType.STRING)
    PLANNEDINDEX1CYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedIndex1Cycles", FieldType.INTEGER)
    PLANNEDINDEX2CYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedIndex2Cycles", FieldType.INTEGER)
    PLANNEDREAD1CYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedRead1Cycles", FieldType.INTEGER)
    PLANNEDREAD2CYCLES__FIELD_NAME: WrapperField = WrapperField("PlannedRead2Cycles", FieldType.INTEGER)
    PLANNEDRUNID__FIELD_NAME: WrapperField = WrapperField("PlannedRunId", FieldType.STRING)
    PURGEREAGENTCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("PurgeReagentCartridge", FieldType.BOOLEAN)
    RECIPENAME__FIELD_NAME: WrapperField = WrapperField("RecipeName", FieldType.STRING)
    RECIPEVERSION__FIELD_NAME: WrapperField = WrapperField("RecipeVersion", FieldType.STRING)
    RTAVERSION__FIELD_NAME: WrapperField = WrapperField("RtaVersion", FieldType.STRING)
    RTAVERUNSTARTTIMERSION__FIELD_NAME: WrapperField = WrapperField("RtaVeRunStartTimersion", FieldType.DATE)
    RUNCOUNTER__FIELD_NAME: WrapperField = WrapperField("RunCounter", FieldType.INTEGER)
    RUNENDTIME__FIELD_NAME: WrapperField = WrapperField("RunEndTime", FieldType.DATE)
    RUNID__FIELD_NAME: WrapperField = WrapperField("RunId", FieldType.STRING)
    RUNSETUPMODE__FIELD_NAME: WrapperField = WrapperField("RunSetupMode", FieldType.STRING)
    SAMPLESHEETFILEPATH__FIELD_NAME: WrapperField = WrapperField("SampleSheetFilePath", FieldType.STRING)
    SECONDANALYPLATVER__FIELD_NAME: WrapperField = WrapperField("SecondAnalyPlatVer", FieldType.STRING)
    SECONDARYANALYSISMODE__FIELD_NAME: WrapperField = WrapperField("SecondaryAnalysisMode", FieldType.STRING)
    SECONDARYANALYSISWORKFLOW__FIELD_NAME: WrapperField = WrapperField("SecondaryAnalysisWorkflow", FieldType.STRING)
    SKIPOBDD__FIELD_NAME: WrapperField = WrapperField("SkipObdd", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_BaseSpaceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunId' on this record model
        """
        self.set_field_value(self.BASESPACERUNID__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunId' from this record model
        """
        return self.get_field_value(self.BASESPACERUNID__FIELD_NAME.field_name)

    def set_BsshMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'BsshMode' on this record model
        """
        self.set_field_value(self.BSSHMODE__FIELD_NAME.field_name, value)

    def get_BsshMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BsshMode' from this record model
        """
        return self.get_field_value(self.BSSHMODE__FIELD_NAME.field_name)

    def set_CartridgeExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CartridgeExpirationDate' on this record model
        """
        self.set_field_value(self.CARTRIDGEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_CartridgeExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CartridgeExpirationDate' from this record model
        """
        return self.get_field_value(self.CARTRIDGEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_CartridgeLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeLotNumber' on this record model
        """
        self.set_field_value(self.CARTRIDGELOTNUMBER__FIELD_NAME.field_name, value)

    def get_CartridgeLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeLotNumber' from this record model
        """
        return self.get_field_value(self.CARTRIDGELOTNUMBER__FIELD_NAME.field_name)

    def set_CartridgeMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeMode' on this record model
        """
        self.set_field_value(self.CARTRIDGEMODE__FIELD_NAME.field_name, value)

    def get_CartridgeMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeMode' from this record model
        """
        return self.get_field_value(self.CARTRIDGEMODE__FIELD_NAME.field_name)

    def set_CartridgePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgePartNumber' on this record model
        """
        self.set_field_value(self.CARTRIDGEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_CartridgePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgePartNumber' from this record model
        """
        return self.get_field_value(self.CARTRIDGEPARTNUMBER__FIELD_NAME.field_name)

    def set_CartridgeSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeSerialNumber' on this record model
        """
        self.set_field_value(self.CARTRIDGESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_CartridgeSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeSerialNumber' from this record model
        """
        return self.get_field_value(self.CARTRIDGESERIALNUMBER__FIELD_NAME.field_name)

    def set_CartridgeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeVersion' on this record model
        """
        self.set_field_value(self.CARTRIDGEVERSION__FIELD_NAME.field_name, value)

    def get_CartridgeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeVersion' from this record model
        """
        return self.get_field_value(self.CARTRIDGEVERSION__FIELD_NAME.field_name)

    def set_ChmVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChmVersion' on this record model
        """
        self.set_field_value(self.CHMVERSION__FIELD_NAME.field_name, value)

    def get_ChmVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChmVersion' from this record model
        """
        return self.get_field_value(self.CHMVERSION__FIELD_NAME.field_name)

    def set_CibFpgaVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CibFpgaVersion' on this record model
        """
        self.set_field_value(self.CIBFPGAVERSION__FIELD_NAME.field_name, value)

    def get_CibFpgaVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CibFpgaVersion' from this record model
        """
        return self.get_field_value(self.CIBFPGAVERSION__FIELD_NAME.field_name)

    def set_CimVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CimVersion' on this record model
        """
        self.set_field_value(self.CIMVERSION__FIELD_NAME.field_name, value)

    def get_CimVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CimVersion' from this record model
        """
        return self.get_field_value(self.CIMVERSION__FIELD_NAME.field_name)

    def set_CompletedIndex1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedIndex1Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDINDEX1CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedIndex1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedIndex1Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDINDEX1CYCLES__FIELD_NAME.field_name)

    def set_CompletedIndex2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedIndex2Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDINDEX2CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedIndex2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedIndex2Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDINDEX2CYCLES__FIELD_NAME.field_name)

    def set_CompletedRead1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedRead1Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDREAD1CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedRead1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedRead1Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDREAD1CYCLES__FIELD_NAME.field_name)

    def set_CompletedRead2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedRead2Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDREAD2CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedRead2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedRead2Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDREAD2CYCLES__FIELD_NAME.field_name)

    def set_CopyServiceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CopyServiceRunId' on this record model
        """
        self.set_field_value(self.COPYSERVICERUNID__FIELD_NAME.field_name, value)

    def get_CopyServiceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CopyServiceRunId' from this record model
        """
        return self.get_field_value(self.COPYSERVICERUNID__FIELD_NAME.field_name)

    def set_CopyServiceVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CopyServiceVersion' on this record model
        """
        self.set_field_value(self.COPYSERVICEVERSION__FIELD_NAME.field_name, value)

    def get_CopyServiceVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CopyServiceVersion' from this record model
        """
        return self.get_field_value(self.COPYSERVICEVERSION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomIndex1Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndex1Primer' on this record model
        """
        self.set_field_value(self.CUSTOMINDEX1PRIMER__FIELD_NAME.field_name, value)

    def get_CustomIndex1Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndex1Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEX1PRIMER__FIELD_NAME.field_name)

    def set_CustomIndex2Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndex2Primer' on this record model
        """
        self.set_field_value(self.CUSTOMINDEX2PRIMER__FIELD_NAME.field_name, value)

    def get_CustomIndex2Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndex2Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEX2PRIMER__FIELD_NAME.field_name)

    def set_CustomRead1Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1Primer' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMER__FIELD_NAME.field_name, value)

    def get_CustomRead1Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMER__FIELD_NAME.field_name)

    def set_CustomRead2Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2Primer' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMER__FIELD_NAME.field_name, value)

    def get_CustomRead2Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellExpirationDate' on this record model
        """
        self.set_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_FlowCellExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellExpirationDate' from this record model
        """
        return self.get_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowCellLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellLotNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellLotNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellMode' on this record model
        """
        self.set_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name, value)

    def get_FlowCellMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellMode' from this record model
        """
        return self.get_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name)

    def set_FlowCellPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellPartNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellPartNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSerialNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSerialNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name)

    def set_FlowCellVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellVersion' on this record model
        """
        self.set_field_value(self.FLOWCELLVERSION__FIELD_NAME.field_name, value)

    def get_FlowCellVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellVersion' from this record model
        """
        return self.get_field_value(self.FLOWCELLVERSION__FIELD_NAME.field_name)

    def set_ImbVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImbVersion' on this record model
        """
        self.set_field_value(self.IMBVERSION__FIELD_NAME.field_name, value)

    def get_ImbVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImbVersion' from this record model
        """
        return self.get_field_value(self.IMBVERSION__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_InstrumentSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentSerialNumber' on this record model
        """
        self.set_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_InstrumentSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentSerialNumber' from this record model
        """
        return self.get_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PlannedIndex1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex1Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX1CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex1Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX1CYCLES__FIELD_NAME.field_name)

    def set_PlannedIndex2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex2Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX2CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex2Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX2CYCLES__FIELD_NAME.field_name)

    def set_PlannedRead1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead1Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead1Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name)

    def set_PlannedRead2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead2Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead2Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name)

    def set_PlannedRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlannedRunId' on this record model
        """
        self.set_field_value(self.PLANNEDRUNID__FIELD_NAME.field_name, value)

    def get_PlannedRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlannedRunId' from this record model
        """
        return self.get_field_value(self.PLANNEDRUNID__FIELD_NAME.field_name)

    def set_PurgeReagentCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PurgeReagentCartridge' on this record model
        """
        self.set_field_value(self.PURGEREAGENTCARTRIDGE__FIELD_NAME.field_name, value)

    def get_PurgeReagentCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PurgeReagentCartridge' from this record model
        """
        return self.get_field_value(self.PURGEREAGENTCARTRIDGE__FIELD_NAME.field_name)

    def set_RecipeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeName' on this record model
        """
        self.set_field_value(self.RECIPENAME__FIELD_NAME.field_name, value)

    def get_RecipeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeName' from this record model
        """
        return self.get_field_value(self.RECIPENAME__FIELD_NAME.field_name)

    def set_RecipeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeVersion' on this record model
        """
        self.set_field_value(self.RECIPEVERSION__FIELD_NAME.field_name, value)

    def get_RecipeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeVersion' from this record model
        """
        return self.get_field_value(self.RECIPEVERSION__FIELD_NAME.field_name)

    def set_RtaVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RtaVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RtaVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RtaVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RtaVeRunStartTimersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'RtaVeRunStartTimersion' on this record model
        """
        self.set_field_value(self.RTAVERUNSTARTTIMERSION__FIELD_NAME.field_name, value)

    def get_RtaVeRunStartTimersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RtaVeRunStartTimersion' from this record model
        """
        return self.get_field_value(self.RTAVERUNSTARTTIMERSION__FIELD_NAME.field_name)

    def set_RunCounter_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunCounter' on this record model
        """
        self.set_field_value(self.RUNCOUNTER__FIELD_NAME.field_name, value)

    def get_RunCounter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunCounter' from this record model
        """
        return self.get_field_value(self.RUNCOUNTER__FIELD_NAME.field_name)

    def set_RunEndTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunEndTime' on this record model
        """
        self.set_field_value(self.RUNENDTIME__FIELD_NAME.field_name, value)

    def get_RunEndTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunEndTime' from this record model
        """
        return self.get_field_value(self.RUNENDTIME__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunSetupMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunSetupMode' on this record model
        """
        self.set_field_value(self.RUNSETUPMODE__FIELD_NAME.field_name, value)

    def get_RunSetupMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunSetupMode' from this record model
        """
        return self.get_field_value(self.RUNSETUPMODE__FIELD_NAME.field_name)

    def set_SampleSheetFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetFilePath' on this record model
        """
        self.set_field_value(self.SAMPLESHEETFILEPATH__FIELD_NAME.field_name, value)

    def get_SampleSheetFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetFilePath' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETFILEPATH__FIELD_NAME.field_name)

    def set_SecondAnalyPlatVer_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecondAnalyPlatVer' on this record model
        """
        self.set_field_value(self.SECONDANALYPLATVER__FIELD_NAME.field_name, value)

    def get_SecondAnalyPlatVer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecondAnalyPlatVer' from this record model
        """
        return self.get_field_value(self.SECONDANALYPLATVER__FIELD_NAME.field_name)

    def set_SecondaryAnalysisMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecondaryAnalysisMode' on this record model
        """
        self.set_field_value(self.SECONDARYANALYSISMODE__FIELD_NAME.field_name, value)

    def get_SecondaryAnalysisMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecondaryAnalysisMode' from this record model
        """
        return self.get_field_value(self.SECONDARYANALYSISMODE__FIELD_NAME.field_name)

    def set_SecondaryAnalysisWorkflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecondaryAnalysisWorkflow' on this record model
        """
        self.set_field_value(self.SECONDARYANALYSISWORKFLOW__FIELD_NAME.field_name, value)

    def get_SecondaryAnalysisWorkflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecondaryAnalysisWorkflow' from this record model
        """
        return self.get_field_value(self.SECONDARYANALYSISWORKFLOW__FIELD_NAME.field_name)

    def set_SkipObdd_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SkipObdd' on this record model
        """
        self.set_field_value(self.SKIPOBDD__FIELD_NAME.field_name, value)

    def get_SkipObdd_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SkipObdd' from this record model
        """
        return self.get_field_value(self.SKIPOBDD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NNetCardiotocographyDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NNetCardiotocographyData
    Data Type Display Name: NNet CardiotocographyDatum (NNet CardiotocographiesData)
    Fields: AC, ALTV, ASTV, CreatedBy, DataRecordName, DateCreated, DL, DP, DS, FM, LB, Max, Mean, Median, Min, MLTV, MSTV, Nmax, NSP, Nzeros, Tendency, UC, Variance, VeloxLastModifiedBy, VeloxLastModifiedDate, Width
    """
    DATA_TYPE_NAME: str = 'NNetCardiotocographyData'
    AC__FIELD_NAME: WrapperField = WrapperField("AC", FieldType.DOUBLE)
    ALTV__FIELD_NAME: WrapperField = WrapperField("ALTV", FieldType.DOUBLE)
    ASTV__FIELD_NAME: WrapperField = WrapperField("ASTV", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DL__FIELD_NAME: WrapperField = WrapperField("DL", FieldType.DOUBLE)
    DP__FIELD_NAME: WrapperField = WrapperField("DP", FieldType.DOUBLE)
    DS__FIELD_NAME: WrapperField = WrapperField("DS", FieldType.DOUBLE)
    FM__FIELD_NAME: WrapperField = WrapperField("FM", FieldType.DOUBLE)
    LB__FIELD_NAME: WrapperField = WrapperField("LB", FieldType.DOUBLE)
    MAX__FIELD_NAME: WrapperField = WrapperField("Max", FieldType.DOUBLE)
    MEAN__FIELD_NAME: WrapperField = WrapperField("Mean", FieldType.DOUBLE)
    MEDIAN__FIELD_NAME: WrapperField = WrapperField("Median", FieldType.DOUBLE)
    MIN__FIELD_NAME: WrapperField = WrapperField("Min", FieldType.DOUBLE)
    MLTV__FIELD_NAME: WrapperField = WrapperField("MLTV", FieldType.DOUBLE)
    MSTV__FIELD_NAME: WrapperField = WrapperField("MSTV", FieldType.DOUBLE)
    NMAX__FIELD_NAME: WrapperField = WrapperField("Nmax", FieldType.DOUBLE)
    NSP__FIELD_NAME: WrapperField = WrapperField("NSP", FieldType.STRING)
    NZEROS__FIELD_NAME: WrapperField = WrapperField("Nzeros", FieldType.DOUBLE)
    TENDENCY__FIELD_NAME: WrapperField = WrapperField("Tendency", FieldType.DOUBLE)
    UC__FIELD_NAME: WrapperField = WrapperField("UC", FieldType.DOUBLE)
    VARIANCE__FIELD_NAME: WrapperField = WrapperField("Variance", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WIDTH__FIELD_NAME: WrapperField = WrapperField("Width", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AC_field(self, value: Optional[float]):
        """
        Set data field with field name 'AC' on this record model
        """
        self.set_field_value(self.AC__FIELD_NAME.field_name, value)

    def get_AC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AC' from this record model
        """
        return self.get_field_value(self.AC__FIELD_NAME.field_name)

    def set_ALTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'ALTV' on this record model
        """
        self.set_field_value(self.ALTV__FIELD_NAME.field_name, value)

    def get_ALTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ALTV' from this record model
        """
        return self.get_field_value(self.ALTV__FIELD_NAME.field_name)

    def set_ASTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'ASTV' on this record model
        """
        self.set_field_value(self.ASTV__FIELD_NAME.field_name, value)

    def get_ASTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ASTV' from this record model
        """
        return self.get_field_value(self.ASTV__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DL_field(self, value: Optional[float]):
        """
        Set data field with field name 'DL' on this record model
        """
        self.set_field_value(self.DL__FIELD_NAME.field_name, value)

    def get_DL_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DL' from this record model
        """
        return self.get_field_value(self.DL__FIELD_NAME.field_name)

    def set_DP_field(self, value: Optional[float]):
        """
        Set data field with field name 'DP' on this record model
        """
        self.set_field_value(self.DP__FIELD_NAME.field_name, value)

    def get_DP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DP' from this record model
        """
        return self.get_field_value(self.DP__FIELD_NAME.field_name)

    def set_DS_field(self, value: Optional[float]):
        """
        Set data field with field name 'DS' on this record model
        """
        self.set_field_value(self.DS__FIELD_NAME.field_name, value)

    def get_DS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DS' from this record model
        """
        return self.get_field_value(self.DS__FIELD_NAME.field_name)

    def set_FM_field(self, value: Optional[float]):
        """
        Set data field with field name 'FM' on this record model
        """
        self.set_field_value(self.FM__FIELD_NAME.field_name, value)

    def get_FM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FM' from this record model
        """
        return self.get_field_value(self.FM__FIELD_NAME.field_name)

    def set_LB_field(self, value: Optional[float]):
        """
        Set data field with field name 'LB' on this record model
        """
        self.set_field_value(self.LB__FIELD_NAME.field_name, value)

    def get_LB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LB' from this record model
        """
        return self.get_field_value(self.LB__FIELD_NAME.field_name)

    def set_Max_field(self, value: Optional[float]):
        """
        Set data field with field name 'Max' on this record model
        """
        self.set_field_value(self.MAX__FIELD_NAME.field_name, value)

    def get_Max_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Max' from this record model
        """
        return self.get_field_value(self.MAX__FIELD_NAME.field_name)

    def set_Mean_field(self, value: Optional[float]):
        """
        Set data field with field name 'Mean' on this record model
        """
        self.set_field_value(self.MEAN__FIELD_NAME.field_name, value)

    def get_Mean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Mean' from this record model
        """
        return self.get_field_value(self.MEAN__FIELD_NAME.field_name)

    def set_Median_field(self, value: Optional[float]):
        """
        Set data field with field name 'Median' on this record model
        """
        self.set_field_value(self.MEDIAN__FIELD_NAME.field_name, value)

    def get_Median_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Median' from this record model
        """
        return self.get_field_value(self.MEDIAN__FIELD_NAME.field_name)

    def set_Min_field(self, value: Optional[float]):
        """
        Set data field with field name 'Min' on this record model
        """
        self.set_field_value(self.MIN__FIELD_NAME.field_name, value)

    def get_Min_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Min' from this record model
        """
        return self.get_field_value(self.MIN__FIELD_NAME.field_name)

    def set_MLTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'MLTV' on this record model
        """
        self.set_field_value(self.MLTV__FIELD_NAME.field_name, value)

    def get_MLTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MLTV' from this record model
        """
        return self.get_field_value(self.MLTV__FIELD_NAME.field_name)

    def set_MSTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'MSTV' on this record model
        """
        self.set_field_value(self.MSTV__FIELD_NAME.field_name, value)

    def get_MSTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MSTV' from this record model
        """
        return self.get_field_value(self.MSTV__FIELD_NAME.field_name)

    def set_Nmax_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nmax' on this record model
        """
        self.set_field_value(self.NMAX__FIELD_NAME.field_name, value)

    def get_Nmax_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nmax' from this record model
        """
        return self.get_field_value(self.NMAX__FIELD_NAME.field_name)

    def set_NSP_field(self, value: Optional[str]):
        """
        Set data field with field name 'NSP' on this record model
        """
        self.set_field_value(self.NSP__FIELD_NAME.field_name, value)

    def get_NSP_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NSP' from this record model
        """
        return self.get_field_value(self.NSP__FIELD_NAME.field_name)

    def set_Nzeros_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nzeros' on this record model
        """
        self.set_field_value(self.NZEROS__FIELD_NAME.field_name, value)

    def get_Nzeros_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nzeros' from this record model
        """
        return self.get_field_value(self.NZEROS__FIELD_NAME.field_name)

    def set_Tendency_field(self, value: Optional[float]):
        """
        Set data field with field name 'Tendency' on this record model
        """
        self.set_field_value(self.TENDENCY__FIELD_NAME.field_name, value)

    def get_Tendency_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Tendency' from this record model
        """
        return self.get_field_value(self.TENDENCY__FIELD_NAME.field_name)

    def set_UC_field(self, value: Optional[float]):
        """
        Set data field with field name 'UC' on this record model
        """
        self.set_field_value(self.UC__FIELD_NAME.field_name, value)

    def get_UC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'UC' from this record model
        """
        return self.get_field_value(self.UC__FIELD_NAME.field_name)

    def set_Variance_field(self, value: Optional[float]):
        """
        Set data field with field name 'Variance' on this record model
        """
        self.set_field_value(self.VARIANCE__FIELD_NAME.field_name, value)

    def get_Variance_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Variance' from this record model
        """
        return self.get_field_value(self.VARIANCE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Width_field(self, value: Optional[float]):
        """
        Set data field with field name 'Width' on this record model
        """
        self.set_field_value(self.WIDTH__FIELD_NAME.field_name, value)

    def get_Width_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Width' from this record model
        """
        return self.get_field_value(self.WIDTH__FIELD_NAME.field_name)


class NNetIrisExampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NNetIrisExample
    Data Type Display Name: NNet Iris Example (NNet Iris Examples)
    Fields: CreatedBy, DataRecordName, DateCreated, PetalLength, PetalWidth, SepalLength, SepalWidth, Variety, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'NNetIrisExample'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PETALLENGTH__FIELD_NAME: WrapperField = WrapperField("PetalLength", FieldType.DOUBLE)
    PETALWIDTH__FIELD_NAME: WrapperField = WrapperField("PetalWidth", FieldType.DOUBLE)
    SEPALLENGTH__FIELD_NAME: WrapperField = WrapperField("SepalLength", FieldType.DOUBLE)
    SEPALWIDTH__FIELD_NAME: WrapperField = WrapperField("SepalWidth", FieldType.DOUBLE)
    VARIETY__FIELD_NAME: WrapperField = WrapperField("Variety", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PetalLength_field(self, value: Optional[float]):
        """
        Set data field with field name 'PetalLength' on this record model
        """
        self.set_field_value(self.PETALLENGTH__FIELD_NAME.field_name, value)

    def get_PetalLength_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PetalLength' from this record model
        """
        return self.get_field_value(self.PETALLENGTH__FIELD_NAME.field_name)

    def set_PetalWidth_field(self, value: Optional[float]):
        """
        Set data field with field name 'PetalWidth' on this record model
        """
        self.set_field_value(self.PETALWIDTH__FIELD_NAME.field_name, value)

    def get_PetalWidth_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PetalWidth' from this record model
        """
        return self.get_field_value(self.PETALWIDTH__FIELD_NAME.field_name)

    def set_SepalLength_field(self, value: Optional[float]):
        """
        Set data field with field name 'SepalLength' on this record model
        """
        self.set_field_value(self.SEPALLENGTH__FIELD_NAME.field_name, value)

    def get_SepalLength_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SepalLength' from this record model
        """
        return self.get_field_value(self.SEPALLENGTH__FIELD_NAME.field_name)

    def set_SepalWidth_field(self, value: Optional[float]):
        """
        Set data field with field name 'SepalWidth' on this record model
        """
        self.set_field_value(self.SEPALWIDTH__FIELD_NAME.field_name, value)

    def get_SepalWidth_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SepalWidth' from this record model
        """
        return self.get_field_value(self.SEPALWIDTH__FIELD_NAME.field_name)

    def set_Variety_field(self, value: Optional[str]):
        """
        Set data field with field name 'Variety' on this record model
        """
        self.set_field_value(self.VARIETY__FIELD_NAME.field_name, value)

    def get_Variety_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Variety' from this record model
        """
        return self.get_field_value(self.VARIETY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NoCanTauModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NoCanTau
    Data Type Display Name: No Canonical Tautomer (No Canonical Tautomers)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, HasOrStereoGroup, inchi, InchiKey, IsGHSClassified, IUPAC, LotNumber, MolecularWeight, PolarSurfaceArea, PubchemCid, Purity, RegistryId, SMILES, StereoRegHash, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield
    The NoCanTau Data Type
    """
    DATA_TYPE_NAME: str = 'NoCanTau'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    PURITY__FIELD_NAME: WrapperField = WrapperField("Purity", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class NoCanTauPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NoCanTauPart
    Data Type Display Name: No Canonical Tautomer Part (No Canonical Tautomer Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, CXSMILESHash, DataRecordName, DateCreated, EditLock, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, HasOrStereoGroup, inchi, InchiKey, INCHIShadow, IsGHSClassified, IUPAC, MOL, MolecularWeight, PolarSurfaceArea, PubchemCid, QuantityOnHand, QuantityPerItem, RegisteredToCartridge, RegistryId, ReorderLevelQuantity, RequestImageUpdate, SMILES, SMILESShadow, StereoRegHash, TotalHBondAcceptors, TotalHBondCount, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    The NoCanTauPart Data Type
    """
    DATA_TYPE_NAME: str = 'NoCanTauPart'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    INCHISHADOW__FIELD_NAME: WrapperField = WrapperField("INCHIShadow", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    REQUESTIMAGEUPDATE__FIELD_NAME: WrapperField = WrapperField("RequestImageUpdate", FieldType.BOOLEAN)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SMILESSHADOW__FIELD_NAME: WrapperField = WrapperField("SMILESShadow", FieldType.STRING)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NotebookDirectoryModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NotebookDirectory
    Data Type Display Name: Notebook Directory (Notebook Directories)
    Fields: CreatedBy, DataRecordName, DateCreated, DirectoryName, InheritRolesFromParent, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'NotebookDirectory'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DIRECTORYNAME__FIELD_NAME: WrapperField = WrapperField("DirectoryName", FieldType.STRING)
    INHERITROLESFROMPARENT__FIELD_NAME: WrapperField = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DirectoryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DirectoryName' on this record model
        """
        self.set_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name, value)

    def get_DirectoryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DirectoryName' from this record model
        """
        return self.get_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NucleicAcidSequenceJsonModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NucleicAcidSequenceJson
    Data Type Display Name: Sequence State (Sequence States)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, RegisteredPartDataType, RegisteredPartRecordId, RegistryId, SequenceName, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'NucleicAcidSequenceJson'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    REGISTEREDPARTDATATYPE__FIELD_NAME: WrapperField = WrapperField("RegisteredPartDataType", FieldType.STRING)
    REGISTEREDPARTRECORDID__FIELD_NAME: WrapperField = WrapperField("RegisteredPartRecordId", FieldType.LONG)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.AUTO_ACCESSION)
    SEQUENCENAME__FIELD_NAME: WrapperField = WrapperField("SequenceName", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_RegisteredPartDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegisteredPartDataType' on this record model
        """
        self.set_field_value(self.REGISTEREDPARTDATATYPE__FIELD_NAME.field_name, value)

    def get_RegisteredPartDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegisteredPartDataType' from this record model
        """
        return self.get_field_value(self.REGISTEREDPARTDATATYPE__FIELD_NAME.field_name)

    def set_RegisteredPartRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RegisteredPartRecordId' on this record model
        """
        self.set_field_value(self.REGISTEREDPARTRECORDID__FIELD_NAME.field_name, value)

    def get_RegisteredPartRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RegisteredPartRecordId' from this record model
        """
        return self.get_field_value(self.REGISTEREDPARTRECORDID__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SequenceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceName' on this record model
        """
        self.set_field_value(self.SEQUENCENAME__FIELD_NAME.field_name, value)

    def get_SequenceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceName' from this record model
        """
        return self.get_field_value(self.SEQUENCENAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class OligoModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Oligo
    Data Type Display Name: Oligo (Oligos)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, HELM, LotNumber, PartNumber, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Oligo'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class OligoPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type OligoPart
    Data Type Display Name: Oligo Part (Oligo Parts)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, HELM, MOL, MolecularWeigh, PartNumber, QuantityOnHand, QuantityPerItem, ReorderLevelQuantity, Sequence, SMILES, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    <-- VIRTUAL ENTITY CONJUGATE -->
    """
    DATA_TYPE_NAME: str = 'OligoPart'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGH__FIELD_NAME: WrapperField = WrapperField("MolecularWeigh", FieldType.DOUBLE)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    SEQUENCE__FIELD_NAME: WrapperField = WrapperField("Sequence", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeigh' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGH__FIELD_NAME.field_name, value)

    def get_MolecularWeigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeigh' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGH__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class OneWayANOVAHIVDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type OneWayANOVAHIVData
    Data Type Display Name: One Way ANOVA HIV Datum (One Way ANOVA HIV Data)
    Fields: CreatedBy, DataRecordName, DateCreated, LotLevel, OpticalDensity, RunLevel, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'OneWayANOVAHIVData'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LOTLEVEL__FIELD_NAME: WrapperField = WrapperField("LotLevel", FieldType.STRING)
    OPTICALDENSITY__FIELD_NAME: WrapperField = WrapperField("OpticalDensity", FieldType.DOUBLE)
    RUNLEVEL__FIELD_NAME: WrapperField = WrapperField("RunLevel", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LotLevel_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotLevel' on this record model
        """
        self.set_field_value(self.LOTLEVEL__FIELD_NAME.field_name, value)

    def get_LotLevel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotLevel' from this record model
        """
        return self.get_field_value(self.LOTLEVEL__FIELD_NAME.field_name)

    def set_OpticalDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'OpticalDensity' on this record model
        """
        self.set_field_value(self.OPTICALDENSITY__FIELD_NAME.field_name, value)

    def get_OpticalDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'OpticalDensity' from this record model
        """
        return self.get_field_value(self.OPTICALDENSITY__FIELD_NAME.field_name)

    def set_RunLevel_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunLevel' on this record model
        """
        self.set_field_value(self.RUNLEVEL__FIELD_NAME.field_name, value)

    def get_RunLevel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunLevel' from this record model
        """
        return self.get_field_value(self.RUNLEVEL__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class OneWayAnovaPlantGrowthModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type OneWayAnovaPlantGrowth
    Data Type Display Name: One Way Anova Plant Growth (One Way Anova Plant Growths)
    Fields: CreatedBy, DataRecordName, DateCreated, plantGroup, VeloxLastModifiedBy, VeloxLastModifiedDate, weight
    """
    DATA_TYPE_NAME: str = 'OneWayAnovaPlantGrowth'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PLANTGROUP__FIELD_NAME: WrapperField = WrapperField("plantGroup", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WEIGHT__FIELD_NAME: WrapperField = WrapperField("weight", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_plantGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'plantGroup' on this record model
        """
        self.set_field_value(self.PLANTGROUP__FIELD_NAME.field_name, value)

    def get_plantGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'plantGroup' from this record model
        """
        return self.get_field_value(self.PLANTGROUP__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_weight_field(self, value: Optional[float]):
        """
        Set data field with field name 'weight' on this record model
        """
        self.set_field_value(self.WEIGHT__FIELD_NAME.field_name, value)

    def get_weight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weight' from this record model
        """
        return self.get_field_value(self.WEIGHT__FIELD_NAME.field_name)


class PairedTTestExampleDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PairedTTestExampleDatum
    Data Type Display Name: Paired T-Test Example Datum (Paired T-Test Example Data)
    Fields: CreatedBy, DataRecordName, DateCreated, StudentNumber, TestScoreAfterUsingCalc, TestScoreBeforeCalc, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PairedTTestExampleDatum'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    STUDENTNUMBER__FIELD_NAME: WrapperField = WrapperField("StudentNumber", FieldType.INTEGER)
    TESTSCOREAFTERUSINGCALC__FIELD_NAME: WrapperField = WrapperField("TestScoreAfterUsingCalc", FieldType.DOUBLE)
    TESTSCOREBEFORECALC__FIELD_NAME: WrapperField = WrapperField("TestScoreBeforeCalc", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_StudentNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudentNumber' on this record model
        """
        self.set_field_value(self.STUDENTNUMBER__FIELD_NAME.field_name, value)

    def get_StudentNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudentNumber' from this record model
        """
        return self.get_field_value(self.STUDENTNUMBER__FIELD_NAME.field_name)

    def set_TestScoreAfterUsingCalc_field(self, value: Optional[float]):
        """
        Set data field with field name 'TestScoreAfterUsingCalc' on this record model
        """
        self.set_field_value(self.TESTSCOREAFTERUSINGCALC__FIELD_NAME.field_name, value)

    def get_TestScoreAfterUsingCalc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TestScoreAfterUsingCalc' from this record model
        """
        return self.get_field_value(self.TESTSCOREAFTERUSINGCALC__FIELD_NAME.field_name)

    def set_TestScoreBeforeCalc_field(self, value: Optional[float]):
        """
        Set data field with field name 'TestScoreBeforeCalc' on this record model
        """
        self.set_field_value(self.TESTSCOREBEFORECALC__FIELD_NAME.field_name, value)

    def get_TestScoreBeforeCalc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TestScoreBeforeCalc' from this record model
        """
        return self.get_field_value(self.TESTSCOREBEFORECALC__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PcrResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PcrResult
    Data Type Display Name: PCR Result (PCR Results)
    Fields: AcceptOrReject, ApVersion, Assay, Channel1Cq, Channel1EndFluoBc, Channel1EndFluoRaw, Channel1Result, Channel1Target, Channel2Cq, Channel2EndFluoBc, Channel2EndFluoRaw, Channel2Result, Channel2Target, Channel3Cq, Channel3EndFluoBc, Channel3EndFluoRaw, Channel3Result, Channel3Target, Channel4Cq, Channel4EndFluoBc, Channel4EndFluoRaw, Channel4Result, Channel4Target, Channel5Cq, Channel5EndFluoBc, Channel5EndFluoRaw, Channel5Result, Channel5Target, CreatedBy, DataRecordName, DateCreated, FfSoftwareVersion, FileName, InstrumentId, IsRejected, Lot, Outcome, RejectionReason, ResultInfo, SampleId, SampleType, SampleTypeName, TestResult, VeloxLastModifiedBy, VeloxLastModifiedDate, Well
    """
    DATA_TYPE_NAME: str = 'PcrResult'
    ACCEPTORREJECT__FIELD_NAME: WrapperField = WrapperField("AcceptOrReject", FieldType.PICKLIST)
    APVERSION__FIELD_NAME: WrapperField = WrapperField("ApVersion", FieldType.STRING)
    ASSAY__FIELD_NAME: WrapperField = WrapperField("Assay", FieldType.STRING)
    CHANNEL1CQ__FIELD_NAME: WrapperField = WrapperField("Channel1Cq", FieldType.DOUBLE)
    CHANNEL1ENDFLUOBC__FIELD_NAME: WrapperField = WrapperField("Channel1EndFluoBc", FieldType.DOUBLE)
    CHANNEL1ENDFLUORAW__FIELD_NAME: WrapperField = WrapperField("Channel1EndFluoRaw", FieldType.DOUBLE)
    CHANNEL1RESULT__FIELD_NAME: WrapperField = WrapperField("Channel1Result", FieldType.STRING)
    CHANNEL1TARGET__FIELD_NAME: WrapperField = WrapperField("Channel1Target", FieldType.STRING)
    CHANNEL2CQ__FIELD_NAME: WrapperField = WrapperField("Channel2Cq", FieldType.DOUBLE)
    CHANNEL2ENDFLUOBC__FIELD_NAME: WrapperField = WrapperField("Channel2EndFluoBc", FieldType.DOUBLE)
    CHANNEL2ENDFLUORAW__FIELD_NAME: WrapperField = WrapperField("Channel2EndFluoRaw", FieldType.DOUBLE)
    CHANNEL2RESULT__FIELD_NAME: WrapperField = WrapperField("Channel2Result", FieldType.STRING)
    CHANNEL2TARGET__FIELD_NAME: WrapperField = WrapperField("Channel2Target", FieldType.STRING)
    CHANNEL3CQ__FIELD_NAME: WrapperField = WrapperField("Channel3Cq", FieldType.DOUBLE)
    CHANNEL3ENDFLUOBC__FIELD_NAME: WrapperField = WrapperField("Channel3EndFluoBc", FieldType.DOUBLE)
    CHANNEL3ENDFLUORAW__FIELD_NAME: WrapperField = WrapperField("Channel3EndFluoRaw", FieldType.DOUBLE)
    CHANNEL3RESULT__FIELD_NAME: WrapperField = WrapperField("Channel3Result", FieldType.STRING)
    CHANNEL3TARGET__FIELD_NAME: WrapperField = WrapperField("Channel3Target", FieldType.STRING)
    CHANNEL4CQ__FIELD_NAME: WrapperField = WrapperField("Channel4Cq", FieldType.DOUBLE)
    CHANNEL4ENDFLUOBC__FIELD_NAME: WrapperField = WrapperField("Channel4EndFluoBc", FieldType.DOUBLE)
    CHANNEL4ENDFLUORAW__FIELD_NAME: WrapperField = WrapperField("Channel4EndFluoRaw", FieldType.DOUBLE)
    CHANNEL4RESULT__FIELD_NAME: WrapperField = WrapperField("Channel4Result", FieldType.STRING)
    CHANNEL4TARGET__FIELD_NAME: WrapperField = WrapperField("Channel4Target", FieldType.STRING)
    CHANNEL5CQ__FIELD_NAME: WrapperField = WrapperField("Channel5Cq", FieldType.DOUBLE)
    CHANNEL5ENDFLUOBC__FIELD_NAME: WrapperField = WrapperField("Channel5EndFluoBc", FieldType.DOUBLE)
    CHANNEL5ENDFLUORAW__FIELD_NAME: WrapperField = WrapperField("Channel5EndFluoRaw", FieldType.DOUBLE)
    CHANNEL5RESULT__FIELD_NAME: WrapperField = WrapperField("Channel5Result", FieldType.STRING)
    CHANNEL5TARGET__FIELD_NAME: WrapperField = WrapperField("Channel5Target", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FFSOFTWAREVERSION__FIELD_NAME: WrapperField = WrapperField("FfSoftwareVersion", FieldType.STRING)
    FILENAME__FIELD_NAME: WrapperField = WrapperField("FileName", FieldType.STRING)
    INSTRUMENTID__FIELD_NAME: WrapperField = WrapperField("InstrumentId", FieldType.STRING)
    ISREJECTED__FIELD_NAME: WrapperField = WrapperField("IsRejected", FieldType.STRING)
    LOT__FIELD_NAME: WrapperField = WrapperField("Lot", FieldType.STRING)
    OUTCOME__FIELD_NAME: WrapperField = WrapperField("Outcome", FieldType.STRING)
    REJECTIONREASON__FIELD_NAME: WrapperField = WrapperField("RejectionReason", FieldType.STRING)
    RESULTINFO__FIELD_NAME: WrapperField = WrapperField("ResultInfo", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("SampleType", FieldType.STRING)
    SAMPLETYPENAME__FIELD_NAME: WrapperField = WrapperField("SampleTypeName", FieldType.STRING)
    TESTRESULT__FIELD_NAME: WrapperField = WrapperField("TestResult", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELL__FIELD_NAME: WrapperField = WrapperField("Well", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AcceptOrReject_field(self, value: Optional[str]):
        """
        Set data field with field name 'AcceptOrReject' on this record model
        """
        self.set_field_value(self.ACCEPTORREJECT__FIELD_NAME.field_name, value)

    def get_AcceptOrReject_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AcceptOrReject' from this record model
        """
        return self.get_field_value(self.ACCEPTORREJECT__FIELD_NAME.field_name)

    def set_ApVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApVersion' on this record model
        """
        self.set_field_value(self.APVERSION__FIELD_NAME.field_name, value)

    def get_ApVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApVersion' from this record model
        """
        return self.get_field_value(self.APVERSION__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def set_Channel1Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel1Cq' on this record model
        """
        self.set_field_value(self.CHANNEL1CQ__FIELD_NAME.field_name, value)

    def get_Channel1Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel1Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL1CQ__FIELD_NAME.field_name)

    def set_Channel1EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel1EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL1ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel1EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel1EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL1ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel1EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel1EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL1ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel1EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel1EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL1ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel1Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel1Result' on this record model
        """
        self.set_field_value(self.CHANNEL1RESULT__FIELD_NAME.field_name, value)

    def get_Channel1Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel1Result' from this record model
        """
        return self.get_field_value(self.CHANNEL1RESULT__FIELD_NAME.field_name)

    def set_Channel1Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel1Target' on this record model
        """
        self.set_field_value(self.CHANNEL1TARGET__FIELD_NAME.field_name, value)

    def get_Channel1Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel1Target' from this record model
        """
        return self.get_field_value(self.CHANNEL1TARGET__FIELD_NAME.field_name)

    def set_Channel2Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel2Cq' on this record model
        """
        self.set_field_value(self.CHANNEL2CQ__FIELD_NAME.field_name, value)

    def get_Channel2Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel2Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL2CQ__FIELD_NAME.field_name)

    def set_Channel2EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel2EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL2ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel2EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel2EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL2ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel2EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel2EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL2ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel2EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel2EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL2ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel2Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel2Result' on this record model
        """
        self.set_field_value(self.CHANNEL2RESULT__FIELD_NAME.field_name, value)

    def get_Channel2Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel2Result' from this record model
        """
        return self.get_field_value(self.CHANNEL2RESULT__FIELD_NAME.field_name)

    def set_Channel2Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel2Target' on this record model
        """
        self.set_field_value(self.CHANNEL2TARGET__FIELD_NAME.field_name, value)

    def get_Channel2Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel2Target' from this record model
        """
        return self.get_field_value(self.CHANNEL2TARGET__FIELD_NAME.field_name)

    def set_Channel3Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel3Cq' on this record model
        """
        self.set_field_value(self.CHANNEL3CQ__FIELD_NAME.field_name, value)

    def get_Channel3Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel3Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL3CQ__FIELD_NAME.field_name)

    def set_Channel3EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel3EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL3ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel3EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel3EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL3ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel3EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel3EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL3ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel3EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel3EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL3ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel3Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel3Result' on this record model
        """
        self.set_field_value(self.CHANNEL3RESULT__FIELD_NAME.field_name, value)

    def get_Channel3Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel3Result' from this record model
        """
        return self.get_field_value(self.CHANNEL3RESULT__FIELD_NAME.field_name)

    def set_Channel3Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel3Target' on this record model
        """
        self.set_field_value(self.CHANNEL3TARGET__FIELD_NAME.field_name, value)

    def get_Channel3Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel3Target' from this record model
        """
        return self.get_field_value(self.CHANNEL3TARGET__FIELD_NAME.field_name)

    def set_Channel4Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel4Cq' on this record model
        """
        self.set_field_value(self.CHANNEL4CQ__FIELD_NAME.field_name, value)

    def get_Channel4Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel4Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL4CQ__FIELD_NAME.field_name)

    def set_Channel4EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel4EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL4ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel4EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel4EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL4ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel4EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel4EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL4ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel4EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel4EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL4ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel4Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel4Result' on this record model
        """
        self.set_field_value(self.CHANNEL4RESULT__FIELD_NAME.field_name, value)

    def get_Channel4Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel4Result' from this record model
        """
        return self.get_field_value(self.CHANNEL4RESULT__FIELD_NAME.field_name)

    def set_Channel4Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel4Target' on this record model
        """
        self.set_field_value(self.CHANNEL4TARGET__FIELD_NAME.field_name, value)

    def get_Channel4Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel4Target' from this record model
        """
        return self.get_field_value(self.CHANNEL4TARGET__FIELD_NAME.field_name)

    def set_Channel5Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel5Cq' on this record model
        """
        self.set_field_value(self.CHANNEL5CQ__FIELD_NAME.field_name, value)

    def get_Channel5Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel5Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL5CQ__FIELD_NAME.field_name)

    def set_Channel5EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel5EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL5ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel5EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel5EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL5ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel5EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel5EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL5ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel5EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel5EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL5ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel5Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel5Result' on this record model
        """
        self.set_field_value(self.CHANNEL5RESULT__FIELD_NAME.field_name, value)

    def get_Channel5Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel5Result' from this record model
        """
        return self.get_field_value(self.CHANNEL5RESULT__FIELD_NAME.field_name)

    def set_Channel5Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel5Target' on this record model
        """
        self.set_field_value(self.CHANNEL5TARGET__FIELD_NAME.field_name, value)

    def get_Channel5Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel5Target' from this record model
        """
        return self.get_field_value(self.CHANNEL5TARGET__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FfSoftwareVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FfSoftwareVersion' on this record model
        """
        self.set_field_value(self.FFSOFTWAREVERSION__FIELD_NAME.field_name, value)

    def get_FfSoftwareVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FfSoftwareVersion' from this record model
        """
        return self.get_field_value(self.FFSOFTWAREVERSION__FIELD_NAME.field_name)

    def set_FileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileName' on this record model
        """
        self.set_field_value(self.FILENAME__FIELD_NAME.field_name, value)

    def get_FileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileName' from this record model
        """
        return self.get_field_value(self.FILENAME__FIELD_NAME.field_name)

    def set_InstrumentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentId' on this record model
        """
        self.set_field_value(self.INSTRUMENTID__FIELD_NAME.field_name, value)

    def get_InstrumentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentId' from this record model
        """
        return self.get_field_value(self.INSTRUMENTID__FIELD_NAME.field_name)

    def set_IsRejected_field(self, value: Optional[str]):
        """
        Set data field with field name 'IsRejected' on this record model
        """
        self.set_field_value(self.ISREJECTED__FIELD_NAME.field_name, value)

    def get_IsRejected_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IsRejected' from this record model
        """
        return self.get_field_value(self.ISREJECTED__FIELD_NAME.field_name)

    def set_Lot_field(self, value: Optional[str]):
        """
        Set data field with field name 'Lot' on this record model
        """
        self.set_field_value(self.LOT__FIELD_NAME.field_name, value)

    def get_Lot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Lot' from this record model
        """
        return self.get_field_value(self.LOT__FIELD_NAME.field_name)

    def set_Outcome_field(self, value: Optional[str]):
        """
        Set data field with field name 'Outcome' on this record model
        """
        self.set_field_value(self.OUTCOME__FIELD_NAME.field_name, value)

    def get_Outcome_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Outcome' from this record model
        """
        return self.get_field_value(self.OUTCOME__FIELD_NAME.field_name)

    def set_RejectionReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'RejectionReason' on this record model
        """
        self.set_field_value(self.REJECTIONREASON__FIELD_NAME.field_name, value)

    def get_RejectionReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RejectionReason' from this record model
        """
        return self.get_field_value(self.REJECTIONREASON__FIELD_NAME.field_name)

    def set_ResultInfo_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResultInfo' on this record model
        """
        self.set_field_value(self.RESULTINFO__FIELD_NAME.field_name, value)

    def get_ResultInfo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResultInfo' from this record model
        """
        return self.get_field_value(self.RESULTINFO__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleType' on this record model
        """
        self.set_field_value(self.SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_SampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleType' from this record model
        """
        return self.get_field_value(self.SAMPLETYPE__FIELD_NAME.field_name)

    def set_SampleTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleTypeName' on this record model
        """
        self.set_field_value(self.SAMPLETYPENAME__FIELD_NAME.field_name, value)

    def get_SampleTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleTypeName' from this record model
        """
        return self.get_field_value(self.SAMPLETYPENAME__FIELD_NAME.field_name)

    def set_TestResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'TestResult' on this record model
        """
        self.set_field_value(self.TESTRESULT__FIELD_NAME.field_name, value)

    def get_TestResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TestResult' from this record model
        """
        return self.get_field_value(self.TESTRESULT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Well_field(self, value: Optional[str]):
        """
        Set data field with field name 'Well' on this record model
        """
        self.set_field_value(self.WELL__FIELD_NAME.field_name, value)

    def get_Well_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Well' from this record model
        """
        return self.get_field_value(self.WELL__FIELD_NAME.field_name)


class PDBFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PDBFile
    Data Type Display Name: PDB File (PDB Files)
    Fields: CreatedBy, DataRecordName, DateCreated, Descriptor, FilePath, Keywords, MultiParentLink201, NumChains, PdbId, StructureName, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PDBFile'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTOR__FIELD_NAME: WrapperField = WrapperField("Descriptor", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    KEYWORDS__FIELD_NAME: WrapperField = WrapperField("Keywords", FieldType.STRING)
    MULTIPARENTLINK201__FIELD_NAME: WrapperField = WrapperField("MultiParentLink201", FieldType.MULTIPARENTLINK)
    NUMCHAINS__FIELD_NAME: WrapperField = WrapperField("NumChains", FieldType.INTEGER)
    PDBID__FIELD_NAME: WrapperField = WrapperField("PdbId", FieldType.STRING)
    STRUCTURENAME__FIELD_NAME: WrapperField = WrapperField("StructureName", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Descriptor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Descriptor' on this record model
        """
        self.set_field_value(self.DESCRIPTOR__FIELD_NAME.field_name, value)

    def get_Descriptor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Descriptor' from this record model
        """
        return self.get_field_value(self.DESCRIPTOR__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Keywords_field(self, value: Optional[str]):
        """
        Set data field with field name 'Keywords' on this record model
        """
        self.set_field_value(self.KEYWORDS__FIELD_NAME.field_name, value)

    def get_Keywords_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Keywords' from this record model
        """
        return self.get_field_value(self.KEYWORDS__FIELD_NAME.field_name)

    def set_NumChains_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumChains' on this record model
        """
        self.set_field_value(self.NUMCHAINS__FIELD_NAME.field_name, value)

    def get_NumChains_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumChains' from this record model
        """
        return self.get_field_value(self.NUMCHAINS__FIELD_NAME.field_name)

    def set_PdbId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PdbId' on this record model
        """
        self.set_field_value(self.PDBID__FIELD_NAME.field_name, value)

    def get_PdbId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PdbId' from this record model
        """
        return self.get_field_value(self.PDBID__FIELD_NAME.field_name)

    def set_StructureName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StructureName' on this record model
        """
        self.set_field_value(self.STRUCTURENAME__FIELD_NAME.field_name, value)

    def get_StructureName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StructureName' from this record model
        """
        return self.get_field_value(self.STRUCTURENAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PhasingPrephasingScoreModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PhasingPrephasingScore
    Data Type Display Name: Phasing and Prephasing Score (Phasing and Prephasing Scores)
    Fields: ColRead, CreatedBy, DataRecordName, DateCreated, Lane, LaneCol, ScoreOne, ScoreTwo, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'PhasingPrephasingScore'
    COLREAD__FIELD_NAME: WrapperField = WrapperField("ColRead", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LANE__FIELD_NAME: WrapperField = WrapperField("Lane", FieldType.LONG)
    LANECOL__FIELD_NAME: WrapperField = WrapperField("LaneCol", FieldType.STRING)
    SCOREONE__FIELD_NAME: WrapperField = WrapperField("ScoreOne", FieldType.DOUBLE)
    SCORETWO__FIELD_NAME: WrapperField = WrapperField("ScoreTwo", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_ScoreOne_field(self, value: Optional[float]):
        """
        Set data field with field name 'ScoreOne' on this record model
        """
        self.set_field_value(self.SCOREONE__FIELD_NAME.field_name, value)

    def get_ScoreOne_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ScoreOne' from this record model
        """
        return self.get_field_value(self.SCOREONE__FIELD_NAME.field_name)

    def set_ScoreTwo_field(self, value: Optional[float]):
        """
        Set data field with field name 'ScoreTwo' on this record model
        """
        self.set_field_value(self.SCORETWO__FIELD_NAME.field_name, value)

    def get_ScoreTwo_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ScoreTwo' from this record model
        """
        return self.get_field_value(self.SCORETWO__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PistoiaAttachmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PistoiaAttachment
    Data Type Display Name: Pistoia Attachment (Pistoia Attachments)
    Fields: AccessionId, AlternateId, CapGroupName, CapGroupSMILES, CreatedBy, DataRecordName, DateCreated, Label, MultiParentLink240, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PistoiaAttachment'
    ACCESSIONID__FIELD_NAME: WrapperField = WrapperField("AccessionId", FieldType.AUTO_ACCESSION)
    ALTERNATEID__FIELD_NAME: WrapperField = WrapperField("AlternateId", FieldType.STRING)
    CAPGROUPNAME__FIELD_NAME: WrapperField = WrapperField("CapGroupName", FieldType.STRING)
    CAPGROUPSMILES__FIELD_NAME: WrapperField = WrapperField("CapGroupSMILES", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LABEL__FIELD_NAME: WrapperField = WrapperField("Label", FieldType.STRING)
    MULTIPARENTLINK240__FIELD_NAME: WrapperField = WrapperField("MultiParentLink240", FieldType.MULTIPARENTLINK)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessionId' on this record model
        """
        self.set_field_value(self.ACCESSIONID__FIELD_NAME.field_name, value)

    def get_AccessionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessionId' from this record model
        """
        return self.get_field_value(self.ACCESSIONID__FIELD_NAME.field_name)

    def set_AlternateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AlternateId' on this record model
        """
        self.set_field_value(self.ALTERNATEID__FIELD_NAME.field_name, value)

    def get_AlternateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AlternateId' from this record model
        """
        return self.get_field_value(self.ALTERNATEID__FIELD_NAME.field_name)

    def set_CapGroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CapGroupName' on this record model
        """
        self.set_field_value(self.CAPGROUPNAME__FIELD_NAME.field_name, value)

    def get_CapGroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CapGroupName' from this record model
        """
        return self.get_field_value(self.CAPGROUPNAME__FIELD_NAME.field_name)

    def set_CapGroupSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'CapGroupSMILES' on this record model
        """
        self.set_field_value(self.CAPGROUPSMILES__FIELD_NAME.field_name, value)

    def get_CapGroupSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CapGroupSMILES' from this record model
        """
        return self.get_field_value(self.CAPGROUPSMILES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Label_field(self, value: Optional[str]):
        """
        Set data field with field name 'Label' on this record model
        """
        self.set_field_value(self.LABEL__FIELD_NAME.field_name, value)

    def get_Label_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Label' from this record model
        """
        return self.get_field_value(self.LABEL__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PistoiaMonomerModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PistoiaMonomer
    Data Type Display Name: Monomer (Monomers)
    Fields: AccessionId, Author, CreatedBy, DataRecordName, DateCreated, IsValid, MolFile, MonomerType, Name, NaturalAnalog, PolymerType, SMILES, Symbol, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PistoiaMonomer'
    ACCESSIONID__FIELD_NAME: WrapperField = WrapperField("AccessionId", FieldType.AUTO_ACCESSION)
    AUTHOR__FIELD_NAME: WrapperField = WrapperField("Author", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISVALID__FIELD_NAME: WrapperField = WrapperField("IsValid", FieldType.BOOLEAN)
    MOLFILE__FIELD_NAME: WrapperField = WrapperField("MolFile", FieldType.STRING)
    MONOMERTYPE__FIELD_NAME: WrapperField = WrapperField("MonomerType", FieldType.PICKLIST)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    NATURALANALOG__FIELD_NAME: WrapperField = WrapperField("NaturalAnalog", FieldType.STRING)
    POLYMERTYPE__FIELD_NAME: WrapperField = WrapperField("PolymerType", FieldType.PICKLIST)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SYMBOL__FIELD_NAME: WrapperField = WrapperField("Symbol", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessionId' on this record model
        """
        self.set_field_value(self.ACCESSIONID__FIELD_NAME.field_name, value)

    def get_AccessionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessionId' from this record model
        """
        return self.get_field_value(self.ACCESSIONID__FIELD_NAME.field_name)

    def set_Author_field(self, value: Optional[str]):
        """
        Set data field with field name 'Author' on this record model
        """
        self.set_field_value(self.AUTHOR__FIELD_NAME.field_name, value)

    def get_Author_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Author' from this record model
        """
        return self.get_field_value(self.AUTHOR__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsValid_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsValid' on this record model
        """
        self.set_field_value(self.ISVALID__FIELD_NAME.field_name, value)

    def get_IsValid_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsValid' from this record model
        """
        return self.get_field_value(self.ISVALID__FIELD_NAME.field_name)

    def set_MolFile_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolFile' on this record model
        """
        self.set_field_value(self.MOLFILE__FIELD_NAME.field_name, value)

    def get_MolFile_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolFile' from this record model
        """
        return self.get_field_value(self.MOLFILE__FIELD_NAME.field_name)

    def set_MonomerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MonomerType' on this record model
        """
        self.set_field_value(self.MONOMERTYPE__FIELD_NAME.field_name, value)

    def get_MonomerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MonomerType' from this record model
        """
        return self.get_field_value(self.MONOMERTYPE__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NaturalAnalog_field(self, value: Optional[str]):
        """
        Set data field with field name 'NaturalAnalog' on this record model
        """
        self.set_field_value(self.NATURALANALOG__FIELD_NAME.field_name, value)

    def get_NaturalAnalog_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NaturalAnalog' from this record model
        """
        return self.get_field_value(self.NATURALANALOG__FIELD_NAME.field_name)

    def set_PolymerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PolymerType' on this record model
        """
        self.set_field_value(self.POLYMERTYPE__FIELD_NAME.field_name, value)

    def get_PolymerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PolymerType' from this record model
        """
        return self.get_field_value(self.POLYMERTYPE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_Symbol_field(self, value: Optional[str]):
        """
        Set data field with field name 'Symbol' on this record model
        """
        self.set_field_value(self.SYMBOL__FIELD_NAME.field_name, value)

    def get_Symbol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Symbol' from this record model
        """
        return self.get_field_value(self.SYMBOL__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PistoiaRulesModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PistoiaRules
    Data Type Display Name: Pistoia Rules (Pistoia Rules)
    Fields: Author, Category, CreatedBy, DataRecordName, DateCreated, Description, Name, Script, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PistoiaRules'
    AUTHOR__FIELD_NAME: WrapperField = WrapperField("Author", FieldType.STRING)
    CATEGORY__FIELD_NAME: WrapperField = WrapperField("Category", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    SCRIPT__FIELD_NAME: WrapperField = WrapperField("Script", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Author_field(self, value: Optional[str]):
        """
        Set data field with field name 'Author' on this record model
        """
        self.set_field_value(self.AUTHOR__FIELD_NAME.field_name, value)

    def get_Author_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Author' from this record model
        """
        return self.get_field_value(self.AUTHOR__FIELD_NAME.field_name)

    def set_Category_field(self, value: Optional[str]):
        """
        Set data field with field name 'Category' on this record model
        """
        self.set_field_value(self.CATEGORY__FIELD_NAME.field_name, value)

    def get_Category_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Category' from this record model
        """
        return self.get_field_value(self.CATEGORY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_Script_field(self, value: Optional[str]):
        """
        Set data field with field name 'Script' on this record model
        """
        self.set_field_value(self.SCRIPT__FIELD_NAME.field_name, value)

    def get_Script_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Script' from this record model
        """
        return self.get_field_value(self.SCRIPT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Plate
    Data Type Display Name: Plate (Plates)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, ExemplarPlateStatus, IsCircular, IsHighThroughput, MultiParentLink135, MultiParentLink156, MultiParentLink159, MultiParentLink203, MultiParentLink211, PlateBarcode, PlateColumns, PlateId, PlateNote, PlateRows, PlateSampleType, PlateType, PlateWellCnt, QCStatus, RowPosition, StorageLocationBarcode, StorageUnitPath, VeloxLastModifiedBy, VeloxLastModifiedDate
    The Plate Data Type
    """
    DATA_TYPE_NAME: str = 'Plate'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXEMPLARPLATESTATUS__FIELD_NAME: WrapperField = WrapperField("ExemplarPlateStatus", FieldType.SELECTION)
    ISCIRCULAR__FIELD_NAME: WrapperField = WrapperField("IsCircular", FieldType.BOOLEAN)
    ISHIGHTHROUGHPUT__FIELD_NAME: WrapperField = WrapperField("IsHighThroughput", FieldType.BOOLEAN)
    MULTIPARENTLINK135__FIELD_NAME: WrapperField = WrapperField("MultiParentLink135", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK156__FIELD_NAME: WrapperField = WrapperField("MultiParentLink156", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK159__FIELD_NAME: WrapperField = WrapperField("MultiParentLink159", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK203__FIELD_NAME: WrapperField = WrapperField("MultiParentLink203", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK211__FIELD_NAME: WrapperField = WrapperField("MultiParentLink211", FieldType.MULTIPARENTLINK)
    PLATEBARCODE__FIELD_NAME: WrapperField = WrapperField("PlateBarcode", FieldType.STRING)
    PLATECOLUMNS__FIELD_NAME: WrapperField = WrapperField("PlateColumns", FieldType.INTEGER)
    PLATEID__FIELD_NAME: WrapperField = WrapperField("PlateId", FieldType.STRING)
    PLATENOTE__FIELD_NAME: WrapperField = WrapperField("PlateNote", FieldType.STRING)
    PLATEROWS__FIELD_NAME: WrapperField = WrapperField("PlateRows", FieldType.INTEGER)
    PLATESAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("PlateSampleType", FieldType.SELECTION)
    PLATETYPE__FIELD_NAME: WrapperField = WrapperField("PlateType", FieldType.STRING)
    PLATEWELLCNT__FIELD_NAME: WrapperField = WrapperField("PlateWellCnt", FieldType.ENUM)
    QCSTATUS__FIELD_NAME: WrapperField = WrapperField("QCStatus", FieldType.PICKLIST)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    STORAGELOCATIONBARCODE__FIELD_NAME: WrapperField = WrapperField("StorageLocationBarcode", FieldType.SELECTION)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarPlateStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarPlateStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARPLATESTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarPlateStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarPlateStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARPLATESTATUS__FIELD_NAME.field_name)

    def set_IsCircular_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCircular' on this record model
        """
        self.set_field_value(self.ISCIRCULAR__FIELD_NAME.field_name, value)

    def get_IsCircular_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCircular' from this record model
        """
        return self.get_field_value(self.ISCIRCULAR__FIELD_NAME.field_name)

    def set_IsHighThroughput_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsHighThroughput' on this record model
        """
        self.set_field_value(self.ISHIGHTHROUGHPUT__FIELD_NAME.field_name, value)

    def get_IsHighThroughput_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsHighThroughput' from this record model
        """
        return self.get_field_value(self.ISHIGHTHROUGHPUT__FIELD_NAME.field_name)

    def set_PlateBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateBarcode' on this record model
        """
        self.set_field_value(self.PLATEBARCODE__FIELD_NAME.field_name, value)

    def get_PlateBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateBarcode' from this record model
        """
        return self.get_field_value(self.PLATEBARCODE__FIELD_NAME.field_name)

    def set_PlateColumns_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateColumns' on this record model
        """
        self.set_field_value(self.PLATECOLUMNS__FIELD_NAME.field_name, value)

    def get_PlateColumns_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateColumns' from this record model
        """
        return self.get_field_value(self.PLATECOLUMNS__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_PlateNote_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateNote' on this record model
        """
        self.set_field_value(self.PLATENOTE__FIELD_NAME.field_name, value)

    def get_PlateNote_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateNote' from this record model
        """
        return self.get_field_value(self.PLATENOTE__FIELD_NAME.field_name)

    def set_PlateRows_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateRows' on this record model
        """
        self.set_field_value(self.PLATEROWS__FIELD_NAME.field_name, value)

    def get_PlateRows_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateRows' from this record model
        """
        return self.get_field_value(self.PLATEROWS__FIELD_NAME.field_name)

    def set_PlateSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateSampleType' on this record model
        """
        self.set_field_value(self.PLATESAMPLETYPE__FIELD_NAME.field_name, value)

    def get_PlateSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateSampleType' from this record model
        """
        return self.get_field_value(self.PLATESAMPLETYPE__FIELD_NAME.field_name)

    def set_PlateType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateType' on this record model
        """
        self.set_field_value(self.PLATETYPE__FIELD_NAME.field_name, value)

    def get_PlateType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateType' from this record model
        """
        return self.get_field_value(self.PLATETYPE__FIELD_NAME.field_name)

    def set_PlateWellCnt_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateWellCnt' on this record model
        """
        self.set_field_value(self.PLATEWELLCNT__FIELD_NAME.field_name, value)

    def get_PlateWellCnt_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateWellCnt' from this record model
        """
        return self.get_field_value(self.PLATEWELLCNT__FIELD_NAME.field_name)

    def set_QCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCStatus' on this record model
        """
        self.set_field_value(self.QCSTATUS__FIELD_NAME.field_name, value)

    def get_QCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCStatus' from this record model
        """
        return self.get_field_value(self.QCSTATUS__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateDesignerWellAnnotationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateDesignerWellAnnotation
    Data Type Display Name: Plate Designer Well Annotation (Plate Designer Well Annotations)
    Fields: CreatedBy, DataRecordName, DateCreated, Notes, VeloxLastModifiedBy, VeloxLastModifiedDate
    Annotations for well element allows users to add additional notes at any location in a 3D plate.
    """
    DATA_TYPE_NAME: str = 'PlateDesignerWellAnnotation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    NOTES__FIELD_NAME: WrapperField = WrapperField("Notes", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Notes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Notes' on this record model
        """
        self.set_field_value(self.NOTES__FIELD_NAME.field_name, value)

    def get_Notes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Notes' from this record model
        """
        return self.get_field_value(self.NOTES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateDesignerWellElementModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateDesignerWellElement
    Data Type Display Name: Plate Designer Well Element (Plate Designer Well Element)
    Fields: ActualVolumeRemoved, AliquotSampleRecordId, ColPosition, Concentration, ConcentrationUnits, ControlType, CreatedBy, DataRecordName, DateCreated, IsControl, Layer, PlateRecordId, RowPosition, SourceDataTypeName, SourceRecordId, SourceSampleConcentration, SourceSampleMass, SourceSampleVolume, SourceVolumeToRemove, TargetMass, VeloxLastModifiedBy, VeloxLastModifiedDate, Volume
    A well element describes a particular location in a 3D plate. Each well element in the system is uniquely identified by (Plate ID, Layer #, Row, Column).
A well element is always describing about either a payload of an existing record, or an annotation (or both).
    """
    DATA_TYPE_NAME: str = 'PlateDesignerWellElement'
    ACTUALVOLUMEREMOVED__FIELD_NAME: WrapperField = WrapperField("ActualVolumeRemoved", FieldType.DOUBLE)
    ALIQUOTSAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("AliquotSampleRecordId", FieldType.LONG)
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Concentration", FieldType.DOUBLE)
    CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("ConcentrationUnits", FieldType.STRING)
    CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("ControlType", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISCONTROL__FIELD_NAME: WrapperField = WrapperField("IsControl", FieldType.BOOLEAN)
    LAYER__FIELD_NAME: WrapperField = WrapperField("Layer", FieldType.INTEGER)
    PLATERECORDID__FIELD_NAME: WrapperField = WrapperField("PlateRecordId", FieldType.LONG)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SOURCEDATATYPENAME__FIELD_NAME: WrapperField = WrapperField("SourceDataTypeName", FieldType.STRING)
    SOURCERECORDID__FIELD_NAME: WrapperField = WrapperField("SourceRecordId", FieldType.LONG)
    SOURCESAMPLECONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SourceSampleConcentration", FieldType.DOUBLE)
    SOURCESAMPLEMASS__FIELD_NAME: WrapperField = WrapperField("SourceSampleMass", FieldType.DOUBLE)
    SOURCESAMPLEVOLUME__FIELD_NAME: WrapperField = WrapperField("SourceSampleVolume", FieldType.DOUBLE)
    SOURCEVOLUMETOREMOVE__FIELD_NAME: WrapperField = WrapperField("SourceVolumeToRemove", FieldType.DOUBLE)
    TARGETMASS__FIELD_NAME: WrapperField = WrapperField("TargetMass", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VOLUME__FIELD_NAME: WrapperField = WrapperField("Volume", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActualVolumeRemoved_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualVolumeRemoved' on this record model
        """
        self.set_field_value(self.ACTUALVOLUMEREMOVED__FIELD_NAME.field_name, value)

    def get_ActualVolumeRemoved_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualVolumeRemoved' from this record model
        """
        return self.get_field_value(self.ACTUALVOLUMEREMOVED__FIELD_NAME.field_name)

    def set_AliquotSampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'AliquotSampleRecordId' on this record model
        """
        self.set_field_value(self.ALIQUOTSAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_AliquotSampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AliquotSampleRecordId' from this record model
        """
        return self.get_field_value(self.ALIQUOTSAMPLERECORDID__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_Layer_field(self, value: Optional[int]):
        """
        Set data field with field name 'Layer' on this record model
        """
        self.set_field_value(self.LAYER__FIELD_NAME.field_name, value)

    def get_Layer_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Layer' from this record model
        """
        return self.get_field_value(self.LAYER__FIELD_NAME.field_name)

    def set_PlateRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateRecordId' on this record model
        """
        self.set_field_value(self.PLATERECORDID__FIELD_NAME.field_name, value)

    def get_PlateRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateRecordId' from this record model
        """
        return self.get_field_value(self.PLATERECORDID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SourceDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceDataTypeName' on this record model
        """
        self.set_field_value(self.SOURCEDATATYPENAME__FIELD_NAME.field_name, value)

    def get_SourceDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceDataTypeName' from this record model
        """
        return self.get_field_value(self.SOURCEDATATYPENAME__FIELD_NAME.field_name)

    def set_SourceRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceRecordId' on this record model
        """
        self.set_field_value(self.SOURCERECORDID__FIELD_NAME.field_name, value)

    def get_SourceRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceRecordId' from this record model
        """
        return self.get_field_value(self.SOURCERECORDID__FIELD_NAME.field_name)

    def set_SourceSampleConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceSampleConcentration' on this record model
        """
        self.set_field_value(self.SOURCESAMPLECONCENTRATION__FIELD_NAME.field_name, value)

    def get_SourceSampleConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceSampleConcentration' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLECONCENTRATION__FIELD_NAME.field_name)

    def set_SourceSampleMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceSampleMass' on this record model
        """
        self.set_field_value(self.SOURCESAMPLEMASS__FIELD_NAME.field_name, value)

    def get_SourceSampleMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceSampleMass' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLEMASS__FIELD_NAME.field_name)

    def set_SourceSampleVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceSampleVolume' on this record model
        """
        self.set_field_value(self.SOURCESAMPLEVOLUME__FIELD_NAME.field_name, value)

    def get_SourceSampleVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceSampleVolume' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLEVOLUME__FIELD_NAME.field_name)

    def set_SourceVolumeToRemove_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceVolumeToRemove' on this record model
        """
        self.set_field_value(self.SOURCEVOLUMETOREMOVE__FIELD_NAME.field_name, value)

    def get_SourceVolumeToRemove_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceVolumeToRemove' from this record model
        """
        return self.get_field_value(self.SOURCEVOLUMETOREMOVE__FIELD_NAME.field_name)

    def set_TargetMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetMass' on this record model
        """
        self.set_field_value(self.TARGETMASS__FIELD_NAME.field_name, value)

    def get_TargetMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetMass' from this record model
        """
        return self.get_field_value(self.TARGETMASS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)


class PlateMappingSrcItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateMappingSrcItem
    Data Type Display Name: Plate Mapping Source Item (Plate Mapping Source Items)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, Description, IsControl, MultiParentLink135, MultiParentLink159, RowPosition, SourceItemId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PlateMappingSrcItem'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    ISCONTROL__FIELD_NAME: WrapperField = WrapperField("IsControl", FieldType.BOOLEAN)
    MULTIPARENTLINK135__FIELD_NAME: WrapperField = WrapperField("MultiParentLink135", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK159__FIELD_NAME: WrapperField = WrapperField("MultiParentLink159", FieldType.MULTIPARENTLINK)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SOURCEITEMID__FIELD_NAME: WrapperField = WrapperField("SourceItemId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SourceItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceItemId' on this record model
        """
        self.set_field_value(self.SOURCEITEMID__FIELD_NAME.field_name, value)

    def get_SourceItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceItemId' from this record model
        """
        return self.get_field_value(self.SOURCEITEMID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateMappingTemplateExpModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateMappingTemplateExp
    Data Type Display Name: Plate Mapping Template (Plate Mapping Template)
    Fields: AllowControlsToShift, AutoApplyTemplate, ControlType, CreatedBy, DataRecordName, DateCreated, DestinationPlatingOrder, DstPlateSizeCol, DstPlateSizeRow, MappingName, NumberOfPlates, NumberOfSamples, PlatingMethod, ReverseSortingOrder, SamplesHaveSourcePosition, SortOnField, SourcePlateDoesNotMatter, SrcPlateSizeCol, SrcPlateSizeRow, TargetConcentration, TargetVol, UseCustomPlatePrefix, VeloxLastModifiedBy, VeloxLastModifiedDate, WellCompaction
    """
    DATA_TYPE_NAME: str = 'PlateMappingTemplateExp'
    ALLOWCONTROLSTOSHIFT__FIELD_NAME: WrapperField = WrapperField("AllowControlsToShift", FieldType.BOOLEAN)
    AUTOAPPLYTEMPLATE__FIELD_NAME: WrapperField = WrapperField("AutoApplyTemplate", FieldType.BOOLEAN)
    CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("ControlType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESTINATIONPLATINGORDER__FIELD_NAME: WrapperField = WrapperField("DestinationPlatingOrder", FieldType.PICKLIST)
    DSTPLATESIZECOL__FIELD_NAME: WrapperField = WrapperField("DstPlateSizeCol", FieldType.INTEGER)
    DSTPLATESIZEROW__FIELD_NAME: WrapperField = WrapperField("DstPlateSizeRow", FieldType.INTEGER)
    MAPPINGNAME__FIELD_NAME: WrapperField = WrapperField("MappingName", FieldType.STRING)
    NUMBEROFPLATES__FIELD_NAME: WrapperField = WrapperField("NumberOfPlates", FieldType.INTEGER)
    NUMBEROFSAMPLES__FIELD_NAME: WrapperField = WrapperField("NumberOfSamples", FieldType.INTEGER)
    PLATINGMETHOD__FIELD_NAME: WrapperField = WrapperField("PlatingMethod", FieldType.PICKLIST)
    REVERSESORTINGORDER__FIELD_NAME: WrapperField = WrapperField("ReverseSortingOrder", FieldType.BOOLEAN)
    SAMPLESHAVESOURCEPOSITION__FIELD_NAME: WrapperField = WrapperField("SamplesHaveSourcePosition", FieldType.BOOLEAN)
    SORTONFIELD__FIELD_NAME: WrapperField = WrapperField("SortOnField", FieldType.SELECTION)
    SOURCEPLATEDOESNOTMATTER__FIELD_NAME: WrapperField = WrapperField("SourcePlateDoesNotMatter", FieldType.BOOLEAN)
    SRCPLATESIZECOL__FIELD_NAME: WrapperField = WrapperField("SrcPlateSizeCol", FieldType.INTEGER)
    SRCPLATESIZEROW__FIELD_NAME: WrapperField = WrapperField("SrcPlateSizeRow", FieldType.INTEGER)
    TARGETCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("TargetConcentration", FieldType.DOUBLE)
    TARGETVOL__FIELD_NAME: WrapperField = WrapperField("TargetVol", FieldType.DOUBLE)
    USECUSTOMPLATEPREFIX__FIELD_NAME: WrapperField = WrapperField("UseCustomPlatePrefix", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELLCOMPACTION__FIELD_NAME: WrapperField = WrapperField("WellCompaction", FieldType.PICKLIST)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AllowControlsToShift_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AllowControlsToShift' on this record model
        """
        self.set_field_value(self.ALLOWCONTROLSTOSHIFT__FIELD_NAME.field_name, value)

    def get_AllowControlsToShift_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AllowControlsToShift' from this record model
        """
        return self.get_field_value(self.ALLOWCONTROLSTOSHIFT__FIELD_NAME.field_name)

    def set_AutoApplyTemplate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AutoApplyTemplate' on this record model
        """
        self.set_field_value(self.AUTOAPPLYTEMPLATE__FIELD_NAME.field_name, value)

    def get_AutoApplyTemplate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AutoApplyTemplate' from this record model
        """
        return self.get_field_value(self.AUTOAPPLYTEMPLATE__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DestinationPlatingOrder_field(self, value: Optional[str]):
        """
        Set data field with field name 'DestinationPlatingOrder' on this record model
        """
        self.set_field_value(self.DESTINATIONPLATINGORDER__FIELD_NAME.field_name, value)

    def get_DestinationPlatingOrder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DestinationPlatingOrder' from this record model
        """
        return self.get_field_value(self.DESTINATIONPLATINGORDER__FIELD_NAME.field_name)

    def set_DstPlateSizeCol_field(self, value: Optional[int]):
        """
        Set data field with field name 'DstPlateSizeCol' on this record model
        """
        self.set_field_value(self.DSTPLATESIZECOL__FIELD_NAME.field_name, value)

    def get_DstPlateSizeCol_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DstPlateSizeCol' from this record model
        """
        return self.get_field_value(self.DSTPLATESIZECOL__FIELD_NAME.field_name)

    def set_DstPlateSizeRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'DstPlateSizeRow' on this record model
        """
        self.set_field_value(self.DSTPLATESIZEROW__FIELD_NAME.field_name, value)

    def get_DstPlateSizeRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DstPlateSizeRow' from this record model
        """
        return self.get_field_value(self.DSTPLATESIZEROW__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_NumberOfPlates_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfPlates' on this record model
        """
        self.set_field_value(self.NUMBEROFPLATES__FIELD_NAME.field_name, value)

    def get_NumberOfPlates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfPlates' from this record model
        """
        return self.get_field_value(self.NUMBEROFPLATES__FIELD_NAME.field_name)

    def set_NumberOfSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSamples' on this record model
        """
        self.set_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name, value)

    def get_NumberOfSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSamples' from this record model
        """
        return self.get_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name)

    def set_PlatingMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlatingMethod' on this record model
        """
        self.set_field_value(self.PLATINGMETHOD__FIELD_NAME.field_name, value)

    def get_PlatingMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlatingMethod' from this record model
        """
        return self.get_field_value(self.PLATINGMETHOD__FIELD_NAME.field_name)

    def set_ReverseSortingOrder_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReverseSortingOrder' on this record model
        """
        self.set_field_value(self.REVERSESORTINGORDER__FIELD_NAME.field_name, value)

    def get_ReverseSortingOrder_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReverseSortingOrder' from this record model
        """
        return self.get_field_value(self.REVERSESORTINGORDER__FIELD_NAME.field_name)

    def set_SamplesHaveSourcePosition_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SamplesHaveSourcePosition' on this record model
        """
        self.set_field_value(self.SAMPLESHAVESOURCEPOSITION__FIELD_NAME.field_name, value)

    def get_SamplesHaveSourcePosition_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SamplesHaveSourcePosition' from this record model
        """
        return self.get_field_value(self.SAMPLESHAVESOURCEPOSITION__FIELD_NAME.field_name)

    def set_SortOnField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SortOnField' on this record model
        """
        self.set_field_value(self.SORTONFIELD__FIELD_NAME.field_name, value)

    def get_SortOnField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SortOnField' from this record model
        """
        return self.get_field_value(self.SORTONFIELD__FIELD_NAME.field_name)

    def set_SourcePlateDoesNotMatter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SourcePlateDoesNotMatter' on this record model
        """
        self.set_field_value(self.SOURCEPLATEDOESNOTMATTER__FIELD_NAME.field_name, value)

    def get_SourcePlateDoesNotMatter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SourcePlateDoesNotMatter' from this record model
        """
        return self.get_field_value(self.SOURCEPLATEDOESNOTMATTER__FIELD_NAME.field_name)

    def set_SrcPlateSizeCol_field(self, value: Optional[int]):
        """
        Set data field with field name 'SrcPlateSizeCol' on this record model
        """
        self.set_field_value(self.SRCPLATESIZECOL__FIELD_NAME.field_name, value)

    def get_SrcPlateSizeCol_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SrcPlateSizeCol' from this record model
        """
        return self.get_field_value(self.SRCPLATESIZECOL__FIELD_NAME.field_name)

    def set_SrcPlateSizeRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'SrcPlateSizeRow' on this record model
        """
        self.set_field_value(self.SRCPLATESIZEROW__FIELD_NAME.field_name, value)

    def get_SrcPlateSizeRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SrcPlateSizeRow' from this record model
        """
        return self.get_field_value(self.SRCPLATESIZEROW__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetVol_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVol' on this record model
        """
        self.set_field_value(self.TARGETVOL__FIELD_NAME.field_name, value)

    def get_TargetVol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVol' from this record model
        """
        return self.get_field_value(self.TARGETVOL__FIELD_NAME.field_name)

    def set_UseCustomPlatePrefix_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomPlatePrefix' on this record model
        """
        self.set_field_value(self.USECUSTOMPLATEPREFIX__FIELD_NAME.field_name, value)

    def get_UseCustomPlatePrefix_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomPlatePrefix' from this record model
        """
        return self.get_field_value(self.USECUSTOMPLATEPREFIX__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellCompaction_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellCompaction' on this record model
        """
        self.set_field_value(self.WELLCOMPACTION__FIELD_NAME.field_name, value)

    def get_WellCompaction_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellCompaction' from this record model
        """
        return self.get_field_value(self.WELLCOMPACTION__FIELD_NAME.field_name)


class PlateTemplateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateTemplate
    Data Type Display Name: Plate Template (Plate Templates)
    Fields: CreatedBy, DataRecordName, DateCreated, TemplateDescription, TemplateDimensions, TemplateName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PlateTemplate'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    TEMPLATEDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("TemplateDescription", FieldType.STRING)
    TEMPLATEDIMENSIONS__FIELD_NAME: WrapperField = WrapperField("TemplateDimensions", FieldType.STRING)
    TEMPLATENAME__FIELD_NAME: WrapperField = WrapperField("TemplateName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TemplateDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateDescription' on this record model
        """
        self.set_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_TemplateDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateDescription' from this record model
        """
        return self.get_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name)

    def set_TemplateDimensions_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateDimensions' on this record model
        """
        self.set_field_value(self.TEMPLATEDIMENSIONS__FIELD_NAME.field_name, value)

    def get_TemplateDimensions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateDimensions' from this record model
        """
        return self.get_field_value(self.TEMPLATEDIMENSIONS__FIELD_NAME.field_name)

    def set_TemplateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateName' on this record model
        """
        self.set_field_value(self.TEMPLATENAME__FIELD_NAME.field_name, value)

    def get_TemplateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateName' from this record model
        """
        return self.get_field_value(self.TEMPLATENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateWellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateWell
    Data Type Display Name: Plate Well (Plate Wells)
    Fields: ColPosition, Concentration, ConcentrationUnits, ControlType, CreatedBy, DataRecordName, DateCreated, ExemplarSampleStatus, ExemplarSampleType, IsControl, IsPooled, OtherSampleId, ParentWellOrSampleRecordId, PlateId, RowPosition, SampleId, SourceSample, SourceSampleRecordId, TotalMass, VeloxLastModifiedBy, VeloxLastModifiedDate, Volume, VolumeUnits
    """
    DATA_TYPE_NAME: str = 'PlateWell'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Concentration", FieldType.DOUBLE)
    CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("ConcentrationUnits", FieldType.PICKLIST)
    CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("ControlType", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXEMPLARSAMPLESTATUS__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleStatus", FieldType.SELECTION)
    EXEMPLARSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleType", FieldType.SELECTION)
    ISCONTROL__FIELD_NAME: WrapperField = WrapperField("IsControl", FieldType.BOOLEAN)
    ISPOOLED__FIELD_NAME: WrapperField = WrapperField("IsPooled", FieldType.BOOLEAN)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    PARENTWELLORSAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("ParentWellOrSampleRecordId", FieldType.STRING)
    PLATEID__FIELD_NAME: WrapperField = WrapperField("PlateId", FieldType.STRING)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SOURCESAMPLE__FIELD_NAME: WrapperField = WrapperField("SourceSample", FieldType.STRING)
    SOURCESAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("SourceSampleRecordId", FieldType.STRING)
    TOTALMASS__FIELD_NAME: WrapperField = WrapperField("TotalMass", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VOLUME__FIELD_NAME: WrapperField = WrapperField("Volume", FieldType.DOUBLE)
    VOLUMEUNITS__FIELD_NAME: WrapperField = WrapperField("VolumeUnits", FieldType.PICKLIST)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarSampleStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarSampleStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_IsPooled_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPooled' on this record model
        """
        self.set_field_value(self.ISPOOLED__FIELD_NAME.field_name, value)

    def get_IsPooled_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPooled' from this record model
        """
        return self.get_field_value(self.ISPOOLED__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_ParentWellOrSampleRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ParentWellOrSampleRecordId' on this record model
        """
        self.set_field_value(self.PARENTWELLORSAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_ParentWellOrSampleRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ParentWellOrSampleRecordId' from this record model
        """
        return self.get_field_value(self.PARENTWELLORSAMPLERECORDID__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SourceSample_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceSample' on this record model
        """
        self.set_field_value(self.SOURCESAMPLE__FIELD_NAME.field_name, value)

    def get_SourceSample_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceSample' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLE__FIELD_NAME.field_name)

    def set_SourceSampleRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceSampleRecordId' on this record model
        """
        self.set_field_value(self.SOURCESAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SourceSampleRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceSampleRecordId' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLERECORDID__FIELD_NAME.field_name)

    def set_TotalMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalMass' on this record model
        """
        self.set_field_value(self.TOTALMASS__FIELD_NAME.field_name, value)

    def get_TotalMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalMass' from this record model
        """
        return self.get_field_value(self.TOTALMASS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)

    def set_VolumeUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'VolumeUnits' on this record model
        """
        self.set_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name, value)

    def get_VolumeUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VolumeUnits' from this record model
        """
        return self.get_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name)


class PlateWellIndexModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateWellIndex
    Data Type Display Name: Plate Well Index (Plate Well Indices)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, IndexId, IndexTag, InputAssignmentMultiRecordId, InputAssignmentRecordId, MultiplexInstructions, OtherSampleId, RowPosition, SampleId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PlateWellIndex'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INDEXID__FIELD_NAME: WrapperField = WrapperField("IndexId", FieldType.STRING)
    INDEXTAG__FIELD_NAME: WrapperField = WrapperField("IndexTag", FieldType.STRING)
    INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME: WrapperField = WrapperField("InputAssignmentMultiRecordId", FieldType.STRING)
    INPUTASSIGNMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("InputAssignmentRecordId", FieldType.LONG)
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: WrapperField = WrapperField("MultiplexInstructions", FieldType.SELECTION)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_InputAssignmentMultiRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputAssignmentMultiRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentMultiRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputAssignmentMultiRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name)

    def set_InputAssignmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InputAssignmentRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InputAssignmentRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateWellMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateWellMapping
    Data Type Display Name: Plate Well Mapping (Plate Well Mapping)
    Fields: CreatedBy, DataRecordName, DateCreated, Description, ExemplarSampleType, MultiParentLink135, NewControl, SourceItemId, SrcPlateIdAliq1, SrcWellPosAliq1, TargetConcentration, TargetPlateIdAliq1, TargetVol, TargetWellPosAliq1, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'PlateWellMapping'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EXEMPLARSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleType", FieldType.SELECTION)
    MULTIPARENTLINK135__FIELD_NAME: WrapperField = WrapperField("MultiParentLink135", FieldType.MULTIPARENTLINK)
    NEWCONTROL__FIELD_NAME: WrapperField = WrapperField("NewControl", FieldType.BOOLEAN)
    SOURCEITEMID__FIELD_NAME: WrapperField = WrapperField("SourceItemId", FieldType.STRING)
    SRCPLATEIDALIQ1__FIELD_NAME: WrapperField = WrapperField("SrcPlateIdAliq1", FieldType.STRING)
    SRCWELLPOSALIQ1__FIELD_NAME: WrapperField = WrapperField("SrcWellPosAliq1", FieldType.STRING)
    TARGETCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("TargetConcentration", FieldType.DOUBLE)
    TARGETPLATEIDALIQ1__FIELD_NAME: WrapperField = WrapperField("TargetPlateIdAliq1", FieldType.STRING)
    TARGETVOL__FIELD_NAME: WrapperField = WrapperField("TargetVol", FieldType.DOUBLE)
    TARGETWELLPOSALIQ1__FIELD_NAME: WrapperField = WrapperField("TargetWellPosAliq1", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_NewControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NewControl' on this record model
        """
        self.set_field_value(self.NEWCONTROL__FIELD_NAME.field_name, value)

    def get_NewControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NewControl' from this record model
        """
        return self.get_field_value(self.NEWCONTROL__FIELD_NAME.field_name)

    def set_SourceItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceItemId' on this record model
        """
        self.set_field_value(self.SOURCEITEMID__FIELD_NAME.field_name, value)

    def get_SourceItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceItemId' from this record model
        """
        return self.get_field_value(self.SOURCEITEMID__FIELD_NAME.field_name)

    def set_SrcPlateIdAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'SrcPlateIdAliq1' on this record model
        """
        self.set_field_value(self.SRCPLATEIDALIQ1__FIELD_NAME.field_name, value)

    def get_SrcPlateIdAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SrcPlateIdAliq1' from this record model
        """
        return self.get_field_value(self.SRCPLATEIDALIQ1__FIELD_NAME.field_name)

    def set_SrcWellPosAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'SrcWellPosAliq1' on this record model
        """
        self.set_field_value(self.SRCWELLPOSALIQ1__FIELD_NAME.field_name, value)

    def get_SrcWellPosAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SrcWellPosAliq1' from this record model
        """
        return self.get_field_value(self.SRCWELLPOSALIQ1__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetPlateIdAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetPlateIdAliq1' on this record model
        """
        self.set_field_value(self.TARGETPLATEIDALIQ1__FIELD_NAME.field_name, value)

    def get_TargetPlateIdAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetPlateIdAliq1' from this record model
        """
        return self.get_field_value(self.TARGETPLATEIDALIQ1__FIELD_NAME.field_name)

    def set_TargetVol_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVol' on this record model
        """
        self.set_field_value(self.TARGETVOL__FIELD_NAME.field_name, value)

    def get_TargetVol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVol' from this record model
        """
        return self.get_field_value(self.TARGETVOL__FIELD_NAME.field_name)

    def set_TargetWellPosAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetWellPosAliq1' on this record model
        """
        self.set_field_value(self.TARGETWELLPOSALIQ1__FIELD_NAME.field_name, value)

    def get_TargetWellPosAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetWellPosAliq1' from this record model
        """
        return self.get_field_value(self.TARGETWELLPOSALIQ1__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PolynomialModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Polynomial
    Data Type Display Name: Polynomial (Polynomials)
    Fields: CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate, x, y
    """
    DATA_TYPE_NAME: str = 'Polynomial'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    X__FIELD_NAME: WrapperField = WrapperField("x", FieldType.DOUBLE)
    Y__FIELD_NAME: WrapperField = WrapperField("y", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_x_field(self, value: Optional[float]):
        """
        Set data field with field name 'x' on this record model
        """
        self.set_field_value(self.X__FIELD_NAME.field_name, value)

    def get_x_field(self) -> Optional[float]:
        """
        Get data field value with field name 'x' from this record model
        """
        return self.get_field_value(self.X__FIELD_NAME.field_name)

    def set_y_field(self, value: Optional[float]):
        """
        Set data field with field name 'y' on this record model
        """
        self.set_field_value(self.Y__FIELD_NAME.field_name, value)

    def get_y_field(self) -> Optional[float]:
        """
        Get data field value with field name 'y' from this record model
        """
        return self.get_field_value(self.Y__FIELD_NAME.field_name)


class ProcessModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Process
    Data Type Display Name: Process (Processes)
    Fields: AssignedGroups, CreatedBy, DataRecordName, DateCreated, DisplayName, IsActive, IsCustom, ProcessDescription, ProcessName, ProcessType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Process'
    ASSIGNEDGROUPS__FIELD_NAME: WrapperField = WrapperField("AssignedGroups", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("DisplayName", FieldType.STRING)
    ISACTIVE__FIELD_NAME: WrapperField = WrapperField("IsActive", FieldType.BOOLEAN)
    ISCUSTOM__FIELD_NAME: WrapperField = WrapperField("IsCustom", FieldType.BOOLEAN)
    PROCESSDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("ProcessDescription", FieldType.STRING)
    PROCESSNAME__FIELD_NAME: WrapperField = WrapperField("ProcessName", FieldType.STRING)
    PROCESSTYPE__FIELD_NAME: WrapperField = WrapperField("ProcessType", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedGroups' on this record model
        """
        self.set_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name, value)

    def get_AssignedGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedGroups' from this record model
        """
        return self.get_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_IsCustom_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCustom' on this record model
        """
        self.set_field_value(self.ISCUSTOM__FIELD_NAME.field_name, value)

    def get_IsCustom_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCustom' from this record model
        """
        return self.get_field_value(self.ISCUSTOM__FIELD_NAME.field_name)

    def set_ProcessDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessDescription' on this record model
        """
        self.set_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ProcessDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessDescription' from this record model
        """
        return self.get_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def set_ProcessType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessType' on this record model
        """
        self.set_field_value(self.PROCESSTYPE__FIELD_NAME.field_name, value)

    def get_ProcessType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessType' from this record model
        """
        return self.get_field_value(self.PROCESSTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProcessBranchConditionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessBranchCondition
    Data Type Display Name: Process Branch Condition (Process Branch Conditions)
    Fields: BranchConditionJSON, ConditionID, CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    Process Branch Condition for process manager pro.
    """
    DATA_TYPE_NAME: str = 'ProcessBranchCondition'
    BRANCHCONDITIONJSON__FIELD_NAME: WrapperField = WrapperField("BranchConditionJSON", FieldType.STRING)
    CONDITIONID__FIELD_NAME: WrapperField = WrapperField("ConditionID", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BranchConditionJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'BranchConditionJSON' on this record model
        """
        self.set_field_value(self.BRANCHCONDITIONJSON__FIELD_NAME.field_name, value)

    def get_BranchConditionJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BranchConditionJSON' from this record model
        """
        return self.get_field_value(self.BRANCHCONDITIONJSON__FIELD_NAME.field_name)

    def set_ConditionID_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConditionID' on this record model
        """
        self.set_field_value(self.CONDITIONID__FIELD_NAME.field_name, value)

    def get_ConditionID_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConditionID' from this record model
        """
        return self.get_field_value(self.CONDITIONID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProcessConfigDisplayModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessConfigDisplay
    Data Type Display Name: Process Config Display (Process Config Displays)
    Fields: CreatedBy, DataRecordName, DateCreated, Imported, ProcessDescription, ProcessName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ProcessConfigDisplay'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    IMPORTED__FIELD_NAME: WrapperField = WrapperField("Imported", FieldType.BOOLEAN)
    PROCESSDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("ProcessDescription", FieldType.STRING)
    PROCESSNAME__FIELD_NAME: WrapperField = WrapperField("ProcessName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Imported_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Imported' on this record model
        """
        self.set_field_value(self.IMPORTED__FIELD_NAME.field_name, value)

    def get_Imported_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Imported' from this record model
        """
        return self.get_field_value(self.IMPORTED__FIELD_NAME.field_name)

    def set_ProcessDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessDescription' on this record model
        """
        self.set_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ProcessDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessDescription' from this record model
        """
        return self.get_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProcessQueueColumnModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessQueueColumn
    Data Type Display Name: Process Queue Column (Process Queue Columns)
    Fields: ColumnDataTypeName, CreatedBy, DataFieldName, DataRecordName, DateCreated, FieldOrder, QueueDataType, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkflowName
    """
    DATA_TYPE_NAME: str = 'ProcessQueueColumn'
    COLUMNDATATYPENAME__FIELD_NAME: WrapperField = WrapperField("ColumnDataTypeName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATAFIELDNAME__FIELD_NAME: WrapperField = WrapperField("DataFieldName", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FIELDORDER__FIELD_NAME: WrapperField = WrapperField("FieldOrder", FieldType.SHORT)
    QUEUEDATATYPE__FIELD_NAME: WrapperField = WrapperField("QueueDataType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowName", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColumnDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColumnDataTypeName' on this record model
        """
        self.set_field_value(self.COLUMNDATATYPENAME__FIELD_NAME.field_name, value)

    def get_ColumnDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColumnDataTypeName' from this record model
        """
        return self.get_field_value(self.COLUMNDATATYPENAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataFieldName' on this record model
        """
        self.set_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name, value)

    def get_DataFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataFieldName' from this record model
        """
        return self.get_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FieldOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'FieldOrder' on this record model
        """
        self.set_field_value(self.FIELDORDER__FIELD_NAME.field_name, value)

    def get_FieldOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FieldOrder' from this record model
        """
        return self.get_field_value(self.FIELDORDER__FIELD_NAME.field_name)

    def set_QueueDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'QueueDataType' on this record model
        """
        self.set_field_value(self.QUEUEDATATYPE__FIELD_NAME.field_name, value)

    def get_QueueDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QueueDataType' from this record model
        """
        return self.get_field_value(self.QUEUEDATATYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class ProcessQueueItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessQueueItem
    Data Type Display Name: Process Queue Item (Process Queue Items)
    Fields: AssignedTo, CreatedBy, DataRecordId, DataRecordName, DataTypeName, DateCreated, DurationInQueue, Experiment, LaunchedDate, ProcessHeaderName, ScheduledDate, ShowInQueue, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkflowHeaderName
    """
    DATA_TYPE_NAME: str = 'ProcessQueueItem'
    ASSIGNEDTO__FIELD_NAME: WrapperField = WrapperField("AssignedTo", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDID__FIELD_NAME: WrapperField = WrapperField("DataRecordId", FieldType.LONG)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPENAME__FIELD_NAME: WrapperField = WrapperField("DataTypeName", FieldType.STRING)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DURATIONINQUEUE__FIELD_NAME: WrapperField = WrapperField("DurationInQueue", FieldType.LONG)
    EXPERIMENT__FIELD_NAME: WrapperField = WrapperField("Experiment", FieldType.SIDE_LINK)
    LAUNCHEDDATE__FIELD_NAME: WrapperField = WrapperField("LaunchedDate", FieldType.DATE)
    PROCESSHEADERNAME__FIELD_NAME: WrapperField = WrapperField("ProcessHeaderName", FieldType.STRING)
    SCHEDULEDDATE__FIELD_NAME: WrapperField = WrapperField("ScheduledDate", FieldType.DATE)
    SHOWINQUEUE__FIELD_NAME: WrapperField = WrapperField("ShowInQueue", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWHEADERNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowHeaderName", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedTo_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedTo' on this record model
        """
        self.set_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name, value)

    def get_AssignedTo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedTo' from this record model
        """
        return self.get_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataRecordId' on this record model
        """
        self.set_field_value(self.DATARECORDID__FIELD_NAME.field_name, value)

    def get_DataRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataRecordId' from this record model
        """
        return self.get_field_value(self.DATARECORDID__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DurationInQueue_field(self, value: Optional[int]):
        """
        Set data field with field name 'DurationInQueue' on this record model
        """
        self.set_field_value(self.DURATIONINQUEUE__FIELD_NAME.field_name, value)

    def get_DurationInQueue_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DurationInQueue' from this record model
        """
        return self.get_field_value(self.DURATIONINQUEUE__FIELD_NAME.field_name)

    def set_Experiment_field(self, value: Optional[int]):
        """
        Set data field with field name 'Experiment' on this record model
        """
        self.set_field_value(self.EXPERIMENT__FIELD_NAME.field_name, value)

    def get_Experiment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Experiment' from this record model
        """
        return self.get_field_value(self.EXPERIMENT__FIELD_NAME.field_name)

    def set_LaunchedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LaunchedDate' on this record model
        """
        self.set_field_value(self.LAUNCHEDDATE__FIELD_NAME.field_name, value)

    def get_LaunchedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LaunchedDate' from this record model
        """
        return self.get_field_value(self.LAUNCHEDDATE__FIELD_NAME.field_name)

    def set_ProcessHeaderName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessHeaderName' on this record model
        """
        self.set_field_value(self.PROCESSHEADERNAME__FIELD_NAME.field_name, value)

    def get_ProcessHeaderName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessHeaderName' from this record model
        """
        return self.get_field_value(self.PROCESSHEADERNAME__FIELD_NAME.field_name)

    def set_ScheduledDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduledDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name, value)

    def get_ScheduledDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduledDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name)

    def set_ShowInQueue_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ShowInQueue' on this record model
        """
        self.set_field_value(self.SHOWINQUEUE__FIELD_NAME.field_name, value)

    def get_ShowInQueue_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ShowInQueue' from this record model
        """
        return self.get_field_value(self.SHOWINQUEUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowHeaderName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowHeaderName' on this record model
        """
        self.set_field_value(self.WORKFLOWHEADERNAME__FIELD_NAME.field_name, value)

    def get_WorkflowHeaderName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowHeaderName' from this record model
        """
        return self.get_field_value(self.WORKFLOWHEADERNAME__FIELD_NAME.field_name)


class ProcessWorkflowModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessWorkflow
    Data Type Display Name: Process Workflow (Process Workflows)
    Fields: ActionContext, ActionType, BranchLongId, CompletionContribution, CreatedBy, CustomDisplayName, DataRecordName, DataTypeName, DateCreated, DequeueOnLaunch, InputContainerType, InputSampleType, IsCustom, IsELNTemplate, isFalseConditionBranch, IsPlatesOnly, OutputSampleType, ParentBranchLongId, ProcessStepNumber, ResultTypes, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkflowDescription, WorkflowDiffQueueTime, WorkflowDiffTAT, WorkflowExpectedQTMetric, WorkflowExpectedQueueTime, WorkflowExpectedTAT, WorkflowExpectedTATMetric, WorkflowHistoricQTMetric, WorkflowHistoricQueueTime, WorkflowHistoricQueueTimeStd, WorkflowHistoricTAT, WorkflowHistoricTATMetric, WorkflowHistoricTATStd, WorkflowName
    """
    DATA_TYPE_NAME: str = 'ProcessWorkflow'
    ACTIONCONTEXT__FIELD_NAME: WrapperField = WrapperField("ActionContext", FieldType.SELECTION)
    ACTIONTYPE__FIELD_NAME: WrapperField = WrapperField("ActionType", FieldType.PICKLIST)
    BRANCHLONGID__FIELD_NAME: WrapperField = WrapperField("BranchLongId", FieldType.LONG)
    COMPLETIONCONTRIBUTION__FIELD_NAME: WrapperField = WrapperField("CompletionContribution", FieldType.INTEGER)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUSTOMDISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("CustomDisplayName", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPENAME__FIELD_NAME: WrapperField = WrapperField("DataTypeName", FieldType.STRING)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEQUEUEONLAUNCH__FIELD_NAME: WrapperField = WrapperField("DequeueOnLaunch", FieldType.BOOLEAN)
    INPUTCONTAINERTYPE__FIELD_NAME: WrapperField = WrapperField("InputContainerType", FieldType.PICKLIST)
    INPUTSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("InputSampleType", FieldType.SELECTION)
    ISCUSTOM__FIELD_NAME: WrapperField = WrapperField("IsCustom", FieldType.BOOLEAN)
    ISELNTEMPLATE__FIELD_NAME: WrapperField = WrapperField("IsELNTemplate", FieldType.BOOLEAN)
    ISFALSECONDITIONBRANCH__FIELD_NAME: WrapperField = WrapperField("isFalseConditionBranch", FieldType.BOOLEAN)
    ISPLATESONLY__FIELD_NAME: WrapperField = WrapperField("IsPlatesOnly", FieldType.BOOLEAN)
    OUTPUTSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("OutputSampleType", FieldType.SELECTION)
    PARENTBRANCHLONGID__FIELD_NAME: WrapperField = WrapperField("ParentBranchLongId", FieldType.LONG)
    PROCESSSTEPNUMBER__FIELD_NAME: WrapperField = WrapperField("ProcessStepNumber", FieldType.LONG)
    RESULTTYPES__FIELD_NAME: WrapperField = WrapperField("ResultTypes", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("WorkflowDescription", FieldType.STRING)
    WORKFLOWDIFFQUEUETIME__FIELD_NAME: WrapperField = WrapperField("WorkflowDiffQueueTime", FieldType.DOUBLE)
    WORKFLOWDIFFTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowDiffTAT", FieldType.DOUBLE)
    WORKFLOWEXPECTEDQTMETRIC__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedQTMetric", FieldType.DOUBLE)
    WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedQueueTime", FieldType.STRING)
    WORKFLOWEXPECTEDTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedTAT", FieldType.STRING)
    WORKFLOWEXPECTEDTATMETRIC__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedTATMetric", FieldType.DOUBLE)
    WORKFLOWHISTORICQTMETRIC__FIELD_NAME: WrapperField = WrapperField("WorkflowHistoricQTMetric", FieldType.DOUBLE)
    WORKFLOWHISTORICQUEUETIME__FIELD_NAME: WrapperField = WrapperField("WorkflowHistoricQueueTime", FieldType.STRING)
    WORKFLOWHISTORICQUEUETIMESTD__FIELD_NAME: WrapperField = WrapperField("WorkflowHistoricQueueTimeStd", FieldType.DOUBLE)
    WORKFLOWHISTORICTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowHistoricTAT", FieldType.STRING)
    WORKFLOWHISTORICTATMETRIC__FIELD_NAME: WrapperField = WrapperField("WorkflowHistoricTATMetric", FieldType.DOUBLE)
    WORKFLOWHISTORICTATSTD__FIELD_NAME: WrapperField = WrapperField("WorkflowHistoricTATStd", FieldType.DOUBLE)
    WORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowName", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActionContext_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActionContext' on this record model
        """
        self.set_field_value(self.ACTIONCONTEXT__FIELD_NAME.field_name, value)

    def get_ActionContext_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActionContext' from this record model
        """
        return self.get_field_value(self.ACTIONCONTEXT__FIELD_NAME.field_name)

    def set_ActionType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActionType' on this record model
        """
        self.set_field_value(self.ACTIONTYPE__FIELD_NAME.field_name, value)

    def get_ActionType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActionType' from this record model
        """
        return self.get_field_value(self.ACTIONTYPE__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def set_CompletionContribution_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletionContribution' on this record model
        """
        self.set_field_value(self.COMPLETIONCONTRIBUTION__FIELD_NAME.field_name, value)

    def get_CompletionContribution_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletionContribution' from this record model
        """
        return self.get_field_value(self.COMPLETIONCONTRIBUTION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomDisplayName' on this record model
        """
        self.set_field_value(self.CUSTOMDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_CustomDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomDisplayName' from this record model
        """
        return self.get_field_value(self.CUSTOMDISPLAYNAME__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DequeueOnLaunch_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DequeueOnLaunch' on this record model
        """
        self.set_field_value(self.DEQUEUEONLAUNCH__FIELD_NAME.field_name, value)

    def get_DequeueOnLaunch_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DequeueOnLaunch' from this record model
        """
        return self.get_field_value(self.DEQUEUEONLAUNCH__FIELD_NAME.field_name)

    def set_InputContainerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputContainerType' on this record model
        """
        self.set_field_value(self.INPUTCONTAINERTYPE__FIELD_NAME.field_name, value)

    def get_InputContainerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputContainerType' from this record model
        """
        return self.get_field_value(self.INPUTCONTAINERTYPE__FIELD_NAME.field_name)

    def set_InputSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputSampleType' on this record model
        """
        self.set_field_value(self.INPUTSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_InputSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputSampleType' from this record model
        """
        return self.get_field_value(self.INPUTSAMPLETYPE__FIELD_NAME.field_name)

    def set_IsCustom_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCustom' on this record model
        """
        self.set_field_value(self.ISCUSTOM__FIELD_NAME.field_name, value)

    def get_IsCustom_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCustom' from this record model
        """
        return self.get_field_value(self.ISCUSTOM__FIELD_NAME.field_name)

    def set_IsELNTemplate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsELNTemplate' on this record model
        """
        self.set_field_value(self.ISELNTEMPLATE__FIELD_NAME.field_name, value)

    def get_IsELNTemplate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsELNTemplate' from this record model
        """
        return self.get_field_value(self.ISELNTEMPLATE__FIELD_NAME.field_name)

    def set_isFalseConditionBranch_field(self, value: Optional[bool]):
        """
        Set data field with field name 'isFalseConditionBranch' on this record model
        """
        self.set_field_value(self.ISFALSECONDITIONBRANCH__FIELD_NAME.field_name, value)

    def get_isFalseConditionBranch_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'isFalseConditionBranch' from this record model
        """
        return self.get_field_value(self.ISFALSECONDITIONBRANCH__FIELD_NAME.field_name)

    def set_IsPlatesOnly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPlatesOnly' on this record model
        """
        self.set_field_value(self.ISPLATESONLY__FIELD_NAME.field_name, value)

    def get_IsPlatesOnly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPlatesOnly' from this record model
        """
        return self.get_field_value(self.ISPLATESONLY__FIELD_NAME.field_name)

    def set_OutputSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputSampleType' on this record model
        """
        self.set_field_value(self.OUTPUTSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_OutputSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputSampleType' from this record model
        """
        return self.get_field_value(self.OUTPUTSAMPLETYPE__FIELD_NAME.field_name)

    def set_ParentBranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ParentBranchLongId' on this record model
        """
        self.set_field_value(self.PARENTBRANCHLONGID__FIELD_NAME.field_name, value)

    def get_ParentBranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ParentBranchLongId' from this record model
        """
        return self.get_field_value(self.PARENTBRANCHLONGID__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_ResultTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResultTypes' on this record model
        """
        self.set_field_value(self.RESULTTYPES__FIELD_NAME.field_name, value)

    def get_ResultTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResultTypes' from this record model
        """
        return self.get_field_value(self.RESULTTYPES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowDescription' on this record model
        """
        self.set_field_value(self.WORKFLOWDESCRIPTION__FIELD_NAME.field_name, value)

    def get_WorkflowDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowDescription' from this record model
        """
        return self.get_field_value(self.WORKFLOWDESCRIPTION__FIELD_NAME.field_name)

    def set_WorkflowDiffQueueTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowDiffQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWDIFFQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowDiffQueueTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowDiffQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWDIFFQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowDiffTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowDiffTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWDIFFTAT__FIELD_NAME.field_name, value)

    def get_WorkflowDiffTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowDiffTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWDIFFTAT__FIELD_NAME.field_name)

    def set_WorkflowExpectedQTMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowExpectedQTMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDQTMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedQTMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowExpectedQTMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDQTMETRIC__FIELD_NAME.field_name)

    def set_WorkflowExpectedQueueTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedQueueTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowExpectedTAT_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTAT_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name)

    def set_WorkflowExpectedTATMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowExpectedTATMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTATMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTATMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowExpectedTATMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTATMETRIC__FIELD_NAME.field_name)

    def set_WorkflowHistoricQTMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricQTMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICQTMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricQTMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricQTMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICQTMETRIC__FIELD_NAME.field_name)

    def set_WorkflowHistoricQueueTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowHistoricQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricQueueTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowHistoricQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowHistoricQueueTimeStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricQueueTimeStd' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICQUEUETIMESTD__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricQueueTimeStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricQueueTimeStd' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICQUEUETIMESTD__FIELD_NAME.field_name)

    def set_WorkflowHistoricTAT_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowHistoricTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICTAT__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricTAT_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowHistoricTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICTAT__FIELD_NAME.field_name)

    def set_WorkflowHistoricTATMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricTATMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICTATMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricTATMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricTATMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICTATMETRIC__FIELD_NAME.field_name)

    def set_WorkflowHistoricTATStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricTATStd' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICTATSTD__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricTATStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricTATStd' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICTATSTD__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class ProcessWorkflowTrackingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessWorkflowTracking
    Data Type Display Name: Process Workflow Tracking (Process Workflow Trackings)
    Fields: ActiveWorkflowId, BranchLongId, CreatedBy, DataRecordName, DateCreated, EndDate, EndHour, EndMinuteTime, ExpectedQueueTime, ExpectedTAT, ProcessQueueItem, ProcessStepNumber, QueuedHours, QueuedMinutes, QueuedTime, QueueStartDate, QueueStartHour, QueueStartMinuteTime, SampleRecordId, StartDate, StartHour, StartMinuteTime, Status, TurnAroundHours, TurnAroundMinutes, VeloxLastModifiedBy, VeloxLastModifiedDate, WorkflowEndUserId, WorkflowExpectedQueueTime, WorkflowExpectedTAT, WorkflowExpectedTotalTAT, WorkflowIdNumber, WorkflowName, WorkflowProcessTAT, WorkflowStartUserId, WorkflowTAT, WorkflowVersion
    Records to track time spent on process workflows
    """
    DATA_TYPE_NAME: str = 'ProcessWorkflowTracking'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    BRANCHLONGID__FIELD_NAME: WrapperField = WrapperField("BranchLongId", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ENDDATE__FIELD_NAME: WrapperField = WrapperField("EndDate", FieldType.DATE)
    ENDHOUR__FIELD_NAME: WrapperField = WrapperField("EndHour", FieldType.LONG)
    ENDMINUTETIME__FIELD_NAME: WrapperField = WrapperField("EndMinuteTime", FieldType.LONG)
    EXPECTEDQUEUETIME__FIELD_NAME: WrapperField = WrapperField("ExpectedQueueTime", FieldType.DOUBLE)
    EXPECTEDTAT__FIELD_NAME: WrapperField = WrapperField("ExpectedTAT", FieldType.DOUBLE)
    PROCESSQUEUEITEM__FIELD_NAME: WrapperField = WrapperField("ProcessQueueItem", FieldType.SIDE_LINK)
    PROCESSSTEPNUMBER__FIELD_NAME: WrapperField = WrapperField("ProcessStepNumber", FieldType.LONG)
    QUEUEDHOURS__FIELD_NAME: WrapperField = WrapperField("QueuedHours", FieldType.LONG)
    QUEUEDMINUTES__FIELD_NAME: WrapperField = WrapperField("QueuedMinutes", FieldType.LONG)
    QUEUEDTIME__FIELD_NAME: WrapperField = WrapperField("QueuedTime", FieldType.DOUBLE)
    QUEUESTARTDATE__FIELD_NAME: WrapperField = WrapperField("QueueStartDate", FieldType.DATE)
    QUEUESTARTHOUR__FIELD_NAME: WrapperField = WrapperField("QueueStartHour", FieldType.LONG)
    QUEUESTARTMINUTETIME__FIELD_NAME: WrapperField = WrapperField("QueueStartMinuteTime", FieldType.LONG)
    SAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("SampleRecordId", FieldType.LONG)
    STARTDATE__FIELD_NAME: WrapperField = WrapperField("StartDate", FieldType.DATE)
    STARTHOUR__FIELD_NAME: WrapperField = WrapperField("StartHour", FieldType.LONG)
    STARTMINUTETIME__FIELD_NAME: WrapperField = WrapperField("StartMinuteTime", FieldType.LONG)
    STATUS__FIELD_NAME: WrapperField = WrapperField("Status", FieldType.PICKLIST)
    TURNAROUNDHOURS__FIELD_NAME: WrapperField = WrapperField("TurnAroundHours", FieldType.LONG)
    TURNAROUNDMINUTES__FIELD_NAME: WrapperField = WrapperField("TurnAroundMinutes", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WORKFLOWENDUSERID__FIELD_NAME: WrapperField = WrapperField("WorkflowEndUserId", FieldType.STRING)
    WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedQueueTime", FieldType.STRING)
    WORKFLOWEXPECTEDTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedTAT", FieldType.STRING)
    WORKFLOWEXPECTEDTOTALTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowExpectedTotalTAT", FieldType.DOUBLE)
    WORKFLOWIDNUMBER__FIELD_NAME: WrapperField = WrapperField("WorkflowIdNumber", FieldType.LONG)
    WORKFLOWNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowName", FieldType.STRING)
    WORKFLOWPROCESSTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowProcessTAT", FieldType.DOUBLE)
    WORKFLOWSTARTUSERID__FIELD_NAME: WrapperField = WrapperField("WorkflowStartUserId", FieldType.STRING)
    WORKFLOWTAT__FIELD_NAME: WrapperField = WrapperField("WorkflowTAT", FieldType.DOUBLE)
    WORKFLOWVERSION__FIELD_NAME: WrapperField = WrapperField("WorkflowVersion", FieldType.LONG)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndDate' on this record model
        """
        self.set_field_value(self.ENDDATE__FIELD_NAME.field_name, value)

    def get_EndDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndDate' from this record model
        """
        return self.get_field_value(self.ENDDATE__FIELD_NAME.field_name)

    def set_EndHour_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndHour' on this record model
        """
        self.set_field_value(self.ENDHOUR__FIELD_NAME.field_name, value)

    def get_EndHour_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndHour' from this record model
        """
        return self.get_field_value(self.ENDHOUR__FIELD_NAME.field_name)

    def set_EndMinuteTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndMinuteTime' on this record model
        """
        self.set_field_value(self.ENDMINUTETIME__FIELD_NAME.field_name, value)

    def get_EndMinuteTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndMinuteTime' from this record model
        """
        return self.get_field_value(self.ENDMINUTETIME__FIELD_NAME.field_name)

    def set_ExpectedQueueTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExpectedQueueTime' on this record model
        """
        self.set_field_value(self.EXPECTEDQUEUETIME__FIELD_NAME.field_name, value)

    def get_ExpectedQueueTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExpectedQueueTime' from this record model
        """
        return self.get_field_value(self.EXPECTEDQUEUETIME__FIELD_NAME.field_name)

    def set_ExpectedTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExpectedTAT' on this record model
        """
        self.set_field_value(self.EXPECTEDTAT__FIELD_NAME.field_name, value)

    def get_ExpectedTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExpectedTAT' from this record model
        """
        return self.get_field_value(self.EXPECTEDTAT__FIELD_NAME.field_name)

    def set_ProcessQueueItem_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessQueueItem' on this record model
        """
        self.set_field_value(self.PROCESSQUEUEITEM__FIELD_NAME.field_name, value)

    def get_ProcessQueueItem_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessQueueItem' from this record model
        """
        return self.get_field_value(self.PROCESSQUEUEITEM__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_QueuedHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueuedHours' on this record model
        """
        self.set_field_value(self.QUEUEDHOURS__FIELD_NAME.field_name, value)

    def get_QueuedHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueuedHours' from this record model
        """
        return self.get_field_value(self.QUEUEDHOURS__FIELD_NAME.field_name)

    def set_QueuedMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueuedMinutes' on this record model
        """
        self.set_field_value(self.QUEUEDMINUTES__FIELD_NAME.field_name, value)

    def get_QueuedMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueuedMinutes' from this record model
        """
        return self.get_field_value(self.QUEUEDMINUTES__FIELD_NAME.field_name)

    def set_QueuedTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'QueuedTime' on this record model
        """
        self.set_field_value(self.QUEUEDTIME__FIELD_NAME.field_name, value)

    def get_QueuedTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QueuedTime' from this record model
        """
        return self.get_field_value(self.QUEUEDTIME__FIELD_NAME.field_name)

    def set_QueueStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueueStartDate' on this record model
        """
        self.set_field_value(self.QUEUESTARTDATE__FIELD_NAME.field_name, value)

    def get_QueueStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueueStartDate' from this record model
        """
        return self.get_field_value(self.QUEUESTARTDATE__FIELD_NAME.field_name)

    def set_QueueStartHour_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueueStartHour' on this record model
        """
        self.set_field_value(self.QUEUESTARTHOUR__FIELD_NAME.field_name, value)

    def get_QueueStartHour_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueueStartHour' from this record model
        """
        return self.get_field_value(self.QUEUESTARTHOUR__FIELD_NAME.field_name)

    def set_QueueStartMinuteTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueueStartMinuteTime' on this record model
        """
        self.set_field_value(self.QUEUESTARTMINUTETIME__FIELD_NAME.field_name, value)

    def get_QueueStartMinuteTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueueStartMinuteTime' from this record model
        """
        return self.get_field_value(self.QUEUESTARTMINUTETIME__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_StartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDate' on this record model
        """
        self.set_field_value(self.STARTDATE__FIELD_NAME.field_name, value)

    def get_StartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDate' from this record model
        """
        return self.get_field_value(self.STARTDATE__FIELD_NAME.field_name)

    def set_StartHour_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartHour' on this record model
        """
        self.set_field_value(self.STARTHOUR__FIELD_NAME.field_name, value)

    def get_StartHour_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartHour' from this record model
        """
        return self.get_field_value(self.STARTHOUR__FIELD_NAME.field_name)

    def set_StartMinuteTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartMinuteTime' on this record model
        """
        self.set_field_value(self.STARTMINUTETIME__FIELD_NAME.field_name, value)

    def get_StartMinuteTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartMinuteTime' from this record model
        """
        return self.get_field_value(self.STARTMINUTETIME__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_TurnAroundHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundHours' on this record model
        """
        self.set_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name, value)

    def get_TurnAroundHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundHours' from this record model
        """
        return self.get_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name)

    def set_TurnAroundMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundMinutes' on this record model
        """
        self.set_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name, value)

    def get_TurnAroundMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundMinutes' from this record model
        """
        return self.get_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowEndUserId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowEndUserId' on this record model
        """
        self.set_field_value(self.WORKFLOWENDUSERID__FIELD_NAME.field_name, value)

    def get_WorkflowEndUserId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowEndUserId' from this record model
        """
        return self.get_field_value(self.WORKFLOWENDUSERID__FIELD_NAME.field_name)

    def set_WorkflowExpectedQueueTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedQueueTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowExpectedTAT_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTAT_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name)

    def set_WorkflowExpectedTotalTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowExpectedTotalTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTOTALTAT__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTotalTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowExpectedTotalTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTOTALTAT__FIELD_NAME.field_name)

    def set_WorkflowIdNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'WorkflowIdNumber' on this record model
        """
        self.set_field_value(self.WORKFLOWIDNUMBER__FIELD_NAME.field_name, value)

    def get_WorkflowIdNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'WorkflowIdNumber' from this record model
        """
        return self.get_field_value(self.WORKFLOWIDNUMBER__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)

    def set_WorkflowProcessTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowProcessTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWPROCESSTAT__FIELD_NAME.field_name, value)

    def get_WorkflowProcessTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowProcessTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWPROCESSTAT__FIELD_NAME.field_name)

    def set_WorkflowStartUserId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowStartUserId' on this record model
        """
        self.set_field_value(self.WORKFLOWSTARTUSERID__FIELD_NAME.field_name, value)

    def get_WorkflowStartUserId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowStartUserId' from this record model
        """
        return self.get_field_value(self.WORKFLOWSTARTUSERID__FIELD_NAME.field_name)

    def set_WorkflowTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWTAT__FIELD_NAME.field_name, value)

    def get_WorkflowTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWTAT__FIELD_NAME.field_name)

    def set_WorkflowVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'WorkflowVersion' on this record model
        """
        self.set_field_value(self.WORKFLOWVERSION__FIELD_NAME.field_name, value)

    def get_WorkflowVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'WorkflowVersion' from this record model
        """
        return self.get_field_value(self.WORKFLOWVERSION__FIELD_NAME.field_name)


class ProjectModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Project
    Data Type Display Name: Project (Projects)
    Fields: Client, CreatedBy, DataRecordName, DateCreated, DefaultReplicateQc, DefaultReplicateStd, EndDate, InheritRolesFromParent, isClinical, LeadEmail, Leader, PrecisionOfConcentration, PrecisionOfCv, ProjectDesc, ProjectId, ProjectName, ProjectType, SDMSSubdirectory, SmartsheetId, StabilityExample1, StartDate, SubjectIdPrefix, SubjectIdSequenceDigits, VeloxApprover, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Project'
    CLIENT__FIELD_NAME: WrapperField = WrapperField("Client", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEFAULTREPLICATEQC__FIELD_NAME: WrapperField = WrapperField("DefaultReplicateQc", FieldType.INTEGER)
    DEFAULTREPLICATESTD__FIELD_NAME: WrapperField = WrapperField("DefaultReplicateStd", FieldType.INTEGER)
    ENDDATE__FIELD_NAME: WrapperField = WrapperField("EndDate", FieldType.DATE)
    INHERITROLESFROMPARENT__FIELD_NAME: WrapperField = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN)
    ISCLINICAL__FIELD_NAME: WrapperField = WrapperField("isClinical", FieldType.BOOLEAN)
    LEADEMAIL__FIELD_NAME: WrapperField = WrapperField("LeadEmail", FieldType.STRING)
    LEADER__FIELD_NAME: WrapperField = WrapperField("Leader", FieldType.SELECTION)
    PRECISIONOFCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("PrecisionOfConcentration", FieldType.INTEGER)
    PRECISIONOFCV__FIELD_NAME: WrapperField = WrapperField("PrecisionOfCv", FieldType.INTEGER)
    PROJECTDESC__FIELD_NAME: WrapperField = WrapperField("ProjectDesc", FieldType.STRING)
    PROJECTID__FIELD_NAME: WrapperField = WrapperField("ProjectId", FieldType.STRING)
    PROJECTNAME__FIELD_NAME: WrapperField = WrapperField("ProjectName", FieldType.STRING)
    PROJECTTYPE__FIELD_NAME: WrapperField = WrapperField("ProjectType", FieldType.PICKLIST)
    SDMSSUBDIRECTORY__FIELD_NAME: WrapperField = WrapperField("SDMSSubdirectory", FieldType.STRING)
    SMARTSHEETID__FIELD_NAME: WrapperField = WrapperField("SmartsheetId", FieldType.STRING)
    STABILITYEXAMPLE1__FIELD_NAME: WrapperField = WrapperField("StabilityExample1", FieldType.STRING)
    STARTDATE__FIELD_NAME: WrapperField = WrapperField("StartDate", FieldType.DATE)
    SUBJECTIDPREFIX__FIELD_NAME: WrapperField = WrapperField("SubjectIdPrefix", FieldType.SELECTION)
    SUBJECTIDSEQUENCEDIGITS__FIELD_NAME: WrapperField = WrapperField("SubjectIdSequenceDigits", FieldType.INTEGER)
    VELOXAPPROVER__FIELD_NAME: WrapperField = WrapperField("VeloxApprover", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Client_field(self, value: Optional[str]):
        """
        Set data field with field name 'Client' on this record model
        """
        self.set_field_value(self.CLIENT__FIELD_NAME.field_name, value)

    def get_Client_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Client' from this record model
        """
        return self.get_field_value(self.CLIENT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultReplicateQc_field(self, value: Optional[int]):
        """
        Set data field with field name 'DefaultReplicateQc' on this record model
        """
        self.set_field_value(self.DEFAULTREPLICATEQC__FIELD_NAME.field_name, value)

    def get_DefaultReplicateQc_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DefaultReplicateQc' from this record model
        """
        return self.get_field_value(self.DEFAULTREPLICATEQC__FIELD_NAME.field_name)

    def set_DefaultReplicateStd_field(self, value: Optional[int]):
        """
        Set data field with field name 'DefaultReplicateStd' on this record model
        """
        self.set_field_value(self.DEFAULTREPLICATESTD__FIELD_NAME.field_name, value)

    def get_DefaultReplicateStd_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DefaultReplicateStd' from this record model
        """
        return self.get_field_value(self.DEFAULTREPLICATESTD__FIELD_NAME.field_name)

    def set_EndDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndDate' on this record model
        """
        self.set_field_value(self.ENDDATE__FIELD_NAME.field_name, value)

    def get_EndDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndDate' from this record model
        """
        return self.get_field_value(self.ENDDATE__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def set_isClinical_field(self, value: Optional[bool]):
        """
        Set data field with field name 'isClinical' on this record model
        """
        self.set_field_value(self.ISCLINICAL__FIELD_NAME.field_name, value)

    def get_isClinical_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'isClinical' from this record model
        """
        return self.get_field_value(self.ISCLINICAL__FIELD_NAME.field_name)

    def set_LeadEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'LeadEmail' on this record model
        """
        self.set_field_value(self.LEADEMAIL__FIELD_NAME.field_name, value)

    def get_LeadEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LeadEmail' from this record model
        """
        return self.get_field_value(self.LEADEMAIL__FIELD_NAME.field_name)

    def set_Leader_field(self, value: Optional[str]):
        """
        Set data field with field name 'Leader' on this record model
        """
        self.set_field_value(self.LEADER__FIELD_NAME.field_name, value)

    def get_Leader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Leader' from this record model
        """
        return self.get_field_value(self.LEADER__FIELD_NAME.field_name)

    def set_PrecisionOfConcentration_field(self, value: Optional[int]):
        """
        Set data field with field name 'PrecisionOfConcentration' on this record model
        """
        self.set_field_value(self.PRECISIONOFCONCENTRATION__FIELD_NAME.field_name, value)

    def get_PrecisionOfConcentration_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PrecisionOfConcentration' from this record model
        """
        return self.get_field_value(self.PRECISIONOFCONCENTRATION__FIELD_NAME.field_name)

    def set_PrecisionOfCv_field(self, value: Optional[int]):
        """
        Set data field with field name 'PrecisionOfCv' on this record model
        """
        self.set_field_value(self.PRECISIONOFCV__FIELD_NAME.field_name, value)

    def get_PrecisionOfCv_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PrecisionOfCv' from this record model
        """
        return self.get_field_value(self.PRECISIONOFCV__FIELD_NAME.field_name)

    def set_ProjectDesc_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectDesc' on this record model
        """
        self.set_field_value(self.PROJECTDESC__FIELD_NAME.field_name, value)

    def get_ProjectDesc_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectDesc' from this record model
        """
        return self.get_field_value(self.PROJECTDESC__FIELD_NAME.field_name)

    def set_ProjectId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectId' on this record model
        """
        self.set_field_value(self.PROJECTID__FIELD_NAME.field_name, value)

    def get_ProjectId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectId' from this record model
        """
        return self.get_field_value(self.PROJECTID__FIELD_NAME.field_name)

    def set_ProjectName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectName' on this record model
        """
        self.set_field_value(self.PROJECTNAME__FIELD_NAME.field_name, value)

    def get_ProjectName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectName' from this record model
        """
        return self.get_field_value(self.PROJECTNAME__FIELD_NAME.field_name)

    def set_ProjectType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectType' on this record model
        """
        self.set_field_value(self.PROJECTTYPE__FIELD_NAME.field_name, value)

    def get_ProjectType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectType' from this record model
        """
        return self.get_field_value(self.PROJECTTYPE__FIELD_NAME.field_name)

    def set_SDMSSubdirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'SDMSSubdirectory' on this record model
        """
        self.set_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name, value)

    def get_SDMSSubdirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SDMSSubdirectory' from this record model
        """
        return self.get_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name)

    def set_SmartsheetId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SmartsheetId' on this record model
        """
        self.set_field_value(self.SMARTSHEETID__FIELD_NAME.field_name, value)

    def get_SmartsheetId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SmartsheetId' from this record model
        """
        return self.get_field_value(self.SMARTSHEETID__FIELD_NAME.field_name)

    def set_StabilityExample1_field(self, value: Optional[str]):
        """
        Set data field with field name 'StabilityExample1' on this record model
        """
        self.set_field_value(self.STABILITYEXAMPLE1__FIELD_NAME.field_name, value)

    def get_StabilityExample1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StabilityExample1' from this record model
        """
        return self.get_field_value(self.STABILITYEXAMPLE1__FIELD_NAME.field_name)

    def set_StartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDate' on this record model
        """
        self.set_field_value(self.STARTDATE__FIELD_NAME.field_name, value)

    def get_StartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDate' from this record model
        """
        return self.get_field_value(self.STARTDATE__FIELD_NAME.field_name)

    def set_SubjectIdPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectIdPrefix' on this record model
        """
        self.set_field_value(self.SUBJECTIDPREFIX__FIELD_NAME.field_name, value)

    def get_SubjectIdPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectIdPrefix' from this record model
        """
        return self.get_field_value(self.SUBJECTIDPREFIX__FIELD_NAME.field_name)

    def set_SubjectIdSequenceDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectIdSequenceDigits' on this record model
        """
        self.set_field_value(self.SUBJECTIDSEQUENCEDIGITS__FIELD_NAME.field_name, value)

    def get_SubjectIdSequenceDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectIdSequenceDigits' from this record model
        """
        return self.get_field_value(self.SUBJECTIDSEQUENCEDIGITS__FIELD_NAME.field_name)

    def set_VeloxApprover_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxApprover' on this record model
        """
        self.set_field_value(self.VELOXAPPROVER__FIELD_NAME.field_name, value)

    def get_VeloxApprover_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxApprover' from this record model
        """
        return self.get_field_value(self.VELOXAPPROVER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProteinModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Protein
    Data Type Display Name: Protein (Proteins)
    Fields: Barcode, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, Expired, LotNumber, PartNumber, StructureName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Protein'
    BARCODE__FIELD_NAME: WrapperField = WrapperField("Barcode", FieldType.AUTO_ACCESSION)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.PICKLIST)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    EXPIRED__FIELD_NAME: WrapperField = WrapperField("Expired", FieldType.BOOLEAN)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    STRUCTURENAME__FIELD_NAME: WrapperField = WrapperField("StructureName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Expired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Expired' on this record model
        """
        self.set_field_value(self.EXPIRED__FIELD_NAME.field_name, value)

    def get_Expired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Expired' from this record model
        """
        return self.get_field_value(self.EXPIRED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_StructureName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StructureName' on this record model
        """
        self.set_field_value(self.STRUCTURENAME__FIELD_NAME.field_name, value)

    def get_StructureName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StructureName' from this record model
        """
        return self.get_field_value(self.STRUCTURENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProteinPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProteinPart
    Data Type Display Name: Protein Part (Protein Parts)
    Fields: Absorbance, AbsorbanceReducedCys, AutoTranslationNotes, ChemicalProperties, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, EditLock, ExtinctionCoefficient, ExtinctionCoeffReducedCys, FilePath, GenbankAttachment, HELM, HELMHash, IsoelectricPoint, MolecularWeight, MultiParentLink152, MultiParentLink175, NumChains, PartNumber, ProteinSequence, QuantityOnHand, QuantityPerItem, ReorderLevelQuantity, SequenceHash, SequenceLength, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ProteinPart'
    ABSORBANCE__FIELD_NAME: WrapperField = WrapperField("Absorbance", FieldType.DOUBLE)
    ABSORBANCEREDUCEDCYS__FIELD_NAME: WrapperField = WrapperField("AbsorbanceReducedCys", FieldType.DOUBLE)
    AUTOTRANSLATIONNOTES__FIELD_NAME: WrapperField = WrapperField("AutoTranslationNotes", FieldType.STRING)
    CHEMICALPROPERTIES__FIELD_NAME: WrapperField = WrapperField("ChemicalProperties", FieldType.SIDE_LINK)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.PICKLIST)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXTINCTIONCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("ExtinctionCoefficient", FieldType.DOUBLE)
    EXTINCTIONCOEFFREDUCEDCYS__FIELD_NAME: WrapperField = WrapperField("ExtinctionCoeffReducedCys", FieldType.DOUBLE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    GENBANKATTACHMENT__FIELD_NAME: WrapperField = WrapperField("GenbankAttachment", FieldType.SIDE_LINK)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    HELMHASH__FIELD_NAME: WrapperField = WrapperField("HELMHash", FieldType.STRING)
    ISOELECTRICPOINT__FIELD_NAME: WrapperField = WrapperField("IsoelectricPoint", FieldType.DOUBLE)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    MULTIPARENTLINK152__FIELD_NAME: WrapperField = WrapperField("MultiParentLink152", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK175__FIELD_NAME: WrapperField = WrapperField("MultiParentLink175", FieldType.MULTIPARENTLINK)
    NUMCHAINS__FIELD_NAME: WrapperField = WrapperField("NumChains", FieldType.INTEGER)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    PROTEINSEQUENCE__FIELD_NAME: WrapperField = WrapperField("ProteinSequence", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    SEQUENCEHASH__FIELD_NAME: WrapperField = WrapperField("SequenceHash", FieldType.STRING)
    SEQUENCELENGTH__FIELD_NAME: WrapperField = WrapperField("SequenceLength", FieldType.INTEGER)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Absorbance_field(self, value: Optional[float]):
        """
        Set data field with field name 'Absorbance' on this record model
        """
        self.set_field_value(self.ABSORBANCE__FIELD_NAME.field_name, value)

    def get_Absorbance_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Absorbance' from this record model
        """
        return self.get_field_value(self.ABSORBANCE__FIELD_NAME.field_name)

    def set_AbsorbanceReducedCys_field(self, value: Optional[float]):
        """
        Set data field with field name 'AbsorbanceReducedCys' on this record model
        """
        self.set_field_value(self.ABSORBANCEREDUCEDCYS__FIELD_NAME.field_name, value)

    def get_AbsorbanceReducedCys_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AbsorbanceReducedCys' from this record model
        """
        return self.get_field_value(self.ABSORBANCEREDUCEDCYS__FIELD_NAME.field_name)

    def set_AutoTranslationNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'AutoTranslationNotes' on this record model
        """
        self.set_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name, value)

    def get_AutoTranslationNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AutoTranslationNotes' from this record model
        """
        return self.get_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name)

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_ExtinctionCoeffReducedCys_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoeffReducedCys' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFREDUCEDCYS__FIELD_NAME.field_name, value)

    def get_ExtinctionCoeffReducedCys_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoeffReducedCys' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFREDUCEDCYS__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GenbankAttachment_field(self, value: Optional[int]):
        """
        Set data field with field name 'GenbankAttachment' on this record model
        """
        self.set_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenbankAttachment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GenbankAttachment' from this record model
        """
        return self.get_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_IsoelectricPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'IsoelectricPoint' on this record model
        """
        self.set_field_value(self.ISOELECTRICPOINT__FIELD_NAME.field_name, value)

    def get_IsoelectricPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'IsoelectricPoint' from this record model
        """
        return self.get_field_value(self.ISOELECTRICPOINT__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_NumChains_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumChains' on this record model
        """
        self.set_field_value(self.NUMCHAINS__FIELD_NAME.field_name, value)

    def get_NumChains_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumChains' from this record model
        """
        return self.get_field_value(self.NUMCHAINS__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_ProteinSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProteinSequence' on this record model
        """
        self.set_field_value(self.PROTEINSEQUENCE__FIELD_NAME.field_name, value)

    def get_ProteinSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProteinSequence' from this record model
        """
        return self.get_field_value(self.PROTEINSEQUENCE__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_SequenceLength_field(self, value: Optional[int]):
        """
        Set data field with field name 'SequenceLength' on this record model
        """
        self.set_field_value(self.SEQUENCELENGTH__FIELD_NAME.field_name, value)

    def get_SequenceLength_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SequenceLength' from this record model
        """
        return self.get_field_value(self.SEQUENCELENGTH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QCConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QCConfig
    Data Type Display Name: Workflow Specific QC Config (Workflow Specific QC Configs)
    Fields: A260MAX, A260MIN, A280MAX, A280MIN, A260230MAX, A260230MIN, A260280MAX, A260280MIN, AreaMAX, AreaMIN, AvgSizeMAX, AvgSizeMIN, CalculatedConcentrationMAX, CalculatedConcentrationMIN, CalculatedMolarityMAX, CalculatedMolarityMIN, ConcentrationMAX, ConcentrationMIN, CreatedBy, CtMAX, CtMeanMAX, CtMeanMIN, CtMIN, CtSDMAX, CtSDMIN, DataRecordName, DateCreated, DatumType, DilutionFactorMAX, DilutionFactorMIN, FailedReprocess, MapToConcentration, MapToConcentrationUnits, MolarityMAX, MolarityMIN, MultiParentLink207, PeakValueMAX, PeakValueMIN, PreferredExperiment, QCConfigId, QuantityMAX, QuantityMeanMAX, QuantityMeanMIN, QuantityMIN, QuantitySDMAX, QuantitySDMIN, RequiredResultsPerSample, RequiresConcentration, RequiresQC, RINMAX, RINMIN, VeloxLastModifiedBy, VeloxLastModifiedDate, VolumeDeductedOnRun
    """
    DATA_TYPE_NAME: str = 'QCConfig'
    A260MAX__FIELD_NAME: WrapperField = WrapperField("A260MAX", FieldType.DOUBLE)
    A260MIN__FIELD_NAME: WrapperField = WrapperField("A260MIN", FieldType.DOUBLE)
    A280MAX__FIELD_NAME: WrapperField = WrapperField("A280MAX", FieldType.DOUBLE)
    A280MIN__FIELD_NAME: WrapperField = WrapperField("A280MIN", FieldType.DOUBLE)
    A260230MAX__FIELD_NAME: WrapperField = WrapperField("A260230MAX", FieldType.DOUBLE)
    A260230MIN__FIELD_NAME: WrapperField = WrapperField("A260230MIN", FieldType.DOUBLE)
    A260280MAX__FIELD_NAME: WrapperField = WrapperField("A260280MAX", FieldType.DOUBLE)
    A260280MIN__FIELD_NAME: WrapperField = WrapperField("A260280MIN", FieldType.DOUBLE)
    AREAMAX__FIELD_NAME: WrapperField = WrapperField("AreaMAX", FieldType.DOUBLE)
    AREAMIN__FIELD_NAME: WrapperField = WrapperField("AreaMIN", FieldType.DOUBLE)
    AVGSIZEMAX__FIELD_NAME: WrapperField = WrapperField("AvgSizeMAX", FieldType.DOUBLE)
    AVGSIZEMIN__FIELD_NAME: WrapperField = WrapperField("AvgSizeMIN", FieldType.DOUBLE)
    CALCULATEDCONCENTRATIONMAX__FIELD_NAME: WrapperField = WrapperField("CalculatedConcentrationMAX", FieldType.DOUBLE)
    CALCULATEDCONCENTRATIONMIN__FIELD_NAME: WrapperField = WrapperField("CalculatedConcentrationMIN", FieldType.DOUBLE)
    CALCULATEDMOLARITYMAX__FIELD_NAME: WrapperField = WrapperField("CalculatedMolarityMAX", FieldType.DOUBLE)
    CALCULATEDMOLARITYMIN__FIELD_NAME: WrapperField = WrapperField("CalculatedMolarityMIN", FieldType.DOUBLE)
    CONCENTRATIONMAX__FIELD_NAME: WrapperField = WrapperField("ConcentrationMAX", FieldType.DOUBLE)
    CONCENTRATIONMIN__FIELD_NAME: WrapperField = WrapperField("ConcentrationMIN", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CTMAX__FIELD_NAME: WrapperField = WrapperField("CtMAX", FieldType.DOUBLE)
    CTMEANMAX__FIELD_NAME: WrapperField = WrapperField("CtMeanMAX", FieldType.DOUBLE)
    CTMEANMIN__FIELD_NAME: WrapperField = WrapperField("CtMeanMIN", FieldType.DOUBLE)
    CTMIN__FIELD_NAME: WrapperField = WrapperField("CtMIN", FieldType.DOUBLE)
    CTSDMAX__FIELD_NAME: WrapperField = WrapperField("CtSDMAX", FieldType.DOUBLE)
    CTSDMIN__FIELD_NAME: WrapperField = WrapperField("CtSDMIN", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATUMTYPE__FIELD_NAME: WrapperField = WrapperField("DatumType", FieldType.SELECTION)
    DILUTIONFACTORMAX__FIELD_NAME: WrapperField = WrapperField("DilutionFactorMAX", FieldType.DOUBLE)
    DILUTIONFACTORMIN__FIELD_NAME: WrapperField = WrapperField("DilutionFactorMIN", FieldType.DOUBLE)
    FAILEDREPROCESS__FIELD_NAME: WrapperField = WrapperField("FailedReprocess", FieldType.BOOLEAN)
    MAPTOCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("MapToConcentration", FieldType.SELECTION)
    MAPTOCONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("MapToConcentrationUnits", FieldType.SELECTION)
    MOLARITYMAX__FIELD_NAME: WrapperField = WrapperField("MolarityMAX", FieldType.DOUBLE)
    MOLARITYMIN__FIELD_NAME: WrapperField = WrapperField("MolarityMIN", FieldType.DOUBLE)
    MULTIPARENTLINK207__FIELD_NAME: WrapperField = WrapperField("MultiParentLink207", FieldType.MULTIPARENTLINK)
    PEAKVALUEMAX__FIELD_NAME: WrapperField = WrapperField("PeakValueMAX", FieldType.DOUBLE)
    PEAKVALUEMIN__FIELD_NAME: WrapperField = WrapperField("PeakValueMIN", FieldType.DOUBLE)
    PREFERREDEXPERIMENT__FIELD_NAME: WrapperField = WrapperField("PreferredExperiment", FieldType.BOOLEAN)
    QCCONFIGID__FIELD_NAME: WrapperField = WrapperField("QCConfigId", FieldType.STRING)
    QUANTITYMAX__FIELD_NAME: WrapperField = WrapperField("QuantityMAX", FieldType.DOUBLE)
    QUANTITYMEANMAX__FIELD_NAME: WrapperField = WrapperField("QuantityMeanMAX", FieldType.DOUBLE)
    QUANTITYMEANMIN__FIELD_NAME: WrapperField = WrapperField("QuantityMeanMIN", FieldType.DOUBLE)
    QUANTITYMIN__FIELD_NAME: WrapperField = WrapperField("QuantityMIN", FieldType.DOUBLE)
    QUANTITYSDMAX__FIELD_NAME: WrapperField = WrapperField("QuantitySDMAX", FieldType.DOUBLE)
    QUANTITYSDMIN__FIELD_NAME: WrapperField = WrapperField("QuantitySDMIN", FieldType.DOUBLE)
    REQUIREDRESULTSPERSAMPLE__FIELD_NAME: WrapperField = WrapperField("RequiredResultsPerSample", FieldType.INTEGER)
    REQUIRESCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("RequiresConcentration", FieldType.BOOLEAN)
    REQUIRESQC__FIELD_NAME: WrapperField = WrapperField("RequiresQC", FieldType.BOOLEAN)
    RINMAX__FIELD_NAME: WrapperField = WrapperField("RINMAX", FieldType.DOUBLE)
    RINMIN__FIELD_NAME: WrapperField = WrapperField("RINMIN", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VOLUMEDEDUCTEDONRUN__FIELD_NAME: WrapperField = WrapperField("VolumeDeductedOnRun", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260MAX' on this record model
        """
        self.set_field_value(self.A260MAX__FIELD_NAME.field_name, value)

    def get_A260MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260MAX' from this record model
        """
        return self.get_field_value(self.A260MAX__FIELD_NAME.field_name)

    def set_A260MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260MIN' on this record model
        """
        self.set_field_value(self.A260MIN__FIELD_NAME.field_name, value)

    def get_A260MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260MIN' from this record model
        """
        return self.get_field_value(self.A260MIN__FIELD_NAME.field_name)

    def set_A280MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280MAX' on this record model
        """
        self.set_field_value(self.A280MAX__FIELD_NAME.field_name, value)

    def get_A280MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280MAX' from this record model
        """
        return self.get_field_value(self.A280MAX__FIELD_NAME.field_name)

    def set_A280MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280MIN' on this record model
        """
        self.set_field_value(self.A280MIN__FIELD_NAME.field_name, value)

    def get_A280MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280MIN' from this record model
        """
        return self.get_field_value(self.A280MIN__FIELD_NAME.field_name)

    def set_A260230MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230MAX' on this record model
        """
        self.set_field_value(self.A260230MAX__FIELD_NAME.field_name, value)

    def get_A260230MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230MAX' from this record model
        """
        return self.get_field_value(self.A260230MAX__FIELD_NAME.field_name)

    def set_A260230MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230MIN' on this record model
        """
        self.set_field_value(self.A260230MIN__FIELD_NAME.field_name, value)

    def get_A260230MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230MIN' from this record model
        """
        return self.get_field_value(self.A260230MIN__FIELD_NAME.field_name)

    def set_A260280MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280MAX' on this record model
        """
        self.set_field_value(self.A260280MAX__FIELD_NAME.field_name, value)

    def get_A260280MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280MAX' from this record model
        """
        return self.get_field_value(self.A260280MAX__FIELD_NAME.field_name)

    def set_A260280MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280MIN' on this record model
        """
        self.set_field_value(self.A260280MIN__FIELD_NAME.field_name, value)

    def get_A260280MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280MIN' from this record model
        """
        return self.get_field_value(self.A260280MIN__FIELD_NAME.field_name)

    def set_AreaMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'AreaMAX' on this record model
        """
        self.set_field_value(self.AREAMAX__FIELD_NAME.field_name, value)

    def get_AreaMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AreaMAX' from this record model
        """
        return self.get_field_value(self.AREAMAX__FIELD_NAME.field_name)

    def set_AreaMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'AreaMIN' on this record model
        """
        self.set_field_value(self.AREAMIN__FIELD_NAME.field_name, value)

    def get_AreaMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AreaMIN' from this record model
        """
        return self.get_field_value(self.AREAMIN__FIELD_NAME.field_name)

    def set_AvgSizeMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgSizeMAX' on this record model
        """
        self.set_field_value(self.AVGSIZEMAX__FIELD_NAME.field_name, value)

    def get_AvgSizeMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgSizeMAX' from this record model
        """
        return self.get_field_value(self.AVGSIZEMAX__FIELD_NAME.field_name)

    def set_AvgSizeMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgSizeMIN' on this record model
        """
        self.set_field_value(self.AVGSIZEMIN__FIELD_NAME.field_name, value)

    def get_AvgSizeMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgSizeMIN' from this record model
        """
        return self.get_field_value(self.AVGSIZEMIN__FIELD_NAME.field_name)

    def set_CalculatedConcentrationMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentrationMAX' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATIONMAX__FIELD_NAME.field_name, value)

    def get_CalculatedConcentrationMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentrationMAX' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATIONMAX__FIELD_NAME.field_name)

    def set_CalculatedConcentrationMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentrationMIN' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATIONMIN__FIELD_NAME.field_name, value)

    def get_CalculatedConcentrationMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentrationMIN' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATIONMIN__FIELD_NAME.field_name)

    def set_CalculatedMolarityMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedMolarityMAX' on this record model
        """
        self.set_field_value(self.CALCULATEDMOLARITYMAX__FIELD_NAME.field_name, value)

    def get_CalculatedMolarityMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedMolarityMAX' from this record model
        """
        return self.get_field_value(self.CALCULATEDMOLARITYMAX__FIELD_NAME.field_name)

    def set_CalculatedMolarityMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedMolarityMIN' on this record model
        """
        self.set_field_value(self.CALCULATEDMOLARITYMIN__FIELD_NAME.field_name, value)

    def get_CalculatedMolarityMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedMolarityMIN' from this record model
        """
        return self.get_field_value(self.CALCULATEDMOLARITYMIN__FIELD_NAME.field_name)

    def set_ConcentrationMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConcentrationMAX' on this record model
        """
        self.set_field_value(self.CONCENTRATIONMAX__FIELD_NAME.field_name, value)

    def get_ConcentrationMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConcentrationMAX' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONMAX__FIELD_NAME.field_name)

    def set_ConcentrationMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConcentrationMIN' on this record model
        """
        self.set_field_value(self.CONCENTRATIONMIN__FIELD_NAME.field_name, value)

    def get_ConcentrationMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConcentrationMIN' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONMIN__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CtMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMAX' on this record model
        """
        self.set_field_value(self.CTMAX__FIELD_NAME.field_name, value)

    def get_CtMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMAX' from this record model
        """
        return self.get_field_value(self.CTMAX__FIELD_NAME.field_name)

    def set_CtMeanMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMeanMAX' on this record model
        """
        self.set_field_value(self.CTMEANMAX__FIELD_NAME.field_name, value)

    def get_CtMeanMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMeanMAX' from this record model
        """
        return self.get_field_value(self.CTMEANMAX__FIELD_NAME.field_name)

    def set_CtMeanMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMeanMIN' on this record model
        """
        self.set_field_value(self.CTMEANMIN__FIELD_NAME.field_name, value)

    def get_CtMeanMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMeanMIN' from this record model
        """
        return self.get_field_value(self.CTMEANMIN__FIELD_NAME.field_name)

    def set_CtMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMIN' on this record model
        """
        self.set_field_value(self.CTMIN__FIELD_NAME.field_name, value)

    def get_CtMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMIN' from this record model
        """
        return self.get_field_value(self.CTMIN__FIELD_NAME.field_name)

    def set_CtSDMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSDMAX' on this record model
        """
        self.set_field_value(self.CTSDMAX__FIELD_NAME.field_name, value)

    def get_CtSDMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSDMAX' from this record model
        """
        return self.get_field_value(self.CTSDMAX__FIELD_NAME.field_name)

    def set_CtSDMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSDMIN' on this record model
        """
        self.set_field_value(self.CTSDMIN__FIELD_NAME.field_name, value)

    def get_CtSDMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSDMIN' from this record model
        """
        return self.get_field_value(self.CTSDMIN__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DatumType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DatumType' on this record model
        """
        self.set_field_value(self.DATUMTYPE__FIELD_NAME.field_name, value)

    def get_DatumType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DatumType' from this record model
        """
        return self.get_field_value(self.DATUMTYPE__FIELD_NAME.field_name)

    def set_DilutionFactorMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactorMAX' on this record model
        """
        self.set_field_value(self.DILUTIONFACTORMAX__FIELD_NAME.field_name, value)

    def get_DilutionFactorMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactorMAX' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTORMAX__FIELD_NAME.field_name)

    def set_DilutionFactorMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactorMIN' on this record model
        """
        self.set_field_value(self.DILUTIONFACTORMIN__FIELD_NAME.field_name, value)

    def get_DilutionFactorMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactorMIN' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTORMIN__FIELD_NAME.field_name)

    def set_FailedReprocess_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FailedReprocess' on this record model
        """
        self.set_field_value(self.FAILEDREPROCESS__FIELD_NAME.field_name, value)

    def get_FailedReprocess_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FailedReprocess' from this record model
        """
        return self.get_field_value(self.FAILEDREPROCESS__FIELD_NAME.field_name)

    def set_MapToConcentration_field(self, value: Optional[str]):
        """
        Set data field with field name 'MapToConcentration' on this record model
        """
        self.set_field_value(self.MAPTOCONCENTRATION__FIELD_NAME.field_name, value)

    def get_MapToConcentration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MapToConcentration' from this record model
        """
        return self.get_field_value(self.MAPTOCONCENTRATION__FIELD_NAME.field_name)

    def set_MapToConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MapToConcentrationUnits' on this record model
        """
        self.set_field_value(self.MAPTOCONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_MapToConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MapToConcentrationUnits' from this record model
        """
        return self.get_field_value(self.MAPTOCONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_MolarityMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolarityMAX' on this record model
        """
        self.set_field_value(self.MOLARITYMAX__FIELD_NAME.field_name, value)

    def get_MolarityMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolarityMAX' from this record model
        """
        return self.get_field_value(self.MOLARITYMAX__FIELD_NAME.field_name)

    def set_MolarityMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolarityMIN' on this record model
        """
        self.set_field_value(self.MOLARITYMIN__FIELD_NAME.field_name, value)

    def get_MolarityMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolarityMIN' from this record model
        """
        return self.get_field_value(self.MOLARITYMIN__FIELD_NAME.field_name)

    def set_PeakValueMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValueMAX' on this record model
        """
        self.set_field_value(self.PEAKVALUEMAX__FIELD_NAME.field_name, value)

    def get_PeakValueMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValueMAX' from this record model
        """
        return self.get_field_value(self.PEAKVALUEMAX__FIELD_NAME.field_name)

    def set_PeakValueMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValueMIN' on this record model
        """
        self.set_field_value(self.PEAKVALUEMIN__FIELD_NAME.field_name, value)

    def get_PeakValueMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValueMIN' from this record model
        """
        return self.get_field_value(self.PEAKVALUEMIN__FIELD_NAME.field_name)

    def set_PreferredExperiment_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PreferredExperiment' on this record model
        """
        self.set_field_value(self.PREFERREDEXPERIMENT__FIELD_NAME.field_name, value)

    def get_PreferredExperiment_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PreferredExperiment' from this record model
        """
        return self.get_field_value(self.PREFERREDEXPERIMENT__FIELD_NAME.field_name)

    def set_QCConfigId_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCConfigId' on this record model
        """
        self.set_field_value(self.QCCONFIGID__FIELD_NAME.field_name, value)

    def get_QCConfigId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCConfigId' from this record model
        """
        return self.get_field_value(self.QCCONFIGID__FIELD_NAME.field_name)

    def set_QuantityMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMAX' on this record model
        """
        self.set_field_value(self.QUANTITYMAX__FIELD_NAME.field_name, value)

    def get_QuantityMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMAX' from this record model
        """
        return self.get_field_value(self.QUANTITYMAX__FIELD_NAME.field_name)

    def set_QuantityMeanMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMeanMAX' on this record model
        """
        self.set_field_value(self.QUANTITYMEANMAX__FIELD_NAME.field_name, value)

    def get_QuantityMeanMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMeanMAX' from this record model
        """
        return self.get_field_value(self.QUANTITYMEANMAX__FIELD_NAME.field_name)

    def set_QuantityMeanMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMeanMIN' on this record model
        """
        self.set_field_value(self.QUANTITYMEANMIN__FIELD_NAME.field_name, value)

    def get_QuantityMeanMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMeanMIN' from this record model
        """
        return self.get_field_value(self.QUANTITYMEANMIN__FIELD_NAME.field_name)

    def set_QuantityMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMIN' on this record model
        """
        self.set_field_value(self.QUANTITYMIN__FIELD_NAME.field_name, value)

    def get_QuantityMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMIN' from this record model
        """
        return self.get_field_value(self.QUANTITYMIN__FIELD_NAME.field_name)

    def set_QuantitySDMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantitySDMAX' on this record model
        """
        self.set_field_value(self.QUANTITYSDMAX__FIELD_NAME.field_name, value)

    def get_QuantitySDMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantitySDMAX' from this record model
        """
        return self.get_field_value(self.QUANTITYSDMAX__FIELD_NAME.field_name)

    def set_QuantitySDMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantitySDMIN' on this record model
        """
        self.set_field_value(self.QUANTITYSDMIN__FIELD_NAME.field_name, value)

    def get_QuantitySDMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantitySDMIN' from this record model
        """
        return self.get_field_value(self.QUANTITYSDMIN__FIELD_NAME.field_name)

    def set_RequiredResultsPerSample_field(self, value: Optional[int]):
        """
        Set data field with field name 'RequiredResultsPerSample' on this record model
        """
        self.set_field_value(self.REQUIREDRESULTSPERSAMPLE__FIELD_NAME.field_name, value)

    def get_RequiredResultsPerSample_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RequiredResultsPerSample' from this record model
        """
        return self.get_field_value(self.REQUIREDRESULTSPERSAMPLE__FIELD_NAME.field_name)

    def set_RequiresConcentration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequiresConcentration' on this record model
        """
        self.set_field_value(self.REQUIRESCONCENTRATION__FIELD_NAME.field_name, value)

    def get_RequiresConcentration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequiresConcentration' from this record model
        """
        return self.get_field_value(self.REQUIRESCONCENTRATION__FIELD_NAME.field_name)

    def set_RequiresQC_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequiresQC' on this record model
        """
        self.set_field_value(self.REQUIRESQC__FIELD_NAME.field_name, value)

    def get_RequiresQC_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequiresQC' from this record model
        """
        return self.get_field_value(self.REQUIRESQC__FIELD_NAME.field_name)

    def set_RINMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'RINMAX' on this record model
        """
        self.set_field_value(self.RINMAX__FIELD_NAME.field_name, value)

    def get_RINMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RINMAX' from this record model
        """
        return self.get_field_value(self.RINMAX__FIELD_NAME.field_name)

    def set_RINMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'RINMIN' on this record model
        """
        self.set_field_value(self.RINMIN__FIELD_NAME.field_name, value)

    def get_RINMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RINMIN' from this record model
        """
        return self.get_field_value(self.RINMIN__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VolumeDeductedOnRun_field(self, value: Optional[float]):
        """
        Set data field with field name 'VolumeDeductedOnRun' on this record model
        """
        self.set_field_value(self.VOLUMEDEDUCTEDONRUN__FIELD_NAME.field_name, value)

    def get_VolumeDeductedOnRun_field(self) -> Optional[float]:
        """
        Get data field value with field name 'VolumeDeductedOnRun' from this record model
        """
        return self.get_field_value(self.VOLUMEDEDUCTEDONRUN__FIELD_NAME.field_name)


class QCDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QCDatum
    Data Type Display Name: Instrument Datum (Instrument Data)
    Fields: A230, A260, A280, A320, A260230, A260280, AlignedMigrationTime, Analyte, AnalyteQuantity, Area, Attachments, AverageConcentration, AvgSize, BaselineEnd, BaselineStart, CalculatedConcentration, CalculatedConcentrationMean, CalculatedMolarity, Color, ColPosition, Concentration, ConcentrationUnits, Cq, CqMean, CqStdDev, CreatedBy, Ct, CtMean, CtSD, CtThreshold, CV, DataRecordName, DateCreated, DateTime, DatumType, DetectionRange, DilutionFactor, EntryId, ExperimentRecordId, ExtinctionCoefficient, FACSPopCount, FACSPopulation, FACSSubPopulation, FileSourceDirectory, FracRetentionTime, FracTFAAreaPercentTotal, FracTFAIsFound, FractionSites, FromTime, GeneExpressed, GeneExpressionValue, GrossWeight, InstrumentDataStatus, InstrumentName, IonMode, MapToSample, Molarity, MolarityUnits, MsdSignal, NetWeight, NH3AreaPercentTotal, NH3IsFound, NH3RetentionTime, Observations, OtherSampleId, OverrideExplanation, OverrideUser, Pathlength, PeakValue, PercentOfTotal, PerRecoveryMean, PlateID, Position, ProbeCount, ProbeName, QCStatus, Quantity, QuantityMean, QuantitySD, Quencher, Ratio, RawDataValue, ReadA, ReadB, Reporter, Results, RIN, ROI, RowPosition, SampleFinalQCStatus, SampleId, SegmentName, SizeDistribution, SQMean, SQStdDev, StartingQuantitySQ, TableEntryName, TareWeight, TargetName, Task, TFAAreaPercentTotal, TFAIsFound, TFARetentionTime, TimeCorrectedArea, TotalConcentration, ToTime, TubeVolume, VeloxLastModifiedBy, VeloxLastModifiedDate, ViCellAspirateCycles, ViCellAvgBg, ViCellAvgCellsImg, ViCellAvgCirc, ViCellAvgDiam, ViCellComment, ViCellDateTime, ViCellFileName, ViCellImgs, ViCellMaxDiam, ViCellMinCir, ViCellMinDiam, ViCellTotalCells, ViCellTotalCellsMl, ViCellType, ViCellViability, ViCellViableCells, ViCellViableCellsMl, WellPosition
    """
    DATA_TYPE_NAME: str = 'QCDatum'
    A230__FIELD_NAME: WrapperField = WrapperField("A230", FieldType.DOUBLE)
    A260__FIELD_NAME: WrapperField = WrapperField("A260", FieldType.DOUBLE)
    A280__FIELD_NAME: WrapperField = WrapperField("A280", FieldType.DOUBLE)
    A320__FIELD_NAME: WrapperField = WrapperField("A320", FieldType.DOUBLE)
    A260230__FIELD_NAME: WrapperField = WrapperField("A260230", FieldType.DOUBLE)
    A260280__FIELD_NAME: WrapperField = WrapperField("A260280", FieldType.DOUBLE)
    ALIGNEDMIGRATIONTIME__FIELD_NAME: WrapperField = WrapperField("AlignedMigrationTime", FieldType.DOUBLE)
    ANALYTE__FIELD_NAME: WrapperField = WrapperField("Analyte", FieldType.STRING)
    ANALYTEQUANTITY__FIELD_NAME: WrapperField = WrapperField("AnalyteQuantity", FieldType.DOUBLE)
    AREA__FIELD_NAME: WrapperField = WrapperField("Area", FieldType.DOUBLE)
    ATTACHMENTS__FIELD_NAME: WrapperField = WrapperField("Attachments", FieldType.SELECTION)
    AVERAGECONCENTRATION__FIELD_NAME: WrapperField = WrapperField("AverageConcentration", FieldType.DOUBLE)
    AVGSIZE__FIELD_NAME: WrapperField = WrapperField("AvgSize", FieldType.DOUBLE)
    BASELINEEND__FIELD_NAME: WrapperField = WrapperField("BaselineEnd", FieldType.LONG)
    BASELINESTART__FIELD_NAME: WrapperField = WrapperField("BaselineStart", FieldType.LONG)
    CALCULATEDCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("CalculatedConcentration", FieldType.DOUBLE)
    CALCULATEDCONCENTRATIONMEAN__FIELD_NAME: WrapperField = WrapperField("CalculatedConcentrationMean", FieldType.DOUBLE)
    CALCULATEDMOLARITY__FIELD_NAME: WrapperField = WrapperField("CalculatedMolarity", FieldType.DOUBLE)
    COLOR__FIELD_NAME: WrapperField = WrapperField("Color", FieldType.LONG)
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.STRING)
    CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Concentration", FieldType.DOUBLE)
    CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("ConcentrationUnits", FieldType.STRING)
    CQ__FIELD_NAME: WrapperField = WrapperField("Cq", FieldType.DOUBLE)
    CQMEAN__FIELD_NAME: WrapperField = WrapperField("CqMean", FieldType.DOUBLE)
    CQSTDDEV__FIELD_NAME: WrapperField = WrapperField("CqStdDev", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CT__FIELD_NAME: WrapperField = WrapperField("Ct", FieldType.DOUBLE)
    CTMEAN__FIELD_NAME: WrapperField = WrapperField("CtMean", FieldType.DOUBLE)
    CTSD__FIELD_NAME: WrapperField = WrapperField("CtSD", FieldType.DOUBLE)
    CTTHRESHOLD__FIELD_NAME: WrapperField = WrapperField("CtThreshold", FieldType.DOUBLE)
    CV__FIELD_NAME: WrapperField = WrapperField("CV", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATETIME__FIELD_NAME: WrapperField = WrapperField("DateTime", FieldType.DATE)
    DATUMTYPE__FIELD_NAME: WrapperField = WrapperField("DatumType", FieldType.SELECTION)
    DETECTIONRANGE__FIELD_NAME: WrapperField = WrapperField("DetectionRange", FieldType.STRING)
    DILUTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("DilutionFactor", FieldType.DOUBLE)
    ENTRYID__FIELD_NAME: WrapperField = WrapperField("EntryId", FieldType.LONG)
    EXPERIMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("ExperimentRecordId", FieldType.LONG)
    EXTINCTIONCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("ExtinctionCoefficient", FieldType.DOUBLE)
    FACSPOPCOUNT__FIELD_NAME: WrapperField = WrapperField("FACSPopCount", FieldType.LONG)
    FACSPOPULATION__FIELD_NAME: WrapperField = WrapperField("FACSPopulation", FieldType.STRING)
    FACSSUBPOPULATION__FIELD_NAME: WrapperField = WrapperField("FACSSubPopulation", FieldType.STRING)
    FILESOURCEDIRECTORY__FIELD_NAME: WrapperField = WrapperField("FileSourceDirectory", FieldType.STRING)
    FRACRETENTIONTIME__FIELD_NAME: WrapperField = WrapperField("FracRetentionTime", FieldType.DOUBLE)
    FRACTFAAREAPERCENTTOTAL__FIELD_NAME: WrapperField = WrapperField("FracTFAAreaPercentTotal", FieldType.DOUBLE)
    FRACTFAISFOUND__FIELD_NAME: WrapperField = WrapperField("FracTFAIsFound", FieldType.BOOLEAN)
    FRACTIONSITES__FIELD_NAME: WrapperField = WrapperField("FractionSites", FieldType.STRING)
    FROMTIME__FIELD_NAME: WrapperField = WrapperField("FromTime", FieldType.INTEGER)
    GENEEXPRESSED__FIELD_NAME: WrapperField = WrapperField("GeneExpressed", FieldType.STRING)
    GENEEXPRESSIONVALUE__FIELD_NAME: WrapperField = WrapperField("GeneExpressionValue", FieldType.DOUBLE)
    GROSSWEIGHT__FIELD_NAME: WrapperField = WrapperField("GrossWeight", FieldType.DOUBLE)
    INSTRUMENTDATASTATUS__FIELD_NAME: WrapperField = WrapperField("InstrumentDataStatus", FieldType.PICKLIST)
    INSTRUMENTNAME__FIELD_NAME: WrapperField = WrapperField("InstrumentName", FieldType.STRING)
    IONMODE__FIELD_NAME: WrapperField = WrapperField("IonMode", FieldType.STRING)
    MAPTOSAMPLE__FIELD_NAME: WrapperField = WrapperField("MapToSample", FieldType.BOOLEAN)
    MOLARITY__FIELD_NAME: WrapperField = WrapperField("Molarity", FieldType.DOUBLE)
    MOLARITYUNITS__FIELD_NAME: WrapperField = WrapperField("MolarityUnits", FieldType.STRING)
    MSDSIGNAL__FIELD_NAME: WrapperField = WrapperField("MsdSignal", FieldType.INTEGER)
    NETWEIGHT__FIELD_NAME: WrapperField = WrapperField("NetWeight", FieldType.DOUBLE)
    NH3AREAPERCENTTOTAL__FIELD_NAME: WrapperField = WrapperField("NH3AreaPercentTotal", FieldType.DOUBLE)
    NH3ISFOUND__FIELD_NAME: WrapperField = WrapperField("NH3IsFound", FieldType.BOOLEAN)
    NH3RETENTIONTIME__FIELD_NAME: WrapperField = WrapperField("NH3RetentionTime", FieldType.DOUBLE)
    OBSERVATIONS__FIELD_NAME: WrapperField = WrapperField("Observations", FieldType.STRING)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    OVERRIDEEXPLANATION__FIELD_NAME: WrapperField = WrapperField("OverrideExplanation", FieldType.STRING)
    OVERRIDEUSER__FIELD_NAME: WrapperField = WrapperField("OverrideUser", FieldType.STRING)
    PATHLENGTH__FIELD_NAME: WrapperField = WrapperField("Pathlength", FieldType.DOUBLE)
    PEAKVALUE__FIELD_NAME: WrapperField = WrapperField("PeakValue", FieldType.DOUBLE)
    PERCENTOFTOTAL__FIELD_NAME: WrapperField = WrapperField("PercentOfTotal", FieldType.DOUBLE)
    PERRECOVERYMEAN__FIELD_NAME: WrapperField = WrapperField("PerRecoveryMean", FieldType.DOUBLE)
    PLATEID__FIELD_NAME: WrapperField = WrapperField("PlateID", FieldType.STRING)
    POSITION__FIELD_NAME: WrapperField = WrapperField("Position", FieldType.STRING)
    PROBECOUNT__FIELD_NAME: WrapperField = WrapperField("ProbeCount", FieldType.DOUBLE)
    PROBENAME__FIELD_NAME: WrapperField = WrapperField("ProbeName", FieldType.STRING)
    QCSTATUS__FIELD_NAME: WrapperField = WrapperField("QCStatus", FieldType.PICKLIST)
    QUANTITY__FIELD_NAME: WrapperField = WrapperField("Quantity", FieldType.DOUBLE)
    QUANTITYMEAN__FIELD_NAME: WrapperField = WrapperField("QuantityMean", FieldType.DOUBLE)
    QUANTITYSD__FIELD_NAME: WrapperField = WrapperField("QuantitySD", FieldType.DOUBLE)
    QUENCHER__FIELD_NAME: WrapperField = WrapperField("Quencher", FieldType.STRING)
    RATIO__FIELD_NAME: WrapperField = WrapperField("Ratio", FieldType.STRING)
    RAWDATAVALUE__FIELD_NAME: WrapperField = WrapperField("RawDataValue", FieldType.DOUBLE)
    READA__FIELD_NAME: WrapperField = WrapperField("ReadA", FieldType.STRING)
    READB__FIELD_NAME: WrapperField = WrapperField("ReadB", FieldType.STRING)
    REPORTER__FIELD_NAME: WrapperField = WrapperField("Reporter", FieldType.STRING)
    RESULTS__FIELD_NAME: WrapperField = WrapperField("Results", FieldType.STRING)
    RIN__FIELD_NAME: WrapperField = WrapperField("RIN", FieldType.DOUBLE)
    ROI__FIELD_NAME: WrapperField = WrapperField("ROI", FieldType.INTEGER)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.STRING)
    SAMPLEFINALQCSTATUS__FIELD_NAME: WrapperField = WrapperField("SampleFinalQCStatus", FieldType.PICKLIST)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SEGMENTNAME__FIELD_NAME: WrapperField = WrapperField("SegmentName", FieldType.STRING)
    SIZEDISTRIBUTION__FIELD_NAME: WrapperField = WrapperField("SizeDistribution", FieldType.DOUBLE)
    SQMEAN__FIELD_NAME: WrapperField = WrapperField("SQMean", FieldType.DOUBLE)
    SQSTDDEV__FIELD_NAME: WrapperField = WrapperField("SQStdDev", FieldType.DOUBLE)
    STARTINGQUANTITYSQ__FIELD_NAME: WrapperField = WrapperField("StartingQuantitySQ", FieldType.DOUBLE)
    TABLEENTRYNAME__FIELD_NAME: WrapperField = WrapperField("TableEntryName", FieldType.STRING)
    TAREWEIGHT__FIELD_NAME: WrapperField = WrapperField("TareWeight", FieldType.DOUBLE)
    TARGETNAME__FIELD_NAME: WrapperField = WrapperField("TargetName", FieldType.STRING)
    TASK__FIELD_NAME: WrapperField = WrapperField("Task", FieldType.STRING)
    TFAAREAPERCENTTOTAL__FIELD_NAME: WrapperField = WrapperField("TFAAreaPercentTotal", FieldType.DOUBLE)
    TFAISFOUND__FIELD_NAME: WrapperField = WrapperField("TFAIsFound", FieldType.BOOLEAN)
    TFARETENTIONTIME__FIELD_NAME: WrapperField = WrapperField("TFARetentionTime", FieldType.DOUBLE)
    TIMECORRECTEDAREA__FIELD_NAME: WrapperField = WrapperField("TimeCorrectedArea", FieldType.DOUBLE)
    TOTALCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("TotalConcentration", FieldType.DOUBLE)
    TOTIME__FIELD_NAME: WrapperField = WrapperField("ToTime", FieldType.INTEGER)
    TUBEVOLUME__FIELD_NAME: WrapperField = WrapperField("TubeVolume", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VICELLASPIRATECYCLES__FIELD_NAME: WrapperField = WrapperField("ViCellAspirateCycles", FieldType.DOUBLE)
    VICELLAVGBG__FIELD_NAME: WrapperField = WrapperField("ViCellAvgBg", FieldType.DOUBLE)
    VICELLAVGCELLSIMG__FIELD_NAME: WrapperField = WrapperField("ViCellAvgCellsImg", FieldType.DOUBLE)
    VICELLAVGCIRC__FIELD_NAME: WrapperField = WrapperField("ViCellAvgCirc", FieldType.DOUBLE)
    VICELLAVGDIAM__FIELD_NAME: WrapperField = WrapperField("ViCellAvgDiam", FieldType.DOUBLE)
    VICELLCOMMENT__FIELD_NAME: WrapperField = WrapperField("ViCellComment", FieldType.STRING)
    VICELLDATETIME__FIELD_NAME: WrapperField = WrapperField("ViCellDateTime", FieldType.DATE)
    VICELLFILENAME__FIELD_NAME: WrapperField = WrapperField("ViCellFileName", FieldType.STRING)
    VICELLIMGS__FIELD_NAME: WrapperField = WrapperField("ViCellImgs", FieldType.DOUBLE)
    VICELLMAXDIAM__FIELD_NAME: WrapperField = WrapperField("ViCellMaxDiam", FieldType.DOUBLE)
    VICELLMINCIR__FIELD_NAME: WrapperField = WrapperField("ViCellMinCir", FieldType.DOUBLE)
    VICELLMINDIAM__FIELD_NAME: WrapperField = WrapperField("ViCellMinDiam", FieldType.DOUBLE)
    VICELLTOTALCELLS__FIELD_NAME: WrapperField = WrapperField("ViCellTotalCells", FieldType.DOUBLE)
    VICELLTOTALCELLSML__FIELD_NAME: WrapperField = WrapperField("ViCellTotalCellsMl", FieldType.DOUBLE)
    VICELLTYPE__FIELD_NAME: WrapperField = WrapperField("ViCellType", FieldType.STRING)
    VICELLVIABILITY__FIELD_NAME: WrapperField = WrapperField("ViCellViability", FieldType.DOUBLE)
    VICELLVIABLECELLS__FIELD_NAME: WrapperField = WrapperField("ViCellViableCells", FieldType.DOUBLE)
    VICELLVIABLECELLSML__FIELD_NAME: WrapperField = WrapperField("ViCellViableCellsMl", FieldType.DOUBLE)
    WELLPOSITION__FIELD_NAME: WrapperField = WrapperField("WellPosition", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A230' on this record model
        """
        self.set_field_value(self.A230__FIELD_NAME.field_name, value)

    def get_A230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A230' from this record model
        """
        return self.get_field_value(self.A230__FIELD_NAME.field_name)

    def set_A260_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260' on this record model
        """
        self.set_field_value(self.A260__FIELD_NAME.field_name, value)

    def get_A260_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260' from this record model
        """
        return self.get_field_value(self.A260__FIELD_NAME.field_name)

    def set_A280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280' on this record model
        """
        self.set_field_value(self.A280__FIELD_NAME.field_name, value)

    def get_A280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280' from this record model
        """
        return self.get_field_value(self.A280__FIELD_NAME.field_name)

    def set_A320_field(self, value: Optional[float]):
        """
        Set data field with field name 'A320' on this record model
        """
        self.set_field_value(self.A320__FIELD_NAME.field_name, value)

    def get_A320_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A320' from this record model
        """
        return self.get_field_value(self.A320__FIELD_NAME.field_name)

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def set_AlignedMigrationTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlignedMigrationTime' on this record model
        """
        self.set_field_value(self.ALIGNEDMIGRATIONTIME__FIELD_NAME.field_name, value)

    def get_AlignedMigrationTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlignedMigrationTime' from this record model
        """
        return self.get_field_value(self.ALIGNEDMIGRATIONTIME__FIELD_NAME.field_name)

    def set_Analyte_field(self, value: Optional[str]):
        """
        Set data field with field name 'Analyte' on this record model
        """
        self.set_field_value(self.ANALYTE__FIELD_NAME.field_name, value)

    def get_Analyte_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Analyte' from this record model
        """
        return self.get_field_value(self.ANALYTE__FIELD_NAME.field_name)

    def set_AnalyteQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'AnalyteQuantity' on this record model
        """
        self.set_field_value(self.ANALYTEQUANTITY__FIELD_NAME.field_name, value)

    def get_AnalyteQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AnalyteQuantity' from this record model
        """
        return self.get_field_value(self.ANALYTEQUANTITY__FIELD_NAME.field_name)

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_Attachments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Attachments' on this record model
        """
        self.set_field_value(self.ATTACHMENTS__FIELD_NAME.field_name, value)

    def get_Attachments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Attachments' from this record model
        """
        return self.get_field_value(self.ATTACHMENTS__FIELD_NAME.field_name)

    def set_AverageConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'AverageConcentration' on this record model
        """
        self.set_field_value(self.AVERAGECONCENTRATION__FIELD_NAME.field_name, value)

    def get_AverageConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AverageConcentration' from this record model
        """
        return self.get_field_value(self.AVERAGECONCENTRATION__FIELD_NAME.field_name)

    def set_AvgSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgSize' on this record model
        """
        self.set_field_value(self.AVGSIZE__FIELD_NAME.field_name, value)

    def get_AvgSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgSize' from this record model
        """
        return self.get_field_value(self.AVGSIZE__FIELD_NAME.field_name)

    def set_BaselineEnd_field(self, value: Optional[int]):
        """
        Set data field with field name 'BaselineEnd' on this record model
        """
        self.set_field_value(self.BASELINEEND__FIELD_NAME.field_name, value)

    def get_BaselineEnd_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BaselineEnd' from this record model
        """
        return self.get_field_value(self.BASELINEEND__FIELD_NAME.field_name)

    def set_BaselineStart_field(self, value: Optional[int]):
        """
        Set data field with field name 'BaselineStart' on this record model
        """
        self.set_field_value(self.BASELINESTART__FIELD_NAME.field_name, value)

    def get_BaselineStart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BaselineStart' from this record model
        """
        return self.get_field_value(self.BASELINESTART__FIELD_NAME.field_name)

    def set_CalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentration' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def set_CalculatedConcentrationMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentrationMean' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATIONMEAN__FIELD_NAME.field_name, value)

    def get_CalculatedConcentrationMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentrationMean' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATIONMEAN__FIELD_NAME.field_name)

    def set_CalculatedMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedMolarity' on this record model
        """
        self.set_field_value(self.CALCULATEDMOLARITY__FIELD_NAME.field_name, value)

    def get_CalculatedMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedMolarity' from this record model
        """
        return self.get_field_value(self.CALCULATEDMOLARITY__FIELD_NAME.field_name)

    def set_Color_field(self, value: Optional[int]):
        """
        Set data field with field name 'Color' on this record model
        """
        self.set_field_value(self.COLOR__FIELD_NAME.field_name, value)

    def get_Color_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Color' from this record model
        """
        return self.get_field_value(self.COLOR__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Cq' on this record model
        """
        self.set_field_value(self.CQ__FIELD_NAME.field_name, value)

    def get_Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Cq' from this record model
        """
        return self.get_field_value(self.CQ__FIELD_NAME.field_name)

    def set_CqMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqMean' on this record model
        """
        self.set_field_value(self.CQMEAN__FIELD_NAME.field_name, value)

    def get_CqMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqMean' from this record model
        """
        return self.get_field_value(self.CQMEAN__FIELD_NAME.field_name)

    def set_CqStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqStdDev' on this record model
        """
        self.set_field_value(self.CQSTDDEV__FIELD_NAME.field_name, value)

    def get_CqStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqStdDev' from this record model
        """
        return self.get_field_value(self.CQSTDDEV__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_Ct_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ct' on this record model
        """
        self.set_field_value(self.CT__FIELD_NAME.field_name, value)

    def get_Ct_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ct' from this record model
        """
        return self.get_field_value(self.CT__FIELD_NAME.field_name)

    def set_CtMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMean' on this record model
        """
        self.set_field_value(self.CTMEAN__FIELD_NAME.field_name, value)

    def get_CtMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMean' from this record model
        """
        return self.get_field_value(self.CTMEAN__FIELD_NAME.field_name)

    def set_CtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSD' on this record model
        """
        self.set_field_value(self.CTSD__FIELD_NAME.field_name, value)

    def get_CtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSD' from this record model
        """
        return self.get_field_value(self.CTSD__FIELD_NAME.field_name)

    def set_CtThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtThreshold' on this record model
        """
        self.set_field_value(self.CTTHRESHOLD__FIELD_NAME.field_name, value)

    def get_CtThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtThreshold' from this record model
        """
        return self.get_field_value(self.CTTHRESHOLD__FIELD_NAME.field_name)

    def set_CV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CV' on this record model
        """
        self.set_field_value(self.CV__FIELD_NAME.field_name, value)

    def get_CV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CV' from this record model
        """
        return self.get_field_value(self.CV__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateTime' on this record model
        """
        self.set_field_value(self.DATETIME__FIELD_NAME.field_name, value)

    def get_DateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateTime' from this record model
        """
        return self.get_field_value(self.DATETIME__FIELD_NAME.field_name)

    def set_DatumType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DatumType' on this record model
        """
        self.set_field_value(self.DATUMTYPE__FIELD_NAME.field_name, value)

    def get_DatumType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DatumType' from this record model
        """
        return self.get_field_value(self.DATUMTYPE__FIELD_NAME.field_name)

    def set_DetectionRange_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionRange' on this record model
        """
        self.set_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name, value)

    def get_DetectionRange_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionRange' from this record model
        """
        return self.get_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_EntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'EntryId' on this record model
        """
        self.set_field_value(self.ENTRYID__FIELD_NAME.field_name, value)

    def get_EntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EntryId' from this record model
        """
        return self.get_field_value(self.ENTRYID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_FACSPopCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'FACSPopCount' on this record model
        """
        self.set_field_value(self.FACSPOPCOUNT__FIELD_NAME.field_name, value)

    def get_FACSPopCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FACSPopCount' from this record model
        """
        return self.get_field_value(self.FACSPOPCOUNT__FIELD_NAME.field_name)

    def set_FACSPopulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'FACSPopulation' on this record model
        """
        self.set_field_value(self.FACSPOPULATION__FIELD_NAME.field_name, value)

    def get_FACSPopulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FACSPopulation' from this record model
        """
        return self.get_field_value(self.FACSPOPULATION__FIELD_NAME.field_name)

    def set_FACSSubPopulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'FACSSubPopulation' on this record model
        """
        self.set_field_value(self.FACSSUBPOPULATION__FIELD_NAME.field_name, value)

    def get_FACSSubPopulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FACSSubPopulation' from this record model
        """
        return self.get_field_value(self.FACSSUBPOPULATION__FIELD_NAME.field_name)

    def set_FileSourceDirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileSourceDirectory' on this record model
        """
        self.set_field_value(self.FILESOURCEDIRECTORY__FIELD_NAME.field_name, value)

    def get_FileSourceDirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileSourceDirectory' from this record model
        """
        return self.get_field_value(self.FILESOURCEDIRECTORY__FIELD_NAME.field_name)

    def set_FracRetentionTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'FracRetentionTime' on this record model
        """
        self.set_field_value(self.FRACRETENTIONTIME__FIELD_NAME.field_name, value)

    def get_FracRetentionTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FracRetentionTime' from this record model
        """
        return self.get_field_value(self.FRACRETENTIONTIME__FIELD_NAME.field_name)

    def set_FracTFAAreaPercentTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'FracTFAAreaPercentTotal' on this record model
        """
        self.set_field_value(self.FRACTFAAREAPERCENTTOTAL__FIELD_NAME.field_name, value)

    def get_FracTFAAreaPercentTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FracTFAAreaPercentTotal' from this record model
        """
        return self.get_field_value(self.FRACTFAAREAPERCENTTOTAL__FIELD_NAME.field_name)

    def set_FracTFAIsFound_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FracTFAIsFound' on this record model
        """
        self.set_field_value(self.FRACTFAISFOUND__FIELD_NAME.field_name, value)

    def get_FracTFAIsFound_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FracTFAIsFound' from this record model
        """
        return self.get_field_value(self.FRACTFAISFOUND__FIELD_NAME.field_name)

    def set_FractionSites_field(self, value: Optional[str]):
        """
        Set data field with field name 'FractionSites' on this record model
        """
        self.set_field_value(self.FRACTIONSITES__FIELD_NAME.field_name, value)

    def get_FractionSites_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FractionSites' from this record model
        """
        return self.get_field_value(self.FRACTIONSITES__FIELD_NAME.field_name)

    def set_FromTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'FromTime' on this record model
        """
        self.set_field_value(self.FROMTIME__FIELD_NAME.field_name, value)

    def get_FromTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FromTime' from this record model
        """
        return self.get_field_value(self.FROMTIME__FIELD_NAME.field_name)

    def set_GeneExpressed_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneExpressed' on this record model
        """
        self.set_field_value(self.GENEEXPRESSED__FIELD_NAME.field_name, value)

    def get_GeneExpressed_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneExpressed' from this record model
        """
        return self.get_field_value(self.GENEEXPRESSED__FIELD_NAME.field_name)

    def set_GeneExpressionValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'GeneExpressionValue' on this record model
        """
        self.set_field_value(self.GENEEXPRESSIONVALUE__FIELD_NAME.field_name, value)

    def get_GeneExpressionValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GeneExpressionValue' from this record model
        """
        return self.get_field_value(self.GENEEXPRESSIONVALUE__FIELD_NAME.field_name)

    def set_GrossWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'GrossWeight' on this record model
        """
        self.set_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name, value)

    def get_GrossWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GrossWeight' from this record model
        """
        return self.get_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name)

    def set_InstrumentDataStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentDataStatus' on this record model
        """
        self.set_field_value(self.INSTRUMENTDATASTATUS__FIELD_NAME.field_name, value)

    def get_InstrumentDataStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentDataStatus' from this record model
        """
        return self.get_field_value(self.INSTRUMENTDATASTATUS__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_IonMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'IonMode' on this record model
        """
        self.set_field_value(self.IONMODE__FIELD_NAME.field_name, value)

    def get_IonMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IonMode' from this record model
        """
        return self.get_field_value(self.IONMODE__FIELD_NAME.field_name)

    def set_MapToSample_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MapToSample' on this record model
        """
        self.set_field_value(self.MAPTOSAMPLE__FIELD_NAME.field_name, value)

    def get_MapToSample_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MapToSample' from this record model
        """
        return self.get_field_value(self.MAPTOSAMPLE__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_MsdSignal_field(self, value: Optional[int]):
        """
        Set data field with field name 'MsdSignal' on this record model
        """
        self.set_field_value(self.MSDSIGNAL__FIELD_NAME.field_name, value)

    def get_MsdSignal_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MsdSignal' from this record model
        """
        return self.get_field_value(self.MSDSIGNAL__FIELD_NAME.field_name)

    def set_NetWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'NetWeight' on this record model
        """
        self.set_field_value(self.NETWEIGHT__FIELD_NAME.field_name, value)

    def get_NetWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NetWeight' from this record model
        """
        return self.get_field_value(self.NETWEIGHT__FIELD_NAME.field_name)

    def set_NH3AreaPercentTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'NH3AreaPercentTotal' on this record model
        """
        self.set_field_value(self.NH3AREAPERCENTTOTAL__FIELD_NAME.field_name, value)

    def get_NH3AreaPercentTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NH3AreaPercentTotal' from this record model
        """
        return self.get_field_value(self.NH3AREAPERCENTTOTAL__FIELD_NAME.field_name)

    def set_NH3IsFound_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NH3IsFound' on this record model
        """
        self.set_field_value(self.NH3ISFOUND__FIELD_NAME.field_name, value)

    def get_NH3IsFound_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NH3IsFound' from this record model
        """
        return self.get_field_value(self.NH3ISFOUND__FIELD_NAME.field_name)

    def set_NH3RetentionTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'NH3RetentionTime' on this record model
        """
        self.set_field_value(self.NH3RETENTIONTIME__FIELD_NAME.field_name, value)

    def get_NH3RetentionTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NH3RetentionTime' from this record model
        """
        return self.get_field_value(self.NH3RETENTIONTIME__FIELD_NAME.field_name)

    def set_Observations_field(self, value: Optional[str]):
        """
        Set data field with field name 'Observations' on this record model
        """
        self.set_field_value(self.OBSERVATIONS__FIELD_NAME.field_name, value)

    def get_Observations_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Observations' from this record model
        """
        return self.get_field_value(self.OBSERVATIONS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_OverrideExplanation_field(self, value: Optional[str]):
        """
        Set data field with field name 'OverrideExplanation' on this record model
        """
        self.set_field_value(self.OVERRIDEEXPLANATION__FIELD_NAME.field_name, value)

    def get_OverrideExplanation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OverrideExplanation' from this record model
        """
        return self.get_field_value(self.OVERRIDEEXPLANATION__FIELD_NAME.field_name)

    def set_OverrideUser_field(self, value: Optional[str]):
        """
        Set data field with field name 'OverrideUser' on this record model
        """
        self.set_field_value(self.OVERRIDEUSER__FIELD_NAME.field_name, value)

    def get_OverrideUser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OverrideUser' from this record model
        """
        return self.get_field_value(self.OVERRIDEUSER__FIELD_NAME.field_name)

    def set_Pathlength_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pathlength' on this record model
        """
        self.set_field_value(self.PATHLENGTH__FIELD_NAME.field_name, value)

    def get_Pathlength_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pathlength' from this record model
        """
        return self.get_field_value(self.PATHLENGTH__FIELD_NAME.field_name)

    def set_PeakValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValue' on this record model
        """
        self.set_field_value(self.PEAKVALUE__FIELD_NAME.field_name, value)

    def get_PeakValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValue' from this record model
        """
        return self.get_field_value(self.PEAKVALUE__FIELD_NAME.field_name)

    def set_PercentOfTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentOfTotal' on this record model
        """
        self.set_field_value(self.PERCENTOFTOTAL__FIELD_NAME.field_name, value)

    def get_PercentOfTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentOfTotal' from this record model
        """
        return self.get_field_value(self.PERCENTOFTOTAL__FIELD_NAME.field_name)

    def set_PerRecoveryMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'PerRecoveryMean' on this record model
        """
        self.set_field_value(self.PERRECOVERYMEAN__FIELD_NAME.field_name, value)

    def get_PerRecoveryMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PerRecoveryMean' from this record model
        """
        return self.get_field_value(self.PERRECOVERYMEAN__FIELD_NAME.field_name)

    def set_PlateID_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateID' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateID' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_Position_field(self, value: Optional[str]):
        """
        Set data field with field name 'Position' on this record model
        """
        self.set_field_value(self.POSITION__FIELD_NAME.field_name, value)

    def get_Position_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Position' from this record model
        """
        return self.get_field_value(self.POSITION__FIELD_NAME.field_name)

    def set_ProbeCount_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProbeCount' on this record model
        """
        self.set_field_value(self.PROBECOUNT__FIELD_NAME.field_name, value)

    def get_ProbeCount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProbeCount' from this record model
        """
        return self.get_field_value(self.PROBECOUNT__FIELD_NAME.field_name)

    def set_ProbeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProbeName' on this record model
        """
        self.set_field_value(self.PROBENAME__FIELD_NAME.field_name, value)

    def get_ProbeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProbeName' from this record model
        """
        return self.get_field_value(self.PROBENAME__FIELD_NAME.field_name)

    def set_QCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCStatus' on this record model
        """
        self.set_field_value(self.QCSTATUS__FIELD_NAME.field_name, value)

    def get_QCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCStatus' from this record model
        """
        return self.get_field_value(self.QCSTATUS__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def set_QuantityMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMean' on this record model
        """
        self.set_field_value(self.QUANTITYMEAN__FIELD_NAME.field_name, value)

    def get_QuantityMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMean' from this record model
        """
        return self.get_field_value(self.QUANTITYMEAN__FIELD_NAME.field_name)

    def set_QuantitySD_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantitySD' on this record model
        """
        self.set_field_value(self.QUANTITYSD__FIELD_NAME.field_name, value)

    def get_QuantitySD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantitySD' from this record model
        """
        return self.get_field_value(self.QUANTITYSD__FIELD_NAME.field_name)

    def set_Quencher_field(self, value: Optional[str]):
        """
        Set data field with field name 'Quencher' on this record model
        """
        self.set_field_value(self.QUENCHER__FIELD_NAME.field_name, value)

    def get_Quencher_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Quencher' from this record model
        """
        return self.get_field_value(self.QUENCHER__FIELD_NAME.field_name)

    def set_Ratio_field(self, value: Optional[str]):
        """
        Set data field with field name 'Ratio' on this record model
        """
        self.set_field_value(self.RATIO__FIELD_NAME.field_name, value)

    def get_Ratio_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Ratio' from this record model
        """
        return self.get_field_value(self.RATIO__FIELD_NAME.field_name)

    def set_RawDataValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'RawDataValue' on this record model
        """
        self.set_field_value(self.RAWDATAVALUE__FIELD_NAME.field_name, value)

    def get_RawDataValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RawDataValue' from this record model
        """
        return self.get_field_value(self.RAWDATAVALUE__FIELD_NAME.field_name)

    def set_ReadA_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadA' on this record model
        """
        self.set_field_value(self.READA__FIELD_NAME.field_name, value)

    def get_ReadA_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadA' from this record model
        """
        return self.get_field_value(self.READA__FIELD_NAME.field_name)

    def set_ReadB_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadB' on this record model
        """
        self.set_field_value(self.READB__FIELD_NAME.field_name, value)

    def get_ReadB_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadB' from this record model
        """
        return self.get_field_value(self.READB__FIELD_NAME.field_name)

    def set_Reporter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Reporter' on this record model
        """
        self.set_field_value(self.REPORTER__FIELD_NAME.field_name, value)

    def get_Reporter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Reporter' from this record model
        """
        return self.get_field_value(self.REPORTER__FIELD_NAME.field_name)

    def set_Results_field(self, value: Optional[str]):
        """
        Set data field with field name 'Results' on this record model
        """
        self.set_field_value(self.RESULTS__FIELD_NAME.field_name, value)

    def get_Results_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Results' from this record model
        """
        return self.get_field_value(self.RESULTS__FIELD_NAME.field_name)

    def set_RIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'RIN' on this record model
        """
        self.set_field_value(self.RIN__FIELD_NAME.field_name, value)

    def get_RIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RIN' from this record model
        """
        return self.get_field_value(self.RIN__FIELD_NAME.field_name)

    def set_ROI_field(self, value: Optional[int]):
        """
        Set data field with field name 'ROI' on this record model
        """
        self.set_field_value(self.ROI__FIELD_NAME.field_name, value)

    def get_ROI_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ROI' from this record model
        """
        return self.get_field_value(self.ROI__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleFinalQCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleFinalQCStatus' on this record model
        """
        self.set_field_value(self.SAMPLEFINALQCSTATUS__FIELD_NAME.field_name, value)

    def get_SampleFinalQCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleFinalQCStatus' from this record model
        """
        return self.get_field_value(self.SAMPLEFINALQCSTATUS__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SegmentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SegmentName' on this record model
        """
        self.set_field_value(self.SEGMENTNAME__FIELD_NAME.field_name, value)

    def get_SegmentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SegmentName' from this record model
        """
        return self.get_field_value(self.SEGMENTNAME__FIELD_NAME.field_name)

    def set_SizeDistribution_field(self, value: Optional[float]):
        """
        Set data field with field name 'SizeDistribution' on this record model
        """
        self.set_field_value(self.SIZEDISTRIBUTION__FIELD_NAME.field_name, value)

    def get_SizeDistribution_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SizeDistribution' from this record model
        """
        return self.get_field_value(self.SIZEDISTRIBUTION__FIELD_NAME.field_name)

    def set_SQMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQMean' on this record model
        """
        self.set_field_value(self.SQMEAN__FIELD_NAME.field_name, value)

    def get_SQMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQMean' from this record model
        """
        return self.get_field_value(self.SQMEAN__FIELD_NAME.field_name)

    def set_SQStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQStdDev' on this record model
        """
        self.set_field_value(self.SQSTDDEV__FIELD_NAME.field_name, value)

    def get_SQStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQStdDev' from this record model
        """
        return self.get_field_value(self.SQSTDDEV__FIELD_NAME.field_name)

    def set_StartingQuantitySQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'StartingQuantitySQ' on this record model
        """
        self.set_field_value(self.STARTINGQUANTITYSQ__FIELD_NAME.field_name, value)

    def get_StartingQuantitySQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StartingQuantitySQ' from this record model
        """
        return self.get_field_value(self.STARTINGQUANTITYSQ__FIELD_NAME.field_name)

    def set_TableEntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TableEntryName' on this record model
        """
        self.set_field_value(self.TABLEENTRYNAME__FIELD_NAME.field_name, value)

    def get_TableEntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TableEntryName' from this record model
        """
        return self.get_field_value(self.TABLEENTRYNAME__FIELD_NAME.field_name)

    def set_TareWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'TareWeight' on this record model
        """
        self.set_field_value(self.TAREWEIGHT__FIELD_NAME.field_name, value)

    def get_TareWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TareWeight' from this record model
        """
        return self.get_field_value(self.TAREWEIGHT__FIELD_NAME.field_name)

    def set_TargetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetName' on this record model
        """
        self.set_field_value(self.TARGETNAME__FIELD_NAME.field_name, value)

    def get_TargetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetName' from this record model
        """
        return self.get_field_value(self.TARGETNAME__FIELD_NAME.field_name)

    def set_Task_field(self, value: Optional[str]):
        """
        Set data field with field name 'Task' on this record model
        """
        self.set_field_value(self.TASK__FIELD_NAME.field_name, value)

    def get_Task_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Task' from this record model
        """
        return self.get_field_value(self.TASK__FIELD_NAME.field_name)

    def set_TFAAreaPercentTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'TFAAreaPercentTotal' on this record model
        """
        self.set_field_value(self.TFAAREAPERCENTTOTAL__FIELD_NAME.field_name, value)

    def get_TFAAreaPercentTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TFAAreaPercentTotal' from this record model
        """
        return self.get_field_value(self.TFAAREAPERCENTTOTAL__FIELD_NAME.field_name)

    def set_TFAIsFound_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TFAIsFound' on this record model
        """
        self.set_field_value(self.TFAISFOUND__FIELD_NAME.field_name, value)

    def get_TFAIsFound_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TFAIsFound' from this record model
        """
        return self.get_field_value(self.TFAISFOUND__FIELD_NAME.field_name)

    def set_TFARetentionTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'TFARetentionTime' on this record model
        """
        self.set_field_value(self.TFARETENTIONTIME__FIELD_NAME.field_name, value)

    def get_TFARetentionTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TFARetentionTime' from this record model
        """
        return self.get_field_value(self.TFARETENTIONTIME__FIELD_NAME.field_name)

    def set_TimeCorrectedArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'TimeCorrectedArea' on this record model
        """
        self.set_field_value(self.TIMECORRECTEDAREA__FIELD_NAME.field_name, value)

    def get_TimeCorrectedArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TimeCorrectedArea' from this record model
        """
        return self.get_field_value(self.TIMECORRECTEDAREA__FIELD_NAME.field_name)

    def set_TotalConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalConcentration' on this record model
        """
        self.set_field_value(self.TOTALCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TotalConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalConcentration' from this record model
        """
        return self.get_field_value(self.TOTALCONCENTRATION__FIELD_NAME.field_name)

    def set_ToTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ToTime' on this record model
        """
        self.set_field_value(self.TOTIME__FIELD_NAME.field_name, value)

    def get_ToTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ToTime' from this record model
        """
        return self.get_field_value(self.TOTIME__FIELD_NAME.field_name)

    def set_TubeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TubeVolume' on this record model
        """
        self.set_field_value(self.TUBEVOLUME__FIELD_NAME.field_name, value)

    def get_TubeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TubeVolume' from this record model
        """
        return self.get_field_value(self.TUBEVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ViCellAspirateCycles_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAspirateCycles' on this record model
        """
        self.set_field_value(self.VICELLASPIRATECYCLES__FIELD_NAME.field_name, value)

    def get_ViCellAspirateCycles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAspirateCycles' from this record model
        """
        return self.get_field_value(self.VICELLASPIRATECYCLES__FIELD_NAME.field_name)

    def set_ViCellAvgBg_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgBg' on this record model
        """
        self.set_field_value(self.VICELLAVGBG__FIELD_NAME.field_name, value)

    def get_ViCellAvgBg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgBg' from this record model
        """
        return self.get_field_value(self.VICELLAVGBG__FIELD_NAME.field_name)

    def set_ViCellAvgCellsImg_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgCellsImg' on this record model
        """
        self.set_field_value(self.VICELLAVGCELLSIMG__FIELD_NAME.field_name, value)

    def get_ViCellAvgCellsImg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgCellsImg' from this record model
        """
        return self.get_field_value(self.VICELLAVGCELLSIMG__FIELD_NAME.field_name)

    def set_ViCellAvgCirc_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgCirc' on this record model
        """
        self.set_field_value(self.VICELLAVGCIRC__FIELD_NAME.field_name, value)

    def get_ViCellAvgCirc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgCirc' from this record model
        """
        return self.get_field_value(self.VICELLAVGCIRC__FIELD_NAME.field_name)

    def set_ViCellAvgDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgDiam' on this record model
        """
        self.set_field_value(self.VICELLAVGDIAM__FIELD_NAME.field_name, value)

    def get_ViCellAvgDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgDiam' from this record model
        """
        return self.get_field_value(self.VICELLAVGDIAM__FIELD_NAME.field_name)

    def set_ViCellComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellComment' on this record model
        """
        self.set_field_value(self.VICELLCOMMENT__FIELD_NAME.field_name, value)

    def get_ViCellComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellComment' from this record model
        """
        return self.get_field_value(self.VICELLCOMMENT__FIELD_NAME.field_name)

    def set_ViCellDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellDateTime' on this record model
        """
        self.set_field_value(self.VICELLDATETIME__FIELD_NAME.field_name, value)

    def get_ViCellDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellDateTime' from this record model
        """
        return self.get_field_value(self.VICELLDATETIME__FIELD_NAME.field_name)

    def set_ViCellFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellFileName' on this record model
        """
        self.set_field_value(self.VICELLFILENAME__FIELD_NAME.field_name, value)

    def get_ViCellFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellFileName' from this record model
        """
        return self.get_field_value(self.VICELLFILENAME__FIELD_NAME.field_name)

    def set_ViCellImgs_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellImgs' on this record model
        """
        self.set_field_value(self.VICELLIMGS__FIELD_NAME.field_name, value)

    def get_ViCellImgs_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellImgs' from this record model
        """
        return self.get_field_value(self.VICELLIMGS__FIELD_NAME.field_name)

    def set_ViCellMaxDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellMaxDiam' on this record model
        """
        self.set_field_value(self.VICELLMAXDIAM__FIELD_NAME.field_name, value)

    def get_ViCellMaxDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellMaxDiam' from this record model
        """
        return self.get_field_value(self.VICELLMAXDIAM__FIELD_NAME.field_name)

    def set_ViCellMinCir_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellMinCir' on this record model
        """
        self.set_field_value(self.VICELLMINCIR__FIELD_NAME.field_name, value)

    def get_ViCellMinCir_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellMinCir' from this record model
        """
        return self.get_field_value(self.VICELLMINCIR__FIELD_NAME.field_name)

    def set_ViCellMinDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellMinDiam' on this record model
        """
        self.set_field_value(self.VICELLMINDIAM__FIELD_NAME.field_name, value)

    def get_ViCellMinDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellMinDiam' from this record model
        """
        return self.get_field_value(self.VICELLMINDIAM__FIELD_NAME.field_name)

    def set_ViCellTotalCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellTotalCells' on this record model
        """
        self.set_field_value(self.VICELLTOTALCELLS__FIELD_NAME.field_name, value)

    def get_ViCellTotalCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellTotalCells' from this record model
        """
        return self.get_field_value(self.VICELLTOTALCELLS__FIELD_NAME.field_name)

    def set_ViCellTotalCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellTotalCellsMl' on this record model
        """
        self.set_field_value(self.VICELLTOTALCELLSML__FIELD_NAME.field_name, value)

    def get_ViCellTotalCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellTotalCellsMl' from this record model
        """
        return self.get_field_value(self.VICELLTOTALCELLSML__FIELD_NAME.field_name)

    def set_ViCellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellType' on this record model
        """
        self.set_field_value(self.VICELLTYPE__FIELD_NAME.field_name, value)

    def get_ViCellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellType' from this record model
        """
        return self.get_field_value(self.VICELLTYPE__FIELD_NAME.field_name)

    def set_ViCellViability_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellViability' on this record model
        """
        self.set_field_value(self.VICELLVIABILITY__FIELD_NAME.field_name, value)

    def get_ViCellViability_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellViability' from this record model
        """
        return self.get_field_value(self.VICELLVIABILITY__FIELD_NAME.field_name)

    def set_ViCellViableCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellViableCells' on this record model
        """
        self.set_field_value(self.VICELLVIABLECELLS__FIELD_NAME.field_name, value)

    def get_ViCellViableCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellViableCells' from this record model
        """
        return self.get_field_value(self.VICELLVIABLECELLS__FIELD_NAME.field_name)

    def set_ViCellViableCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellViableCellsMl' on this record model
        """
        self.set_field_value(self.VICELLVIABLECELLSML__FIELD_NAME.field_name, value)

    def get_ViCellViableCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellViableCellsMl' from this record model
        """
        return self.get_field_value(self.VICELLVIABLECELLSML__FIELD_NAME.field_name)

    def set_WellPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellPosition' on this record model
        """
        self.set_field_value(self.WELLPOSITION__FIELD_NAME.field_name, value)

    def get_WellPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellPosition' from this record model
        """
        return self.get_field_value(self.WELLPOSITION__FIELD_NAME.field_name)


class QScoreDistributionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QScoreDistribution
    Data Type Display Name: Q Score Distribution (Q Score Distributions)
    Fields: ColRead, CreatedBy, DataRecordName, DateCreated, Lane, LaneCol, PercentGreatQThirty, PercentGreatQTwenty, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: str = 'QScoreDistribution'
    COLREAD__FIELD_NAME: WrapperField = WrapperField("ColRead", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LANE__FIELD_NAME: WrapperField = WrapperField("Lane", FieldType.LONG)
    LANECOL__FIELD_NAME: WrapperField = WrapperField("LaneCol", FieldType.STRING)
    PERCENTGREATQTHIRTY__FIELD_NAME: WrapperField = WrapperField("PercentGreatQThirty", FieldType.DOUBLE)
    PERCENTGREATQTWENTY__FIELD_NAME: WrapperField = WrapperField("PercentGreatQTwenty", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_PercentGreatQThirty_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentGreatQThirty' on this record model
        """
        self.set_field_value(self.PERCENTGREATQTHIRTY__FIELD_NAME.field_name, value)

    def get_PercentGreatQThirty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentGreatQThirty' from this record model
        """
        return self.get_field_value(self.PERCENTGREATQTHIRTY__FIELD_NAME.field_name)

    def set_PercentGreatQTwenty_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentGreatQTwenty' on this record model
        """
        self.set_field_value(self.PERCENTGREATQTWENTY__FIELD_NAME.field_name, value)

    def get_PercentGreatQTwenty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentGreatQTwenty' from this record model
        """
        return self.get_field_value(self.PERCENTGREATQTWENTY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QuadraticRegressionParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QuadraticRegressionParameter
    Data Type Display Name: Quadratic Regression Parameter (Quadratic Regression Parameters)
    Fields: CreatedBy, DataRecordName, DateCreated, QuadraticA, QuadraticB, QuadraticC, SBA_AdjRSquared, SBA_RSquared, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'QuadraticRegressionParameter'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    QUADRATICA__FIELD_NAME: WrapperField = WrapperField("QuadraticA", FieldType.DOUBLE)
    QUADRATICB__FIELD_NAME: WrapperField = WrapperField("QuadraticB", FieldType.DOUBLE)
    QUADRATICC__FIELD_NAME: WrapperField = WrapperField("QuadraticC", FieldType.DOUBLE)
    SBA_ADJRSQUARED__FIELD_NAME: WrapperField = WrapperField("SBA_AdjRSquared", FieldType.DOUBLE)
    SBA_RSQUARED__FIELD_NAME: WrapperField = WrapperField("SBA_RSquared", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_QuadraticA_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticA' on this record model
        """
        self.set_field_value(self.QUADRATICA__FIELD_NAME.field_name, value)

    def get_QuadraticA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticA' from this record model
        """
        return self.get_field_value(self.QUADRATICA__FIELD_NAME.field_name)

    def set_QuadraticB_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticB' on this record model
        """
        self.set_field_value(self.QUADRATICB__FIELD_NAME.field_name, value)

    def get_QuadraticB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticB' from this record model
        """
        return self.get_field_value(self.QUADRATICB__FIELD_NAME.field_name)

    def set_QuadraticC_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticC' on this record model
        """
        self.set_field_value(self.QUADRATICC__FIELD_NAME.field_name, value)

    def get_QuadraticC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticC' from this record model
        """
        return self.get_field_value(self.QUADRATICC__FIELD_NAME.field_name)

    def set_SBA_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AdjRSquared' on this record model
        """
        self.set_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AdjRSquared' from this record model
        """
        return self.get_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name)

    def set_SBA_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RSquared' on this record model
        """
        self.set_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RSquared' from this record model
        """
        return self.get_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QuantStudioGenotypingDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QuantStudioGenotypingDatum
    Data Type Display Name: QuantStudio Genotyping Datum (QuantStudio Genotyping Datums)
    Fields: CreatedBy, DataRecordName, DateCreated, GeneCall, GeneSymbol, NCBISNPReference, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'QuantStudioGenotypingDatum'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GENECALL__FIELD_NAME: WrapperField = WrapperField("GeneCall", FieldType.STRING)
    GENESYMBOL__FIELD_NAME: WrapperField = WrapperField("GeneSymbol", FieldType.STRING)
    NCBISNPREFERENCE__FIELD_NAME: WrapperField = WrapperField("NCBISNPReference", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GeneCall_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneCall' on this record model
        """
        self.set_field_value(self.GENECALL__FIELD_NAME.field_name, value)

    def get_GeneCall_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneCall' from this record model
        """
        return self.get_field_value(self.GENECALL__FIELD_NAME.field_name)

    def set_GeneSymbol_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneSymbol' on this record model
        """
        self.set_field_value(self.GENESYMBOL__FIELD_NAME.field_name, value)

    def get_GeneSymbol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneSymbol' from this record model
        """
        return self.get_field_value(self.GENESYMBOL__FIELD_NAME.field_name)

    def set_NCBISNPReference_field(self, value: Optional[str]):
        """
        Set data field with field name 'NCBISNPReference' on this record model
        """
        self.set_field_value(self.NCBISNPREFERENCE__FIELD_NAME.field_name, value)

    def get_NCBISNPReference_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NCBISNPReference' from this record model
        """
        return self.get_field_value(self.NCBISNPREFERENCE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ReactionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Reaction
    Data Type Display Name: Reaction (Reactions)
    Fields: CreatedBy, DataRecordName, DateCreated, Formula, GenerateName, MultiParentLink175, MultiParentLink230, Products, Reactants, ReactionCoefficient, RegisteredToCartridge, Render, rxn, SMILES, SubstanceName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Reaction'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GENERATENAME__FIELD_NAME: WrapperField = WrapperField("GenerateName", FieldType.ACTION)
    MULTIPARENTLINK175__FIELD_NAME: WrapperField = WrapperField("MultiParentLink175", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK230__FIELD_NAME: WrapperField = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK)
    PRODUCTS__FIELD_NAME: WrapperField = WrapperField("Products", FieldType.SELECTION)
    REACTANTS__FIELD_NAME: WrapperField = WrapperField("Reactants", FieldType.SELECTION)
    REACTIONCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("ReactionCoefficient", FieldType.INTEGER)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    RENDER__FIELD_NAME: WrapperField = WrapperField("Render", FieldType.STRING)
    RXN__FIELD_NAME: WrapperField = WrapperField("rxn", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SUBSTANCENAME__FIELD_NAME: WrapperField = WrapperField("SubstanceName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_Products_field(self, value: Optional[str]):
        """
        Set data field with field name 'Products' on this record model
        """
        self.set_field_value(self.PRODUCTS__FIELD_NAME.field_name, value)

    def get_Products_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Products' from this record model
        """
        return self.get_field_value(self.PRODUCTS__FIELD_NAME.field_name)

    def set_Reactants_field(self, value: Optional[str]):
        """
        Set data field with field name 'Reactants' on this record model
        """
        self.set_field_value(self.REACTANTS__FIELD_NAME.field_name, value)

    def get_Reactants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Reactants' from this record model
        """
        return self.get_field_value(self.REACTANTS__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_Render_field(self, value: Optional[str]):
        """
        Set data field with field name 'Render' on this record model
        """
        self.set_field_value(self.RENDER__FIELD_NAME.field_name, value)

    def get_Render_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Render' from this record model
        """
        return self.get_field_value(self.RENDER__FIELD_NAME.field_name)

    def set_rxn_field(self, value: Optional[str]):
        """
        Set data field with field name 'rxn' on this record model
        """
        self.set_field_value(self.RXN__FIELD_NAME.field_name, value)

    def get_rxn_field(self) -> Optional[str]:
        """
        Get data field value with field name 'rxn' from this record model
        """
        return self.get_field_value(self.RXN__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SubstanceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubstanceName' on this record model
        """
        self.set_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name, value)

    def get_SubstanceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubstanceName' from this record model
        """
        return self.get_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ReactionComponentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ReactionComponent
    Data Type Display Name: Reaction Component (Reaction Components)
    Fields: CreatedBy, CXSMILESHash, DataRecordName, DateCreated, HasOrStereoGroup, inchi, InchiKey, LimitingReactant, MOL, Name, NoStereoSmiles, ReactionCoefficient, Role, StereoRegHash, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ReactionComponent'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("CXSMILESHash", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HASORSTEREOGROUP__FIELD_NAME: WrapperField = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    LIMITINGREACTANT__FIELD_NAME: WrapperField = WrapperField("LimitingReactant", FieldType.BOOLEAN)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    NAME__FIELD_NAME: WrapperField = WrapperField("Name", FieldType.STRING)
    NOSTEREOSMILES__FIELD_NAME: WrapperField = WrapperField("NoStereoSmiles", FieldType.STRING)
    REACTIONCOEFFICIENT__FIELD_NAME: WrapperField = WrapperField("ReactionCoefficient", FieldType.DOUBLE)
    ROLE__FIELD_NAME: WrapperField = WrapperField("Role", FieldType.SELECTION)
    STEREOREGHASH__FIELD_NAME: WrapperField = WrapperField("StereoRegHash", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_LimitingReactant_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LimitingReactant' on this record model
        """
        self.set_field_value(self.LIMITINGREACTANT__FIELD_NAME.field_name, value)

    def get_LimitingReactant_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LimitingReactant' from this record model
        """
        return self.get_field_value(self.LIMITINGREACTANT__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NoStereoSmiles_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoStereoSmiles' on this record model
        """
        self.set_field_value(self.NOSTEREOSMILES__FIELD_NAME.field_name, value)

    def get_NoStereoSmiles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoStereoSmiles' from this record model
        """
        return self.get_field_value(self.NOSTEREOSMILES__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_Role_field(self, value: Optional[str]):
        """
        Set data field with field name 'Role' on this record model
        """
        self.set_field_value(self.ROLE__FIELD_NAME.field_name, value)

    def get_Role_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Role' from this record model
        """
        return self.get_field_value(self.ROLE__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ReactionConditionsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ReactionConditions
    Data Type Display Name: Reaction Conditions (Reaction Conditions)
    Fields: CreatedBy, DataRecordName, DateCreated, GabUniqueId, Ratio, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield
    """
    DATA_TYPE_NAME: str = 'ReactionConditions'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GABUNIQUEID__FIELD_NAME: WrapperField = WrapperField("GabUniqueId", FieldType.STRING)
    RATIO__FIELD_NAME: WrapperField = WrapperField("Ratio", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GabUniqueId_field(self, value: Optional[str]):
        """
        Set data field with field name 'GabUniqueId' on this record model
        """
        self.set_field_value(self.GABUNIQUEID__FIELD_NAME.field_name, value)

    def get_GabUniqueId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GabUniqueId' from this record model
        """
        return self.get_field_value(self.GABUNIQUEID__FIELD_NAME.field_name)

    def set_Ratio_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ratio' on this record model
        """
        self.set_field_value(self.RATIO__FIELD_NAME.field_name, value)

    def get_Ratio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ratio' from this record model
        """
        return self.get_field_value(self.RATIO__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class RequestModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Request
    Data Type Display Name: Request (Requests)
    Fields: AddSamplesMethod, ArePoolsIncluded, AreSamplesLibraries, CompletedDate, CreatedBy, DataRecordName, DateCreated, DeliveryDestination, DeliveryDueDate, DisableRequetFields, InProcessDate, NumberOfSamples, NumOfReadsNeeded, PartiallyReceivedDate, ReceivedDate, RequestApproved, RequestDate, RequestedStain, RequesterEmail, RequesterName, RequesterOrganization, RequesterPhoneNumber, RequestId, RequestName, RequestorGroup, Status, TATFromInProcessing, TATFromReceiving, TotalSampleVolume, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Request'
    ADDSAMPLESMETHOD__FIELD_NAME: WrapperField = WrapperField("AddSamplesMethod", FieldType.PICKLIST)
    AREPOOLSINCLUDED__FIELD_NAME: WrapperField = WrapperField("ArePoolsIncluded", FieldType.BOOLEAN)
    ARESAMPLESLIBRARIES__FIELD_NAME: WrapperField = WrapperField("AreSamplesLibraries", FieldType.BOOLEAN)
    COMPLETEDDATE__FIELD_NAME: WrapperField = WrapperField("CompletedDate", FieldType.DATE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DELIVERYDESTINATION__FIELD_NAME: WrapperField = WrapperField("DeliveryDestination", FieldType.STRING)
    DELIVERYDUEDATE__FIELD_NAME: WrapperField = WrapperField("DeliveryDueDate", FieldType.DATE)
    DISABLEREQUETFIELDS__FIELD_NAME: WrapperField = WrapperField("DisableRequetFields", FieldType.BOOLEAN)
    INPROCESSDATE__FIELD_NAME: WrapperField = WrapperField("InProcessDate", FieldType.DATE)
    NUMBEROFSAMPLES__FIELD_NAME: WrapperField = WrapperField("NumberOfSamples", FieldType.LONG)
    NUMOFREADSNEEDED__FIELD_NAME: WrapperField = WrapperField("NumOfReadsNeeded", FieldType.INTEGER)
    PARTIALLYRECEIVEDDATE__FIELD_NAME: WrapperField = WrapperField("PartiallyReceivedDate", FieldType.DATE)
    RECEIVEDDATE__FIELD_NAME: WrapperField = WrapperField("ReceivedDate", FieldType.DATE)
    REQUESTAPPROVED__FIELD_NAME: WrapperField = WrapperField("RequestApproved", FieldType.BOOLEAN)
    REQUESTDATE__FIELD_NAME: WrapperField = WrapperField("RequestDate", FieldType.DATE)
    REQUESTEDSTAIN__FIELD_NAME: WrapperField = WrapperField("RequestedStain", FieldType.PICKLIST)
    REQUESTEREMAIL__FIELD_NAME: WrapperField = WrapperField("RequesterEmail", FieldType.STRING)
    REQUESTERNAME__FIELD_NAME: WrapperField = WrapperField("RequesterName", FieldType.STRING)
    REQUESTERORGANIZATION__FIELD_NAME: WrapperField = WrapperField("RequesterOrganization", FieldType.STRING)
    REQUESTERPHONENUMBER__FIELD_NAME: WrapperField = WrapperField("RequesterPhoneNumber", FieldType.STRING)
    REQUESTID__FIELD_NAME: WrapperField = WrapperField("RequestId", FieldType.AUTO_ACCESSION)
    REQUESTNAME__FIELD_NAME: WrapperField = WrapperField("RequestName", FieldType.STRING)
    REQUESTORGROUP__FIELD_NAME: WrapperField = WrapperField("RequestorGroup", FieldType.STRING)
    STATUS__FIELD_NAME: WrapperField = WrapperField("Status", FieldType.PICKLIST)
    TATFROMINPROCESSING__FIELD_NAME: WrapperField = WrapperField("TATFromInProcessing", FieldType.STRING)
    TATFROMRECEIVING__FIELD_NAME: WrapperField = WrapperField("TATFromReceiving", FieldType.STRING)
    TOTALSAMPLEVOLUME__FIELD_NAME: WrapperField = WrapperField("TotalSampleVolume", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AddSamplesMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddSamplesMethod' on this record model
        """
        self.set_field_value(self.ADDSAMPLESMETHOD__FIELD_NAME.field_name, value)

    def get_AddSamplesMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddSamplesMethod' from this record model
        """
        return self.get_field_value(self.ADDSAMPLESMETHOD__FIELD_NAME.field_name)

    def set_ArePoolsIncluded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ArePoolsIncluded' on this record model
        """
        self.set_field_value(self.AREPOOLSINCLUDED__FIELD_NAME.field_name, value)

    def get_ArePoolsIncluded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ArePoolsIncluded' from this record model
        """
        return self.get_field_value(self.AREPOOLSINCLUDED__FIELD_NAME.field_name)

    def set_AreSamplesLibraries_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AreSamplesLibraries' on this record model
        """
        self.set_field_value(self.ARESAMPLESLIBRARIES__FIELD_NAME.field_name, value)

    def get_AreSamplesLibraries_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AreSamplesLibraries' from this record model
        """
        return self.get_field_value(self.ARESAMPLESLIBRARIES__FIELD_NAME.field_name)

    def set_CompletedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedDate' on this record model
        """
        self.set_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name, value)

    def get_CompletedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedDate' from this record model
        """
        return self.get_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DeliveryDestination_field(self, value: Optional[str]):
        """
        Set data field with field name 'DeliveryDestination' on this record model
        """
        self.set_field_value(self.DELIVERYDESTINATION__FIELD_NAME.field_name, value)

    def get_DeliveryDestination_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DeliveryDestination' from this record model
        """
        return self.get_field_value(self.DELIVERYDESTINATION__FIELD_NAME.field_name)

    def set_DeliveryDueDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DeliveryDueDate' on this record model
        """
        self.set_field_value(self.DELIVERYDUEDATE__FIELD_NAME.field_name, value)

    def get_DeliveryDueDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DeliveryDueDate' from this record model
        """
        return self.get_field_value(self.DELIVERYDUEDATE__FIELD_NAME.field_name)

    def set_DisableRequetFields_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableRequetFields' on this record model
        """
        self.set_field_value(self.DISABLEREQUETFIELDS__FIELD_NAME.field_name, value)

    def get_DisableRequetFields_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableRequetFields' from this record model
        """
        return self.get_field_value(self.DISABLEREQUETFIELDS__FIELD_NAME.field_name)

    def set_InProcessDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'InProcessDate' on this record model
        """
        self.set_field_value(self.INPROCESSDATE__FIELD_NAME.field_name, value)

    def get_InProcessDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InProcessDate' from this record model
        """
        return self.get_field_value(self.INPROCESSDATE__FIELD_NAME.field_name)

    def set_NumberOfSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSamples' on this record model
        """
        self.set_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name, value)

    def get_NumberOfSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSamples' from this record model
        """
        return self.get_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name)

    def set_NumOfReadsNeeded_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumOfReadsNeeded' on this record model
        """
        self.set_field_value(self.NUMOFREADSNEEDED__FIELD_NAME.field_name, value)

    def get_NumOfReadsNeeded_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumOfReadsNeeded' from this record model
        """
        return self.get_field_value(self.NUMOFREADSNEEDED__FIELD_NAME.field_name)

    def set_PartiallyReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'PartiallyReceivedDate' on this record model
        """
        self.set_field_value(self.PARTIALLYRECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_PartiallyReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PartiallyReceivedDate' from this record model
        """
        return self.get_field_value(self.PARTIALLYRECEIVEDDATE__FIELD_NAME.field_name)

    def set_ReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReceivedDate' on this record model
        """
        self.set_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_ReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReceivedDate' from this record model
        """
        return self.get_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name)

    def set_RequestApproved_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestApproved' on this record model
        """
        self.set_field_value(self.REQUESTAPPROVED__FIELD_NAME.field_name, value)

    def get_RequestApproved_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestApproved' from this record model
        """
        return self.get_field_value(self.REQUESTAPPROVED__FIELD_NAME.field_name)

    def set_RequestDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RequestDate' on this record model
        """
        self.set_field_value(self.REQUESTDATE__FIELD_NAME.field_name, value)

    def get_RequestDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RequestDate' from this record model
        """
        return self.get_field_value(self.REQUESTDATE__FIELD_NAME.field_name)

    def set_RequestedStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestedStain' on this record model
        """
        self.set_field_value(self.REQUESTEDSTAIN__FIELD_NAME.field_name, value)

    def get_RequestedStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestedStain' from this record model
        """
        return self.get_field_value(self.REQUESTEDSTAIN__FIELD_NAME.field_name)

    def set_RequesterEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterEmail' on this record model
        """
        self.set_field_value(self.REQUESTEREMAIL__FIELD_NAME.field_name, value)

    def get_RequesterEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterEmail' from this record model
        """
        return self.get_field_value(self.REQUESTEREMAIL__FIELD_NAME.field_name)

    def set_RequesterName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterName' on this record model
        """
        self.set_field_value(self.REQUESTERNAME__FIELD_NAME.field_name, value)

    def get_RequesterName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterName' from this record model
        """
        return self.get_field_value(self.REQUESTERNAME__FIELD_NAME.field_name)

    def set_RequesterOrganization_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterOrganization' on this record model
        """
        self.set_field_value(self.REQUESTERORGANIZATION__FIELD_NAME.field_name, value)

    def get_RequesterOrganization_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterOrganization' from this record model
        """
        return self.get_field_value(self.REQUESTERORGANIZATION__FIELD_NAME.field_name)

    def set_RequesterPhoneNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterPhoneNumber' on this record model
        """
        self.set_field_value(self.REQUESTERPHONENUMBER__FIELD_NAME.field_name, value)

    def get_RequesterPhoneNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterPhoneNumber' from this record model
        """
        return self.get_field_value(self.REQUESTERPHONENUMBER__FIELD_NAME.field_name)

    def set_RequestId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestId' on this record model
        """
        self.set_field_value(self.REQUESTID__FIELD_NAME.field_name, value)

    def get_RequestId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestId' from this record model
        """
        return self.get_field_value(self.REQUESTID__FIELD_NAME.field_name)

    def set_RequestName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestName' on this record model
        """
        self.set_field_value(self.REQUESTNAME__FIELD_NAME.field_name, value)

    def get_RequestName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestName' from this record model
        """
        return self.get_field_value(self.REQUESTNAME__FIELD_NAME.field_name)

    def set_RequestorGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestorGroup' on this record model
        """
        self.set_field_value(self.REQUESTORGROUP__FIELD_NAME.field_name, value)

    def get_RequestorGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestorGroup' from this record model
        """
        return self.get_field_value(self.REQUESTORGROUP__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_TATFromInProcessing_field(self, value: Optional[str]):
        """
        Set data field with field name 'TATFromInProcessing' on this record model
        """
        self.set_field_value(self.TATFROMINPROCESSING__FIELD_NAME.field_name, value)

    def get_TATFromInProcessing_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TATFromInProcessing' from this record model
        """
        return self.get_field_value(self.TATFROMINPROCESSING__FIELD_NAME.field_name)

    def set_TATFromReceiving_field(self, value: Optional[str]):
        """
        Set data field with field name 'TATFromReceiving' on this record model
        """
        self.set_field_value(self.TATFROMRECEIVING__FIELD_NAME.field_name, value)

    def get_TATFromReceiving_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TATFromReceiving' from this record model
        """
        return self.get_field_value(self.TATFROMRECEIVING__FIELD_NAME.field_name)

    def set_TotalSampleVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalSampleVolume' on this record model
        """
        self.set_field_value(self.TOTALSAMPLEVOLUME__FIELD_NAME.field_name, value)

    def get_TotalSampleVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalSampleVolume' from this record model
        """
        return self.get_field_value(self.TOTALSAMPLEVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RequesterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Requester
    Data Type Display Name: Requester (Requesters)
    Fields: CreatedBy, DataRecordName, DateCreated, EmailAddress, FirstName, IsApproved, JobTitle, LastName, MiddleName, Phone, Username, VeloxLastModifiedBy, VeloxLastModifiedDate
    The Requester Data Type
    """
    DATA_TYPE_NAME: str = 'Requester'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EMAILADDRESS__FIELD_NAME: WrapperField = WrapperField("EmailAddress", FieldType.STRING)
    FIRSTNAME__FIELD_NAME: WrapperField = WrapperField("FirstName", FieldType.STRING)
    ISAPPROVED__FIELD_NAME: WrapperField = WrapperField("IsApproved", FieldType.BOOLEAN)
    JOBTITLE__FIELD_NAME: WrapperField = WrapperField("JobTitle", FieldType.STRING)
    LASTNAME__FIELD_NAME: WrapperField = WrapperField("LastName", FieldType.STRING)
    MIDDLENAME__FIELD_NAME: WrapperField = WrapperField("MiddleName", FieldType.STRING)
    PHONE__FIELD_NAME: WrapperField = WrapperField("Phone", FieldType.STRING)
    USERNAME__FIELD_NAME: WrapperField = WrapperField("Username", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EmailAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'EmailAddress' on this record model
        """
        self.set_field_value(self.EMAILADDRESS__FIELD_NAME.field_name, value)

    def get_EmailAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EmailAddress' from this record model
        """
        return self.get_field_value(self.EMAILADDRESS__FIELD_NAME.field_name)

    def set_FirstName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FirstName' on this record model
        """
        self.set_field_value(self.FIRSTNAME__FIELD_NAME.field_name, value)

    def get_FirstName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FirstName' from this record model
        """
        return self.get_field_value(self.FIRSTNAME__FIELD_NAME.field_name)

    def set_IsApproved_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsApproved' on this record model
        """
        self.set_field_value(self.ISAPPROVED__FIELD_NAME.field_name, value)

    def get_IsApproved_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsApproved' from this record model
        """
        return self.get_field_value(self.ISAPPROVED__FIELD_NAME.field_name)

    def set_JobTitle_field(self, value: Optional[str]):
        """
        Set data field with field name 'JobTitle' on this record model
        """
        self.set_field_value(self.JOBTITLE__FIELD_NAME.field_name, value)

    def get_JobTitle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'JobTitle' from this record model
        """
        return self.get_field_value(self.JOBTITLE__FIELD_NAME.field_name)

    def set_LastName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastName' on this record model
        """
        self.set_field_value(self.LASTNAME__FIELD_NAME.field_name, value)

    def get_LastName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastName' from this record model
        """
        return self.get_field_value(self.LASTNAME__FIELD_NAME.field_name)

    def set_MiddleName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MiddleName' on this record model
        """
        self.set_field_value(self.MIDDLENAME__FIELD_NAME.field_name, value)

    def get_MiddleName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MiddleName' from this record model
        """
        return self.get_field_value(self.MIDDLENAME__FIELD_NAME.field_name)

    def set_Phone_field(self, value: Optional[str]):
        """
        Set data field with field name 'Phone' on this record model
        """
        self.set_field_value(self.PHONE__FIELD_NAME.field_name, value)

    def get_Phone_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Phone' from this record model
        """
        return self.get_field_value(self.PHONE__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RestrictionEnzymePartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type RestrictionEnzymePart
    Data Type Display Name: Restriction Enzyme Part (Restriction Enzyme Parts)
    Fields: CreatedBy, CutPos1a, CutPos1s, CutPos2a, CutPos2s, DataRecordName, DateCreated, Isoschizomers, Neoschizomers, NonDeg, RecognitionSequence, SixPlus, VeloxLastModifiedBy, VeloxLastModifiedDate
    Part extension type for enzyme part for restriction enzymes.
    """
    DATA_TYPE_NAME: str = 'RestrictionEnzymePart'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CUTPOS1A__FIELD_NAME: WrapperField = WrapperField("CutPos1a", FieldType.INTEGER)
    CUTPOS1S__FIELD_NAME: WrapperField = WrapperField("CutPos1s", FieldType.INTEGER)
    CUTPOS2A__FIELD_NAME: WrapperField = WrapperField("CutPos2a", FieldType.INTEGER)
    CUTPOS2S__FIELD_NAME: WrapperField = WrapperField("CutPos2s", FieldType.INTEGER)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISOSCHIZOMERS__FIELD_NAME: WrapperField = WrapperField("Isoschizomers", FieldType.STRING)
    NEOSCHIZOMERS__FIELD_NAME: WrapperField = WrapperField("Neoschizomers", FieldType.STRING)
    NONDEG__FIELD_NAME: WrapperField = WrapperField("NonDeg", FieldType.BOOLEAN)
    RECOGNITIONSEQUENCE__FIELD_NAME: WrapperField = WrapperField("RecognitionSequence", FieldType.STRING)
    SIXPLUS__FIELD_NAME: WrapperField = WrapperField("SixPlus", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CutPos1a_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos1a' on this record model
        """
        self.set_field_value(self.CUTPOS1A__FIELD_NAME.field_name, value)

    def get_CutPos1a_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos1a' from this record model
        """
        return self.get_field_value(self.CUTPOS1A__FIELD_NAME.field_name)

    def set_CutPos1s_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos1s' on this record model
        """
        self.set_field_value(self.CUTPOS1S__FIELD_NAME.field_name, value)

    def get_CutPos1s_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos1s' from this record model
        """
        return self.get_field_value(self.CUTPOS1S__FIELD_NAME.field_name)

    def set_CutPos2a_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos2a' on this record model
        """
        self.set_field_value(self.CUTPOS2A__FIELD_NAME.field_name, value)

    def get_CutPos2a_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos2a' from this record model
        """
        return self.get_field_value(self.CUTPOS2A__FIELD_NAME.field_name)

    def set_CutPos2s_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos2s' on this record model
        """
        self.set_field_value(self.CUTPOS2S__FIELD_NAME.field_name, value)

    def get_CutPos2s_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos2s' from this record model
        """
        return self.get_field_value(self.CUTPOS2S__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Isoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Isoschizomers' on this record model
        """
        self.set_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Isoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Isoschizomers' from this record model
        """
        return self.get_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_Neoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Neoschizomers' on this record model
        """
        self.set_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Neoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Neoschizomers' from this record model
        """
        return self.get_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_NonDeg_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NonDeg' on this record model
        """
        self.set_field_value(self.NONDEG__FIELD_NAME.field_name, value)

    def get_NonDeg_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NonDeg' from this record model
        """
        return self.get_field_value(self.NONDEG__FIELD_NAME.field_name)

    def set_RecognitionSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecognitionSequence' on this record model
        """
        self.set_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name, value)

    def get_RecognitionSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecognitionSequence' from this record model
        """
        return self.get_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name)

    def set_SixPlus_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SixPlus' on this record model
        """
        self.set_field_value(self.SIXPLUS__FIELD_NAME.field_name, value)

    def get_SixPlus_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SixPlus' from this record model
        """
        return self.get_field_value(self.SIXPLUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ReturnPointModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ReturnPoint
    Data Type Display Name: Return Point (Return Points)
    Fields: AttachPointId, BranchLongId, CreatedBy, DataRecordName, DateCreated, ExemplarSampleType, MultiParentLink211, NextWorkflow, ProcessName, ProcessPointNumber, ProcessStepNumber, SampleId, SampleRecordId, TrackedRecordDataType, VeloxLastModifiedBy, VeloxLastModifiedDate
    This data is used to determine where you should restart a sample during reprocessing.
    """
    DATA_TYPE_NAME: str = 'ReturnPoint'
    ATTACHPOINTID__FIELD_NAME: WrapperField = WrapperField("AttachPointId", FieldType.STRING)
    BRANCHLONGID__FIELD_NAME: WrapperField = WrapperField("BranchLongId", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXEMPLARSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleType", FieldType.SELECTION)
    MULTIPARENTLINK211__FIELD_NAME: WrapperField = WrapperField("MultiParentLink211", FieldType.MULTIPARENTLINK)
    NEXTWORKFLOW__FIELD_NAME: WrapperField = WrapperField("NextWorkflow", FieldType.STRING)
    PROCESSNAME__FIELD_NAME: WrapperField = WrapperField("ProcessName", FieldType.STRING)
    PROCESSPOINTNUMBER__FIELD_NAME: WrapperField = WrapperField("ProcessPointNumber", FieldType.LONG)
    PROCESSSTEPNUMBER__FIELD_NAME: WrapperField = WrapperField("ProcessStepNumber", FieldType.LONG)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("SampleRecordId", FieldType.LONG)
    TRACKEDRECORDDATATYPE__FIELD_NAME: WrapperField = WrapperField("TrackedRecordDataType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AttachPointId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AttachPointId' on this record model
        """
        self.set_field_value(self.ATTACHPOINTID__FIELD_NAME.field_name, value)

    def get_AttachPointId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AttachPointId' from this record model
        """
        return self.get_field_value(self.ATTACHPOINTID__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_NextWorkflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'NextWorkflow' on this record model
        """
        self.set_field_value(self.NEXTWORKFLOW__FIELD_NAME.field_name, value)

    def get_NextWorkflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NextWorkflow' from this record model
        """
        return self.get_field_value(self.NEXTWORKFLOW__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def set_ProcessPointNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessPointNumber' on this record model
        """
        self.set_field_value(self.PROCESSPOINTNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessPointNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessPointNumber' from this record model
        """
        return self.get_field_value(self.PROCESSPOINTNUMBER__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_TrackedRecordDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TrackedRecordDataType' on this record model
        """
        self.set_field_value(self.TRACKEDRECORDDATATYPE__FIELD_NAME.field_name, value)

    def get_TrackedRecordDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TrackedRecordDataType' from this record model
        """
        return self.get_field_value(self.TRACKEDRECORDDATATYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RNAModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type RNA
    Data Type Display Name: RNA (RNAs)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, LotNumber, RegistryId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'RNA'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RNAPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type RNAPart
    Data Type Display Name: RNA Part (RNA Parts)
    Fields: AutoTranslationNotes, ChemicalProperties, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, EditLock, GenbankAttachment, HELM, HELMHash, MultiParentLink170, QuantityOnHand, QuantityPerItem, RegistryId, ReorderLevelQuantity, Sequence, SequenceHash, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'RNAPart'
    AUTOTRANSLATIONNOTES__FIELD_NAME: WrapperField = WrapperField("AutoTranslationNotes", FieldType.STRING)
    CHEMICALPROPERTIES__FIELD_NAME: WrapperField = WrapperField("ChemicalProperties", FieldType.SIDE_LINK)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    GENBANKATTACHMENT__FIELD_NAME: WrapperField = WrapperField("GenbankAttachment", FieldType.SIDE_LINK)
    HELM__FIELD_NAME: WrapperField = WrapperField("HELM", FieldType.STRING)
    HELMHASH__FIELD_NAME: WrapperField = WrapperField("HELMHash", FieldType.STRING)
    MULTIPARENTLINK170__FIELD_NAME: WrapperField = WrapperField("MultiParentLink170", FieldType.MULTIPARENTLINK)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    SEQUENCE__FIELD_NAME: WrapperField = WrapperField("Sequence", FieldType.STRING)
    SEQUENCEHASH__FIELD_NAME: WrapperField = WrapperField("SequenceHash", FieldType.STRING)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AutoTranslationNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'AutoTranslationNotes' on this record model
        """
        self.set_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name, value)

    def get_AutoTranslationNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AutoTranslationNotes' from this record model
        """
        return self.get_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name)

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_GenbankAttachment_field(self, value: Optional[int]):
        """
        Set data field with field name 'GenbankAttachment' on this record model
        """
        self.set_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenbankAttachment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GenbankAttachment' from this record model
        """
        return self.get_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class Robs3rdRegModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Robs3rdReg
    Data Type Display Name: Regie McReg Face Part (Regiie McRegFace Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, inchi, InchiKey, IsGHSClassified, IUPAC, LotNumber, MolecularWeight, PolarSurfaceArea, PubchemCid, Purity, RegistryId, SMILES, TotalHBondAcceptors, TotalHBondCount, VeloxLastModifiedBy, VeloxLastModifiedDate, Yield
    The Robs3rdReg Data Type
    """
    DATA_TYPE_NAME: str = 'Robs3rdReg'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    PURITY__FIELD_NAME: WrapperField = WrapperField("Purity", FieldType.DOUBLE)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    YIELD__FIELD_NAME: WrapperField = WrapperField("Yield", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class Robs3rdRegPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Robs3rdRegPart
    Data Type Display Name: Regie McReg Face Part Part (Regie McReg Face Part Parts)
    Fields: CAS, Charge, cLogP, ConsumableType, CreatedBy, DataRecordName, DateCreated, EditLock, ExactMass, Formula, GHSCautionCode, GHSHazardCode, GHSPictoCode, GHSSignal, inchi, InchiKey, INCHIShadow, IsGHSClassified, IUPAC, MOL, MolecularWeight, PolarSurfaceArea, PubchemCid, QuantityOnHand, QuantityPerItem, RegisteredToCartridge, RegistryId, ReorderLevelQuantity, RequestImageUpdate, SMILES, SMILESShadow, TotalHBondAcceptors, TotalHBondCount, Units, VeloxLastModifiedBy, VeloxLastModifiedDate
    The Robs3rdRegPart Data Type
    """
    DATA_TYPE_NAME: str = 'Robs3rdRegPart'
    CAS__FIELD_NAME: WrapperField = WrapperField("CAS", FieldType.STRING)
    CHARGE__FIELD_NAME: WrapperField = WrapperField("Charge", FieldType.INTEGER)
    CLOGP__FIELD_NAME: WrapperField = WrapperField("cLogP", FieldType.DOUBLE)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EDITLOCK__FIELD_NAME: WrapperField = WrapperField("EditLock", FieldType.BOOLEAN)
    EXACTMASS__FIELD_NAME: WrapperField = WrapperField("ExactMass", FieldType.DOUBLE)
    FORMULA__FIELD_NAME: WrapperField = WrapperField("Formula", FieldType.STRING)
    GHSCAUTIONCODE__FIELD_NAME: WrapperField = WrapperField("GHSCautionCode", FieldType.STRING)
    GHSHAZARDCODE__FIELD_NAME: WrapperField = WrapperField("GHSHazardCode", FieldType.STRING)
    GHSPICTOCODE__FIELD_NAME: WrapperField = WrapperField("GHSPictoCode", FieldType.STRING)
    GHSSIGNAL__FIELD_NAME: WrapperField = WrapperField("GHSSignal", FieldType.STRING)
    INCHI__FIELD_NAME: WrapperField = WrapperField("inchi", FieldType.STRING)
    INCHIKEY__FIELD_NAME: WrapperField = WrapperField("InchiKey", FieldType.STRING)
    INCHISHADOW__FIELD_NAME: WrapperField = WrapperField("INCHIShadow", FieldType.STRING)
    ISGHSCLASSIFIED__FIELD_NAME: WrapperField = WrapperField("IsGHSClassified", FieldType.BOOLEAN)
    IUPAC__FIELD_NAME: WrapperField = WrapperField("IUPAC", FieldType.STRING)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    MOLECULARWEIGHT__FIELD_NAME: WrapperField = WrapperField("MolecularWeight", FieldType.DOUBLE)
    POLARSURFACEAREA__FIELD_NAME: WrapperField = WrapperField("PolarSurfaceArea", FieldType.DOUBLE)
    PUBCHEMCID__FIELD_NAME: WrapperField = WrapperField("PubchemCid", FieldType.INTEGER)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REGISTEREDTOCARTRIDGE__FIELD_NAME: WrapperField = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN)
    REGISTRYID__FIELD_NAME: WrapperField = WrapperField("RegistryId", FieldType.STRING)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    REQUESTIMAGEUPDATE__FIELD_NAME: WrapperField = WrapperField("RequestImageUpdate", FieldType.BOOLEAN)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    SMILESSHADOW__FIELD_NAME: WrapperField = WrapperField("SMILESShadow", FieldType.STRING)
    TOTALHBONDACCEPTORS__FIELD_NAME: WrapperField = WrapperField("TotalHBondAcceptors", FieldType.INTEGER)
    TOTALHBONDCOUNT__FIELD_NAME: WrapperField = WrapperField("TotalHBondCount", FieldType.INTEGER)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SaasUserActivityModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SaasUserActivity
    Data Type Display Name: SaaS User Activity (SaaS User Activities)
    Fields: ActivityDescription, ActivityPlace, ActivityTimestamp, ActivityType, ButtonName, CreatedBy, DataRecordName, DateCreated, SessionId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SaasUserActivity'
    ACTIVITYDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("ActivityDescription", FieldType.STRING)
    ACTIVITYPLACE__FIELD_NAME: WrapperField = WrapperField("ActivityPlace", FieldType.STRING)
    ACTIVITYTIMESTAMP__FIELD_NAME: WrapperField = WrapperField("ActivityTimestamp", FieldType.DATE)
    ACTIVITYTYPE__FIELD_NAME: WrapperField = WrapperField("ActivityType", FieldType.STRING)
    BUTTONNAME__FIELD_NAME: WrapperField = WrapperField("ButtonName", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SESSIONID__FIELD_NAME: WrapperField = WrapperField("SessionId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActivityDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActivityDescription' on this record model
        """
        self.set_field_value(self.ACTIVITYDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ActivityDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActivityDescription' from this record model
        """
        return self.get_field_value(self.ACTIVITYDESCRIPTION__FIELD_NAME.field_name)

    def set_ActivityPlace_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActivityPlace' on this record model
        """
        self.set_field_value(self.ACTIVITYPLACE__FIELD_NAME.field_name, value)

    def get_ActivityPlace_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActivityPlace' from this record model
        """
        return self.get_field_value(self.ACTIVITYPLACE__FIELD_NAME.field_name)

    def set_ActivityTimestamp_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActivityTimestamp' on this record model
        """
        self.set_field_value(self.ACTIVITYTIMESTAMP__FIELD_NAME.field_name, value)

    def get_ActivityTimestamp_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActivityTimestamp' from this record model
        """
        return self.get_field_value(self.ACTIVITYTIMESTAMP__FIELD_NAME.field_name)

    def set_ActivityType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActivityType' on this record model
        """
        self.set_field_value(self.ACTIVITYTYPE__FIELD_NAME.field_name, value)

    def get_ActivityType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActivityType' from this record model
        """
        return self.get_field_value(self.ACTIVITYTYPE__FIELD_NAME.field_name)

    def set_ButtonName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ButtonName' on this record model
        """
        self.set_field_value(self.BUTTONNAME__FIELD_NAME.field_name, value)

    def get_ButtonName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ButtonName' from this record model
        """
        return self.get_field_value(self.BUTTONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SessionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SessionId' on this record model
        """
        self.set_field_value(self.SESSIONID__FIELD_NAME.field_name, value)

    def get_SessionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SessionId' from this record model
        """
        return self.get_field_value(self.SESSIONID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Sample
    Data Type Display Name: Sample (Samples)
    Fields: ActiveWorkflowId, Age, AliquotNumber, AssayType, BlockNumber, C_MyNewDataField, CollectionDate, CollectionDateTime, ColPosition, Comments, Concentration, ConcentrationUnits, ContainerType, ControlType, CreatedBy, DataRecordName, DateCreated, DateofBirth, Disease, DiseasePathology, DonorID, ElnbNumber, ExemplarSampleStatus, ExemplarSampleSubtyp, ExemplarSampleSubtype, ExemplarSampleType, FedExTrackingNo, Fermented, Flags, FlowJoGroupSideLink, Handling, HoldStatus, IntField, IsControl, IsInvalid, IsPooled, LastEditedBy, MultiParentLink156, MultiParentLink203, MultiParentLink211, MultiParentLink215, MultiParentLink266, MultiParentLink670, MultiParentLink689, MultiParentLink752, NGSSingleTemplateProcess, ObservedCondition, Organ, Organism, OtherSampleId, PatientID, PercentRecoveries, PicklistField, PlateId, PreviousExemplarStatus, ReadyforRnD, RowPosition, SacrificedDate, SampleExpirationDate, SampleId, SamplingSchedule, SapioSingleTemplateProcess, Sex, StaticDate, StorageLocationBarcode, StorageUnitPath, StrainHit, StudySamplingId, StudySubject, TatProgressStatus, TestConcatField, TestLastField, TimePoint, Tissue, TissueSectionsPerSlide, TotalMass, TubeBarcode, UrgentRequest, Variant, VeloxLastModifiedBy, VeloxLastModifiedDate, Volume, VolumeUnits
    """
    DATA_TYPE_NAME: str = 'Sample'
    ACTIVEWORKFLOWID__FIELD_NAME: WrapperField = WrapperField("ActiveWorkflowId", FieldType.LONG)
    AGE__FIELD_NAME: WrapperField = WrapperField("Age", FieldType.STRING)
    ALIQUOTNUMBER__FIELD_NAME: WrapperField = WrapperField("AliquotNumber", FieldType.INTEGER)
    ASSAYTYPE__FIELD_NAME: WrapperField = WrapperField("AssayType", FieldType.STRING)
    BLOCKNUMBER__FIELD_NAME: WrapperField = WrapperField("BlockNumber", FieldType.INTEGER)
    C_MYNEWDATAFIELD__FIELD_NAME: WrapperField = WrapperField("C_MyNewDataField", FieldType.STRING)
    COLLECTIONDATE__FIELD_NAME: WrapperField = WrapperField("CollectionDate", FieldType.DATE)
    COLLECTIONDATETIME__FIELD_NAME: WrapperField = WrapperField("CollectionDateTime", FieldType.DATE)
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    COMMENTS__FIELD_NAME: WrapperField = WrapperField("Comments", FieldType.STRING)
    CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("Concentration", FieldType.DOUBLE)
    CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("ConcentrationUnits", FieldType.PICKLIST)
    CONTAINERTYPE__FIELD_NAME: WrapperField = WrapperField("ContainerType", FieldType.PICKLIST)
    CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("ControlType", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEOFBIRTH__FIELD_NAME: WrapperField = WrapperField("DateofBirth", FieldType.DATE)
    DISEASE__FIELD_NAME: WrapperField = WrapperField("Disease", FieldType.STRING)
    DISEASEPATHOLOGY__FIELD_NAME: WrapperField = WrapperField("DiseasePathology", FieldType.PICKLIST)
    DONORID__FIELD_NAME: WrapperField = WrapperField("DonorID", FieldType.STRING)
    ELNBNUMBER__FIELD_NAME: WrapperField = WrapperField("ElnbNumber", FieldType.STRING)
    EXEMPLARSAMPLESTATUS__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleStatus", FieldType.SELECTION)
    EXEMPLARSAMPLESUBTYP__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleSubtyp", FieldType.PICKLIST)
    EXEMPLARSAMPLESUBTYPE__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleSubtype", FieldType.SELECTION)
    EXEMPLARSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleType", FieldType.SELECTION)
    FEDEXTRACKINGNO__FIELD_NAME: WrapperField = WrapperField("FedExTrackingNo", FieldType.STRING)
    FERMENTED__FIELD_NAME: WrapperField = WrapperField("Fermented", FieldType.BOOLEAN)
    FLAGS__FIELD_NAME: WrapperField = WrapperField("Flags", FieldType.STRING)
    FLOWJOGROUPSIDELINK__FIELD_NAME: WrapperField = WrapperField("FlowJoGroupSideLink", FieldType.SIDE_LINK)
    HANDLING__FIELD_NAME: WrapperField = WrapperField("Handling", FieldType.STRING)
    HOLDSTATUS__FIELD_NAME: WrapperField = WrapperField("HoldStatus", FieldType.PICKLIST)
    INTFIELD__FIELD_NAME: WrapperField = WrapperField("IntField", FieldType.INTEGER)
    ISCONTROL__FIELD_NAME: WrapperField = WrapperField("IsControl", FieldType.BOOLEAN)
    ISINVALID__FIELD_NAME: WrapperField = WrapperField("IsInvalid", FieldType.BOOLEAN)
    ISPOOLED__FIELD_NAME: WrapperField = WrapperField("IsPooled", FieldType.BOOLEAN)
    LASTEDITEDBY__FIELD_NAME: WrapperField = WrapperField("LastEditedBy", FieldType.STRING)
    MULTIPARENTLINK156__FIELD_NAME: WrapperField = WrapperField("MultiParentLink156", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK203__FIELD_NAME: WrapperField = WrapperField("MultiParentLink203", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK211__FIELD_NAME: WrapperField = WrapperField("MultiParentLink211", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK266__FIELD_NAME: WrapperField = WrapperField("MultiParentLink266", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK670__FIELD_NAME: WrapperField = WrapperField("MultiParentLink670", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK689__FIELD_NAME: WrapperField = WrapperField("MultiParentLink689", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK752__FIELD_NAME: WrapperField = WrapperField("MultiParentLink752", FieldType.MULTIPARENTLINK)
    NGSSINGLETEMPLATEPROCESS__FIELD_NAME: WrapperField = WrapperField("NGSSingleTemplateProcess", FieldType.PICKLIST)
    OBSERVEDCONDITION__FIELD_NAME: WrapperField = WrapperField("ObservedCondition", FieldType.SELECTION)
    ORGAN__FIELD_NAME: WrapperField = WrapperField("Organ", FieldType.STRING)
    ORGANISM__FIELD_NAME: WrapperField = WrapperField("Organism", FieldType.PICKLIST)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    PATIENTID__FIELD_NAME: WrapperField = WrapperField("PatientID", FieldType.STRING)
    PERCENTRECOVERIES__FIELD_NAME: WrapperField = WrapperField("PercentRecoveries", FieldType.DOUBLE)
    PICKLISTFIELD__FIELD_NAME: WrapperField = WrapperField("PicklistField", FieldType.PICKLIST)
    PLATEID__FIELD_NAME: WrapperField = WrapperField("PlateId", FieldType.STRING)
    PREVIOUSEXEMPLARSTATUS__FIELD_NAME: WrapperField = WrapperField("PreviousExemplarStatus", FieldType.SELECTION)
    READYFORRND__FIELD_NAME: WrapperField = WrapperField("ReadyforRnD", FieldType.BOOLEAN)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SACRIFICEDDATE__FIELD_NAME: WrapperField = WrapperField("SacrificedDate", FieldType.DATE)
    SAMPLEEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("SampleExpirationDate", FieldType.DATE)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SAMPLINGSCHEDULE__FIELD_NAME: WrapperField = WrapperField("SamplingSchedule", FieldType.SIDE_LINK)
    SAPIOSINGLETEMPLATEPROCESS__FIELD_NAME: WrapperField = WrapperField("SapioSingleTemplateProcess", FieldType.PICKLIST)
    SEX__FIELD_NAME: WrapperField = WrapperField("Sex", FieldType.PICKLIST)
    STATICDATE__FIELD_NAME: WrapperField = WrapperField("StaticDate", FieldType.DATE)
    STORAGELOCATIONBARCODE__FIELD_NAME: WrapperField = WrapperField("StorageLocationBarcode", FieldType.SELECTION)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    STRAINHIT__FIELD_NAME: WrapperField = WrapperField("StrainHit", FieldType.BOOLEAN)
    STUDYSAMPLINGID__FIELD_NAME: WrapperField = WrapperField("StudySamplingId", FieldType.STRING)
    STUDYSUBJECT__FIELD_NAME: WrapperField = WrapperField("StudySubject", FieldType.SIDE_LINK)
    TATPROGRESSSTATUS__FIELD_NAME: WrapperField = WrapperField("TatProgressStatus", FieldType.PICKLIST)
    TESTCONCATFIELD__FIELD_NAME: WrapperField = WrapperField("TestConcatField", FieldType.STRING)
    TESTLASTFIELD__FIELD_NAME: WrapperField = WrapperField("TestLastField", FieldType.STRING)
    TIMEPOINT__FIELD_NAME: WrapperField = WrapperField("TimePoint", FieldType.DOUBLE)
    TISSUE__FIELD_NAME: WrapperField = WrapperField("Tissue", FieldType.STRING)
    TISSUESECTIONSPERSLIDE__FIELD_NAME: WrapperField = WrapperField("TissueSectionsPerSlide", FieldType.INTEGER)
    TOTALMASS__FIELD_NAME: WrapperField = WrapperField("TotalMass", FieldType.DOUBLE)
    TUBEBARCODE__FIELD_NAME: WrapperField = WrapperField("TubeBarcode", FieldType.STRING)
    URGENTREQUEST__FIELD_NAME: WrapperField = WrapperField("UrgentRequest", FieldType.SELECTION)
    VARIANT__FIELD_NAME: WrapperField = WrapperField("Variant", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VOLUME__FIELD_NAME: WrapperField = WrapperField("Volume", FieldType.DOUBLE)
    VOLUMEUNITS__FIELD_NAME: WrapperField = WrapperField("VolumeUnits", FieldType.PICKLIST)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_Age_field(self, value: Optional[str]):
        """
        Set data field with field name 'Age' on this record model
        """
        self.set_field_value(self.AGE__FIELD_NAME.field_name, value)

    def get_Age_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Age' from this record model
        """
        return self.get_field_value(self.AGE__FIELD_NAME.field_name)

    def set_AliquotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'AliquotNumber' on this record model
        """
        self.set_field_value(self.ALIQUOTNUMBER__FIELD_NAME.field_name, value)

    def get_AliquotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AliquotNumber' from this record model
        """
        return self.get_field_value(self.ALIQUOTNUMBER__FIELD_NAME.field_name)

    def set_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayType' on this record model
        """
        self.set_field_value(self.ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayType' from this record model
        """
        return self.get_field_value(self.ASSAYTYPE__FIELD_NAME.field_name)

    def set_BlockNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'BlockNumber' on this record model
        """
        self.set_field_value(self.BLOCKNUMBER__FIELD_NAME.field_name, value)

    def get_BlockNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BlockNumber' from this record model
        """
        return self.get_field_value(self.BLOCKNUMBER__FIELD_NAME.field_name)

    def set_C_MyNewDataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_MyNewDataField' on this record model
        """
        self.set_field_value(self.C_MYNEWDATAFIELD__FIELD_NAME.field_name, value)

    def get_C_MyNewDataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_MyNewDataField' from this record model
        """
        return self.get_field_value(self.C_MYNEWDATAFIELD__FIELD_NAME.field_name)

    def set_CollectionDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CollectionDate' on this record model
        """
        self.set_field_value(self.COLLECTIONDATE__FIELD_NAME.field_name, value)

    def get_CollectionDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CollectionDate' from this record model
        """
        return self.get_field_value(self.COLLECTIONDATE__FIELD_NAME.field_name)

    def set_CollectionDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'CollectionDateTime' on this record model
        """
        self.set_field_value(self.COLLECTIONDATETIME__FIELD_NAME.field_name, value)

    def get_CollectionDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CollectionDateTime' from this record model
        """
        return self.get_field_value(self.COLLECTIONDATETIME__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ContainerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ContainerType' on this record model
        """
        self.set_field_value(self.CONTAINERTYPE__FIELD_NAME.field_name, value)

    def get_ContainerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ContainerType' from this record model
        """
        return self.get_field_value(self.CONTAINERTYPE__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateofBirth_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateofBirth' on this record model
        """
        self.set_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name, value)

    def get_DateofBirth_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateofBirth' from this record model
        """
        return self.get_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name)

    def set_Disease_field(self, value: Optional[str]):
        """
        Set data field with field name 'Disease' on this record model
        """
        self.set_field_value(self.DISEASE__FIELD_NAME.field_name, value)

    def get_Disease_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Disease' from this record model
        """
        return self.get_field_value(self.DISEASE__FIELD_NAME.field_name)

    def set_DiseasePathology_field(self, value: Optional[str]):
        """
        Set data field with field name 'DiseasePathology' on this record model
        """
        self.set_field_value(self.DISEASEPATHOLOGY__FIELD_NAME.field_name, value)

    def get_DiseasePathology_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DiseasePathology' from this record model
        """
        return self.get_field_value(self.DISEASEPATHOLOGY__FIELD_NAME.field_name)

    def set_DonorID_field(self, value: Optional[str]):
        """
        Set data field with field name 'DonorID' on this record model
        """
        self.set_field_value(self.DONORID__FIELD_NAME.field_name, value)

    def get_DonorID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DonorID' from this record model
        """
        return self.get_field_value(self.DONORID__FIELD_NAME.field_name)

    def set_ElnbNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElnbNumber' on this record model
        """
        self.set_field_value(self.ELNBNUMBER__FIELD_NAME.field_name, value)

    def get_ElnbNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElnbNumber' from this record model
        """
        return self.get_field_value(self.ELNBNUMBER__FIELD_NAME.field_name)

    def set_ExemplarSampleStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarSampleStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name)

    def set_ExemplarSampleSubtyp_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleSubtyp' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESUBTYP__FIELD_NAME.field_name, value)

    def get_ExemplarSampleSubtyp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleSubtyp' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESUBTYP__FIELD_NAME.field_name)

    def set_ExemplarSampleSubtype_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleSubtype' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESUBTYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleSubtype_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleSubtype' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESUBTYPE__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_FedExTrackingNo_field(self, value: Optional[str]):
        """
        Set data field with field name 'FedExTrackingNo' on this record model
        """
        self.set_field_value(self.FEDEXTRACKINGNO__FIELD_NAME.field_name, value)

    def get_FedExTrackingNo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FedExTrackingNo' from this record model
        """
        return self.get_field_value(self.FEDEXTRACKINGNO__FIELD_NAME.field_name)

    def set_Fermented_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Fermented' on this record model
        """
        self.set_field_value(self.FERMENTED__FIELD_NAME.field_name, value)

    def get_Fermented_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Fermented' from this record model
        """
        return self.get_field_value(self.FERMENTED__FIELD_NAME.field_name)

    def set_Flags_field(self, value: Optional[str]):
        """
        Set data field with field name 'Flags' on this record model
        """
        self.set_field_value(self.FLAGS__FIELD_NAME.field_name, value)

    def get_Flags_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Flags' from this record model
        """
        return self.get_field_value(self.FLAGS__FIELD_NAME.field_name)

    def set_FlowJoGroupSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowJoGroupSideLink' on this record model
        """
        self.set_field_value(self.FLOWJOGROUPSIDELINK__FIELD_NAME.field_name, value)

    def get_FlowJoGroupSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowJoGroupSideLink' from this record model
        """
        return self.get_field_value(self.FLOWJOGROUPSIDELINK__FIELD_NAME.field_name)

    def set_Handling_field(self, value: Optional[str]):
        """
        Set data field with field name 'Handling' on this record model
        """
        self.set_field_value(self.HANDLING__FIELD_NAME.field_name, value)

    def get_Handling_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Handling' from this record model
        """
        return self.get_field_value(self.HANDLING__FIELD_NAME.field_name)

    def set_HoldStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'HoldStatus' on this record model
        """
        self.set_field_value(self.HOLDSTATUS__FIELD_NAME.field_name, value)

    def get_HoldStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HoldStatus' from this record model
        """
        return self.get_field_value(self.HOLDSTATUS__FIELD_NAME.field_name)

    def set_IntField_field(self, value: Optional[int]):
        """
        Set data field with field name 'IntField' on this record model
        """
        self.set_field_value(self.INTFIELD__FIELD_NAME.field_name, value)

    def get_IntField_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IntField' from this record model
        """
        return self.get_field_value(self.INTFIELD__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_IsInvalid_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsInvalid' on this record model
        """
        self.set_field_value(self.ISINVALID__FIELD_NAME.field_name, value)

    def get_IsInvalid_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsInvalid' from this record model
        """
        return self.get_field_value(self.ISINVALID__FIELD_NAME.field_name)

    def set_IsPooled_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPooled' on this record model
        """
        self.set_field_value(self.ISPOOLED__FIELD_NAME.field_name, value)

    def get_IsPooled_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPooled' from this record model
        """
        return self.get_field_value(self.ISPOOLED__FIELD_NAME.field_name)

    def set_LastEditedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastEditedBy' on this record model
        """
        self.set_field_value(self.LASTEDITEDBY__FIELD_NAME.field_name, value)

    def get_LastEditedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastEditedBy' from this record model
        """
        return self.get_field_value(self.LASTEDITEDBY__FIELD_NAME.field_name)

    def set_NGSSingleTemplateProcess_field(self, value: Optional[str]):
        """
        Set data field with field name 'NGSSingleTemplateProcess' on this record model
        """
        self.set_field_value(self.NGSSINGLETEMPLATEPROCESS__FIELD_NAME.field_name, value)

    def get_NGSSingleTemplateProcess_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NGSSingleTemplateProcess' from this record model
        """
        return self.get_field_value(self.NGSSINGLETEMPLATEPROCESS__FIELD_NAME.field_name)

    def set_ObservedCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservedCondition' on this record model
        """
        self.set_field_value(self.OBSERVEDCONDITION__FIELD_NAME.field_name, value)

    def get_ObservedCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservedCondition' from this record model
        """
        return self.get_field_value(self.OBSERVEDCONDITION__FIELD_NAME.field_name)

    def set_Organ_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organ' on this record model
        """
        self.set_field_value(self.ORGAN__FIELD_NAME.field_name, value)

    def get_Organ_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organ' from this record model
        """
        return self.get_field_value(self.ORGAN__FIELD_NAME.field_name)

    def set_Organism_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organism' on this record model
        """
        self.set_field_value(self.ORGANISM__FIELD_NAME.field_name, value)

    def get_Organism_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organism' from this record model
        """
        return self.get_field_value(self.ORGANISM__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PatientID_field(self, value: Optional[str]):
        """
        Set data field with field name 'PatientID' on this record model
        """
        self.set_field_value(self.PATIENTID__FIELD_NAME.field_name, value)

    def get_PatientID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PatientID' from this record model
        """
        return self.get_field_value(self.PATIENTID__FIELD_NAME.field_name)

    def set_PercentRecoveries_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentRecoveries' on this record model
        """
        self.set_field_value(self.PERCENTRECOVERIES__FIELD_NAME.field_name, value)

    def get_PercentRecoveries_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentRecoveries' from this record model
        """
        return self.get_field_value(self.PERCENTRECOVERIES__FIELD_NAME.field_name)

    def set_PicklistField_field(self, value: Optional[str]):
        """
        Set data field with field name 'PicklistField' on this record model
        """
        self.set_field_value(self.PICKLISTFIELD__FIELD_NAME.field_name, value)

    def get_PicklistField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PicklistField' from this record model
        """
        return self.get_field_value(self.PICKLISTFIELD__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_PreviousExemplarStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'PreviousExemplarStatus' on this record model
        """
        self.set_field_value(self.PREVIOUSEXEMPLARSTATUS__FIELD_NAME.field_name, value)

    def get_PreviousExemplarStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PreviousExemplarStatus' from this record model
        """
        return self.get_field_value(self.PREVIOUSEXEMPLARSTATUS__FIELD_NAME.field_name)

    def set_ReadyforRnD_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReadyforRnD' on this record model
        """
        self.set_field_value(self.READYFORRND__FIELD_NAME.field_name, value)

    def get_ReadyforRnD_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReadyforRnD' from this record model
        """
        return self.get_field_value(self.READYFORRND__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SacrificedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SacrificedDate' on this record model
        """
        self.set_field_value(self.SACRIFICEDDATE__FIELD_NAME.field_name, value)

    def get_SacrificedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SacrificedDate' from this record model
        """
        return self.get_field_value(self.SACRIFICEDDATE__FIELD_NAME.field_name)

    def set_SampleExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleExpirationDate' on this record model
        """
        self.set_field_value(self.SAMPLEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_SampleExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleExpirationDate' from this record model
        """
        return self.get_field_value(self.SAMPLEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SamplingSchedule_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingSchedule' on this record model
        """
        self.set_field_value(self.SAMPLINGSCHEDULE__FIELD_NAME.field_name, value)

    def get_SamplingSchedule_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingSchedule' from this record model
        """
        return self.get_field_value(self.SAMPLINGSCHEDULE__FIELD_NAME.field_name)

    def set_SapioSingleTemplateProcess_field(self, value: Optional[str]):
        """
        Set data field with field name 'SapioSingleTemplateProcess' on this record model
        """
        self.set_field_value(self.SAPIOSINGLETEMPLATEPROCESS__FIELD_NAME.field_name, value)

    def get_SapioSingleTemplateProcess_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SapioSingleTemplateProcess' from this record model
        """
        return self.get_field_value(self.SAPIOSINGLETEMPLATEPROCESS__FIELD_NAME.field_name)

    def set_Sex_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sex' on this record model
        """
        self.set_field_value(self.SEX__FIELD_NAME.field_name, value)

    def get_Sex_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sex' from this record model
        """
        return self.get_field_value(self.SEX__FIELD_NAME.field_name)

    def set_StaticDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StaticDate' on this record model
        """
        self.set_field_value(self.STATICDATE__FIELD_NAME.field_name, value)

    def get_StaticDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StaticDate' from this record model
        """
        return self.get_field_value(self.STATICDATE__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StrainHit_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StrainHit' on this record model
        """
        self.set_field_value(self.STRAINHIT__FIELD_NAME.field_name, value)

    def get_StrainHit_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StrainHit' from this record model
        """
        return self.get_field_value(self.STRAINHIT__FIELD_NAME.field_name)

    def set_StudySamplingId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySamplingId' on this record model
        """
        self.set_field_value(self.STUDYSAMPLINGID__FIELD_NAME.field_name, value)

    def get_StudySamplingId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySamplingId' from this record model
        """
        return self.get_field_value(self.STUDYSAMPLINGID__FIELD_NAME.field_name)

    def set_StudySubject_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudySubject' on this record model
        """
        self.set_field_value(self.STUDYSUBJECT__FIELD_NAME.field_name, value)

    def get_StudySubject_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudySubject' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECT__FIELD_NAME.field_name)

    def set_TatProgressStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'TatProgressStatus' on this record model
        """
        self.set_field_value(self.TATPROGRESSSTATUS__FIELD_NAME.field_name, value)

    def get_TatProgressStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TatProgressStatus' from this record model
        """
        return self.get_field_value(self.TATPROGRESSSTATUS__FIELD_NAME.field_name)

    def set_TestConcatField_field(self, value: Optional[str]):
        """
        Set data field with field name 'TestConcatField' on this record model
        """
        self.set_field_value(self.TESTCONCATFIELD__FIELD_NAME.field_name, value)

    def get_TestConcatField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TestConcatField' from this record model
        """
        return self.get_field_value(self.TESTCONCATFIELD__FIELD_NAME.field_name)

    def set_TestLastField_field(self, value: Optional[str]):
        """
        Set data field with field name 'TestLastField' on this record model
        """
        self.set_field_value(self.TESTLASTFIELD__FIELD_NAME.field_name, value)

    def get_TestLastField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TestLastField' from this record model
        """
        return self.get_field_value(self.TESTLASTFIELD__FIELD_NAME.field_name)

    def set_TimePoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'TimePoint' on this record model
        """
        self.set_field_value(self.TIMEPOINT__FIELD_NAME.field_name, value)

    def get_TimePoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TimePoint' from this record model
        """
        return self.get_field_value(self.TIMEPOINT__FIELD_NAME.field_name)

    def set_Tissue_field(self, value: Optional[str]):
        """
        Set data field with field name 'Tissue' on this record model
        """
        self.set_field_value(self.TISSUE__FIELD_NAME.field_name, value)

    def get_Tissue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Tissue' from this record model
        """
        return self.get_field_value(self.TISSUE__FIELD_NAME.field_name)

    def set_TissueSectionsPerSlide_field(self, value: Optional[int]):
        """
        Set data field with field name 'TissueSectionsPerSlide' on this record model
        """
        self.set_field_value(self.TISSUESECTIONSPERSLIDE__FIELD_NAME.field_name, value)

    def get_TissueSectionsPerSlide_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TissueSectionsPerSlide' from this record model
        """
        return self.get_field_value(self.TISSUESECTIONSPERSLIDE__FIELD_NAME.field_name)

    def set_TotalMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalMass' on this record model
        """
        self.set_field_value(self.TOTALMASS__FIELD_NAME.field_name, value)

    def get_TotalMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalMass' from this record model
        """
        return self.get_field_value(self.TOTALMASS__FIELD_NAME.field_name)

    def set_TubeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'TubeBarcode' on this record model
        """
        self.set_field_value(self.TUBEBARCODE__FIELD_NAME.field_name, value)

    def get_TubeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TubeBarcode' from this record model
        """
        return self.get_field_value(self.TUBEBARCODE__FIELD_NAME.field_name)

    def set_UrgentRequest_field(self, value: Optional[str]):
        """
        Set data field with field name 'UrgentRequest' on this record model
        """
        self.set_field_value(self.URGENTREQUEST__FIELD_NAME.field_name, value)

    def get_UrgentRequest_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UrgentRequest' from this record model
        """
        return self.get_field_value(self.URGENTREQUEST__FIELD_NAME.field_name)

    def set_Variant_field(self, value: Optional[str]):
        """
        Set data field with field name 'Variant' on this record model
        """
        self.set_field_value(self.VARIANT__FIELD_NAME.field_name, value)

    def get_Variant_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Variant' from this record model
        """
        return self.get_field_value(self.VARIANT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)

    def set_VolumeUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'VolumeUnits' on this record model
        """
        self.set_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name, value)

    def get_VolumeUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VolumeUnits' from this record model
        """
        return self.get_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name)


class SampleEventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleEvent
    Data Type Display Name: Sample Event (Sample Events)
    Fields: CreatedBy, DataRecordName, DateCreated, Description, EventType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SampleEvent'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EVENTTYPE__FIELD_NAME: WrapperField = WrapperField("EventType", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EventType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventType' on this record model
        """
        self.set_field_value(self.EVENTTYPE__FIELD_NAME.field_name, value)

    def get_EventType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventType' from this record model
        """
        return self.get_field_value(self.EVENTTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleImporterMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleImporterMapping
    Data Type Display Name: Sample Importer Mapping (Sample Importer Mappings)
    Fields: CreatedBy, DataField, DataRecordName, DataType, DateCreated, DisplayName, MappingGroup, MappingName, MappingOrder, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SampleImporterMapping'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATAFIELD__FIELD_NAME: WrapperField = WrapperField("DataField", FieldType.SELECTION)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("DisplayName", FieldType.STRING)
    MAPPINGGROUP__FIELD_NAME: WrapperField = WrapperField("MappingGroup", FieldType.STRING)
    MAPPINGNAME__FIELD_NAME: WrapperField = WrapperField("MappingName", FieldType.STRING)
    MAPPINGORDER__FIELD_NAME: WrapperField = WrapperField("MappingOrder", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataField' on this record model
        """
        self.set_field_value(self.DATAFIELD__FIELD_NAME.field_name, value)

    def get_DataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataField' from this record model
        """
        return self.get_field_value(self.DATAFIELD__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleImporterMappingConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleImporterMappingConfig
    Data Type Display Name: Sample Importer Mapping Configuration (Sample Importer Mapping Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, HandleLibraries, HandlePlateManifest, HandlePools, HandleSampleManifest, MappingGroup, MappingOrder, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SampleImporterMappingConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HANDLELIBRARIES__FIELD_NAME: WrapperField = WrapperField("HandleLibraries", FieldType.BOOLEAN)
    HANDLEPLATEMANIFEST__FIELD_NAME: WrapperField = WrapperField("HandlePlateManifest", FieldType.BOOLEAN)
    HANDLEPOOLS__FIELD_NAME: WrapperField = WrapperField("HandlePools", FieldType.BOOLEAN)
    HANDLESAMPLEMANIFEST__FIELD_NAME: WrapperField = WrapperField("HandleSampleManifest", FieldType.BOOLEAN)
    MAPPINGGROUP__FIELD_NAME: WrapperField = WrapperField("MappingGroup", FieldType.STRING)
    MAPPINGORDER__FIELD_NAME: WrapperField = WrapperField("MappingOrder", FieldType.SHORT)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HandleLibraries_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandleLibraries' on this record model
        """
        self.set_field_value(self.HANDLELIBRARIES__FIELD_NAME.field_name, value)

    def get_HandleLibraries_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandleLibraries' from this record model
        """
        return self.get_field_value(self.HANDLELIBRARIES__FIELD_NAME.field_name)

    def set_HandlePlateManifest_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandlePlateManifest' on this record model
        """
        self.set_field_value(self.HANDLEPLATEMANIFEST__FIELD_NAME.field_name, value)

    def get_HandlePlateManifest_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandlePlateManifest' from this record model
        """
        return self.get_field_value(self.HANDLEPLATEMANIFEST__FIELD_NAME.field_name)

    def set_HandlePools_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandlePools' on this record model
        """
        self.set_field_value(self.HANDLEPOOLS__FIELD_NAME.field_name, value)

    def get_HandlePools_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandlePools' from this record model
        """
        return self.get_field_value(self.HANDLEPOOLS__FIELD_NAME.field_name)

    def set_HandleSampleManifest_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandleSampleManifest' on this record model
        """
        self.set_field_value(self.HANDLESAMPLEMANIFEST__FIELD_NAME.field_name, value)

    def get_HandleSampleManifest_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandleSampleManifest' from this record model
        """
        return self.get_field_value(self.HANDLESAMPLEMANIFEST__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleReceiptModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleReceipt
    Data Type Display Name: Sample Receipt (Sample Receipts)
    Fields: ContainerId, CreatedBy, DataRecordName, DateCreated, Discrepancy, ExemplarSampleType, FailureComment, OtherSampleId, ReceivedBy, ReceivedDate, RejectionReason, SampleComment, SampleId, SampleReceivedRejected, StudyId, VeloxLastModifiedBy, VeloxLastModifiedDate, Volume
    """
    DATA_TYPE_NAME: str = 'SampleReceipt'
    CONTAINERID__FIELD_NAME: WrapperField = WrapperField("ContainerId", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISCREPANCY__FIELD_NAME: WrapperField = WrapperField("Discrepancy", FieldType.STRING)
    EXEMPLARSAMPLETYPE__FIELD_NAME: WrapperField = WrapperField("ExemplarSampleType", FieldType.SELECTION)
    FAILURECOMMENT__FIELD_NAME: WrapperField = WrapperField("FailureComment", FieldType.STRING)
    OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("OtherSampleId", FieldType.STRING)
    RECEIVEDBY__FIELD_NAME: WrapperField = WrapperField("ReceivedBy", FieldType.SELECTION)
    RECEIVEDDATE__FIELD_NAME: WrapperField = WrapperField("ReceivedDate", FieldType.DATE)
    REJECTIONREASON__FIELD_NAME: WrapperField = WrapperField("RejectionReason", FieldType.PICKLIST)
    SAMPLECOMMENT__FIELD_NAME: WrapperField = WrapperField("SampleComment", FieldType.STRING)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.STRING)
    SAMPLERECEIVEDREJECTED__FIELD_NAME: WrapperField = WrapperField("SampleReceivedRejected", FieldType.PICKLIST)
    STUDYID__FIELD_NAME: WrapperField = WrapperField("StudyId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VOLUME__FIELD_NAME: WrapperField = WrapperField("Volume", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ContainerId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ContainerId' on this record model
        """
        self.set_field_value(self.CONTAINERID__FIELD_NAME.field_name, value)

    def get_ContainerId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ContainerId' from this record model
        """
        return self.get_field_value(self.CONTAINERID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Discrepancy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Discrepancy' on this record model
        """
        self.set_field_value(self.DISCREPANCY__FIELD_NAME.field_name, value)

    def get_Discrepancy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Discrepancy' from this record model
        """
        return self.get_field_value(self.DISCREPANCY__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_FailureComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureComment' on this record model
        """
        self.set_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name, value)

    def get_FailureComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureComment' from this record model
        """
        return self.get_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_ReceivedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReceivedBy' on this record model
        """
        self.set_field_value(self.RECEIVEDBY__FIELD_NAME.field_name, value)

    def get_ReceivedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReceivedBy' from this record model
        """
        return self.get_field_value(self.RECEIVEDBY__FIELD_NAME.field_name)

    def set_ReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReceivedDate' on this record model
        """
        self.set_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_ReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReceivedDate' from this record model
        """
        return self.get_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name)

    def set_RejectionReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'RejectionReason' on this record model
        """
        self.set_field_value(self.REJECTIONREASON__FIELD_NAME.field_name, value)

    def get_RejectionReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RejectionReason' from this record model
        """
        return self.get_field_value(self.REJECTIONREASON__FIELD_NAME.field_name)

    def set_SampleComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleComment' on this record model
        """
        self.set_field_value(self.SAMPLECOMMENT__FIELD_NAME.field_name, value)

    def get_SampleComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleComment' from this record model
        """
        return self.get_field_value(self.SAMPLECOMMENT__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleReceivedRejected_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceivedRejected' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVEDREJECTED__FIELD_NAME.field_name, value)

    def get_SampleReceivedRejected_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceivedRejected' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVEDREJECTED__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)


class SampleRegistrationAssociationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleRegistrationAssociation
    Data Type Display Name: Sample Registration Data Type Association (Sample Registration Data Type Associations)
    Fields: CreatedBy, DataRecordName, DataType, DataTypeFilter, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    Data Types to associate registered samples to
<!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'SampleRegistrationAssociation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.SELECTION)
    DATATYPEFILTER__FIELD_NAME: WrapperField = WrapperField("DataTypeFilter", FieldType.STRING)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def set_DataTypeFilter_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeFilter' on this record model
        """
        self.set_field_value(self.DATATYPEFILTER__FIELD_NAME.field_name, value)

    def get_DataTypeFilter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeFilter' from this record model
        """
        return self.get_field_value(self.DATATYPEFILTER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleRegistrationSetupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleRegistrationSetup
    Data Type Display Name: Sample Registration Setup (Sample Registration Setups)
    Fields: CreatedBy, DataFieldName, DataRecordName, DataTypeField, DateCreated, DefaultToExperimentParent, ElnEntyAssociation, ExperimentEntryId, MappingToUse, NotebookExperimentId, NumberOfDigits, PrefixField, SampleLayoutToUse, SampleRegistrationType, SamplesToCreate, SampleTransfer, StartNumber, SuffixField, VeloxLastModifiedBy, VeloxLastModifiedDate
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: str = 'SampleRegistrationSetup'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATAFIELDNAME__FIELD_NAME: WrapperField = WrapperField("DataFieldName", FieldType.SELECTION)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPEFIELD__FIELD_NAME: WrapperField = WrapperField("DataTypeField", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEFAULTTOEXPERIMENTPARENT__FIELD_NAME: WrapperField = WrapperField("DefaultToExperimentParent", FieldType.BOOLEAN)
    ELNENTYASSOCIATION__FIELD_NAME: WrapperField = WrapperField("ElnEntyAssociation", FieldType.SELECTION)
    EXPERIMENTENTRYID__FIELD_NAME: WrapperField = WrapperField("ExperimentEntryId", FieldType.LONG)
    MAPPINGTOUSE__FIELD_NAME: WrapperField = WrapperField("MappingToUse", FieldType.SELECTION)
    NOTEBOOKEXPERIMENTID__FIELD_NAME: WrapperField = WrapperField("NotebookExperimentId", FieldType.LONG)
    NUMBEROFDIGITS__FIELD_NAME: WrapperField = WrapperField("NumberOfDigits", FieldType.INTEGER)
    PREFIXFIELD__FIELD_NAME: WrapperField = WrapperField("PrefixField", FieldType.STRING)
    SAMPLELAYOUTTOUSE__FIELD_NAME: WrapperField = WrapperField("SampleLayoutToUse", FieldType.SELECTION)
    SAMPLEREGISTRATIONTYPE__FIELD_NAME: WrapperField = WrapperField("SampleRegistrationType", FieldType.SELECTION)
    SAMPLESTOCREATE__FIELD_NAME: WrapperField = WrapperField("SamplesToCreate", FieldType.LONG)
    SAMPLETRANSFER__FIELD_NAME: WrapperField = WrapperField("SampleTransfer", FieldType.SELECTION)
    STARTNUMBER__FIELD_NAME: WrapperField = WrapperField("StartNumber", FieldType.INTEGER)
    SUFFIXFIELD__FIELD_NAME: WrapperField = WrapperField("SuffixField", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataFieldName' on this record model
        """
        self.set_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name, value)

    def get_DataFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataFieldName' from this record model
        """
        return self.get_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name)

    def set_DataTypeField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeField' on this record model
        """
        self.set_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name, value)

    def get_DataTypeField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeField' from this record model
        """
        return self.get_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultToExperimentParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DefaultToExperimentParent' on this record model
        """
        self.set_field_value(self.DEFAULTTOEXPERIMENTPARENT__FIELD_NAME.field_name, value)

    def get_DefaultToExperimentParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DefaultToExperimentParent' from this record model
        """
        return self.get_field_value(self.DEFAULTTOEXPERIMENTPARENT__FIELD_NAME.field_name)

    def set_ElnEntyAssociation_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElnEntyAssociation' on this record model
        """
        self.set_field_value(self.ELNENTYASSOCIATION__FIELD_NAME.field_name, value)

    def get_ElnEntyAssociation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElnEntyAssociation' from this record model
        """
        return self.get_field_value(self.ELNENTYASSOCIATION__FIELD_NAME.field_name)

    def set_ExperimentEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentEntryId' on this record model
        """
        self.set_field_value(self.EXPERIMENTENTRYID__FIELD_NAME.field_name, value)

    def get_ExperimentEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentEntryId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTENTRYID__FIELD_NAME.field_name)

    def set_MappingToUse_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingToUse' on this record model
        """
        self.set_field_value(self.MAPPINGTOUSE__FIELD_NAME.field_name, value)

    def get_MappingToUse_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingToUse' from this record model
        """
        return self.get_field_value(self.MAPPINGTOUSE__FIELD_NAME.field_name)

    def set_NotebookExperimentId_field(self, value: Optional[int]):
        """
        Set data field with field name 'NotebookExperimentId' on this record model
        """
        self.set_field_value(self.NOTEBOOKEXPERIMENTID__FIELD_NAME.field_name, value)

    def get_NotebookExperimentId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NotebookExperimentId' from this record model
        """
        return self.get_field_value(self.NOTEBOOKEXPERIMENTID__FIELD_NAME.field_name)

    def set_NumberOfDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfDigits' on this record model
        """
        self.set_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name, value)

    def get_NumberOfDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfDigits' from this record model
        """
        return self.get_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name)

    def set_PrefixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'PrefixField' on this record model
        """
        self.set_field_value(self.PREFIXFIELD__FIELD_NAME.field_name, value)

    def get_PrefixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PrefixField' from this record model
        """
        return self.get_field_value(self.PREFIXFIELD__FIELD_NAME.field_name)

    def set_SampleLayoutToUse_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleLayoutToUse' on this record model
        """
        self.set_field_value(self.SAMPLELAYOUTTOUSE__FIELD_NAME.field_name, value)

    def get_SampleLayoutToUse_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleLayoutToUse' from this record model
        """
        return self.get_field_value(self.SAMPLELAYOUTTOUSE__FIELD_NAME.field_name)

    def set_SampleRegistrationType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleRegistrationType' on this record model
        """
        self.set_field_value(self.SAMPLEREGISTRATIONTYPE__FIELD_NAME.field_name, value)

    def get_SampleRegistrationType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleRegistrationType' from this record model
        """
        return self.get_field_value(self.SAMPLEREGISTRATIONTYPE__FIELD_NAME.field_name)

    def set_SamplesToCreate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplesToCreate' on this record model
        """
        self.set_field_value(self.SAMPLESTOCREATE__FIELD_NAME.field_name, value)

    def get_SamplesToCreate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplesToCreate' from this record model
        """
        return self.get_field_value(self.SAMPLESTOCREATE__FIELD_NAME.field_name)

    def set_SampleTransfer_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleTransfer' on this record model
        """
        self.set_field_value(self.SAMPLETRANSFER__FIELD_NAME.field_name, value)

    def get_SampleTransfer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleTransfer' from this record model
        """
        return self.get_field_value(self.SAMPLETRANSFER__FIELD_NAME.field_name)

    def set_StartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartNumber' on this record model
        """
        self.set_field_value(self.STARTNUMBER__FIELD_NAME.field_name, value)

    def get_StartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartNumber' from this record model
        """
        return self.get_field_value(self.STARTNUMBER__FIELD_NAME.field_name)

    def set_SuffixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SuffixField' on this record model
        """
        self.set_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name, value)

    def get_SuffixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SuffixField' from this record model
        """
        return self.get_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SamplingExceptionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SamplingException
    Data Type Display Name: Sampling Exception (Sampling Exceptions)
    Fields: CreatedBy, DataRecordName, DateCreated, NumberToExclude, SamplingResultRecordIdSet, SubjectRecordId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SamplingException'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    NUMBERTOEXCLUDE__FIELD_NAME: WrapperField = WrapperField("NumberToExclude", FieldType.INTEGER)
    SAMPLINGRESULTRECORDIDSET__FIELD_NAME: WrapperField = WrapperField("SamplingResultRecordIdSet", FieldType.STRING)
    SUBJECTRECORDID__FIELD_NAME: WrapperField = WrapperField("SubjectRecordId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_NumberToExclude_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberToExclude' on this record model
        """
        self.set_field_value(self.NUMBERTOEXCLUDE__FIELD_NAME.field_name, value)

    def get_NumberToExclude_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberToExclude' from this record model
        """
        return self.get_field_value(self.NUMBERTOEXCLUDE__FIELD_NAME.field_name)

    def set_SamplingResultRecordIdSet_field(self, value: Optional[str]):
        """
        Set data field with field name 'SamplingResultRecordIdSet' on this record model
        """
        self.set_field_value(self.SAMPLINGRESULTRECORDIDSET__FIELD_NAME.field_name, value)

    def get_SamplingResultRecordIdSet_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SamplingResultRecordIdSet' from this record model
        """
        return self.get_field_value(self.SAMPLINGRESULTRECORDIDSET__FIELD_NAME.field_name)

    def set_SubjectRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectRecordId' on this record model
        """
        self.set_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name, value)

    def get_SubjectRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectRecordId' from this record model
        """
        return self.get_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SamplingResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SamplingResult
    Data Type Display Name: Sampling Result (Sampling Results)
    Fields: BiologicalMatrix, CollectionComments, CollectionResult, CreatedBy, DataRecordName, DateCompleted, DateCreated, SampleRecordId, SamplingRecordId, SamplingSplitNumber, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SamplingResult'
    BIOLOGICALMATRIX__FIELD_NAME: WrapperField = WrapperField("BiologicalMatrix", FieldType.SELECTION)
    COLLECTIONCOMMENTS__FIELD_NAME: WrapperField = WrapperField("CollectionComments", FieldType.STRING)
    COLLECTIONRESULT__FIELD_NAME: WrapperField = WrapperField("CollectionResult", FieldType.PICKLIST)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECOMPLETED__FIELD_NAME: WrapperField = WrapperField("DateCompleted", FieldType.DATE)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SAMPLERECORDID__FIELD_NAME: WrapperField = WrapperField("SampleRecordId", FieldType.LONG)
    SAMPLINGRECORDID__FIELD_NAME: WrapperField = WrapperField("SamplingRecordId", FieldType.LONG)
    SAMPLINGSPLITNUMBER__FIELD_NAME: WrapperField = WrapperField("SamplingSplitNumber", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalMatrix' on this record model
        """
        self.set_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def set_CollectionComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'CollectionComments' on this record model
        """
        self.set_field_value(self.COLLECTIONCOMMENTS__FIELD_NAME.field_name, value)

    def get_CollectionComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CollectionComments' from this record model
        """
        return self.get_field_value(self.COLLECTIONCOMMENTS__FIELD_NAME.field_name)

    def set_CollectionResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'CollectionResult' on this record model
        """
        self.set_field_value(self.COLLECTIONRESULT__FIELD_NAME.field_name, value)

    def get_CollectionResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CollectionResult' from this record model
        """
        return self.get_field_value(self.COLLECTIONRESULT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_SamplingRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingRecordId' on this record model
        """
        self.set_field_value(self.SAMPLINGRECORDID__FIELD_NAME.field_name, value)

    def get_SamplingRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLINGRECORDID__FIELD_NAME.field_name)

    def set_SamplingSplitNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingSplitNumber' on this record model
        """
        self.set_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name, value)

    def get_SamplingSplitNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingSplitNumber' from this record model
        """
        return self.get_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SamplingScheduleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SamplingSchedule
    Data Type Display Name: Sampling Schedule (Sampling Schedules)
    Fields: BiologicalMatrix, CreatedBy, DataRecordName, DateCreated, GroupId, IsPredose, SampleCount, SamplingMilliseconds, TimepointDuration, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SamplingSchedule'
    BIOLOGICALMATRIX__FIELD_NAME: WrapperField = WrapperField("BiologicalMatrix", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GROUPID__FIELD_NAME: WrapperField = WrapperField("GroupId", FieldType.INTEGER)
    ISPREDOSE__FIELD_NAME: WrapperField = WrapperField("IsPredose", FieldType.BOOLEAN)
    SAMPLECOUNT__FIELD_NAME: WrapperField = WrapperField("SampleCount", FieldType.INTEGER)
    SAMPLINGMILLISECONDS__FIELD_NAME: WrapperField = WrapperField("SamplingMilliseconds", FieldType.LONG)
    TIMEPOINTDURATION__FIELD_NAME: WrapperField = WrapperField("TimepointDuration", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalMatrix' on this record model
        """
        self.set_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupId_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupId' on this record model
        """
        self.set_field_value(self.GROUPID__FIELD_NAME.field_name, value)

    def get_GroupId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupId' from this record model
        """
        return self.get_field_value(self.GROUPID__FIELD_NAME.field_name)

    def set_IsPredose_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPredose' on this record model
        """
        self.set_field_value(self.ISPREDOSE__FIELD_NAME.field_name, value)

    def get_IsPredose_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPredose' from this record model
        """
        return self.get_field_value(self.ISPREDOSE__FIELD_NAME.field_name)

    def set_SampleCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleCount' on this record model
        """
        self.set_field_value(self.SAMPLECOUNT__FIELD_NAME.field_name, value)

    def get_SampleCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleCount' from this record model
        """
        return self.get_field_value(self.SAMPLECOUNT__FIELD_NAME.field_name)

    def set_SamplingMilliseconds_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingMilliseconds' on this record model
        """
        self.set_field_value(self.SAMPLINGMILLISECONDS__FIELD_NAME.field_name, value)

    def get_SamplingMilliseconds_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingMilliseconds' from this record model
        """
        return self.get_field_value(self.SAMPLINGMILLISECONDS__FIELD_NAME.field_name)

    def set_TimepointDuration_field(self, value: Optional[int]):
        """
        Set data field with field name 'TimepointDuration' on this record model
        """
        self.set_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name, value)

    def get_TimepointDuration_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TimepointDuration' from this record model
        """
        return self.get_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SavedChemImportJSONModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SavedChemImportJSON
    Data Type Display Name: Saved Chem Import JSON (Saved Chem Import JSONs)
    Fields: ChemImportConfigJSON, CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SavedChemImportJSON'
    CHEMIMPORTCONFIGJSON__FIELD_NAME: WrapperField = WrapperField("ChemImportConfigJSON", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChemImportConfigJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemImportConfigJSON' on this record model
        """
        self.set_field_value(self.CHEMIMPORTCONFIGJSON__FIELD_NAME.field_name, value)

    def get_ChemImportConfigJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemImportConfigJSON' from this record model
        """
        return self.get_field_value(self.CHEMIMPORTCONFIGJSON__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccAndPrecCriteriaInterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccAndPrecCriteriaInter
    Data Type Display Name: Accuracy and Precision Inter Criteria (Accuracy and Precision Inter Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxCVInter, SBA_MaxMeanBiasInter, SBA_MinRatioLQCOverLLOQ, SBA_MinRunInter, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AccAndPrecCriteriaInter'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXCVINTER__FIELD_NAME: WrapperField = WrapperField("SBA_MaxCVInter", FieldType.DOUBLE)
    SBA_MAXMEANBIASINTER__FIELD_NAME: WrapperField = WrapperField("SBA_MaxMeanBiasInter", FieldType.DOUBLE)
    SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_MinRatioLQCOverLLOQ", FieldType.DOUBLE)
    SBA_MINRUNINTER__FIELD_NAME: WrapperField = WrapperField("SBA_MinRunInter", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxCVInter_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCVInter' on this record model
        """
        self.set_field_value(self.SBA_MAXCVINTER__FIELD_NAME.field_name, value)

    def get_SBA_MaxCVInter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCVInter' from this record model
        """
        return self.get_field_value(self.SBA_MAXCVINTER__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasInter_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasInter' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASINTER__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasInter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasInter' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASINTER__FIELD_NAME.field_name)

    def set_SBA_MinRatioLQCOverLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinRatioLQCOverLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MinRatioLQCOverLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinRatioLQCOverLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME.field_name)

    def set_SBA_MinRunInter_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinRunInter' on this record model
        """
        self.set_field_value(self.SBA_MINRUNINTER__FIELD_NAME.field_name, value)

    def get_SBA_MinRunInter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinRunInter' from this record model
        """
        return self.get_field_value(self.SBA_MINRUNINTER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccAndPrecInterResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccAndPrecInterResults
    Data Type Display Name: Accuracy and Precision Inter Results (Accuracy and Precision Inter Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AllLevelsPassCVCheckInter, SBA_AllLevelsPassMeanBiasInter, SBA_AnalyteName, SBA_RunInter, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_AccAndPrecInterResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_AccAndPrecInterResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ALLLEVELSPASSCVCHECKINTER__FIELD_NAME: WrapperField = WrapperField("SBA_AllLevelsPassCVCheckInter", FieldType.BOOLEAN)
    SBA_ALLLEVELSPASSMEANBIASINTER__FIELD_NAME: WrapperField = WrapperField("SBA_AllLevelsPassMeanBiasInter", FieldType.BOOLEAN)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.SELECTION)
    SBA_RUNINTER__FIELD_NAME: WrapperField = WrapperField("SBA_RunInter", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassCVCheckInter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassCVCheckInter' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTER__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassCVCheckInter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassCVCheckInter' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTER__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassMeanBiasInter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassMeanBiasInter' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTER__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassMeanBiasInter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassMeanBiasInter' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTER__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_RunInter_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RunInter' on this record model
        """
        self.set_field_value(self.SBA_RUNINTER__FIELD_NAME.field_name, value)

    def get_SBA_RunInter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RunInter' from this record model
        """
        return self.get_field_value(self.SBA_RUNINTER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccAndPrecIntraResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccAndPrecIntraResults
    Data Type Display Name: Accuracy and Precision Intra Results (Accuracy and Precision Intra Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AllLevelsPassCVCheckIntra, SBA_AllLevelsPassMeanBiasIntra, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_AccAndPrecIntraResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_AccAndPrecIntraResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME: WrapperField = WrapperField("SBA_AllLevelsPassCVCheckIntra", FieldType.BOOLEAN)
    SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME: WrapperField = WrapperField("SBA_AllLevelsPassMeanBiasIntra", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassCVCheckIntra_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassCVCheckIntra' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassCVCheckIntra_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassCVCheckIntra' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassMeanBiasIntra_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassMeanBiasIntra_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccuracyAndPrecCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccuracyAndPrecCriteria
    Data Type Display Name: Accuracy and Precision Criteria (Accuracy and Precision Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxCVIntra, SBA_MaxMeanBiasIntra, SBA_MinReplicateNumIntra, VeloxLastModifiedBy, VeloxLastModifiedDate
    The AccuracyAndPrecisionCriteria Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_AccuracyAndPrecCriteria'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXCVINTRA__FIELD_NAME: WrapperField = WrapperField("SBA_MaxCVIntra", FieldType.DOUBLE)
    SBA_MAXMEANBIASINTRA__FIELD_NAME: WrapperField = WrapperField("SBA_MaxMeanBiasIntra", FieldType.DOUBLE)
    SBA_MINREPLICATENUMINTRA__FIELD_NAME: WrapperField = WrapperField("SBA_MinReplicateNumIntra", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxCVIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCVIntra' on this record model
        """
        self.set_field_value(self.SBA_MAXCVINTRA__FIELD_NAME.field_name, value)

    def get_SBA_MaxCVIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCVIntra' from this record model
        """
        return self.get_field_value(self.SBA_MAXCVINTRA__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name)

    def set_SBA_MinReplicateNumIntra_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinReplicateNumIntra' on this record model
        """
        self.set_field_value(self.SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name, value)

    def get_SBA_MinReplicateNumIntra_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinReplicateNumIntra' from this record model
        """
        return self.get_field_value(self.SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AnalyteConcentrationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AnalyteConcentration
    Data Type Display Name: Analyte Concentration (Analyte Concentrations)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AnalyteConcentration, SBA_AnalyteName, SBA_AssayAnalyteRecordId, SBA_ConcentrationUnit, SBA_ControlName, SBA_FlagPctDiff, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AnalyteConcentration'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ANALYTECONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteConcentration", FieldType.DOUBLE)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.SELECTION)
    SBA_ASSAYANALYTERECORDID__FIELD_NAME: WrapperField = WrapperField("SBA_AssayAnalyteRecordId", FieldType.LONG)
    SBA_CONCENTRATIONUNIT__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationUnit", FieldType.SELECTION)
    SBA_CONTROLNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ControlName", FieldType.STRING)
    SBA_FLAGPCTDIFF__FIELD_NAME: WrapperField = WrapperField("SBA_FlagPctDiff", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AnalyteConcentration' on this record model
        """
        self.set_field_value(self.SBA_ANALYTECONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AnalyteConcentration' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTECONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayAnalyteRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AssayAnalyteRecordId' on this record model
        """
        self.set_field_value(self.SBA_ASSAYANALYTERECORDID__FIELD_NAME.field_name, value)

    def get_SBA_AssayAnalyteRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AssayAnalyteRecordId' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYANALYTERECORDID__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnit' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnit' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name)

    def set_SBA_ControlName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlName' on this record model
        """
        self.set_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name, value)

    def get_SBA_ControlName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlName' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name)

    def set_SBA_FlagPctDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FlagPctDiff' on this record model
        """
        self.set_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name, value)

    def get_SBA_FlagPctDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FlagPctDiff' from this record model
        """
        return self.get_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayAnalyteModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayAnalyte
    Data Type Display Name: Assay Analyte (Assay Analytes)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AnalyteName, SBA_InternalStandard, SBA_IsrDiffPercentLimit, SBA_LLOQ, SBA_RelatedAnalyteDataTypeName, SBA_RelatedAnalyteRecordId, SBA_ULOQ, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayAnalyte'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.STRING)
    SBA_INTERNALSTANDARD__FIELD_NAME: WrapperField = WrapperField("SBA_InternalStandard", FieldType.STRING)
    SBA_ISRDIFFPERCENTLIMIT__FIELD_NAME: WrapperField = WrapperField("SBA_IsrDiffPercentLimit", FieldType.DOUBLE)
    SBA_LLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_LLOQ", FieldType.DOUBLE)
    SBA_RELATEDANALYTEDATATYPENAME__FIELD_NAME: WrapperField = WrapperField("SBA_RelatedAnalyteDataTypeName", FieldType.STRING)
    SBA_RELATEDANALYTERECORDID__FIELD_NAME: WrapperField = WrapperField("SBA_RelatedAnalyteRecordId", FieldType.LONG)
    SBA_ULOQ__FIELD_NAME: WrapperField = WrapperField("SBA_ULOQ", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_InternalStandard_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InternalStandard' on this record model
        """
        self.set_field_value(self.SBA_INTERNALSTANDARD__FIELD_NAME.field_name, value)

    def get_SBA_InternalStandard_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InternalStandard' from this record model
        """
        return self.get_field_value(self.SBA_INTERNALSTANDARD__FIELD_NAME.field_name)

    def set_SBA_IsrDiffPercentLimit_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_IsrDiffPercentLimit' on this record model
        """
        self.set_field_value(self.SBA_ISRDIFFPERCENTLIMIT__FIELD_NAME.field_name, value)

    def get_SBA_IsrDiffPercentLimit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_IsrDiffPercentLimit' from this record model
        """
        return self.get_field_value(self.SBA_ISRDIFFPERCENTLIMIT__FIELD_NAME.field_name)

    def set_SBA_LLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_LLOQ' on this record model
        """
        self.set_field_value(self.SBA_LLOQ__FIELD_NAME.field_name, value)

    def get_SBA_LLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_LLOQ' from this record model
        """
        return self.get_field_value(self.SBA_LLOQ__FIELD_NAME.field_name)

    def set_SBA_RelatedAnalyteDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RelatedAnalyteDataTypeName' on this record model
        """
        self.set_field_value(self.SBA_RELATEDANALYTEDATATYPENAME__FIELD_NAME.field_name, value)

    def get_SBA_RelatedAnalyteDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RelatedAnalyteDataTypeName' from this record model
        """
        return self.get_field_value(self.SBA_RELATEDANALYTEDATATYPENAME__FIELD_NAME.field_name)

    def set_SBA_RelatedAnalyteRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RelatedAnalyteRecordId' on this record model
        """
        self.set_field_value(self.SBA_RELATEDANALYTERECORDID__FIELD_NAME.field_name, value)

    def get_SBA_RelatedAnalyteRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RelatedAnalyteRecordId' from this record model
        """
        return self.get_field_value(self.SBA_RELATEDANALYTERECORDID__FIELD_NAME.field_name)

    def set_SBA_ULOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ULOQ' on this record model
        """
        self.set_field_value(self.SBA_ULOQ__FIELD_NAME.field_name, value)

    def get_SBA_ULOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ULOQ' from this record model
        """
        return self.get_field_value(self.SBA_ULOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayInstrumentConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayInstrumentConfig
    Data Type Display Name: Assay Instrument Configuration (Assay Instrument Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AnalyteNameMapping, SBA_AssayDateMapping, SBA_AssayInstrumentType, SBA_ConcentrationMapping, SBA_ConfigurationName, SBA_CustomParserPluginPath, SBA_ExpectedConcentrationUnits, SBA_FirstWellPositionColumn, SBA_FirstWellPositionRow, SBA_InstrumentOutputFileLayout, SBA_InstrumentOutputFileType, SBA_InstrumentResponseMapping, SBA_IsActive, SBA_IsResponseMapping, SBA_PlateIdCellColumn, SBA_PlateIdCellRow, SBA_PlateIdMapping, SBA_RetentionMapping, SBA_RunIdMapping, SBA_SampleIdMapping, SBA_WellPositionMapping, SBA_WellPositionRepresentation, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayInstrumentConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ANALYTENAMEMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteNameMapping", FieldType.STRING)
    SBA_ASSAYDATEMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_AssayDateMapping", FieldType.STRING)
    SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_AssayInstrumentType", FieldType.PICKLIST)
    SBA_CONCENTRATIONMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationMapping", FieldType.STRING)
    SBA_CONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ConfigurationName", FieldType.STRING)
    SBA_CUSTOMPARSERPLUGINPATH__FIELD_NAME: WrapperField = WrapperField("SBA_CustomParserPluginPath", FieldType.SELECTION)
    SBA_EXPECTEDCONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("SBA_ExpectedConcentrationUnits", FieldType.PICKLIST)
    SBA_FIRSTWELLPOSITIONCOLUMN__FIELD_NAME: WrapperField = WrapperField("SBA_FirstWellPositionColumn", FieldType.INTEGER)
    SBA_FIRSTWELLPOSITIONROW__FIELD_NAME: WrapperField = WrapperField("SBA_FirstWellPositionRow", FieldType.INTEGER)
    SBA_INSTRUMENTOUTPUTFILELAYOUT__FIELD_NAME: WrapperField = WrapperField("SBA_InstrumentOutputFileLayout", FieldType.PICKLIST)
    SBA_INSTRUMENTOUTPUTFILETYPE__FIELD_NAME: WrapperField = WrapperField("SBA_InstrumentOutputFileType", FieldType.STRING)
    SBA_INSTRUMENTRESPONSEMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_InstrumentResponseMapping", FieldType.STRING)
    SBA_ISACTIVE__FIELD_NAME: WrapperField = WrapperField("SBA_IsActive", FieldType.BOOLEAN)
    SBA_ISRESPONSEMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_IsResponseMapping", FieldType.STRING)
    SBA_PLATEIDCELLCOLUMN__FIELD_NAME: WrapperField = WrapperField("SBA_PlateIdCellColumn", FieldType.INTEGER)
    SBA_PLATEIDCELLROW__FIELD_NAME: WrapperField = WrapperField("SBA_PlateIdCellRow", FieldType.INTEGER)
    SBA_PLATEIDMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_PlateIdMapping", FieldType.STRING)
    SBA_RETENTIONMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_RetentionMapping", FieldType.STRING)
    SBA_RUNIDMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_RunIdMapping", FieldType.STRING)
    SBA_SAMPLEIDMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_SampleIdMapping", FieldType.STRING)
    SBA_WELLPOSITIONMAPPING__FIELD_NAME: WrapperField = WrapperField("SBA_WellPositionMapping", FieldType.STRING)
    SBA_WELLPOSITIONREPRESENTATION__FIELD_NAME: WrapperField = WrapperField("SBA_WellPositionRepresentation", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteNameMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteNameMapping' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAMEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteNameMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteNameMapping' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAMEMAPPING__FIELD_NAME.field_name)

    def set_SBA_AssayDateMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayDateMapping' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDATEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_AssayDateMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayDateMapping' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDATEMAPPING__FIELD_NAME.field_name)

    def set_SBA_AssayInstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayInstrumentType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayInstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayInstrumentType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_SBA_ConcentrationMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationMapping' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationMapping' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONMAPPING__FIELD_NAME.field_name)

    def set_SBA_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConfigurationName' on this record model
        """
        self.set_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_SBA_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConfigurationName' from this record model
        """
        return self.get_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name)

    def set_SBA_CustomParserPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CustomParserPluginPath' on this record model
        """
        self.set_field_value(self.SBA_CUSTOMPARSERPLUGINPATH__FIELD_NAME.field_name, value)

    def get_SBA_CustomParserPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CustomParserPluginPath' from this record model
        """
        return self.get_field_value(self.SBA_CUSTOMPARSERPLUGINPATH__FIELD_NAME.field_name)

    def set_SBA_ExpectedConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ExpectedConcentrationUnits' on this record model
        """
        self.set_field_value(self.SBA_EXPECTEDCONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_SBA_ExpectedConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ExpectedConcentrationUnits' from this record model
        """
        return self.get_field_value(self.SBA_EXPECTEDCONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_SBA_FirstWellPositionColumn_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_FirstWellPositionColumn' on this record model
        """
        self.set_field_value(self.SBA_FIRSTWELLPOSITIONCOLUMN__FIELD_NAME.field_name, value)

    def get_SBA_FirstWellPositionColumn_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_FirstWellPositionColumn' from this record model
        """
        return self.get_field_value(self.SBA_FIRSTWELLPOSITIONCOLUMN__FIELD_NAME.field_name)

    def set_SBA_FirstWellPositionRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_FirstWellPositionRow' on this record model
        """
        self.set_field_value(self.SBA_FIRSTWELLPOSITIONROW__FIELD_NAME.field_name, value)

    def get_SBA_FirstWellPositionRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_FirstWellPositionRow' from this record model
        """
        return self.get_field_value(self.SBA_FIRSTWELLPOSITIONROW__FIELD_NAME.field_name)

    def set_SBA_InstrumentOutputFileLayout_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentOutputFileLayout' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTOUTPUTFILELAYOUT__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentOutputFileLayout_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentOutputFileLayout' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTOUTPUTFILELAYOUT__FIELD_NAME.field_name)

    def set_SBA_InstrumentOutputFileType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentOutputFileType' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTOUTPUTFILETYPE__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentOutputFileType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentOutputFileType' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTOUTPUTFILETYPE__FIELD_NAME.field_name)

    def set_SBA_InstrumentResponseMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentResponseMapping' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTRESPONSEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentResponseMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentResponseMapping' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTRESPONSEMAPPING__FIELD_NAME.field_name)

    def set_SBA_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsActive' on this record model
        """
        self.set_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name, value)

    def get_SBA_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsActive' from this record model
        """
        return self.get_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name)

    def set_SBA_IsResponseMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_IsResponseMapping' on this record model
        """
        self.set_field_value(self.SBA_ISRESPONSEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_IsResponseMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_IsResponseMapping' from this record model
        """
        return self.get_field_value(self.SBA_ISRESPONSEMAPPING__FIELD_NAME.field_name)

    def set_SBA_PlateIdCellColumn_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateIdCellColumn' on this record model
        """
        self.set_field_value(self.SBA_PLATEIDCELLCOLUMN__FIELD_NAME.field_name, value)

    def get_SBA_PlateIdCellColumn_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateIdCellColumn' from this record model
        """
        return self.get_field_value(self.SBA_PLATEIDCELLCOLUMN__FIELD_NAME.field_name)

    def set_SBA_PlateIdCellRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateIdCellRow' on this record model
        """
        self.set_field_value(self.SBA_PLATEIDCELLROW__FIELD_NAME.field_name, value)

    def get_SBA_PlateIdCellRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateIdCellRow' from this record model
        """
        return self.get_field_value(self.SBA_PLATEIDCELLROW__FIELD_NAME.field_name)

    def set_SBA_PlateIdMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateIdMapping' on this record model
        """
        self.set_field_value(self.SBA_PLATEIDMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_PlateIdMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateIdMapping' from this record model
        """
        return self.get_field_value(self.SBA_PLATEIDMAPPING__FIELD_NAME.field_name)

    def set_SBA_RetentionMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RetentionMapping' on this record model
        """
        self.set_field_value(self.SBA_RETENTIONMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_RetentionMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RetentionMapping' from this record model
        """
        return self.get_field_value(self.SBA_RETENTIONMAPPING__FIELD_NAME.field_name)

    def set_SBA_RunIdMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunIdMapping' on this record model
        """
        self.set_field_value(self.SBA_RUNIDMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_RunIdMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunIdMapping' from this record model
        """
        return self.get_field_value(self.SBA_RUNIDMAPPING__FIELD_NAME.field_name)

    def set_SBA_SampleIdMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleIdMapping' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEIDMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_SampleIdMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleIdMapping' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEIDMAPPING__FIELD_NAME.field_name)

    def set_SBA_WellPositionMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositionMapping' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_WellPositionMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositionMapping' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONMAPPING__FIELD_NAME.field_name)

    def set_SBA_WellPositionRepresentation_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositionRepresentation' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONREPRESENTATION__FIELD_NAME.field_name, value)

    def get_SBA_WellPositionRepresentation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositionRepresentation' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONREPRESENTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayInstrumentExampleFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayInstrumentExampleFile
    Data Type Display Name: Assay Instrument Example File (Assay Instrument Example Files)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayInstrumentExampleFile'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayPlateTemplateWellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayPlateTemplateWell
    Data Type Display Name: Assay Plate Template Well (Assay Plate Template Wells)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_ColPosition, SBA_ControlName, SBA_ControlType, SBA_PlateColumns, SBA_PlateNumber, SBA_PlateRows, SBA_PlateTemplateName, SBA_RowPosition, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayPlateTemplateWell'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_COLPOSITION__FIELD_NAME: WrapperField = WrapperField("SBA_ColPosition", FieldType.SELECTION)
    SBA_CONTROLNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ControlName", FieldType.STRING)
    SBA_CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_ControlType", FieldType.STRING)
    SBA_PLATECOLUMNS__FIELD_NAME: WrapperField = WrapperField("SBA_PlateColumns", FieldType.INTEGER)
    SBA_PLATENUMBER__FIELD_NAME: WrapperField = WrapperField("SBA_PlateNumber", FieldType.INTEGER)
    SBA_PLATEROWS__FIELD_NAME: WrapperField = WrapperField("SBA_PlateRows", FieldType.INTEGER)
    SBA_PLATETEMPLATENAME__FIELD_NAME: WrapperField = WrapperField("SBA_PlateTemplateName", FieldType.STRING)
    SBA_ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("SBA_RowPosition", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ColPosition' on this record model
        """
        self.set_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ColPosition' from this record model
        """
        return self.get_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name)

    def set_SBA_ControlName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlName' on this record model
        """
        self.set_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name, value)

    def get_SBA_ControlName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlName' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name)

    def set_SBA_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlType' on this record model
        """
        self.set_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_SBA_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlType' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name)

    def set_SBA_PlateColumns_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateColumns' on this record model
        """
        self.set_field_value(self.SBA_PLATECOLUMNS__FIELD_NAME.field_name, value)

    def get_SBA_PlateColumns_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateColumns' from this record model
        """
        return self.get_field_value(self.SBA_PLATECOLUMNS__FIELD_NAME.field_name)

    def set_SBA_PlateNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateNumber' on this record model
        """
        self.set_field_value(self.SBA_PLATENUMBER__FIELD_NAME.field_name, value)

    def get_SBA_PlateNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateNumber' from this record model
        """
        return self.get_field_value(self.SBA_PLATENUMBER__FIELD_NAME.field_name)

    def set_SBA_PlateRows_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateRows' on this record model
        """
        self.set_field_value(self.SBA_PLATEROWS__FIELD_NAME.field_name, value)

    def get_SBA_PlateRows_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateRows' from this record model
        """
        return self.get_field_value(self.SBA_PLATEROWS__FIELD_NAME.field_name)

    def set_SBA_PlateTemplateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateTemplateName' on this record model
        """
        self.set_field_value(self.SBA_PLATETEMPLATENAME__FIELD_NAME.field_name, value)

    def get_SBA_PlateTemplateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateTemplateName' from this record model
        """
        return self.get_field_value(self.SBA_PLATETEMPLATENAME__FIELD_NAME.field_name)

    def set_SBA_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RowPosition' on this record model
        """
        self.set_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RowPosition' from this record model
        """
        return self.get_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayResultDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayResultData
    Data Type Display Name: Assay Result Data (Assay Result Datas)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AnalyteName, SBA_AssayDateTime, SBA_BiasPercentage, SBA_Concentration, SBA_DeactivateReason, SBA_FoundConcentration, SBA_IsResponse, SBA_RawDataValue, SBA_Retention, SBA_SampleAssayStatus, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayResultData'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.STRING)
    SBA_ASSAYDATETIME__FIELD_NAME: WrapperField = WrapperField("SBA_AssayDateTime", FieldType.DATE)
    SBA_BIASPERCENTAGE__FIELD_NAME: WrapperField = WrapperField("SBA_BiasPercentage", FieldType.DOUBLE)
    SBA_CONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SBA_Concentration", FieldType.DOUBLE)
    SBA_DEACTIVATEREASON__FIELD_NAME: WrapperField = WrapperField("SBA_DeactivateReason", FieldType.STRING)
    SBA_FOUNDCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SBA_FoundConcentration", FieldType.DOUBLE)
    SBA_ISRESPONSE__FIELD_NAME: WrapperField = WrapperField("SBA_IsResponse", FieldType.DOUBLE)
    SBA_RAWDATAVALUE__FIELD_NAME: WrapperField = WrapperField("SBA_RawDataValue", FieldType.DOUBLE)
    SBA_RETENTION__FIELD_NAME: WrapperField = WrapperField("SBA_Retention", FieldType.DOUBLE)
    SBA_SAMPLEASSAYSTATUS__FIELD_NAME: WrapperField = WrapperField("SBA_SampleAssayStatus", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AssayDateTime' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDATETIME__FIELD_NAME.field_name, value)

    def get_SBA_AssayDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AssayDateTime' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDATETIME__FIELD_NAME.field_name)

    def set_SBA_BiasPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_BiasPercentage' on this record model
        """
        self.set_field_value(self.SBA_BIASPERCENTAGE__FIELD_NAME.field_name, value)

    def get_SBA_BiasPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_BiasPercentage' from this record model
        """
        return self.get_field_value(self.SBA_BIASPERCENTAGE__FIELD_NAME.field_name)

    def set_SBA_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_Concentration' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_Concentration' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_DeactivateReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_DeactivateReason' on this record model
        """
        self.set_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name, value)

    def get_SBA_DeactivateReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_DeactivateReason' from this record model
        """
        return self.get_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name)

    def set_SBA_FoundConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FoundConcentration' on this record model
        """
        self.set_field_value(self.SBA_FOUNDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_FoundConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FoundConcentration' from this record model
        """
        return self.get_field_value(self.SBA_FOUNDCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_IsResponse_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_IsResponse' on this record model
        """
        self.set_field_value(self.SBA_ISRESPONSE__FIELD_NAME.field_name, value)

    def get_SBA_IsResponse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_IsResponse' from this record model
        """
        return self.get_field_value(self.SBA_ISRESPONSE__FIELD_NAME.field_name)

    def set_SBA_RawDataValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RawDataValue' on this record model
        """
        self.set_field_value(self.SBA_RAWDATAVALUE__FIELD_NAME.field_name, value)

    def get_SBA_RawDataValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RawDataValue' from this record model
        """
        return self.get_field_value(self.SBA_RAWDATAVALUE__FIELD_NAME.field_name)

    def set_SBA_Retention_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_Retention' on this record model
        """
        self.set_field_value(self.SBA_RETENTION__FIELD_NAME.field_name, value)

    def get_SBA_Retention_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_Retention' from this record model
        """
        return self.get_field_value(self.SBA_RETENTION__FIELD_NAME.field_name)

    def set_SBA_SampleAssayStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleAssayStatus' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_SampleAssayStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleAssayStatus' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayRunControlResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayRunControlResult
    Data Type Display Name: Assay Run Control Result (Assay Run Control Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AnalyteName, SBA_ConcentrationCV, SBA_ConcentrationUnit, SBA_ControlName, SBA_ControlType, SBA_DeactivateReason, SBA_MeanBiasPercentage, SBA_MeanConcentration, SBA_PlateId, SBA_SampleAssayStatus, SBA_StandardDeviation, SBA_TheoreticalValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayRunControlResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.STRING)
    SBA_CONCENTRATIONCV__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationCV", FieldType.DOUBLE)
    SBA_CONCENTRATIONUNIT__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationUnit", FieldType.SELECTION)
    SBA_CONTROLNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ControlName", FieldType.STRING)
    SBA_CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_ControlType", FieldType.SELECTION)
    SBA_DEACTIVATEREASON__FIELD_NAME: WrapperField = WrapperField("SBA_DeactivateReason", FieldType.STRING)
    SBA_MEANBIASPERCENTAGE__FIELD_NAME: WrapperField = WrapperField("SBA_MeanBiasPercentage", FieldType.DOUBLE)
    SBA_MEANCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SBA_MeanConcentration", FieldType.DOUBLE)
    SBA_PLATEID__FIELD_NAME: WrapperField = WrapperField("SBA_PlateId", FieldType.STRING)
    SBA_SAMPLEASSAYSTATUS__FIELD_NAME: WrapperField = WrapperField("SBA_SampleAssayStatus", FieldType.SELECTION)
    SBA_STANDARDDEVIATION__FIELD_NAME: WrapperField = WrapperField("SBA_StandardDeviation", FieldType.DOUBLE)
    SBA_THEORETICALVALUE__FIELD_NAME: WrapperField = WrapperField("SBA_TheoreticalValue", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_ConcentrationCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ConcentrationCV' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ConcentrationCV' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnit' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnit' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name)

    def set_SBA_ControlName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlName' on this record model
        """
        self.set_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name, value)

    def get_SBA_ControlName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlName' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name)

    def set_SBA_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlType' on this record model
        """
        self.set_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_SBA_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlType' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name)

    def set_SBA_DeactivateReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_DeactivateReason' on this record model
        """
        self.set_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name, value)

    def get_SBA_DeactivateReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_DeactivateReason' from this record model
        """
        return self.get_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name)

    def set_SBA_MeanBiasPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanBiasPercentage' on this record model
        """
        self.set_field_value(self.SBA_MEANBIASPERCENTAGE__FIELD_NAME.field_name, value)

    def get_SBA_MeanBiasPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanBiasPercentage' from this record model
        """
        return self.get_field_value(self.SBA_MEANBIASPERCENTAGE__FIELD_NAME.field_name)

    def set_SBA_MeanConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanConcentration' on this record model
        """
        self.set_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_MeanConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanConcentration' from this record model
        """
        return self.get_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_SampleAssayStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleAssayStatus' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_SampleAssayStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleAssayStatus' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name)

    def set_SBA_StandardDeviation_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_StandardDeviation' on this record model
        """
        self.set_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name, value)

    def get_SBA_StandardDeviation_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_StandardDeviation' from this record model
        """
        return self.get_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name)

    def set_SBA_TheoreticalValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_TheoreticalValue' on this record model
        """
        self.set_field_value(self.SBA_THEORETICALVALUE__FIELD_NAME.field_name, value)

    def get_SBA_TheoreticalValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_TheoreticalValue' from this record model
        """
        return self.get_field_value(self.SBA_THEORETICALVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayRunResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayRunResult
    Data Type Display Name: Assay Run Result (Assay Run Result)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AcceptOrReject, SBA_AllQCLevelsPassCVCheck, SBA_AnalyteName, SBA_AssayRunId, SBA_CurveFitModelName, SBA_FailureDetected, SBA_FailureReason, SBA_ManualOverrideReason, SBA_ManualRejectionReason, SBA_PlateId, SBA_Status, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayRunResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ACCEPTORREJECT__FIELD_NAME: WrapperField = WrapperField("SBA_AcceptOrReject", FieldType.PICKLIST)
    SBA_ALLQCLEVELSPASSCVCHECK__FIELD_NAME: WrapperField = WrapperField("SBA_AllQCLevelsPassCVCheck", FieldType.BOOLEAN)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.SELECTION)
    SBA_ASSAYRUNID__FIELD_NAME: WrapperField = WrapperField("SBA_AssayRunId", FieldType.STRING)
    SBA_CURVEFITMODELNAME__FIELD_NAME: WrapperField = WrapperField("SBA_CurveFitModelName", FieldType.STRING)
    SBA_FAILUREDETECTED__FIELD_NAME: WrapperField = WrapperField("SBA_FailureDetected", FieldType.STRING)
    SBA_FAILUREREASON__FIELD_NAME: WrapperField = WrapperField("SBA_FailureReason", FieldType.STRING)
    SBA_MANUALOVERRIDEREASON__FIELD_NAME: WrapperField = WrapperField("SBA_ManualOverrideReason", FieldType.STRING)
    SBA_MANUALREJECTIONREASON__FIELD_NAME: WrapperField = WrapperField("SBA_ManualRejectionReason", FieldType.STRING)
    SBA_PLATEID__FIELD_NAME: WrapperField = WrapperField("SBA_PlateId", FieldType.STRING)
    SBA_STATUS__FIELD_NAME: WrapperField = WrapperField("SBA_Status", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AcceptOrReject_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AcceptOrReject' on this record model
        """
        self.set_field_value(self.SBA_ACCEPTORREJECT__FIELD_NAME.field_name, value)

    def get_SBA_AcceptOrReject_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AcceptOrReject' from this record model
        """
        return self.get_field_value(self.SBA_ACCEPTORREJECT__FIELD_NAME.field_name)

    def set_SBA_AllQCLevelsPassCVCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllQCLevelsPassCVCheck' on this record model
        """
        self.set_field_value(self.SBA_ALLQCLEVELSPASSCVCHECK__FIELD_NAME.field_name, value)

    def get_SBA_AllQCLevelsPassCVCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllQCLevelsPassCVCheck' from this record model
        """
        return self.get_field_value(self.SBA_ALLQCLEVELSPASSCVCHECK__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayRunId' on this record model
        """
        self.set_field_value(self.SBA_ASSAYRUNID__FIELD_NAME.field_name, value)

    def get_SBA_AssayRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayRunId' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYRUNID__FIELD_NAME.field_name)

    def set_SBA_CurveFitModelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CurveFitModelName' on this record model
        """
        self.set_field_value(self.SBA_CURVEFITMODELNAME__FIELD_NAME.field_name, value)

    def get_SBA_CurveFitModelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CurveFitModelName' from this record model
        """
        return self.get_field_value(self.SBA_CURVEFITMODELNAME__FIELD_NAME.field_name)

    def set_SBA_FailureDetected_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_FailureDetected' on this record model
        """
        self.set_field_value(self.SBA_FAILUREDETECTED__FIELD_NAME.field_name, value)

    def get_SBA_FailureDetected_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_FailureDetected' from this record model
        """
        return self.get_field_value(self.SBA_FAILUREDETECTED__FIELD_NAME.field_name)

    def set_SBA_FailureReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_FailureReason' on this record model
        """
        self.set_field_value(self.SBA_FAILUREREASON__FIELD_NAME.field_name, value)

    def get_SBA_FailureReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_FailureReason' from this record model
        """
        return self.get_field_value(self.SBA_FAILUREREASON__FIELD_NAME.field_name)

    def set_SBA_ManualOverrideReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ManualOverrideReason' on this record model
        """
        self.set_field_value(self.SBA_MANUALOVERRIDEREASON__FIELD_NAME.field_name, value)

    def get_SBA_ManualOverrideReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ManualOverrideReason' from this record model
        """
        return self.get_field_value(self.SBA_MANUALOVERRIDEREASON__FIELD_NAME.field_name)

    def set_SBA_ManualRejectionReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ManualRejectionReason' on this record model
        """
        self.set_field_value(self.SBA_MANUALREJECTIONREASON__FIELD_NAME.field_name, value)

    def get_SBA_ManualRejectionReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ManualRejectionReason' from this record model
        """
        return self.get_field_value(self.SBA_MANUALREJECTIONREASON__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Status' on this record model
        """
        self.set_field_value(self.SBA_STATUS__FIELD_NAME.field_name, value)

    def get_SBA_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Status' from this record model
        """
        return self.get_field_value(self.SBA_STATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayRunSampleResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayRunSampleResult
    Data Type Display Name: Assay Run Sample Result (Assay Run Sample Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AnalyteName, SBA_AssayDetectionQuality, SBA_AssayProcessStatus, SBA_ConcentrationCV, SBA_ConcentrationUnit, SBA_DeactivateReason, SBA_MeanConcentration, SBA_MeanFoundConcentration, SBA_OtherSampleId, SBA_PlateId, SBA_SampleAssayStatus, SBA_SampleId, SBA_StandardDeviation, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssayRunSampleResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ANALYTENAME__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyteName", FieldType.STRING)
    SBA_ASSAYDETECTIONQUALITY__FIELD_NAME: WrapperField = WrapperField("SBA_AssayDetectionQuality", FieldType.SELECTION)
    SBA_ASSAYPROCESSSTATUS__FIELD_NAME: WrapperField = WrapperField("SBA_AssayProcessStatus", FieldType.SELECTION)
    SBA_CONCENTRATIONCV__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationCV", FieldType.DOUBLE)
    SBA_CONCENTRATIONUNIT__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationUnit", FieldType.SELECTION)
    SBA_DEACTIVATEREASON__FIELD_NAME: WrapperField = WrapperField("SBA_DeactivateReason", FieldType.STRING)
    SBA_MEANCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SBA_MeanConcentration", FieldType.DOUBLE)
    SBA_MEANFOUNDCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("SBA_MeanFoundConcentration", FieldType.DOUBLE)
    SBA_OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("SBA_OtherSampleId", FieldType.STRING)
    SBA_PLATEID__FIELD_NAME: WrapperField = WrapperField("SBA_PlateId", FieldType.STRING)
    SBA_SAMPLEASSAYSTATUS__FIELD_NAME: WrapperField = WrapperField("SBA_SampleAssayStatus", FieldType.SELECTION)
    SBA_SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SBA_SampleId", FieldType.STRING)
    SBA_STANDARDDEVIATION__FIELD_NAME: WrapperField = WrapperField("SBA_StandardDeviation", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayDetectionQuality_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayDetectionQuality' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDETECTIONQUALITY__FIELD_NAME.field_name, value)

    def get_SBA_AssayDetectionQuality_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayDetectionQuality' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDETECTIONQUALITY__FIELD_NAME.field_name)

    def set_SBA_AssayProcessStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayProcessStatus' on this record model
        """
        self.set_field_value(self.SBA_ASSAYPROCESSSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_AssayProcessStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayProcessStatus' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYPROCESSSTATUS__FIELD_NAME.field_name)

    def set_SBA_ConcentrationCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ConcentrationCV' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ConcentrationCV' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnit' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnit' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name)

    def set_SBA_DeactivateReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_DeactivateReason' on this record model
        """
        self.set_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name, value)

    def get_SBA_DeactivateReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_DeactivateReason' from this record model
        """
        return self.get_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name)

    def set_SBA_MeanConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanConcentration' on this record model
        """
        self.set_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_MeanConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanConcentration' from this record model
        """
        return self.get_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_MeanFoundConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanFoundConcentration' on this record model
        """
        self.set_field_value(self.SBA_MEANFOUNDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_MeanFoundConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanFoundConcentration' from this record model
        """
        return self.get_field_value(self.SBA_MEANFOUNDCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_OtherSampleId' on this record model
        """
        self.set_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_OtherSampleId' from this record model
        """
        return self.get_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_SampleAssayStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleAssayStatus' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_SampleAssayStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleAssayStatus' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name)

    def set_SBA_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleId' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleId' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name)

    def set_SBA_StandardDeviation_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_StandardDeviation' on this record model
        """
        self.set_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name, value)

    def get_SBA_StandardDeviation_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_StandardDeviation' from this record model
        """
        return self.get_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssaySampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssaySample
    Data Type Display Name: Assay Sample (Assay Samples)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_CollectionDateTime, SBA_ColPosition, SBA_ControlType, SBA_DilutionFactor, SBA_IsCarryoverBlank, SBA_IsControl, SBA_IsExtracted, SBA_OtherSampleId, SBA_PlateId, SBA_RowPosition, SBA_SampleCondition, SBA_SampleId, SBA_ValidationParameter, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_AssaySample'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_COLLECTIONDATETIME__FIELD_NAME: WrapperField = WrapperField("SBA_CollectionDateTime", FieldType.DATE)
    SBA_COLPOSITION__FIELD_NAME: WrapperField = WrapperField("SBA_ColPosition", FieldType.SELECTION)
    SBA_CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_ControlType", FieldType.STRING)
    SBA_DILUTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("SBA_DilutionFactor", FieldType.DOUBLE)
    SBA_ISCARRYOVERBLANK__FIELD_NAME: WrapperField = WrapperField("SBA_IsCarryoverBlank", FieldType.BOOLEAN)
    SBA_ISCONTROL__FIELD_NAME: WrapperField = WrapperField("SBA_IsControl", FieldType.BOOLEAN)
    SBA_ISEXTRACTED__FIELD_NAME: WrapperField = WrapperField("SBA_IsExtracted", FieldType.BOOLEAN)
    SBA_OTHERSAMPLEID__FIELD_NAME: WrapperField = WrapperField("SBA_OtherSampleId", FieldType.STRING)
    SBA_PLATEID__FIELD_NAME: WrapperField = WrapperField("SBA_PlateId", FieldType.STRING)
    SBA_ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("SBA_RowPosition", FieldType.SELECTION)
    SBA_SAMPLECONDITION__FIELD_NAME: WrapperField = WrapperField("SBA_SampleCondition", FieldType.SELECTION)
    SBA_SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SBA_SampleId", FieldType.STRING)
    SBA_VALIDATIONPARAMETER__FIELD_NAME: WrapperField = WrapperField("SBA_ValidationParameter", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CollectionDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CollectionDateTime' on this record model
        """
        self.set_field_value(self.SBA_COLLECTIONDATETIME__FIELD_NAME.field_name, value)

    def get_SBA_CollectionDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CollectionDateTime' from this record model
        """
        return self.get_field_value(self.SBA_COLLECTIONDATETIME__FIELD_NAME.field_name)

    def set_SBA_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ColPosition' on this record model
        """
        self.set_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ColPosition' from this record model
        """
        return self.get_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name)

    def set_SBA_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlType' on this record model
        """
        self.set_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_SBA_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlType' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name)

    def set_SBA_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_DilutionFactor' on this record model
        """
        self.set_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_SBA_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_DilutionFactor' from this record model
        """
        return self.get_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_SBA_IsCarryoverBlank_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsCarryoverBlank' on this record model
        """
        self.set_field_value(self.SBA_ISCARRYOVERBLANK__FIELD_NAME.field_name, value)

    def get_SBA_IsCarryoverBlank_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsCarryoverBlank' from this record model
        """
        return self.get_field_value(self.SBA_ISCARRYOVERBLANK__FIELD_NAME.field_name)

    def set_SBA_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsControl' on this record model
        """
        self.set_field_value(self.SBA_ISCONTROL__FIELD_NAME.field_name, value)

    def get_SBA_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsControl' from this record model
        """
        return self.get_field_value(self.SBA_ISCONTROL__FIELD_NAME.field_name)

    def set_SBA_IsExtracted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsExtracted' on this record model
        """
        self.set_field_value(self.SBA_ISEXTRACTED__FIELD_NAME.field_name, value)

    def get_SBA_IsExtracted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsExtracted' from this record model
        """
        return self.get_field_value(self.SBA_ISEXTRACTED__FIELD_NAME.field_name)

    def set_SBA_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_OtherSampleId' on this record model
        """
        self.set_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_OtherSampleId' from this record model
        """
        return self.get_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RowPosition' on this record model
        """
        self.set_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RowPosition' from this record model
        """
        return self.get_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name)

    def set_SBA_SampleCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleCondition' on this record model
        """
        self.set_field_value(self.SBA_SAMPLECONDITION__FIELD_NAME.field_name, value)

    def get_SBA_SampleCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleCondition' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLECONDITION__FIELD_NAME.field_name)

    def set_SBA_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleId' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleId' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name)

    def set_SBA_ValidationParameter_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidationParameter' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name, value)

    def get_SBA_ValidationParameter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidationParameter' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CalibrationCurveCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CalibrationCurveCriteria
    Data Type Display Name: Calibration Curve Criteria (Calibration Curve Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxMeanBiasForLLOQ, SBA_MaxMeanBiasForNonLLOQ, SBA_MinOfSTDLevels, SBA_MinPassRatePerSTDLevel, SBA_MinSTDPassRate, VeloxLastModifiedBy, VeloxLastModifiedDate
    The CalibrationCurveCriteria Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_CalibrationCurveCriteria'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXMEANBIASFORLLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_MaxMeanBiasForLLOQ", FieldType.DOUBLE)
    SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_MaxMeanBiasForNonLLOQ", FieldType.DOUBLE)
    SBA_MINOFSTDLEVELS__FIELD_NAME: WrapperField = WrapperField("SBA_MinOfSTDLevels", FieldType.LONG)
    SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME: WrapperField = WrapperField("SBA_MinPassRatePerSTDLevel", FieldType.DOUBLE)
    SBA_MINSTDPASSRATE__FIELD_NAME: WrapperField = WrapperField("SBA_MinSTDPassRate", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasForLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasForLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasForLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasForLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasForNonLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasForNonLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasForNonLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasForNonLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name)

    def set_SBA_MinOfSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinOfSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_MINOFSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_MinOfSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinOfSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_MINOFSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_MinPassRatePerSTDLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinPassRatePerSTDLevel' on this record model
        """
        self.set_field_value(self.SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name, value)

    def get_SBA_MinPassRatePerSTDLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinPassRatePerSTDLevel' from this record model
        """
        return self.get_field_value(self.SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name)

    def set_SBA_MinSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_MINSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_MinSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_MINSTDPASSRATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CalibrationCurveResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CalibrationCurveResults
    Data Type Display Name: Calibration Curve Results (Calibration Curve Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_NumSTDLevels, SBA_NumSTDPassRate, SBA_WithinStdLevelBiasPass, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_CalibrationCurveResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_CalibrationCurveResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_NUMSTDLEVELS__FIELD_NAME: WrapperField = WrapperField("SBA_NumSTDLevels", FieldType.LONG)
    SBA_NUMSTDPASSRATE__FIELD_NAME: WrapperField = WrapperField("SBA_NumSTDPassRate", FieldType.DOUBLE)
    SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME: WrapperField = WrapperField("SBA_WithinStdLevelBiasPass", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_NumSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_NUMSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_NumSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_NUMSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_NumSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_NumSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_NUMSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_NumSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_NumSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_NUMSTDPASSRATE__FIELD_NAME.field_name)

    def set_SBA_WithinStdLevelBiasPass_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_WithinStdLevelBiasPass' on this record model
        """
        self.set_field_value(self.SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME.field_name, value)

    def get_SBA_WithinStdLevelBiasPass_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_WithinStdLevelBiasPass' from this record model
        """
        return self.get_field_value(self.SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CarryOverCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CarryOverCriteria
    Data Type Display Name: Carry Over Criteria (Carry Over Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxCarryoverAgainstIS, SBA_MaxCarryoverAgainstLLOQ, VeloxLastModifiedBy, VeloxLastModifiedDate
    The CarryOverCriteria Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_CarryOverCriteria'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME: WrapperField = WrapperField("SBA_MaxCarryoverAgainstIS", FieldType.DOUBLE)
    SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_MaxCarryoverAgainstLLOQ", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxCarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_MaxCarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_MaxCarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MaxCarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CarryOverResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CarryOverResults
    Data Type Display Name: Carry Over Results (Carry Over Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_CarryoverAgainstIS, SBA_CarryoverAgainstLLOQ, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_CarryOverResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_CarryOverResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_CARRYOVERAGAINSTIS__FIELD_NAME: WrapperField = WrapperField("SBA_CarryoverAgainstIS", FieldType.DOUBLE)
    SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_CarryoverAgainstLLOQ", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_CarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_CarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CertificateOfAnalysisModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CertificateOfAnalysis
    Data Type Display Name: Certificate Of Analysis (Certificate Of Analysis)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePath, SBA_AnalyzedbyTechnician, SBA_CertificateExpirationDate, SBA_Comments, SBA_ConsumableItemBarcode, SBA_CorrectionFactor, SBA_DateofAnalysis, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_CertificateOfAnalysis'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    SBA_ANALYZEDBYTECHNICIAN__FIELD_NAME: WrapperField = WrapperField("SBA_AnalyzedbyTechnician", FieldType.STRING)
    SBA_CERTIFICATEEXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("SBA_CertificateExpirationDate", FieldType.DATE)
    SBA_COMMENTS__FIELD_NAME: WrapperField = WrapperField("SBA_Comments", FieldType.STRING)
    SBA_CONSUMABLEITEMBARCODE__FIELD_NAME: WrapperField = WrapperField("SBA_ConsumableItemBarcode", FieldType.STRING)
    SBA_CORRECTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("SBA_CorrectionFactor", FieldType.DOUBLE)
    SBA_DATEOFANALYSIS__FIELD_NAME: WrapperField = WrapperField("SBA_DateofAnalysis", FieldType.DATE)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_SBA_AnalyzedbyTechnician_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyzedbyTechnician' on this record model
        """
        self.set_field_value(self.SBA_ANALYZEDBYTECHNICIAN__FIELD_NAME.field_name, value)

    def get_SBA_AnalyzedbyTechnician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyzedbyTechnician' from this record model
        """
        return self.get_field_value(self.SBA_ANALYZEDBYTECHNICIAN__FIELD_NAME.field_name)

    def set_SBA_CertificateExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CertificateExpirationDate' on this record model
        """
        self.set_field_value(self.SBA_CERTIFICATEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_SBA_CertificateExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CertificateExpirationDate' from this record model
        """
        return self.get_field_value(self.SBA_CERTIFICATEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_SBA_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Comments' on this record model
        """
        self.set_field_value(self.SBA_COMMENTS__FIELD_NAME.field_name, value)

    def get_SBA_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Comments' from this record model
        """
        return self.get_field_value(self.SBA_COMMENTS__FIELD_NAME.field_name)

    def set_SBA_ConsumableItemBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConsumableItemBarcode' on this record model
        """
        self.set_field_value(self.SBA_CONSUMABLEITEMBARCODE__FIELD_NAME.field_name, value)

    def get_SBA_ConsumableItemBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConsumableItemBarcode' from this record model
        """
        return self.get_field_value(self.SBA_CONSUMABLEITEMBARCODE__FIELD_NAME.field_name)

    def set_SBA_CorrectionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CorrectionFactor' on this record model
        """
        self.set_field_value(self.SBA_CORRECTIONFACTOR__FIELD_NAME.field_name, value)

    def get_SBA_CorrectionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CorrectionFactor' from this record model
        """
        return self.get_field_value(self.SBA_CORRECTIONFACTOR__FIELD_NAME.field_name)

    def set_SBA_DateofAnalysis_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_DateofAnalysis' on this record model
        """
        self.set_field_value(self.SBA_DATEOFANALYSIS__FIELD_NAME.field_name, value)

    def get_SBA_DateofAnalysis_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_DateofAnalysis' from this record model
        """
        return self.get_field_value(self.SBA_DATEOFANALYSIS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CurveFitterFunctionConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CurveFitterFunctionConfig
    Data Type Display Name: Curve Fitter Function Config (Curve Fitter Function Configs)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_ConfigData, SBA_FunctionName, SBA_ImplClass, SBA_IsDefaultFunction, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_CurveFitterFunctionConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_CONFIGDATA__FIELD_NAME: WrapperField = WrapperField("SBA_ConfigData", FieldType.STRING)
    SBA_FUNCTIONNAME__FIELD_NAME: WrapperField = WrapperField("SBA_FunctionName", FieldType.STRING)
    SBA_IMPLCLASS__FIELD_NAME: WrapperField = WrapperField("SBA_ImplClass", FieldType.STRING)
    SBA_ISDEFAULTFUNCTION__FIELD_NAME: WrapperField = WrapperField("SBA_IsDefaultFunction", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ConfigData_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConfigData' on this record model
        """
        self.set_field_value(self.SBA_CONFIGDATA__FIELD_NAME.field_name, value)

    def get_SBA_ConfigData_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConfigData' from this record model
        """
        return self.get_field_value(self.SBA_CONFIGDATA__FIELD_NAME.field_name)

    def set_SBA_FunctionName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_FunctionName' on this record model
        """
        self.set_field_value(self.SBA_FUNCTIONNAME__FIELD_NAME.field_name, value)

    def get_SBA_FunctionName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_FunctionName' from this record model
        """
        return self.get_field_value(self.SBA_FUNCTIONNAME__FIELD_NAME.field_name)

    def set_SBA_ImplClass_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ImplClass' on this record model
        """
        self.set_field_value(self.SBA_IMPLCLASS__FIELD_NAME.field_name, value)

    def get_SBA_ImplClass_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ImplClass' from this record model
        """
        return self.get_field_value(self.SBA_IMPLCLASS__FIELD_NAME.field_name)

    def set_SBA_IsDefaultFunction_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsDefaultFunction' on this record model
        """
        self.set_field_value(self.SBA_ISDEFAULTFUNCTION__FIELD_NAME.field_name, value)

    def get_SBA_IsDefaultFunction_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsDefaultFunction' from this record model
        """
        return self.get_field_value(self.SBA_ISDEFAULTFUNCTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssay
    Data Type Display Name: Master Assay (Master Assays)
    Fields: CreatedBy, DataRecordName, DateCreated, MultiParentLink230, SBA_ApprovalDate, SBA_AssayComments, SBA_AssayDescription, SBA_AssayId, SBA_AssayInstrumentType, SBA_AssayMethodStatus, SBA_AssayType, SBA_BiologicalMatrix, SBA_ConcentrationUnits, SBA_CVOfLLOQSTD, SBA_CVOfQC, SBA_CVOfSTD, SBA_CVOfUnknownSample, SBA_ImportDataFormat, SBA_IsActive, SBA_ISName, SBA_MasterAssayName, SBA_MinIsrPassRate, SBA_RegressionType, SBA_RequiredValidationParam, SBA_RunAcceptanceConfig, SBA_SampleInsertionMethod, SBA_Species, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_MasterAssay'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MULTIPARENTLINK230__FIELD_NAME: WrapperField = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK)
    SBA_APPROVALDATE__FIELD_NAME: WrapperField = WrapperField("SBA_ApprovalDate", FieldType.DATE)
    SBA_ASSAYCOMMENTS__FIELD_NAME: WrapperField = WrapperField("SBA_AssayComments", FieldType.STRING)
    SBA_ASSAYDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("SBA_AssayDescription", FieldType.STRING)
    SBA_ASSAYID__FIELD_NAME: WrapperField = WrapperField("SBA_AssayId", FieldType.AUTO_ACCESSION)
    SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_AssayInstrumentType", FieldType.SELECTION)
    SBA_ASSAYMETHODSTATUS__FIELD_NAME: WrapperField = WrapperField("SBA_AssayMethodStatus", FieldType.PICKLIST)
    SBA_ASSAYTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_AssayType", FieldType.SELECTION)
    SBA_BIOLOGICALMATRIX__FIELD_NAME: WrapperField = WrapperField("SBA_BiologicalMatrix", FieldType.SELECTION)
    SBA_CONCENTRATIONUNITS__FIELD_NAME: WrapperField = WrapperField("SBA_ConcentrationUnits", FieldType.SELECTION)
    SBA_CVOFLLOQSTD__FIELD_NAME: WrapperField = WrapperField("SBA_CVOfLLOQSTD", FieldType.DOUBLE)
    SBA_CVOFQC__FIELD_NAME: WrapperField = WrapperField("SBA_CVOfQC", FieldType.DOUBLE)
    SBA_CVOFSTD__FIELD_NAME: WrapperField = WrapperField("SBA_CVOfSTD", FieldType.DOUBLE)
    SBA_CVOFUNKNOWNSAMPLE__FIELD_NAME: WrapperField = WrapperField("SBA_CVOfUnknownSample", FieldType.DOUBLE)
    SBA_IMPORTDATAFORMAT__FIELD_NAME: WrapperField = WrapperField("SBA_ImportDataFormat", FieldType.PICKLIST)
    SBA_ISACTIVE__FIELD_NAME: WrapperField = WrapperField("SBA_IsActive", FieldType.BOOLEAN)
    SBA_ISNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ISName", FieldType.STRING)
    SBA_MASTERASSAYNAME__FIELD_NAME: WrapperField = WrapperField("SBA_MasterAssayName", FieldType.STRING)
    SBA_MINISRPASSRATE__FIELD_NAME: WrapperField = WrapperField("SBA_MinIsrPassRate", FieldType.DOUBLE)
    SBA_REGRESSIONTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_RegressionType", FieldType.SELECTION)
    SBA_REQUIREDVALIDATIONPARAM__FIELD_NAME: WrapperField = WrapperField("SBA_RequiredValidationParam", FieldType.SELECTION)
    SBA_RUNACCEPTANCECONFIG__FIELD_NAME: WrapperField = WrapperField("SBA_RunAcceptanceConfig", FieldType.SELECTION)
    SBA_SAMPLEINSERTIONMETHOD__FIELD_NAME: WrapperField = WrapperField("SBA_SampleInsertionMethod", FieldType.PICKLIST)
    SBA_SPECIES__FIELD_NAME: WrapperField = WrapperField("SBA_Species", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ApprovalDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_ApprovalDate' on this record model
        """
        self.set_field_value(self.SBA_APPROVALDATE__FIELD_NAME.field_name, value)

    def get_SBA_ApprovalDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_ApprovalDate' from this record model
        """
        return self.get_field_value(self.SBA_APPROVALDATE__FIELD_NAME.field_name)

    def set_SBA_AssayComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayComments' on this record model
        """
        self.set_field_value(self.SBA_ASSAYCOMMENTS__FIELD_NAME.field_name, value)

    def get_SBA_AssayComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayComments' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYCOMMENTS__FIELD_NAME.field_name)

    def set_SBA_AssayDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayDescription' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_AssayDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayDescription' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDESCRIPTION__FIELD_NAME.field_name)

    def set_SBA_AssayId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayId' on this record model
        """
        self.set_field_value(self.SBA_ASSAYID__FIELD_NAME.field_name, value)

    def get_SBA_AssayId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayId' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYID__FIELD_NAME.field_name)

    def set_SBA_AssayInstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayInstrumentType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayInstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayInstrumentType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_SBA_AssayMethodStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayMethodStatus' on this record model
        """
        self.set_field_value(self.SBA_ASSAYMETHODSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_AssayMethodStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayMethodStatus' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYMETHODSTATUS__FIELD_NAME.field_name)

    def set_SBA_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYTYPE__FIELD_NAME.field_name)

    def set_SBA_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_BiologicalMatrix' on this record model
        """
        self.set_field_value(self.SBA_BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_SBA_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.SBA_BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnits' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_SBA_CVOfLLOQSTD_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfLLOQSTD' on this record model
        """
        self.set_field_value(self.SBA_CVOFLLOQSTD__FIELD_NAME.field_name, value)

    def get_SBA_CVOfLLOQSTD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfLLOQSTD' from this record model
        """
        return self.get_field_value(self.SBA_CVOFLLOQSTD__FIELD_NAME.field_name)

    def set_SBA_CVOfQC_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfQC' on this record model
        """
        self.set_field_value(self.SBA_CVOFQC__FIELD_NAME.field_name, value)

    def get_SBA_CVOfQC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfQC' from this record model
        """
        return self.get_field_value(self.SBA_CVOFQC__FIELD_NAME.field_name)

    def set_SBA_CVOfSTD_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfSTD' on this record model
        """
        self.set_field_value(self.SBA_CVOFSTD__FIELD_NAME.field_name, value)

    def get_SBA_CVOfSTD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfSTD' from this record model
        """
        return self.get_field_value(self.SBA_CVOFSTD__FIELD_NAME.field_name)

    def set_SBA_CVOfUnknownSample_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfUnknownSample' on this record model
        """
        self.set_field_value(self.SBA_CVOFUNKNOWNSAMPLE__FIELD_NAME.field_name, value)

    def get_SBA_CVOfUnknownSample_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfUnknownSample' from this record model
        """
        return self.get_field_value(self.SBA_CVOFUNKNOWNSAMPLE__FIELD_NAME.field_name)

    def set_SBA_ImportDataFormat_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ImportDataFormat' on this record model
        """
        self.set_field_value(self.SBA_IMPORTDATAFORMAT__FIELD_NAME.field_name, value)

    def get_SBA_ImportDataFormat_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ImportDataFormat' from this record model
        """
        return self.get_field_value(self.SBA_IMPORTDATAFORMAT__FIELD_NAME.field_name)

    def set_SBA_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsActive' on this record model
        """
        self.set_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name, value)

    def get_SBA_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsActive' from this record model
        """
        return self.get_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name)

    def set_SBA_ISName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ISName' on this record model
        """
        self.set_field_value(self.SBA_ISNAME__FIELD_NAME.field_name, value)

    def get_SBA_ISName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ISName' from this record model
        """
        return self.get_field_value(self.SBA_ISNAME__FIELD_NAME.field_name)

    def set_SBA_MasterAssayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_MasterAssayName' on this record model
        """
        self.set_field_value(self.SBA_MASTERASSAYNAME__FIELD_NAME.field_name, value)

    def get_SBA_MasterAssayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_MasterAssayName' from this record model
        """
        return self.get_field_value(self.SBA_MASTERASSAYNAME__FIELD_NAME.field_name)

    def set_SBA_MinIsrPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinIsrPassRate' on this record model
        """
        self.set_field_value(self.SBA_MINISRPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_MinIsrPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinIsrPassRate' from this record model
        """
        return self.get_field_value(self.SBA_MINISRPASSRATE__FIELD_NAME.field_name)

    def set_SBA_RegressionType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RegressionType' on this record model
        """
        self.set_field_value(self.SBA_REGRESSIONTYPE__FIELD_NAME.field_name, value)

    def get_SBA_RegressionType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RegressionType' from this record model
        """
        return self.get_field_value(self.SBA_REGRESSIONTYPE__FIELD_NAME.field_name)

    def set_SBA_RequiredValidationParam_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RequiredValidationParam' on this record model
        """
        self.set_field_value(self.SBA_REQUIREDVALIDATIONPARAM__FIELD_NAME.field_name, value)

    def get_SBA_RequiredValidationParam_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RequiredValidationParam' from this record model
        """
        return self.get_field_value(self.SBA_REQUIREDVALIDATIONPARAM__FIELD_NAME.field_name)

    def set_SBA_RunAcceptanceConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunAcceptanceConfig' on this record model
        """
        self.set_field_value(self.SBA_RUNACCEPTANCECONFIG__FIELD_NAME.field_name, value)

    def get_SBA_RunAcceptanceConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunAcceptanceConfig' from this record model
        """
        return self.get_field_value(self.SBA_RUNACCEPTANCECONFIG__FIELD_NAME.field_name)

    def set_SBA_SampleInsertionMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleInsertionMethod' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEINSERTIONMETHOD__FIELD_NAME.field_name, value)

    def get_SBA_SampleInsertionMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleInsertionMethod' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEINSERTIONMETHOD__FIELD_NAME.field_name)

    def set_SBA_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Species' on this record model
        """
        self.set_field_value(self.SBA_SPECIES__FIELD_NAME.field_name, value)

    def get_SBA_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Species' from this record model
        """
        return self.get_field_value(self.SBA_SPECIES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayQCModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssayQC
    Data Type Display Name: QC (QCs)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_DilutionFactor, SBA_FlagPctDiff, SBA_NumberOfReplicates, SBA_QcName, SBA_WellPositions, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_MasterAssayQC'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_DILUTIONFACTOR__FIELD_NAME: WrapperField = WrapperField("SBA_DilutionFactor", FieldType.DOUBLE)
    SBA_FLAGPCTDIFF__FIELD_NAME: WrapperField = WrapperField("SBA_FlagPctDiff", FieldType.DOUBLE)
    SBA_NUMBEROFREPLICATES__FIELD_NAME: WrapperField = WrapperField("SBA_NumberOfReplicates", FieldType.INTEGER)
    SBA_QCNAME__FIELD_NAME: WrapperField = WrapperField("SBA_QcName", FieldType.STRING)
    SBA_WELLPOSITIONS__FIELD_NAME: WrapperField = WrapperField("SBA_WellPositions", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_DilutionFactor' on this record model
        """
        self.set_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_SBA_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_DilutionFactor' from this record model
        """
        return self.get_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_SBA_FlagPctDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FlagPctDiff' on this record model
        """
        self.set_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name, value)

    def get_SBA_FlagPctDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FlagPctDiff' from this record model
        """
        return self.get_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name)

    def set_SBA_NumberOfReplicates_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumberOfReplicates' on this record model
        """
        self.set_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name, value)

    def get_SBA_NumberOfReplicates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumberOfReplicates' from this record model
        """
        return self.get_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name)

    def set_SBA_QcName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_QcName' on this record model
        """
        self.set_field_value(self.SBA_QCNAME__FIELD_NAME.field_name, value)

    def get_SBA_QcName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_QcName' from this record model
        """
        return self.get_field_value(self.SBA_QCNAME__FIELD_NAME.field_name)

    def set_SBA_WellPositions_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositions' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name, value)

    def get_SBA_WellPositions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositions' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayRunModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssayRun
    Data Type Display Name: Master Assay Run (Master Assay Runs)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AssayInstrumentType, SBA_AssayRunType, SBA_CompletedBy, SBA_DateCompleted, SBA_Description, SBA_Instrument, SBA_InstrumentOutputDataType, SBA_IsPlatingComplete, SBA_MaxQCCV, SBA_OverrideComment, SBA_ParameterName, SBA_RunId, SBA_RunResult, SBA_ValidatedBy, SBA_ValidationDate, SBA_ValidationParameter, SBA_ValidationResult, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_MasterAssayRun'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_AssayInstrumentType", FieldType.SELECTION)
    SBA_ASSAYRUNTYPE__FIELD_NAME: WrapperField = WrapperField("SBA_AssayRunType", FieldType.SELECTION)
    SBA_COMPLETEDBY__FIELD_NAME: WrapperField = WrapperField("SBA_CompletedBy", FieldType.STRING)
    SBA_DATECOMPLETED__FIELD_NAME: WrapperField = WrapperField("SBA_DateCompleted", FieldType.DATE)
    SBA_DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("SBA_Description", FieldType.STRING)
    SBA_INSTRUMENT__FIELD_NAME: WrapperField = WrapperField("SBA_Instrument", FieldType.SELECTION)
    SBA_INSTRUMENTOUTPUTDATATYPE__FIELD_NAME: WrapperField = WrapperField("SBA_InstrumentOutputDataType", FieldType.SELECTION)
    SBA_ISPLATINGCOMPLETE__FIELD_NAME: WrapperField = WrapperField("SBA_IsPlatingComplete", FieldType.BOOLEAN)
    SBA_MAXQCCV__FIELD_NAME: WrapperField = WrapperField("SBA_MaxQCCV", FieldType.DOUBLE)
    SBA_OVERRIDECOMMENT__FIELD_NAME: WrapperField = WrapperField("SBA_OverrideComment", FieldType.STRING)
    SBA_PARAMETERNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ParameterName", FieldType.PICKLIST)
    SBA_RUNID__FIELD_NAME: WrapperField = WrapperField("SBA_RunId", FieldType.AUTO_ACCESSION)
    SBA_RUNRESULT__FIELD_NAME: WrapperField = WrapperField("SBA_RunResult", FieldType.PICKLIST)
    SBA_VALIDATEDBY__FIELD_NAME: WrapperField = WrapperField("SBA_ValidatedBy", FieldType.STRING)
    SBA_VALIDATIONDATE__FIELD_NAME: WrapperField = WrapperField("SBA_ValidationDate", FieldType.DATE)
    SBA_VALIDATIONPARAMETER__FIELD_NAME: WrapperField = WrapperField("SBA_ValidationParameter", FieldType.SELECTION)
    SBA_VALIDATIONRESULT__FIELD_NAME: WrapperField = WrapperField("SBA_ValidationResult", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AssayInstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayInstrumentType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayInstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayInstrumentType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_SBA_AssayRunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayRunType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYRUNTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayRunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayRunType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYRUNTYPE__FIELD_NAME.field_name)

    def set_SBA_CompletedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CompletedBy' on this record model
        """
        self.set_field_value(self.SBA_COMPLETEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CompletedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CompletedBy' from this record model
        """
        return self.get_field_value(self.SBA_COMPLETEDBY__FIELD_NAME.field_name)

    def set_SBA_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_DateCompleted' on this record model
        """
        self.set_field_value(self.SBA_DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_SBA_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_DateCompleted' from this record model
        """
        return self.get_field_value(self.SBA_DATECOMPLETED__FIELD_NAME.field_name)

    def set_SBA_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Description' on this record model
        """
        self.set_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Description' from this record model
        """
        return self.get_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name)

    def set_SBA_Instrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Instrument' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENT__FIELD_NAME.field_name, value)

    def get_SBA_Instrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Instrument' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENT__FIELD_NAME.field_name)

    def set_SBA_InstrumentOutputDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentOutputDataType' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTOUTPUTDATATYPE__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentOutputDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentOutputDataType' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTOUTPUTDATATYPE__FIELD_NAME.field_name)

    def set_SBA_IsPlatingComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsPlatingComplete' on this record model
        """
        self.set_field_value(self.SBA_ISPLATINGCOMPLETE__FIELD_NAME.field_name, value)

    def get_SBA_IsPlatingComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsPlatingComplete' from this record model
        """
        return self.get_field_value(self.SBA_ISPLATINGCOMPLETE__FIELD_NAME.field_name)

    def set_SBA_MaxQCCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxQCCV' on this record model
        """
        self.set_field_value(self.SBA_MAXQCCV__FIELD_NAME.field_name, value)

    def get_SBA_MaxQCCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxQCCV' from this record model
        """
        return self.get_field_value(self.SBA_MAXQCCV__FIELD_NAME.field_name)

    def set_SBA_OverrideComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_OverrideComment' on this record model
        """
        self.set_field_value(self.SBA_OVERRIDECOMMENT__FIELD_NAME.field_name, value)

    def get_SBA_OverrideComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_OverrideComment' from this record model
        """
        return self.get_field_value(self.SBA_OVERRIDECOMMENT__FIELD_NAME.field_name)

    def set_SBA_ParameterName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ParameterName' on this record model
        """
        self.set_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name, value)

    def get_SBA_ParameterName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ParameterName' from this record model
        """
        return self.get_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name)

    def set_SBA_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunId' on this record model
        """
        self.set_field_value(self.SBA_RUNID__FIELD_NAME.field_name, value)

    def get_SBA_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunId' from this record model
        """
        return self.get_field_value(self.SBA_RUNID__FIELD_NAME.field_name)

    def set_SBA_RunResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunResult' on this record model
        """
        self.set_field_value(self.SBA_RUNRESULT__FIELD_NAME.field_name, value)

    def get_SBA_RunResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunResult' from this record model
        """
        return self.get_field_value(self.SBA_RUNRESULT__FIELD_NAME.field_name)

    def set_SBA_ValidatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidatedBy' on this record model
        """
        self.set_field_value(self.SBA_VALIDATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_ValidatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidatedBy' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATEDBY__FIELD_NAME.field_name)

    def set_SBA_ValidationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_ValidationDate' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONDATE__FIELD_NAME.field_name, value)

    def get_SBA_ValidationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_ValidationDate' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONDATE__FIELD_NAME.field_name)

    def set_SBA_ValidationParameter_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidationParameter' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name, value)

    def get_SBA_ValidationParameter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidationParameter' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name)

    def set_SBA_ValidationResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidationResult' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONRESULT__FIELD_NAME.field_name, value)

    def get_SBA_ValidationResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidationResult' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONRESULT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayStandardModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssayStandard
    Data Type Display Name: Standard (Standards)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_FlagPctDiff, SBA_NumberOfReplicates, SBA_StandardName, SBA_WellPositions, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_MasterAssayStandard'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_FLAGPCTDIFF__FIELD_NAME: WrapperField = WrapperField("SBA_FlagPctDiff", FieldType.DOUBLE)
    SBA_NUMBEROFREPLICATES__FIELD_NAME: WrapperField = WrapperField("SBA_NumberOfReplicates", FieldType.INTEGER)
    SBA_STANDARDNAME__FIELD_NAME: WrapperField = WrapperField("SBA_StandardName", FieldType.STRING)
    SBA_WELLPOSITIONS__FIELD_NAME: WrapperField = WrapperField("SBA_WellPositions", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_FlagPctDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FlagPctDiff' on this record model
        """
        self.set_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name, value)

    def get_SBA_FlagPctDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FlagPctDiff' from this record model
        """
        return self.get_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name)

    def set_SBA_NumberOfReplicates_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumberOfReplicates' on this record model
        """
        self.set_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name, value)

    def get_SBA_NumberOfReplicates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumberOfReplicates' from this record model
        """
        return self.get_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name)

    def set_SBA_StandardName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_StandardName' on this record model
        """
        self.set_field_value(self.SBA_STANDARDNAME__FIELD_NAME.field_name, value)

    def get_SBA_StandardName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_StandardName' from this record model
        """
        return self.get_field_value(self.SBA_STANDARDNAME__FIELD_NAME.field_name)

    def set_SBA_WellPositions_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositions' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name, value)

    def get_SBA_WellPositions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositions' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RecoveryCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RecoveryCriteria
    Data Type Display Name: Recovery Criteria (Recovery Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxMinRecoveryDiffLimit, VeloxLastModifiedBy, VeloxLastModifiedDate
    The RecoveryCriteria Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_RecoveryCriteria'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME: WrapperField = WrapperField("SBA_MaxMinRecoveryDiffLimit", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxMinRecoveryDiffLimit_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMinRecoveryDiffLimit' on this record model
        """
        self.set_field_value(self.SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name, value)

    def get_SBA_MaxMinRecoveryDiffLimit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMinRecoveryDiffLimit' from this record model
        """
        return self.get_field_value(self.SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RecoveryResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RecoveryResults
    Data Type Display Name: Recovery Results (Recovery Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxMinRecoveryDiff, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_RecoveryResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_RecoveryResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXMINRECOVERYDIFF__FIELD_NAME: WrapperField = WrapperField("SBA_MaxMinRecoveryDiff", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxMinRecoveryDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMinRecoveryDiff' on this record model
        """
        self.set_field_value(self.SBA_MAXMINRECOVERYDIFF__FIELD_NAME.field_name, value)

    def get_SBA_MaxMinRecoveryDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMinRecoveryDiff' from this record model
        """
        return self.get_field_value(self.SBA_MAXMINRECOVERYDIFF__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RunAcceptanceConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RunAcceptanceConfig
    Data Type Display Name: Run Acceptance Configuration (Run Acceptance Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_ConfigurationName, SBA_Description, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_RunAcceptanceConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_CONFIGURATIONNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ConfigurationName", FieldType.STRING)
    SBA_DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("SBA_Description", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConfigurationName' on this record model
        """
        self.set_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_SBA_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConfigurationName' from this record model
        """
        return self.get_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name)

    def set_SBA_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Description' on this record model
        """
        self.set_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Description' from this record model
        """
        return self.get_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RunAcceptanceCriterionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RunAcceptanceCriterion
    Data Type Display Name: Run Acceptance Criterion (Run Acceptance Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_Description, SBA_IsYesNoOperator, SBA_Operator, SBA_ParameterName, SBA_Sequence, SBA_ThresholdValue, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SBA_RunAcceptanceCriterion'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("SBA_Description", FieldType.STRING)
    SBA_ISYESNOOPERATOR__FIELD_NAME: WrapperField = WrapperField("SBA_IsYesNoOperator", FieldType.BOOLEAN)
    SBA_OPERATOR__FIELD_NAME: WrapperField = WrapperField("SBA_Operator", FieldType.PICKLIST)
    SBA_PARAMETERNAME__FIELD_NAME: WrapperField = WrapperField("SBA_ParameterName", FieldType.PICKLIST)
    SBA_SEQUENCE__FIELD_NAME: WrapperField = WrapperField("SBA_Sequence", FieldType.INTEGER)
    SBA_THRESHOLDVALUE__FIELD_NAME: WrapperField = WrapperField("SBA_ThresholdValue", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Description' on this record model
        """
        self.set_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Description' from this record model
        """
        return self.get_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name)

    def set_SBA_IsYesNoOperator_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsYesNoOperator' on this record model
        """
        self.set_field_value(self.SBA_ISYESNOOPERATOR__FIELD_NAME.field_name, value)

    def get_SBA_IsYesNoOperator_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsYesNoOperator' from this record model
        """
        return self.get_field_value(self.SBA_ISYESNOOPERATOR__FIELD_NAME.field_name)

    def set_SBA_Operator_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Operator' on this record model
        """
        self.set_field_value(self.SBA_OPERATOR__FIELD_NAME.field_name, value)

    def get_SBA_Operator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Operator' from this record model
        """
        return self.get_field_value(self.SBA_OPERATOR__FIELD_NAME.field_name)

    def set_SBA_ParameterName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ParameterName' on this record model
        """
        self.set_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name, value)

    def get_SBA_ParameterName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ParameterName' from this record model
        """
        return self.get_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name)

    def set_SBA_Sequence_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_Sequence' on this record model
        """
        self.set_field_value(self.SBA_SEQUENCE__FIELD_NAME.field_name, value)

    def get_SBA_Sequence_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_Sequence' from this record model
        """
        return self.get_field_value(self.SBA_SEQUENCE__FIELD_NAME.field_name)

    def set_SBA_ThresholdValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ThresholdValue' on this record model
        """
        self.set_field_value(self.SBA_THRESHOLDVALUE__FIELD_NAME.field_name, value)

    def get_SBA_ThresholdValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ThresholdValue' from this record model
        """
        return self.get_field_value(self.SBA_THRESHOLDVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SelectivityCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SelectivityCriteria
    Data Type Display Name: Selectivity Criteria (Selectivity Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxBlankISRatio, SBA_MaxBlankLLOQRatio, SBA_MinNumOfPassedSamples, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SelectivityCriteria Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_SelectivityCriteria'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXBLANKISRATIO__FIELD_NAME: WrapperField = WrapperField("SBA_MaxBlankISRatio", FieldType.DOUBLE)
    SBA_MAXBLANKLLOQRATIO__FIELD_NAME: WrapperField = WrapperField("SBA_MaxBlankLLOQRatio", FieldType.DOUBLE)
    SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME: WrapperField = WrapperField("SBA_MinNumOfPassedSamples", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxBlankISRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxBlankISRatio' on this record model
        """
        self.set_field_value(self.SBA_MAXBLANKISRATIO__FIELD_NAME.field_name, value)

    def get_SBA_MaxBlankISRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxBlankISRatio' from this record model
        """
        return self.get_field_value(self.SBA_MAXBLANKISRATIO__FIELD_NAME.field_name)

    def set_SBA_MaxBlankLLOQRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxBlankLLOQRatio' on this record model
        """
        self.set_field_value(self.SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name, value)

    def get_SBA_MaxBlankLLOQRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxBlankLLOQRatio' from this record model
        """
        return self.get_field_value(self.SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name)

    def set_SBA_MinNumOfPassedSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinNumOfPassedSamples' on this record model
        """
        self.set_field_value(self.SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name, value)

    def get_SBA_MinNumOfPassedSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinNumOfPassedSamples' from this record model
        """
        return self.get_field_value(self.SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SelectivityResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SelectivityResults
    Data Type Display Name: Selectivity Results (Selectivity Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_NumPassedSamplesIS, SBA_NumPassedSamplesLLOQ, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_SelectivityResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_SelectivityResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_NUMPASSEDSAMPLESIS__FIELD_NAME: WrapperField = WrapperField("SBA_NumPassedSamplesIS", FieldType.LONG)
    SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME: WrapperField = WrapperField("SBA_NumPassedSamplesLLOQ", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_NumPassedSamplesIS_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumPassedSamplesIS' on this record model
        """
        self.set_field_value(self.SBA_NUMPASSEDSAMPLESIS__FIELD_NAME.field_name, value)

    def get_SBA_NumPassedSamplesIS_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumPassedSamplesIS' from this record model
        """
        return self.get_field_value(self.SBA_NUMPASSEDSAMPLESIS__FIELD_NAME.field_name)

    def set_SBA_NumPassedSamplesLLOQ_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumPassedSamplesLLOQ' on this record model
        """
        self.set_field_value(self.SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_NumPassedSamplesLLOQ_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumPassedSamplesLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SensitivityCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SensitivityCriteria
    Data Type Display Name: Sensitivity Criteria (Sensitivity Criteria)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_MaxBias, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SensitivityCriteria Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_SensitivityCriteria'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_MAXBIAS__FIELD_NAME: WrapperField = WrapperField("SBA_MaxBias", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxBias_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxBias' on this record model
        """
        self.set_field_value(self.SBA_MAXBIAS__FIELD_NAME.field_name, value)

    def get_SBA_MaxBias_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxBias' from this record model
        """
        return self.get_field_value(self.SBA_MAXBIAS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SensitivityResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SensitivityResults
    Data Type Display Name: Sensitivity Results (Sensitivity Results)
    Fields: CreatedBy, DataRecordName, DateCreated, SBA_AllPassBiasCheck, VeloxLastModifiedBy, VeloxLastModifiedDate
    The SBA_SensitivityResults Data Type
    """
    DATA_TYPE_NAME: str = 'SBA_SensitivityResults'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SBA_ALLPASSBIASCHECK__FIELD_NAME: WrapperField = WrapperField("SBA_AllPassBiasCheck", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AllPassBiasCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllPassBiasCheck' on this record model
        """
        self.set_field_value(self.SBA_ALLPASSBIASCHECK__FIELD_NAME.field_name, value)

    def get_SBA_AllPassBiasCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllPassBiasCheck' from this record model
        """
        return self.get_field_value(self.SBA_ALLPASSBIASCHECK__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SCIEXResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SCIEXResult
    Data Type Display Name: SCIEX Result (SCIEX Results)
    Fields: AnalytePeakArea, AnalytePeakName, CalculatedConcentration, CreatedBy, DataRecordName, DateCreated, ISPeakArea, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SCIEXResult'
    ANALYTEPEAKAREA__FIELD_NAME: WrapperField = WrapperField("AnalytePeakArea", FieldType.DOUBLE)
    ANALYTEPEAKNAME__FIELD_NAME: WrapperField = WrapperField("AnalytePeakName", FieldType.STRING)
    CALCULATEDCONCENTRATION__FIELD_NAME: WrapperField = WrapperField("CalculatedConcentration", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ISPEAKAREA__FIELD_NAME: WrapperField = WrapperField("ISPeakArea", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnalytePeakArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'AnalytePeakArea' on this record model
        """
        self.set_field_value(self.ANALYTEPEAKAREA__FIELD_NAME.field_name, value)

    def get_AnalytePeakArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AnalytePeakArea' from this record model
        """
        return self.get_field_value(self.ANALYTEPEAKAREA__FIELD_NAME.field_name)

    def set_AnalytePeakName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalytePeakName' on this record model
        """
        self.set_field_value(self.ANALYTEPEAKNAME__FIELD_NAME.field_name, value)

    def get_AnalytePeakName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalytePeakName' from this record model
        """
        return self.get_field_value(self.ANALYTEPEAKNAME__FIELD_NAME.field_name)

    def set_CalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentration' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ISPeakArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'ISPeakArea' on this record model
        """
        self.set_field_value(self.ISPEAKAREA__FIELD_NAME.field_name, value)

    def get_ISPeakArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ISPeakArea' from this record model
        """
        return self.get_field_value(self.ISPEAKAREA__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SDMSSubfolderModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SDMSSubfolder
    Data Type Display Name: SDMS Subfolder (SDMS Subfolders)
    Fields: Active, CreatedBy, DataRecordName, DateCreated, Folder, FolderExists, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SDMSSubfolder'
    ACTIVE__FIELD_NAME: WrapperField = WrapperField("Active", FieldType.BOOLEAN)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FOLDER__FIELD_NAME: WrapperField = WrapperField("Folder", FieldType.STRING)
    FOLDEREXISTS__FIELD_NAME: WrapperField = WrapperField("FolderExists", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Active_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Active' on this record model
        """
        self.set_field_value(self.ACTIVE__FIELD_NAME.field_name, value)

    def get_Active_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Active' from this record model
        """
        return self.get_field_value(self.ACTIVE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Folder_field(self, value: Optional[str]):
        """
        Set data field with field name 'Folder' on this record model
        """
        self.set_field_value(self.FOLDER__FIELD_NAME.field_name, value)

    def get_Folder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Folder' from this record model
        """
        return self.get_field_value(self.FOLDER__FIELD_NAME.field_name)

    def set_FolderExists_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FolderExists' on this record model
        """
        self.set_field_value(self.FOLDEREXISTS__FIELD_NAME.field_name, value)

    def get_FolderExists_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FolderExists' from this record model
        """
        return self.get_field_value(self.FOLDEREXISTS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SDMSWatchPointModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SDMSWatchPoint
    Data Type Display Name: SDMS Config (SDMS Configs)
    Fields: CreatedBy, DataRecordName, DateCreated, FilePattern, FilterFilesByPattern, ScanFrequencyNumber, ScanFrequencyUnits, SubFolderPattern, SubFoldersScan, UniqueFileEnforcement, VeloxLastModifiedBy, VeloxLastModifiedDate, WatcherDirectory
    """
    DATA_TYPE_NAME: str = 'SDMSWatchPoint'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FILEPATTERN__FIELD_NAME: WrapperField = WrapperField("FilePattern", FieldType.STRING)
    FILTERFILESBYPATTERN__FIELD_NAME: WrapperField = WrapperField("FilterFilesByPattern", FieldType.BOOLEAN)
    SCANFREQUENCYNUMBER__FIELD_NAME: WrapperField = WrapperField("ScanFrequencyNumber", FieldType.INTEGER)
    SCANFREQUENCYUNITS__FIELD_NAME: WrapperField = WrapperField("ScanFrequencyUnits", FieldType.SELECTION)
    SUBFOLDERPATTERN__FIELD_NAME: WrapperField = WrapperField("SubFolderPattern", FieldType.STRING)
    SUBFOLDERSSCAN__FIELD_NAME: WrapperField = WrapperField("SubFoldersScan", FieldType.SELECTION)
    UNIQUEFILEENFORCEMENT__FIELD_NAME: WrapperField = WrapperField("UniqueFileEnforcement", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WATCHERDIRECTORY__FIELD_NAME: WrapperField = WrapperField("WatcherDirectory", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePattern' on this record model
        """
        self.set_field_value(self.FILEPATTERN__FIELD_NAME.field_name, value)

    def get_FilePattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePattern' from this record model
        """
        return self.get_field_value(self.FILEPATTERN__FIELD_NAME.field_name)

    def set_FilterFilesByPattern_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FilterFilesByPattern' on this record model
        """
        self.set_field_value(self.FILTERFILESBYPATTERN__FIELD_NAME.field_name, value)

    def get_FilterFilesByPattern_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FilterFilesByPattern' from this record model
        """
        return self.get_field_value(self.FILTERFILESBYPATTERN__FIELD_NAME.field_name)

    def set_ScanFrequencyNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScanFrequencyNumber' on this record model
        """
        self.set_field_value(self.SCANFREQUENCYNUMBER__FIELD_NAME.field_name, value)

    def get_ScanFrequencyNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScanFrequencyNumber' from this record model
        """
        return self.get_field_value(self.SCANFREQUENCYNUMBER__FIELD_NAME.field_name)

    def set_ScanFrequencyUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScanFrequencyUnits' on this record model
        """
        self.set_field_value(self.SCANFREQUENCYUNITS__FIELD_NAME.field_name, value)

    def get_ScanFrequencyUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScanFrequencyUnits' from this record model
        """
        return self.get_field_value(self.SCANFREQUENCYUNITS__FIELD_NAME.field_name)

    def set_SubFolderPattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubFolderPattern' on this record model
        """
        self.set_field_value(self.SUBFOLDERPATTERN__FIELD_NAME.field_name, value)

    def get_SubFolderPattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubFolderPattern' from this record model
        """
        return self.get_field_value(self.SUBFOLDERPATTERN__FIELD_NAME.field_name)

    def set_SubFoldersScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubFoldersScan' on this record model
        """
        self.set_field_value(self.SUBFOLDERSSCAN__FIELD_NAME.field_name, value)

    def get_SubFoldersScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubFoldersScan' from this record model
        """
        return self.get_field_value(self.SUBFOLDERSSCAN__FIELD_NAME.field_name)

    def set_UniqueFileEnforcement_field(self, value: Optional[str]):
        """
        Set data field with field name 'UniqueFileEnforcement' on this record model
        """
        self.set_field_value(self.UNIQUEFILEENFORCEMENT__FIELD_NAME.field_name, value)

    def get_UniqueFileEnforcement_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UniqueFileEnforcement' from this record model
        """
        return self.get_field_value(self.UNIQUEFILEENFORCEMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WatcherDirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'WatcherDirectory' on this record model
        """
        self.set_field_value(self.WATCHERDIRECTORY__FIELD_NAME.field_name, value)

    def get_WatcherDirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WatcherDirectory' from this record model
        """
        return self.get_field_value(self.WATCHERDIRECTORY__FIELD_NAME.field_name)


class SiriusWeigherResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SiriusWeigherResult
    Data Type Display Name: Sirius Weigher Result (Sirius Weigher Results)
    Fields: CreatedBy, DataRecordName, DateCreated, GrossWeight, NetWeight, TareWeight, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SiriusWeigherResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GROSSWEIGHT__FIELD_NAME: WrapperField = WrapperField("GrossWeight", FieldType.DOUBLE)
    NETWEIGHT__FIELD_NAME: WrapperField = WrapperField("NetWeight", FieldType.DOUBLE)
    TAREWEIGHT__FIELD_NAME: WrapperField = WrapperField("TareWeight", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GrossWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'GrossWeight' on this record model
        """
        self.set_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name, value)

    def get_GrossWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GrossWeight' from this record model
        """
        return self.get_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name)

    def set_NetWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'NetWeight' on this record model
        """
        self.set_field_value(self.NETWEIGHT__FIELD_NAME.field_name, value)

    def get_NetWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NetWeight' from this record model
        """
        return self.get_field_value(self.NETWEIGHT__FIELD_NAME.field_name)

    def set_TareWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'TareWeight' on this record model
        """
        self.set_field_value(self.TAREWEIGHT__FIELD_NAME.field_name, value)

    def get_TareWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TareWeight' from this record model
        """
        return self.get_field_value(self.TAREWEIGHT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SpectrophotometerResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SpectrophotometerResult
    Data Type Display Name: Spectrophotometer Result (Spectrophotometer Results)
    Fields: CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SpectrophotometerResult'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SpectrumDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SpectrumDetail
    Data Type Display Name: Spectrum Detail (Spectrum Details)
    Fields: CreatedBy, DataRecordName, DateCreated, SampleId, Spectrum4, Spectrum5, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SpectrumDetail'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    SAMPLEID__FIELD_NAME: WrapperField = WrapperField("SampleId", FieldType.PICKLIST)
    SPECTRUM4__FIELD_NAME: WrapperField = WrapperField("Spectrum4", FieldType.DOUBLE)
    SPECTRUM5__FIELD_NAME: WrapperField = WrapperField("Spectrum5", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_Spectrum4_field(self, value: Optional[float]):
        """
        Set data field with field name 'Spectrum4' on this record model
        """
        self.set_field_value(self.SPECTRUM4__FIELD_NAME.field_name, value)

    def get_Spectrum4_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Spectrum4' from this record model
        """
        return self.get_field_value(self.SPECTRUM4__FIELD_NAME.field_name)

    def set_Spectrum5_field(self, value: Optional[float]):
        """
        Set data field with field name 'Spectrum5' on this record model
        """
        self.set_field_value(self.SPECTRUM5__FIELD_NAME.field_name, value)

    def get_Spectrum5_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Spectrum5' from this record model
        """
        return self.get_field_value(self.SPECTRUM5__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StainModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Stain
    Data Type Display Name: Stain (Stains)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, LotNumber, PartNumber, ProtocolNumber, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Stain'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    PROTOCOLNUMBER__FIELD_NAME: WrapperField = WrapperField("ProtocolNumber", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_ProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProtocolNumber' on this record model
        """
        self.set_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_ProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProtocolNumber' from this record model
        """
        return self.get_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StainingConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StainingConfiguration
    Data Type Display Name: Staining Configuration (Staining Configurations)
    Fields: AvailableStainingProtocols, CreatedBy, DataRecordName, DateCreated, HL7MessageTemplate, IntegrationURL, IpAddress, Password, PortNumber, UserName, VeloxLastModifiedBy, VeloxLastModifiedDate, WebhookEndpoint
    The configurations for connecting and sending data to an auto stainer
    """
    DATA_TYPE_NAME: str = 'StainingConfiguration'
    AVAILABLESTAININGPROTOCOLS__FIELD_NAME: WrapperField = WrapperField("AvailableStainingProtocols", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HL7MESSAGETEMPLATE__FIELD_NAME: WrapperField = WrapperField("HL7MessageTemplate", FieldType.STRING)
    INTEGRATIONURL__FIELD_NAME: WrapperField = WrapperField("IntegrationURL", FieldType.STRING)
    IPADDRESS__FIELD_NAME: WrapperField = WrapperField("IpAddress", FieldType.STRING)
    PASSWORD__FIELD_NAME: WrapperField = WrapperField("Password", FieldType.STRING)
    PORTNUMBER__FIELD_NAME: WrapperField = WrapperField("PortNumber", FieldType.INTEGER)
    USERNAME__FIELD_NAME: WrapperField = WrapperField("UserName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WEBHOOKENDPOINT__FIELD_NAME: WrapperField = WrapperField("WebhookEndpoint", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AvailableStainingProtocols_field(self, value: Optional[str]):
        """
        Set data field with field name 'AvailableStainingProtocols' on this record model
        """
        self.set_field_value(self.AVAILABLESTAININGPROTOCOLS__FIELD_NAME.field_name, value)

    def get_AvailableStainingProtocols_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AvailableStainingProtocols' from this record model
        """
        return self.get_field_value(self.AVAILABLESTAININGPROTOCOLS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HL7MessageTemplate_field(self, value: Optional[str]):
        """
        Set data field with field name 'HL7MessageTemplate' on this record model
        """
        self.set_field_value(self.HL7MESSAGETEMPLATE__FIELD_NAME.field_name, value)

    def get_HL7MessageTemplate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HL7MessageTemplate' from this record model
        """
        return self.get_field_value(self.HL7MESSAGETEMPLATE__FIELD_NAME.field_name)

    def set_IntegrationURL_field(self, value: Optional[str]):
        """
        Set data field with field name 'IntegrationURL' on this record model
        """
        self.set_field_value(self.INTEGRATIONURL__FIELD_NAME.field_name, value)

    def get_IntegrationURL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IntegrationURL' from this record model
        """
        return self.get_field_value(self.INTEGRATIONURL__FIELD_NAME.field_name)

    def set_IpAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'IpAddress' on this record model
        """
        self.set_field_value(self.IPADDRESS__FIELD_NAME.field_name, value)

    def get_IpAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IpAddress' from this record model
        """
        return self.get_field_value(self.IPADDRESS__FIELD_NAME.field_name)

    def set_Password_field(self, value: Optional[str]):
        """
        Set data field with field name 'Password' on this record model
        """
        self.set_field_value(self.PASSWORD__FIELD_NAME.field_name, value)

    def get_Password_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Password' from this record model
        """
        return self.get_field_value(self.PASSWORD__FIELD_NAME.field_name)

    def set_PortNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'PortNumber' on this record model
        """
        self.set_field_value(self.PORTNUMBER__FIELD_NAME.field_name, value)

    def get_PortNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PortNumber' from this record model
        """
        return self.get_field_value(self.PORTNUMBER__FIELD_NAME.field_name)

    def set_UserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserName' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_UserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserName' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WebhookEndpoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'WebhookEndpoint' on this record model
        """
        self.set_field_value(self.WEBHOOKENDPOINT__FIELD_NAME.field_name, value)

    def get_WebhookEndpoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WebhookEndpoint' from this record model
        """
        return self.get_field_value(self.WEBHOOKENDPOINT__FIELD_NAME.field_name)


class StainPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StainPart
    Data Type Display Name: Stain Part (Stain Parts)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, PartNumber, ProtocolNumber, QuantityOnHand, QuantityPerItem, ReorderLevelQuantity, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'StainPart'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.AUTO_ACCESSION)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    PROTOCOLNUMBER__FIELD_NAME: WrapperField = WrapperField("ProtocolNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_ProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProtocolNumber' on this record model
        """
        self.set_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_ProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProtocolNumber' from this record model
        """
        return self.get_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class StereoisomerModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Stereoisomer
    Data Type Display Name: Stereoisomer (Stereoisomers)
    Fields: CreatedBy, DataRecordName, DateCreated, MOL, SMILES, VeloxLastModifiedBy, VeloxLastModifiedDate
    Possible stereoisomer of a parent compound.
    """
    DATA_TYPE_NAME: str = 'Stereoisomer'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MOL__FIELD_NAME: WrapperField = WrapperField("MOL", FieldType.STRING)
    SMILES__FIELD_NAME: WrapperField = WrapperField("SMILES", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StereoManualResolutionDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StereoManualResolutionData
    Data Type Display Name: Stereo Manual Resolution Data (Stereo Manual Resolution Datas)
    Fields: CreatedBy, DataRecordName, DateCreated, IncomingPartCXSmilesHash, PartDataTypeName, RegisteredPartCXSSmilesHash, VeloxLastModifiedBy, VeloxLastModifiedDate
    This data table stores past manual resolutions of enhanced stereos for the OR group clarifiation.
    """
    DATA_TYPE_NAME: str = 'StereoManualResolutionData'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    INCOMINGPARTCXSMILESHASH__FIELD_NAME: WrapperField = WrapperField("IncomingPartCXSmilesHash", FieldType.STRING)
    PARTDATATYPENAME__FIELD_NAME: WrapperField = WrapperField("PartDataTypeName", FieldType.STRING)
    REGISTEREDPARTCXSSMILESHASH__FIELD_NAME: WrapperField = WrapperField("RegisteredPartCXSSmilesHash", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IncomingPartCXSmilesHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'IncomingPartCXSmilesHash' on this record model
        """
        self.set_field_value(self.INCOMINGPARTCXSMILESHASH__FIELD_NAME.field_name, value)

    def get_IncomingPartCXSmilesHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IncomingPartCXSmilesHash' from this record model
        """
        return self.get_field_value(self.INCOMINGPARTCXSMILESHASH__FIELD_NAME.field_name)

    def set_PartDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartDataTypeName' on this record model
        """
        self.set_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name, value)

    def get_PartDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartDataTypeName' from this record model
        """
        return self.get_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name)

    def set_RegisteredPartCXSSmilesHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegisteredPartCXSSmilesHash' on this record model
        """
        self.set_field_value(self.REGISTEREDPARTCXSSMILESHASH__FIELD_NAME.field_name, value)

    def get_RegisteredPartCXSSmilesHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegisteredPartCXSSmilesHash' from this record model
        """
        return self.get_field_value(self.REGISTEREDPARTCXSSMILESHASH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageConfiguration
    Data Type Display Name: Storage Configuration (Storage Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, StorableItemDataType, StorableItemScanMatchField, StorableItemStorageUnits, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StorageConfiguration'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    STORABLEITEMDATATYPE__FIELD_NAME: WrapperField = WrapperField("StorableItemDataType", FieldType.SELECTION)
    STORABLEITEMSCANMATCHFIELD__FIELD_NAME: WrapperField = WrapperField("StorableItemScanMatchField", FieldType.SELECTION)
    STORABLEITEMSTORAGEUNITS__FIELD_NAME: WrapperField = WrapperField("StorableItemStorageUnits", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_StorableItemDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorableItemDataType' on this record model
        """
        self.set_field_value(self.STORABLEITEMDATATYPE__FIELD_NAME.field_name, value)

    def get_StorableItemDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorableItemDataType' from this record model
        """
        return self.get_field_value(self.STORABLEITEMDATATYPE__FIELD_NAME.field_name)

    def set_StorableItemScanMatchField_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorableItemScanMatchField' on this record model
        """
        self.set_field_value(self.STORABLEITEMSCANMATCHFIELD__FIELD_NAME.field_name, value)

    def get_StorableItemScanMatchField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorableItemScanMatchField' from this record model
        """
        return self.get_field_value(self.STORABLEITEMSCANMATCHFIELD__FIELD_NAME.field_name)

    def set_StorableItemStorageUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorableItemStorageUnits' on this record model
        """
        self.set_field_value(self.STORABLEITEMSTORAGEUNITS__FIELD_NAME.field_name, value)

    def get_StorableItemStorageUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorableItemStorageUnits' from this record model
        """
        return self.get_field_value(self.STORABLEITEMSTORAGEUNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageEventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageEvent
    Data Type Display Name: Storage Event (Storage Events)
    Fields: CreatedBy, DataRecordName, DateCreated, DurationHours, DurationMinutes, EventDate, EventTime, EventType, StorageUnitId, StorageUnitPath, StorageUnitTemperature, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StorageEvent'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DURATIONHOURS__FIELD_NAME: WrapperField = WrapperField("DurationHours", FieldType.LONG)
    DURATIONMINUTES__FIELD_NAME: WrapperField = WrapperField("DurationMinutes", FieldType.SHORT)
    EVENTDATE__FIELD_NAME: WrapperField = WrapperField("EventDate", FieldType.DATE)
    EVENTTIME__FIELD_NAME: WrapperField = WrapperField("EventTime", FieldType.STRING)
    EVENTTYPE__FIELD_NAME: WrapperField = WrapperField("EventType", FieldType.PICKLIST)
    STORAGEUNITID__FIELD_NAME: WrapperField = WrapperField("StorageUnitId", FieldType.STRING)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    STORAGEUNITTEMPERATURE__FIELD_NAME: WrapperField = WrapperField("StorageUnitTemperature", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DurationHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'DurationHours' on this record model
        """
        self.set_field_value(self.DURATIONHOURS__FIELD_NAME.field_name, value)

    def get_DurationHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DurationHours' from this record model
        """
        return self.get_field_value(self.DURATIONHOURS__FIELD_NAME.field_name)

    def set_DurationMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'DurationMinutes' on this record model
        """
        self.set_field_value(self.DURATIONMINUTES__FIELD_NAME.field_name, value)

    def get_DurationMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DurationMinutes' from this record model
        """
        return self.get_field_value(self.DURATIONMINUTES__FIELD_NAME.field_name)

    def set_EventDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'EventDate' on this record model
        """
        self.set_field_value(self.EVENTDATE__FIELD_NAME.field_name, value)

    def get_EventDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EventDate' from this record model
        """
        return self.get_field_value(self.EVENTDATE__FIELD_NAME.field_name)

    def set_EventTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventTime' on this record model
        """
        self.set_field_value(self.EVENTTIME__FIELD_NAME.field_name, value)

    def get_EventTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventTime' from this record model
        """
        return self.get_field_value(self.EVENTTIME__FIELD_NAME.field_name)

    def set_EventType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventType' on this record model
        """
        self.set_field_value(self.EVENTTYPE__FIELD_NAME.field_name, value)

    def get_EventType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventType' from this record model
        """
        return self.get_field_value(self.EVENTTYPE__FIELD_NAME.field_name)

    def set_StorageUnitId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitId' on this record model
        """
        self.set_field_value(self.STORAGEUNITID__FIELD_NAME.field_name, value)

    def get_StorageUnitId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitId' from this record model
        """
        return self.get_field_value(self.STORAGEUNITID__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StorageUnitTemperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'StorageUnitTemperature' on this record model
        """
        self.set_field_value(self.STORAGEUNITTEMPERATURE__FIELD_NAME.field_name, value)

    def get_StorageUnitTemperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StorageUnitTemperature' from this record model
        """
        return self.get_field_value(self.STORAGEUNITTEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageHierarchyConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageHierarchyConfig
    Data Type Display Name: Storage Hierarchy Configuration (Storage Hierarchy Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, Hierarchy, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StorageHierarchyConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HIERARCHY__FIELD_NAME: WrapperField = WrapperField("Hierarchy", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Hierarchy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Hierarchy' on this record model
        """
        self.set_field_value(self.HIERARCHY__FIELD_NAME.field_name, value)

    def get_Hierarchy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Hierarchy' from this record model
        """
        return self.get_field_value(self.HIERARCHY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageUnitModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageUnit
    Data Type Display Name: Storage Unit (Storage Units)
    Fields: ColPosition, CreatedBy, DataRecordName, DateCreated, Humidity, IsActive, OccupiedCount, RecomputeOccupancy, RowPosition, StorageUnitCapacity, StorageUnitId, StorageUnitPath, StorageUnitType, Temperature, UnitColumns, UnitRows, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StorageUnit'
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HUMIDITY__FIELD_NAME: WrapperField = WrapperField("Humidity", FieldType.DOUBLE)
    ISACTIVE__FIELD_NAME: WrapperField = WrapperField("IsActive", FieldType.BOOLEAN)
    OCCUPIEDCOUNT__FIELD_NAME: WrapperField = WrapperField("OccupiedCount", FieldType.LONG)
    RECOMPUTEOCCUPANCY__FIELD_NAME: WrapperField = WrapperField("RecomputeOccupancy", FieldType.ACTION)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.STRING)
    STORAGEUNITCAPACITY__FIELD_NAME: WrapperField = WrapperField("StorageUnitCapacity", FieldType.LONG)
    STORAGEUNITID__FIELD_NAME: WrapperField = WrapperField("StorageUnitId", FieldType.STRING)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    STORAGEUNITTYPE__FIELD_NAME: WrapperField = WrapperField("StorageUnitType", FieldType.SELECTION)
    TEMPERATURE__FIELD_NAME: WrapperField = WrapperField("Temperature", FieldType.DOUBLE)
    UNITCOLUMNS__FIELD_NAME: WrapperField = WrapperField("UnitColumns", FieldType.LONG)
    UNITROWS__FIELD_NAME: WrapperField = WrapperField("UnitRows", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Humidity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Humidity' on this record model
        """
        self.set_field_value(self.HUMIDITY__FIELD_NAME.field_name, value)

    def get_Humidity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Humidity' from this record model
        """
        return self.get_field_value(self.HUMIDITY__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_OccupiedCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'OccupiedCount' on this record model
        """
        self.set_field_value(self.OCCUPIEDCOUNT__FIELD_NAME.field_name, value)

    def get_OccupiedCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'OccupiedCount' from this record model
        """
        return self.get_field_value(self.OCCUPIEDCOUNT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageUnitCapacity_field(self, value: Optional[int]):
        """
        Set data field with field name 'StorageUnitCapacity' on this record model
        """
        self.set_field_value(self.STORAGEUNITCAPACITY__FIELD_NAME.field_name, value)

    def get_StorageUnitCapacity_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StorageUnitCapacity' from this record model
        """
        return self.get_field_value(self.STORAGEUNITCAPACITY__FIELD_NAME.field_name)

    def set_StorageUnitId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitId' on this record model
        """
        self.set_field_value(self.STORAGEUNITID__FIELD_NAME.field_name, value)

    def get_StorageUnitId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitId' from this record model
        """
        return self.get_field_value(self.STORAGEUNITID__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StorageUnitType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitType' on this record model
        """
        self.set_field_value(self.STORAGEUNITTYPE__FIELD_NAME.field_name, value)

    def get_StorageUnitType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitType' from this record model
        """
        return self.get_field_value(self.STORAGEUNITTYPE__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_UnitColumns_field(self, value: Optional[int]):
        """
        Set data field with field name 'UnitColumns' on this record model
        """
        self.set_field_value(self.UNITCOLUMNS__FIELD_NAME.field_name, value)

    def get_UnitColumns_field(self) -> Optional[int]:
        """
        Get data field value with field name 'UnitColumns' from this record model
        """
        return self.get_field_value(self.UNITCOLUMNS__FIELD_NAME.field_name)

    def set_UnitRows_field(self, value: Optional[int]):
        """
        Set data field with field name 'UnitRows' on this record model
        """
        self.set_field_value(self.UNITROWS__FIELD_NAME.field_name, value)

    def get_UnitRows_field(self) -> Optional[int]:
        """
        Get data field value with field name 'UnitRows' from this record model
        """
        return self.get_field_value(self.UNITROWS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StrainModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Strain
    Data Type Display Name: Strain (Strains)
    Fields: Ci95Bounds, ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, LotNumber, PartNumber, SampleMean, SampleNormalizedMean, SampleStd, StandardError, StrainDetails, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Strain'
    CI95BOUNDS__FIELD_NAME: WrapperField = WrapperField("Ci95Bounds", FieldType.DOUBLE)
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    SAMPLEMEAN__FIELD_NAME: WrapperField = WrapperField("SampleMean", FieldType.DOUBLE)
    SAMPLENORMALIZEDMEAN__FIELD_NAME: WrapperField = WrapperField("SampleNormalizedMean", FieldType.DOUBLE)
    SAMPLESTD__FIELD_NAME: WrapperField = WrapperField("SampleStd", FieldType.DOUBLE)
    STANDARDERROR__FIELD_NAME: WrapperField = WrapperField("StandardError", FieldType.DOUBLE)
    STRAINDETAILS__FIELD_NAME: WrapperField = WrapperField("StrainDetails", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Ci95Bounds_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ci95Bounds' on this record model
        """
        self.set_field_value(self.CI95BOUNDS__FIELD_NAME.field_name, value)

    def get_Ci95Bounds_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ci95Bounds' from this record model
        """
        return self.get_field_value(self.CI95BOUNDS__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_SampleMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleMean' on this record model
        """
        self.set_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name, value)

    def get_SampleMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleMean' from this record model
        """
        return self.get_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name)

    def set_SampleNormalizedMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleNormalizedMean' on this record model
        """
        self.set_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name, value)

    def get_SampleNormalizedMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleNormalizedMean' from this record model
        """
        return self.get_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name)

    def set_SampleStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleStd' on this record model
        """
        self.set_field_value(self.SAMPLESTD__FIELD_NAME.field_name, value)

    def get_SampleStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleStd' from this record model
        """
        return self.get_field_value(self.SAMPLESTD__FIELD_NAME.field_name)

    def set_StandardError_field(self, value: Optional[float]):
        """
        Set data field with field name 'StandardError' on this record model
        """
        self.set_field_value(self.STANDARDERROR__FIELD_NAME.field_name, value)

    def get_StandardError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StandardError' from this record model
        """
        return self.get_field_value(self.STANDARDERROR__FIELD_NAME.field_name)

    def set_StrainDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails' on this record model
        """
        self.set_field_value(self.STRAINDETAILS__FIELD_NAME.field_name, value)

    def get_StrainDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StrainDetailsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StrainDetails
    Data Type Display Name: Strain Details (Strain Details)
    Fields: CreatedBy, DataRecordName, DateCreated, MultiParentLink215, PlasmidLotNumber, PlasmidName, PlasmidSequence, StrainLotNumber, StrainName, StrainPartNumber, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StrainDetails'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    PLASMIDLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("PlasmidLotNumber", FieldType.STRING)
    PLASMIDNAME__FIELD_NAME: WrapperField = WrapperField("PlasmidName", FieldType.STRING)
    PLASMIDSEQUENCE__FIELD_NAME: WrapperField = WrapperField("PlasmidSequence", FieldType.STRING)
    STRAINLOTNUMBER__FIELD_NAME: WrapperField = WrapperField("StrainLotNumber", FieldType.STRING)
    STRAINNAME__FIELD_NAME: WrapperField = WrapperField("StrainName", FieldType.STRING)
    STRAINPARTNUMBER__FIELD_NAME: WrapperField = WrapperField("StrainPartNumber", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PlasmidLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidLotNumber' on this record model
        """
        self.set_field_value(self.PLASMIDLOTNUMBER__FIELD_NAME.field_name, value)

    def get_PlasmidLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidLotNumber' from this record model
        """
        return self.get_field_value(self.PLASMIDLOTNUMBER__FIELD_NAME.field_name)

    def set_PlasmidName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidName' on this record model
        """
        self.set_field_value(self.PLASMIDNAME__FIELD_NAME.field_name, value)

    def get_PlasmidName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidName' from this record model
        """
        return self.get_field_value(self.PLASMIDNAME__FIELD_NAME.field_name)

    def set_PlasmidSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidSequence' on this record model
        """
        self.set_field_value(self.PLASMIDSEQUENCE__FIELD_NAME.field_name, value)

    def get_PlasmidSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidSequence' from this record model
        """
        return self.get_field_value(self.PLASMIDSEQUENCE__FIELD_NAME.field_name)

    def set_StrainLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainLotNumber' on this record model
        """
        self.set_field_value(self.STRAINLOTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainLotNumber' from this record model
        """
        return self.get_field_value(self.STRAINLOTNUMBER__FIELD_NAME.field_name)

    def set_StrainName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainName' on this record model
        """
        self.set_field_value(self.STRAINNAME__FIELD_NAME.field_name, value)

    def get_StrainName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainName' from this record model
        """
        return self.get_field_value(self.STRAINNAME__FIELD_NAME.field_name)

    def set_StrainPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainPartNumber' on this record model
        """
        self.set_field_value(self.STRAINPARTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainPartNumber' from this record model
        """
        return self.get_field_value(self.STRAINPARTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StrainPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StrainPart
    Data Type Display Name: Strain Part (Strain Parts)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, PartNumber, QuantityOnHand, QuantityPerItem, ReorderLevelQuantity, StrainDetails, Units, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'StrainPart'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    STRAINDETAILS__FIELD_NAME: WrapperField = WrapperField("StrainDetails", FieldType.STRING)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_StrainDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails' on this record model
        """
        self.set_field_value(self.STRAINDETAILS__FIELD_NAME.field_name, value)

    def get_StrainDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class StudyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Study
    Data Type Display Name: Study (Studies)
    Fields: AnalyticalCoordinator, ArchivalEmailSent, CreatedBy, DataRecordName, DateCreated, Description, InheritRolesFromParent, InheritRolesFromProject, IsActive, IsApproved, IsClinical, IsGLP, IsStudyTaskTypesCombined, IsSubjectRequestRequired, IsVivariumSubjectTracking, Locked, MaxBodyWeightDosingTime, PreviousProject, ProgramSummary, Purpose, SDMSSubdirectory, StudyCompletionDate, StudyContactEmail, StudyContactName, StudyDirector, StudyId, StudyName, StudyStartDate, StudyStatus, StudySubjectRandomizerConfig, StudyTitle, StudyType, VeloxLastModifiedBy, VeloxLastModifiedDate
    The Study Data Type
    """
    DATA_TYPE_NAME: str = 'Study'
    ANALYTICALCOORDINATOR__FIELD_NAME: WrapperField = WrapperField("AnalyticalCoordinator", FieldType.SELECTION)
    ARCHIVALEMAILSENT__FIELD_NAME: WrapperField = WrapperField("ArchivalEmailSent", FieldType.BOOLEAN)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    INHERITROLESFROMPARENT__FIELD_NAME: WrapperField = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN)
    INHERITROLESFROMPROJECT__FIELD_NAME: WrapperField = WrapperField("InheritRolesFromProject", FieldType.BOOLEAN)
    ISACTIVE__FIELD_NAME: WrapperField = WrapperField("IsActive", FieldType.BOOLEAN)
    ISAPPROVED__FIELD_NAME: WrapperField = WrapperField("IsApproved", FieldType.BOOLEAN)
    ISCLINICAL__FIELD_NAME: WrapperField = WrapperField("IsClinical", FieldType.BOOLEAN)
    ISGLP__FIELD_NAME: WrapperField = WrapperField("IsGLP", FieldType.BOOLEAN)
    ISSTUDYTASKTYPESCOMBINED__FIELD_NAME: WrapperField = WrapperField("IsStudyTaskTypesCombined", FieldType.BOOLEAN)
    ISSUBJECTREQUESTREQUIRED__FIELD_NAME: WrapperField = WrapperField("IsSubjectRequestRequired", FieldType.BOOLEAN)
    ISVIVARIUMSUBJECTTRACKING__FIELD_NAME: WrapperField = WrapperField("IsVivariumSubjectTracking", FieldType.BOOLEAN)
    LOCKED__FIELD_NAME: WrapperField = WrapperField("Locked", FieldType.BOOLEAN)
    MAXBODYWEIGHTDOSINGTIME__FIELD_NAME: WrapperField = WrapperField("MaxBodyWeightDosingTime", FieldType.INTEGER)
    PREVIOUSPROJECT__FIELD_NAME: WrapperField = WrapperField("PreviousProject", FieldType.LONG)
    PROGRAMSUMMARY__FIELD_NAME: WrapperField = WrapperField("ProgramSummary", FieldType.STRING)
    PURPOSE__FIELD_NAME: WrapperField = WrapperField("Purpose", FieldType.STRING)
    SDMSSUBDIRECTORY__FIELD_NAME: WrapperField = WrapperField("SDMSSubdirectory", FieldType.STRING)
    STUDYCOMPLETIONDATE__FIELD_NAME: WrapperField = WrapperField("StudyCompletionDate", FieldType.DATE)
    STUDYCONTACTEMAIL__FIELD_NAME: WrapperField = WrapperField("StudyContactEmail", FieldType.STRING)
    STUDYCONTACTNAME__FIELD_NAME: WrapperField = WrapperField("StudyContactName", FieldType.STRING)
    STUDYDIRECTOR__FIELD_NAME: WrapperField = WrapperField("StudyDirector", FieldType.SELECTION)
    STUDYID__FIELD_NAME: WrapperField = WrapperField("StudyId", FieldType.AUTO_ACCESSION)
    STUDYNAME__FIELD_NAME: WrapperField = WrapperField("StudyName", FieldType.STRING)
    STUDYSTARTDATE__FIELD_NAME: WrapperField = WrapperField("StudyStartDate", FieldType.DATE)
    STUDYSTATUS__FIELD_NAME: WrapperField = WrapperField("StudyStatus", FieldType.SELECTION)
    STUDYSUBJECTRANDOMIZERCONFIG__FIELD_NAME: WrapperField = WrapperField("StudySubjectRandomizerConfig", FieldType.SELECTION)
    STUDYTITLE__FIELD_NAME: WrapperField = WrapperField("StudyTitle", FieldType.STRING)
    STUDYTYPE__FIELD_NAME: WrapperField = WrapperField("StudyType", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnalyticalCoordinator_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalyticalCoordinator' on this record model
        """
        self.set_field_value(self.ANALYTICALCOORDINATOR__FIELD_NAME.field_name, value)

    def get_AnalyticalCoordinator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalyticalCoordinator' from this record model
        """
        return self.get_field_value(self.ANALYTICALCOORDINATOR__FIELD_NAME.field_name)

    def set_ArchivalEmailSent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ArchivalEmailSent' on this record model
        """
        self.set_field_value(self.ARCHIVALEMAILSENT__FIELD_NAME.field_name, value)

    def get_ArchivalEmailSent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ArchivalEmailSent' from this record model
        """
        return self.get_field_value(self.ARCHIVALEMAILSENT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def set_InheritRolesFromProject_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromProject' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPROJECT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromProject_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromProject' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPROJECT__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_IsApproved_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsApproved' on this record model
        """
        self.set_field_value(self.ISAPPROVED__FIELD_NAME.field_name, value)

    def get_IsApproved_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsApproved' from this record model
        """
        return self.get_field_value(self.ISAPPROVED__FIELD_NAME.field_name)

    def set_IsClinical_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsClinical' on this record model
        """
        self.set_field_value(self.ISCLINICAL__FIELD_NAME.field_name, value)

    def get_IsClinical_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsClinical' from this record model
        """
        return self.get_field_value(self.ISCLINICAL__FIELD_NAME.field_name)

    def set_IsGLP_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGLP' on this record model
        """
        self.set_field_value(self.ISGLP__FIELD_NAME.field_name, value)

    def get_IsGLP_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGLP' from this record model
        """
        return self.get_field_value(self.ISGLP__FIELD_NAME.field_name)

    def set_IsStudyTaskTypesCombined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsStudyTaskTypesCombined' on this record model
        """
        self.set_field_value(self.ISSTUDYTASKTYPESCOMBINED__FIELD_NAME.field_name, value)

    def get_IsStudyTaskTypesCombined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsStudyTaskTypesCombined' from this record model
        """
        return self.get_field_value(self.ISSTUDYTASKTYPESCOMBINED__FIELD_NAME.field_name)

    def set_IsSubjectRequestRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsSubjectRequestRequired' on this record model
        """
        self.set_field_value(self.ISSUBJECTREQUESTREQUIRED__FIELD_NAME.field_name, value)

    def get_IsSubjectRequestRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsSubjectRequestRequired' from this record model
        """
        return self.get_field_value(self.ISSUBJECTREQUESTREQUIRED__FIELD_NAME.field_name)

    def set_IsVivariumSubjectTracking_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsVivariumSubjectTracking' on this record model
        """
        self.set_field_value(self.ISVIVARIUMSUBJECTTRACKING__FIELD_NAME.field_name, value)

    def get_IsVivariumSubjectTracking_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsVivariumSubjectTracking' from this record model
        """
        return self.get_field_value(self.ISVIVARIUMSUBJECTTRACKING__FIELD_NAME.field_name)

    def set_Locked_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Locked' on this record model
        """
        self.set_field_value(self.LOCKED__FIELD_NAME.field_name, value)

    def get_Locked_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Locked' from this record model
        """
        return self.get_field_value(self.LOCKED__FIELD_NAME.field_name)

    def set_MaxBodyWeightDosingTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaxBodyWeightDosingTime' on this record model
        """
        self.set_field_value(self.MAXBODYWEIGHTDOSINGTIME__FIELD_NAME.field_name, value)

    def get_MaxBodyWeightDosingTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaxBodyWeightDosingTime' from this record model
        """
        return self.get_field_value(self.MAXBODYWEIGHTDOSINGTIME__FIELD_NAME.field_name)

    def set_PreviousProject_field(self, value: Optional[int]):
        """
        Set data field with field name 'PreviousProject' on this record model
        """
        self.set_field_value(self.PREVIOUSPROJECT__FIELD_NAME.field_name, value)

    def get_PreviousProject_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PreviousProject' from this record model
        """
        return self.get_field_value(self.PREVIOUSPROJECT__FIELD_NAME.field_name)

    def set_ProgramSummary_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProgramSummary' on this record model
        """
        self.set_field_value(self.PROGRAMSUMMARY__FIELD_NAME.field_name, value)

    def get_ProgramSummary_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProgramSummary' from this record model
        """
        return self.get_field_value(self.PROGRAMSUMMARY__FIELD_NAME.field_name)

    def set_Purpose_field(self, value: Optional[str]):
        """
        Set data field with field name 'Purpose' on this record model
        """
        self.set_field_value(self.PURPOSE__FIELD_NAME.field_name, value)

    def get_Purpose_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Purpose' from this record model
        """
        return self.get_field_value(self.PURPOSE__FIELD_NAME.field_name)

    def set_SDMSSubdirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'SDMSSubdirectory' on this record model
        """
        self.set_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name, value)

    def get_SDMSSubdirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SDMSSubdirectory' from this record model
        """
        return self.get_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name)

    def set_StudyCompletionDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudyCompletionDate' on this record model
        """
        self.set_field_value(self.STUDYCOMPLETIONDATE__FIELD_NAME.field_name, value)

    def get_StudyCompletionDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudyCompletionDate' from this record model
        """
        return self.get_field_value(self.STUDYCOMPLETIONDATE__FIELD_NAME.field_name)

    def set_StudyContactEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyContactEmail' on this record model
        """
        self.set_field_value(self.STUDYCONTACTEMAIL__FIELD_NAME.field_name, value)

    def get_StudyContactEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyContactEmail' from this record model
        """
        return self.get_field_value(self.STUDYCONTACTEMAIL__FIELD_NAME.field_name)

    def set_StudyContactName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyContactName' on this record model
        """
        self.set_field_value(self.STUDYCONTACTNAME__FIELD_NAME.field_name, value)

    def get_StudyContactName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyContactName' from this record model
        """
        return self.get_field_value(self.STUDYCONTACTNAME__FIELD_NAME.field_name)

    def set_StudyDirector_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyDirector' on this record model
        """
        self.set_field_value(self.STUDYDIRECTOR__FIELD_NAME.field_name, value)

    def get_StudyDirector_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyDirector' from this record model
        """
        return self.get_field_value(self.STUDYDIRECTOR__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_StudyName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyName' on this record model
        """
        self.set_field_value(self.STUDYNAME__FIELD_NAME.field_name, value)

    def get_StudyName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyName' from this record model
        """
        return self.get_field_value(self.STUDYNAME__FIELD_NAME.field_name)

    def set_StudyStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudyStartDate' on this record model
        """
        self.set_field_value(self.STUDYSTARTDATE__FIELD_NAME.field_name, value)

    def get_StudyStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudyStartDate' from this record model
        """
        return self.get_field_value(self.STUDYSTARTDATE__FIELD_NAME.field_name)

    def set_StudyStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyStatus' on this record model
        """
        self.set_field_value(self.STUDYSTATUS__FIELD_NAME.field_name, value)

    def get_StudyStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyStatus' from this record model
        """
        return self.get_field_value(self.STUDYSTATUS__FIELD_NAME.field_name)

    def set_StudySubjectRandomizerConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRandomizerConfig' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTRANDOMIZERCONFIG__FIELD_NAME.field_name, value)

    def get_StudySubjectRandomizerConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRandomizerConfig' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTRANDOMIZERCONFIG__FIELD_NAME.field_name)

    def set_StudyTitle_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyTitle' on this record model
        """
        self.set_field_value(self.STUDYTITLE__FIELD_NAME.field_name, value)

    def get_StudyTitle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyTitle' from this record model
        """
        return self.get_field_value(self.STUDYTITLE__FIELD_NAME.field_name)

    def set_StudyType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyType' on this record model
        """
        self.set_field_value(self.STUDYTYPE__FIELD_NAME.field_name, value)

    def get_StudyType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyType' from this record model
        """
        return self.get_field_value(self.STUDYTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudySubjectModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudySubject
    Data Type Display Name: Study Subject (Study Subjects)
    Fields: CreatedBy, DataRecordName, DateCreated, Gender, GroupId, MultiParentLink658, MultiParentLink704, Species, StudySubjectID, SubjectStatus, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StudySubject'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GENDER__FIELD_NAME: WrapperField = WrapperField("Gender", FieldType.SELECTION)
    GROUPID__FIELD_NAME: WrapperField = WrapperField("GroupId", FieldType.INTEGER)
    MULTIPARENTLINK658__FIELD_NAME: WrapperField = WrapperField("MultiParentLink658", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK704__FIELD_NAME: WrapperField = WrapperField("MultiParentLink704", FieldType.MULTIPARENTLINK)
    SPECIES__FIELD_NAME: WrapperField = WrapperField("Species", FieldType.PICKLIST)
    STUDYSUBJECTID__FIELD_NAME: WrapperField = WrapperField("StudySubjectID", FieldType.STRING)
    SUBJECTSTATUS__FIELD_NAME: WrapperField = WrapperField("SubjectStatus", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_GroupId_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupId' on this record model
        """
        self.set_field_value(self.GROUPID__FIELD_NAME.field_name, value)

    def get_GroupId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupId' from this record model
        """
        return self.get_field_value(self.GROUPID__FIELD_NAME.field_name)

    def set_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'Species' on this record model
        """
        self.set_field_value(self.SPECIES__FIELD_NAME.field_name, value)

    def get_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Species' from this record model
        """
        return self.get_field_value(self.SPECIES__FIELD_NAME.field_name)

    def set_StudySubjectID_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectID' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTID__FIELD_NAME.field_name, value)

    def get_StudySubjectID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectID' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTID__FIELD_NAME.field_name)

    def set_SubjectStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectStatus' on this record model
        """
        self.set_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name, value)

    def get_SubjectStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectStatus' from this record model
        """
        return self.get_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudySubjectRandomizerConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudySubjectRandomizerConfig
    Data Type Display Name: Study Subject Randomizer Configuration (Study Subject Randomizer Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, RandomizerDisplayName, RandomizerPluginPath, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StudySubjectRandomizerConfig'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    RANDOMIZERDISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("RandomizerDisplayName", FieldType.STRING)
    RANDOMIZERPLUGINPATH__FIELD_NAME: WrapperField = WrapperField("RandomizerPluginPath", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_RandomizerDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RandomizerDisplayName' on this record model
        """
        self.set_field_value(self.RANDOMIZERDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_RandomizerDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RandomizerDisplayName' from this record model
        """
        return self.get_field_value(self.RANDOMIZERDISPLAYNAME__FIELD_NAME.field_name)

    def set_RandomizerPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'RandomizerPluginPath' on this record model
        """
        self.set_field_value(self.RANDOMIZERPLUGINPATH__FIELD_NAME.field_name, value)

    def get_RandomizerPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RandomizerPluginPath' from this record model
        """
        return self.get_field_value(self.RANDOMIZERPLUGINPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudySubjectRequestModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudySubjectRequest
    Data Type Display Name: Study Subject Request (Study Subject Requests)
    Fields: CreatedBy, DataRecordName, DateCreated, Gender, LaunchSubjectRegistration, NumberOfSubjects, Species, Strain, SubjectCondition, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StudySubjectRequest'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GENDER__FIELD_NAME: WrapperField = WrapperField("Gender", FieldType.SELECTION)
    LAUNCHSUBJECTREGISTRATION__FIELD_NAME: WrapperField = WrapperField("LaunchSubjectRegistration", FieldType.ACTION)
    NUMBEROFSUBJECTS__FIELD_NAME: WrapperField = WrapperField("NumberOfSubjects", FieldType.INTEGER)
    SPECIES__FIELD_NAME: WrapperField = WrapperField("Species", FieldType.PICKLIST)
    STRAIN__FIELD_NAME: WrapperField = WrapperField("Strain", FieldType.SELECTION)
    SUBJECTCONDITION__FIELD_NAME: WrapperField = WrapperField("SubjectCondition", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_NumberOfSubjects_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSubjects' on this record model
        """
        self.set_field_value(self.NUMBEROFSUBJECTS__FIELD_NAME.field_name, value)

    def get_NumberOfSubjects_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSubjects' from this record model
        """
        return self.get_field_value(self.NUMBEROFSUBJECTS__FIELD_NAME.field_name)

    def set_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'Species' on this record model
        """
        self.set_field_value(self.SPECIES__FIELD_NAME.field_name, value)

    def get_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Species' from this record model
        """
        return self.get_field_value(self.SPECIES__FIELD_NAME.field_name)

    def set_Strain_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain' on this record model
        """
        self.set_field_value(self.STRAIN__FIELD_NAME.field_name, value)

    def get_Strain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain' from this record model
        """
        return self.get_field_value(self.STRAIN__FIELD_NAME.field_name)

    def set_SubjectCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectCondition' on this record model
        """
        self.set_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name, value)

    def get_SubjectCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectCondition' from this record model
        """
        return self.get_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudyTaskModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudyTask
    Data Type Display Name: Study Task (Study Tasks)
    Fields: Assignee, BiologicalMatrix, CreatedBy, DataRecordName, DateCreated, DosingAgent, MeasurementScheduleRecordId, ObservationType, SamplingScheduleRecordId, SamplingSplitNumber, ScheduleDate, StudyId, TaskStatus, TaskType, TreatmentRecordId, TreatmentScheduleRecordId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StudyTask'
    ASSIGNEE__FIELD_NAME: WrapperField = WrapperField("Assignee", FieldType.SELECTION)
    BIOLOGICALMATRIX__FIELD_NAME: WrapperField = WrapperField("BiologicalMatrix", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DOSINGAGENT__FIELD_NAME: WrapperField = WrapperField("DosingAgent", FieldType.SELECTION)
    MEASUREMENTSCHEDULERECORDID__FIELD_NAME: WrapperField = WrapperField("MeasurementScheduleRecordId", FieldType.LONG)
    OBSERVATIONTYPE__FIELD_NAME: WrapperField = WrapperField("ObservationType", FieldType.SELECTION)
    SAMPLINGSCHEDULERECORDID__FIELD_NAME: WrapperField = WrapperField("SamplingScheduleRecordId", FieldType.LONG)
    SAMPLINGSPLITNUMBER__FIELD_NAME: WrapperField = WrapperField("SamplingSplitNumber", FieldType.INTEGER)
    SCHEDULEDATE__FIELD_NAME: WrapperField = WrapperField("ScheduleDate", FieldType.DATE)
    STUDYID__FIELD_NAME: WrapperField = WrapperField("StudyId", FieldType.STRING)
    TASKSTATUS__FIELD_NAME: WrapperField = WrapperField("TaskStatus", FieldType.SELECTION)
    TASKTYPE__FIELD_NAME: WrapperField = WrapperField("TaskType", FieldType.SELECTION)
    TREATMENTRECORDID__FIELD_NAME: WrapperField = WrapperField("TreatmentRecordId", FieldType.LONG)
    TREATMENTSCHEDULERECORDID__FIELD_NAME: WrapperField = WrapperField("TreatmentScheduleRecordId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Assignee_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assignee' on this record model
        """
        self.set_field_value(self.ASSIGNEE__FIELD_NAME.field_name, value)

    def get_Assignee_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assignee' from this record model
        """
        return self.get_field_value(self.ASSIGNEE__FIELD_NAME.field_name)

    def set_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalMatrix' on this record model
        """
        self.set_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DosingAgent_field(self, value: Optional[str]):
        """
        Set data field with field name 'DosingAgent' on this record model
        """
        self.set_field_value(self.DOSINGAGENT__FIELD_NAME.field_name, value)

    def get_DosingAgent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DosingAgent' from this record model
        """
        return self.get_field_value(self.DOSINGAGENT__FIELD_NAME.field_name)

    def set_MeasurementScheduleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'MeasurementScheduleRecordId' on this record model
        """
        self.set_field_value(self.MEASUREMENTSCHEDULERECORDID__FIELD_NAME.field_name, value)

    def get_MeasurementScheduleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MeasurementScheduleRecordId' from this record model
        """
        return self.get_field_value(self.MEASUREMENTSCHEDULERECORDID__FIELD_NAME.field_name)

    def set_ObservationType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservationType' on this record model
        """
        self.set_field_value(self.OBSERVATIONTYPE__FIELD_NAME.field_name, value)

    def get_ObservationType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservationType' from this record model
        """
        return self.get_field_value(self.OBSERVATIONTYPE__FIELD_NAME.field_name)

    def set_SamplingScheduleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingScheduleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLINGSCHEDULERECORDID__FIELD_NAME.field_name, value)

    def get_SamplingScheduleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingScheduleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLINGSCHEDULERECORDID__FIELD_NAME.field_name)

    def set_SamplingSplitNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingSplitNumber' on this record model
        """
        self.set_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name, value)

    def get_SamplingSplitNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingSplitNumber' from this record model
        """
        return self.get_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name)

    def set_ScheduleDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduleDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name, value)

    def get_ScheduleDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduleDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_TaskStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskStatus' on this record model
        """
        self.set_field_value(self.TASKSTATUS__FIELD_NAME.field_name, value)

    def get_TaskStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskStatus' from this record model
        """
        return self.get_field_value(self.TASKSTATUS__FIELD_NAME.field_name)

    def set_TaskType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskType' on this record model
        """
        self.set_field_value(self.TASKTYPE__FIELD_NAME.field_name, value)

    def get_TaskType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskType' from this record model
        """
        return self.get_field_value(self.TASKTYPE__FIELD_NAME.field_name)

    def set_TreatmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentRecordId' on this record model
        """
        self.set_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name, value)

    def get_TreatmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentRecordId' from this record model
        """
        return self.get_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name)

    def set_TreatmentScheduleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentScheduleRecordId' on this record model
        """
        self.set_field_value(self.TREATMENTSCHEDULERECORDID__FIELD_NAME.field_name, value)

    def get_TreatmentScheduleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentScheduleRecordId' from this record model
        """
        return self.get_field_value(self.TREATMENTSCHEDULERECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudyTaskGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudyTaskGroup
    Data Type Display Name: Study Task Group (Study Task Groups)
    Fields: Assignee, CreatedBy, DataRecordName, DateCreated, Description, ScheduleDate, StudyId, TaskStatus, TaskType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StudyTaskGroup'
    ASSIGNEE__FIELD_NAME: WrapperField = WrapperField("Assignee", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    SCHEDULEDATE__FIELD_NAME: WrapperField = WrapperField("ScheduleDate", FieldType.DATE)
    STUDYID__FIELD_NAME: WrapperField = WrapperField("StudyId", FieldType.STRING)
    TASKSTATUS__FIELD_NAME: WrapperField = WrapperField("TaskStatus", FieldType.SELECTION)
    TASKTYPE__FIELD_NAME: WrapperField = WrapperField("TaskType", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Assignee_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assignee' on this record model
        """
        self.set_field_value(self.ASSIGNEE__FIELD_NAME.field_name, value)

    def get_Assignee_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assignee' from this record model
        """
        return self.get_field_value(self.ASSIGNEE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ScheduleDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduleDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name, value)

    def get_ScheduleDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduleDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_TaskStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskStatus' on this record model
        """
        self.set_field_value(self.TASKSTATUS__FIELD_NAME.field_name, value)

    def get_TaskStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskStatus' from this record model
        """
        return self.get_field_value(self.TASKSTATUS__FIELD_NAME.field_name)

    def set_TaskType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskType' on this record model
        """
        self.set_field_value(self.TASKTYPE__FIELD_NAME.field_name, value)

    def get_TaskType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskType' from this record model
        """
        return self.get_field_value(self.TASKTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudyTaskObservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudyTaskObservation
    Data Type Display Name: Study Task Observation (Study Task Observations)
    Fields: CreatedBy, DataRecordName, DateCompleted, DateCreated, StudyRecordId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'StudyTaskObservation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECOMPLETED__FIELD_NAME: WrapperField = WrapperField("DateCompleted", FieldType.DATE)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    STUDYRECORDID__FIELD_NAME: WrapperField = WrapperField("StudyRecordId", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_StudyRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudyRecordId' on this record model
        """
        self.set_field_value(self.STUDYRECORDID__FIELD_NAME.field_name, value)

    def get_StudyRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudyRecordId' from this record model
        """
        return self.get_field_value(self.STUDYRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SubjectModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Subject
    Data Type Display Name: Subject (Subjects)
    Fields: Age, BodyMass, BodyMassUnits, ColPosition, CreatedBy, DataRecordName, DateCreated, DateOfBirth, Gender, Genotype, Height, MultiParentLink704, RowPosition, Site, Species, StorageLocationBarcode, StorageUnitPath, Strain, SubjectCondition, SubjectID, SubjectName, SubjectStatus, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor, Weight
    """
    DATA_TYPE_NAME: str = 'Subject'
    AGE__FIELD_NAME: WrapperField = WrapperField("Age", FieldType.DOUBLE)
    BODYMASS__FIELD_NAME: WrapperField = WrapperField("BodyMass", FieldType.DOUBLE)
    BODYMASSUNITS__FIELD_NAME: WrapperField = WrapperField("BodyMassUnits", FieldType.PICKLIST)
    COLPOSITION__FIELD_NAME: WrapperField = WrapperField("ColPosition", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATEOFBIRTH__FIELD_NAME: WrapperField = WrapperField("DateOfBirth", FieldType.DATE)
    GENDER__FIELD_NAME: WrapperField = WrapperField("Gender", FieldType.SELECTION)
    GENOTYPE__FIELD_NAME: WrapperField = WrapperField("Genotype", FieldType.STRING)
    HEIGHT__FIELD_NAME: WrapperField = WrapperField("Height", FieldType.DOUBLE)
    MULTIPARENTLINK704__FIELD_NAME: WrapperField = WrapperField("MultiParentLink704", FieldType.MULTIPARENTLINK)
    ROWPOSITION__FIELD_NAME: WrapperField = WrapperField("RowPosition", FieldType.SELECTION)
    SITE__FIELD_NAME: WrapperField = WrapperField("Site", FieldType.PICKLIST)
    SPECIES__FIELD_NAME: WrapperField = WrapperField("Species", FieldType.PICKLIST)
    STORAGELOCATIONBARCODE__FIELD_NAME: WrapperField = WrapperField("StorageLocationBarcode", FieldType.SELECTION)
    STORAGEUNITPATH__FIELD_NAME: WrapperField = WrapperField("StorageUnitPath", FieldType.STRING)
    STRAIN__FIELD_NAME: WrapperField = WrapperField("Strain", FieldType.SELECTION)
    SUBJECTCONDITION__FIELD_NAME: WrapperField = WrapperField("SubjectCondition", FieldType.SELECTION)
    SUBJECTID__FIELD_NAME: WrapperField = WrapperField("SubjectID", FieldType.AUTO_ACCESSION)
    SUBJECTNAME__FIELD_NAME: WrapperField = WrapperField("SubjectName", FieldType.STRING)
    SUBJECTSTATUS__FIELD_NAME: WrapperField = WrapperField("SubjectStatus", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.STRING)
    WEIGHT__FIELD_NAME: WrapperField = WrapperField("Weight", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Age_field(self, value: Optional[float]):
        """
        Set data field with field name 'Age' on this record model
        """
        self.set_field_value(self.AGE__FIELD_NAME.field_name, value)

    def get_Age_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Age' from this record model
        """
        return self.get_field_value(self.AGE__FIELD_NAME.field_name)

    def set_BodyMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'BodyMass' on this record model
        """
        self.set_field_value(self.BODYMASS__FIELD_NAME.field_name, value)

    def get_BodyMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BodyMass' from this record model
        """
        return self.get_field_value(self.BODYMASS__FIELD_NAME.field_name)

    def set_BodyMassUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'BodyMassUnits' on this record model
        """
        self.set_field_value(self.BODYMASSUNITS__FIELD_NAME.field_name, value)

    def get_BodyMassUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BodyMassUnits' from this record model
        """
        return self.get_field_value(self.BODYMASSUNITS__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateOfBirth_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfBirth' on this record model
        """
        self.set_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name, value)

    def get_DateOfBirth_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfBirth' from this record model
        """
        return self.get_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_Genotype_field(self, value: Optional[str]):
        """
        Set data field with field name 'Genotype' on this record model
        """
        self.set_field_value(self.GENOTYPE__FIELD_NAME.field_name, value)

    def get_Genotype_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Genotype' from this record model
        """
        return self.get_field_value(self.GENOTYPE__FIELD_NAME.field_name)

    def set_Height_field(self, value: Optional[float]):
        """
        Set data field with field name 'Height' on this record model
        """
        self.set_field_value(self.HEIGHT__FIELD_NAME.field_name, value)

    def get_Height_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Height' from this record model
        """
        return self.get_field_value(self.HEIGHT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_Site_field(self, value: Optional[str]):
        """
        Set data field with field name 'Site' on this record model
        """
        self.set_field_value(self.SITE__FIELD_NAME.field_name, value)

    def get_Site_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Site' from this record model
        """
        return self.get_field_value(self.SITE__FIELD_NAME.field_name)

    def set_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'Species' on this record model
        """
        self.set_field_value(self.SPECIES__FIELD_NAME.field_name, value)

    def get_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Species' from this record model
        """
        return self.get_field_value(self.SPECIES__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_Strain_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain' on this record model
        """
        self.set_field_value(self.STRAIN__FIELD_NAME.field_name, value)

    def get_Strain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain' from this record model
        """
        return self.get_field_value(self.STRAIN__FIELD_NAME.field_name)

    def set_SubjectCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectCondition' on this record model
        """
        self.set_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name, value)

    def get_SubjectCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectCondition' from this record model
        """
        return self.get_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name)

    def set_SubjectID_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectID' on this record model
        """
        self.set_field_value(self.SUBJECTID__FIELD_NAME.field_name, value)

    def get_SubjectID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectID' from this record model
        """
        return self.get_field_value(self.SUBJECTID__FIELD_NAME.field_name)

    def set_SubjectName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectName' on this record model
        """
        self.set_field_value(self.SUBJECTNAME__FIELD_NAME.field_name, value)

    def get_SubjectName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectName' from this record model
        """
        return self.get_field_value(self.SUBJECTNAME__FIELD_NAME.field_name)

    def set_SubjectStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectStatus' on this record model
        """
        self.set_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name, value)

    def get_SubjectStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectStatus' from this record model
        """
        return self.get_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)

    def set_Weight_field(self, value: Optional[float]):
        """
        Set data field with field name 'Weight' on this record model
        """
        self.set_field_value(self.WEIGHT__FIELD_NAME.field_name, value)

    def get_Weight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Weight' from this record model
        """
        return self.get_field_value(self.WEIGHT__FIELD_NAME.field_name)


class SubjectMeasurementScheduleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SubjectMeasurementSchedule
    Data Type Display Name: Subject Observation Schedule (Subject Observation Schedules)
    Fields: CreatedBy, DataRecordName, DateCreated, GroupId, IsPredose, MeasurementType, MeasuringMilliseconds, TimepointDuration, UnitsOfMeasure, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SubjectMeasurementSchedule'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    GROUPID__FIELD_NAME: WrapperField = WrapperField("GroupId", FieldType.INTEGER)
    ISPREDOSE__FIELD_NAME: WrapperField = WrapperField("IsPredose", FieldType.BOOLEAN)
    MEASUREMENTTYPE__FIELD_NAME: WrapperField = WrapperField("MeasurementType", FieldType.SELECTION)
    MEASURINGMILLISECONDS__FIELD_NAME: WrapperField = WrapperField("MeasuringMilliseconds", FieldType.LONG)
    TIMEPOINTDURATION__FIELD_NAME: WrapperField = WrapperField("TimepointDuration", FieldType.DATE)
    UNITSOFMEASURE__FIELD_NAME: WrapperField = WrapperField("UnitsOfMeasure", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupId_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupId' on this record model
        """
        self.set_field_value(self.GROUPID__FIELD_NAME.field_name, value)

    def get_GroupId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupId' from this record model
        """
        return self.get_field_value(self.GROUPID__FIELD_NAME.field_name)

    def set_IsPredose_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPredose' on this record model
        """
        self.set_field_value(self.ISPREDOSE__FIELD_NAME.field_name, value)

    def get_IsPredose_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPredose' from this record model
        """
        return self.get_field_value(self.ISPREDOSE__FIELD_NAME.field_name)

    def set_MeasurementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MeasurementType' on this record model
        """
        self.set_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name, value)

    def get_MeasurementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MeasurementType' from this record model
        """
        return self.get_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name)

    def set_MeasuringMilliseconds_field(self, value: Optional[int]):
        """
        Set data field with field name 'MeasuringMilliseconds' on this record model
        """
        self.set_field_value(self.MEASURINGMILLISECONDS__FIELD_NAME.field_name, value)

    def get_MeasuringMilliseconds_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MeasuringMilliseconds' from this record model
        """
        return self.get_field_value(self.MEASURINGMILLISECONDS__FIELD_NAME.field_name)

    def set_TimepointDuration_field(self, value: Optional[int]):
        """
        Set data field with field name 'TimepointDuration' on this record model
        """
        self.set_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name, value)

    def get_TimepointDuration_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TimepointDuration' from this record model
        """
        return self.get_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name)

    def set_UnitsOfMeasure_field(self, value: Optional[str]):
        """
        Set data field with field name 'UnitsOfMeasure' on this record model
        """
        self.set_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name, value)

    def get_UnitsOfMeasure_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UnitsOfMeasure' from this record model
        """
        return self.get_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SubjectObservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SubjectObservation
    Data Type Display Name: Subject Observation (Subject Observations)
    Fields: CreatedBy, DataRecordName, DateCreated, MeasuredBy, MeasurementDate, MeasurementType, MeasurementValue, SubjectRecordId, UnitsOfMeasure, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SubjectObservation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MEASUREDBY__FIELD_NAME: WrapperField = WrapperField("MeasuredBy", FieldType.SELECTION)
    MEASUREMENTDATE__FIELD_NAME: WrapperField = WrapperField("MeasurementDate", FieldType.DATE)
    MEASUREMENTTYPE__FIELD_NAME: WrapperField = WrapperField("MeasurementType", FieldType.SELECTION)
    MEASUREMENTVALUE__FIELD_NAME: WrapperField = WrapperField("MeasurementValue", FieldType.DOUBLE)
    SUBJECTRECORDID__FIELD_NAME: WrapperField = WrapperField("SubjectRecordId", FieldType.LONG)
    UNITSOFMEASURE__FIELD_NAME: WrapperField = WrapperField("UnitsOfMeasure", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MeasuredBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'MeasuredBy' on this record model
        """
        self.set_field_value(self.MEASUREDBY__FIELD_NAME.field_name, value)

    def get_MeasuredBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MeasuredBy' from this record model
        """
        return self.get_field_value(self.MEASUREDBY__FIELD_NAME.field_name)

    def set_MeasurementDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MeasurementDate' on this record model
        """
        self.set_field_value(self.MEASUREMENTDATE__FIELD_NAME.field_name, value)

    def get_MeasurementDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MeasurementDate' from this record model
        """
        return self.get_field_value(self.MEASUREMENTDATE__FIELD_NAME.field_name)

    def set_MeasurementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MeasurementType' on this record model
        """
        self.set_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name, value)

    def get_MeasurementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MeasurementType' from this record model
        """
        return self.get_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name)

    def set_MeasurementValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'MeasurementValue' on this record model
        """
        self.set_field_value(self.MEASUREMENTVALUE__FIELD_NAME.field_name, value)

    def get_MeasurementValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MeasurementValue' from this record model
        """
        return self.get_field_value(self.MEASUREMENTVALUE__FIELD_NAME.field_name)

    def set_SubjectRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectRecordId' on this record model
        """
        self.set_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name, value)

    def get_SubjectRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectRecordId' from this record model
        """
        return self.get_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name)

    def set_UnitsOfMeasure_field(self, value: Optional[str]):
        """
        Set data field with field name 'UnitsOfMeasure' on this record model
        """
        self.set_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name, value)

    def get_UnitsOfMeasure_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UnitsOfMeasure' from this record model
        """
        return self.get_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SubjectRemovalModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SubjectRemoval
    Data Type Display Name: Subject Removal (Subject Removals)
    Fields: CreatedBy, DataRecordName, DateCreated, RemovalComments, RemovalReason, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'SubjectRemoval'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    REMOVALCOMMENTS__FIELD_NAME: WrapperField = WrapperField("RemovalComments", FieldType.STRING)
    REMOVALREASON__FIELD_NAME: WrapperField = WrapperField("RemovalReason", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_RemovalComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'RemovalComments' on this record model
        """
        self.set_field_value(self.REMOVALCOMMENTS__FIELD_NAME.field_name, value)

    def get_RemovalComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RemovalComments' from this record model
        """
        return self.get_field_value(self.REMOVALCOMMENTS__FIELD_NAME.field_name)

    def set_RemovalReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'RemovalReason' on this record model
        """
        self.set_field_value(self.REMOVALREASON__FIELD_NAME.field_name, value)

    def get_RemovalReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RemovalReason' from this record model
        """
        return self.get_field_value(self.REMOVALREASON__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TapeStationResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TapeStationResult
    Data Type Display Name: TapeStation Result (TapeStation Results)
    Fields: Area, AvgBPSize, CreatedBy, DataRecordName, DateCreated, Molarity, MolarityUnits, PeakRegionIdentifier, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'TapeStationResult'
    AREA__FIELD_NAME: WrapperField = WrapperField("Area", FieldType.DOUBLE)
    AVGBPSIZE__FIELD_NAME: WrapperField = WrapperField("AvgBPSize", FieldType.DOUBLE)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MOLARITY__FIELD_NAME: WrapperField = WrapperField("Molarity", FieldType.DOUBLE)
    MOLARITYUNITS__FIELD_NAME: WrapperField = WrapperField("MolarityUnits", FieldType.STRING)
    PEAKREGIONIDENTIFIER__FIELD_NAME: WrapperField = WrapperField("PeakRegionIdentifier", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_AvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBPSize' on this record model
        """
        self.set_field_value(self.AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_AvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBPSize' from this record model
        """
        return self.get_field_value(self.AVGBPSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_PeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_PeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TemplateWellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TemplateWell
    Data Type Display Name: Template Plate Well (Template Plate Wells)
    Fields: CreatedBy, DataRecordName, DateCreated, VeloxLastModifiedBy, VeloxLastModifiedDate, WellPosition
    """
    DATA_TYPE_NAME: str = 'TemplateWell'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELLPOSITION__FIELD_NAME: WrapperField = WrapperField("WellPosition", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellPosition' on this record model
        """
        self.set_field_value(self.WELLPOSITION__FIELD_NAME.field_name, value)

    def get_WellPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellPosition' from this record model
        """
        return self.get_field_value(self.WELLPOSITION__FIELD_NAME.field_name)


class TolinoTechAssignedModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TolinoTechAssigned
    Data Type Display Name: Tolino Tech Assigned (Tolino Tech Assigneds)
    Fields: CreatedBy, DataRecordName, DateCreated, TechAssigned, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'TolinoTechAssigned'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    TECHASSIGNED__FIELD_NAME: WrapperField = WrapperField("TechAssigned", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TechAssigned_field(self, value: Optional[str]):
        """
        Set data field with field name 'TechAssigned' on this record model
        """
        self.set_field_value(self.TECHASSIGNED__FIELD_NAME.field_name, value)

    def get_TechAssigned_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TechAssigned' from this record model
        """
        return self.get_field_value(self.TECHASSIGNED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TreatmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Treatment
    Data Type Display Name: Treatment (Treatments)
    Fields: CreatedBy, DataRecordName, DateCreated, DoseAmounts, DoseType, DoseUnit, Formulation, Placebo, RouteOfAdministration, TreatmentId, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'Treatment'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DOSEAMOUNTS__FIELD_NAME: WrapperField = WrapperField("DoseAmounts", FieldType.DOUBLE)
    DOSETYPE__FIELD_NAME: WrapperField = WrapperField("DoseType", FieldType.PICKLIST)
    DOSEUNIT__FIELD_NAME: WrapperField = WrapperField("DoseUnit", FieldType.SELECTION)
    FORMULATION__FIELD_NAME: WrapperField = WrapperField("Formulation", FieldType.SELECTION)
    PLACEBO__FIELD_NAME: WrapperField = WrapperField("Placebo", FieldType.BOOLEAN)
    ROUTEOFADMINISTRATION__FIELD_NAME: WrapperField = WrapperField("RouteOfAdministration", FieldType.SELECTION)
    TREATMENTID__FIELD_NAME: WrapperField = WrapperField("TreatmentId", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DoseAmounts_field(self, value: Optional[float]):
        """
        Set data field with field name 'DoseAmounts' on this record model
        """
        self.set_field_value(self.DOSEAMOUNTS__FIELD_NAME.field_name, value)

    def get_DoseAmounts_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DoseAmounts' from this record model
        """
        return self.get_field_value(self.DOSEAMOUNTS__FIELD_NAME.field_name)

    def set_DoseType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseType' on this record model
        """
        self.set_field_value(self.DOSETYPE__FIELD_NAME.field_name, value)

    def get_DoseType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseType' from this record model
        """
        return self.get_field_value(self.DOSETYPE__FIELD_NAME.field_name)

    def set_DoseUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseUnit' on this record model
        """
        self.set_field_value(self.DOSEUNIT__FIELD_NAME.field_name, value)

    def get_DoseUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseUnit' from this record model
        """
        return self.get_field_value(self.DOSEUNIT__FIELD_NAME.field_name)

    def set_Formulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formulation' on this record model
        """
        self.set_field_value(self.FORMULATION__FIELD_NAME.field_name, value)

    def get_Formulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formulation' from this record model
        """
        return self.get_field_value(self.FORMULATION__FIELD_NAME.field_name)

    def set_Placebo_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Placebo' on this record model
        """
        self.set_field_value(self.PLACEBO__FIELD_NAME.field_name, value)

    def get_Placebo_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Placebo' from this record model
        """
        return self.get_field_value(self.PLACEBO__FIELD_NAME.field_name)

    def set_RouteOfAdministration_field(self, value: Optional[str]):
        """
        Set data field with field name 'RouteOfAdministration' on this record model
        """
        self.set_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name, value)

    def get_RouteOfAdministration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RouteOfAdministration' from this record model
        """
        return self.get_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name)

    def set_TreatmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentId' on this record model
        """
        self.set_field_value(self.TREATMENTID__FIELD_NAME.field_name, value)

    def get_TreatmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentId' from this record model
        """
        return self.get_field_value(self.TREATMENTID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TreatmentScheduleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TreatmentSchedule
    Data Type Display Name: Treatment Schedule (Treatment Schedules)
    Fields: CreatedBy, DataRecordName, DateCreated, MultiParentLink649, TreatmentMilliseconds, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'TreatmentSchedule'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MULTIPARENTLINK649__FIELD_NAME: WrapperField = WrapperField("MultiParentLink649", FieldType.MULTIPARENTLINK)
    TREATMENTMILLISECONDS__FIELD_NAME: WrapperField = WrapperField("TreatmentMilliseconds", FieldType.LONG)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TreatmentMilliseconds_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentMilliseconds' on this record model
        """
        self.set_field_value(self.TREATMENTMILLISECONDS__FIELD_NAME.field_name, value)

    def get_TreatmentMilliseconds_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentMilliseconds' from this record model
        """
        return self.get_field_value(self.TREATMENTMILLISECONDS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TumorVolumeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TumorVolume
    Data Type Display Name: Tumor Volume (Tumor Volumes)
    Fields: CreatedBy, DataRecordName, DateCreated, Measure1mm, Measure2mm, ObservationInstrument, VeloxLastModifiedBy, VeloxLastModifiedDate, Volumemm
    """
    DATA_TYPE_NAME: str = 'TumorVolume'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    MEASURE1MM__FIELD_NAME: WrapperField = WrapperField("Measure1mm", FieldType.DOUBLE)
    MEASURE2MM__FIELD_NAME: WrapperField = WrapperField("Measure2mm", FieldType.DOUBLE)
    OBSERVATIONINSTRUMENT__FIELD_NAME: WrapperField = WrapperField("ObservationInstrument", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VOLUMEMM__FIELD_NAME: WrapperField = WrapperField("Volumemm", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Measure1mm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Measure1mm' on this record model
        """
        self.set_field_value(self.MEASURE1MM__FIELD_NAME.field_name, value)

    def get_Measure1mm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Measure1mm' from this record model
        """
        return self.get_field_value(self.MEASURE1MM__FIELD_NAME.field_name)

    def set_Measure2mm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Measure2mm' on this record model
        """
        self.set_field_value(self.MEASURE2MM__FIELD_NAME.field_name, value)

    def get_Measure2mm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Measure2mm' from this record model
        """
        return self.get_field_value(self.MEASURE2MM__FIELD_NAME.field_name)

    def set_ObservationInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservationInstrument' on this record model
        """
        self.set_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name, value)

    def get_ObservationInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservationInstrument' from this record model
        """
        return self.get_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volumemm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volumemm' on this record model
        """
        self.set_field_value(self.VOLUMEMM__FIELD_NAME.field_name, value)

    def get_Volumemm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volumemm' from this record model
        """
        return self.get_field_value(self.VOLUMEMM__FIELD_NAME.field_name)


class VeloxAppRecordModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxAppRecord
    Data Type Display Name: Organization Details (Organization Details)
    Fields: Address1, Address2, City, CompanyDescription, CompanyName, CompanyWebsite, Country, CreatedBy, DataRecordName, DateCreated, PostalCode, Region, State, VeloxLastModifiedBy, VeloxLastModifiedDate, VeloxPublicUrl
    This data type includes exactly one data record about the application's info.This data type is protected. Only system admins and portal admins can modify. This datatype cannot have any parents.
    """
    DATA_TYPE_NAME: str = 'VeloxAppRecord'
    ADDRESS1__FIELD_NAME: WrapperField = WrapperField("Address1", FieldType.STRING)
    ADDRESS2__FIELD_NAME: WrapperField = WrapperField("Address2", FieldType.STRING)
    CITY__FIELD_NAME: WrapperField = WrapperField("City", FieldType.STRING)
    COMPANYDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("CompanyDescription", FieldType.STRING)
    COMPANYNAME__FIELD_NAME: WrapperField = WrapperField("CompanyName", FieldType.STRING)
    COMPANYWEBSITE__FIELD_NAME: WrapperField = WrapperField("CompanyWebsite", FieldType.STRING)
    COUNTRY__FIELD_NAME: WrapperField = WrapperField("Country", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    POSTALCODE__FIELD_NAME: WrapperField = WrapperField("PostalCode", FieldType.STRING)
    REGION__FIELD_NAME: WrapperField = WrapperField("Region", FieldType.STRING)
    STATE__FIELD_NAME: WrapperField = WrapperField("State", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VELOXPUBLICURL__FIELD_NAME: WrapperField = WrapperField("VeloxPublicUrl", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Address1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Address1' on this record model
        """
        self.set_field_value(self.ADDRESS1__FIELD_NAME.field_name, value)

    def get_Address1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Address1' from this record model
        """
        return self.get_field_value(self.ADDRESS1__FIELD_NAME.field_name)

    def set_Address2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Address2' on this record model
        """
        self.set_field_value(self.ADDRESS2__FIELD_NAME.field_name, value)

    def get_Address2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Address2' from this record model
        """
        return self.get_field_value(self.ADDRESS2__FIELD_NAME.field_name)

    def set_City_field(self, value: Optional[str]):
        """
        Set data field with field name 'City' on this record model
        """
        self.set_field_value(self.CITY__FIELD_NAME.field_name, value)

    def get_City_field(self) -> Optional[str]:
        """
        Get data field value with field name 'City' from this record model
        """
        return self.get_field_value(self.CITY__FIELD_NAME.field_name)

    def set_CompanyDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompanyDescription' on this record model
        """
        self.set_field_value(self.COMPANYDESCRIPTION__FIELD_NAME.field_name, value)

    def get_CompanyDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompanyDescription' from this record model
        """
        return self.get_field_value(self.COMPANYDESCRIPTION__FIELD_NAME.field_name)

    def set_CompanyName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompanyName' on this record model
        """
        self.set_field_value(self.COMPANYNAME__FIELD_NAME.field_name, value)

    def get_CompanyName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompanyName' from this record model
        """
        return self.get_field_value(self.COMPANYNAME__FIELD_NAME.field_name)

    def set_CompanyWebsite_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompanyWebsite' on this record model
        """
        self.set_field_value(self.COMPANYWEBSITE__FIELD_NAME.field_name, value)

    def get_CompanyWebsite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompanyWebsite' from this record model
        """
        return self.get_field_value(self.COMPANYWEBSITE__FIELD_NAME.field_name)

    def set_Country_field(self, value: Optional[str]):
        """
        Set data field with field name 'Country' on this record model
        """
        self.set_field_value(self.COUNTRY__FIELD_NAME.field_name, value)

    def get_Country_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Country' from this record model
        """
        return self.get_field_value(self.COUNTRY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PostalCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PostalCode' on this record model
        """
        self.set_field_value(self.POSTALCODE__FIELD_NAME.field_name, value)

    def get_PostalCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PostalCode' from this record model
        """
        return self.get_field_value(self.POSTALCODE__FIELD_NAME.field_name)

    def set_Region_field(self, value: Optional[str]):
        """
        Set data field with field name 'Region' on this record model
        """
        self.set_field_value(self.REGION__FIELD_NAME.field_name, value)

    def get_Region_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Region' from this record model
        """
        return self.get_field_value(self.REGION__FIELD_NAME.field_name)

    def set_State_field(self, value: Optional[str]):
        """
        Set data field with field name 'State' on this record model
        """
        self.set_field_value(self.STATE__FIELD_NAME.field_name, value)

    def get_State_field(self) -> Optional[str]:
        """
        Get data field value with field name 'State' from this record model
        """
        return self.get_field_value(self.STATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VeloxPublicUrl_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxPublicUrl' on this record model
        """
        self.set_field_value(self.VELOXPUBLICURL__FIELD_NAME.field_name, value)

    def get_VeloxPublicUrl_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxPublicUrl' from this record model
        """
        return self.get_field_value(self.VELOXPUBLICURL__FIELD_NAME.field_name)


class VeloxCsvExportModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxCsvExport
    Data Type Display Name: CSV Export (CSV Exports)
    Fields: CreatedBy, CsvExportReportExecutionId, CsvExportSourceTempTypePojo, DataRecordName, DateCreated, Description, ExportStatus, FilePath, VeloxCurrentVersion, VeloxLastModifiedBy, VeloxLastModifiedDate
    This data type is used to store the file created when exporting a table to a CSV from anywhere in the system.
    """
    DATA_TYPE_NAME: str = 'VeloxCsvExport'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CSVEXPORTREPORTEXECUTIONID__FIELD_NAME: WrapperField = WrapperField("CsvExportReportExecutionId", FieldType.STRING)
    CSVEXPORTSOURCETEMPTYPEPOJO__FIELD_NAME: WrapperField = WrapperField("CsvExportSourceTempTypePojo", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DESCRIPTION__FIELD_NAME: WrapperField = WrapperField("Description", FieldType.STRING)
    EXPORTSTATUS__FIELD_NAME: WrapperField = WrapperField("ExportStatus", FieldType.STRING)
    FILEPATH__FIELD_NAME: WrapperField = WrapperField("FilePath", FieldType.STRING)
    VELOXCURRENTVERSION__FIELD_NAME: WrapperField = WrapperField("VeloxCurrentVersion", FieldType.INTEGER)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CsvExportReportExecutionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CsvExportReportExecutionId' on this record model
        """
        self.set_field_value(self.CSVEXPORTREPORTEXECUTIONID__FIELD_NAME.field_name, value)

    def get_CsvExportReportExecutionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CsvExportReportExecutionId' from this record model
        """
        return self.get_field_value(self.CSVEXPORTREPORTEXECUTIONID__FIELD_NAME.field_name)

    def set_CsvExportSourceTempTypePojo_field(self, value: Optional[str]):
        """
        Set data field with field name 'CsvExportSourceTempTypePojo' on this record model
        """
        self.set_field_value(self.CSVEXPORTSOURCETEMPTYPEPOJO__FIELD_NAME.field_name, value)

    def get_CsvExportSourceTempTypePojo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CsvExportSourceTempTypePojo' from this record model
        """
        return self.get_field_value(self.CSVEXPORTSOURCETEMPTYPEPOJO__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExportStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExportStatus' on this record model
        """
        self.set_field_value(self.EXPORTSTATUS__FIELD_NAME.field_name, value)

    def get_ExportStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExportStatus' from this record model
        """
        return self.get_field_value(self.EXPORTSTATUS__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxDepartmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxDepartment
    Data Type Display Name: Department (Departments)
    Fields: CreatedBy, DataRecordName, DateCreated, DepartmentName, InheritRolesFromParent, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'VeloxDepartment'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEPARTMENTNAME__FIELD_NAME: WrapperField = WrapperField("DepartmentName", FieldType.STRING)
    INHERITROLESFROMPARENT__FIELD_NAME: WrapperField = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DepartmentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DepartmentName' on this record model
        """
        self.set_field_value(self.DEPARTMENTNAME__FIELD_NAME.field_name, value)

    def get_DepartmentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DepartmentName' from this record model
        """
        return self.get_field_value(self.DEPARTMENTNAME__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxFailureEventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxFailureEvent
    Data Type Display Name: Failure Event (Failure Events)
    Fields: CreatedBy, DataRecordName, DateCreated, FailureEventDescription, FailureEventId, FailureEventType, VeloxLastModifiedBy, VeloxLastModifiedDate
    A general failure event that has occurred within the system.  This report has a type describing what feature within the system has failed and a message describing the failure.
    """
    DATA_TYPE_NAME: str = 'VeloxFailureEvent'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    FAILUREEVENTDESCRIPTION__FIELD_NAME: WrapperField = WrapperField("FailureEventDescription", FieldType.STRING)
    FAILUREEVENTID__FIELD_NAME: WrapperField = WrapperField("FailureEventId", FieldType.AUTO_ACCESSION)
    FAILUREEVENTTYPE__FIELD_NAME: WrapperField = WrapperField("FailureEventType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FailureEventDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureEventDescription' on this record model
        """
        self.set_field_value(self.FAILUREEVENTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_FailureEventDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureEventDescription' from this record model
        """
        return self.get_field_value(self.FAILUREEVENTDESCRIPTION__FIELD_NAME.field_name)

    def set_FailureEventId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureEventId' on this record model
        """
        self.set_field_value(self.FAILUREEVENTID__FIELD_NAME.field_name, value)

    def get_FailureEventId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureEventId' from this record model
        """
        return self.get_field_value(self.FAILUREEVENTID__FIELD_NAME.field_name)

    def set_FailureEventType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureEventType' on this record model
        """
        self.set_field_value(self.FAILUREEVENTTYPE__FIELD_NAME.field_name, value)

    def get_FailureEventType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureEventType' from this record model
        """
        return self.get_field_value(self.FAILUREEVENTTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxLocationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxLocation
    Data Type Display Name: Location (Locations)
    Fields: CreatedBy, DataRecordName, DateCreated, LocationName, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'VeloxLocation'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LOCATIONNAME__FIELD_NAME: WrapperField = WrapperField("LocationName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LocationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LocationName' on this record model
        """
        self.set_field_value(self.LOCATIONNAME__FIELD_NAME.field_name, value)

    def get_LocationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LocationName' from this record model
        """
        return self.get_field_value(self.LOCATIONNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxUserModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxUser
    Data Type Display Name: User (Users)
    Fields: CreatedBy, DataRecordName, DateCreated, EmailAddress, FirstName, JobTitle, LastName, MiddleName, Username, VeloxLastModifiedBy, VeloxLastModifiedDate
    Data type to represent each user in the system.  These records can be searched using api methods and CustomReports but cannot be edited like typical records.
    """
    DATA_TYPE_NAME: str = 'VeloxUser'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EMAILADDRESS__FIELD_NAME: WrapperField = WrapperField("EmailAddress", FieldType.STRING)
    FIRSTNAME__FIELD_NAME: WrapperField = WrapperField("FirstName", FieldType.STRING)
    JOBTITLE__FIELD_NAME: WrapperField = WrapperField("JobTitle", FieldType.STRING)
    LASTNAME__FIELD_NAME: WrapperField = WrapperField("LastName", FieldType.STRING)
    MIDDLENAME__FIELD_NAME: WrapperField = WrapperField("MiddleName", FieldType.STRING)
    USERNAME__FIELD_NAME: WrapperField = WrapperField("Username", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EmailAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'EmailAddress' on this record model
        """
        self.set_field_value(self.EMAILADDRESS__FIELD_NAME.field_name, value)

    def get_EmailAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EmailAddress' from this record model
        """
        return self.get_field_value(self.EMAILADDRESS__FIELD_NAME.field_name)

    def set_FirstName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FirstName' on this record model
        """
        self.set_field_value(self.FIRSTNAME__FIELD_NAME.field_name, value)

    def get_FirstName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FirstName' from this record model
        """
        return self.get_field_value(self.FIRSTNAME__FIELD_NAME.field_name)

    def set_JobTitle_field(self, value: Optional[str]):
        """
        Set data field with field name 'JobTitle' on this record model
        """
        self.set_field_value(self.JOBTITLE__FIELD_NAME.field_name, value)

    def get_JobTitle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'JobTitle' from this record model
        """
        return self.get_field_value(self.JOBTITLE__FIELD_NAME.field_name)

    def set_LastName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastName' on this record model
        """
        self.set_field_value(self.LASTNAME__FIELD_NAME.field_name, value)

    def get_LastName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastName' from this record model
        """
        return self.get_field_value(self.LASTNAME__FIELD_NAME.field_name)

    def set_MiddleName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MiddleName' on this record model
        """
        self.set_field_value(self.MIDDLENAME__FIELD_NAME.field_name, value)

    def get_MiddleName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MiddleName' from this record model
        """
        return self.get_field_value(self.MIDDLENAME__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ViCellResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViCellResult
    Data Type Display Name: Vi-Cell Result (Vi-Cell Results)
    Fields: AspirateCycles, AvgBg, AvgCellsImg, AvgCirc, AvgDiam, CellType, CreatedBy, DataRecordName, DateCreated, DateTime, FileName, Imgs, MaxDiam, MinCir, MinDiam, TotalCells, TotalCellsMl, VeloxLastModifiedBy, VeloxLastModifiedDate, Viability, ViableCells, ViableCellsMl
    """
    DATA_TYPE_NAME: str = 'ViCellResult'
    ASPIRATECYCLES__FIELD_NAME: WrapperField = WrapperField("AspirateCycles", FieldType.DOUBLE)
    AVGBG__FIELD_NAME: WrapperField = WrapperField("AvgBg", FieldType.DOUBLE)
    AVGCELLSIMG__FIELD_NAME: WrapperField = WrapperField("AvgCellsImg", FieldType.DOUBLE)
    AVGCIRC__FIELD_NAME: WrapperField = WrapperField("AvgCirc", FieldType.DOUBLE)
    AVGDIAM__FIELD_NAME: WrapperField = WrapperField("AvgDiam", FieldType.DOUBLE)
    CELLTYPE__FIELD_NAME: WrapperField = WrapperField("CellType", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DATETIME__FIELD_NAME: WrapperField = WrapperField("DateTime", FieldType.DATE)
    FILENAME__FIELD_NAME: WrapperField = WrapperField("FileName", FieldType.STRING)
    IMGS__FIELD_NAME: WrapperField = WrapperField("Imgs", FieldType.DOUBLE)
    MAXDIAM__FIELD_NAME: WrapperField = WrapperField("MaxDiam", FieldType.DOUBLE)
    MINCIR__FIELD_NAME: WrapperField = WrapperField("MinCir", FieldType.DOUBLE)
    MINDIAM__FIELD_NAME: WrapperField = WrapperField("MinDiam", FieldType.DOUBLE)
    TOTALCELLS__FIELD_NAME: WrapperField = WrapperField("TotalCells", FieldType.DOUBLE)
    TOTALCELLSML__FIELD_NAME: WrapperField = WrapperField("TotalCellsMl", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VIABILITY__FIELD_NAME: WrapperField = WrapperField("Viability", FieldType.DOUBLE)
    VIABLECELLS__FIELD_NAME: WrapperField = WrapperField("ViableCells", FieldType.DOUBLE)
    VIABLECELLSML__FIELD_NAME: WrapperField = WrapperField("ViableCellsMl", FieldType.DOUBLE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AspirateCycles_field(self, value: Optional[float]):
        """
        Set data field with field name 'AspirateCycles' on this record model
        """
        self.set_field_value(self.ASPIRATECYCLES__FIELD_NAME.field_name, value)

    def get_AspirateCycles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AspirateCycles' from this record model
        """
        return self.get_field_value(self.ASPIRATECYCLES__FIELD_NAME.field_name)

    def set_AvgBg_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBg' on this record model
        """
        self.set_field_value(self.AVGBG__FIELD_NAME.field_name, value)

    def get_AvgBg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBg' from this record model
        """
        return self.get_field_value(self.AVGBG__FIELD_NAME.field_name)

    def set_AvgCellsImg_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgCellsImg' on this record model
        """
        self.set_field_value(self.AVGCELLSIMG__FIELD_NAME.field_name, value)

    def get_AvgCellsImg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgCellsImg' from this record model
        """
        return self.get_field_value(self.AVGCELLSIMG__FIELD_NAME.field_name)

    def set_AvgCirc_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgCirc' on this record model
        """
        self.set_field_value(self.AVGCIRC__FIELD_NAME.field_name, value)

    def get_AvgCirc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgCirc' from this record model
        """
        return self.get_field_value(self.AVGCIRC__FIELD_NAME.field_name)

    def set_AvgDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgDiam' on this record model
        """
        self.set_field_value(self.AVGDIAM__FIELD_NAME.field_name, value)

    def get_AvgDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgDiam' from this record model
        """
        return self.get_field_value(self.AVGDIAM__FIELD_NAME.field_name)

    def set_CellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellType' on this record model
        """
        self.set_field_value(self.CELLTYPE__FIELD_NAME.field_name, value)

    def get_CellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellType' from this record model
        """
        return self.get_field_value(self.CELLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateTime' on this record model
        """
        self.set_field_value(self.DATETIME__FIELD_NAME.field_name, value)

    def get_DateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateTime' from this record model
        """
        return self.get_field_value(self.DATETIME__FIELD_NAME.field_name)

    def set_FileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileName' on this record model
        """
        self.set_field_value(self.FILENAME__FIELD_NAME.field_name, value)

    def get_FileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileName' from this record model
        """
        return self.get_field_value(self.FILENAME__FIELD_NAME.field_name)

    def set_Imgs_field(self, value: Optional[float]):
        """
        Set data field with field name 'Imgs' on this record model
        """
        self.set_field_value(self.IMGS__FIELD_NAME.field_name, value)

    def get_Imgs_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Imgs' from this record model
        """
        return self.get_field_value(self.IMGS__FIELD_NAME.field_name)

    def set_MaxDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'MaxDiam' on this record model
        """
        self.set_field_value(self.MAXDIAM__FIELD_NAME.field_name, value)

    def get_MaxDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MaxDiam' from this record model
        """
        return self.get_field_value(self.MAXDIAM__FIELD_NAME.field_name)

    def set_MinCir_field(self, value: Optional[float]):
        """
        Set data field with field name 'MinCir' on this record model
        """
        self.set_field_value(self.MINCIR__FIELD_NAME.field_name, value)

    def get_MinCir_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MinCir' from this record model
        """
        return self.get_field_value(self.MINCIR__FIELD_NAME.field_name)

    def set_MinDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'MinDiam' on this record model
        """
        self.set_field_value(self.MINDIAM__FIELD_NAME.field_name, value)

    def get_MinDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MinDiam' from this record model
        """
        return self.get_field_value(self.MINDIAM__FIELD_NAME.field_name)

    def set_TotalCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalCells' on this record model
        """
        self.set_field_value(self.TOTALCELLS__FIELD_NAME.field_name, value)

    def get_TotalCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalCells' from this record model
        """
        return self.get_field_value(self.TOTALCELLS__FIELD_NAME.field_name)

    def set_TotalCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalCellsMl' on this record model
        """
        self.set_field_value(self.TOTALCELLSML__FIELD_NAME.field_name, value)

    def get_TotalCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalCellsMl' from this record model
        """
        return self.get_field_value(self.TOTALCELLSML__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Viability_field(self, value: Optional[float]):
        """
        Set data field with field name 'Viability' on this record model
        """
        self.set_field_value(self.VIABILITY__FIELD_NAME.field_name, value)

    def get_Viability_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Viability' from this record model
        """
        return self.get_field_value(self.VIABILITY__FIELD_NAME.field_name)

    def set_ViableCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViableCells' on this record model
        """
        self.set_field_value(self.VIABLECELLS__FIELD_NAME.field_name, value)

    def get_ViableCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViableCells' from this record model
        """
        return self.get_field_value(self.VIABLECELLS__FIELD_NAME.field_name)

    def set_ViableCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViableCellsMl' on this record model
        """
        self.set_field_value(self.VIABLECELLSML__FIELD_NAME.field_name, value)

    def get_ViableCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViableCellsMl' from this record model
        """
        return self.get_field_value(self.VIABLECELLSML__FIELD_NAME.field_name)


class ViiA7ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViiA7Result
    Data Type Display Name: ViiA7 Result (ViiA7 Results)
    Fields: CreatedBy, Ct, CtMean, CtSD, DataRecordName, DateCreated, Quantity, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ViiA7Result'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    CT__FIELD_NAME: WrapperField = WrapperField("Ct", FieldType.DOUBLE)
    CTMEAN__FIELD_NAME: WrapperField = WrapperField("CtMean", FieldType.DOUBLE)
    CTSD__FIELD_NAME: WrapperField = WrapperField("CtSD", FieldType.DOUBLE)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    QUANTITY__FIELD_NAME: WrapperField = WrapperField("Quantity", FieldType.DOUBLE)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_Ct_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ct' on this record model
        """
        self.set_field_value(self.CT__FIELD_NAME.field_name, value)

    def get_Ct_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ct' from this record model
        """
        return self.get_field_value(self.CT__FIELD_NAME.field_name)

    def set_CtMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMean' on this record model
        """
        self.set_field_value(self.CTMEAN__FIELD_NAME.field_name, value)

    def get_CtMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMean' from this record model
        """
        return self.get_field_value(self.CTMEAN__FIELD_NAME.field_name)

    def set_CtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSD' on this record model
        """
        self.set_field_value(self.CTSD__FIELD_NAME.field_name, value)

    def get_CtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSD' from this record model
        """
        return self.get_field_value(self.CTSD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ViralVectorModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViralVector
    Data Type Display Name: Viral Vector (Viral Vectors)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ExpirationDate, LotNumber, ORF, PartNumber, VectorSequence, VectorType, VeloxLastModifiedBy, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: str = 'ViralVector'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.STRING)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    EXPIRATIONDATE__FIELD_NAME: WrapperField = WrapperField("ExpirationDate", FieldType.DATE)
    LOTNUMBER__FIELD_NAME: WrapperField = WrapperField("LotNumber", FieldType.STRING)
    ORF__FIELD_NAME: WrapperField = WrapperField("ORF", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    VECTORSEQUENCE__FIELD_NAME: WrapperField = WrapperField("VectorSequence", FieldType.STRING)
    VECTORTYPE__FIELD_NAME: WrapperField = WrapperField("VectorType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_ORF_field(self, value: Optional[str]):
        """
        Set data field with field name 'ORF' on this record model
        """
        self.set_field_value(self.ORF__FIELD_NAME.field_name, value)

    def get_ORF_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ORF' from this record model
        """
        return self.get_field_value(self.ORF__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_VectorSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorSequence' on this record model
        """
        self.set_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name, value)

    def get_VectorSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorSequence' from this record model
        """
        return self.get_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name)

    def set_VectorType_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorType' on this record model
        """
        self.set_field_value(self.VECTORTYPE__FIELD_NAME.field_name, value)

    def get_VectorType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorType' from this record model
        """
        return self.get_field_value(self.VECTORTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ViralVectorPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViralVectorPart
    Data Type Display Name: Viral Vector Part (Viral Vector Parts)
    Fields: ConsumableName, ConsumableType, CreatedBy, DataRecordName, DateCreated, ORF, PartNumber, QuantityOnHand, QuantityPerItem, ReorderLevelQuantity, Units, VectorSequence, VectorType, VeloxLastModifiedBy, VeloxLastModifiedDate, Vendor
    """
    DATA_TYPE_NAME: str = 'ViralVectorPart'
    CONSUMABLENAME__FIELD_NAME: WrapperField = WrapperField("ConsumableName", FieldType.AUTO_ACCESSION)
    CONSUMABLETYPE__FIELD_NAME: WrapperField = WrapperField("ConsumableType", FieldType.SELECTION)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ORF__FIELD_NAME: WrapperField = WrapperField("ORF", FieldType.STRING)
    PARTNUMBER__FIELD_NAME: WrapperField = WrapperField("PartNumber", FieldType.STRING)
    QUANTITYONHAND__FIELD_NAME: WrapperField = WrapperField("QuantityOnHand", FieldType.DOUBLE)
    QUANTITYPERITEM__FIELD_NAME: WrapperField = WrapperField("QuantityPerItem", FieldType.DOUBLE)
    REORDERLEVELQUANTITY__FIELD_NAME: WrapperField = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE)
    UNITS__FIELD_NAME: WrapperField = WrapperField("Units", FieldType.PICKLIST)
    VECTORSEQUENCE__FIELD_NAME: WrapperField = WrapperField("VectorSequence", FieldType.STRING)
    VECTORTYPE__FIELD_NAME: WrapperField = WrapperField("VectorType", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VENDOR__FIELD_NAME: WrapperField = WrapperField("Vendor", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ORF_field(self, value: Optional[str]):
        """
        Set data field with field name 'ORF' on this record model
        """
        self.set_field_value(self.ORF__FIELD_NAME.field_name, value)

    def get_ORF_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ORF' from this record model
        """
        return self.get_field_value(self.ORF__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def set_VectorSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorSequence' on this record model
        """
        self.set_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name, value)

    def get_VectorSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorSequence' from this record model
        """
        return self.get_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name)

    def set_VectorType_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorType' on this record model
        """
        self.set_field_value(self.VECTORTYPE__FIELD_NAME.field_name, value)

    def get_VectorType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorType' from this record model
        """
        return self.get_field_value(self.VECTORTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class WellElementModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WellElement
    Data Type Display Name: Well Element (Well Elements)
    Fields: Amount, ControlType, CreatedBy, DataRecordName, DateCreated, ElementId, isControl, Layer, MultiParentLink138, MultiParentLink215, Notes, Required, TimePoint, UnitOfMeasure, VeloxLastModifiedBy, VeloxLastModifiedDate, WellElementDataType, WellElementFilterField, WellElementSubType
    """
    DATA_TYPE_NAME: str = 'WellElement'
    AMOUNT__FIELD_NAME: WrapperField = WrapperField("Amount", FieldType.DOUBLE)
    CONTROLTYPE__FIELD_NAME: WrapperField = WrapperField("ControlType", FieldType.STRING)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    ELEMENTID__FIELD_NAME: WrapperField = WrapperField("ElementId", FieldType.STRING)
    ISCONTROL__FIELD_NAME: WrapperField = WrapperField("isControl", FieldType.BOOLEAN)
    LAYER__FIELD_NAME: WrapperField = WrapperField("Layer", FieldType.INTEGER)
    MULTIPARENTLINK138__FIELD_NAME: WrapperField = WrapperField("MultiParentLink138", FieldType.MULTIPARENTLINK)
    MULTIPARENTLINK215__FIELD_NAME: WrapperField = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK)
    NOTES__FIELD_NAME: WrapperField = WrapperField("Notes", FieldType.STRING)
    REQUIRED__FIELD_NAME: WrapperField = WrapperField("Required", FieldType.BOOLEAN)
    TIMEPOINT__FIELD_NAME: WrapperField = WrapperField("TimePoint", FieldType.STRING)
    UNITOFMEASURE__FIELD_NAME: WrapperField = WrapperField("UnitOfMeasure", FieldType.PICKLIST)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    WELLELEMENTDATATYPE__FIELD_NAME: WrapperField = WrapperField("WellElementDataType", FieldType.STRING)
    WELLELEMENTFILTERFIELD__FIELD_NAME: WrapperField = WrapperField("WellElementFilterField", FieldType.STRING)
    WELLELEMENTSUBTYPE__FIELD_NAME: WrapperField = WrapperField("WellElementSubType", FieldType.STRING)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Amount_field(self, value: Optional[float]):
        """
        Set data field with field name 'Amount' on this record model
        """
        self.set_field_value(self.AMOUNT__FIELD_NAME.field_name, value)

    def get_Amount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Amount' from this record model
        """
        return self.get_field_value(self.AMOUNT__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ElementId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElementId' on this record model
        """
        self.set_field_value(self.ELEMENTID__FIELD_NAME.field_name, value)

    def get_ElementId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElementId' from this record model
        """
        return self.get_field_value(self.ELEMENTID__FIELD_NAME.field_name)

    def set_isControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'isControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_isControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'isControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_Layer_field(self, value: Optional[int]):
        """
        Set data field with field name 'Layer' on this record model
        """
        self.set_field_value(self.LAYER__FIELD_NAME.field_name, value)

    def get_Layer_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Layer' from this record model
        """
        return self.get_field_value(self.LAYER__FIELD_NAME.field_name)

    def set_Notes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Notes' on this record model
        """
        self.set_field_value(self.NOTES__FIELD_NAME.field_name, value)

    def get_Notes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Notes' from this record model
        """
        return self.get_field_value(self.NOTES__FIELD_NAME.field_name)

    def set_Required_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Required' on this record model
        """
        self.set_field_value(self.REQUIRED__FIELD_NAME.field_name, value)

    def get_Required_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Required' from this record model
        """
        return self.get_field_value(self.REQUIRED__FIELD_NAME.field_name)

    def set_TimePoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimePoint' on this record model
        """
        self.set_field_value(self.TIMEPOINT__FIELD_NAME.field_name, value)

    def get_TimePoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimePoint' from this record model
        """
        return self.get_field_value(self.TIMEPOINT__FIELD_NAME.field_name)

    def set_UnitOfMeasure_field(self, value: Optional[str]):
        """
        Set data field with field name 'UnitOfMeasure' on this record model
        """
        self.set_field_value(self.UNITOFMEASURE__FIELD_NAME.field_name, value)

    def get_UnitOfMeasure_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UnitOfMeasure' from this record model
        """
        return self.get_field_value(self.UNITOFMEASURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellElementDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellElementDataType' on this record model
        """
        self.set_field_value(self.WELLELEMENTDATATYPE__FIELD_NAME.field_name, value)

    def get_WellElementDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellElementDataType' from this record model
        """
        return self.get_field_value(self.WELLELEMENTDATATYPE__FIELD_NAME.field_name)

    def set_WellElementFilterField_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellElementFilterField' on this record model
        """
        self.set_field_value(self.WELLELEMENTFILTERFIELD__FIELD_NAME.field_name, value)

    def get_WellElementFilterField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellElementFilterField' from this record model
        """
        return self.get_field_value(self.WELLELEMENTFILTERFIELD__FIELD_NAME.field_name)

    def set_WellElementSubType_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellElementSubType' on this record model
        """
        self.set_field_value(self.WELLELEMENTSUBTYPE__FIELD_NAME.field_name, value)

    def get_WellElementSubType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellElementSubType' from this record model
        """
        return self.get_field_value(self.WELLELEMENTSUBTYPE__FIELD_NAME.field_name)


class WorkQueueButtonConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueButtonConfiguration
    Data Type Display Name: Work Queue Button Configuration (Work Queue Button Configurations)
    Fields: ButtonName, ButtonOrder, CreatedBy, DataRecordName, DataType, DateCreated, Line2Text, NoSelectionRequired, PackagePath, VeloxLastModifiedBy, VeloxLastModifiedDate, ViewUploadImageButton
    """
    DATA_TYPE_NAME: str = 'WorkQueueButtonConfiguration'
    BUTTONNAME__FIELD_NAME: WrapperField = WrapperField("ButtonName", FieldType.STRING)
    BUTTONORDER__FIELD_NAME: WrapperField = WrapperField("ButtonOrder", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    LINE2TEXT__FIELD_NAME: WrapperField = WrapperField("Line2Text", FieldType.STRING)
    NOSELECTIONREQUIRED__FIELD_NAME: WrapperField = WrapperField("NoSelectionRequired", FieldType.BOOLEAN)
    PACKAGEPATH__FIELD_NAME: WrapperField = WrapperField("PackagePath", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: WrapperField = WrapperField("ViewUploadImageButton", FieldType.ACTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ButtonName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ButtonName' on this record model
        """
        self.set_field_value(self.BUTTONNAME__FIELD_NAME.field_name, value)

    def get_ButtonName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ButtonName' from this record model
        """
        return self.get_field_value(self.BUTTONNAME__FIELD_NAME.field_name)

    def set_ButtonOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'ButtonOrder' on this record model
        """
        self.set_field_value(self.BUTTONORDER__FIELD_NAME.field_name, value)

    def get_ButtonOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ButtonOrder' from this record model
        """
        return self.get_field_value(self.BUTTONORDER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Line2Text_field(self, value: Optional[str]):
        """
        Set data field with field name 'Line2Text' on this record model
        """
        self.set_field_value(self.LINE2TEXT__FIELD_NAME.field_name, value)

    def get_Line2Text_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Line2Text' from this record model
        """
        return self.get_field_value(self.LINE2TEXT__FIELD_NAME.field_name)

    def set_NoSelectionRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NoSelectionRequired' on this record model
        """
        self.set_field_value(self.NOSELECTIONREQUIRED__FIELD_NAME.field_name, value)

    def get_NoSelectionRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NoSelectionRequired' from this record model
        """
        return self.get_field_value(self.NOSELECTIONREQUIRED__FIELD_NAME.field_name)

    def set_PackagePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'PackagePath' on this record model
        """
        self.set_field_value(self.PACKAGEPATH__FIELD_NAME.field_name, value)

    def get_PackagePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PackagePath' from this record model
        """
        return self.get_field_value(self.PACKAGEPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class WorkQueueDataTypeConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueDataTypeConfiguration
    Data Type Display Name: Work Queue Data Type Configuration (Work Queue Data Type Configurations)
    Fields: AlwaysShow, BatchRetrieval, CreatedBy, DataRecordName, DataType, DateCreated, DisableDragAndDrop, DoubleClickActionPluginPath, IsReadOnly, IsReportBacked, ItemQueuePackagePath, ShowDefaultButtons, UseSingleSelection, VeloxLastModifiedBy, VeloxLastModifiedDate, ViewUploadImageButton
    """
    DATA_TYPE_NAME: str = 'WorkQueueDataTypeConfiguration'
    ALWAYSSHOW__FIELD_NAME: WrapperField = WrapperField("AlwaysShow", FieldType.BOOLEAN)
    BATCHRETRIEVAL__FIELD_NAME: WrapperField = WrapperField("BatchRetrieval", FieldType.BOOLEAN)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATATYPE__FIELD_NAME: WrapperField = WrapperField("DataType", FieldType.SELECTION)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DISABLEDRAGANDDROP__FIELD_NAME: WrapperField = WrapperField("DisableDragAndDrop", FieldType.BOOLEAN)
    DOUBLECLICKACTIONPLUGINPATH__FIELD_NAME: WrapperField = WrapperField("DoubleClickActionPluginPath", FieldType.STRING)
    ISREADONLY__FIELD_NAME: WrapperField = WrapperField("IsReadOnly", FieldType.BOOLEAN)
    ISREPORTBACKED__FIELD_NAME: WrapperField = WrapperField("IsReportBacked", FieldType.BOOLEAN)
    ITEMQUEUEPACKAGEPATH__FIELD_NAME: WrapperField = WrapperField("ItemQueuePackagePath", FieldType.STRING)
    SHOWDEFAULTBUTTONS__FIELD_NAME: WrapperField = WrapperField("ShowDefaultButtons", FieldType.BOOLEAN)
    USESINGLESELECTION__FIELD_NAME: WrapperField = WrapperField("UseSingleSelection", FieldType.BOOLEAN)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: WrapperField = WrapperField("ViewUploadImageButton", FieldType.ACTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AlwaysShow_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AlwaysShow' on this record model
        """
        self.set_field_value(self.ALWAYSSHOW__FIELD_NAME.field_name, value)

    def get_AlwaysShow_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AlwaysShow' from this record model
        """
        return self.get_field_value(self.ALWAYSSHOW__FIELD_NAME.field_name)

    def set_BatchRetrieval_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BatchRetrieval' on this record model
        """
        self.set_field_value(self.BATCHRETRIEVAL__FIELD_NAME.field_name, value)

    def get_BatchRetrieval_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BatchRetrieval' from this record model
        """
        return self.get_field_value(self.BATCHRETRIEVAL__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisableDragAndDrop_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableDragAndDrop' on this record model
        """
        self.set_field_value(self.DISABLEDRAGANDDROP__FIELD_NAME.field_name, value)

    def get_DisableDragAndDrop_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableDragAndDrop' from this record model
        """
        return self.get_field_value(self.DISABLEDRAGANDDROP__FIELD_NAME.field_name)

    def set_DoubleClickActionPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoubleClickActionPluginPath' on this record model
        """
        self.set_field_value(self.DOUBLECLICKACTIONPLUGINPATH__FIELD_NAME.field_name, value)

    def get_DoubleClickActionPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoubleClickActionPluginPath' from this record model
        """
        return self.get_field_value(self.DOUBLECLICKACTIONPLUGINPATH__FIELD_NAME.field_name)

    def set_IsReadOnly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsReadOnly' on this record model
        """
        self.set_field_value(self.ISREADONLY__FIELD_NAME.field_name, value)

    def get_IsReadOnly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsReadOnly' from this record model
        """
        return self.get_field_value(self.ISREADONLY__FIELD_NAME.field_name)

    def set_IsReportBacked_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsReportBacked' on this record model
        """
        self.set_field_value(self.ISREPORTBACKED__FIELD_NAME.field_name, value)

    def get_IsReportBacked_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsReportBacked' from this record model
        """
        return self.get_field_value(self.ISREPORTBACKED__FIELD_NAME.field_name)

    def set_ItemQueuePackagePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemQueuePackagePath' on this record model
        """
        self.set_field_value(self.ITEMQUEUEPACKAGEPATH__FIELD_NAME.field_name, value)

    def get_ItemQueuePackagePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemQueuePackagePath' from this record model
        """
        return self.get_field_value(self.ITEMQUEUEPACKAGEPATH__FIELD_NAME.field_name)

    def set_ShowDefaultButtons_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ShowDefaultButtons' on this record model
        """
        self.set_field_value(self.SHOWDEFAULTBUTTONS__FIELD_NAME.field_name, value)

    def get_ShowDefaultButtons_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ShowDefaultButtons' from this record model
        """
        return self.get_field_value(self.SHOWDEFAULTBUTTONS__FIELD_NAME.field_name)

    def set_UseSingleSelection_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseSingleSelection' on this record model
        """
        self.set_field_value(self.USESINGLESELECTION__FIELD_NAME.field_name, value)

    def get_UseSingleSelection_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseSingleSelection' from this record model
        """
        return self.get_field_value(self.USESINGLESELECTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class WorkQueueTabConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueTabConfiguration
    Data Type Display Name: Work Queue Tab Configuration (Work Queue Tab Configurations)
    Fields: CreatedBy, DataRecordName, DateCreated, HidePlateView, HideStorageView, HideTab, TabDisplayName, TabName, TabPluralDisplayName, VeloxLastModifiedBy, VeloxLastModifiedDate, ViewUploadImageButton
    """
    DATA_TYPE_NAME: str = 'WorkQueueTabConfiguration'
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    HIDEPLATEVIEW__FIELD_NAME: WrapperField = WrapperField("HidePlateView", FieldType.BOOLEAN)
    HIDESTORAGEVIEW__FIELD_NAME: WrapperField = WrapperField("HideStorageView", FieldType.BOOLEAN)
    HIDETAB__FIELD_NAME: WrapperField = WrapperField("HideTab", FieldType.BOOLEAN)
    TABDISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("TabDisplayName", FieldType.STRING)
    TABNAME__FIELD_NAME: WrapperField = WrapperField("TabName", FieldType.STRING)
    TABPLURALDISPLAYNAME__FIELD_NAME: WrapperField = WrapperField("TabPluralDisplayName", FieldType.STRING)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: WrapperField = WrapperField("ViewUploadImageButton", FieldType.ACTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HidePlateView_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HidePlateView' on this record model
        """
        self.set_field_value(self.HIDEPLATEVIEW__FIELD_NAME.field_name, value)

    def get_HidePlateView_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HidePlateView' from this record model
        """
        return self.get_field_value(self.HIDEPLATEVIEW__FIELD_NAME.field_name)

    def set_HideStorageView_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HideStorageView' on this record model
        """
        self.set_field_value(self.HIDESTORAGEVIEW__FIELD_NAME.field_name, value)

    def get_HideStorageView_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HideStorageView' from this record model
        """
        return self.get_field_value(self.HIDESTORAGEVIEW__FIELD_NAME.field_name)

    def set_HideTab_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HideTab' on this record model
        """
        self.set_field_value(self.HIDETAB__FIELD_NAME.field_name, value)

    def get_HideTab_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HideTab' from this record model
        """
        return self.get_field_value(self.HIDETAB__FIELD_NAME.field_name)

    def set_TabDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabDisplayName' on this record model
        """
        self.set_field_value(self.TABDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_TabDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabDisplayName' from this record model
        """
        return self.get_field_value(self.TABDISPLAYNAME__FIELD_NAME.field_name)

    def set_TabName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabName' on this record model
        """
        self.set_field_value(self.TABNAME__FIELD_NAME.field_name, value)

    def get_TabName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabName' from this record model
        """
        return self.get_field_value(self.TABNAME__FIELD_NAME.field_name)

    def set_TabPluralDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabPluralDisplayName' on this record model
        """
        self.set_field_value(self.TABPLURALDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_TabPluralDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabPluralDisplayName' from this record model
        """
        return self.get_field_value(self.TABPLURALDISPLAYNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class WorkQueueTaskConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueTaskConfiguration
    Data Type Display Name: Work Queue Category Configuration (Work Queue Category Configurations)
    Fields: AddManageBatchPluginPath, CategoryOrder, CreatedBy, DataRecordName, DateCreated, DefaultBatchButtonsToExclude, DisableDeleteBatchPrompt, EditConfigButton, UserGroupList, VeloxLastModifiedBy, VeloxLastModifiedDate, ViewUploadImageButton, WorkflowOrCategoryName
    """
    DATA_TYPE_NAME: str = 'WorkQueueTaskConfiguration'
    ADDMANAGEBATCHPLUGINPATH__FIELD_NAME: WrapperField = WrapperField("AddManageBatchPluginPath", FieldType.STRING)
    CATEGORYORDER__FIELD_NAME: WrapperField = WrapperField("CategoryOrder", FieldType.LONG)
    CREATEDBY__FIELD_NAME: WrapperField = WrapperField("CreatedBy", FieldType.STRING)
    DATARECORDNAME__FIELD_NAME: WrapperField = WrapperField("DataRecordName", FieldType.IDENTIFIER)
    DATECREATED__FIELD_NAME: WrapperField = WrapperField("DateCreated", FieldType.DATE)
    DEFAULTBATCHBUTTONSTOEXCLUDE__FIELD_NAME: WrapperField = WrapperField("DefaultBatchButtonsToExclude", FieldType.SELECTION)
    DISABLEDELETEBATCHPROMPT__FIELD_NAME: WrapperField = WrapperField("DisableDeleteBatchPrompt", FieldType.BOOLEAN)
    EDITCONFIGBUTTON__FIELD_NAME: WrapperField = WrapperField("EditConfigButton", FieldType.ACTION)
    USERGROUPLIST__FIELD_NAME: WrapperField = WrapperField("UserGroupList", FieldType.SELECTION)
    VELOXLASTMODIFIEDBY__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedBy", FieldType.STRING)
    VELOXLASTMODIFIEDDATE__FIELD_NAME: WrapperField = WrapperField("VeloxLastModifiedDate", FieldType.DATE)
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: WrapperField = WrapperField("ViewUploadImageButton", FieldType.ACTION)
    WORKFLOWORCATEGORYNAME__FIELD_NAME: WrapperField = WrapperField("WorkflowOrCategoryName", FieldType.SELECTION)

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AddManageBatchPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddManageBatchPluginPath' on this record model
        """
        self.set_field_value(self.ADDMANAGEBATCHPLUGINPATH__FIELD_NAME.field_name, value)

    def get_AddManageBatchPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddManageBatchPluginPath' from this record model
        """
        return self.get_field_value(self.ADDMANAGEBATCHPLUGINPATH__FIELD_NAME.field_name)

    def set_CategoryOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'CategoryOrder' on this record model
        """
        self.set_field_value(self.CATEGORYORDER__FIELD_NAME.field_name, value)

    def get_CategoryOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CategoryOrder' from this record model
        """
        return self.get_field_value(self.CATEGORYORDER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultBatchButtonsToExclude_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultBatchButtonsToExclude' on this record model
        """
        self.set_field_value(self.DEFAULTBATCHBUTTONSTOEXCLUDE__FIELD_NAME.field_name, value)

    def get_DefaultBatchButtonsToExclude_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultBatchButtonsToExclude' from this record model
        """
        return self.get_field_value(self.DEFAULTBATCHBUTTONSTOEXCLUDE__FIELD_NAME.field_name)

    def set_DisableDeleteBatchPrompt_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableDeleteBatchPrompt' on this record model
        """
        self.set_field_value(self.DISABLEDELETEBATCHPROMPT__FIELD_NAME.field_name, value)

    def get_DisableDeleteBatchPrompt_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableDeleteBatchPrompt' from this record model
        """
        return self.get_field_value(self.DISABLEDELETEBATCHPROMPT__FIELD_NAME.field_name)

    def set_UserGroupList_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserGroupList' on this record model
        """
        self.set_field_value(self.USERGROUPLIST__FIELD_NAME.field_name, value)

    def get_UserGroupList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserGroupList' from this record model
        """
        return self.get_field_value(self.USERGROUPLIST__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowOrCategoryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowOrCategoryName' on this record model
        """
        self.set_field_value(self.WORKFLOWORCATEGORYNAME__FIELD_NAME.field_name, value)

    def get_WorkflowOrCategoryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowOrCategoryName' from this record model
        """
        return self.get_field_value(self.WORKFLOWORCATEGORYNAME__FIELD_NAME.field_name)

