# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .media_link_common import MediaLinkCommon


class RenditionMediaLink(MediaLinkCommon):
    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    URL to transcoded media that won't include any Content-Disposition header in the response.<br>
    Watermarks may be applied as per Account settings and User permissions.<br>
    Media content may be streamed (e.g. when watermarks are required). Clients may issue a
    HEAD request to determine whether Content-Length and/or Accept-Ranges headers are present in order
    to determine whether the content can be downloaded in parallel chunks.
    """

    model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
