# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .field_value_common import FieldValueCommon
from .multi_user_value_member_options_type import MultiUserValueMemberOptionsType
from .user_value import UserValue


class MultiUserValue(FieldValueCommon):
    custom_members: typing.Optional[typing.List[UserValue]] = pydantic.Field(default=None)
    """
    Populated with costum member options only if `member_options_type` is set to 'custom'.
    """

    member_options_type: typing.Optional[MultiUserValueMemberOptionsType] = None
    value: typing.Optional[typing.List[UserValue]] = None

    model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
