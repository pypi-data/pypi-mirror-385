[project]
name = "dataall-cli"
version = "0.4.3"
description = "AWS data.all CLI"
authors = [{ name = "Amazon Web Services" }]
license = { text = "Apache License 2.0" }
readme = "README.md"
keywords = ["dataall", "aws"]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "boto3>=1.40.55",
    "botocore>=1.40.55",
    "typing-extensions>=4.4.0",
    "packaging>=24.2",
    "click>=8.1.6",
    "atomicfile>=1.0.1",
    "PyYAML>=6.0.1",
    "setuptools; python_version >= '3.12'",
    "dataall-core>=0.4.3",
]

[project.scripts]
dataall_cli = "dataall_cli.cli:dataall_cli"

[tool.poetry]
include = ["README.md"]
exclude = ["*.so", "*.pyc", "*~", "#*", ".git*", ".coverage*", "DS_Store", "__pycache__"]

[tool.poetry.group.dev.dependencies]
# Build
setuptools = "*"
wheel = "^0.45.1"
msgpack = "*"

# Lint
boto3-stubs = { version = "^1.40.50", extras = ["athena", "cleanrooms", "chime", "cloudwatch", "dynamodb", "ec2", "emr", "emr-serverless", "glue", "kms", "lakeformation", "logs", "neptune", "opensearch", "opensearchserverless", "quicksight", "rds", "rds-data", "redshift", "redshift-data", "s3", "secretsmanager", "ssm", "sts", "timestream-query", "timestream-write"] }
doc8 = "^1.0"
mypy = "^1.18"
pylint = "^3.3"
ruff = "^0.14.0"

# Test
moto = "^5.1"
openpyxl = "^3.0"
pyparsing = "^3.2.5"
pytest = "^8.4.2"
pytest-cov = "^7.0"
pytest-rerunfailures = "^16.0"
pytest-timeout = "^2.1.0"
pytest-xdist = "^3.0.2"
tox = "^4.5.0"

# Docs
bump2version = "^1.0.1"
IPython = "^8.10.0"
nbsphinx = "^0.9.3"
nbsphinx-link = "^1.3.0"
sphinx = "^7.1"
sphinx-bootstrap-theme = "^0.8"
sphinx-copybutton = "^0.5.1"
pydot = "^4.0.1"
myst-parser = "^3.0.1"
sphinx-click = "^6.0.0"
sphinx-autobuild = "^2024.4.0"
pytest-mock = "^3.15.1"


[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]

[tool.ruff.lint]
select = ["D", "E", "F", "I", "PL", "RUF100", "W"]
ignore = ["E501", "PLR2004", "PLR0911", "PLR0912", "PLR0913", "PLR0915"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["D"]
"test_infra/*" = ["D"]
"tests/*" = ["PL", "D"]
"tutorials/*" = ["D", "E402", "F401", "F811", "F821"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"



[tool.mypy]
python_version = "3.9"
strict = true
ignore_missing_imports = true
warn_unused_ignores = true

[tool.pytest.ini_options]
log_cli = false
filterwarnings = "ignore::DeprecationWarning"
addopts = "--log-cli-format \"[%(name)s][%(funcName)s] %(message)s\" --verbose --capture=sys"
markers = [
    "distributed: tests againsts methods with distributed functionality",
]

[tool.coverage.report]
show_missing = true

[tool.bandit]
exclude_dirs = ["tests"]

[tool.pylint.main]
jobs = 0
fail-under = 9

[tool.pylint.messages_control]
disable = ["all"]
enable = ["R0911", "R0912", "R0913", "R0915"]
