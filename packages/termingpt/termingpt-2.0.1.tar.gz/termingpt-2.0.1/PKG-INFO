Metadata-Version: 2.4
Name: termingpt
Version: 2.0.1
Summary: AI-powered terminal assistant with production-ready code generation and security scanning
Home-page: https://github.com/thenoob4/termingpt
Author: TheNooB
Author-email: codelearh@gmail.com
Project-URL: Bug Reports, https://github.com/thenoob4/termingpt/issues
Project-URL: Source, https://github.com/thenoob4/termingpt
Project-URL: Documentation, https://github.com/thenoob4/termingpt#readme
Keywords: ai chatgpt gpt-4 code-generator terminal security-scanner cli assistant termux
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: System :: Systems Administration
Classifier: Topic :: Security
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

TermiGPT v2.0.0 üõ°Ô∏è
AI-Powered Security Research Terminal Assistant
Professional tool for cybersecurity researchers, penetration testers, and security students. Combines AI intelligence with security automation for reconnaissance, exploitation, and reporting.

üéØ Features
üîç Security Research Capabilities

Reconnaissance - Automated subdomain enumeration, port scanning, service detection
Payload Generation - Create exploit code, reverse shells, custom scripts
Vulnerability Scanning - Automated vulnerability assessment with AI analysis
VAPT Reporting - Generate professional penetration testing reports with CVEs
OSINT Integration - Threat intelligence correlation and IP reputation checks
Tool Management - Install and configure security tools (nmap, subfinder, nuclei, etc.)

ü§ñ AI-Powered Assistance

5 AI Models - GPT-4o, GPT-4o Mini, GPT-4 Turbo, Perplexity, Mistral
Production Code - Generate complete, working security tools and scripts
Learning Mode - Explains commands, CVEs, and security concepts
Real-time Guidance - Command syntax help, tool flag explanations
Adaptive Intelligence - Supports beginners to advanced users

üõ†Ô∏è Advanced Features

Session Management - Command history, resume sessions
Piped Input - cat file.txt | termi -p "analyze"
Multi-format Output - Reports in text, JSON, HTML, PDF
Auto-Install - Automatically installs missing dependencies
Ethical Safeguards - Built-in ethical use reminders
Cross-Platform - Works on Linux, macOS, Windows, Termux

üöÄ Installation
bashpip install termingpt
Post-Install
After installation, you'll see a welcome banner with all commands and examples.
üìã Quick Start
Interactive Mode (Recommended)
bashtermi
Direct Commands
bash# Reconnaissance
termi recon example.com
termi enum subdomains of target.com

# Payload Generation
termi create a Python port scanner with threading
termi code a PowerShell reverse shell for 192.168.1.10:4444

# Security Scanning
termi scan target.com
termi vuln-scan https://example.com

# Tool Management
termi list-tools
termi install-tool recon

# Reporting
termi report generate from last scan

# AI Chat
termi ask "explain CVE-2024-1234"
termi ask "what is MITRE ATT&CK"
üìö Complete Command Reference
Core Commands
CommandDescriptionExampletermiInteractive modetermitermi helpShow help menutermi helptermi --continueResume last sessiontermi --continue
Reconnaissance
CommandDescriptionExamplerecon <target>Full reconnaissance workflowtermi recon example.comenum <target>Subdomain enumerationtermi enum target.comportscan <target>Port scanningtermi portscan 192.168.1.1
Code Generation
CommandDescriptionExamplecreate <desc>Generate security tooltermi create a SQL injection scannercode <desc>Generate scripttermi code a Python keyloggerwrite <desc>Generate codetermi write a web fuzzer
Security Scanning
CommandDescriptionExamplescan <target>Security assessmenttermi scan example.comvuln-scan <target>Vulnerability scantermi vuln-scan https://target.com
Tool Management
CommandDescriptionExamplelist-toolsShow available toolstermi list-toolsinstall-tool <cat>Install security toolstermi install-tool reconcheck-toolsVerify installationstermi check-tools
Reporting
CommandDescriptionExamplereportGenerate VAPT reporttermi reportexport <format>Export findingstermi export pdf
AI & Models
CommandDescriptionExampleask <question>Ask AI anythingtermi ask "explain nmap -sV"modelsList AI modelstermi modelsselectChange modeltermi select
Session Management
CommandDescriptionExamplehistoryShow command historytermi historyclearClear sessiontermi clear
üîß Available Security Tools
Reconnaissance

subfinder - Fast subdomain discovery
amass - In-depth DNS enumeration
httpx - Fast HTTP probe
nuclei - Fast vulnerability scanner

Scanning

nmap - Network exploration and security scanner
masscan - Fast TCP port scanner
rustscan - Modern fast port scanner

Exploitation

metasploit - Penetration testing framework
sqlmap - Automatic SQL injection tool

Wireless

aircrack-ng - WiFi security auditing tools

Web

gobuster - Directory/file & DNS busting
ffuf - Fast web fuzzer
wpscan - WordPress security scanner

üí° Usage Examples
Example 1: Reconnaissance Workflow
bash$ termi recon example.com

üîç RECONNAISSANCE: example.com

AI Reconnaissance Plan:

1. Subdomain Enumeration
   Tools: subfinder, amass
   Expected: 10-50 subdomains

2. Port Scanning
   Tools: nmap, rustscan
   Ports: 1-1000 common ports

3. Service Detection
   Command: nmap -sV -sC target
   Look for: Version info, vulnerabilities

4. DNS Analysis
   Records: A, AAAA, MX, TXT, NS
   Tools: dig, nslookup

5. OSINT Gathering
   Sources: WHOIS, certificate transparency
   Look for: Email addresses, infrastructure
Example 2: Generate Exploit Code
bash$ termi create a Python reverse shell for 192.168.1.10:4444

üîß Generating Security Tool

‚ö†Ô∏è  Reminder: For authorized security testing only

üìÅ Project: python-reverse-shell

‚úÖ reverse_shell.py
‚úÖ requirements.txt
‚úÖ README.md
‚úÖ .gitignore

‚úÖ SUCCESS! 4 files created
üìÅ Location: ./python-reverse-shell
üí° Next: cd python-reverse-shell && cat README.md
Example 3: Security Scan with AI Analysis
bash$ termi scan target.com

üîí SECURITY SCAN: target.com

üéØ Scan Types:
  1. Quick Scan (Top ports)
  2. Full Scan (1-1000)
  3. Comprehensive (1-65535)
  4. DNS Analysis
  5. Service Detection

Select (1-5): 1

üîç Scanning 15 ports...
  ‚úì Found: 22/SSH
  ‚úì Found: 80/HTTP
  ‚úì Found: 443/HTTPS

Found 3 open ports

ü§ñ Generating AI security assessment...

üõ°Ô∏è  AI SECURITY ASSESSMENT

Executive Summary:
Target shows standard web services with SSH management access.
Overall security posture: MEDIUM risk.

Key Findings:
- Port 22 (SSH) exposed - potential RISK
- Standard web ports (80, 443) functional
- HTTPS enabled - SECURE

Risk Assessment:
1. SSH Exposure - MEDIUM
   Recommendations: Implement fail2ban, use key authentication

2. HTTP to HTTPS redirect - Check required
   Recommendations: Ensure proper redirect configuration

Vulnerabilities:
- Potential brute force on SSH (Port 22)
- Check for outdated SSL/TLS versions

Recommendations:
1. Implement SSH key authentication
2. Configure fail2ban for brute force protection
3. Verify HTTPS configuration and certificates
4. Regular security updates
Example 4: Tool Installation
bash$ termi install-tool recon

üì¶ Available Tool Categories:

Recon:
  ‚ùå subfinder: Fast subdomain discovery tool
  ‚ùå amass: In-depth DNS enumeration
  ‚úÖ httpx: Fast HTTP probe utility
  ‚ùå nuclei: Fast vulnerability scanner

Select category (or 'cancel'): recon

Tools to install:
  1. subfinder: Fast subdomain discovery tool ‚ùå Not installed
  2. amass: In-depth DNS enumeration ‚ùå Not installed
  3. httpx: Fast HTTP probe utility ‚úÖ Already installed
  4. nuclei: Fast vulnerability scanner ‚ùå Not installed

Select tool number (or 'all'): 1

Installing subfinder...
‚úÖ subfinder installed successfully
Example 5: Generate VAPT Report
bash$ termi report

üìä GENERATING VAPT REPORT

Enter scan findings or path to scan file: ./scan_results.txt

ü§ñ AI analyzing ‚úÖ

PROFESSIONAL PENETRATION TEST REPORT

Executive Summary:
Assessment performed on target.com revealed 3 findings of varying severity...

Methodology:
- Port scanning using Nmap 7.94
- Service enumeration with version detection
- Manual vulnerability verification

Findings:

1. [CRITICAL] SQL Injection - /admin/login.php
   CVE: N/A (Application-specific)
   Description: SQL injection vulnerability in login form
   Impact: Full database compromise possible
   Remediation: Implement parameterized queries

2. [HIGH] Outdated Apache Version
   CVE: CVE-2024-1234
   Description: Apache 2.4.41 running with known vulnerabilities
   Impact: Remote code execution possible
   Remediation: Update to Apache 2.4.58+

3. [MEDIUM] Directory Listing Enabled
   CVE: N/A (Configuration issue)
   Description: /backup/ directory listing exposed
   Impact: Information disclosure
   Remediation: Disable directory listing in Apache config

Risk Ratings:
- CRITICAL: 1 finding
- HIGH: 1 finding
- MEDIUM: 1 finding
- LOW: 0 findings

Recommendations:
1. Immediate patching of critical SQL injection
2. Update Apache to latest stable version
3. Review and harden web server configuration
4. Implement Web Application Firewall (WAF)
5. Regular security assessments

Conclusion:
Target requires immediate attention for critical findings...

‚úÖ Report saved to: vapt_report_20251018_152900.txt
Example 6: Piped Input Analysis
bash$ cat nmap_scan.xml | termi -p "analyze for vulnerabilities"

ü§ñ AI analyzing

NMAP SCAN ANALYSIS

Detected Services:
1. SSH (Port 22) - OpenSSH 7.6p1
   Status: Outdated version
   Risk: MEDIUM
   CVE: CVE-2018-15473 (User enumeration)

2. HTTP (Port 80) - Apache 2.4.41
   Status: Vulnerable
   Risk: HIGH
   CVE: CVE-2024-1234 (RCE possible)

3. MySQL (Port 3306) - MySQL 5.7.30
   Status: Externally accessible
   Risk: CRITICAL
   Issue: Database should not be internet-facing

Recommendations:
1. Update all services to latest versions
2. Restrict MySQL access to localhost only
3. Implement fail2ban for SSH
4. Configure WAF for web services
üéì Learning Examples
Explain Security Concepts
bash$ termi ask "explain what is CVE-2024-1234"
$ termi ask "what is MITRE ATT&CK framework"
$ termi ask "explain nmap flags: -sV -A -T4"
$ termi ask "difference between white box and black box testing"
Tool-Specific Help
bash$ termi ask "how to use Metasploit for Windows exploitation"
$ termi ask "best practices for using sqlmap"
$ termi ask "aircrack-ng commands for WPA2 cracking"
‚ö†Ô∏è Ethical Use Disclaimer
TermiGPT is designed for authorized security testing only.

Always obtain written permission before testing any system
Unauthorized access to computer systems is illegal
Use this tool responsibly and ethically
The authors are not responsible for misuse

üîê Security & Privacy

No data is stored on external servers
All API communication is encrypted
Session data stored locally only
No telemetry or tracking

ü§ù Contributing
Contributions are welcome! Please feel free to submit a Pull Request.
üìÑ License
MIT License - see LICENSE file for details
üë®‚Äçüíª Author
TheNooB

GitHub: https://github.com/thenoob4
GitHub: https://github.com/codelabwithosman

üÜò Support

Issues: https://github.com/thenoob4/termingpt/issues
Documentation: https://github.com/thenoob4/termingpt#readme

üéØ Requirements

Python 3.7+
Internet connection
(Optional) Security tools for advanced features

üîÑ Version History
v2.0.0 (Current)

Professional security research focus
Enhanced reconnaissance capabilities
AI-powered vulnerability assessment
VAPT report generation
Tool management system
Session persistence
Improved error handling
Piped input support

v1.0.0

Initial release
Basic code generation
Simple security scanning
