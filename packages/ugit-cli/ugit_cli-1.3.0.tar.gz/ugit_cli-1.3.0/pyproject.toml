[build-system]
requires = ["setuptools>=75.8.1"]
build-backend = "setuptools.build_meta"

[project]
name = "ugit-cli"
version = "1.3.0"
description = "A minimal Git implementation in Python"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"  
authors = [
    {name = "night-slayer18"},
]
keywords = ["git", "version-control", "vcs", "educational", "minimal"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Version Control",
    "Topic :: Education",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://github.com/night-slayer18/ugit"
"Bug Tracker" = "https://github.com/night-slayer18/ugit/issues"
Documentation = "https://github.com/night-slayer18/ugit/blob/main/README.md"
"Source Code" = "https://github.com/night-slayer18/ugit"

[project.scripts]
ugit = "ugit.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
web = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "httpx>=0.27.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["ugit*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
ugit = [
    "LICENSE",
    "web/static/*",
    "web/static/css/*",
    "web/static/js/*",
    "web/templates/*"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["ugit"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]