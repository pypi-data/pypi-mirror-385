# Build system requirements.
[build-system]
requires = ["flit_core >=3.11,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "ray_utilities"
version = "0.7.0"
readme = "README.md"
description = "Utilities for Ray RLlib and related workflows. Includes experiment setup, callbacks, and JAX model utilities."
license = { file = "LICENSE" }
requires-python = ">=3.9"
authors = [
  { name = "Daniel Sperber", email = "daniel.sperber@gmail.com" }
]
  classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
  ]
dependencies = [
  "ray[tune,rllib] < 2.50.0",
  "typed-argument-parser",
  "tqdm",
  "colorlog",
  "opencv-python",
  "python-dotenv",
  "frozenlist",
  "torch",  # maybe optional
  "comet_ml",  # remove later -> optional
  "wandb",  # remove later -> optional
  "optuna",  # remove later -> optional
  "jax",  # remove later -> optional
  "exceptiongroup; python_version < '3.11'",
  "pybase62==1.0.0",
  "typing_extensions >= 4.13",
]
[project.optional-dependencies]
test = [
  "pytest",
  "pytest-timeout",
  "pytest-subtests",
  "debugpy",
  "testfixtures",
  "flaky",
]
wandb = [
  "wandb>=0.16.5",
  "selenium>=4.15.0",  # wandb server limitation; for fork uploading
]
comet = [
  "comet_ml",
]
optuna = [
  "optuna",
]
jax = [
  "jax",
  "flax",
  "optax",
  "chex",
]
argcomplete = [
  "argcomplete",
]

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120

[tool.ruff.lint]
#preview=true
select = [
  "ARG",
  "B",
  "BLE",
  "C4",
  "COM818",
  "D20",
  "E",
  "FA102",
  "FBT",
  "F",
  "FIX",  # todo, xxx, fixme
  "FURB",
  "G",    # Log formatting
  "ICN",  # Import Conventions
  "ISC",  # Implicit String Concat
  "LOG",  # logging
  "N",
  "NPY",  # numpy
  "PD",  # Pandas
  "PERF",
  "PIE",
  "PLC",
  "PLE",
  "PLR",
  "PLR0402", # import A.B as B; from A import B
  "PLR2044", # empty comment
  "PLW",
  "PYI",
  "Q003", "Q004",
  "RET",
  "RUF",
  "SLOT", # Reduce memory when using __slots__
  "TC",
  "T100",
  "TID",  # relative | slow imports
  "TID251", # banned API, options see below, avoid import from downstream packages
  "TRY",
  "W",
  "YTT",  # sys.version_info comparison
]
ignore = [
  "D203", "D205",
  "RET504",  # assignment before return
  "RUF100",  # Unused noqa
  "SIM108",  # Use ternary assignments instead of if blocks
  "SIM300",  # Yoda triggers on GYM_VERSION >= Version("1.0.0")
  "N806", "N812",  # Upercase variables
  "PLR09",  #  Too many

  "TRY003", "TRY400",  # To long error messages, use logging.exception over error

  "PLR2004",  # Magic Values
  "NPY002",  # Use random generator
]
exclude = [
    ".git",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.format]
  docstring-code-format = true
  exclude = [
    ".git",
]

[tool.ruff.lint.isort]
force-single-line = false  # default: false

[tool.ruff.lint.pyflakes]
# Avoid F401 error when Generic is not detected
extend-generics = [
    "ray_utilities.setup.experiment_base.ExperimentSetupBase",
    "ray_utilities.jax.jax_model.FlaxRLModel",
    "ray_utilities.setup.ppo_mlp_setup.MLPSetup",
    "ray_utilities.setup.ppo_mlp_setup.PPOMLPSetup",
]
allowed-unused-imports = ["hvplot.pandas", "default_arguments.PYTHON_ARGCOMPLETE_OK"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
# during dev/refactoring phase make sure not to import from downstream packages
"SYMPOL".msg = "Import from downstream packages; missing refactoring."
"rllib_port".msg = "Import from downstream packages; missing refactoring."
"docs".msg = "Importing from docs is not allowed."

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = ["ARG", "D", "SIM117"]
"ray_utilities/testing_utils.py" = ["D"]
"ray_utilities/callbacks/**/*.py" = ["ARG"]
"ray_utilities/jax/ppo/jax_ppo_learner.py" = ["B018"]  # blank expression for IDE references for now

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-builtins]
ignorelist = ["copyright"]

[tool.isort]
split_on_trailing_comma = true
include_trailing_comma = true
profile = "black"
known_third_party = ["default_arguments"] # This is a a lie, default_arguments should be at the top as it applies mocking
line_length = 120

[tool.pyright]
reportDeprecated = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryCast = "warning"

[tool.pytest.ini_options]
console_output_style = "count"
timeout = 240
session_timeout = 900
markers = [
   "tuner",
   "basic: Mark tests that should be tested first - if they fail others likely fail",
   "env_runner_cases",
   "length: Mark tests that are fast/medium/slow to execute"
]
