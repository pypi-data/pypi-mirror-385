// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: control-plane.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EdgeAliveRequest is sent by an edge worker to report that it's alive.
type EdgeAliveRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// edge_id is the unique identifier for this edge worker
	EdgeId string `protobuf:"bytes,1,opt,name=edge_id,json=edgeId,proto3" json:"edge_id,omitempty"`
	// timestamp is when this alive message was generated
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// metadata contains optional key-value pairs with additional information
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EdgeAliveRequest) Reset() {
	*x = EdgeAliveRequest{}
	mi := &file_control_plane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EdgeAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeAliveRequest) ProtoMessage() {}

func (x *EdgeAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeAliveRequest.ProtoReflect.Descriptor instead.
func (*EdgeAliveRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{0}
}

func (x *EdgeAliveRequest) GetEdgeId() string {
	if x != nil {
		return x.EdgeId
	}
	return ""
}

func (x *EdgeAliveRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EdgeAliveRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// EdgeAliveResponse is the control plane's acknowledgment.
type EdgeAliveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// acknowledged indicates whether the control plane received the message
	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	// message contains optional information from the control plane
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EdgeAliveResponse) Reset() {
	*x = EdgeAliveResponse{}
	mi := &file_control_plane_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EdgeAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeAliveResponse) ProtoMessage() {}

func (x *EdgeAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeAliveResponse.ProtoReflect.Descriptor instead.
func (*EdgeAliveResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{1}
}

func (x *EdgeAliveResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *EdgeAliveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// EdgeGoingAwayRequest is sent by an edge worker when shutting down.
type EdgeGoingAwayRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// edge_id is the unique identifier for this edge worker
	EdgeId string `protobuf:"bytes,1,opt,name=edge_id,json=edgeId,proto3" json:"edge_id,omitempty"`
	// reason describes why the edge is going away
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EdgeGoingAwayRequest) Reset() {
	*x = EdgeGoingAwayRequest{}
	mi := &file_control_plane_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EdgeGoingAwayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeGoingAwayRequest) ProtoMessage() {}

func (x *EdgeGoingAwayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeGoingAwayRequest.ProtoReflect.Descriptor instead.
func (*EdgeGoingAwayRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{2}
}

func (x *EdgeGoingAwayRequest) GetEdgeId() string {
	if x != nil {
		return x.EdgeId
	}
	return ""
}

func (x *EdgeGoingAwayRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// EdgeGoingAwayResponse is the control plane's acknowledgment.
type EdgeGoingAwayResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// acknowledged indicates whether the control plane received the message
	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	// message contains optional information from the control plane
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EdgeGoingAwayResponse) Reset() {
	*x = EdgeGoingAwayResponse{}
	mi := &file_control_plane_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EdgeGoingAwayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeGoingAwayResponse) ProtoMessage() {}

func (x *EdgeGoingAwayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeGoingAwayResponse.ProtoReflect.Descriptor instead.
func (*EdgeGoingAwayResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{3}
}

func (x *EdgeGoingAwayResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

func (x *EdgeGoingAwayResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_control_plane_proto protoreflect.FileDescriptor

const file_control_plane_proto_rawDesc = "" +
	"\n" +
	"\x13control-plane.proto\x12\x0fcontrolplane.v1\"\xd3\x01\n" +
	"\x10EdgeAliveRequest\x12\x17\n" +
	"\aedge_id\x18\x01 \x01(\tR\x06edgeId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12K\n" +
	"\bmetadata\x18\x03 \x03(\v2/.controlplane.v1.EdgeAliveRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\x11EdgeAliveResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"G\n" +
	"\x14EdgeGoingAwayRequest\x12\x17\n" +
	"\aedge_id\x18\x01 \x01(\tR\x06edgeId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"U\n" +
	"\x15EdgeGoingAwayResponse\x12\"\n" +
	"\facknowledged\x18\x01 \x01(\bR\facknowledged\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xd5\x01\n" +
	"\x13ControlPlaneService\x12X\n" +
	"\x0fReportEdgeAlive\x12!.controlplane.v1.EdgeAliveRequest\x1a\".controlplane.v1.EdgeAliveResponse\x12d\n" +
	"\x13ReportEdgeGoingAway\x12%.controlplane.v1.EdgeGoingAwayRequest\x1a&.controlplane.v1.EdgeGoingAwayResponseB?Z=github.com/dvaldivia/grpctunnel-py/test-projects/go-tunnel/pbb\x06proto3"

var (
	file_control_plane_proto_rawDescOnce sync.Once
	file_control_plane_proto_rawDescData []byte
)

func file_control_plane_proto_rawDescGZIP() []byte {
	file_control_plane_proto_rawDescOnce.Do(func() {
		file_control_plane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_control_plane_proto_rawDesc), len(file_control_plane_proto_rawDesc)))
	})
	return file_control_plane_proto_rawDescData
}

var file_control_plane_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_control_plane_proto_goTypes = []any{
	(*EdgeAliveRequest)(nil),      // 0: controlplane.v1.EdgeAliveRequest
	(*EdgeAliveResponse)(nil),     // 1: controlplane.v1.EdgeAliveResponse
	(*EdgeGoingAwayRequest)(nil),  // 2: controlplane.v1.EdgeGoingAwayRequest
	(*EdgeGoingAwayResponse)(nil), // 3: controlplane.v1.EdgeGoingAwayResponse
	nil,                           // 4: controlplane.v1.EdgeAliveRequest.MetadataEntry
}
var file_control_plane_proto_depIdxs = []int32{
	4, // 0: controlplane.v1.EdgeAliveRequest.metadata:type_name -> controlplane.v1.EdgeAliveRequest.MetadataEntry
	0, // 1: controlplane.v1.ControlPlaneService.ReportEdgeAlive:input_type -> controlplane.v1.EdgeAliveRequest
	2, // 2: controlplane.v1.ControlPlaneService.ReportEdgeGoingAway:input_type -> controlplane.v1.EdgeGoingAwayRequest
	1, // 3: controlplane.v1.ControlPlaneService.ReportEdgeAlive:output_type -> controlplane.v1.EdgeAliveResponse
	3, // 4: controlplane.v1.ControlPlaneService.ReportEdgeGoingAway:output_type -> controlplane.v1.EdgeGoingAwayResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_control_plane_proto_init() }
func file_control_plane_proto_init() {
	if File_control_plane_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_control_plane_proto_rawDesc), len(file_control_plane_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_control_plane_proto_goTypes,
		DependencyIndexes: file_control_plane_proto_depIdxs,
		MessageInfos:      file_control_plane_proto_msgTypes,
	}.Build()
	File_control_plane_proto = out.File
	file_control_plane_proto_goTypes = nil
	file_control_plane_proto_depIdxs = nil
}
