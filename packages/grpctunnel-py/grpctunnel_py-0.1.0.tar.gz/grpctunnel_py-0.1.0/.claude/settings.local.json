{
  "permissions": {
    "allow": [
      "Bash(uv:*)",
      "Bash(tree:*)",
      "Bash(proto/grpctunnel/v1/tunnel.proto)",
      "Bash(buf mod update:*)",
      "Bash(buf generate:*)",
      "Bash(timeout 5 uv run pytest:*)",
      "Bash(timeout 30 uv run pytest tests/integration/test_reverse_tunnel.py -v)",
      "Bash(find:*)",
      "Bash(pkill:*)",
      "Bash(chmod:*)",
      "Bash(./generate.sh:*)",
      "Bash(go mod:*)",
      "Bash(go build:*)",
      "Bash(go get:*)",
      "Bash(go doc:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(timeout 30 uv run pytest test_go_server_py_client.py -v)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:pkg.go.dev)",
      "Bash(timeout 30 uv run pytest tests/test_interceptors.py -v)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(timeout 30 uv run pytest tests/test_register_service.py -v)",
      "Bash(for test_file in tests/test_*.py)",
      "Bash(do echo \"=== $test_file ===\")",
      "Bash(timeout 10 uv run pytest \"$test_file\" -v)",
      "Bash(done)",
      "Bash(tee:*)",
      "Read(//private/tmp/**)",
      "Bash(timeout 60 uv run pytest --tb=line -q)",
      "Bash(for f in src/grpctunnel/*.py src/grpctunnel/proto/*.py src/grpctunnel/proto/v1/*.py tests/*.py tests/integration/*.py examples/*/*.py integrationtests/python-interop/*.py)",
      "Bash(do [ -f \"$f\" ])",
      "Bash(echo:*)",
      "Bash(head:*)",
      "Bash(while read f)",
      "Bash(do if ! grep -q \"Copyright\\|Licensed under\" \"$f\")",
      "Bash(then echo \"MISSING: $f\")",
      "Bash(fi)",
      "Bash(for file in src/grpctunnel/handler.py src/grpctunnel/reverse.py src/grpctunnel/reverse_channel.py src/grpctunnel/options.py src/grpctunnel/metadata.py src/grpctunnel/flow_control.py src/grpctunnel/context.py)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(test -d test-projects)",
      "Bash(/Users/dvaldivia/go/src/github.com/dvaldivia/grpctunnel-py/test-projects/go-tunnel/control-plane)",
      "Bash(timeout 15 uv run python main.py)",
      "Bash(cat /tmp/go-control-plane.log)",
      "Bash(cat /tmp/py-edge-worker.log)",
      "Bash(xargs kill -9)"
    ],
    "deny": [],
    "ask": []
  }
}
