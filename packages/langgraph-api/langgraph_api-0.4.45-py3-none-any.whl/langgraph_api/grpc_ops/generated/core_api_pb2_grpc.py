# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import core_api_pb2 as core__api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in core_api_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AssistantsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/coreApi.Assistants/Get',
                request_serializer=core__api__pb2.GetAssistantRequest.SerializeToString,
                response_deserializer=core__api__pb2.Assistant.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/coreApi.Assistants/Create',
                request_serializer=core__api__pb2.CreateAssistantRequest.SerializeToString,
                response_deserializer=core__api__pb2.Assistant.FromString,
                _registered_method=True)
        self.Patch = channel.unary_unary(
                '/coreApi.Assistants/Patch',
                request_serializer=core__api__pb2.PatchAssistantRequest.SerializeToString,
                response_deserializer=core__api__pb2.Assistant.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/coreApi.Assistants/Delete',
                request_serializer=core__api__pb2.DeleteAssistantRequest.SerializeToString,
                response_deserializer=core__api__pb2.DeleteAssistantsResponse.FromString,
                _registered_method=True)
        self.Search = channel.unary_unary(
                '/coreApi.Assistants/Search',
                request_serializer=core__api__pb2.SearchAssistantsRequest.SerializeToString,
                response_deserializer=core__api__pb2.SearchAssistantsResponse.FromString,
                _registered_method=True)
        self.SetLatest = channel.unary_unary(
                '/coreApi.Assistants/SetLatest',
                request_serializer=core__api__pb2.SetLatestAssistantRequest.SerializeToString,
                response_deserializer=core__api__pb2.Assistant.FromString,
                _registered_method=True)
        self.GetVersions = channel.unary_unary(
                '/coreApi.Assistants/GetVersions',
                request_serializer=core__api__pb2.GetAssistantVersionsRequest.SerializeToString,
                response_deserializer=core__api__pb2.GetAssistantVersionsResponse.FromString,
                _registered_method=True)
        self.Count = channel.unary_unary(
                '/coreApi.Assistants/Count',
                request_serializer=core__api__pb2.CountAssistantsRequest.SerializeToString,
                response_deserializer=core__api__pb2.CountResponse.FromString,
                _registered_method=True)


class AssistantsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Patch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLatest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssistantsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=core__api__pb2.GetAssistantRequest.FromString,
                    response_serializer=core__api__pb2.Assistant.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=core__api__pb2.CreateAssistantRequest.FromString,
                    response_serializer=core__api__pb2.Assistant.SerializeToString,
            ),
            'Patch': grpc.unary_unary_rpc_method_handler(
                    servicer.Patch,
                    request_deserializer=core__api__pb2.PatchAssistantRequest.FromString,
                    response_serializer=core__api__pb2.Assistant.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=core__api__pb2.DeleteAssistantRequest.FromString,
                    response_serializer=core__api__pb2.DeleteAssistantsResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=core__api__pb2.SearchAssistantsRequest.FromString,
                    response_serializer=core__api__pb2.SearchAssistantsResponse.SerializeToString,
            ),
            'SetLatest': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLatest,
                    request_deserializer=core__api__pb2.SetLatestAssistantRequest.FromString,
                    response_serializer=core__api__pb2.Assistant.SerializeToString,
            ),
            'GetVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersions,
                    request_deserializer=core__api__pb2.GetAssistantVersionsRequest.FromString,
                    response_serializer=core__api__pb2.GetAssistantVersionsResponse.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=core__api__pb2.CountAssistantsRequest.FromString,
                    response_serializer=core__api__pb2.CountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coreApi.Assistants', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('coreApi.Assistants', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Assistants(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/Get',
            core__api__pb2.GetAssistantRequest.SerializeToString,
            core__api__pb2.Assistant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/Create',
            core__api__pb2.CreateAssistantRequest.SerializeToString,
            core__api__pb2.Assistant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Patch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/Patch',
            core__api__pb2.PatchAssistantRequest.SerializeToString,
            core__api__pb2.Assistant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/Delete',
            core__api__pb2.DeleteAssistantRequest.SerializeToString,
            core__api__pb2.DeleteAssistantsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/Search',
            core__api__pb2.SearchAssistantsRequest.SerializeToString,
            core__api__pb2.SearchAssistantsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetLatest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/SetLatest',
            core__api__pb2.SetLatestAssistantRequest.SerializeToString,
            core__api__pb2.Assistant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/GetVersions',
            core__api__pb2.GetAssistantVersionsRequest.SerializeToString,
            core__api__pb2.GetAssistantVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Assistants/Count',
            core__api__pb2.CountAssistantsRequest.SerializeToString,
            core__api__pb2.CountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class AdminStub(object):
    """Global database admin operations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Truncate = channel.unary_unary(
                '/coreApi.Admin/Truncate',
                request_serializer=core__api__pb2.TruncateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class AdminServicer(object):
    """Global database admin operations.
    """

    def Truncate(self, request, context):
        """Truncate all RDBMS data (supported in dev only!)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Truncate': grpc.unary_unary_rpc_method_handler(
                    servicer.Truncate,
                    request_deserializer=core__api__pb2.TruncateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coreApi.Admin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('coreApi.Admin', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Admin(object):
    """Global database admin operations.
    """

    @staticmethod
    def Truncate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Admin/Truncate',
            core__api__pb2.TruncateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ThreadsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/coreApi.Threads/Create',
                request_serializer=core__api__pb2.CreateThreadRequest.SerializeToString,
                response_deserializer=core__api__pb2.Thread.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/coreApi.Threads/Get',
                request_serializer=core__api__pb2.GetThreadRequest.SerializeToString,
                response_deserializer=core__api__pb2.Thread.FromString,
                _registered_method=True)
        self.Patch = channel.unary_unary(
                '/coreApi.Threads/Patch',
                request_serializer=core__api__pb2.PatchThreadRequest.SerializeToString,
                response_deserializer=core__api__pb2.Thread.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/coreApi.Threads/Delete',
                request_serializer=core__api__pb2.DeleteThreadRequest.SerializeToString,
                response_deserializer=core__api__pb2.UUID.FromString,
                _registered_method=True)
        self.Search = channel.unary_unary(
                '/coreApi.Threads/Search',
                request_serializer=core__api__pb2.SearchThreadsRequest.SerializeToString,
                response_deserializer=core__api__pb2.SearchThreadsResponse.FromString,
                _registered_method=True)
        self.Count = channel.unary_unary(
                '/coreApi.Threads/Count',
                request_serializer=core__api__pb2.CountThreadsRequest.SerializeToString,
                response_deserializer=core__api__pb2.CountResponse.FromString,
                _registered_method=True)
        self.Copy = channel.unary_unary(
                '/coreApi.Threads/Copy',
                request_serializer=core__api__pb2.CopyThreadRequest.SerializeToString,
                response_deserializer=core__api__pb2.Thread.FromString,
                _registered_method=True)
        self.SetStatus = channel.unary_unary(
                '/coreApi.Threads/SetStatus',
                request_serializer=core__api__pb2.SetThreadStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetJointStatus = channel.unary_unary(
                '/coreApi.Threads/SetJointStatus',
                request_serializer=core__api__pb2.SetThreadJointStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.JointRollback = channel.unary_unary(
                '/coreApi.Threads/JointRollback',
                request_serializer=core__api__pb2.JointRollbackRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SweepTTL = channel.unary_unary(
                '/coreApi.Threads/SweepTTL',
                request_serializer=core__api__pb2.SweepThreadsTTLRequest.SerializeToString,
                response_deserializer=core__api__pb2.SweepThreadsTTLResponse.FromString,
                _registered_method=True)


class ThreadsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Patch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Copy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetJointStatus(self, request, context):
        """Set the status of a thread and run atomically.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JointRollback(self, request, context):
        """Roll back a run and update a thread's status atomically.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SweepTTL(self, request, context):
        """Delete expired threads (based on TTL configurations).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ThreadsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=core__api__pb2.CreateThreadRequest.FromString,
                    response_serializer=core__api__pb2.Thread.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=core__api__pb2.GetThreadRequest.FromString,
                    response_serializer=core__api__pb2.Thread.SerializeToString,
            ),
            'Patch': grpc.unary_unary_rpc_method_handler(
                    servicer.Patch,
                    request_deserializer=core__api__pb2.PatchThreadRequest.FromString,
                    response_serializer=core__api__pb2.Thread.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=core__api__pb2.DeleteThreadRequest.FromString,
                    response_serializer=core__api__pb2.UUID.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=core__api__pb2.SearchThreadsRequest.FromString,
                    response_serializer=core__api__pb2.SearchThreadsResponse.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=core__api__pb2.CountThreadsRequest.FromString,
                    response_serializer=core__api__pb2.CountResponse.SerializeToString,
            ),
            'Copy': grpc.unary_unary_rpc_method_handler(
                    servicer.Copy,
                    request_deserializer=core__api__pb2.CopyThreadRequest.FromString,
                    response_serializer=core__api__pb2.Thread.SerializeToString,
            ),
            'SetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetStatus,
                    request_deserializer=core__api__pb2.SetThreadStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetJointStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetJointStatus,
                    request_deserializer=core__api__pb2.SetThreadJointStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'JointRollback': grpc.unary_unary_rpc_method_handler(
                    servicer.JointRollback,
                    request_deserializer=core__api__pb2.JointRollbackRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SweepTTL': grpc.unary_unary_rpc_method_handler(
                    servicer.SweepTTL,
                    request_deserializer=core__api__pb2.SweepThreadsTTLRequest.FromString,
                    response_serializer=core__api__pb2.SweepThreadsTTLResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coreApi.Threads', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('coreApi.Threads', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Threads(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Create',
            core__api__pb2.CreateThreadRequest.SerializeToString,
            core__api__pb2.Thread.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Get',
            core__api__pb2.GetThreadRequest.SerializeToString,
            core__api__pb2.Thread.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Patch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Patch',
            core__api__pb2.PatchThreadRequest.SerializeToString,
            core__api__pb2.Thread.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Delete',
            core__api__pb2.DeleteThreadRequest.SerializeToString,
            core__api__pb2.UUID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Search',
            core__api__pb2.SearchThreadsRequest.SerializeToString,
            core__api__pb2.SearchThreadsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Count',
            core__api__pb2.CountThreadsRequest.SerializeToString,
            core__api__pb2.CountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Copy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/Copy',
            core__api__pb2.CopyThreadRequest.SerializeToString,
            core__api__pb2.Thread.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/SetStatus',
            core__api__pb2.SetThreadStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetJointStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/SetJointStatus',
            core__api__pb2.SetThreadJointStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def JointRollback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/JointRollback',
            core__api__pb2.JointRollbackRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SweepTTL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Threads/SweepTTL',
            core__api__pb2.SweepThreadsTTLRequest.SerializeToString,
            core__api__pb2.SweepThreadsTTLResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class RunsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/coreApi.Runs/Create',
                request_serializer=core__api__pb2.CreateRunRequest.SerializeToString,
                response_deserializer=core__api__pb2.Run.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/coreApi.Runs/Get',
                request_serializer=core__api__pb2.GetRunRequest.SerializeToString,
                response_deserializer=core__api__pb2.Run.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/coreApi.Runs/Delete',
                request_serializer=core__api__pb2.DeleteRunRequest.SerializeToString,
                response_deserializer=core__api__pb2.UUID.FromString,
                _registered_method=True)
        self.Search = channel.unary_unary(
                '/coreApi.Runs/Search',
                request_serializer=core__api__pb2.SearchRunsRequest.SerializeToString,
                response_deserializer=core__api__pb2.SearchRunsResponse.FromString,
                _registered_method=True)
        self.Cancel = channel.unary_unary(
                '/coreApi.Runs/Cancel',
                request_serializer=core__api__pb2.CancelRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetStatus = channel.unary_unary(
                '/coreApi.Runs/SetStatus',
                request_serializer=core__api__pb2.SetRunStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Stats = channel.unary_unary(
                '/coreApi.Runs/Stats',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=core__api__pb2.QueueStats.FromString,
                _registered_method=True)
        self.Next = channel.unary_unary(
                '/coreApi.Runs/Next',
                request_serializer=core__api__pb2.NextRunRequest.SerializeToString,
                response_deserializer=core__api__pb2.NextRunResponse.FromString,
                _registered_method=True)
        self.Sweep = channel.unary_unary(
                '/coreApi.Runs/Sweep',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=core__api__pb2.SweepRunsResponse.FromString,
                _registered_method=True)


class RunsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Cancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stats(self, request, context):
        """Get run queue statistics (internal method)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Next(self, request, context):
        """Get next run from queue (internal worker method)
        TODO: come back
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sweep(self, request, context):
        """Sweep abandoned runs (internal method)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RunsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=core__api__pb2.CreateRunRequest.FromString,
                    response_serializer=core__api__pb2.Run.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=core__api__pb2.GetRunRequest.FromString,
                    response_serializer=core__api__pb2.Run.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=core__api__pb2.DeleteRunRequest.FromString,
                    response_serializer=core__api__pb2.UUID.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=core__api__pb2.SearchRunsRequest.FromString,
                    response_serializer=core__api__pb2.SearchRunsResponse.SerializeToString,
            ),
            'Cancel': grpc.unary_unary_rpc_method_handler(
                    servicer.Cancel,
                    request_deserializer=core__api__pb2.CancelRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetStatus,
                    request_deserializer=core__api__pb2.SetRunStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Stats': grpc.unary_unary_rpc_method_handler(
                    servicer.Stats,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=core__api__pb2.QueueStats.SerializeToString,
            ),
            'Next': grpc.unary_unary_rpc_method_handler(
                    servicer.Next,
                    request_deserializer=core__api__pb2.NextRunRequest.FromString,
                    response_serializer=core__api__pb2.NextRunResponse.SerializeToString,
            ),
            'Sweep': grpc.unary_unary_rpc_method_handler(
                    servicer.Sweep,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=core__api__pb2.SweepRunsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coreApi.Runs', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('coreApi.Runs', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Runs(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Create',
            core__api__pb2.CreateRunRequest.SerializeToString,
            core__api__pb2.Run.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Get',
            core__api__pb2.GetRunRequest.SerializeToString,
            core__api__pb2.Run.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Delete',
            core__api__pb2.DeleteRunRequest.SerializeToString,
            core__api__pb2.UUID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Search',
            core__api__pb2.SearchRunsRequest.SerializeToString,
            core__api__pb2.SearchRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Cancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Cancel',
            core__api__pb2.CancelRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/SetStatus',
            core__api__pb2.SetRunStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Stats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Stats',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            core__api__pb2.QueueStats.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Next(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Next',
            core__api__pb2.NextRunRequest.SerializeToString,
            core__api__pb2.NextRunResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Sweep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/coreApi.Runs/Sweep',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            core__api__pb2.SweepRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
