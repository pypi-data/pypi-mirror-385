[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "StudentScore"
version = "0.6.0"
description = "Computing score of a given student assignment"
readme = "README.md"
license = "MIT"
authors = ["Yves Chevallier <yves.chevallier@heig-vd.ch>"]
keywords = ["testing", "functional-testing"]
homepage = "https://github.com/heig-tin-info/score"
repository = "https://github.com/heig-tin-info/score"
documentation = "https://heig-tin-info.github.io/score/"
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Environment :: Console",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
  "Intended Audience :: Education",
  "Operating System :: OS Independent",
]
packages = [{ include = "StudentScore" }]
include = [
  "CHANGES.md",
  "conftest.py",
  "noxfile.py",
  "poetry.lock",
  "setup.py",
  ".coveragerc",
  ".editorconfig",
  "tests/**/*",
  "StudentScore/result_schema.json",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/heig-tin-info/score/issues"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = ">=2.7,<3.0"
click = ">=8.0.0"
pyyaml = ">=6.0"
colorama = ">=0.4.0"
typer = ">=0.12,<1.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = ">=7.0"
pytest-cov = ">=4.0"
coverage = { version = ">=7.11.0", extras = ["toml"] }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
nox = ">=2024.4.15"
ruff = ">=0.5.0"
check-manifest = ">=0.49"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
coverage = {extras = ["toml"], version = "^7.11.0"}

[tool.poetry.extras]
test = ["pytest", "pytest-cov", "coverage"]
dev = ["nox", "ruff", "check-manifest"]

[tool.poetry.scripts]
score = "StudentScore.__main__:cli"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
norecursedirs = [".git", "_build"]
addopts = "-ra"

[tool.ruff]
src = ["StudentScore", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["StudentScore"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
lines-after-imports = 2

[tool.flake8]
exclude = [".git", "__pycache__", "dist"]
max-complexity = 10
max-line-length = 100

[tool.check-manifest]
ignore = ["node_modules/*"]
