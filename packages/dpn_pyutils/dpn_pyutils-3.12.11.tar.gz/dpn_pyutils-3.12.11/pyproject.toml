[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dpn_pyutils"
version = "3.12.11"
description = "A collection of python utils used by the DPN"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "David Pirogov", email = "580286+davidpirogov@users.noreply.github.com" },
]
requires-python = ">=3.12"
dependencies = [
  "better-exceptions>=0.3.3",
  "cachetools>=6.2.1",
  "chardet>=5.2.0",
  "click>=8.3.0",
  "colorama>=0.4.6",
  "coverage>=7.11.0",
  "distlib>=0.4.0",
  "filelock>=3.20.0",
  "iniconfig>=2.1.0",
  "lexid>=2021.1006",
  "looseversion>=1.3.0",
  "orjson>=3.11.3",
  "packaging>=25.0",
  "platformdirs>=4.5.0",
  "pluggy>=1.6.0",
  "pydantic>=2.12.2",
  "pygments>=2.19.2",
  "pyproject-api>=1.10.0",
  "pytest>=8.4.2",
  "pytz>=2025.2",
  "toml>=0.10.2",
  "tox>=4.31.0",
  "tox-uv>=1.18.2",
]

[project.urls]
Homepage = "https://github.com/davidpirogov/dpn_pyutils"

[tool.hatch.build.targets.wheel]
packages = ["dpn_pyutils"]

[tool.hatch.build.targets.sdist]
packages = ["dpn_pyutils"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config",
  "--cov=dpn_pyutils",
  "--cov-branch",
  "--cov-report=term-missing:skip-covered",
  "--cov-report=html",
  "--cov-report=xml",
  #"--cov-fail-under=80",
  "--maxfail=1",
  "--tb=short",
]
filterwarnings = [
  "error",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
  "e2e: marks tests as end-to-end tests",
  "requires_api_keys: marks tests that require API keys",
]
# Async configuration
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

# Coverage configuration
[tool.coverage.run]
source = ["dpn_pyutils"]
branch = true
parallel = true
omit = [
  "*/tests/*",
  "*/__init__.py",
  "*/migrations/*",
  "*/versions/*",
  "*/.venv/*",
  "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
  "@overload",
  "@abstractmethod",
  "@abc.abstractmethod",
  "class .*\\(Protocol\\):",
  "class .*\\(typing.Protocol\\):",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[dependency-groups]
dev = [
  "anyio>=4.10.0",
  "pytest>=8.4.2",
  "pytest-asyncio>=1.1.0",
  "pytest-cov>=6.3.0",
  "pytest-mock>=3.15.0",
  "pytest-timeout>=2.4.0",
  "pytest-xdist>=3.8.0",
]

[tool.bumpver]
current_version = "3.12.4"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']

[tool.black]
line-length = 110
