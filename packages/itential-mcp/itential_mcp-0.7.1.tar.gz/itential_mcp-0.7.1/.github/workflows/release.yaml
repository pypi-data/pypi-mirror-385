# .github/workflows/release.yml
# This workflow will create a new release and upload it to PyPI.  It will run
# whenever a new tag is merged into the repository.  It builds the application
# and pushes it to PyPI.
---
name: Deploy package to PyPI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Install tools
        run: uv run pip install build twine

      - name: Build package
        run: uv run python -m build

      - name: Publish to PyPI or TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
            echo "Publishing to PyPI..."
            twine upload dist/*
