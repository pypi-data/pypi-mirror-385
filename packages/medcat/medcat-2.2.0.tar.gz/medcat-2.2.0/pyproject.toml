[project]
name = "medcat"

version = "2.2.0"

description = "Medical Concept Annotation Toolkit (v2)"

readme = "README.md"

requires-python = ">=3.10"

license = "Apache-2.0"

keywords = ["ML", "NLP", "NER+L"]

authors = [
  {name = "Z. Kraljevic"},
  {name = "A. Shek"},
  {name = "T. Searle"},
  {name = "X. Bai"},
  {name = "M. Ratas"},
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
  {name = "CogStack", email = "contact@cogstack.org" }
]

classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  "Intended Audience :: Healthcare Industry",
  # "Topic :: Natural Language Processing :: Named Entity Recognition and Linking",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Operating System :: OS Independent",
]

# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
#
# For an analysis of this field vs pip's requirements files see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/
dependencies = [ # Optional
  "numpy>=2.1; python_version >= '3.13'",
  "numpy>=2.0; python_version < '3.13'",
  "dill",
  "pandas>=2.2,<3.0",
  "tqdm>=4.64,<5.0",
  "xxhash>=3.5.0,<4.0",
  "pydantic>2.0",
  "typing-extensions",
  # TODO - others
]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Similar to `dependencies` above, these must be valid existing
# projects.
[project.optional-dependencies] # Optional
dev = [
  "ruff~=0.1.7",
  "mypy",
  "types-tqdm",
  "types-setuptools",
  "types-PyYAML",
]
spacy = [
  "spacy",
]
meta_cat = [
  "transformers>=4.41.0,<5.0", # avoid major bump
  # Transformers 4.57 doesn't support 3.9
  "transformers!=4.57.0; python_version == '3.9'",
  "peft>0.8.2,<1.0",
  "torch>=2.4.0,<3.0",
  "scikit-learn>=1.1.3,<2.0",
  # since 3.13 we need to use later version of scipy for it
  "scipy<1.14; python_version < '3.13'",
  "scipy>=1.14; python_version >= '3.13'",
]
dict_ner = [
  "pyahocorasick>=2.1.0,<3.0"
]
deid = [
  "datasets>=2.2.2,<3.0.0",
  # Transformers 4.57 doesn't support 3.9
  "transformers!=4.57.0; python_version == '3.9'",
  "transformers>=4.41.0,<5.0", # avoid major bump
  # Transformers 4.57 doesn't support 3.9
  "transformers!=4.57.0; python_version == '3.9'",
  "scikit-learn>=1.1.3,<2.0",
  "torch>=2.4.0,<3.0",
  # since 3.13 we need to use later version of scipy for it
  "scipy<1.14; python_version < '3.13'",
  "scipy>=1.14; python_version >= '3.13'",
]
rel_cat = [
  # Transformers 4.57 doesn't support 3.9
  "transformers!=4.57.0; python_version == '3.9'",
  "transformers>=4.41.0,<5.0", # avoid major bump
  # Transformers 4.57 doesn't support 3.9
  "transformers!=4.57.0; python_version == '3.9'",
  "scikit-learn>=1.1.3,<2.0",
  "torch>=2.4.0,<3.0",
]
test = []  # TODO - list

[project.urls]
"Homepage" = "https://cogstack.org/"
"Documentation" = "https://docs.cogstack.org/projects/nlp/en/latest/"
"Bug Reports" = "https://discourse.cogstack.org/"
"Source" = "https://github.com/CogStack/cogstack-nlp/"

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff.lint]
# 1. Enable some extra checks for ruff
select = ["E", "F"]
# ignore unused local variables
ignore = ["F841"]
