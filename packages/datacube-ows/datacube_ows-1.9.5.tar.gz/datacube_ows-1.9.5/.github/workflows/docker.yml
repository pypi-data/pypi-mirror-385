---
name: Build Docker Image and push to GHCR

on:
  push:
    branches:
      - develop
    paths:
      - "**"
      - '!docs/**'
      - '!*.rst'
      - '!*.md'
      - '!datacube_ows/__init__.py'

  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: opendatacube/ows

permissions: {}

jobs:
  build-and-push-image:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
      packages: write  # This is required for pushing to ghcr
      attestations: write # This is required for pushing the attestation

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Get Git commit timestamps
        run: |
          TIMESTAMP=$(git log -1 --pretty=%ct pyproject.toml uv.lock datacube_ows)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}

      - name: Attest Docker image
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
