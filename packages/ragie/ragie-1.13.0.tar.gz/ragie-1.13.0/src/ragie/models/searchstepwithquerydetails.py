"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .querydetails import QueryDetails, QueryDetailsTypedDict
from .search import Search, SearchTypedDict
import pydantic
from pydantic.functional_validators import AfterValidator
from ragie.types import BaseModel
from ragie.utils import validate_const
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SearchStepWithQueryDetailsTypedDict(TypedDict):
    think: str
    current_question: str
    search: SearchTypedDict
    type: Literal["search"]
    errored: NotRequired[bool]
    query_details: NotRequired[List[QueryDetailsTypedDict]]
    search_log: NotRequired[str]
    r"""A log of the search results you found."""


class SearchStepWithQueryDetails(BaseModel):
    think: str

    current_question: str

    search: Search

    TYPE: Annotated[
        Annotated[
            Optional[Literal["search"]], AfterValidator(validate_const("search"))
        ],
        pydantic.Field(alias="type"),
    ] = "search"

    errored: Optional[bool] = False

    query_details: Optional[List[QueryDetails]] = None

    search_log: Optional[str] = ""
    r"""A log of the search results you found."""
