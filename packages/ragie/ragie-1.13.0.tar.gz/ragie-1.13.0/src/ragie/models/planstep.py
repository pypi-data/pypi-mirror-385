"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from pydantic.functional_validators import AfterValidator
from ragie.types import BaseModel
from ragie.utils import validate_const
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PlanStepTypedDict(TypedDict):
    think: str
    current_question: str
    type: Literal["plan"]
    errored: NotRequired[bool]
    questions_to_answer: NotRequired[List[str]]
    r"""The questions that need to be answered to answer the original question."""


class PlanStep(BaseModel):
    think: str

    current_question: str

    TYPE: Annotated[
        Annotated[Optional[Literal["plan"]], AfterValidator(validate_const("plan"))],
        pydantic.Field(alias="type"),
    ] = "plan"

    errored: Optional[bool] = False

    questions_to_answer: Optional[List[str]] = None
    r"""The questions that need to be answered to answer the original question."""
