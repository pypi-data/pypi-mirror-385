# coding: utf-8

"""
    DLCM Solution API

    Repository for Research Datasets

    The version of the OpenAPI document: 3.0.0-SNAPSHOT
    Contact: admin@dlcm.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dlcm_api_client.models.rest_collection_submission_agreement import RestCollectionSubmissionAgreement

class TestRestCollectionSubmissionAgreement(unittest.TestCase):
    """RestCollectionSubmissionAgreement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestCollectionSubmissionAgreement:
        """Test RestCollectionSubmissionAgreement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestCollectionSubmissionAgreement`
        """
        model = RestCollectionSubmissionAgreement()
        if include_optional:
            return RestCollectionSubmissionAgreement(
                links = {
                    'key' : dlcm_api_client.models.link.Link(
                        href = '', 
                        hreflang = '', 
                        title = '', 
                        type = '', 
                        deprecation = '', 
                        profile = '', 
                        name = '', 
                        templated = True, )
                    },
                data = [
                    dlcm_api_client.models.submission_agreement.SubmissionAgreement(
                        creation = dlcm_api_client.models.change_info.ChangeInfo(
                            full_name = '', 
                            when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            who = '', ), 
                        last_update = dlcm_api_client.models.change_info.ChangeInfo(
                            full_name = '', 
                            when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            who = '', ), 
                        res_id = '', 
                        title = '', 
                        description = '', 
                        version = '', 
                        submission_agreement_file = dlcm_api_client.models.submission_agreement_file.SubmissionAgreementFile(
                            res_id = '', 
                            file_name = '', 
                            file_size = 56, 
                            mime_type = '', 
                            _links = {
                                'key' : dlcm_api_client.models.link.Link(
                                    href = '', 
                                    hreflang = '', 
                                    title = '', 
                                    type = '', 
                                    deprecation = '', 
                                    profile = '', 
                                    name = '', 
                                    templated = True, )
                                }, ), 
                        _links = {
                            'key' : dlcm_api_client.models.link.Link(
                                href = '', 
                                hreflang = '', 
                                title = '', 
                                type = '', 
                                deprecation = '', 
                                profile = '', 
                                name = '', 
                                templated = True, )
                            }, )
                    ],
                facets = [
                    dlcm_api_client.models.facet_result.FacetResult(
                        name = '', 
                        field = '', 
                        values = [
                            dlcm_api_client.models.facet_result_value.FacetResultValue(
                                value = '', 
                                count = 56, )
                            ], )
                    ],
                page = dlcm_api_client.models.rest_collection_page.RestCollectionPage(
                    current_page = 56, 
                    size_page = 56, 
                    total_items = 56, 
                    total_pages = 56, )
            )
        else:
            return RestCollectionSubmissionAgreement(
        )
        """

    def testRestCollectionSubmissionAgreement(self):
        """Test RestCollectionSubmissionAgreement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
