# coding: utf-8

"""
    DLCM Solution API

    Repository for Research Datasets

    The version of the OpenAPI document: 3.0.0-SNAPSHOT
    Contact: admin@dlcm.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dlcm_api_client.models.representation_info import RepresentationInfo

class TestRepresentationInfo(unittest.TestCase):
    """RepresentationInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepresentationInfo:
        """Test RepresentationInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepresentationInfo`
        """
        model = RepresentationInfo()
        if include_optional:
            return RepresentationInfo(
                access = 'PUBLIC',
                data_sensitivity = 'UNDEFINED',
                data_use_policy = 'NONE',
                compliance_level = 'NOT_ASSESSED',
                description = '',
                embargo = dlcm_api_client.models.embargo_info.EmbargoInfo(
                    access = 'PUBLIC', 
                    months = 56, 
                    start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                license_id = '',
                metadata_version = '1.0',
                name = '0',
                organizational_unit_id = '0',
                status = 'CHECK_PENDING',
                status_message = '',
                contains_updated_metadata = True,
                content_structure_public = True,
                current_access = 'PUBLIC',
                access_currently_public = True
            )
        else:
            return RepresentationInfo(
        )
        """

    def testRepresentationInfo(self):
        """Test RepresentationInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
