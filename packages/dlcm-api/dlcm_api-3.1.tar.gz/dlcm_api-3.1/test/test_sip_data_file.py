# coding: utf-8

"""
    DLCM Solution API

    Repository for Research Datasets

    The version of the OpenAPI document: 3.0.0-SNAPSHOT
    Contact: admin@dlcm.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dlcm_api_client.models.sip_data_file import SipDataFile

class TestSipDataFile(unittest.TestCase):
    """SipDataFile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SipDataFile:
        """Test SipDataFile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SipDataFile`
        """
        model = SipDataFile()
        if include_optional:
            return SipDataFile(
                creation = dlcm_api_client.models.change_info.ChangeInfo(
                    full_name = '', 
                    when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    who = '', ),
                last_update = dlcm_api_client.models.change_info.ChangeInfo(
                    full_name = '', 
                    when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    who = '', ),
                res_id = '',
                search_criterias = [
                    dlcm_api_client.models.search_criteria.SearchCriteria(
                        case_insensitive = True, 
                        case_type = '', 
                        key = '', 
                        operation = '', 
                        operation_type = 'BETWEEN', 
                        value = dlcm_api_client.models.value.value(), )
                    ],
                compliance_level = 'NOT_ASSESSED',
                data_category = 'Primary',
                data_type = 'Primary',
                file_format = dlcm_api_client.models.file_format.FileFormat(
                    content_type = '', 
                    details = '', 
                    format = '', 
                    md5 = '', 
                    puid = '', 
                    tool = dlcm_api_client.models.tool.Tool(
                        description = '', 
                        name = '', 
                        puid = '', 
                        version = '', ), 
                    version = '', ),
                file_size = 56,
                final_data = '',
                file_name = '',
                metadata_type = dlcm_api_client.models.metadata_type.MetadataType(
                    creation = dlcm_api_client.models.change_info.ChangeInfo(
                        full_name = '', 
                        when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        who = '', ), 
                    last_update = dlcm_api_client.models.change_info.ChangeInfo(
                        full_name = '', 
                        when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        who = '', ), 
                    res_id = '', 
                    description = '', 
                    metadata_format = 'CUSTOM', 
                    metadata_schema = '', 
                    name = '0', 
                    url = '', 
                    version = '0', 
                    full_name = '', 
                    _links = {
                        'key' : dlcm_api_client.models.link.Link(
                            href = '', 
                            hreflang = '', 
                            title = '', 
                            type = '', 
                            deprecation = '', 
                            profile = '', 
                            name = '', 
                            templated = True, )
                        }, ),
                relative_location = '',
                source_data = '',
                status = 'CHANGE_RELATIVE_LOCATION',
                status_message = '',
                virus_check = dlcm_api_client.models.virus_check.VirusCheck(
                    check_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    details = '', 
                    tool = dlcm_api_client.models.tool.Tool(
                        description = '', 
                        name = '', 
                        puid = '', 
                        version = '', ), ),
                checksums = [
                    dlcm_api_client.models.data_file_checksum.DataFileChecksum(
                        checksum = '', 
                        checksum_algo = 'CRC32', 
                        checksum_origin = 'DLCM', 
                        checksum_type = 'COMPLETE', 
                        creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                info_package = dlcm_api_client.models.submission_info_package.SubmissionInfoPackage(
                    creation = dlcm_api_client.models.change_info.ChangeInfo(
                        full_name = '', 
                        when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        who = '', ), 
                    last_update = dlcm_api_client.models.change_info.ChangeInfo(
                        full_name = '', 
                        when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        who = '', ), 
                    res_id = '', 
                    disposition_approval = True, 
                    retention = 56, 
                    main_storage = 56, 
                    aip_id = '', 
                    deposit_id = '', 
                    info = dlcm_api_client.models.representation_info.RepresentationInfo(
                        access = 'PUBLIC', 
                        data_sensitivity = 'UNDEFINED', 
                        data_use_policy = 'NONE', 
                        compliance_level = 'NOT_ASSESSED', 
                        description = '', 
                        embargo = dlcm_api_client.models.embargo_info.EmbargoInfo(
                            access = 'PUBLIC', 
                            months = 56, 
                            start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        license_id = '', 
                        metadata_version = '1.0', 
                        name = '0', 
                        organizational_unit_id = '0', 
                        status = 'CHECK_PENDING', 
                        status_message = '', 
                        contains_updated_metadata = True, 
                        content_structure_public = True, 
                        current_access = 'PUBLIC', 
                        access_currently_public = True, ), 
                    organizational_unit = dlcm_api_client.models.organizational_unit.OrganizationalUnit(
                        res_id = '', 
                        closing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        default_license = dlcm_api_client.models.license.License(
                            res_id = '', 
                            domain_content = True, 
                            domain_data = True, 
                            domain_software = True, 
                            family = '', 
                            is_generic = True, 
                            maintainer = '', 
                            od_conformance = 'approved', 
                            open_license_id = '', 
                            osd_conformance = 'approved', 
                            status = 'active', 
                            title = '', 
                            url = '', 
                            logo = dlcm_api_client.models.license_logo.LicenseLogo(
                                res_id = '', 
                                file_name = '', 
                                file_size = 56, 
                                mime_type = '', 
                                _links = {
                                    'key' : dlcm_api_client.models.link.Link(
                                        href = '', 
                                        hreflang = '', 
                                        title = '', 
                                        type = '', 
                                        deprecation = '', 
                                        profile = '', 
                                        name = '', 
                                        templated = True, )
                                    }, ), 
                            description = '', 
                            _links = {
                                'key' : dlcm_api_client.models.link.Link(
                                    href = '', 
                                    hreflang = '', 
                                    title = '', 
                                    type = '', 
                                    deprecation = '', 
                                    profile = '', 
                                    name = '', 
                                    templated = True, )
                                }, ), 
                        default_preservation_policy = dlcm_api_client.models.preservation_policy.PreservationPolicy(
                            res_id = '', 
                            disposition_approval = True, 
                            retention = 56, 
                            main_storage = 56, 
                            name = '0', 
                            use_number = 56, 
                            smart_retention = '', ), 
                        default_submission_policy = dlcm_api_client.models.submission_policy.SubmissionPolicy(
                            res_id = '', 
                            name = '0', 
                            submission_approval = True, 
                            time_to_keep = 56, 
                            submission_agreement_type = 'WITHOUT', 
                            submission_agreement = dlcm_api_client.models.submission_agreement.SubmissionAgreement(
                                res_id = '', 
                                title = '', 
                                description = '', 
                                version = '', 
                                submission_agreement_file = dlcm_api_client.models.submission_agreement_file.SubmissionAgreementFile(
                                    res_id = '', 
                                    file_name = '', 
                                    file_size = 56, 
                                    mime_type = '', ), ), 
                            use_number = 56, ), 
                        description = '', 
                        institutions = [
                            dlcm_api_client.models.institution.Institution(
                                res_id = '', 
                                description = '', 
                                email_suffixes = [
                                    ''
                                    ], 
                                name = '0', 
                                url = '', 
                                ror_id = '', 
                                identifiers = {
                                    'key' : ''
                                    }, )
                            ], 
                        is_empty = True, 
                        keywords = [
                            ''
                            ], 
                        name = '0', 
                        opening_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        url = '', 
                        logo = dlcm_api_client.models.organizational_unit_logo.OrganizationalUnitLogo(
                            res_id = '', 
                            file_name = '', 
                            file_size = 56, 
                            mime_type = '', ), 
                        open = True, 
                        _links = , ), 
                    submission_policy = dlcm_api_client.models.submission_policy.SubmissionPolicy(
                        res_id = '', 
                        name = '0', 
                        submission_approval = True, 
                        time_to_keep = 56, 
                        submission_agreement_type = 'WITHOUT', 
                        use_number = 56, ), 
                    submission_policy_id = '', 
                    publication_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    ready = True, 
                    organizational_unit_id = '', 
                    data_file_number = 56, 
                    collection_size = 56, 
                    package_status = 'CHECK_PENDING', 
                    smart_retention = '', 
                    _links = , ),
                file_status = 'CHANGE_RELATIVE_LOCATION',
                full_file_name = '',
                in_progress = True,
                smart_size = '',
                links = {
                    'key' : dlcm_api_client.models.link.Link(
                        href = '', 
                        hreflang = '', 
                        title = '', 
                        type = '', 
                        deprecation = '', 
                        profile = '', 
                        name = '', 
                        templated = True, )
                    }
            )
        else:
            return SipDataFile(
        )
        """

    def testSipDataFile(self):
        """Test SipDataFile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
