# coding: utf-8

"""
    DLCM Solution API

    Repository for Research Datasets

    The version of the OpenAPI document: 3.0.0-SNAPSHOT
    Contact: admin@dlcm.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dlcm_api_client.models.facet_properties import FacetProperties

class TestFacetProperties(unittest.TestCase):
    """FacetProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FacetProperties:
        """Test FacetProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FacetProperties`
        """
        model = FacetProperties()
        if include_optional:
            return FacetProperties(
                name = '',
                default_visible_values = 56,
                labels = [
                    dlcm_api_client.models.label_dto.LabelDTO(
                        text = '', 
                        language = '', )
                    ],
                description_labels = [
                    dlcm_api_client.models.label_dto.LabelDTO(
                        text = '', 
                        language = '', )
                    ],
                with_description = True
            )
        else:
            return FacetProperties(
        )
        """

    def testFacetProperties(self):
        """Test FacetProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
