# coding: utf-8

"""
    DLCM Solution API

    Repository for Research Datasets

    The version of the OpenAPI document: 3.0.0-SNAPSHOT
    Contact: admin@dlcm.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dlcm_api_client.models.rest_collection_submission_info_package import RestCollectionSubmissionInfoPackage

class TestRestCollectionSubmissionInfoPackage(unittest.TestCase):
    """RestCollectionSubmissionInfoPackage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestCollectionSubmissionInfoPackage:
        """Test RestCollectionSubmissionInfoPackage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestCollectionSubmissionInfoPackage`
        """
        model = RestCollectionSubmissionInfoPackage()
        if include_optional:
            return RestCollectionSubmissionInfoPackage(
                links = {
                    'key' : dlcm_api_client.models.link.Link(
                        href = '', 
                        hreflang = '', 
                        title = '', 
                        type = '', 
                        deprecation = '', 
                        profile = '', 
                        name = '', 
                        templated = True, )
                    },
                data = [
                    dlcm_api_client.models.submission_info_package.SubmissionInfoPackage(
                        creation = dlcm_api_client.models.change_info.ChangeInfo(
                            full_name = '', 
                            when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            who = '', ), 
                        last_update = dlcm_api_client.models.change_info.ChangeInfo(
                            full_name = '', 
                            when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            who = '', ), 
                        res_id = '', 
                        disposition_approval = True, 
                        retention = 56, 
                        main_storage = 56, 
                        aip_id = '', 
                        deposit_id = '', 
                        info = dlcm_api_client.models.representation_info.RepresentationInfo(
                            access = 'PUBLIC', 
                            data_sensitivity = 'UNDEFINED', 
                            data_use_policy = 'NONE', 
                            compliance_level = 'NOT_ASSESSED', 
                            description = '', 
                            embargo = dlcm_api_client.models.embargo_info.EmbargoInfo(
                                access = 'PUBLIC', 
                                months = 56, 
                                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            license_id = '', 
                            metadata_version = '1.0', 
                            name = '0', 
                            organizational_unit_id = '0', 
                            status = 'CHECK_PENDING', 
                            status_message = '', 
                            contains_updated_metadata = True, 
                            content_structure_public = True, 
                            current_access = 'PUBLIC', 
                            access_currently_public = True, ), 
                        organizational_unit = dlcm_api_client.models.organizational_unit.OrganizationalUnit(
                            res_id = '', 
                            closing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            default_license = dlcm_api_client.models.license.License(
                                res_id = '', 
                                domain_content = True, 
                                domain_data = True, 
                                domain_software = True, 
                                family = '', 
                                is_generic = True, 
                                maintainer = '', 
                                od_conformance = 'approved', 
                                open_license_id = '', 
                                osd_conformance = 'approved', 
                                status = 'active', 
                                title = '', 
                                url = '', 
                                logo = dlcm_api_client.models.license_logo.LicenseLogo(
                                    res_id = '', 
                                    file_name = '', 
                                    file_size = 56, 
                                    mime_type = '', 
                                    _links = {
                                        'key' : dlcm_api_client.models.link.Link(
                                            href = '', 
                                            hreflang = '', 
                                            title = '', 
                                            type = '', 
                                            deprecation = '', 
                                            profile = '', 
                                            name = '', 
                                            templated = True, )
                                        }, ), 
                                description = '', 
                                _links = {
                                    'key' : dlcm_api_client.models.link.Link(
                                        href = '', 
                                        hreflang = '', 
                                        title = '', 
                                        type = '', 
                                        deprecation = '', 
                                        profile = '', 
                                        name = '', 
                                        templated = True, )
                                    }, ), 
                            default_preservation_policy = dlcm_api_client.models.preservation_policy.PreservationPolicy(
                                res_id = '', 
                                disposition_approval = True, 
                                retention = 56, 
                                main_storage = 56, 
                                name = '0', 
                                use_number = 56, 
                                smart_retention = '', ), 
                            default_submission_policy = dlcm_api_client.models.submission_policy.SubmissionPolicy(
                                res_id = '', 
                                name = '0', 
                                submission_approval = True, 
                                time_to_keep = 56, 
                                submission_agreement_type = 'WITHOUT', 
                                submission_agreement = dlcm_api_client.models.submission_agreement.SubmissionAgreement(
                                    res_id = '', 
                                    title = '', 
                                    description = '', 
                                    version = '', 
                                    submission_agreement_file = dlcm_api_client.models.submission_agreement_file.SubmissionAgreementFile(
                                        res_id = '', 
                                        file_name = '', 
                                        file_size = 56, 
                                        mime_type = '', ), ), 
                                use_number = 56, ), 
                            description = '', 
                            institutions = [
                                dlcm_api_client.models.institution.Institution(
                                    res_id = '', 
                                    description = '', 
                                    email_suffixes = [
                                        ''
                                        ], 
                                    name = '0', 
                                    url = '', 
                                    ror_id = '', 
                                    identifiers = {
                                        'key' : ''
                                        }, )
                                ], 
                            is_empty = True, 
                            keywords = [
                                ''
                                ], 
                            name = '0', 
                            opening_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            url = '', 
                            logo = dlcm_api_client.models.organizational_unit_logo.OrganizationalUnitLogo(
                                res_id = '', 
                                file_name = '', 
                                file_size = 56, 
                                mime_type = '', ), 
                            open = True, 
                            _links = , ), 
                        submission_policy = dlcm_api_client.models.submission_policy.SubmissionPolicy(
                            res_id = '', 
                            name = '0', 
                            submission_approval = True, 
                            time_to_keep = 56, 
                            submission_agreement_type = 'WITHOUT', 
                            use_number = 56, ), 
                        submission_policy_id = '', 
                        publication_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        ready = True, 
                        organizational_unit_id = '', 
                        data_file_number = 56, 
                        collection_size = 56, 
                        package_status = 'CHECK_PENDING', 
                        smart_retention = '', 
                        _links = , )
                    ],
                facets = [
                    dlcm_api_client.models.facet_result.FacetResult(
                        name = '', 
                        field = '', 
                        values = [
                            dlcm_api_client.models.facet_result_value.FacetResultValue(
                                value = '', 
                                count = 56, )
                            ], )
                    ],
                page = dlcm_api_client.models.rest_collection_page.RestCollectionPage(
                    current_page = 56, 
                    size_page = 56, 
                    total_items = 56, 
                    total_pages = 56, )
            )
        else:
            return RestCollectionSubmissionInfoPackage(
        )
        """

    def testRestCollectionSubmissionInfoPackage(self):
        """Test RestCollectionSubmissionInfoPackage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
