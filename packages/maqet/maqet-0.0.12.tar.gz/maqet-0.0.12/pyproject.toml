[build-system]
requires = ["setuptools >= 61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "maqet"
version = "0.0.12"
description = "M4x0n's QEMU Tool - A Python-based QEMU automation framework for VM running"
readme = "README.md"
license = "GPL-2.0-only"
authors = [{ name = "Max Rogol" }]
maintainers = [{ name = "Max Rogol" }]
keywords = ["qemu", "virtualization", "vm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">= 3.12"
dependencies = ["python-benedict>=0.33.2", "PyYAML>=6.0.2"]

[project.urls]
Repository = "https://gitlab.com/m4x0n_24/maqet"
Documentation = "https://gitlab.com/m4x0n_24/maqet/blob/main/README.md"
Issues = "https://gitlab.com/m4x0n_24/maqet/issues"

[project.scripts]
maqet = "maqet.__main__:main"

[project.optional-dependencies]
tables = ["tabulate>=0.9.0"]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-testmon",
    "pytest-asyncio>=0.21.0",
    "black",
    "flake8",
    "mypy",
    "isort",
    "pre-commit",
    "tabulate>=0.9.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["maqet*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
maqet = ["*.yaml", "*.yml"]

# Linting and formatting configuration
[tool.black]
line-length = 79
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | qemu
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["qemu/*", "build/*", "dist/*"]

[tool.flake8]
max-line-length = 79
extend-ignore = ["E203", "W503", "E501", "F401", "F841"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "qemu",
    "*.egg-info",
]
per-file-ignores = ["__init__.py:F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = ["qemu/", "build/", "dist/"]

[[tool.mypy.overrides]]
module = ["benedict.*", "yaml.*", "tabulate.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests/unit",
    "tests/integration",
    "tests/e2e",
    "tests/performance",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short", "--strict-markers", "--import-mode=importlib"]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, real components)",
    "e2e: End-to-end tests (slowest, full workflows)",
    "performance: Performance benchmark tests (run separately)",
    "storage: Storage-related tests",
    "qmp: QMP protocol tests",
    "cli: CLI-related tests",
    "snapshot: Snapshot functionality tests",
    "state: State management tests",
    "config: Configuration tests",
    "skip: Skip test unconditionally",
    "asyncio: Async tests using asyncio",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["maqet"]
omit = ["*/tests/*", "*/qemu/*", "*/__pycache__/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2
