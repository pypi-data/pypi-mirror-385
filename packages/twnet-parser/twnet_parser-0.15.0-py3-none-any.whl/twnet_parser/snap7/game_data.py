# generated by scripts/generate_messages.py

from typing import Any, Dict

from twnet_parser.pretty_print import PrettyPrint
from twnet_parser.packer import Unpacker
from twnet_parser.packer import pack_int

class ObjGameData(PrettyPrint):
    def __init__(
            self,
            game_start_tick: int = 0,
            game_state_flags: int = 0,
            game_state_end_tick: int = 0
    ) -> None:
        self.item_name: str = 'obj.game_data'
        self.type_id: int = 6
        self.id: int = 0
        self.size: int = 3

        self.game_start_tick: int = game_start_tick
        self.game_state_flags: int = game_state_flags
        self.game_state_end_tick: int = game_state_end_tick

    def __iter__(self):
        yield 'item_name', self.item_name
        yield 'type_id', self.type_id
        yield 'id', self.id
        yield 'size', self.size

        yield 'game_start_tick', self.game_start_tick
        yield 'game_state_flags', self.game_state_flags
        yield 'game_state_end_tick', self.game_state_end_tick

    def to_dict_payload_only(self) -> Dict[str, Any]:
        return {
            'game_start_tick': self.game_start_tick,
            'game_state_flags': self.game_state_flags,
            'game_state_end_tick': self.game_state_end_tick
        }

    # first byte of data
    # has to be the first byte of the message payload
    # NOT the chunk header and NOT the message id
    def unpack(self, unpacker: Unpacker) -> bool:
        self.game_start_tick = unpacker.get_int()
        self.game_state_flags = unpacker.get_int() # TODO: this is a flag
        self.game_state_end_tick = unpacker.get_int()
        return True

    def pack(self) -> bytes:
        return pack_int(self.game_start_tick) + \
            pack_int(self.game_state_flags) + \
            pack_int(self.game_state_end_tick)