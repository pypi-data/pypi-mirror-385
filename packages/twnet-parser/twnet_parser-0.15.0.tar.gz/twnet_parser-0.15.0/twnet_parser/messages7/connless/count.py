# generated by scripts/generate_messages.py

from twnet_parser.pretty_print import PrettyPrint
from twnet_parser.packer import Unpacker
from twnet_parser.packer import pack_be_uint16
from typing import Literal

class MsgCount(PrettyPrint):
    def __init__(
            self,
            count: int = 0
    ) -> None:
        self.message_type: Literal['connless'] = 'connless'
        self.message_name: str = 'connless.count'
        self.message_id: list[int] = [255, 255, 255, 255, 115, 105, 122, 50]

        self.count: int = count

    def __iter__(self):
        yield 'message_type', self.message_type
        yield 'message_name', self.message_name
        yield 'message_id', self.message_id

        yield 'count', self.count

    # first byte of data
    # has to be the first byte of the message payload
    # NOT the chunk header and NOT the message id
    def unpack(self, data: bytes) -> bool:
        unpacker = Unpacker(data)
        self.count = unpacker.get_be_uint16()
        return True

    def pack(self) -> bytes:
        return pack_be_uint16(self.count)