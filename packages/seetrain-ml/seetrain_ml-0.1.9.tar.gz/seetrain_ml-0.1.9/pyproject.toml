[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "seetrain-ml"
version = "0.1.9"
description = "深度学习实验跟踪工具"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "SeeTrain Team", email = "seetrain@example.com"},
]
maintainers = [
    {name = "SeeTrain Team", email = "seetrain@example.com"},
]
keywords = ["deep learning", "experiment tracking", "pytorch", "tensorflow", "keras", "mlflow", "wandb"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "requests",
    "pydantic",
    "rich",
    "psutil",
    "nvidia-ml-py",
    "pyyaml",
    "opencv-python",
    "numpy",
    "importlib-metadata>=1.0; python_version < '3.8'",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
]

[project.urls]
Homepage = "https://github.com/seetrain/seetrain"
Documentation = "https://seetrain.readthedocs.io/"
Repository = "https://github.com/seetrain/seetrain"
"Bug Tracker" = "https://github.com/seetrain/seetrain/issues"

[project.scripts]
seetrain = "seetrain.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["seetrain*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
seetrain = ["*.yaml", "*.yml", "*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=seetrain",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
