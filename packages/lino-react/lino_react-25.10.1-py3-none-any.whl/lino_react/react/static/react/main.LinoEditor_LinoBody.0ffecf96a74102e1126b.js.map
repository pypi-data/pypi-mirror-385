{"version":3,"file":"main.LinoEditor_LinoBody.0ffecf96a74102e1126b.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/LinoEditor.jsx"],"sourcesContent":["export const name = \"LinoEditor\";\n\nimport React from \"react\";\nimport { RegisterImportPool, Component, URLContextType } from \"./Base\";\nimport { quillToolbar, overrideImageButtonHandler, getQuillModules,\n    invokeRefInsert, quillLoad, QuillNextEditor, changeDelta, refInsert\n} from \"./quillmodules\";\nimport { LeafComponentInput } from \"./LinoComponentUtils\";\nimport * as constants from \"./constants\";\n\nlet ex; const exModulePromises = ex = {\n    AbortController: import(/* webpackChunkName: \"AbortController_LinoEditor\" */\"abort-controller\"),\n    i18n: import(/* webpackChunkName: \"i18n_LinoEditor\" */\"./i18n\"),\n    // prButton: import(/* webpackChunkName: \"prButton_LinoEditor\" */\"primereact/button\"),\n    // prEditor: import(/* webpackChunkName: \"prEditor_LinoEditor\" */\"primereact/editor\"),\n    // prDialog: import(/* webpackChunkName: \"prDialog_LinoEditor\" */\"primereact/dialog\"),\n    prUtils: import(/* webpackChunkName: \"prUtils_LinoEditor\" */\"primereact/utils\"),\n}\nRegisterImportPool(ex);\n\n\nexport class LinoEditor extends LeafComponentInput {\n    static requiredModules = [\"i18n\", \"AbortController\", \"prUtils\"].concat(\n        LeafComponentInput.requiredModules);\n    static iPool = Object.assign(ex, LeafComponentInput.iPool.copy());\n\n    static defaultProps = {\n        ...LeafComponentInput.defaultProps,\n        leafIndex: 0,\n    }\n\n    async prepare() {\n        await super.prepare();\n        this.controller = new this.ex.AbortController.default();\n        this.ex.i18n = this.ex.i18n.default;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {...this.state,\n                      plain: props.elem.field_options.format === \"plain\"}\n\n        this.closeEditor = this.closeEditor.bind(this);\n        this.onGlobalKeyDown = this.onGlobalKeyDown.bind(this);\n    }\n\n    onReady() {\n        window.addEventListener('keydown', this.onGlobalKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.onGlobalKeyDown);\n        this.controller.abort();\n    }\n\n    onGlobalKeyDown(e) {\n        if (e.code == 'Escape') this.closeEditor(e);\n    }\n\n    closeEditor(e) {\n        const { c } = this;\n        const DO = () => {\n            c.history.pushPath({\n                pathname: `/api/${c.value.packId}/${c.value.actorId}/${c.value.pk}`,\n                params: c.actionHandler.defaultStaticParams()\n            })\n        }\n        if (!c.isModified()) {DO()} else\n            c.actionHandler.discardModDConfirm({agree: DO});\n    }\n\n    headerExtend() {\n        return <>\n            {this.state.plain\n                ? refInsert(this)\n                : quillToolbar.commonHeader(this)\n            }\n            <span className=\"ql-formats\">\n                <button type='button'\n                    onClick={e => this.c.actionHandler.submit({})}\n                    aria-label='Submit changes'>\n                    <i className=\"pi pi-save\"></i></button>\n                <button type='button'\n                    onClick={this.closeEditor}\n                    aria-label='Close window'>\n                    <i className=\"pi pi-times\"></i></button>\n            </span>\n        </>\n    }\n\n    render () {\n        if (!this.state.ready) return null;\n        return <URLContextType.Consumer>\n            {value => {\n                const { APP } = value.controller;\n                const { modules, meta } = getQuillModules(\n                    APP,\n                    value.controller.actionHandler.silentFetch,\n                    this.controller.signal,\n                    value.controller.mentionValues,\n                    this.ex.i18n,\n                    this,\n                );\n                return <div className=\"l-editor\"\n                    spellCheck={!APP.state.site_data.disable_spell_check}\n                    onKeyDown={(e) => {\n                        if ((e.ctrlKey || e.metaKey) && e.code === \"KeyS\") {\n                            e.stopPropagation();\n                            e.preventDefault();\n                            this.c.actionHandler.submit({});\n                        } else if (e.ctrlKey && e.shiftKey && e.code == \"KeyL\") {\n                            e.stopPropagation();\n                            e.preventDefault();\n                            invokeRefInsert(this);\n                        } else if (e.code !== 'Escape') e.stopPropagation();\n                    }}>\n                    <div id={meta.toolbarID}>\n                        {this.headerExtend()}\n                    </div>\n                    {\n                    <QuillNextEditor\n                        config={{\n                            modules: modules,\n                            theme: \"snow\",\n                        }}\n                        onTextChange={changeDelta(this)}\n                        onReady={(quill) => {\n                            window.elem = this;\n                            this.quill = quill;\n                            quillLoad(this, quill);\n                            overrideImageButtonHandler(quill);\n                            quill.focus();\n                        }}/>\n                    }\n                    {\n                    // <this.ex.prEditor.Editor\n                    //     headerTemplate={this.headerExtend()}\n                    //     modules={modules}\n                    //     onLoad={e => {\n                    //         this.quill = this.inputEl.getQuill();\n                    //         quillLoad(this, this.quill);\n                    //         overrideImageButtonHandler(this.quill);\n                    //     }}\n                    //     onTextChange={(e) => onTextChange(this, e)}\n                    //     ref={ref => this.inputEl = ref}\n                    //     style={{background: \"#ffffff\"}}\n                    //     value={this.context.data[value.fieldName]}/>\n                    }\n                    <div id=\"raw-editor-container\"\n                        onKeyDown={e => e.stopPropagation()}></div>\n                </div>\n            }}\n        </URLContextType.Consumer>\n    }\n}\n"],"names":["ex","name","AbortController","i18n","prUtils","RegisterImportPool","LinoEditor","_LeafComponentInput","props","_this","_classCallCheck","state","_objectSpread","plain","elem","field_options","format","closeEditor","bind","onGlobalKeyDown","_inherits","_createClass","key","value","_prepare","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","_superPropGet","this","controller","stop","apply","arguments","window","addEventListener","removeEventListener","abort","e","code","c","DO","history","pushPath","pathname","concat","packId","actorId","pk","params","actionHandler","defaultStaticParams","isModified","discardModDConfirm","agree","_this2","React","refInsert","quillToolbar","commonHeader","className","type","onClick","submit","_this3","ready","URLContextType","Consumer","APP","_getQuillModules","getQuillModules","silentFetch","signal","mentionValues","modules","meta","spellCheck","site_data","disable_spell_check","onKeyDown","ctrlKey","metaKey","stopPropagation","preventDefault","shiftKey","invokeRefInsert","id","toolbarID","headerExtend","QuillNextEditor","config","theme","onTextChange","changeDelta","onReady","quill","quillLoad","overrideImageButtonHandler","focus","LeafComponentInput","requiredModules","iPool","Object","assign","copy","defaultProps","leafIndex"],"sourceRoot":""}