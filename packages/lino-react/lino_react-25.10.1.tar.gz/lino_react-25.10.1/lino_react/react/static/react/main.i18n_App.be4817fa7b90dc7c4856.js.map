{"version":3,"file":"main.i18n_App.be4817fa7b90dc7c4856.js","mappings":"sNAOaA,EAAY,SAACC,EAASC,GAC/B,IAAMC,EAAW,IAAIC,EAAAA,EACrBD,EAASE,YAAY,CACjBC,KAAM,uBACNC,OAAQ,SAACC,GACL,OAAOP,EAAQQ,MAAMC,EAAAA,wBACzB,EACAC,kBAAiB,SAACC,EAAKJ,GACnBP,EAAQY,gBAAgBC,EAAAA,kBAAmBJ,EAAAA,wBAAyBE,GACpEX,EAAQc,QAAQC,eAAaC,EAAAA,EAAAA,GAAC,CAAC,EAACP,EAAAA,wBAA0BE,GACtDE,EAAAA,mBAAmB,GAAO,EAClC,IAGJI,EAAAA,GAAAA,IACKC,EAAAA,GACJC,IAAIjB,GACJiB,IAAIC,EAAAA,kBACJC,KAAK,CACFC,OAAO,EACPC,KAAM,eACNC,YAAaC,OAAOC,KAAKC,gBACzBC,cAAc,EACdC,cAAe,CACbC,aAAa,GAEfC,MAAO,CACHC,aAAa,GAEjBC,QAAS,CACLC,SAAU,6CAGdC,UAAW,CACPC,MAAO,CAAC,cAAe,SAAU,uBAAwB,gBACzDC,kBAAmB5B,EAAAA,wBACnB6B,aAAc7B,EAAAA,wBACd8B,mBAAoB9B,EAAAA,wBAEpB+B,OAAQ,CAAC,uBAAwB,eAAgB,aAIzDvC,EAAKgB,EAAAA,GACT,EAGA,QAAeA,EAAI,E","sources":["webpack://lino_react/./lino_react/react/components/i18n.js"],"sourcesContent":["import { URL_PARAM_USER_LANGUAGE, PARAM_TYPE_WINDOW } from './constants';\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport { initReactI18next } from \"react-i18next\";\n\n\nexport const TransInit = (context, next) => {\n    const detector = new LanguageDetector();\n    detector.addDetector({\n        name: \"LinoLanguageDetector\",\n        lookup: (options) => {\n            return context.value[URL_PARAM_USER_LANGUAGE];\n        },\n        cacheUserLanguage(lng, options) {\n            context.fillPlaceHolder(PARAM_TYPE_WINDOW, URL_PARAM_USER_LANGUAGE, lng);\n            context.history.replaceByType({[URL_PARAM_USER_LANGUAGE]: lng},\n                PARAM_TYPE_WINDOW, false, true);\n        }\n    });\n\n    i18n\n    .use(HttpApi)\n    .use(detector)\n    .use(initReactI18next)\n    .init({\n        debug: false,\n        load: \"languageOnly\",\n        fallbackLng: window.Lino.i18nFallbackLng,\n        keySeparator: false,\n        interpolation: {\n          escapeValue: false // react already safes from xss\n        },\n        react: {\n            useSuspense: true\n        },\n        backend: {\n            loadPath: \"/static/react/locales/{{lng}}/{{ns}}.json\",\n            // addPath: \"/static/react/locales/{{lng}}/{{ns}}.json\"\n        },\n        detection: {\n            order: [\"queryString\", \"cookie\", \"LinoLanguageDetector\", \"localStorage\"],\n            lookupQuerystring: URL_PARAM_USER_LANGUAGE,\n            lookupCookie: URL_PARAM_USER_LANGUAGE,\n            lookupLocalStorage: URL_PARAM_USER_LANGUAGE,\n            // lookupSessionStorage: URL_PARAM_USER_LANGUAGE\n            caches: [\"LinoLanguageDetector\", \"localStorage\", \"cookie\"],\n        }\n    });\n\n    next(i18n);\n}\n\n\nexport default i18n;\n"],"names":["TransInit","context","next","detector","LanguageDetector","addDetector","name","lookup","options","value","URL_PARAM_USER_LANGUAGE","cacheUserLanguage","lng","fillPlaceHolder","PARAM_TYPE_WINDOW","history","replaceByType","_defineProperty","i18n","HttpApi","use","initReactI18next","init","debug","load","fallbackLng","window","Lino","i18nFallbackLng","keySeparator","interpolation","escapeValue","react","useSuspense","backend","loadPath","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","caches"],"sourceRoot":""}