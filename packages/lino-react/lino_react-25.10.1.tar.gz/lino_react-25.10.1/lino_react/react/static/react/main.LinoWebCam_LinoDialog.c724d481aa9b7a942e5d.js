"use strict";(self.webpackChunklino_react=self.webpackChunklino_react||[]).push([[3211,7211],{2292:(e,t,n)=>{n.r(t),n.d(t,{TransInit:()=>c,default:()=>u});var i=n(4467),r=n(1151),a=n(2635),o=n(4997),s=n(1347),l=n(2389),c=function(e,t){var n=new o.A;n.addDetector({name:"LinoLanguageDetector",lookup:function(t){return e.value[r.URL_PARAM_USER_LANGUAGE]},cacheUserLanguage:function(t,n){e.fillPlaceHolder(r.PARAM_TYPE_WINDOW,r.URL_PARAM_USER_LANGUAGE,t),e.history.replaceByType((0,i.A)({},r.URL_PARAM_USER_LANGUAGE,t),r.PARAM_TYPE_WINDOW,!1,!0)}}),a.Ay.use(s.A).use(n).use(l.initReactI18next).init({debug:!1,load:"languageOnly",fallbackLng:window.Lino.i18nFallbackLng,keySeparator:!1,interpolation:{escapeValue:!1},react:{useSuspense:!0},backend:{loadPath:"/static/react/locales/{{lng}}/{{ns}}.json"},detection:{order:["queryString","cookie","LinoLanguageDetector","localStorage"],lookupQuerystring:r.URL_PARAM_USER_LANGUAGE,lookupCookie:r.URL_PARAM_USER_LANGUAGE,lookupLocalStorage:r.URL_PARAM_USER_LANGUAGE,caches:["LinoLanguageDetector","localStorage","cookie"]}}),t(a.Ay)};const u=a.Ay},9850:function(e,t,n){var i,r=this&&this.__createBinding||(Object.create?function(e,t,n,i){void 0===i&&(i=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,i,r)}:function(e,t,n,i){void 0===i&&(i=n),e[i]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},i(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=i(e),o=0;o<n.length;o++)"default"!==n[o]&&r(t,e,n[o]);return a(t,e),t}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LinoWebCam=t.name=void 0,t.name="LinoWebCam";const l=o(n(6540)),c=s(n(5556)),u=n(6606),d=s(n(60));let h;h={prButton:Promise.resolve().then(()=>o(n(9119))),prOverlayPanel:Promise.resolve().then(()=>o(n(619))),prInputNumber:Promise.resolve().then(()=>o(n(2925))),prInputSwitch:Promise.resolve().then(()=>o(n(4433))),lcu:Promise.resolve().then(()=>o(n(2756))),i18n:Promise.resolve().then(()=>o(n(2292)))};(0,u.RegisterImportPool)(h);class p{constructor(e){this.store=e,this.buildMediaConstraints()}buildMediaConstraints(){const e={};return this.settings=window.App.getSettings().webcam,void 0!==this.settings?(e.height=this.settings.height,e.width=this.settings.width):(e.height=this.store.props.height*devicePixelRatio,e.width=this.store.props.width*devicePixelRatio,this.settings=Object.assign({},e,{pixelRatio:devicePixelRatio,mirrored:!0}),window.App.setSettings({webcam:this.settings})),this.settingsMod={...this.settings},this.store.state.deviceId?e.deviceId=this.store.state.deviceId:e.facingMode="environment",this.mediaTrackConstraints=e,e}}p.buildReferences=e=>{e.webcamRef=l.useRef(null),e.capture=l.useCallback(t=>{e.props.captureDone(e.webcamRef.current.getScreenshot())},[e.webcamRef]);const[t,n]=l.useState({err_msg:null,deviceId:null,devices:[]});return e.state=t,e.setState=l.useCallback(e=>n(t=>Object.assign({},t,e)),[]),e.switchCamera=l.useCallback(n=>{let i=(t.devices.indexOf(t.deviceId)+1)%t.devices.length;e.setState({deviceId:t.devices[i]})},[]),e};const g=e=>{const{settings:t,settingsMod:n}=e.CC,[i,r]=l.useState(t.mirrored),a=(0,u.getExReady)(h,["prInputNumber","prInputSwitch","lcu","i18n"]),o=l.useCallback(({label:e,max:t=null,min:n,onValueChange:i,suffix:r,value:o})=>l.createElement("div",null,l.createElement(a.lcu.Labeled,{elem:{label:e}},l.createElement(a.prInputNumber.InputNumber,{buttonLayout:"horizontal",max:t,min:n,onValueChange:i,showButtons:!0,suffix:r,value:o}))),[a]);return a.ready?l.createElement(l.Fragment,null,o({label:"Height (# > 512)",max:e.CC.store.props.height,min:512,onValueChange:e=>Object.assign(n,{height:e.value*n.pixelRatio}),suffix:"px",value:t.height/t.pixelRatio}),l.createElement("br",null),o({label:"Width (# > 512)",max:e.CC.store.props.width,min:512,onValueChange:e=>Object.assign(n,{width:e.value*n.pixelRatio}),suffix:"px",value:t.width/t.pixelRatio}),l.createElement("br",null),o({label:"Pixel ratio (# > 1)",min:1,onValueChange:e=>{Object.assign(n,{height:n.height/n.pixelRatio*e.value,width:n.width/n.pixelRatio*e.value,pixelRatio:e.value})},suffix:"dpr",value:t.pixelRatio}),l.createElement("br",null),l.createElement("div",null,l.createElement(a.lcu.Labeled,{elem:{label:a.i18n.t("Mirrored")}},l.createElement(a.prInputSwitch.InputSwitch,{checked:i,onChange:e=>{r(e.value),Object.assign(n,{mirrored:e.value})}})))):null};g.propTypes={CC:c.default.instanceOf(p).isRequired};const m=e=>{const t=l.useRef(null),n={background:"white",color:"black",borderRadius:"50%",width:"5ch",height:"5ch",margin:"5px"},i=(0,u.getExReady)(h,["prButton","prOverlayPanel"]);return i.ready?l.createElement(l.Fragment,null,l.createElement(i.prButton.Button,{icon:"pi pi-camera",onClick:e.CC.store.capture,style:n}),e.CC.store.state.devices.length>1&&l.createElement(i.prButton.Button,{icon:"pi pi-undo",onClick:e.CC.store.switchCamera,style:n}),l.createElement(i.prButton.Button,{icon:"pi pi-cog",onClick:e=>t.current.toggle(e),style:n}),l.createElement("div",{onKeyDown:e=>e.stopPropagation()},l.createElement(i.prOverlayPanel.OverlayPanel,{onHide:t=>{document.activeElement.blur(),window.App.setSettings({webcam:e.CC.settingsMod}),e.CC.buildMediaConstraints(),e.CC.store.setState({})},onShow:e=>t.current.align(),ref:t,showCloseIcon:!0},l.createElement(g,{CC:e.CC})))):null};m.propTypes={CC:c.default.instanceOf(p).isRequired};t.LinoWebCam=e=>{const t=l.useRef({props:e});p.buildReferences(t.current);const{state:n,setState:i}=t.current;l.useEffect(()=>{document.activeElement.blur(),t.current.self=new p(t.current),navigator.mediaDevices.enumerateDevices().then(e=>i({devices:e.filter(({kind:e})=>"videoinput"===e).map(e=>e.deviceId)}))},[]);const{self:r}=t.current;return n.devices.length?l.createElement(l.Fragment,null,l.createElement("div",{style:{position:"absolute"}},n.err_msg),l.createElement(d.default,{audio:!1,forceScreenshotSourceSize:!0,height:r.settings.height/r.settings.pixelRatio,mirrored:r.settings.mirrored,onUserMedia:e=>{null===n.deviceId&&i({deviceId:e.getVideoTracks()[0].getSettings().deviceId})},onUserMediaError:e=>{null===n.err_msg&&i({err_msg:"Please allow camera access to take a photo."})},ref:t.current.webcamRef,screenshotFormat:"image/jpeg",videoConstraints:r.mediaTrackConstraints,width:r.settings.width/r.settings.pixelRatio}),l.createElement("div",{style:{position:"absolute",bottom:"40px",left:"50%",transform:"translate(-50%, 0)"}},l.createElement(m,{CC:r}))):null},t.LinoWebCam.propTypes={height:c.default.number.isRequired,width:c.default.number.isRequired,captureDone:c.default.func.isRequired}}}]);
//# sourceMappingURL=main.LinoWebCam_LinoDialog.c724d481aa9b7a942e5d.js.map