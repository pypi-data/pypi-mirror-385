{"version":3,"file":"main.datetime_GridElement.72e271963aeab99df8da.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/datetime.jsx"],"sourcesContent":["export const name = \"datetime\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as constants from './constants';\nimport { LeafComponentInput } from \"./LinoComponentUtils\";\nimport { RegisterImportPool } from \"./Base\";\n\nlet ex; const exModulePromises = ex = {\n    prCalendar: import(/* webpackChunkName: \"prCalendar_datetime\" */\"primereact/calendar\"),\n};RegisterImportPool(ex);\n\n\nclass DTFieldElement extends LeafComponentInput {\n    static requiredModules = [\"prCalendar\"].concat(LeafComponentInput.requiredModules);\n    static iPool = Object.assign(ex, LeafComponentInput.iPool.copy());\n    constructor(props) {\n        super(props);\n\n        this.getLinoInput = this.getLinoInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n        this.isValid = this.isValid.bind(this);\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    getLinoInput(fieldProps={}) {\n        return <this.ex.prCalendar.Calendar\n            {...fieldProps}\n            className={\"l-DateFieldElement\"}\n            inputMode={this.props.urlParams.controller.globals.isMobile ? 'numeric' : 'none'}\n            inputStyle={{width: \"100%\"}}\n            keepInvalid={true}\n            onChange={(e) => this.updateValue(e)}\n            onClearButtonClick={(e) => {e.value = null; this.updateValue(e)}}\n            // TODO: check if https://github.com/primefaces/primereact/commit/16eafe5a171154da63bbfa9d83f84827e9d8363f#\n            // is available on a packaged version\n            // onSelect={(e) => this.updateValue(e)}\n            ref={this.onInputRef}\n            showButtonBar={true}\n            showIcon={this.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_TABLE}\n            showOnFocus={false}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue()}/>\n    }\n\n    getValue() {\n        let v = super.getValue();\n        if (!this.props.urlParams.controller.filled(v)) return null;\n        return this.str2date(v);\n    }\n\n    innerHTML = () => (<div>{super.getValue() || \"\\u00a0\"}</div>);\n\n    isValid = (v) => (\n        v === null || v instanceof Date || this.str2date(v) instanceof Date);\n\n    updateValue(e) {\n        let value = e.value;\n        if (!this.props.urlParams.controller.filled(value)) value = null\n        else if (value instanceof Date) value = this.date2str(value);\n\n        this.container.classList.remove('dangling-modification');\n        this.container.classList.remove('unsaved-modification');\n\n        if (this.isValid(value)) {\n            this.update({[this.dataKey]: value});\n            this.setCellStyle(this.container, false);\n        } else this.container.classList.add('dangling-modification');\n    }\n}\n\n\nexport class DateFieldElement extends DTFieldElement {\n    constructor(props) {\n        super(props);\n        this.date2str = this.date2str.bind(this);\n        this.getLinoInput = this.getLinoInput.bind(this);\n        this.str2date = this.str2date.bind(this);\n    }\n\n    date2str(date) {\n        return (\"0\" + date.getDate()).slice(-2) + \".\" +\n            (\"0\" + (date.getMonth() + 1)).slice(-2) + \".\" +\n            date.getFullYear();\n    }\n\n    getLinoInput = () => super.getLinoInput({\n        dateFormat: \"dd.mm.yy\", yearNavigator: true, yearRange: \"1900:2900\"});\n\n    str2date(value) {\n        let parts = value.split(\".\");\n        if (parts.length === 3 && !parts.includes(\"\") && parts[2].length === 4)\n            return new Date(parts[2], parts[1] - 1, parts[0]);\n        return false;\n    }\n}\n\n\nexport class TimeFieldElement extends DTFieldElement {\n    constructor(props) {\n        super(props);\n        this.date2str = this.date2str.bind(this);\n        this.getLinoInput = this.getLinoInput.bind(this);\n        this.str2date = this.str2date.bind(this);\n    }\n\n    date2str(date) {\n        return (\"0\" + date.getHours()).slice(-2) + \":\" +\n            (\"0\" + date.getMinutes()).slice(-2);\n    }\n\n    getLinoInput = () => super.getLinoInput(\n        {hourFormat: '24', showTime: true, timeOnly: true});\n\n    str2date(timeStr) {\n        let regex = /^(\\d(?:\\d(?=[.,:; ]?\\d\\d|[.,:; ]\\d|$))?)?[.,:; ]?(\\d{0,2})$/g;\n        if (timeStr.match(regex)) {\n            let m = regex.exec(timeStr),\n                viewDate = new Date(),\n                hours = m[1],\n                min = m[2];\n            viewDate.setHours(hours || 0);\n            viewDate.setMinutes(min || 0);\n            return viewDate;\n        }\n        return false;\n    }\n}\n\n\nexport class DateFilter extends DateFieldElement {\n    static propTypes = {\n        parent: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        editing_mode: true,\n        hide_label: true,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.disabled = this.disabled.bind(this);\n        this.filled = this.filled.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    filled = () => this.props.parent.context.controller.filled(this.props.value);\n    disabled = () => false;\n    getValue() {\n        if (!this.filled()) return null;\n        return this.str2date(this.props.parent.state.value);\n    }\n    update = (values) => this.props.parent.pushFilter({value: values[this.dataKey]});\n}\n"],"names":["ex","name","prCalendar","RegisterImportPool","DTFieldElement","_LeafComponentInput","props","_this","_classCallCheck","_callSuper","innerHTML","React","_superPropGet","isValid","v","Date","str2date","getLinoInput","bind","getValue","updateValue","_inherits","_createClass","key","value","_this2","fieldProps","arguments","length","undefined","Calendar","_extends","className","inputMode","this","urlParams","controller","globals","isMobile","inputStyle","width","keepInvalid","onChange","e","onClearButtonClick","ref","onInputRef","showButtonBar","showIcon","constants","showOnFocus","style","tabIndex","filled","date2str","container","classList","remove","update","_defineProperty","dataKey","setCellStyle","add","LeafComponentInput","requiredModules","concat","iPool","Object","assign","copy","DateFieldElement","_DTFieldElement","_this3","dateFormat","yearNavigator","yearRange","date","getDate","slice","getMonth","getFullYear","parts","split","includes","TimeFieldElement","_DTFieldElement2","_this4","hourFormat","showTime","timeOnly","getHours","getMinutes","timeStr","regex","match","m","exec","viewDate","hours","min","setHours","setMinutes","DateFilter","_DateFieldElement","_this5","parent","context","disabled","values","pushFilter","state","propTypes","PropTypes","isRequired","defaultProps","editing_mode","hide_label"],"sourceRoot":""}