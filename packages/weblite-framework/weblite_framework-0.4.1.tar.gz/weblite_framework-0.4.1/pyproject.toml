[tool.poetry]
name = "weblite_framework"
version = "0.4.1"
description = ""
authors = ["Чернов Михаил <mihail.tchernov@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.6"
pydantic = { version = "2.11.7", extras = ["email"] }
pydantic-settings = "2.10.1"
aioboto3 = "15.1.0"
sqlalchemy = {extras = ["asyncio"], version = "2.0.36"}

[tool.poetry.group.test.dependencies]
pytest = "8.4.1"
pytest-asyncio = "1.1.0"
pyhamcrest = "2.1.0"
freezegun = "1.5.5"

[tool.poetry.group.lint.dependencies]
isort = "6.0.1"
flake8 = "7.3.0"
flake8-quotes = "3.4.0"
flake8-annotations = "3.1.1"
flake8-docstrings = "1.7.0"
flake8-dunder-all = "0.5.0"
flake8-pyproject = "1.2.3"
black = "25.1.0"
mypy = "1.17.1"


[tool.poetry.group.dev.dependencies]
pre-commit = "4.3.0"
twine = "6.2.0"

[tool.pytest.ini_options]
addopts = "-ra -q"
pythonpath = "."
testpaths = "tests"
asyncio_mode = "auto"

[tool.flake8]
exclude = ["__pycache__", "venv"]
max-line-length = 79
max-doc-length = 79
docstring-convention = "google"
require-annotations = 1
ignore = ["ANN002", "ANN003","ANN101", "ANN102"]
per-file-ignores = [
    "__init__.py:D104",
    "tests/*:DALL000,D104,D100,FKA100"
]
max-complexity = 5

[tool.black]
exclude = '''
/(
    \.git
  | __pycache__
  | \.pytest_cache
  | venv
)
'''
line-length = 79
skip-string-normalization = true

[tool.isort]
extend_skip = [".git", "__pycache__", "venv"]
include_trailing_comma = true
multi_line_output = 3
line_length = 79

[tool.mypy]
exclude = ["__pycache__", "venv"]
strict = true
plugins = "pydantic.mypy"
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true

disable_error_code = [
    "import-untyped",
    "no-untyped-call"
]

[build-system]
requires = ["poetry-core==2.0.1"]
build-backend = "poetry.core.masonry.api"
