import amsdal_glue as glue
from amsdal_models.classes.relationships.constants import FOREIGN_KEYS as FOREIGN_KEYS, PRIMARY_KEY_FIELDS as PRIMARY_KEY_FIELDS
from amsdal_models.classes.relationships.meta.references import build_fk_db_fields as build_fk_db_fields
from amsdal_models.querysets.query_builders.common import ModelType as ModelType
from typing import Any

def _field_shortcut(field_name: str) -> glue.Field: ...

class BaseHistoricalQueryBuilder:
    @staticmethod
    def _fk_to_db_fields_for(model: type['ModelType']) -> dict[str, str]: ...
    def _build_field_reference(self, prop_name: str, model: type['ModelType'], table_name: str | None = None) -> list[glue.FieldReference]: ...
    def build_field_references_from_pks(self, model: type['ModelType']) -> list[glue.FieldReference]: ...
    def build_group_by(self, model: type['ModelType'], only: list[str] | None = None, select_related: dict[tuple[str, type['ModelType'], str], Any] | None = None, order_by: list[glue.OrderByQuery] | None = None) -> list[glue.GroupByQuery]: ...
    def build_order_by(self) -> list[glue.OrderByQuery] | None: ...
