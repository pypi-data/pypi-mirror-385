from _typeshed import Incomplete
from amsdal_models.classes.model import Model as Model
from amsdal_models.classes.relationships.constants import DEFERRED_M2M_FIELDS as DEFERRED_M2M_FIELDS, MANY_TO_MANY_FIELDS as MANY_TO_MANY_FIELDS
from amsdal_models.classes.relationships.helpers.deferred_many_to_many import complete_deferred_many_to_many as complete_deferred_many_to_many
from amsdal_models.classes.relationships.meta.many_to_many import DeferredModel as DeferredModel

class ModelClassLoader:
    _module_path: Incomplete
    def __init__(self, module_path: str) -> None: ...
    def load(self, *, unload_module: bool = False) -> set[type['Model']]: ...
    def _load_module_classes(self, module_name: str) -> set[type['Model']]: ...
    def _load_package_classes(self, package_name: str) -> set[type['Model']]: ...
