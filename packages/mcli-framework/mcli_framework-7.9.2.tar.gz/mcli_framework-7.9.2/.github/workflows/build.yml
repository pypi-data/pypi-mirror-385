name: Build and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.11'
  UV_VERSION: 'latest'

jobs:
  build:
    name: Build Package
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install UV
      run: |
        if [[ "${{ matrix.platform }}" == "ubuntu-latest" ]]; then
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        elif [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        fi
        
    - name: Set up environment
      run: |
        if command -v uv >/dev/null 2>&1; then
          make setup
        else
          python -m pip install --upgrade pip build
          pip install -e .
        fi
      
    - name: Build wheel
      run: |
        if command -v uv >/dev/null 2>&1; then
          make wheel
        else
          python -m build --wheel
        fi
      
    - name: Test basic functionality
      run: |
        if command -v uv >/dev/null 2>&1; then
          make test
        else
          python -c "import mcli; print('✅ Package imports successfully')"
          python -m mcli --help
        fi
      
    - name: Upload wheel artifact
      uses: actions/upload-artifact@v4
      with:
        name: mcli-wheel-${{ matrix.platform }}
        path: dist/*.whl
        retention-days: 30
        
      
  build-summary:
    name: Build Summary
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Build Status Summary
      run: |
        echo "## Build Results" >> $GITHUB_STEP_SUMMARY
        echo "| Platform | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Ubuntu | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| macOS | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Windows | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.build.result }}" = "success" ]; then
          echo "✅ All builds completed successfully!" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some builds failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
        fi