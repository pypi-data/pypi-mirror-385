[project]
name = "imaging-starter"
version = "0.1.0"
description = "Vigil imaging starter - reproducible microscopy analysis pipeline"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "Apache-2.0"}
keywords = ["science", "reproducible", "pipeline", "imaging", "microscopy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
  "numpy>=1.26.0",
  "pandas>=2.2.0",
  "pyarrow>=15.0.0",
  "duckdb>=0.10.0",
  "polars>=0.20.0",
  "snakemake>=7.32.0",
  "pyyaml>=6.0.0",
  "mcp>=1.18.0",
  # Note: Install vigil CLI globally: uv tool install vigil
]

[project.optional-dependencies]
dev = [
  "ruff>=0.1.0",
  "mypy>=1.8.0",
  "pytest>=8.3.0",
  "pytest-cov>=4.1.0",
  "pre-commit>=3.6.0",
  "repomix>=0.3.0",
  "jupyter>=1.0.0",
  "ipykernel>=6.29.0",
  "matplotlib>=3.8.0",
  "jupytext>=1.16.0",
  "types-PyYAML>=6.0.12.20240808",
  "pandas-stubs>=2.2.2.240909"
]

[project.scripts]
# Development scripts - use 'vigil' CLI for core commands (dev, run, promote, doctor, etc.)
lint = "ruff check ."
format = "ruff format ."
check = "ruff check . --fix"
test = "pytest app/code/tests"
conformance = "python app/code/tools/conformance.py"
repomix = "repomix"
mcp-server = "app.code.ai.mcp.__main__:run"

[tool.uv]
preview = true

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
  "ARG", # flake8-unused-arguments
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
]
ignore = [
  "E501",  # line too long (handled by formatter)
  "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"app/notes/notebooks/*.ipynb" = ["E402", "F401"]  # notebook-specific

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.pytest.ini_options]
testpaths = ["app/code/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short", "--cov=app/code", "--cov-report=term-missing"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "snakemake.*",
    "pyarrow.*",
    "duckdb.*",
    "mcp.*",
]
ignore_missing_imports = true
