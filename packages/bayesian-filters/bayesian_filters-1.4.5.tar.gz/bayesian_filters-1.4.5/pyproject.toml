[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bayesian-filters"
dynamic = ["version"]
description = "Kalman filtering and optimal estimation library"
readme = "README.md"
authors = [
    { name = "Roger Labbe", email = "rlabbejr@gmail.com" }
]
requires-python = ">=3.9"
dependencies = [
    "numpy",
    "scipy",
    "matplotlib",
]
keywords = ["Kalman", "filters", "filtering", "optimal", "estimation", "tracking", "Bayesian"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]

[project.urls]
Homepage = "https://github.com/GeorgePearse/bayesian_filters"
Repository = "https://github.com/GeorgePearse/bayesian_filters"
Documentation = "https://georgepearse.github.io/bayesian_filters"
"Original Project" = "https://github.com/rlabbe/filterpy"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]

[tool.hatch.version]
path = "bayesian_filters/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["bayesian_filters"]

[tool.pytest.ini_options]
testpaths = ["bayesian_filters"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"

[tool.ruff]
# Exclude test files and examples from most checks
extend-exclude = ["bayesian_filters/kalman/tests/ukf2.py"]
line-length = 120

[tool.ruff.lint]
# Ignore star import warnings (F403, F405) as they're part of the library's API design
# Ignore E402 (module level import not at top) for examples
# Ignore E741 (ambiguous variable names) for mathematical code using I for identity matrix
# Ignore E501 (line too long) as this is legacy code
# Ignore E722 (bare except) as this is legacy error handling code that would need major refactoring
# Ignore F401 (unused imports) for re-exports in __init__ files
ignore = ["F403", "F405", "E402", "E741", "E501", "E722", "F401"]

# Still check for:
# - F821: undefined names (actual bugs)
# - F841: unused variables
select = ["E", "F", "W"]

[tool.ruff.lint.per-file-ignores]
# Allow undefined names in examples (they may be defined elsewhere)
"**/examples/**" = ["F821"]
