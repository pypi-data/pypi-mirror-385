[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plantismash"
dynamic = ["version"]
description = "Detection of plant specialized metabolism gene clusters in plants"
readme = "README.md"
requires-python = ">=3.8,<3.9"
license = { file = "LICENSE.txt" }
authors = [{ name = "plantiSMASH authors" }]
keywords = ["bioinformatics", "genomics", "secondary metabolism"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]

# Pure-Python deps only. Native/CLI tools (hmmer, blast, diamond, etc.) are NOT here—
# they’re expected to be installed (e.g. via Conda) and found on PATH at runtime.
dependencies = [
  "biopython==1.76",
  "numpy==1.24.4",
  "cssselect==1.2.0",
  "pyquery==1.2.9",
  "helperlibs==0.2.2",
  "svgwrite==1.4.3",
  "openpyxl==3.1.5",
  "networkx==3.1",
  "python-louvain==0.16",
  "bcbio-gff==0.6.7",
  "ete3==3.1.3",
  "tqdm==4.67.1",
  "logomaker",
  "MOODS-python==1.9.4.1",
  "straight.plugin==1.4.0.post-1",
  "appdirs"  # for locating a default data dir in download_databases
]

[project.optional-dependencies]
dev = ["pytest"]
# If you have a public repo for graphlan, you can expose it as an extra:
# graphlan = ["graphlan @ git+https://github.com/biobakery/graphlan.git"]

[project.scripts]
plantismash = "run_antismash:main"
plantismash_download_databases = "download_databases:main"

[project.urls]
Homepage = "https://plantismash.bioinformatics.nl/"
Source = "https://github.com/plantismash/plantismash"
Issues = "https://github.com/plantismash/plantismash/issues"

[tool.setuptools]
# Your two single-file entry point modules live at repo root:
py-modules = ["run_antismash", "download_databases"]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["antismash*"]

[tool.setuptools.package-data]
# Ship all the assets plantiSMASH needs at runtime.
antismash = [
  "**/*.html", "**/*.tpl", "**/*.css", "**/*.js", "**/*.json",
  "**/*.txt",  "**/*.hmm", "**/*.pfam", "**/*.png", "**/*.svg",
  "**/*.cfg"
]

[tool.setuptools.dynamic]
version = { attr = "antismash.__version__" }