# build backand and build dependencies
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# metadata and dependencies
[project]
name = "dify-api-client"
dynamic = ["version"]
requires-python = ">= 3.10"
description = "dify-api-client - A package for interacting with the Dify Service-API"
dependencies = [
    "dotenv>=0.9.9",
    "httpx>=0.28.1",
    "httpx-sse>=0.4.0",
    "pydantic>=2.10.4"
]
readme = "README.md"
license = {file = "LICENSE.md"}
authors = [
    { name = "lucas", email = "lucas@castalk.com" },
]
keywords = ['dify-client', 'dify-api']
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/lucas-castalk/dify-api-client"
Source = "https://github.com/lucas-castalk/dify-api-client"

[tool.hatch.version]
path = "dify_client/__init__.py"

[project.optional-dependencies]
dev = [
    "ruff>=0.11.13",
    "pre-commit",
    "pytest",
    "pylint",
    "hatch>=1.14.1",
    "twine>=6.1.0"
]

[project.scripts]
dify-api-client = "dify_client.cli:main"

[tool.ruff]
line-length = 79
exclude  = ["externals"]

[tool.ruff.lint]
# Never enforce `E501` (line length violations).
ignore = ["C901", "E501", "E741", "F402", "F823" ]
select = ["C", "E", "F", "I", "W"]

# # Ignore import violations in all `__init__.py` files.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]
"*.ipynb" = ["T201", "T203"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
lines-after-imports = 2

# Explicitly define certain modules as "first-party"
known-first-party = []

# Pytest configuration
[tool.pytest.ini_options]
log_cli = 1
log_cli_level = "WARNING"
#testpaths = ["tests"]
#python_files = ["test_*.py", "*_test.py"]
#python_classes = ["Test*"]
#python_functions = ["test_*"]


[tool.coverage.run]
source = []
omit = [
    "*/__main__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise",
    "except",
    "register_parameter"
]

[tool.hatch.build.targets.wheel]
packages = ["dify_client"]

