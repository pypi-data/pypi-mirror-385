[tox]
# Minimum tox version supporting these features (you can adjust if needed)
minversion = 4.0

# run in paralell


# Define an environment list:
#   - "py" tests the base installation (no extras)
#   - "py-all" tests the meta-extra 'all'
#   - The rest test all permutations of the three optional extras.
envlist = 
    py-{subprocess-monitor,_}-{http,_}-{venv,_}
    py-all

[testenv]

#The first line tells tox to build and install wheels instead of source distributions, 
# and the second line tells it to share the same build environment – and thus wheel – 
# across all tox environments.
package = wheel
wheel_build_env = .pkg


# Factor-dependent extras:
# If the environment name includes the factor "all", install the "all" extra.
# Otherwise, if the environment name includes one of the others, install it.
extras =
    all: all
    subprocess-monitor: subprocess-monitor
    http: http
    venv: venv

deps =
    coverage
    pytest
    pytest-xdist[psutil]
    pytest-cov
    pytest-timeout 

setenv =
    COVERFILE = {toxworkdir}{/}.coverage.{envname}_
    PACKAGENAME = funcnodes_worker

# Command to run your tests (assumes you use pytest)
commands =
    pytest \
      --cov "{envsitepackagesdir}{/}funcnodes_worker" \
      --cov-config "{toxinidir}{/}tox.ini" \
      --junitxml {toxworkdir}{/}junit.{envname}.xml \
       --timeout=30 \
       -n auto
    ;   {posargs:.}




[coverage:run]
branch = true
parallel = true
data_file = ${COVERFILE}


[coverage:report]
skip_covered = True
show_missing = True
; exclude_lines =
;     \#\s*pragma: no cover
;     ^\s*raise AssertionError\b
;     ^\s*raise NotImplementedError\b
;     ^\s*return NotImplemented\b
;     ^\s*raise$
;     ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = src/${PACKAGENAME}
    */.tox/*/lib/python*/site-packages/${PACKAGENAME}
    */.tox/pypy*/site-packages/${PACKAGENAME}
    */.tox\*\Lib\site-packages\${PACKAGENAME}
    */src/${PACKAGENAME}
    *\src\${PACKAGENAME}