[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "autocoder-cli-sdk"
version = "0.0.1"
description = "Python SDK for AutoCoder CLI - 便于在Python代码中调用auto-coder.run功能"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AutoCoder Team", email = "support@autocoder.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Utilities",
]
keywords = ["autocoder", "cli", "sdk", "code-generation", "ai", "python", "api"]
requires-python = ">=3.7"
dependencies = [
    "typing_extensions>=3.7.4; python_version<'3.8'",
    "pydantic>=1.8.0,<3.0.0",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
]
examples = [
    "rich>=10.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/auto-coder"
Documentation = "https://github.com/your-org/auto-coder/tree/master/cli-sdks/python"
Repository = "https://github.com/your-org/auto-coder"
"Bug Tracker" = "https://github.com/your-org/auto-coder/issues"


[tool.hatch.metadata]
allow-direct-references = true

[tool.uv]
dev-dependencies = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
    "rich>=10.0.0",
]

[tool.black]
line-length = 79
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79
known_first_party = ["autocoder_cli_sdk"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["autocoder_cli_sdk"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
