{"version":3,"file":"mathUtil-CTARWQ-l.js","sources":["../../src/utils/mathUtil.ts"],"sourcesContent":["import type { ReadOnlyRect } from '@/lib/litegraph/src/interfaces'\nimport type { Bounds } from '@/renderer/core/layout/types'\n\n/**\n * Finds the greatest common divisor (GCD) for two numbers.\n *\n * @param a - The first number.\n * @param b - The second number.\n * @returns The GCD of the two numbers.\n */\nexport const gcd = (a: number, b: number): number => {\n  return b === 0 ? a : gcd(b, a % b)\n}\n\n/**\n * Finds the least common multiple (LCM) for two numbers.\n *\n * @param a - The first number.\n * @param b - The second number.\n * @returns The LCM of the two numbers.\n */\nexport const lcm = (a: number, b: number): number => {\n  return Math.abs(a * b) / gcd(a, b)\n}\n\n/**\n * Computes the union (bounding box) of multiple rectangles using a single-pass algorithm.\n *\n * Finds the minimum and maximum x/y coordinates across all rectangles to create\n * a single bounding rectangle that contains all input rectangles. Optimized for\n * performance with V8-friendly tuple access patterns.\n *\n * @param rectangles - Array of rectangle tuples in [x, y, width, height] format\n * @returns Bounds object with union rectangle, or null if no rectangles provided\n */\nexport function computeUnionBounds(\n  rectangles: readonly ReadOnlyRect[]\n): Bounds | null {\n  const n = rectangles.length\n  if (n === 0) {\n    return null\n  }\n\n  const r0 = rectangles[0]\n  let minX = r0[0]\n  let minY = r0[1]\n  let maxX = minX + r0[2]\n  let maxY = minY + r0[3]\n\n  for (let i = 1; i < n; i++) {\n    const r = rectangles[i]\n    const x1 = r[0]\n    const y1 = r[1]\n    const x2 = x1 + r[2]\n    const y2 = y1 + r[3]\n\n    if (x1 < minX) minX = x1\n    if (y1 < minY) minY = y1\n    if (x2 > maxX) maxX = x2\n    if (y2 > maxY) maxY = y2\n  }\n\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  }\n}\n"],"names":[],"mappings":";;AAUa,MAAA,MAAM,wBAAC,GAAW,MAAsB;AACnD,SAAO,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;AACnC,GAFmB;AAWN,MAAA,MAAM,wBAAC,GAAW,MAAsB;AACnD,SAAO,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC;AACnC,GAFmB;AAcZ,SAAS,mBACd,YACe;AACf,QAAM,IAAI,WAAW;AACrB,MAAI,MAAM,GAAG;AACJ,WAAA;AAAA,EACT;AAEM,QAAA,KAAK,WAAW,CAAC;AACnB,MAAA,OAAO,GAAG,CAAC;AACX,MAAA,OAAO,GAAG,CAAC;AACX,MAAA,OAAO,OAAO,GAAG,CAAC;AAClB,MAAA,OAAO,OAAO,GAAG,CAAC;AAEtB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,UAAA,IAAI,WAAW,CAAC;AAChB,UAAA,KAAK,EAAE,CAAC;AACR,UAAA,KAAK,EAAE,CAAC;AACR,UAAA,KAAK,KAAK,EAAE,CAAC;AACb,UAAA,KAAK,KAAK,EAAE,CAAC;AAEf,QAAA,KAAK,KAAa,QAAA;AAClB,QAAA,KAAK,KAAa,QAAA;AAClB,QAAA,KAAK,KAAa,QAAA;AAClB,QAAA,KAAK,KAAa,QAAA;AAAA,EACxB;AAEO,SAAA;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO,OAAO;AAAA,IACd,QAAQ,OAAO;AAAA,EAAA;AAEnB;AAjCgB;"}