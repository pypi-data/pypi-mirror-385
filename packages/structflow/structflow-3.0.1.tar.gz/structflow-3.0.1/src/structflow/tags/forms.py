from __future__ import annotations

import typing

from .base import Container, Tag, Void

if typing.TYPE_CHECKING:
    from .types import AttributeValue


class form(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        action: str | None = None,
        method: typing.Literal["get", "post", "dialog"] | None = None,
        enctype: typing.Literal[
            "application/x-www-form-urlencoded",
            "multipart/form-data",
            "text/plain",
        ]
        | None = None,
        novalidate: bool | None = None,
        target: typing.Literal["_self", "_blank", "_parent", "_top"] | None = None,
        autocomplete: typing.Literal["on", "off"] | None = None,
        name: str | None = None,
        accept_charset: str | None = None,
        rel: str | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            action=action,
            method=method,
            enctype=enctype,
            novalidate=novalidate,
            target=target,
            autocomplete=autocomplete,
            name=name,
            **(
                {"accept-charset": accept_charset} if accept_charset is not None else {}
            ),
            rel=rel,
            **kwargs,
        )


class input_(Void):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *,
        type_: str | None = None,
        name: str | None = None,
        value: AttributeValue | None = None,
        placeholder: str | None = None,
        required: bool | None = None,
        disabled: bool | None = None,
        readonly: bool | None = None,
        checked: bool | None = None,
        minlength: int | None = None,
        maxlength: int | None = None,
        min_: AttributeValue | None = None,
        max_: AttributeValue | None = None,
        step: AttributeValue | None = None,
        size: int | None = None,
        pattern: str | None = None,
        multiple: bool | None = None,
        src: str | None = None,
        alt: str | None = None,
        width: int | None = None,
        height: int | None = None,
        list_: str | None = None,
        autocomplete: str | None = None,
        autofocus: bool | None = None,
        form: str | None = None,
        formaction: str | None = None,
        formenctype: typing.Literal[
            "application/x-www-form-urlencoded",
            "multipart/form-data",
            "text/plain",
        ]
        | None = None,
        formmethod: typing.Literal["get", "post", "dialog"] | None = None,
        formnovalidate: bool | None = None,
        formtarget: typing.Literal["_self", "_blank", "_parent", "_top"] | None = None,
        inputmode: typing.Literal[
            "none",
            "text",
            "decimal",
            "numeric",
            "tel",
            "search",
            "email",
            "url",
        ]
        | None = None,
        enterkeyhint: typing.Literal[
            "enter",
            "done",
            "go",
            "next",
            "previous",
            "search",
            "send",
        ]
        | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            type_=type_,
            name=name,
            value=value,
            placeholder=placeholder,
            required=required,
            disabled=disabled,
            readonly=readonly,
            checked=checked,
            minlength=minlength,
            maxlength=maxlength,
            min_=min_,
            max_=max_,
            step=step,
            size=size,
            pattern=pattern,
            multiple=multiple,
            src=src,
            alt=alt,
            width=width,
            height=height,
            list_=list_,
            autocomplete=autocomplete,
            autofocus=autofocus,
            form=form,
            formaction=formaction,
            formenctype=formenctype,
            formmethod=formmethod,
            formnovalidate=formnovalidate,
            formtarget=formtarget,
            inputmode=inputmode,
            enterkeyhint=enterkeyhint,
            **kwargs,
        )


class textarea(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        name: str | None = None,
        rows: int | None = None,
        cols: int | None = None,
        minlength: int | None = None,
        maxlength: int | None = None,
        placeholder: str | None = None,
        required: bool | None = None,
        disabled: bool | None = None,
        readonly: bool | None = None,
        wrap: typing.Literal["soft", "hard"] | None = None,
        autofocus: bool | None = None,
        form: str | None = None,
        spellcheck: bool | None = None,
        autocomplete: typing.Literal["on", "off"] | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            name=name,
            rows=rows,
            cols=cols,
            minlength=minlength,
            maxlength=maxlength,
            placeholder=placeholder,
            required=required,
            disabled=disabled,
            readonly=readonly,
            wrap=wrap,
            autofocus=autofocus,
            form=form,
            autocomplete=autocomplete,
            **kwargs,
        )


class select(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        name: str | None = None,
        required: bool | None = None,
        disabled: bool | None = None,
        autofocus: bool | None = None,
        form: str | None = None,
        multiple: bool | None = None,
        size: int | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            name=name,
            required=required,
            disabled=disabled,
            autofocus=autofocus,
            form=form,
            multiple=multiple,
            size=size,
            **kwargs,
        )


class option(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        value: str | None = None,
        label: str | None = None,
        selected: bool | None = None,
        disabled: bool | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            value=value,
            label=label,
            selected=selected,
            disabled=disabled,
            **kwargs,
        )


class optgroup(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        label: str | None = None,
        disabled: bool | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            label=label,
            disabled=disabled,
            **kwargs,
        )


class label(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        for_: str | None = None,
        form: str | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            form=form,
            **kwargs,
        )

        if for_ is not None:
            self._attributes["for"] = for_


class button(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        type_: typing.Literal["submit", "reset", "button"] | None = None,
        name: str | None = None,
        value: AttributeValue | None = None,
        disabled: bool | None = None,
        autofocus: bool | None = None,
        form: str | None = None,
        formaction: str | None = None,
        formenctype: typing.Literal[
            "application/x-www-form-urlencoded",
            "multipart/form-data",
            "text/plain",
        ]
        | None = None,
        formmethod: typing.Literal["get", "post", "dialog"] | None = None,
        formnovalidate: bool | None = None,
        formtarget: typing.Literal["_self", "_blank", "_parent", "_top"] | None = None,
        popovertarget: str | None = None,
        popovertargetaction: typing.Literal["toggle", "show", "hide"] | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            type_=type_,
            name=name,
            value=value,
            disabled=disabled,
            autofocus=autofocus,
            form=form,
            formaction=formaction,
            formenctype=formenctype,
            formmethod=formmethod,
            formnovalidate=formnovalidate,
            formtarget=formtarget,
            popovertarget=popovertarget,
            popovertargetaction=popovertargetaction,
            **kwargs,
        )


class fieldset(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        disabled: bool | None = None,
        form: str | None = None,
        name: str | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            disabled=disabled,
            form=form,
            name=name,
            **kwargs,
        )


class legend(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            **kwargs,
        )


class datalist(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            **kwargs,
        )


class output(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        name: str | None = None,
        for_: str | None = None,
        form: str | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            name=name,
            form=form,
            **kwargs,
        )

        if for_ is not None:
            self._attributes["for"] = for_


class meter(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        value: float | None = None,
        min_: float | None = None,
        max_: float | None = None,
        low: float | None = None,
        high: float | None = None,
        optimum: float | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            value=value,
            min_=min_,
            max_=max_,
            low=low,
            high=high,
            optimum=optimum,
            **kwargs,
        )


class progress(Container):  # noqa: N801
    def __init__(  # noqa: PLR0913
        self,
        *children: Tag | str,
        value: float | None = None,
        max_: float | None = None,
        id_: str | None = None,
        class_: str | list[str] | None = None,
        style: str | None = None,
        title: str | None = None,
        lang: str | None = None,
        dir_: typing.Literal["ltr", "rtl", "auto"] | None = None,
        tabindex: int | None = None,
        hidden: bool | None = None,
        draggable: bool | None = None,
        contenteditable: bool | None = None,
        spellcheck: bool | None = None,
        translate: bool | None = None,
        accesskey: str | None = None,
        **kwargs: AttributeValue,
    ) -> None:
        super().__init__(
            *children,
            id_=id_,
            class_=class_,
            style=style,
            title=title,
            lang=lang,
            dir_=dir_,
            tabindex=tabindex,
            hidden=hidden,
            draggable=draggable,
            contenteditable=contenteditable,
            spellcheck=spellcheck,
            translate=translate,
            accesskey=accesskey,
            value=value,
            max_=max_,
            **kwargs,
        )
