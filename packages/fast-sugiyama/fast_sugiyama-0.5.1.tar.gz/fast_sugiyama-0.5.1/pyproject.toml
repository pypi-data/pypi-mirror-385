[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "fast-sugiyama"
description = "A fast and flexible hierarchical graph layout engine."
authors = [{ name = "Austin Orr", email = "austinmartinorr@gmail.com" }]
requires-python = ">=3.11"
dynamic = ["version"]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
keywords = [
    "graph-display",
    "directed-graph",
    "digraph",
    "graph",
    "pydot",
    "layout",
    "dot layout",
    "graph layout",
    "network",
    "networkx",
    "graphviz",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3.15",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering",
    "Topic :: Multimedia :: Graphics :: Presentation",
    "Topic :: Scientific/Engineering :: Visualization",
    "Typing :: Typed",
]

[project.optional-dependencies]
all = ["rectangle-packer>=2"]
test = [
    "fast-sugiyama[all]",
    "pytest>=8",
    "pytest-cov>=7",
    "pytest-xdist>=3",
    "networkx",
]
dev = [
    "fast-sugiyama[test]",
    "pre-commit>=3,<5",
    "ruff>=0.13",
    "matplotlib>=3.10",
]

[tool.maturin]
module-name = "fast_sugiyama._fast_sugiyama"
profile = "release-lto"
strip = true
manifest-path = "crates/py-sugiyama/Cargo.toml"

[tool.ruff]
lint.select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "PERF", # Perflint
]

[tool.coverage]
run = { branch = true, omit = ["**/*output.py"] }
report = { show_missing = true }

[[tool.mypy.overrides]]
module = ["rpack"]
ignore_missing_imports = true
