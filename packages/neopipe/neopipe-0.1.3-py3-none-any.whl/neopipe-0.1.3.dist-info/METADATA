Metadata-Version: 2.4
Name: neopipe
Version: 0.1.3
Summary: A Python library for seamless function orchestration, Designed to streamline workflow management in microservices and AI-powered applications
Project-URL: Documentation, https://mrdatapsycho.github.io/neopipe
Project-URL: Issues, https://github.com/MrDataPsycho/neopipe/issues
Project-URL: Source, https://github.com/MrDataPsycho/neopipe
Author-email: MrDataPsycho <mr.data.psycho@gmail.com>
License-Expression: MIT
License-File: LICENSE
Keywords: function,orchestration,pipeline
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.10
Provides-Extra: dev
Requires-Dist: isort; extra == 'dev'
Requires-Dist: mypy; extra == 'dev'
Requires-Dist: ruff; extra == 'dev'
Provides-Extra: docs
Requires-Dist: mkdocs; extra == 'docs'
Requires-Dist: mkdocs-material; extra == 'docs'
Requires-Dist: mkdocstrings[python]; extra == 'docs'
Provides-Extra: example
Requires-Dist: dotenv; extra == 'example'
Requires-Dist: httpx; extra == 'example'
Requires-Dist: openai; extra == 'example'
Requires-Dist: pydantic; extra == 'example'
Provides-Extra: testing
Requires-Dist: pytest; extra == 'testing'
Requires-Dist: pytest-asyncio; extra == 'testing'
Requires-Dist: pytest-cov; extra == 'testing'
Requires-Dist: pytest-mock; extra == 'testing'
Description-Content-Type: text/markdown

<p align="center">
  <img src="media/logo.png" alt="neopipe Logo" width="100" height="100">
</p>

---

# neopipe

A Python library for seamless function orchestration, inspired by Rust and scikit-learn pipelines. Designed to streamline workflow management in microservices and AI-powered applications.

## Key Features:
- Pythonic implementation
- Efficient function pipelining
- Inspired by Rust's approach to data flow
- Tailored for microservices architecture
- Simplify orchestration of small API driven function (OpenAI, Claudi, other 3rd party API)


## Installation

```bash
$ pip install neopipe
```

## Usage
- [API Documentation](https://mrdatapsycho.github.io/neopipe/)

## Contributing

Interested in contributing? Check out the contributing guidelines. Please note that this project is released with a Code of Conduct. By contributing to this project, you agree to abide by its terms.

## License

`neopipe` was created by MrDataPsycho. It is licensed under the terms of the MIT license.

## Credits

`neopipe` was initially built using [`cookiecutter`](https://cookiecutter.readthedocs.io/en/latest/). But later found some draw back and later adjusted to use Hatch as backend wtith [`Hatch`](https://hatch.pypa.io/1.8/intro/) tool set, which also remove third party python dependency manager from the project.

Modifications include:
- Hatchling build system
- MkDocs for documentation (TODO)
