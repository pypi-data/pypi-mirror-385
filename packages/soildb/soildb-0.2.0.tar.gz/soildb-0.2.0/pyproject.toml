[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "soildb"
version = "0.2.0"
readme = "README.md"
authors = [
    {name = "Andrew Brown", email = "brown.andrewg@gmail.com"},
]
description = "A Python client for accessing USDA Soil Data Access (SDA) web service"

license = {text = "MIT"}
keywords = ["soil", "usda", "sda", "ssurgo", "gis", "agriculture"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.24.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.1.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.1.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.20.0",
    "myst-parser>=2.0.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
dataframes = [
    "pandas>=1.5.0",
    "polars>=0.18.0",
]
spatial = [
    "geopandas>=0.13.0",
    "shapely>=2.0.0",
]
soil = ["soilprofilecollection>=0.2.0"]
all = [
    "soildb[dev,dataframes,spatial,soil]"
]

[project.urls]
Homepage = "https://github.com/brownag/py-soildb"
Repository = "https://github.com/brownag/py-soildb"
Documentation = "https://py-soildb.readthedocs.io"
"Bug Tracker" = "https://github.com/brownag/py-soildb/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/soildb"]

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]

[tool.ruff.lint.isort]
known-first-party = ["soildb"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
