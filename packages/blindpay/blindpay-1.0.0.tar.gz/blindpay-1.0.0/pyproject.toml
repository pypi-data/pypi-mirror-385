[project]
name = "blindpay"
version = "1.0.0"
description = "Official Python SDK for the Blindpay API â€” Global payments infrastructure"
readme = "README.md"
authors = [{ name = "Blindpay", email = "gabriel@blindpay.com" }]
license = { text = "MIT" }
keywords = ["blindpay", "payments", "api", "sdk", "global-payments", "payment-processing"]
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.23.0, <1",
    "pydantic>=1.9.0, <3",
    "typing-extensions>=4.11, <5",
]
classifiers = [
  "Typing :: Typed",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
]

[project.urls]
Homepage = "https://github.com/blindpaylabs/blindpay-python"
Repository = "https://github.com/blindpaylabs/blindpay-python"
Documentation = "https://api.blindpay.com/reference"
"Bug Tracker" = "https://github.com/blindpaylabs/blindpay-python/issues"

[build-system]
requires = ["hatchling==1.26.3", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/blindpay/__init__.py" 

[tool.hatch.build]
include = ["src/*", "README.md", "LICENSE", "py.typed"]

[tool.hatch.build.targets.wheel]
packages = ["src/blindpay"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/README.md", "/LICENSE", "/pyproject.toml", "/py.typed"]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
pattern = '\[(.+?)\]\(((?!https?://)\S+?)\)'
replacement = '[\1](https://github.com/blindpaylabs/blindpay-python/tree/main/\g<2>)'

[dependency-groups]
dev = [
  "ruff",
  "pyright==1.1.399",
  "mypy",
]

[tool.ruff]
line-length = 120
target-version = "py312"
output-format = "grouped"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["I","B","E","F","ARG","T201","T203"]
ignore = ["B006"]
unfixable = ["T201","T203"]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["blindpay"]

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = ["T201"]

[tool.mypy]
pretty = true
show_error_codes = true
strict_equality = true
implicit_reexport = true
check_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
exclude = [
    "^examples/",
]
