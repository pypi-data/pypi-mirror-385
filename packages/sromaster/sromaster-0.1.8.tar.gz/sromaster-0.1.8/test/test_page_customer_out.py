# coding: utf-8

"""
    SRO Master API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.8
    Contact: info@nexium.me
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sromaster.models.page_customer_out import PageCustomerOut

class TestPageCustomerOut(unittest.TestCase):
    """PageCustomerOut unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageCustomerOut:
        """Test PageCustomerOut
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageCustomerOut`
        """
        model = PageCustomerOut()
        if include_optional:
            return PageCustomerOut(
                items = [
                    sromaster.models.customer_out.CustomerOut(
                        id = 56, 
                        name = '', 
                        inn = '', 
                        ogrn = '', 
                        address = '', 
                        status = 'ACTIVE', 
                        phones = [
                            sromaster.models.customer_phone_out.CustomerPhoneOut(
                                id = 56, 
                                label = '', 
                                phone = '', 
                                is_primary = True, )
                            ], 
                        emails = [
                            sromaster.models.customer_email_out.CustomerEmailOut(
                                id = 56, 
                                label = '', 
                                email = '', 
                                is_primary = True, )
                            ], )
                    ],
                page = 56,
                per_page = 56,
                total = 56,
                total_pages = 56
            )
        else:
            return PageCustomerOut(
                items = [
                    sromaster.models.customer_out.CustomerOut(
                        id = 56, 
                        name = '', 
                        inn = '', 
                        ogrn = '', 
                        address = '', 
                        status = 'ACTIVE', 
                        phones = [
                            sromaster.models.customer_phone_out.CustomerPhoneOut(
                                id = 56, 
                                label = '', 
                                phone = '', 
                                is_primary = True, )
                            ], 
                        emails = [
                            sromaster.models.customer_email_out.CustomerEmailOut(
                                id = 56, 
                                label = '', 
                                email = '', 
                                is_primary = True, )
                            ], )
                    ],
                page = 56,
                per_page = 56,
                total = 56,
                total_pages = 56,
        )
        """

    def testPageCustomerOut(self):
        """Test PageCustomerOut"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
