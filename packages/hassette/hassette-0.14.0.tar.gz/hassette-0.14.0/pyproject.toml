[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

[project]
name = "hassette"
version = "0.14.0"
description = "Hassette is a simple, modern, async-first Python framework for building Home Assistant automations."
readme = "README.md"
authors = [{ name = "Jessica", email = "12jessicasmith34@gmail.com" }]
license = "MIT"
requires-python = ">=3.11,<3.14"
keywords = [
    "home-assistant",
    "automation",
    "async",
    "typed",
    "framework",
    "smart-home",
    "iot",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]
dependencies = [
    "aiohttp>=3.11.18",
    "anyio>=4.10.0",
    "coloredlogs>=15.0.1",
    "croniter>=6.0.0",
    "deepdiff>=8.6.1",
    "fair-async-rlock>=1.0.7",
    "glom>=24.11.0",
    "humanize>=4.13.0",
    "orjson>=3.10.18",
    "packaging>=25.0",
    "platformdirs>=4.3.8",
    "pydantic-settings>=2.10.0",
    "python-dotenv>=1.1.0",
    "tenacity>=9.1.2",
    "typing-extensions==4.15.*",
    "watchfiles>=1.1.0",
    "whenever==0.9.*",
]

[project.urls]
Homepage = "https://github.com/nodejsmith/hassette"
Repository = "https://github.com/nodejsmith/hassette"
Documentation = "https://github.com/nodejsmith/hassette#readme"
"Bug Reports" = "https://github.com/nodejsmith/hassette/issues"
Changelog = "https://github.com/nodejsmith/hassette/blob/main/CHANGELOG.md"


[dependency-groups]
dev = [
    "coverage[toml]>=7.10.7",
    "pytest>=8.4.0",
    "pytest-cov>=7.0.0",
    "tomli-w>=1.2.0",
]
test = [
    "docker>=7.1.0",
    "nox>=2025.5.1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-randomly>=3.16.0",
    "pytest-xdist>=3.8.0",
]
model_gen = ["datamodel-code-generator>=0.30.1"]
docs = [
    "autodoc-pydantic>=2.2.0",
    "sphinx>=8.2.3",
    "sphinx-autobuild==2024.10.3",
    "sphinx-autodoc-typehints==3.2.0",
    "sphinx-autodoc2==0.5.0",
    "sphinx-basic-ng==1.0.0b2",
    "sphinxcontrib-applehelp==2.0.0",
    "sphinxcontrib-devhelp==2.0.0",
    "sphinxcontrib-htmlhelp==2.1.0",
    "sphinxcontrib-jsmath==1.0.1",
    "sphinxcontrib-qthelp==2.0.0",
    "sphinxcontrib-serializinghtml==2.0.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-rtd-theme>=3.0.2",
]

[tool.uv]
default-groups = ["dev", "test", "docs"]

[project.scripts]
run-hassette = "hassette.__main__:entrypoint"

[tool.pytest.ini_options]
pythonpath = "src"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"

[tool.coverage.run]
branch = true         # measure branch coverage, not just lines
source = ["hassette"] # your packages/modules
parallel = true       # enable combining across workers/CI shards
relative_files = true # stable paths in CI
# Measure subprocesses (pytest-cov will set env automatically; this is belt+suspenders):
concurrency = ["thread", "multiprocessing"]
omit = ["*/__init__.py", "*/__main__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true
# fail_under = 85 # local default; CI can override
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
