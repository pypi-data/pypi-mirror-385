{"ast":null,"code":"import { createSelector } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport var gridVirtualizationSelector = function gridVirtualizationSelector(state) {\n  return state.virtualization;\n};\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport var gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, function (state) {\n  return state.enabled;\n});\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport var gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, function (state) {\n  return state.enabledForColumns;\n});","map":{"version":3,"names":["createSelector","gridVirtualizationSelector","state","virtualization","gridVirtualizationEnabledSelector","enabled","gridVirtualizationColumnEnabledSelector","enabledForColumns"],"sources":["/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js"],"sourcesContent":["import { createSelector } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);"],"mappings":"AAAA,SAASA,cAAc,QAAQ,+BAA+B;AAC9D;AACA;AACA;AACA;AACA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAGC,KAAK;EAAA,OAAIA,KAAK,CAACC,cAAc;AAAA;;AAEvE;AACA;AACA;AACA;AACA,OAAO,IAAMC,iCAAiC,GAAGJ,cAAc,CAACC,0BAA0B,EAAE,UAAAC,KAAK;EAAA,OAAIA,KAAK,CAACG,OAAO;AAAA,EAAC;;AAEnH;AACA;AACA;AACA;AACA,OAAO,IAAMC,uCAAuC,GAAGN,cAAc,CAACC,0BAA0B,EAAE,UAAAC,KAAK;EAAA,OAAIA,KAAK,CAACK,iBAAiB;AAAA,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}