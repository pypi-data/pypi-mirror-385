{"ast":null,"code":"import _defineProperty from \"/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nvar SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nvar isSyntheticEvent = function isSyntheticEvent(event) {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nvar globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  var _publicApiRef$current;\n  var existingPrivateApi = (_publicApiRef$current = publicApiRef.current) == null ? void 0 : _publicApiRef$current[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  var state = {};\n  var privateApi = {\n    state: state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = function () {\n    return publicApiRef.current;\n  };\n  privateApi.register = function (visibility, methods) {\n    Object.keys(methods).forEach(function (methodName) {\n      var method = methods[methodName];\n      var currentPrivateMethod = privateApi[methodName];\n      if ((currentPrivateMethod == null ? void 0 : currentPrivateMethod.spying) === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        var publicApi = publicApiRef.current;\n        var currentPublicMethod = publicApi[methodName];\n        if ((currentPublicMethod == null ? void 0 : currentPublicMethod.spying) === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  var publicApi = _defineProperty({\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    }\n  }, SYMBOL_API_PRIVATE, privateApiRef.current);\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  var publicApiRef = React.useRef();\n  var privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  var publishEvent = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var name = args[0],\n      params = args[1],\n      _args$ = args[2],\n      event = _args$ === void 0 ? {} : _args$;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    var details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  var subscribeEvent = React.useCallback(function (event, handler, options) {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    var api = privateApiRef.current;\n    return function () {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent: subscribeEvent,\n    publishEvent: publishEvent\n  }, 'public');\n  React.useImperativeHandle(inputApiRef, function () {\n    return publicApiRef.current;\n  }, [publicApiRef]);\n  React.useEffect(function () {\n    var api = privateApiRef.current;\n    return function () {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","map":{"version":3,"names":["React","Store","useGridApiMethod","GridSignature","EventManager","SYMBOL_API_PRIVATE","Symbol","isSyntheticEvent","event","isPropagationStopped","undefined","unwrapPrivateAPI","publicApi","globalId","createPrivateAPI","publicApiRef","_publicApiRef$current","existingPrivateApi","current","state","privateApi","store","create","instanceId","id","getPublicApi","register","visibility","methods","Object","keys","forEach","methodName","method","currentPrivateMethod","spying","target","currentPublicMethod","caches","eventManager","createPublicAPI","privateApiRef","_defineProperty","useGridApiInitialization","inputApiRef","props","useRef","publishEvent","useCallback","_len","arguments","length","args","Array","_key","name","params","_args$","defaultMuiPrevented","details","signature","DataGridPro","api","emit","subscribeEvent","handler","options","on","removeListener","useImperativeHandle","useEffect"],"sources":["/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js"],"sourcesContent":["import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  var _publicApiRef$current;\n  const existingPrivateApi = (_publicApiRef$current = publicApiRef.current) == null ? void 0 : _publicApiRef$current[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if ((currentPrivateMethod == null ? void 0 : currentPrivateMethod.spying) === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if ((currentPublicMethod == null ? void 0 : currentPublicMethod.spying) === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}