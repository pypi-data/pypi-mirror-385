{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport var getDerivedPaginationModel = function getDerivedPaginationModel(paginationState, signature, paginationModelProp) {\n  var _paginationModelProp$;\n  var paginationModel = paginationState.paginationModel;\n  var rowCount = paginationState.rowCount;\n  var pageSize = (_paginationModelProp$ = paginationModelProp == null ? void 0 : paginationModelProp.pageSize) != null ? _paginationModelProp$ : paginationModel.pageSize;\n  var pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && ((paginationModelProp == null ? void 0 : paginationModelProp.page) !== paginationModel.page || (paginationModelProp == null ? void 0 : paginationModelProp.pageSize) !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  var validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport var useGridPaginationModel = function useGridPaginationModel(apiRef, props) {\n  var _props$initialState2;\n  var logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  var densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  var rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  var setPage = React.useCallback(function (page) {\n    var currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(\"Setting page to \".concat(page));\n    apiRef.current.setPaginationModel({\n      page: page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  var setPageSize = React.useCallback(function (pageSize) {\n    var currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(\"Setting page size to \".concat(pageSize));\n    apiRef.current.setPaginationModel({\n      pageSize: pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  var setPaginationModel = React.useCallback(function (paginationModel) {\n    var currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n        })\n      });\n    });\n  }, [apiRef, logger, props.signature]);\n  var paginationModelApi = {\n    setPage: setPage,\n    setPageSize: setPageSize,\n    setPaginationModel: setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  var stateExportPreProcessing = React.useCallback(function (prevState, context) {\n    var _props$initialState;\n    var paginationModel = gridPaginationModelSelector(apiRef);\n    var shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    ((_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.pagination) == null ? void 0 : _props$initialState.paginationModel) != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel: paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, (_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.pagination) == null ? void 0 : _props$initialState2.paginationModel, props.autoPageSize]);\n  var stateRestorePreProcessing = React.useCallback(function (params, context) {\n    var _context$stateToResto, _context$stateToResto2;\n    var paginationModel = (_context$stateToResto = context.stateToRestore.pagination) != null && _context$stateToResto.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n        })\n      });\n    });\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  var handlePaginationModelChange = function handlePaginationModelChange() {\n    var _apiRef$current$virtu;\n    var paginationModel = gridPaginationModelSelector(apiRef);\n    if ((_apiRef$current$virtu = apiRef.current.virtualScrollerRef) != null && _apiRef$current$virtu.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  var handleUpdateAutoPageSize = React.useCallback(function () {\n    if (!props.autoPageSize) {\n      return;\n    }\n    var dimensions = apiRef.current.getRootDimensions() || {\n      viewportInnerSize: {\n        height: 0\n      }\n    };\n    var pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    var maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  var handleRowCountChange = React.useCallback(function (newRowCount) {\n    if (newRowCount == null) {\n      return;\n    }\n    var paginationModel = gridPaginationModelSelector(apiRef);\n    var pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(function () {\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n        })\n      });\n    });\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","map":{"version":3,"names":["_extends","React","gridDensityFactorSelector","calculatePinnedRowsHeight","useGridLogger","useGridSelector","useGridApiMethod","useGridApiEventHandler","useGridRegisterPipeProcessor","gridPageCountSelector","gridPaginationModelSelector","getPageCount","defaultPageSize","throwIfPageSizeExceedsTheLimit","getDefaultGridPaginationModel","getValidPage","getDerivedPaginationModel","paginationState","signature","paginationModelProp","_paginationModelProp$","paginationModel","rowCount","pageSize","pageCount","page","validPage","useGridPaginationModel","apiRef","props","_props$initialState2","logger","densityFactor","rowHeight","Math","floor","current","registerControlState","stateId","propModel","propOnChange","onPaginationModelChange","stateSelector","changeEvent","setPage","useCallback","currentModel","debug","concat","setPaginationModel","setPageSize","setState","state","pagination","paginationModelApi","stateExportPreProcessing","prevState","context","_props$initialState","shouldExportPaginationModel","exportOnlyDirtyModels","initialState","autoPageSize","stateRestorePreProcessing","params","_context$stateToResto","_context$stateToResto2","stateToRestore","handlePaginationModelChange","_apiRef$current$virtu","virtualScrollerRef","scrollToIndexes","rowIndex","handleUpdateAutoPageSize","dimensions","getRootDimensions","viewportInnerSize","height","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","top","bottom","handleRowCountChange","newRowCount","max","useEffect","paginationMode"],"sources":["/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  var _paginationModelProp$;\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = (_paginationModelProp$ = paginationModelProp == null ? void 0 : paginationModelProp.pageSize) != null ? _paginationModelProp$ : paginationModel.pageSize;\n  const pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && ((paginationModelProp == null ? void 0 : paginationModelProp.page) !== paginationModel.page || (paginationModelProp == null ? void 0 : paginationModelProp.pageSize) !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  var _props$initialState2;\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    ((_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.pagination) == null ? void 0 : _props$initialState.paginationModel) != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, (_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.pagination) == null ? void 0 : _props$initialState2.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n    const paginationModel = (_context$stateToResto = context.stateToRestore.pagination) != null && _context$stateToResto.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    var _apiRef$current$virtu;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if ((_apiRef$current$virtu = apiRef.current.virtualScrollerRef) != null && _apiRef$current$virtu.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions() || {\n      viewportInnerSize: {\n        height: 0\n      }\n    };\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}