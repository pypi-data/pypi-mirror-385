{"ast":null,"code":"import _slicedToArray from \"/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nvar stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nvar defaultCompare = Object.is;\nexport var objectShallowCompare = fastObjectShallowCompare;\nvar createRefs = function createRefs() {\n  return {\n    state: null,\n    equals: null,\n    selector: null\n  };\n};\nexport var useGridSelector = function useGridSelector(apiRef, selector) {\n  var equals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultCompare;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  var refs = useLazyRef(createRefs);\n  var didInit = refs.current.selector !== null;\n  var _React$useState = React.useState(\n    // We don't use an initialization function to avoid allocations\n    didInit ? null : applySelector(apiRef, selector)),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(function () {\n    return apiRef.current.store.subscribe(function () {\n      var newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","map":{"version":3,"names":["React","useLazyRef","useOnMount","buildWarning","fastObjectShallowCompare","stateNotInitializedWarning","isOutputSelector","selector","acceptsApiRef","applySelector","apiRef","current","state","defaultCompare","Object","is","objectShallowCompare","createRefs","equals","useGridSelector","arguments","length","undefined","process","env","NODE_ENV","refs","didInit","_React$useState","useState","_React$useState2","_slicedToArray","setState","store","subscribe","newState"],"sources":["/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js"],"sourcesContent":["import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,wBAAwB,QAAQ,sCAAsC;AAC/E,IAAMC,0BAA0B,GAAGF,YAAY,CAAC,CAAC,gFAAgF,EAAE,4DAA4D,CAAC,CAAC;AACjM,SAASG,gBAAgBA,CAACC,QAAQ,EAAE;EAClC,OAAOA,QAAQ,CAACC,aAAa;AAC/B;AACA,SAASC,aAAaA,CAACC,MAAM,EAAEH,QAAQ,EAAE;EACvC,IAAID,gBAAgB,CAACC,QAAQ,CAAC,EAAE;IAC9B,OAAOA,QAAQ,CAACG,MAAM,CAAC;EACzB;EACA,OAAOH,QAAQ,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CAAC;AACvC;AACA,IAAMC,cAAc,GAAGC,MAAM,CAACC,EAAE;AAChC,OAAO,IAAMC,oBAAoB,GAAGZ,wBAAwB;AAC5D,IAAMa,UAAU,GAAG,SAAbA,UAAUA,CAAA;EAAA,OAAU;IACxBL,KAAK,EAAE,IAAI;IACXM,MAAM,EAAE,IAAI;IACZX,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AACF,OAAO,IAAMY,eAAe,GAAG,SAAlBA,eAAeA,CAAIT,MAAM,EAAEH,QAAQ,EAA8B;EAAA,IAA5BW,MAAM,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,cAAc;EACvE,IAAIU,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAACf,MAAM,CAACC,OAAO,CAACC,KAAK,EAAE;MACzBP,0BAA0B,CAAC,CAAC;IAC9B;EACF;EACA,IAAMqB,IAAI,GAAGzB,UAAU,CAACgB,UAAU,CAAC;EACnC,IAAMU,OAAO,GAAGD,IAAI,CAACf,OAAO,CAACJ,QAAQ,KAAK,IAAI;EAC9C,IAAAqB,eAAA,GAA0B5B,KAAK,CAAC6B,QAAQ;IACxC;IACAF,OAAO,GAAG,IAAI,GAAGlB,aAAa,CAACC,MAAM,EAAEH,QAAQ,CAAC,CAAC;IAAAuB,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAF1ChB,KAAK,GAAAkB,gBAAA;IAAEE,QAAQ,GAAAF,gBAAA;EAGtBJ,IAAI,CAACf,OAAO,CAACC,KAAK,GAAGA,KAAK;EAC1Bc,IAAI,CAACf,OAAO,CAACO,MAAM,GAAGA,MAAM;EAC5BQ,IAAI,CAACf,OAAO,CAACJ,QAAQ,GAAGA,QAAQ;EAChCL,UAAU,CAAC,YAAM;IACf,OAAOQ,MAAM,CAACC,OAAO,CAACsB,KAAK,CAACC,SAAS,CAAC,YAAM;MAC1C,IAAMC,QAAQ,GAAG1B,aAAa,CAACC,MAAM,EAAEgB,IAAI,CAACf,OAAO,CAACJ,QAAQ,CAAC;MAC7D,IAAI,CAACmB,IAAI,CAACf,OAAO,CAACO,MAAM,CAACQ,IAAI,CAACf,OAAO,CAACC,KAAK,EAAEuB,QAAQ,CAAC,EAAE;QACtDT,IAAI,CAACf,OAAO,CAACC,KAAK,GAAGuB,QAAQ;QAC7BH,QAAQ,CAACG,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOvB,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}