{"ast":null,"code":"import _objectSpread from\"/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Cookies}from'react-cookie';var cookies=new Cookies();var updateOptions=function updateOptions(url,options){var update=_objectSpread({},options);if(cookies.get('token')!=='no_auth'&&sessionStorage.getItem('token')!=='no_auth'){update.headers=_objectSpread(_objectSpread({},update.headers),{},{Authorization:'Bearer '+sessionStorage.getItem('token')});}return update;};export default function fetcher(url,options){return fetch(url,updateOptions(url,options)).then(function(res){// For the situation that server has already been restarted, the current token may become invalid,\n// which leads to UI hangs.\nif(res.status==401&&localStorage.getItem('authStatus')!=='401'){localStorage.setItem('authStatus','401');window.dispatchEvent(new Event('auth-status'));}else if(res.status==403&&localStorage.getItem('authStatus')!=='403'){localStorage.setItem('authStatus','403');window.dispatchEvent(new Event('auth-status'));}else{return res;}});}","map":{"version":3,"names":["Cookies","cookies","updateOptions","url","options","update","_objectSpread","get","sessionStorage","getItem","headers","Authorization","fetcher","fetch","then","res","status","localStorage","setItem","window","dispatchEvent","Event"],"sources":["/home/runner/work/inference/inference/xinference/ui/web/ui/src/components/fetcher.js"],"sourcesContent":["import { Cookies } from 'react-cookie'\n\nconst cookies = new Cookies()\n\nconst updateOptions = (url, options) => {\n  const update = { ...options }\n  if (\n    cookies.get('token') !== 'no_auth' &&\n    sessionStorage.getItem('token') !== 'no_auth'\n  ) {\n    update.headers = {\n      ...update.headers,\n      Authorization: 'Bearer ' + sessionStorage.getItem('token'),\n    }\n  }\n  return update\n}\n\nexport default function fetcher(url, options) {\n  return fetch(url, updateOptions(url, options)).then((res) => {\n    // For the situation that server has already been restarted, the current token may become invalid,\n    // which leads to UI hangs.\n    if (res.status == 401 && localStorage.getItem('authStatus') !== '401') {\n      localStorage.setItem('authStatus', '401')\n      window.dispatchEvent(new Event('auth-status'))\n    } else if (\n      res.status == 403 &&\n      localStorage.getItem('authStatus') !== '403'\n    ) {\n      localStorage.setItem('authStatus', '403')\n      window.dispatchEvent(new Event('auth-status'))\n    } else {\n      return res\n    }\n  })\n}\n"],"mappings":"+IAAA,OAASA,OAAO,KAAQ,cAAc,CAEtC,GAAM,CAAAC,OAAO,CAAG,GAAI,CAAAD,OAAO,CAAC,CAAC,CAE7B,GAAM,CAAAE,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,GAAG,CAAEC,OAAO,CAAK,CACtC,GAAM,CAAAC,MAAM,CAAAC,aAAA,IAAQF,OAAO,CAAE,CAC7B,GACEH,OAAO,CAACM,GAAG,CAAC,OAAO,CAAC,GAAK,SAAS,EAClCC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,GAAK,SAAS,CAC7C,CACAJ,MAAM,CAACK,OAAO,CAAAJ,aAAA,CAAAA,aAAA,IACTD,MAAM,CAACK,OAAO,MACjBC,aAAa,CAAE,SAAS,CAAGH,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,EAC3D,CACH,CACA,MAAO,CAAAJ,MAAM,CACf,CAAC,CAED,cAAe,SAAS,CAAAO,OAAOA,CAACT,GAAG,CAAEC,OAAO,CAAE,CAC5C,MAAO,CAAAS,KAAK,CAACV,GAAG,CAAED,aAAa,CAACC,GAAG,CAAEC,OAAO,CAAC,CAAC,CAACU,IAAI,CAAC,SAACC,GAAG,CAAK,CAC3D;AACA;AACA,GAAIA,GAAG,CAACC,MAAM,EAAI,GAAG,EAAIC,YAAY,CAACR,OAAO,CAAC,YAAY,CAAC,GAAK,KAAK,CAAE,CACrEQ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,KAAK,CAAC,CACzCC,MAAM,CAACC,aAAa,CAAC,GAAI,CAAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAChD,CAAC,IAAM,IACLN,GAAG,CAACC,MAAM,EAAI,GAAG,EACjBC,YAAY,CAACR,OAAO,CAAC,YAAY,CAAC,GAAK,KAAK,CAC5C,CACAQ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAE,KAAK,CAAC,CACzCC,MAAM,CAACC,aAAa,CAAC,GAAI,CAAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAChD,CAAC,IAAM,CACL,MAAO,CAAAN,GAAG,CACZ,CACF,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}