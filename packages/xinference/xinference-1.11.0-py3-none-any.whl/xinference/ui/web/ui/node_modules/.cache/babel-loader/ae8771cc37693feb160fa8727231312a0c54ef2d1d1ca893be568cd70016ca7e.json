{"ast":null,"code":"import _regeneratorRuntime from\"/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/runner/work/inference/inference/xinference/ui/web/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Clear,ContentCopy,Done}from'@mui/icons-material';import{IconButton,Tooltip}from'@mui/material';import React,{useState}from'react';import{copyToClipboard}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CopyComponent=function CopyComponent(_ref){var tip=_ref.tip,text=_ref.text;var _useState=useState('pending'),_useState2=_slicedToArray(_useState,2),copyStatus=_useState2[0],setCopyStatus=_useState2[1];var showTooltipTemporarily=function showTooltipTemporarily(status){setCopyStatus(status);setTimeout(function(){return setCopyStatus('pending');},1500);};var handleCopy=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var textToCopy,success;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.stopPropagation();textToCopy=String(text!==null&&text!==void 0?text:'');_context.next=4;return copyToClipboard(textToCopy);case 4:success=_context.sent;showTooltipTemporarily(success?'success':'failed');case 6:case\"end\":return _context.stop();}},_callee);}));return function handleCopy(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:copyStatus==='pending'?/*#__PURE__*/_jsx(Tooltip,{title:tip,placement:\"top\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"copy\",onClick:handleCopy,children:/*#__PURE__*/_jsx(ContentCopy,{fontSize:\"small\"})})}):copyStatus==='success'?/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"copy\",children:/*#__PURE__*/_jsx(Done,{fontSize:\"small\",color:\"success\"})}):/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"copy\",children:/*#__PURE__*/_jsx(Clear,{fontSize:\"small\",color:\"error\"})})});};export default CopyComponent;","map":{"version":3,"names":["Clear","ContentCopy","Done","IconButton","Tooltip","React","useState","copyToClipboard","jsx","_jsx","Fragment","_Fragment","CopyComponent","_ref","tip","text","_useState","_useState2","_slicedToArray","copyStatus","setCopyStatus","showTooltipTemporarily","status","setTimeout","handleCopy","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","textToCopy","success","wrap","_callee$","_context","prev","next","stopPropagation","String","sent","stop","_x","apply","arguments","children","title","placement","onClick","fontSize","color"],"sources":["/home/runner/work/inference/inference/xinference/ui/web/ui/src/components/copyComponent.js"],"sourcesContent":["import { Clear, ContentCopy, Done } from '@mui/icons-material'\nimport { IconButton, Tooltip } from '@mui/material'\nimport React, { useState } from 'react'\n\nimport { copyToClipboard } from './utils'\n\nconst CopyComponent = ({ tip, text }) => {\n  const [copyStatus, setCopyStatus] = useState('pending')\n\n  const showTooltipTemporarily = (status) => {\n    setCopyStatus(status)\n    setTimeout(() => setCopyStatus('pending'), 1500)\n  }\n\n  const handleCopy = async (event) => {\n    event.stopPropagation()\n    const textToCopy = String(text ?? '')\n    const success = await copyToClipboard(textToCopy)\n    showTooltipTemporarily(success ? 'success' : 'failed')\n  }\n\n  return (\n    <>\n      {copyStatus === 'pending' ? (\n        <Tooltip title={tip} placement=\"top\">\n          <IconButton aria-label=\"copy\" onClick={handleCopy}>\n            <ContentCopy fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : copyStatus === 'success' ? (\n        <IconButton aria-label=\"copy\">\n          <Done fontSize=\"small\" color=\"success\" />\n        </IconButton>\n      ) : (\n        <IconButton aria-label=\"copy\">\n          <Clear fontSize=\"small\" color=\"error\" />\n        </IconButton>\n      )}\n    </>\n  )\n}\n\nexport default CopyComponent\n"],"mappings":"gcAAA,OAASA,KAAK,CAAEC,WAAW,CAAEC,IAAI,KAAQ,qBAAqB,CAC9D,OAASC,UAAU,CAAEC,OAAO,KAAQ,eAAe,CACnD,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,OAASC,eAAe,KAAQ,SAAS,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEzC,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAsB,IAAhB,CAAAC,GAAG,CAAAD,IAAA,CAAHC,GAAG,CAAEC,IAAI,CAAAF,IAAA,CAAJE,IAAI,CAChC,IAAAC,SAAA,CAAoCV,QAAQ,CAAC,SAAS,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhDG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAEhC,GAAM,CAAAI,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIC,MAAM,CAAK,CACzCF,aAAa,CAACE,MAAM,CAAC,CACrBC,UAAU,CAAC,iBAAM,CAAAH,aAAa,CAAC,SAAS,CAAC,GAAE,IAAI,CAAC,CAClD,CAAC,CAED,GAAM,CAAAI,UAAU,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,KAAK,MAAAC,UAAA,CAAAC,OAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAC7BP,KAAK,CAACQ,eAAe,CAAC,CAAC,CACjBP,UAAU,CAAGQ,MAAM,CAACxB,IAAI,SAAJA,IAAI,UAAJA,IAAI,CAAI,EAAE,CAAC,CAAAoB,QAAA,CAAAE,IAAA,SACf,CAAA9B,eAAe,CAACwB,UAAU,CAAC,QAA3CC,OAAO,CAAAG,QAAA,CAAAK,IAAA,CACbnB,sBAAsB,CAACW,OAAO,CAAG,SAAS,CAAG,QAAQ,CAAC,yBAAAG,QAAA,CAAAM,IAAA,MAAAZ,OAAA,GACvD,kBALK,CAAAL,UAAUA,CAAAkB,EAAA,SAAAjB,KAAA,CAAAkB,KAAA,MAAAC,SAAA,OAKf,CAED,mBACEnC,IAAA,CAAAE,SAAA,EAAAkC,QAAA,CACG1B,UAAU,GAAK,SAAS,cACvBV,IAAA,CAACL,OAAO,EAAC0C,KAAK,CAAEhC,GAAI,CAACiC,SAAS,CAAC,KAAK,CAAAF,QAAA,cAClCpC,IAAA,CAACN,UAAU,EAAC,aAAW,MAAM,CAAC6C,OAAO,CAAExB,UAAW,CAAAqB,QAAA,cAChDpC,IAAA,CAACR,WAAW,EAACgD,QAAQ,CAAC,OAAO,CAAE,CAAC,CACtB,CAAC,CACN,CAAC,CACR9B,UAAU,GAAK,SAAS,cAC1BV,IAAA,CAACN,UAAU,EAAC,aAAW,MAAM,CAAA0C,QAAA,cAC3BpC,IAAA,CAACP,IAAI,EAAC+C,QAAQ,CAAC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAE,CAAC,CAC/B,CAAC,cAEbzC,IAAA,CAACN,UAAU,EAAC,aAAW,MAAM,CAAA0C,QAAA,cAC3BpC,IAAA,CAACT,KAAK,EAACiD,QAAQ,CAAC,OAAO,CAACC,KAAK,CAAC,OAAO,CAAE,CAAC,CAC9B,CACb,CACD,CAAC,CAEP,CAAC,CAED,cAAe,CAAAtC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}