[tool:pytest]
# Pytest configuration file - Agent Runtime module tests

# Test discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --show-capture=no
    --durations=10
    --envfile=.env
    --asyncio-mode=auto

# Marker definitions
markers =
    unit: Unit tests - Fast execution, no external dependencies
    integration: Integration tests - Test component interactions
    performance: Performance tests - Load, concurrency, memory tests
    network: Network tests - Require network connection
    slow: Slow tests - Long-running tests
    compatibility: Compatibility tests - Cross-version, API compatibility

# Async test configuration
asyncio_mode = auto


# Coverage configuration
[coverage:run]
source = ppio_sandbox.agent_runtime.runtime
omit = 
    */tests/*
    */conftest.py
    */__pycache__/*
    */.*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
