[project]
name = "ftmq"
version = "4.3.0"
description = "followthemoney query dsl and io helpers"
authors = [{ name = "Simon WÃ¶rpel", email = "simon.woerpel@pm.me" }]
license = "AGPLv3+"
readme = "README.md"
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.11,<4"
dependencies = [
    "anystore (>=0.4.0,<0.5.0)",
    "followthemoney (>=4.3.0,<5.0.0)",
    "nomenklatura (>=4.1.9,<5.0.0)",
    "rigour (>=1.3.13,<2.0.0)",
    "click (>=8.2.1,<9.0.0)",
    "click-default-group (>=1.2.4,<2.0.0)",
    "orjson (>=3.10.18,<4.0.0)",
    "pyicu (>=2.15.2,<3.0.0)",
    "pydantic (>=2.11.3,<3.0.0)",
    "pycountry (>=24.6.1,<25.0.0)",
]

[project.optional-dependencies]
level = ["plyvel (>=1.5.1,<2.0.0)"]
sql = ["sqlalchemy (>=2.0.36,<3.0.0)"]
postgres = ["sqlalchemy (>=2.0.36,<3.0.0)", "psycopg[pool] (>=3.2.9,<4.0.0)"]
redis = ["redis (>=5.2.1,<6.0.0)", "fakeredis (>=2.26.2,<3.0.0)"]
lake = [
    "duckdb (>=1.4.1,<2.0.0)",
    "pandas (>=2.3.3,<3.0.0)",
    "deltalake (>=1.2.0,<2.0.0)",
    "pyarrow (>=21.0.0,<22.0.0)",
]
aleph = ["furl (>=2.1.4,<3.0.0)", "alephclient (>=2.6.0,<3.0.0)"]

[project.scripts]
ftmq = "ftmq.cli:cli"

[project.urls]
Homepage = "https://docs.investigraph.dev/lib/ftmq"
Documentation = "https://docs.investigraph.dev/lib/ftmq"
Repository = "https://github.com/dataresearchcenter/ftmq"
Issues = "https://github.com/dataresearchcenter/ftmq/issues"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.3,<9.0.0"
pytest-cov = ">=4.1,<8.0"
pytest-env = "^1.1.1"
black = ">=23.11,<26.0"
isort = "^6.1.0"
mypy = "^1.17.1"
pre-commit = "^4.0.1"
flake8 = ">=6.1,<8.0"
ipdb = "^0.13.13"
bump2version = "^1.0.1"
mkdocs = "^1.6.1"
mkdocs-autorefs = "^1.4.3"
mkdocstrings-python = "^1.18.2"
mkdocs-material = "^9.6.18"
mkdocs-click = "^0.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest_env]
NOMENKLATURA_STATEMENT_TABLE = "test_table"
NOMENKLATURA_DB_URL = "sqlite:///:memory:"
DEBUG = 1
MAX_SQL_AGG_GROUPS = 11
