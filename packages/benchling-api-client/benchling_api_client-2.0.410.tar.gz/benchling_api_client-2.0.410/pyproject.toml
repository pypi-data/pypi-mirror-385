[tool.poetry]
name = "benchling-api-client"
version = "2.0.410"
description = "Autogenerated Python client from OpenAPI Python Client generator"
authors = ["Benchling Support <support@benchling.com>"]
packages = [{include = "benchling_api_client"}]
include = [
    "LICENSE",
    "benchling_api_client/py.typed",
    "benchling_api_client/benchling_client.py",
    "benchling_api_client/client.py",
    "benchling_api_client/extensions.py",
    "benchling_api_client/types.py"
]
license = "Apache-2.0"
readme = "README.md"

[[tool.poetry.source]]
name = "codeartifact"
url = "https://benchling-282204485168.d.codeartifact.us-west-2.amazonaws.com/pypi/shared-packages-pypi/simple/"
priority = "primary"

[[tool.poetry.source]]
name = 'pypi_'
url = 'https://pypi.org/simple'
priority = "supplemental"

[tool.poetry.dependencies]
python = "^3.9"
backoff = ">=1.10.0, <3.0"
typing-extensions = ">=3.7.4, <5.0"
dataclasses-json = "^0.5.2"
httpx = ">=0.23.0"
attrs = ">=20.1.0"
python-dateutil = "^2.8.0"

[tool.poetry.dev-dependencies]
black = "20.8b1"
isort = "^5.1.4"
pre-commit = "^2.6.0"
ipython = "^7.16.1"
mypy = "^0.950"
taskipy = "^1.6.0"
Jinja2 = "^3.1.0"
toml = "^0.10.2"
packaging = "^20.9"
coverage = "^5.5"
typed-ast = "^1.5.0"
benchling-openapi-python-client = "1.0.9"
pytest = "^7.1.3"

[tool.taskipy.tasks]
unit = "python3 -m pytest -s tests/scripts/"
generate_api_client = "./client_gen/create-client.py"
delete_api_client = "rm -fr benchling_api_client"

[tool.black]
line-length=110
exclude = '''
^/(
  vendor
)
'''

[tool.isort]
combine_as_imports=true
default_section="THIRDPARTY"
force_alphabetical_sort_within_sections=true
force_sort_within_sections=true
include_trailing_comma=true
known_first_party=["benchling_api"]
known_third_party=["attr", "backoff", "dataclasses_json", "dateutil", "httpx", "jinja2", "packaging", "toml", "typing_extensions"]
line_length=110
multi_line_output=3
order_by_type=false
skip=["vendor", "client_gen/templates", "tests/unit/generation/golden_record"]

[tool.pytest.ini_options]
addopts = '--strict-markers --strict-config'
xfail_strict = true

[build-system]
requires = ["poetry>=1.8,<2.0"]
build-backend = "poetry.masonry.api"
