Metadata-Version: 2.4
Name: dfvfs
Version: 20251019
Summary: Digital Forensics Virtual File System (dfVFS).
Home-page: https://github.com/log2timeline/dfvfs
Maintainer: Log2Timeline maintainers
Maintainer-email: log2timeline-maintainers@googlegroups.com
License: Apache License, Version 2.0
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Requires-Python: >=3.9
Description-Content-Type: text/plain
License-File: ACKNOWLEDGEMENTS
License-File: AUTHORS
License-File: LICENSE
License-File: README
Requires-Dist: PyYAML>=3.10
Requires-Dist: dfdatetime>=20221112
Requires-Dist: dtfabric>=20230518
Requires-Dist: libbde-python>=20220121
Requires-Dist: libcaes-python>=20240114
Requires-Dist: libewf-python>=20131210
Requires-Dist: libfcrypto-python>=20240114
Requires-Dist: libfsapfs-python>=20220709
Requires-Dist: libfsext-python>=20220829
Requires-Dist: libfsfat-python>=20220925
Requires-Dist: libfshfs-python>=20220831
Requires-Dist: libfsntfs-python>=20211229
Requires-Dist: libfsxfs-python>=20220829
Requires-Dist: libfvde-python>=20220121
Requires-Dist: libfwnt-python>=20210717
Requires-Dist: libluksde-python>=20220121
Requires-Dist: libmodi-python>=20210405
Requires-Dist: libphdi-python>=20220228
Requires-Dist: libqcow-python>=20201213
Requires-Dist: libsigscan-python>=20230109
Requires-Dist: libsmdev-python>=20140529
Requires-Dist: libsmraw-python>=20140612
Requires-Dist: libvhdi-python>=20201014
Requires-Dist: libvmdk-python>=20140421
Requires-Dist: libvsapm-python>=20230506
Requires-Dist: libvsgpt-python>=20211115
Requires-Dist: libvshadow-python>=20160109
Requires-Dist: libvslvm-python>=20160109
Requires-Dist: pytsk3>=20210419
Requires-Dist: xattr>=0.7.2; platform_system != "Windows"
Dynamic: license-file

dfVFS, or Digital Forensics Virtual File System, provides read-only access to file-system objects from various storage media types and file formats. The goal of dfVFS is to provide a generic interface for accessing file-system objects, for which it uses several back-ends that provide the actual implementation of the various storage media types, volume systems and file systems.
