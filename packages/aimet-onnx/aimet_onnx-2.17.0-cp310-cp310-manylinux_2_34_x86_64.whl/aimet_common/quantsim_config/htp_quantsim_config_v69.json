{
  "defaults":
  {
    "hw_version": "V69",
    "ops":
    {
      "is_output_quantized": "True"
    },
    "params":
    {
      "is_quantized": "True",
      "is_symmetric": "True"
    },
    "per_channel_quantization": "True",
    "strict_symmetric": "False",
    "unsigned_symmetric": "False"
  },

  "params":
  {
    "bias":
    {
      "is_quantized": "False"
    }
  },

  "op_type":
  {
    "Cast":
    {
      "is_output_quantized": "False"
    },
    "BatchPermutation":
    {
      "is_output_quantized": "False"
    },
    "ChannelShuffle":
    {
      "is_output_quantized": "False"
    },
    "CropAndResize":
    {
      "is_output_quantized": "False"
    },
    "Gather":
    {
      "is_output_quantized": "False",
      "per_channel_quantization": "False"
    },
    "Gemm":
    {
      "per_channel_quantization": "False"
    },
    "Upsample":
    {
      "is_output_quantized": "False"
    },
    "NonMaxSuppression":
    {
      "is_output_quantized": "False"
    },
    "Tanh":
    {
      "encoding_constraints":
      {
        "min": -1.0,
        "max": 1.0
      }
    },
    "Relu":
    {
      "encoding_constraints":
      {
        "min": 0.0
      }
    },
    "Mean":
    {
      "is_output_quantized": "False"
    },
    "RMSNormalization":
    {
      "per_channel_quantization": "False",
      "params": {
        "weight": {
          "is_symmetric": "False"
        }
      }
    },
    "LayerNormalization":
    {
      "per_channel_quantization": "False",
      "params": {
        "weight": {
          "is_symmetric": "False"
        }
      }
    },
    "BatchNormalization":
    {
      "per_channel_quantization": "False",
      "params": {
        "running_mean": {
          "is_quantized": "False"
        },
        "running_var": {
          "is_quantized": "False"
        }
      }
    },
    "InstanceNormalization":
    {
      "per_channel_quantization": "False",
      "params": {
        "weight": {
          "is_symmetric": "False"
        }
      }
    },
    "Shape":
    {
      "is_output_quantized" : "False"
    },
    "If":
    {
      "is_output_quantized" : "False"
    }
  },

  "supergroup_pass_list":
  [
    "LayerNormalization",
    "RMSNormalization",
    "MatmulAdd"
  ],
  "supergroups":
  [
    {
      "op_list": ["ConvTranspose", "Relu"]
    },
    {
      "op_list": ["Add", "Relu"]
    },
    {
      "op_list": ["Gemm", "Relu"]
    }
  ],

  "model_input":
  {
    "is_input_quantized": "True"
  },

  "model_output":
  {}
}
