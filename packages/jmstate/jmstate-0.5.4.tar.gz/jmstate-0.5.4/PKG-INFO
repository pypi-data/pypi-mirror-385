Metadata-Version: 2.4
Name: jmstate
Version: 0.5.4
Summary: Joint modeling with automatic differentiation
Author-email: FÃ©lix Laplante <felixlaplante0@proton.me>
Project-URL: Source, https://gitlab.com/felixlaplante0/jmstate
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: torch
Requires-Dist: matplotlib
Requires-Dist: rich
Requires-Dist: pydantic
Requires-Dist: xxhash
Requires-Dist: tqdm
Dynamic: license-file

# ðŸ“¦ jmstate

**jmstate** is a Python package for **multi-state nonlinear joint modeling**.  
It leverages **PyTorch** for automatic differentiation and vectorized computation, making it efficient and scalable. The package provides a flexible framework where you can use **neural networks as regression and link functions**, while still offering simpler built-in options like parametric baseline hazards.

With **jmstate**, you can model longitudinal data jointly with multi-state transitions (e.g. health progression), capture nonlinear effects, and perform inference in complex real-world settings.

---

## âœ¨ Features

- **Multi-State Joint Modeling**  
  Supports subjects moving through multiple states with transition intensities that depend on longitudinal trajectories and covariates.

- **Nonlinear Flexibility**  
  Use neural networks (or any PyTorch model) as regression or link functions.

- **Built-in Tools**  
  Includes default baseline hazards, regression, link functions, and analysis utilities.

- **Automatic Differentiation & GPU Support**  
  Powered by PyTorch for efficient gradient computation and vectorization.

- **Analysis & Visualization**  
  Tools for state occupancy probabilities, hazard estimation, and residual diagnostics.

---

## ðŸš€ Installation

```bash
pip install jmstate
```

---

## ðŸ“– Learn More

For tutorials, API reference, visit the official site:  
ðŸ‘‰ [jmstate Documentation](https://felixlaplante0.gitlab.io/jmstate)
