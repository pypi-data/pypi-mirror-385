[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nexpylib"
version = "0.1.0"
description = "Transitive synchronization and shared-state fusion for Python through Nexus fusion and atomic internal synchronization"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Benedikt Axel Brandes", email = "benedikt.brandes@me.com"}
]
maintainers = [
    {name = "Benedikt Axel Brandes", email = "benedikt.brandes@me.com"}
]
keywords = ["reactive", "binding", "data-binding", "synchronization", "nexus", "fusion", "observable", "gui", "reactive-programming"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: User Interfaces",
]
requires-python = ">=3.13"
dependencies = [
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/babrandes/nexpylib"
Documentation = "https://nexpylib.readthedocs.io/"
Repository = "https://github.com/babrandes/nexpylib.git"
"Bug Tracker" = "https://github.com/babrandes/nexpylib/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
addopts = [
    "--strict-markers",
    "--strict-config",
]

[tool.pyright]
include = ["src"]
exclude = [
    "**/__pycache__",
    "**/node_modules",
    "build",
    "dist",
    ".git"
]
venvPath = "."
venv = ".venv"
pythonVersion = "3.13"
pythonPlatform = "All"

# Strict mode settings
typeCheckingMode = "strict"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true

# Additional strict checks
reportMissingImports = "error"
reportMissingTypeStubs = "warning"
reportUnusedImport = "warning"
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "error"
reportWildcardImportFromLibrary = "error"
reportOptionalSubscript = "error"
reportOptionalMemberAccess = "error"
reportOptionalCall = "error"
reportOptionalIterable = "error"
reportOptionalContextManager = "error"
reportOptionalOperand = "error"
reportTypedDictNotRequiredAccess = "error"
reportUntypedFunctionDecorator = "warning"
reportUntypedClassDecorator = "warning"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"
reportPrivateUsage = "warning"
reportConstantRedefinition = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportInconsistentConstructor = "error"
reportOverlappingOverload = "error"
reportMissingSuperCall = "warning"
reportUninitializedInstanceVariable = "error"
reportInvalidStringEscapeSequence = "error"
reportUnknownParameterType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownVariableType = "warning"
reportUnknownMemberType = "warning"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportInvalidTypeVarUse = "error"
reportCallInDefaultInitializer = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryContains = "warning"
reportImplicitStringConcatenation = "warning"
reportUnusedCallResult = "none"
reportUnusedCoroutine = "error"
reportUnusedExpression = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = "warning"
reportShadowedImports = "error"

# Execution environments - relax rules for test files
[[tool.pyright.executionEnvironments]]
root = "tests"
reportUninitializedInstanceVariable = "none"
