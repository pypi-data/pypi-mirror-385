Metadata-Version: 2.1
Name: ducc0
Version: 0.39.1
Summary: Distinctly useful code collection: contains efficient algorithms for Fast Fourier (and related) transforms, spherical harmonic transforms involving very general spherical grids, gridding/degridding tools for radio interferometry, 4pi spherical convolution operators and much more.
Author-Email: Martin Reinecke <martin@mpa-garching.mpg.de>
License:                     GNU GENERAL PUBLIC LICENSE
                                Version 2, June 1991
         
          Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>
          51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
          Everyone is permitted to copy and distribute verbatim copies
          of this license document, but changing it is not allowed.
         
                                     Preamble
         
           The licenses for most software are designed to take away your
         freedom to share and change it.  By contrast, the GNU General Public
         License is intended to guarantee your freedom to share and change free
         software--to make sure the software is free for all its users.  This
         General Public License applies to most of the Free Software
         Foundation's software and to any other program whose authors commit to
         using it.  (Some other Free Software Foundation software is covered by
         the GNU Lesser General Public License instead.)  You can apply it to
         your programs, too.
         
           When we speak of free software, we are referring to freedom, not
         price.  Our General Public Licenses are designed to make sure that you
         have the freedom to distribute copies of free software (and charge for
         this service if you wish), that you receive source code or can get it
         if you want it, that you can change the software or use pieces of it
         in new free programs; and that you know you can do these things.
         
           To protect your rights, we need to make restrictions that forbid
         anyone to deny you these rights or to ask you to surrender the rights.
         These restrictions translate to certain responsibilities for you if you
         distribute copies of the software, or if you modify it.
         
           For example, if you distribute copies of such a program, whether
         gratis or for a fee, you must give the recipients all the rights that
         you have.  You must make sure that they, too, receive or can get the
         source code.  And you must show them these terms so they know their
         rights.
         
           We protect your rights with two steps: (1) copyright the software, and
         (2) offer you this license which gives you legal permission to copy,
         distribute and/or modify the software.
         
           Also, for each author's protection and ours, we want to make certain
         that everyone understands that there is no warranty for this free
         software.  If the software is modified by someone else and passed on, we
         want its recipients to know that what they have is not the original, so
         that any problems introduced by others will not reflect on the original
         authors' reputations.
         
           Finally, any free program is threatened constantly by software
         patents.  We wish to avoid the danger that redistributors of a free
         program will individually obtain patent licenses, in effect making the
         program proprietary.  To prevent this, we have made it clear that any
         patent must be licensed for everyone's free use or not licensed at all.
         
           The precise terms and conditions for copying, distribution and
         modification follow.
         
                             GNU GENERAL PUBLIC LICENSE
            TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
         
           0. This License applies to any program or other work which contains
         a notice placed by the copyright holder saying it may be distributed
         under the terms of this General Public License.  The "Program", below,
         refers to any such program or work, and a "work based on the Program"
         means either the Program or any derivative work under copyright law:
         that is to say, a work containing the Program or a portion of it,
         either verbatim or with modifications and/or translated into another
         language.  (Hereinafter, translation is included without limitation in
         the term "modification".)  Each licensee is addressed as "you".
         
         Activities other than copying, distribution and modification are not
         covered by this License; they are outside its scope.  The act of
         running the Program is not restricted, and the output from the Program
         is covered only if its contents constitute a work based on the
         Program (independent of having been made by running the Program).
         Whether that is true depends on what the Program does.
         
           1. You may copy and distribute verbatim copies of the Program's
         source code as you receive it, in any medium, provided that you
         conspicuously and appropriately publish on each copy an appropriate
         copyright notice and disclaimer of warranty; keep intact all the
         notices that refer to this License and to the absence of any warranty;
         and give any other recipients of the Program a copy of this License
         along with the Program.
         
         You may charge a fee for the physical act of transferring a copy, and
         you may at your option offer warranty protection in exchange for a fee.
         
           2. You may modify your copy or copies of the Program or any portion
         of it, thus forming a work based on the Program, and copy and
         distribute such modifications or work under the terms of Section 1
         above, provided that you also meet all of these conditions:
         
             a) You must cause the modified files to carry prominent notices
             stating that you changed the files and the date of any change.
         
             b) You must cause any work that you distribute or publish, that in
             whole or in part contains or is derived from the Program or any
             part thereof, to be licensed as a whole at no charge to all third
             parties under the terms of this License.
         
             c) If the modified program normally reads commands interactively
             when run, you must cause it, when started running for such
             interactive use in the most ordinary way, to print or display an
             announcement including an appropriate copyright notice and a
             notice that there is no warranty (or else, saying that you provide
             a warranty) and that users may redistribute the program under
             these conditions, and telling the user how to view a copy of this
             License.  (Exception: if the Program itself is interactive but
             does not normally print such an announcement, your work based on
             the Program is not required to print an announcement.)
         
         These requirements apply to the modified work as a whole.  If
         identifiable sections of that work are not derived from the Program,
         and can be reasonably considered independent and separate works in
         themselves, then this License, and its terms, do not apply to those
         sections when you distribute them as separate works.  But when you
         distribute the same sections as part of a whole which is a work based
         on the Program, the distribution of the whole must be on the terms of
         this License, whose permissions for other licensees extend to the
         entire whole, and thus to each and every part regardless of who wrote it.
         
         Thus, it is not the intent of this section to claim rights or contest
         your rights to work written entirely by you; rather, the intent is to
         exercise the right to control the distribution of derivative or
         collective works based on the Program.
         
         In addition, mere aggregation of another work not based on the Program
         with the Program (or with a work based on the Program) on a volume of
         a storage or distribution medium does not bring the other work under
         the scope of this License.
         
           3. You may copy and distribute the Program (or a work based on it,
         under Section 2) in object code or executable form under the terms of
         Sections 1 and 2 above provided that you also do one of the following:
         
             a) Accompany it with the complete corresponding machine-readable
             source code, which must be distributed under the terms of Sections
             1 and 2 above on a medium customarily used for software interchange; or,
         
             b) Accompany it with a written offer, valid for at least three
             years, to give any third party, for a charge no more than your
             cost of physically performing source distribution, a complete
             machine-readable copy of the corresponding source code, to be
             distributed under the terms of Sections 1 and 2 above on a medium
             customarily used for software interchange; or,
         
             c) Accompany it with the information you received as to the offer
             to distribute corresponding source code.  (This alternative is
             allowed only for noncommercial distribution and only if you
             received the program in object code or executable form with such
             an offer, in accord with Subsection b above.)
         
         The source code for a work means the preferred form of the work for
         making modifications to it.  For an executable work, complete source
         code means all the source code for all modules it contains, plus any
         associated interface definition files, plus the scripts used to
         control compilation and installation of the executable.  However, as a
         special exception, the source code distributed need not include
         anything that is normally distributed (in either source or binary
         form) with the major components (compiler, kernel, and so on) of the
         operating system on which the executable runs, unless that component
         itself accompanies the executable.
         
         If distribution of executable or object code is made by offering
         access to copy from a designated place, then offering equivalent
         access to copy the source code from the same place counts as
         distribution of the source code, even though third parties are not
         compelled to copy the source along with the object code.
         
           4. You may not copy, modify, sublicense, or distribute the Program
         except as expressly provided under this License.  Any attempt
         otherwise to copy, modify, sublicense or distribute the Program is
         void, and will automatically terminate your rights under this License.
         However, parties who have received copies, or rights, from you under
         this License will not have their licenses terminated so long as such
         parties remain in full compliance.
         
           5. You are not required to accept this License, since you have not
         signed it.  However, nothing else grants you permission to modify or
         distribute the Program or its derivative works.  These actions are
         prohibited by law if you do not accept this License.  Therefore, by
         modifying or distributing the Program (or any work based on the
         Program), you indicate your acceptance of this License to do so, and
         all its terms and conditions for copying, distributing or modifying
         the Program or works based on it.
         
           6. Each time you redistribute the Program (or any work based on the
         Program), the recipient automatically receives a license from the
         original licensor to copy, distribute or modify the Program subject to
         these terms and conditions.  You may not impose any further
         restrictions on the recipients' exercise of the rights granted herein.
         You are not responsible for enforcing compliance by third parties to
         this License.
         
           7. If, as a consequence of a court judgment or allegation of patent
         infringement or for any other reason (not limited to patent issues),
         conditions are imposed on you (whether by court order, agreement or
         otherwise) that contradict the conditions of this License, they do not
         excuse you from the conditions of this License.  If you cannot
         distribute so as to satisfy simultaneously your obligations under this
         License and any other pertinent obligations, then as a consequence you
         may not distribute the Program at all.  For example, if a patent
         license would not permit royalty-free redistribution of the Program by
         all those who receive copies directly or indirectly through you, then
         the only way you could satisfy both it and this License would be to
         refrain entirely from distribution of the Program.
         
         If any portion of this section is held invalid or unenforceable under
         any particular circumstance, the balance of the section is intended to
         apply and the section as a whole is intended to apply in other
         circumstances.
         
         It is not the purpose of this section to induce you to infringe any
         patents or other property right claims or to contest validity of any
         such claims; this section has the sole purpose of protecting the
         integrity of the free software distribution system, which is
         implemented by public license practices.  Many people have made
         generous contributions to the wide range of software distributed
         through that system in reliance on consistent application of that
         system; it is up to the author/donor to decide if he or she is willing
         to distribute software through any other system and a licensee cannot
         impose that choice.
         
         This section is intended to make thoroughly clear what is believed to
         be a consequence of the rest of this License.
         
           8. If the distribution and/or use of the Program is restricted in
         certain countries either by patents or by copyrighted interfaces, the
         original copyright holder who places the Program under this License
         may add an explicit geographical distribution limitation excluding
         those countries, so that distribution is permitted only in or among
         countries not thus excluded.  In such case, this License incorporates
         the limitation as if written in the body of this License.
         
           9. The Free Software Foundation may publish revised and/or new versions
         of the General Public License from time to time.  Such new versions will
         be similar in spirit to the present version, but may differ in detail to
         address new problems or concerns.
         
         Each version is given a distinguishing version number.  If the Program
         specifies a version number of this License which applies to it and "any
         later version", you have the option of following the terms and conditions
         either of that version or of any later version published by the Free
         Software Foundation.  If the Program does not specify a version number of
         this License, you may choose any version ever published by the Free Software
         Foundation.
         
           10. If you wish to incorporate parts of the Program into other free
         programs whose distribution conditions are different, write to the author
         to ask for permission.  For software which is copyrighted by the Free
         Software Foundation, write to the Free Software Foundation; we sometimes
         make exceptions for this.  Our decision will be guided by the two goals
         of preserving the free status of all derivatives of our free software and
         of promoting the sharing and reuse of software generally.
         
                                     NO WARRANTY
         
           11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
         FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
         OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
         PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
         OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
         MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
         TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
         PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
         REPAIR OR CORRECTION.
         
           12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
         WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
         REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
         INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
         OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
         TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
         YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
         PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
         POSSIBILITY OF SUCH DAMAGES.
         
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python
Requires-Python: >=3.8
Requires-Dist: numpy>=1.17.0
Description-Content-Type: text/markdown

Distinctly Useful Code Collection (DUCC)
========================================

This is a collection of basic programming tools for numerical computation,
including Fast Fourier Transforms, Spherical Harmonic Transforms, non-equispaced
Fourier transforms, as well as some concrete applications like 4pi convolution
on the sphere and gridding/degridding of radio interferometry data.

The code is written in C++17, but provides a simple and comprehensive Python
interface.

### Requirements

- [Python >= 3.8](https://www.python.org/)
- only when compiling from source: [pybind11](https://github.com/pybind/pybind11)
- only when compiling from source: [nanobind](https://github.com/wjakob/nanobind)
- only when compiling from source: a C++17-capable compiler, e.g.
  - `g++` 7 or later
  - `clang++`
  - MSVC 2019 or later
  - Intel `icpx` (oneAPI compiler series). (Note that the older `icpc` compilers
    are not supported.)

### Sources

The latest version of DUCC can be obtained by cloning the repository via

    git clone https://gitlab.mpcdf.mpg.de/mtr/ducc.git

It can be installed via

    pip3 install .

with optional additional flags, depending on personal preferences.

### Licensing terms
- All source code in this package is released under the terms of the GNU
  General Public License v2 or later.
- Some files (those constituting the FFT component and its internal
  dependencies) are also licensed under the 3-clause BSD license. These files
  contain two sets of licensing headers; the user is free to choose under which
  of those terms they want to use these sources.

### Documentation

Online documentation of the most recent Python interface is available at
https://mtr.pages.mpcdf.de/ducc.

The C++ interface is documented at https://mtr.pages.mpcdf.de/ducc/cpp.
Please note that this interface is not as well documented as the Python one,
and that it should not be considered stable.

### Installation

For best performance (especially on x86 platforms), it is recommended to
compile DUCC from source, optimizing for the specific CPU on the system.
This can be done using the command

    pip3 install --no-binary ducc0 --user ducc0

NOTE: compilation requires the appropriate compilers to be installed (see above)
and can take a few minutes.

Alternatively, a simple

    pip3 install --user ducc0

will install a pre-compiled binary package, which makes the installation process
much quicker and does not require any compilers to be installed on the system.
However, the code will most likely perform significantly worse (by a factor of
two to three for some functions) than a custom built version.

Additionally, pre-compiled binaries are distributed for the following systems:

<a href="https://repology.org/project/python:ducc0/versions">
<img src="https://repology.org/badge/vertical-allrepos/python:ducc0.svg" alt="Packaging status">
</a>

### Building only the C++ part

If you want to use ducc's algorithms in a C++ code, there is a template file
CMakeLists-C++.txt in the repository to help you integrate the library into
your project; this will probably be revised and improved soon.

Please use the C++ interface only as an internal dependency of your projects
and do not install the ducc0 C++ library system-wide, since its interface is
not guaranteed to be stable and in fact expected to change significantly
in the future.

<!---
Installing multiple major versions simultaneously
-------------------------------------------------

The interfaces of the DUCC components are expected to evolve over time; whenever
an interface changes in a manner that is not backwards compatible, the DUCC
major version number will increase. As a consequence it might happen that one
part of a Python code may use an older version of DUCC while at the same time
another part requires a newer version. Since DUCC's major version number is
included in the module name itself (the module is not called `ducc`, but rather
`ducc<X>`), this is not a problem, as multiple DUCC versions can be installed
simultaneously.
The latest patch levels of a given DUCC version will always be available at the
HEAD of the git branch with the respective name. In other words, if you need
the latest incarnation of DUCC 0, this will be on branch "ducc0" of the
git repository, and it will be installed as the package "ducc0".
Later versions will be maintained on new branches and will be installed as
"ducc1" and "ducc2", so that there will be no conflict with potentially
installed older versions.
-->

DUCC components
===============

ducc.fft
--------

This package provides Fast Fourier, trigonometric and Hartley transforms with a
simple Python interface. It is an evolution of `pocketfft` and `pypocketfft`
which are currently used by `numpy` and `scipy`.

The central algorithms are derived from Paul Swarztrauber's
[FFTPACK](http://www.netlib.org/fftpack) code.

### Features
- supports fully complex and half-complex (i.e. complex-to-real and
  real-to-complex) FFTs, discrete sine/cosine transforms and Hartley transforms
- achieves very high accuracy for all transforms
- supports multidimensional arrays and selection of the axes to be transformed
- supports single, double, and long double precision
- makes use of CPU vector instructions, except for short 1D transforms 
- supports prime-length transforms without degrading to O(N**2) performance
- has optional multi-threading support for all transforms except short 1D ones.

### Design decisions and performance characteristics
- there is no explicit plan management to be done by the user, making the
  interface as simple as possible.
  A small number of plans is cached internally, which does not consume much
  memory, since the storage requirement for a plan only scales with the square
  root of the FFT length for large lengths.
- 1D transforms are somewhat slower than those provided by FFTW (if FFTW's
  plan generation overhead is ignored)
- multi-D transforms in double precision perform fairly similar to FFTW with
  FFTW_MEASURE; in single precision `ducc.fft` can be significantly faster.


ducc.nufft
----------

Library for non-uniform FFTs in 1D/2D/3D (all transform types).
The goal is to provide similar or better performance and accuracy than
[FINUFFT](https://github.com/flatironinstitute/finufft), making use of lessons
learned during the implementation of the `wgridder` module (see below).


ducc.sht
--------

This package provides efficient spherical harmonic transforms (SHTs). Its code
is derived from [libsharp](https://arxiv.org/abs/1303.4945), but has been
significantly enhanced.

### Noteworthy features
- very efficient support for spherical harmonic synthesis ("alm2map") operations
  and their adjoint for any grid based on iso-latitude rings with equidistant
  pixels in each of the rings.
- support for the same operations on *entirely arbitrary* spherical grids,
  i.e. without constraints on pixel locations. This is implemented via
  intermediate iso-latitude grids and non-uniform FFTs.
- support for accurate spherical harmonic analyis on certain sub-classes of
  grids (Clenshaw-Curtis, Fejer-1 and McEwen-Wiaux) at band limits beyond those
  for which quadrature weights exist. For details see
  [this note](https://wwwmpa.mpa-garching.mpg.de/~martin/shtnote.pdf).
- iterative approximate spherical harmonic analysis on aritrary grids.
- substantially improved transformation speed (up to a factor of 2) on the
  above mentioned grid geometries for high band limits.
- accelerated recurrences as presented in
  [Ishioka (2018)](https://www.jstage.jst.go.jp/article/jmsj/96/2/96_2018-019/_pdf)
- vector instruction support
- multi-threading support

The code for rotating spherical harmonic coefficients was taken (with some
modifications) from Mikael Slevinsky's
[FastTransforms package](https://github.com/MikaelSlevinsky/FastTransforms).


ducc.healpix
------------

This library provides Python bindings for the most important functionality
related to the [HEALPix](https://arxiv.org/abs/astro-ph/0409513) tesselation,
except for spherical harmonic transforms, which are covered by `ducc.sht`.

The design goals are
- similarity to the interface of the HEALPix C++ library
  (while respecting some Python peculiarities)
- simplicity (no optional function parameters)
- low function calling overhead


ducc.totalconvolve
------------------

Library for high-accuracy 4pi convolution on the sphere, which generates a
total convolution data cube from a set of sky and beam `a_lm` and computes
interpolated values for a given list of detector pointings.
This code has evolved from the original
[totalconvolver](https://arxiv.org/abs/astro-ph/0008227) algorithm
via the [conviqt](https://arxiv.org/abs/1002.1050) code.


### Algorithmic details:
- the code uses `ducc.sht` SHTs and `ducc.fft` FFTs to compute the data cube
- shared-memory parallelization is provided via standard C++ threads.
- for interpolation, the algorithm and kernel described in
  <https://arxiv.org/abs/1808.06736> are used. This allows very efficient
  interpolation with user-adjustable accuracy.


ducc.wgridder
-------------

Library for high-accuracy gridding/degridding of radio interferometry datasets
(code paper available at <https://arxiv.org/abs/2010.10122>).
This code has also been integrated into
[wsclean](https://gitlab.com/aroffringa/wsclean)
(<https://arxiv.org/abs/1407.1943>)
as the `wgridder` component.

### Programming aspects
- shared-memory parallelization via standard C++ threads.
- kernel computation is performed on the fly, avoiding inaccuracies
  due to table lookup and reducing overall memory bandwidth

### Numerical aspects
- uses a generalization of the analytical gridding kernel presented in
  <https://arxiv.org/abs/1808.06736>
- uses the "improved W-stacking method" described in
  <https://arxiv.org/abs/2101.11172>
- in combination these two aspects allow extremely accurate gridding/degridding
  operations (L2 error compared to explicit DFTs can go below 1e-12) with
  reasonable resource consumption


ducc.misc
---------

Various unsorted functionality which will hopefully be categorized in the
future.

This module contains an efficient algorithm for the computation of abscissas and
weights for Gauss-Legendre quadrature. For degrees up to 100, the solutions are
computed in the standard iterative fashion; for higher degrees Ignace Bogaert's
[FastGL algorithm](https://epubs.siam.org/doi/pdf/10.1137/140954969)
is used.
