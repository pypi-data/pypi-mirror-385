[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
dynamic = ["version"]
name = "instrumentman"
authors = [
  { name="MrClock", email="mrclock8163@gmail.com" },
]
description = "Surveying instrument automation applications."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pyserial ~= 3.5.0",
    "geocompy ~= 0.14.0",
    "rich >= 13.9",
    "textual >= 3.2.0",
    "rapidfuzz ~= 3.13.0",
    "jsonschema ~= 4.21",
    "jmespath ~= 1.0.1",
    "toml ~= 0.10.2",
    "PyYAML ~= 6.0.2",
    "numpy ~= 2.0",
    "pillow ~= 11.0",
    "cloup ~= 3.0.7",
    "click-extra ~= 5.0.2"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Terminals :: Serial",
    "Typing :: Typed"
]
license = "MIT"
license-files = ["LICEN[CS]E*"]
keywords = ["geocom", "surveying", "leica", "totalstation", "monitoring", "automation", "gsi"]

[project.urls]
Documentation = "https://instrumentman.readthedocs.io"
Repository = "https://github.com/MrClock8163/Instrumentman"
Issues = "https://github.com/MrClock8163/Instrumentman/issues"
Changelog = "https://instrumentman.readthedocs.io/latest/changelog"

[project.scripts]
iman = "instrumentman:cli"

[project.optional-dependencies]
all = ["instrumentman[panorama]"]
panorama = [
    "opencv-python~=4.8"
]

[dependency-groups]
testing = [
    "pytest ~= 8.4.1"
]
linting = [
    {include-group = "testing"},
    "types-pyserial ~= 3.5.0.20250326",
    "types-jsonschema ~= 4.21.0.20240331",
    "types-jmespath >= 1.0.2.4",
    "types-toml >= 0.10.8.20240310",
    "types-PyYAML >= 6.0.12.20250516",
    "mypy >= 1.17.1",
    "flake8 >= 7.3.0"
]
development = [
    {include-group = "linting"}
]
documentation = [
    "sphinx ~= 8.2.3",
    "sphinx-notfound-page ~= 1.1.0",
    "sphinx-last-updated-by-git ~= 0.3.8",
    "sphinx-immaterial ~= 0.13.5",
    "sphinx-mdinclude ~= 0.6.2",
    "sphinx-click ~= 6.0.0"
]

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/instrumentman/_version.py"

[tool.pytest.ini_options]
addopts = ["-ra", "-v", "--color=yes"]
testpaths = ["tests"]

[tool.mypy]
strict = true
