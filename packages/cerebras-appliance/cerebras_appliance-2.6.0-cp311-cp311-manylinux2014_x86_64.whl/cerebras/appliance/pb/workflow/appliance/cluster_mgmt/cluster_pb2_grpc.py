# Copyright 2016-2024 Cerebras Systems
# SPDX-License-Identifier: BSD-3-Clause

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cerebras.appliance.pb.workflow.appliance.cluster_mgmt import cluster_pb2 as cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2


class ClusterManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitCompileJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/InitCompileJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileJobResponse.FromString,
                )
        self.FinalizeCompileJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/FinalizeCompileJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileResultRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileResultResponse.FromString,
                )
        self.InitExecuteJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/InitExecuteJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ExecuteJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ExecuteJobResponse.FromString,
                )
        self.PollIngress = channel.unary_stream(
                '/cluster.cluster_mgmt_pb.ClusterManagement/PollIngress',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressResponse.FromString,
                )
        self.PollIngressV2 = channel.unary_stream(
                '/cluster.cluster_mgmt_pb.ClusterManagement/PollIngressV2',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressResponse.FromString,
                )
        self.GetJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobResponse.FromString,
                )
        self.DeleteJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/DeleteJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteJobResponse.FromString,
                )
        self.CancelJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/CancelJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobResponse.FromString,
                )
        self.CancelJobV2 = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/CancelJobV2',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobResponse.FromString,
                )
        self.InitWorkflow = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/InitWorkflow',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitWorkflowRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitWorkflowResponse.FromString,
                )
        self.InitImageBuildJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/InitImageBuildJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitImageBuildRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.FromString,
                )
        self.GetImageBuildJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetImageBuildJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.FromString,
                )
        self.DeleteImageBuildJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/DeleteImageBuildJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.FromString,
                )
        self.GetServerVersions = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetServerVersions',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerVersionsRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerVersionsResponse.FromString,
                )
        self.SendClientHeartbeat = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/SendClientHeartbeat',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatResponse.FromString,
                )
        self.HeartbeatV2 = channel.stream_stream(
                '/cluster.cluster_mgmt_pb.ClusterManagement/HeartbeatV2',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatResponse.FromString,
                )
        self.HasMultiMgmtNodes = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/HasMultiMgmtNodes',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HasMultiMgmtNodesRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HasMultiMgmtNodesResponse.FromString,
                )
        self.GetJobMeta = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetJobMeta',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobMetaRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobMetaResponse.FromString,
                )
        self.InitSdkCompileJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/InitSdkCompileJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkCompileJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkCompileJobResponse.FromString,
                )
        self.InitSdkExecuteJob = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/InitSdkExecuteJob',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkExecuteJobRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkExecuteJobResponse.FromString,
                )
        self.IsMessageBrokerAvailable = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/IsMessageBrokerAvailable',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.MessageBrokerAvailabilityCheckRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.MessageBrokerAvailabilityCheckResponse.FromString,
                )
        self.SubscribeMessages = channel.unary_stream(
                '/cluster.cluster_mgmt_pb.ClusterManagement/SubscribeMessages',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SubscribeMessagesRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SubscribeMessagesResponse.FromString,
                )
        self.PublishMessages = channel.stream_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/PublishMessages',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.PublishMessagesRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.PublishMessagesResponse.FromString,
                )
        self.GetServerConfig = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetServerConfig',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerConfigRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerConfigResponse.FromString,
                )
        self.GetJobInitStatus = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetJobInitStatus',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobInitStatusRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobInitStatusResponse.FromString,
                )
        self.GetJobEvents = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetJobEvents',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobEventsRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobEventsResponse.FromString,
                )
        self.ReserveJobResources = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/ReserveJobResources',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReserveJobResourcesRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReserveJobResourcesResponse.FromString,
                )
        self.ReleaseJobResources = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/ReleaseJobResources',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseJobResourcesRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseJobResourcesResponse.FromString,
                )
        self.ReleaseWorkflowResources = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/ReleaseWorkflowResources',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseWorkflowResourcesRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseWorkflowResourcesResponse.FromString,
                )
        self.GetReservationStatus = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetReservationStatus',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetReservationStatusRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetReservationStatusResponse.FromString,
                )
        self.CheckStorageConnectivity = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/CheckStorageConnectivity',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CheckStorageConnectivityRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CheckStorageConnectivityResponse.FromString,
                )
        self.ReportMetrics = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/ReportMetrics',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReportMetricRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReportMetricResponse.FromString,
                )
        self.CreateWorkloadManager = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/CreateWorkloadManager',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CreateWorkloadManagerRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CreateWorkloadManagerResponse.FromString,
                )
        self.GetWorkloadManager = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/GetWorkloadManager',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetWorkloadManagerRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetWorkloadManagerResponse.FromString,
                )
        self.UpdateWorkloadManager = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/UpdateWorkloadManager',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.UpdateWorkloadManagerRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.UpdateWorkloadManagerResponse.FromString,
                )
        self.DeleteWorkloadManager = channel.unary_unary(
                '/cluster.cluster_mgmt_pb.ClusterManagement/DeleteWorkloadManager',
                request_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteWorkloadManagerRequest.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteWorkloadManagerResponse.FromString,
                )


class ClusterManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitCompileJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeCompileJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitExecuteJob(self, request, context):
        """Creates a training job and submits it to a job queue for processing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PollIngress(self, request, context):
        """Not supported any more. Use PollIngressV2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PollIngressV2(self, request, context):
        """This V2 implementation adopts a leasing mechanism, which should provide
        better coverage to liveness check between cluster client and the appliance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteJob(self, request, context):
        """Delete a job. This request terminates all resources that are associated
        with a job, and removes this job from wsjob list.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJob(self, request, context):
        """Not supported any more. Use CancelJobV2.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJobV2(self, request, context):
        """Cancel a job. This request terminates all running pods and resource locks
        that are associated with a job. The job will remain in the wsjob list.
        This V2 implementation adopts a leasing mechanism, which should provide
        better coverage to liveness check between cluster client and the appliance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitWorkflow(self, request, context):
        """Create a new workflow
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitImageBuildJob(self, request, context):
        """Create an image build job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImageBuildJob(self, request, context):
        """Gets the job status of an image build job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteImageBuildJob(self, request, context):
        """Deletes an existing image build job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerVersions(self, request, context):
        """Return the server versions, including cluster-server and job-operator
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendClientHeartbeat(self, request, context):
        """Send heartbeats to ensure client liveness
        Failing to send heartbeats would eventually cause the job to cancel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HeartbeatV2(self, request_iterator, context):
        """Send heartbeats v2 to report user node metrics + indicate client liveness
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasMultiMgmtNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobMeta(self, request, context):
        """Returns fully populated cluster details, software versions and system versions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitSdkCompileJob(self, request, context):
        """Create a SDK compile job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitSdkExecuteJob(self, request, context):
        """Create a SDK execute job.option
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsMessageBrokerAvailable(self, request, context):
        """Checks if the message broker is available
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMessages(self, request, context):
        """Subscribe messages
        The appliance client subscribes for receving new messages regarding a job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishMessages(self, request_iterator, context):
        """Publish messages
        The individual tasks publishes new messages regarding a job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobInitStatus(self, request, context):
        """Check whether job pods are all in init status and config update done
        Used as signal for init container to proceed to reduce configmap reload cycle
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobEvents(self, request, context):
        """Get the job events for informational purposes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReserveJobResources(self, request, context):
        """Reserve job granted resources after specified job complete for next job reuse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseJobResources(self, request, context):
        """Release reserved job resources after specified job complete
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseWorkflowResources(self, request, context):
        """Release all workflow reserved job resources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReservationStatus(self, request, context):
        """Query total available systems that are actually reservable 
        including the last job reserved healthy ones and any idle healthy ones in session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckStorageConnectivity(self, request, context):
        """Method to check connectivity to an S3 endpoint
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportMetrics(self, request, context):
        """Report metrics for Kubernetes monitoring. This is useful for the user node,
        which lives outside of the Kubernetes cluster
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWorkloadManager(self, request, context):
        """Create a new workload manager deployment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkloadManager(self, request, context):
        """Retrieve status and metadata for an existing workload manager
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWorkloadManager(self, request, context):
        """Update an existing workload manager deployment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWorkloadManager(self, request, context):
        """Delete a workload manager deployment and associated resources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitCompileJob': grpc.unary_unary_rpc_method_handler(
                    servicer.InitCompileJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileJobResponse.SerializeToString,
            ),
            'FinalizeCompileJob': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeCompileJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileResultRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileResultResponse.SerializeToString,
            ),
            'InitExecuteJob': grpc.unary_unary_rpc_method_handler(
                    servicer.InitExecuteJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ExecuteJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ExecuteJobResponse.SerializeToString,
            ),
            'PollIngress': grpc.unary_stream_rpc_method_handler(
                    servicer.PollIngress,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressResponse.SerializeToString,
            ),
            'PollIngressV2': grpc.unary_stream_rpc_method_handler(
                    servicer.PollIngressV2,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressResponse.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobResponse.SerializeToString,
            ),
            'DeleteJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteJobResponse.SerializeToString,
            ),
            'CancelJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobResponse.SerializeToString,
            ),
            'CancelJobV2': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJobV2,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobResponse.SerializeToString,
            ),
            'InitWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.InitWorkflow,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitWorkflowRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitWorkflowResponse.SerializeToString,
            ),
            'InitImageBuildJob': grpc.unary_unary_rpc_method_handler(
                    servicer.InitImageBuildJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitImageBuildRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.SerializeToString,
            ),
            'GetImageBuildJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImageBuildJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.SerializeToString,
            ),
            'DeleteImageBuildJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteImageBuildJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.SerializeToString,
            ),
            'GetServerVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerVersions,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerVersionsRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerVersionsResponse.SerializeToString,
            ),
            'SendClientHeartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.SendClientHeartbeat,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatResponse.SerializeToString,
            ),
            'HeartbeatV2': grpc.stream_stream_rpc_method_handler(
                    servicer.HeartbeatV2,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatResponse.SerializeToString,
            ),
            'HasMultiMgmtNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.HasMultiMgmtNodes,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HasMultiMgmtNodesRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HasMultiMgmtNodesResponse.SerializeToString,
            ),
            'GetJobMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobMeta,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobMetaRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobMetaResponse.SerializeToString,
            ),
            'InitSdkCompileJob': grpc.unary_unary_rpc_method_handler(
                    servicer.InitSdkCompileJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkCompileJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkCompileJobResponse.SerializeToString,
            ),
            'InitSdkExecuteJob': grpc.unary_unary_rpc_method_handler(
                    servicer.InitSdkExecuteJob,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkExecuteJobRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkExecuteJobResponse.SerializeToString,
            ),
            'IsMessageBrokerAvailable': grpc.unary_unary_rpc_method_handler(
                    servicer.IsMessageBrokerAvailable,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.MessageBrokerAvailabilityCheckRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.MessageBrokerAvailabilityCheckResponse.SerializeToString,
            ),
            'SubscribeMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMessages,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SubscribeMessagesRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SubscribeMessagesResponse.SerializeToString,
            ),
            'PublishMessages': grpc.stream_unary_rpc_method_handler(
                    servicer.PublishMessages,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.PublishMessagesRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.PublishMessagesResponse.SerializeToString,
            ),
            'GetServerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerConfig,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerConfigRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerConfigResponse.SerializeToString,
            ),
            'GetJobInitStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobInitStatus,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobInitStatusRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobInitStatusResponse.SerializeToString,
            ),
            'GetJobEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobEvents,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobEventsRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobEventsResponse.SerializeToString,
            ),
            'ReserveJobResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveJobResources,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReserveJobResourcesRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReserveJobResourcesResponse.SerializeToString,
            ),
            'ReleaseJobResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseJobResources,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseJobResourcesRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseJobResourcesResponse.SerializeToString,
            ),
            'ReleaseWorkflowResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseWorkflowResources,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseWorkflowResourcesRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseWorkflowResourcesResponse.SerializeToString,
            ),
            'GetReservationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReservationStatus,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetReservationStatusRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetReservationStatusResponse.SerializeToString,
            ),
            'CheckStorageConnectivity': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStorageConnectivity,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CheckStorageConnectivityRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CheckStorageConnectivityResponse.SerializeToString,
            ),
            'ReportMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportMetrics,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReportMetricRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReportMetricResponse.SerializeToString,
            ),
            'CreateWorkloadManager': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorkloadManager,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CreateWorkloadManagerRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CreateWorkloadManagerResponse.SerializeToString,
            ),
            'GetWorkloadManager': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkloadManager,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetWorkloadManagerRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetWorkloadManagerResponse.SerializeToString,
            ),
            'UpdateWorkloadManager': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWorkloadManager,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.UpdateWorkloadManagerRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.UpdateWorkloadManagerResponse.SerializeToString,
            ),
            'DeleteWorkloadManager': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWorkloadManager,
                    request_deserializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteWorkloadManagerRequest.FromString,
                    response_serializer=cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteWorkloadManagerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cluster.cluster_mgmt_pb.ClusterManagement', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClusterManagement(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitCompileJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/InitCompileJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinalizeCompileJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/FinalizeCompileJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileResultRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CompileResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitExecuteJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/InitExecuteJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ExecuteJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ExecuteJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PollIngress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/PollIngress',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PollIngressV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/PollIngressV2',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetIngressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/DeleteJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/CancelJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelJobV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/CancelJobV2',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CancelJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/InitWorkflow',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitWorkflowRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitWorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitImageBuildJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/InitImageBuildJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.InitImageBuildRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImageBuildJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetImageBuildJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteImageBuildJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/DeleteImageBuildJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ImageBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetServerVersions',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerVersionsRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerVersionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendClientHeartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/SendClientHeartbeat',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HeartbeatV2(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/cluster.cluster_mgmt_pb.ClusterManagement/HeartbeatV2',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasMultiMgmtNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/HasMultiMgmtNodes',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HasMultiMgmtNodesRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.HasMultiMgmtNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetJobMeta',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobMetaRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobMetaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitSdkCompileJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/InitSdkCompileJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkCompileJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkCompileJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitSdkExecuteJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/InitSdkExecuteJob',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkExecuteJobRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SdkExecuteJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsMessageBrokerAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/IsMessageBrokerAvailable',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.MessageBrokerAvailabilityCheckRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.MessageBrokerAvailabilityCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/SubscribeMessages',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SubscribeMessagesRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.SubscribeMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishMessages(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/cluster.cluster_mgmt_pb.ClusterManagement/PublishMessages',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.PublishMessagesRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.PublishMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetServerConfig',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerConfigRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetServerConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobInitStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetJobInitStatus',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobInitStatusRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobInitStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetJobEvents',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobEventsRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetJobEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReserveJobResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/ReserveJobResources',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReserveJobResourcesRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReserveJobResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseJobResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/ReleaseJobResources',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseJobResourcesRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseJobResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseWorkflowResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/ReleaseWorkflowResources',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseWorkflowResourcesRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReleaseWorkflowResourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReservationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetReservationStatus',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetReservationStatusRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetReservationStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckStorageConnectivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/CheckStorageConnectivity',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CheckStorageConnectivityRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CheckStorageConnectivityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/ReportMetrics',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReportMetricRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.ReportMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWorkloadManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/CreateWorkloadManager',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CreateWorkloadManagerRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.CreateWorkloadManagerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWorkloadManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/GetWorkloadManager',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetWorkloadManagerRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.GetWorkloadManagerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWorkloadManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/UpdateWorkloadManager',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.UpdateWorkloadManagerRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.UpdateWorkloadManagerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWorkloadManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cluster.cluster_mgmt_pb.ClusterManagement/DeleteWorkloadManager',
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteWorkloadManagerRequest.SerializeToString,
            cerebras_dot_pb_dot_workflow_dot_appliance_dot_cluster__mgmt_dot_cluster__pb2.DeleteWorkloadManagerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
