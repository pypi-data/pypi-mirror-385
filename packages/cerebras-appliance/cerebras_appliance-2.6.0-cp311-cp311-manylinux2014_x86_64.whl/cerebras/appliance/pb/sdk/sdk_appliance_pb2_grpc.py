# Copyright 2016-2024 Cerebras Systems
# SPDX-License-Identifier: BSD-3-Clause

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cerebras.appliance.pb.sdk import sdk_appliance_pb2 as cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2


class sdk_applianceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.sdk_runtime_create = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_runtime_create',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCreateArgs.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_runtime_start = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_runtime_start',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_runtime_stop = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_runtime_stop',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_runtime_memcpy_h2d = channel.stream_unary(
                '/cerebras.sdk_appliance/sdk_runtime_memcpy_h2d',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.MemcpyH2DParams.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_runtime_memcpy_d2h = channel.unary_stream(
                '/cerebras.sdk_appliance/sdk_runtime_memcpy_d2h',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.MemcpyD2HParams.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkD2HResponse.FromString,
                )
        self.sdk_runtime_get_id = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_runtime_get_id',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetIdParams.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetIdResponse.FromString,
                )
        self.sdk_runtime_call = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_runtime_call',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCallArgs.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_runtime_task_wait = channel.unary_stream(
                '/cerebras.sdk_appliance/sdk_runtime_task_wait',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRuntimeTask.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkTaskDoneResponse.FromString,
                )
        self.sdk_runtime_is_task_done = channel.unary_stream(
                '/cerebras.sdk_appliance/sdk_runtime_is_task_done',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRuntimeTask.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkTaskDoneResponse.FromString,
                )
        self.sdk_compile = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_compile',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCompilerArgs.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_upload_files = channel.stream_unary(
                '/cerebras.sdk_appliance/sdk_upload_files',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactsArgs.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_shutdown = channel.unary_unary(
                '/cerebras.sdk_appliance/sdk_shutdown',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )
        self.sdk_download_files = channel.unary_stream(
                '/cerebras.sdk_appliance/sdk_download_files',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactDownloadArgs.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactResponse.FromString,
                )
        self.sdk_get_symbol_rect = channel.unary_stream(
                '/cerebras.sdk_appliance/sdk_get_symbol_rect',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetSymbolParams.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkD2HResponse.FromString,
                )
        self.sdk_run_command = channel.stream_unary(
                '/cerebras.sdk_appliance/sdk_run_command',
                request_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRunCommandParams.SerializeToString,
                response_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
                )


class sdk_applianceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def sdk_runtime_create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_memcpy_h2d(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_memcpy_d2h(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_get_id(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_call(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_task_wait(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_runtime_is_task_done(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_compile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_upload_files(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_shutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_download_files(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_get_symbol_rect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sdk_run_command(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_sdk_applianceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'sdk_runtime_create': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_runtime_create,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCreateArgs.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_runtime_start': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_runtime_start,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_runtime_stop': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_runtime_stop,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_runtime_memcpy_h2d': grpc.stream_unary_rpc_method_handler(
                    servicer.sdk_runtime_memcpy_h2d,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.MemcpyH2DParams.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_runtime_memcpy_d2h': grpc.unary_stream_rpc_method_handler(
                    servicer.sdk_runtime_memcpy_d2h,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.MemcpyD2HParams.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkD2HResponse.SerializeToString,
            ),
            'sdk_runtime_get_id': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_runtime_get_id,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetIdParams.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetIdResponse.SerializeToString,
            ),
            'sdk_runtime_call': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_runtime_call,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCallArgs.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_runtime_task_wait': grpc.unary_stream_rpc_method_handler(
                    servicer.sdk_runtime_task_wait,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRuntimeTask.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkTaskDoneResponse.SerializeToString,
            ),
            'sdk_runtime_is_task_done': grpc.unary_stream_rpc_method_handler(
                    servicer.sdk_runtime_is_task_done,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRuntimeTask.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkTaskDoneResponse.SerializeToString,
            ),
            'sdk_compile': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_compile,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCompilerArgs.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_upload_files': grpc.stream_unary_rpc_method_handler(
                    servicer.sdk_upload_files,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactsArgs.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.sdk_shutdown,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
            'sdk_download_files': grpc.unary_stream_rpc_method_handler(
                    servicer.sdk_download_files,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactDownloadArgs.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactResponse.SerializeToString,
            ),
            'sdk_get_symbol_rect': grpc.unary_stream_rpc_method_handler(
                    servicer.sdk_get_symbol_rect,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetSymbolParams.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkD2HResponse.SerializeToString,
            ),
            'sdk_run_command': grpc.stream_unary_rpc_method_handler(
                    servicer.sdk_run_command,
                    request_deserializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRunCommandParams.FromString,
                    response_serializer=cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cerebras.sdk_appliance', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class sdk_appliance(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def sdk_runtime_create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_runtime_create',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCreateArgs.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_runtime_start',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_runtime_stop',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_memcpy_h2d(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/cerebras.sdk_appliance/sdk_runtime_memcpy_h2d',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.MemcpyH2DParams.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_memcpy_d2h(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cerebras.sdk_appliance/sdk_runtime_memcpy_d2h',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.MemcpyD2HParams.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkD2HResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_get_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_runtime_get_id',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetIdParams.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_call(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_runtime_call',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCallArgs.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_task_wait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cerebras.sdk_appliance/sdk_runtime_task_wait',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRuntimeTask.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkTaskDoneResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_runtime_is_task_done(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cerebras.sdk_appliance/sdk_runtime_is_task_done',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRuntimeTask.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkTaskDoneResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_compile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_compile',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkCompilerArgs.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_upload_files(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/cerebras.sdk_appliance/sdk_upload_files',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactsArgs.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cerebras.sdk_appliance/sdk_shutdown',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkEmptyMessage.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_download_files(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cerebras.sdk_appliance/sdk_download_files',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactDownloadArgs.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkArtifactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_get_symbol_rect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/cerebras.sdk_appliance/sdk_get_symbol_rect',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkGetSymbolParams.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkD2HResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sdk_run_command(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/cerebras.sdk_appliance/sdk_run_command',
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkRunCommandParams.SerializeToString,
            cerebras_dot_pb_dot_sdk_dot_appliance_dot_sdk__appliance__pb2.SdkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
