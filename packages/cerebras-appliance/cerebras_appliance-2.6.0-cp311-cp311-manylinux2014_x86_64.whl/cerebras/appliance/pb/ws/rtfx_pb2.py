# Copyright 2016-2024 Cerebras Systems
# SPDX-License-Identifier: BSD-3-Clause

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerebras/pb/ws/rtfx.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x63\x65rebras/pb/ws/rtfx.proto\x12\x0b\x63\x65rebras.ws\"\xe1\x08\n\tRtFxProto\x12\x31\n\x03\x63sr\x18\x01 \x01(\x0b\x32\".cerebras.ws.RtFxProto.RtFxCSRListH\x00\x12\x33\n\x06tensor\x18\x02 \x01(\x0b\x32!.cerebras.ws.RtFxProto.RtFxTensorH\x00\x12\x41\n\x0esub_batch_list\x18\x05 \x01(\x0b\x32\'.cerebras.ws.RtFxProto.RtFxSubBatchListH\x00\x12\x33\n\x06scalar\x18\x06 \x01(\x0b\x32!.cerebras.ws.RtFxProto.RtFxScalarH\x00\x12@\n\rmasked_tensor\x18\x07 \x01(\x0b\x32\'.cerebras.ws.RtFxProto.RtFxMaskedTensorH\x00\x12\x31\n\x05\x64type\x18\x04 \x01(\x0e\x32\".cerebras.ws.RtFxProto.ElementType\x1av\n\x07RtFxCSR\x12\t\n\x01r\x18\x01 \x01(\r\x12\t\n\x01\x63\x18\x02 \x01(\r\x12\x0b\n\x03row\x18\x03 \x03(\r\x12\x0b\n\x03\x63ol\x18\x04 \x03(\r\x12\t\n\x01v\x18\x05 \x03(\x02\x12\x13\n\x0b\x64\x65nse_shard\x18\x06 \x01(\x08\x12\x1b\n\x13is_scalar_broadcast\x18\x07 \x01(\x08\x1a;\n\x0bRtFxCSRList\x12,\n\x04tile\x18\x01 \x03(\x0b\x32\x1e.cerebras.ws.RtFxProto.RtFxCSR\x1a\x37\n\nRtFxTensor\x12\r\n\x05shape\x18\x01 \x03(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0c\n\x04name\x18\x03 \x01(\t\x1a\x43\n\x0eRtFxTensorList\x12\x31\n\x06t_tile\x18\x01 \x03(\x0b\x32!.cerebras.ws.RtFxProto.RtFxTensor\x1aL\n\x10RtFxSubBatchList\x12\x38\n\tsub_batch\x18\x01 \x03(\x0b\x32%.cerebras.ws.RtFxProto.RtFxTensorList\x1a\x86\x01\n\x10RtFxMaskedTensor\x12\x31\n\x06tensor\x18\x01 \x01(\x0b\x32!.cerebras.ws.RtFxProto.RtFxTensor\x12/\n\x04mask\x18\x02 \x01(\x0b\x32!.cerebras.ws.RtFxProto.RtFxTensor\x12\x0e\n\x06masked\x18\x03 \x01(\x08\x1a(\n\nRtFxScalar\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\"\xb8\x01\n\x0b\x45lementType\x12\x1a\n\x16PRIMITIVE_TYPE_INVALID\x10\x00\x12\x08\n\x04T_I1\x10\x01\x12\t\n\x05T_I16\x10\x03\x12\t\n\x05T_I32\x10\x04\x12\t\n\x05T_I64\x10\x05\x12\x08\n\x04T_U8\x10\x06\x12\t\n\x05T_U16\x10\x07\x12\t\n\x05T_U32\x10\x08\x12\t\n\x05T_U64\x10\t\x12\t\n\x05T_F16\x10\n\x12\n\n\x06T_BF16\x10\x0f\x12\n\n\x06T_CB16\x10\x10\x12\t\n\x05T_F32\x10\x0b\x12\t\n\x05T_F64\x10\x0c\x42\n\n\x08\x63ontentsJ\x04\x08\x03\x10\x04\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cerebras.pb.ws.rtfx_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _RTFXPROTO._serialized_start=43
  _RTFXPROTO._serialized_end=1164
  _RTFXPROTO_RTFXCSR._serialized_start=397
  _RTFXPROTO_RTFXCSR._serialized_end=515
  _RTFXPROTO_RTFXCSRLIST._serialized_start=517
  _RTFXPROTO_RTFXCSRLIST._serialized_end=576
  _RTFXPROTO_RTFXTENSOR._serialized_start=578
  _RTFXPROTO_RTFXTENSOR._serialized_end=633
  _RTFXPROTO_RTFXTENSORLIST._serialized_start=635
  _RTFXPROTO_RTFXTENSORLIST._serialized_end=702
  _RTFXPROTO_RTFXSUBBATCHLIST._serialized_start=704
  _RTFXPROTO_RTFXSUBBATCHLIST._serialized_end=780
  _RTFXPROTO_RTFXMASKEDTENSOR._serialized_start=783
  _RTFXPROTO_RTFXMASKEDTENSOR._serialized_end=917
  _RTFXPROTO_RTFXSCALAR._serialized_start=919
  _RTFXPROTO_RTFXSCALAR._serialized_end=959
  _RTFXPROTO_ELEMENTTYPE._serialized_start=962
  _RTFXPROTO_ELEMENTTYPE._serialized_end=1146
# @@protoc_insertion_point(module_scope)
