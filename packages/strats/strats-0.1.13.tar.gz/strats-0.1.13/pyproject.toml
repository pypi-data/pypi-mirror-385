[project]
name = "strats"
version = "0.1.13"
description = "Strats: system trading framework"
readme = "README.md"
authors = [
    { name = "Kazuki Yoshida" }
]
requires-python = ">=3.9"
dependencies = [
    "croniter>=6.0.0",
    "cryptography>=45.0.5",
    "fastapi>=0.115.11",
    "flask>=3.1.0",
    "httpx>=0.28.1",
    "prometheus-client>=0.21.1",
    "typer>=0.15.2",
    "uvicorn>=0.34.0",
    "uvloop>=0.21.0",
    "waitress>=3.0.2",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Web Environment",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]

[project.scripts]
strats = "strats.cmd.cmd:app"

[project.urls]
Repository = "https://github.com/kazukiyoshida/strats"
Changelog = "https://github.com/kazukiyoshida/strats/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv.workspace]
members = ["example"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "D1",    # Allow undocumented
    "E741",  # Allow to use variables named 'I', 'O', or 'l'
    "B008",  # Allow FastAPI's Depends (`def hoge(a = Depends(get_a)):`)
    "B904",  # Allow raise in except clause
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = lint, mypy, py39, py310, py311, py312

[testenv]
deps =
    pytest
    pytest-asyncio
commands =
    pytest tests -svv

[testenv:lint]
deps = ruff
commands =
    ruff check --fix
    ruff format

[testenv:mypy]
deps =
    mypy
    types-waitress
    types-croniter
commands = mypy src tests --ignore-missing-imports
"""
