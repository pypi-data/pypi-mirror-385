# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .audit_event import AuditEvent


class AuditEventsResponse(UniversalBaseModel):
    audit_events: typing_extensions.Annotated[typing.List[AuditEvent], FieldMetadata(alias="auditEvents")]
    paging_token: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="pagingToken")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
