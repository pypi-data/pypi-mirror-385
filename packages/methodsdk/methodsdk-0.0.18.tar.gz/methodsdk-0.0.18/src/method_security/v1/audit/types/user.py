# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .external_user_id import ExternalUserId
from .user_id import UserId


class User(UniversalBaseModel):
    id: UserId
    name: str
    email: typing.Optional[str] = None
    external_id: typing_extensions.Annotated[typing.Optional[ExternalUserId], FieldMetadata(alias="externalId")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
