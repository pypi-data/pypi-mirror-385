from rustsat import Lit, Cnf, VarManager
from typing import List, final

__all__ = ["Totalizer"]

@final
class Totalizer:
    def __new__(cls, lits: List[Lit]) -> "Totalizer": ...
    def extend(self, lits: List[Lit]) -> None: ...
    def n_lits(self) -> int: ...
    def n_clauses(self) -> int: ...
    def n_vars(self) -> int: ...
    def encode_ub(self, min_ub: int, max_ub: int, var_manager: VarManager) -> Cnf: ...
    def enforce_ub(self, ub) -> List[Lit]: ...
    def encode_lb(self, min_lb: int, max_lb: int, var_manager: VarManager) -> Cnf: ...
    def enforce_lb(self, lb) -> List[Lit]: ...
    def encode_both(
        self, min_bound: int, max_bound: int, var_manager: VarManager
    ) -> Cnf: ...
    def enforce_eq(self, val) -> List[Lit]: ...
