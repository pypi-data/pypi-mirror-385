name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'server-v*.*.*'
      - 'client-v*.*.*'

jobs:
  release-server:
    name: Release Server to PyPI and GitHub
    if: startsWith(github.ref, 'refs/tags/server-v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#server-v}" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build

      - name: Build package
        run: python -m build

      - name: Generate Release Notes
        id: generate_notes
        run: |
          PREVIOUS_TAG=$(git tag --list 'server-v*.*.*' --sort=-v:refname | sed -n '2p')
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMIT_RANGE=$(git rev-list --max-parents=0 HEAD)
          else
            COMMIT_RANGE="$PREVIOUS_TAG..${{ github.ref_name }}"
          fi
          
          RELEASE_NOTES=$(git log $COMMIT_RANGE --pretty=format:"* %s" | grep -E '\(.*\bserver\b.*\):' | sed -E 's/^\* ([^:]+):/\* \*\*\1:\*\*/')
          
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES="No specific changes for this release."
          fi
          
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo -e "## Changes\n\n$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: "Server v${{ steps.get_version.outputs.VERSION }}"
          body: ${{ steps.generate_notes.outputs.release_notes }}
          files: dist/*

  release-client:
    name: Release Client
    if: startsWith(github.ref, 'refs/tags/client-v')
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#client-v}" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./client

      - name: Install Tauri dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./client

      - name: Generate Release Notes (Linux job only)
        if: matrix.platform == 'ubuntu-latest'
        id: generate_notes
        shell: bash
        run: |
          PREVIOUS_TAG=$(git tag --list 'client-v*.*.*' --sort=-v:refname | sed -n '2p')
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMIT_RANGE=$(git rev-list --max-parents=0 HEAD)
          else
            COMMIT_RANGE="$PREVIOUS_TAG..${{ github.ref_name }}"
          fi
          RELEASE_NOTES=$(git log $COMMIT_RANGE --pretty=format:"* %s" | grep -E '\(.*\bclient\b.*\):' | sed -E 's/^\* ([^:]+):/\* \*\*\1:\*\*/')
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES="No specific changes for this release."
          fi
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo -e "## Changes\n\n$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Archive static web app (Linux job only)
        if: matrix.platform == 'ubuntu-latest'
        run: zip -r web.zip ./client/dist
        shell: bash

      - name: Create Release and Upload Linux/Web Assets
        if: matrix.platform == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Client v${{ steps.get_version.outputs.VERSION }}"
          body: ${{ steps.generate_notes.outputs.release_notes }}
          files: |
            ./web.zip
            client/src-tauri/target/release/bundle/appimage/*.AppImage
            client/src-tauri/target/release/bundle/deb/*.deb

      - name: Upload Windows Assets
        if: matrix.platform == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            client/src-tauri/target/release/bundle/msi/*.msi
            client/src-tauri/target/release/bundle/nsis/*.exe
