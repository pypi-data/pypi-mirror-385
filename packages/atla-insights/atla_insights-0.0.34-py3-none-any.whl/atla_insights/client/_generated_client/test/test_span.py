# coding: utf-8

"""
    Atla Insights API

    Development documentation

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from atla_insights.client._generated_client.models.span import Span

class TestSpan(unittest.TestCase):
    """Span unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Span:
        """Test Span
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Span`
        """
        model = Span()
        if include_optional:
            return Span(
                id = '',
                trace_id = '',
                parent_span_id = '',
                span_name = '',
                start_timestamp = '',
                end_timestamp = '',
                is_exception = True,
                otel_events = [
                    null
                    ],
                annotations = [
                    _generated_client.models.get_traces_by_ids_200_response_traces_inner_spans_inner_annotations_inner.getTracesByIds_200_response_traces_inner_spans_inner_annotations_inner(
                        span_id = '', 
                        failure_mode = '', 
                        atla_critique = '', 
                        id = '', )
                    ]
            )
        else:
            return Span(
                id = '',
                trace_id = '',
                parent_span_id = '',
                span_name = '',
                start_timestamp = '',
                end_timestamp = '',
                is_exception = True,
                otel_events = [
                    null
                    ],
        )
        """

    def testSpan(self):
        """Test Span"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
