# coding: utf-8

"""
    Atla Insights API

    Development documentation

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from atla_insights.client._generated_client.models.trace_with_details import TraceWithDetails

class TestTraceWithDetails(unittest.TestCase):
    """TraceWithDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TraceWithDetails:
        """Test TraceWithDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TraceWithDetails`
        """
        model = TraceWithDetails()
        if include_optional:
            return TraceWithDetails(
                id = '',
                environment = 'PROD',
                is_success = True,
                is_completed = True,
                metadata = {
                    'key' : ''
                    },
                step_count = 56,
                started_at = '',
                ended_at = '',
                duration_seconds = 1.337,
                ingested_at = '',
                spans = [
                    _generated_client.models.get_traces_by_ids_200_response_traces_inner_spans_inner.getTracesByIds_200_response_traces_inner_spans_inner(
                        id = '', 
                        trace_id = '', 
                        parent_span_id = '', 
                        span_name = '', 
                        start_timestamp = '', 
                        end_timestamp = '', 
                        is_exception = True, 
                        otel_events = [
                            null
                            ], 
                        annotations = [
                            _generated_client.models.get_traces_by_ids_200_response_traces_inner_spans_inner_annotations_inner.getTracesByIds_200_response_traces_inner_spans_inner_annotations_inner(
                                span_id = '', 
                                failure_mode = '', 
                                atla_critique = '', 
                                id = '', )
                            ], )
                    ],
                custom_metric_values = [
                    _generated_client.models.get_traces_by_ids_200_response_traces_inner_custom_metric_values_inner.getTracesByIds_200_response_traces_inner_customMetricValues_inner(
                        id = '', 
                        trace_id = '', 
                        custom_metric_id = '', 
                        value = '', 
                        custom_metric = _generated_client.models.get_traces_by_ids_200_response_traces_inner_custom_metric_values_inner_custom_metric.getTracesByIds_200_response_traces_inner_customMetricValues_inner_customMetric(
                            id = '', 
                            name = '', 
                            data_type = 'BOOLEAN', ), )
                    ]
            )
        else:
            return TraceWithDetails(
                id = '',
                environment = 'PROD',
                is_success = True,
                is_completed = True,
                step_count = 56,
                started_at = '',
                ended_at = '',
                duration_seconds = 1.337,
                ingested_at = '',
        )
        """

    def testTraceWithDetails(self):
        """Test TraceWithDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
