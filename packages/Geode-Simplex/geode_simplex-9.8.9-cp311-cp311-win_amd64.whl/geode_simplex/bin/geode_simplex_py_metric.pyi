"""
Geode-Simplex Python binding for metric
"""
from __future__ import annotations
import geode_common.bin.geode_common_py_metric
import opengeode.bin.opengeode_py_mesh
import opengeode.bin.opengeode_py_model
import typing
__all__: list[str] = ['BRepMetricConstraints', 'SectionMetricConstraints', 'SimplexMetricLibrary']
class BRepMetricConstraints:
    def __init__(self, arg0: opengeode.bin.opengeode_py_model.BRep) -> None:
        ...
    def block_metric(self, arg0: opengeode.bin.opengeode_py_model.Block3D) -> float | None:
        ...
    def build_metric(self) -> geode_common.bin.geode_common_py_metric.Metric3D:
        ...
    def corner_metric(self, arg0: opengeode.bin.opengeode_py_model.Corner3D) -> float | None:
        ...
    def default_metric(self) -> float:
        ...
    def export_constraints(self, arg0: str) -> None:
        ...
    def gradation(self) -> float:
        ...
    def import_constraints(self, arg0: str) -> None:
        ...
    def line_metric(self, arg0: opengeode.bin.opengeode_py_model.Line3D) -> float | None:
        ...
    def set_block_metric(self, arg0: opengeode.bin.opengeode_py_model.Block3D, arg1: float) -> None:
        ...
    def set_corner_metric(self, arg0: opengeode.bin.opengeode_py_model.Corner3D, arg1: float) -> None:
        ...
    def set_default_metric(self, arg0: float) -> None:
        ...
    def set_edged_curve_metric(self, arg0: opengeode.bin.opengeode_py_mesh.EdgedCurve3D, arg1: float) -> None:
        ...
    def set_gradation(self, arg0: float) -> None:
        ...
    def set_line_metric(self, arg0: opengeode.bin.opengeode_py_model.Line3D, arg1: float) -> None:
        ...
    def set_point_set_metric(self, arg0: opengeode.bin.opengeode_py_mesh.PointSet3D, arg1: float) -> None:
        ...
    def set_surface_metric(self, arg0: opengeode.bin.opengeode_py_model.Surface3D, arg1: float) -> None:
        ...
    def set_triangulated_surface_metric(self, arg0: opengeode.bin.opengeode_py_mesh.TriangulatedSurface3D, arg1: float) -> None:
        ...
    def surface_metric(self, arg0: opengeode.bin.opengeode_py_model.Surface3D) -> float | None:
        ...
class SectionMetricConstraints:
    def __init__(self, arg0: opengeode.bin.opengeode_py_model.Section) -> None:
        ...
    def build_metric(self) -> geode_common.bin.geode_common_py_metric.Metric2D:
        ...
    def corner_metric(self, arg0: opengeode.bin.opengeode_py_model.Corner2D) -> float | None:
        ...
    def default_metric(self) -> float:
        ...
    def export_constraints(self, arg0: str) -> None:
        ...
    def gradation(self) -> float:
        ...
    def import_constraints(self, arg0: str) -> None:
        ...
    def line_metric(self, arg0: opengeode.bin.opengeode_py_model.Line2D) -> float | None:
        ...
    def set_corner_metric(self, arg0: opengeode.bin.opengeode_py_model.Corner2D, arg1: float) -> None:
        ...
    def set_default_metric(self, arg0: float) -> None:
        ...
    def set_edged_curve_metric(self, arg0: opengeode.bin.opengeode_py_mesh.EdgedCurve2D, arg1: float) -> None:
        ...
    def set_gradation(self, arg0: float) -> None:
        ...
    def set_line_metric(self, arg0: opengeode.bin.opengeode_py_model.Line2D, arg1: float) -> None:
        ...
    def set_point_set_metric(self, arg0: opengeode.bin.opengeode_py_mesh.PointSet2D, arg1: float) -> None:
        ...
    def set_surface_metric(self, arg0: opengeode.bin.opengeode_py_model.Surface2D, arg1: float) -> None:
        ...
    def set_triangulated_surface_metric(self, arg0: opengeode.bin.opengeode_py_mesh.TriangulatedSurface2D, arg1: float) -> None:
        ...
    def surface_metric(self, arg0: opengeode.bin.opengeode_py_model.Surface2D) -> float | None:
        ...
class SimplexMetricLibrary:
    @staticmethod
    def initialize() -> None:
        ...
