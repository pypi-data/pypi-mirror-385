[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "automagik-tools"
version = "0.9.8"
description = "A monorepo package for MCP tools with dynamic loading capabilities - featuring Evolution API v2 WhatsApp integration"
authors = [
    {name = "Felipe Rosa", email = "felipe@namastex.ai"},
    {name = "Cezar Vasconcelos", email = "cezar@namastex.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["mcp", "tools", "ai", "agents", "fastmcp", "whatsapp", "discord", "notion"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business",
]

dependencies = [
    "fastmcp>=2.10.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.5.0",
    "typer>=0.15.0",
    "rich>=13.0.0",
    "importlib-metadata>=6.0.0",
    "watchdog>=3.0.0",
    "pyyaml>=6.0.1",
    "build>=1.2.2.post1",
    "twine>=6.1.0",
    "psutil>=7.0.0",
    "agno>=1.5.9",
    "openai>=1.84.0",
    "sqlalchemy>=2.0.41",
    "google-genai>=0.5.0",
    "python-dotenv>=1.1.0",
    "httpx>=0.28.1",
]

[project.optional-dependencies]
evolution-api = [
    "httpx>=0.28.1",
    "python-dotenv>=1.1.0",
]

automagik = [
    "httpx>=0.28.1",
    "python-dotenv>=1.1.0",
    "agno>=0.1.0",
    "openai>=1.0.0",
]

automagik-enhanced = [
    "httpx>=0.28.1",
    "python-dotenv>=1.1.0",
    "agno>=0.1.0",
    "openai>=1.0.0",
    "markdown>=3.0.0",
]

ask = [
    "httpx>=0.28.1",
    "python-dotenv>=1.1.0",
    "openai>=1.84.0",
]

genie = [
    "agno>=1.5.9",
    "openai>=1.84.0",
    "sqlalchemy>=2.0.41",
    "python-dotenv>=1.1.0",
]

gemini-assistant = [
    "google-genai>=0.5.0",
    "python-dotenv>=1.1.0",
]

automagik-hive = [
    "httpx>=0.28.1",
    "python-dotenv>=1.1.0",
]

discord = [
    "discord.py>=2.3.0",
    "python-dotenv>=1.1.0",
]

notion = [
    "notion-client>=2.0.0",
    "python-dotenv>=1.1.0",
]

github = [
    "pygithub>=2.1.0",
    "python-dotenv>=1.1.0",
]

dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

all = [
    "automagik-tools[evolution-api,automagik,automagik-enhanced,ask,automagik-hive,discord,notion,github]",
]

[project.urls]
Homepage = "https://github.com/namastexlabs/automagik-tools"
Documentation = "https://github.com/namastexlabs/automagik-tools/README.md"
Repository = "https://github.com/namastexlabs/automagik-tools"
Issues = "https://github.com/namastexlabs/automagik-tools/issues"

[project.scripts]
automagik-tools = "automagik_tools.cli:main"

[project.entry-points."automagik_tools.plugins"]
# Tools are auto-discovered from the automagik_tools/tools/ directory
# No need to manually register them here
[tool.setuptools]
# Use find_packages to automatically discover all packages
[tool.setuptools.packages.find]
where = ["."]
include = ["automagik_tools*"]

[tool.setuptools.package-data]
automagik_tools = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
    "--durations=10",
    "--asyncio-mode=auto",
    "--cov=automagik_tools",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=30"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for full workflows", 
    "slow: Tests that take a long time to run",
    "network: Tests that require network access",
    "cli: Tests for command-line interface",
    "mcp: Tests for MCP protocol compliance",
    "evolution_api: Tests specific to Evolution API tool"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning", 
    "ignore::UserWarning:httpx",
    "ignore::pytest.PytestUnraisableExceptionWarning"
] 

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
]
