services:
  # Redis for Celery
  redis:
    image: redis:7.4.2-alpine
    ports:
      - "${AUTOMAGIK_SPARK_REDIS_PORT:-5412}:${AUTOMAGIK_SPARK_REDIS_PORT:-5412}"
    command: redis-server --port ${AUTOMAGIK_SPARK_REDIS_PORT:-5412} --appendonly yes --requirepass "${AUTOMAGIK_SPARK_REDIS_PASSWORD:-spark_redis_pass}"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${AUTOMAGIK_SPARK_REDIS_PORT:-5412}", "-a", "${AUTOMAGIK_SPARK_REDIS_PASSWORD:-spark_redis_pass}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - automagik-network

  # Automagik's PostgreSQL
  automagik-db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${AUTOMAGIK_SPARK_POSTGRES_USER:-spark_user}
      POSTGRES_PASSWORD: ${AUTOMAGIK_SPARK_POSTGRES_PASSWORD:-spark_pass}
      POSTGRES_DB: automagik_spark
    command: postgres -p ${AUTOMAGIK_SPARK_POSTGRES_PORT:-5402}
    ports:
      - "${AUTOMAGIK_SPARK_POSTGRES_PORT:-5402}:${AUTOMAGIK_SPARK_POSTGRES_PORT:-5402}"
    volumes:
      - automagik-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTOMAGIK_SPARK_POSTGRES_USER:-spark_user} -p ${AUTOMAGIK_SPARK_POSTGRES_PORT:-5402}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - automagik-network

  # Optional LangFlow service
  langflow:
    profiles:
      - langflow
    image: langflowai/langflow:latest
    pull_policy: always
    command: langflow run --host 0.0.0.0 --port 7860
    ports:
      - "${LANGFLOW_PORT:-7860}:${LANGFLOW_PORT:-7860}"
    environment:
      - LANGFLOW_WORKERS=2
    volumes:
      - langflow-data:/data
    networks:
      - automagik-network

  # Automagik API service
  automagik-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: python -m automagik api start
    env_file: ../.env
    ports:
      - "8883:8883"
    volumes:
      - ..:/app
    working_dir: /app
    depends_on:
      automagik-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8883/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - automagik-network
    extra_hosts:
      - "localhost:host-gateway"

  # Automagik Worker service
  automagik-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: python -m automagik worker start
    env_file: ../.env
    depends_on:
      automagik-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      automagik-api:
        condition: service_healthy
    networks:
      - automagik-network
    extra_hosts:
      - "localhost:host-gateway"

volumes:
  automagik-postgres:
  langflow-data:
  redis-data:

networks:
  automagik-network:
    name: automagik-network
