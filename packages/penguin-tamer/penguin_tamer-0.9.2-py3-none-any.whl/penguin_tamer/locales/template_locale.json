{
  "Your name is Penguin Tamer, a sysadmin assistant. You and the user always work in a terminal. Respond based on the user's environment and commands.": "Your name is Penguin Tamer, a sysadmin assistant. You and the user always work in a terminal. Respond based on the user's environment and commands.",
  "The current system information is as follows:": "The current system information is as follows:",
  "Understood. All subsequent responses will contain numbered code blocks in the specified format.\n\n[Code #1]\n```bash\necho \"Ready to work. Please provide a task to execute.\"\n```": "Understood. All subsequent responses will contain numbered code blocks in the specified format.\n\n[Code #1]\n```bash\necho \"Ready to work. Please provide a task to execute.\"\n```",
  "System Information": "System Information",
  "Operating System": "Operating System",
  "Architecture": "Architecture",
  "User": "User",
  "Home Directory": "Home Directory",
  "Current Directory": "Current Directory",
  "Hostname": "Hostname",
  "Local IP Address": "Local IP Address",
  "Python Version": "Python Version",
  "Python Executable": "Python Executable",
  "Virtual Environment": "Virtual Environment",
  "Virtual Environment Path": "Virtual Environment Path",
  "System Encoding": "System Encoding",
  "Filesystem Encoding": "Filesystem Encoding",
  "System Locale": "System Locale",
  "Temporary Directory": "Temporary Directory",
  "CPU Count": "CPU Count",
  "Current Time": "Current Time",
  "Shell": "Shell",
  "Shell Executable": "Shell Executable",
  "Shell Version": "Shell Version",
  "Paths": "Paths",
  "Config file": "Config file",
  "Python executable": "Python executable",
  "failed to retrieve": "failed to retrieve",
  "Execute code block #{number}:": "Execute code block #{number}:",
  "Execute command: {command}": "Execute command: {command}",
  "[dim]>>> Executing command:[/dim] {command}": "[dim]>>> Executing command:[/dim] {command}",
  "[dim]>>> Command interrupted by user (Ctrl+C)[/dim]": "[dim]>>> Command interrupted by user (Ctrl+C)[/dim]",
  "[dim]Empty command after '.' - skipping.[/dim]": "[dim]Empty command after '.' - skipping.[/dim]",
  "[dim]Code block #{number} not found.[/dim]": "[dim]Code block #{number} not found.[/dim]",
  "Command execution was interrupted by user (Ctrl+C).": "Command execution was interrupted by user (Ctrl+C).",
  "Command executed successfully (exit code: 0).": "Command executed successfully (exit code: 0).",
  "Command executed successfully (exit code: 0). No output.": "Command executed successfully (exit code: 0). No output.",
  "Command failed with exit code: {code}": "Command failed with exit code: {code}",
  "Connection error: Unable to connect to API. Please check your internet connection.": "Connection error: Unable to connect to API. Please check your internet connection.",
  "Error 401: Authentication failed. Check your API_KEY. [link={link}]How to get a key?[/link]": "Error 401: Authentication failed. Check your API_KEY. [link={link}]How to get a key?[/link]",
  "Error 429: Exceeding the quota. Message from the provider: {message}. You can change LLM in settings: 'pt -s'": "Error 429: Exceeding the quota. Message from the provider: {message}. You can change LLM in settings: 'pt -s'",
  "Error 400: {message}. Check model name.": "Error 400: {message}. Check model name.",
  "Error 403: Your region is not supported. Use VPN or change the LLM. You can change LLM in settings: 'pt -s'": "Error 403: Your region is not supported. Use VPN or change the LLM. You can change LLM in settings: 'pt -s'",
  "Error 404: Resource not found. Check API_URL and Model in settings.": "Error 404: Resource not found. Check API_URL and Model in settings.",
  "Access denied: You don't have permission to access this resource.": "Access denied: You don't have permission to access this resource.",
  "Not found: The requested model or endpoint was not found.": "Not found: The requested model or endpoint was not found.",
  "Server error: The API server encountered an error. Please try again later.": "Server error: The API server encountered an error. Please try again later.",
  "API error ({code}): {msg}": "API error ({code}): {msg}",
  "Request timeout: The request took too long. Please try again.": "Request timeout: The request took too long. Please try again.",
  "Error API: {error}. Check the LLM settings, there may be an incorrect API_URL": "Error API: {error}. Check the LLM settings, there may be an incorrect API_URL",
  "Please check your API_KEY. See provider docs for obtaining a key. [link={link}]How to get a key?[/link]": "Please check your API_KEY. See provider docs for obtaining a key. [link={link}]How to get a key?[/link]",
  "Unexpected error: {error}": "Unexpected error: {error}",
  "docs_link_get_api_key": "https://github.com/Vivatist/penguin-tamer?tab=readme-ov-file#getting-a-token-api_key-and-connecting-to-a-pre-installed-model",
  "IF your response contains code blocks, ALWAYS number the code blocks so that the user can link to them. Numbering format: \n[Code #1]\n```bash\necho \"Hello, World!\"\n```\n[Code #2]\n```bash\necho \"Hello, World!\"\n```\netc. Insert the numbering BEFORE the block. If there are multiple code blocks, number them sequentially. In each new reply, start numbering from 1 again. Don't discuss the numbering, don't report it, and don't talk about it; just number it.": "IF your response contains code blocks, ALWAYS number the code blocks so that the user can link to them. Numbering format: \n[Code #1]\n```bash\necho \"Hello, World!\"\n```\n[Code #2]\n```bash\necho \"Hello, World!\"\n```\netc. Insert the numbering BEFORE the block. If there are multiple code blocks, number them sequentially. In each new reply, start numbering from 1 again. Don't discuss the numbering, don't report it, and don't talk about it; just number it.",
  "Connecting...": "Соединение...",
  "Ai thinking...": "Ai thinking...",
  "Warning: Empty response received from API.": "Warning: Empty response received from API.",
  "<i><gray>Number of the code block to execute or the next question... Ctrl+C - exit</gray></i>": "<i><gray>Number of the code block to execute or the next question... Ctrl+C - exit</gray></i>",
  "<i><gray>Your question... Ctrl+C - exit</gray></i>": "<i><gray>Your question... Ctrl+C - exit</gray></i>"
}
