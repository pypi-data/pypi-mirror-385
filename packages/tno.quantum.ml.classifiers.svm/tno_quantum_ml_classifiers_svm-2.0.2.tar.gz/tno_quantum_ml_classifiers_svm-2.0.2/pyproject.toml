[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "tno.quantum.ml.classifiers.svm"
description = "Support Vector Machine Classifier"
readme = "README.md"
authors = [{ name = "TNO Quantum Code Lab", email = "tnoquantum@tno.nl" }]
maintainers = [{ name = "TNO Quantum Code Lab", email = "tnoquantum@tno.nl" }]
keywords = [
    "Support Vector Machine",
    "Quantum",
    "SVM",
    "Machine Learning",
    "Classifier",
]
license = { text = "Apache License, Version 2.0" }
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Typing :: Typed",
]
urls = { Homepage = "https://github.com/TNO-Quantum/", Documentation = "https://github.com/TNO-Quantum/", Source = "https://ci.tno.nl/gitlab/quantum/quantum-applications/quantum-toolbox/microlibs/machine-learning/microlibs/classifiers/microlibs/svm" }
dynamic = ["version"]
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "tno.quantum.ml.components~=2.0",
    "tno.quantum.utils~=5.1",
    "tno.quantum.optimization.qubo",
]

[project.optional-dependencies]
example = ["tno.quantum.optimization.qubo[dwave]", "tno.quantum.ml.datasets"]
tests = [
    "tno.quantum.ml.datasets~=2.0",
    "pytest>=8.1.1",
    "pytest-cov>=4.1.0",
    "tno.quantum.optimization.qubo.solvers[dwave]",
]

[tool.setuptools]
platforms = ["any"]

[tool.setuptools.dynamic]
version = { attr = "tno.quantum.ml.classifiers.svm.__version__" }

[tool.setuptools.package-data]
"*" = ["py.typed"]
"tno.quantum.ml.classifiers.svm.assets" = ["example.png"]
