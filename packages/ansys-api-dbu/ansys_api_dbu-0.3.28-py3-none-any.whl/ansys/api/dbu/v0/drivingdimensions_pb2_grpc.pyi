"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.dbu.v0.dbumodels_pb2
import ansys.api.dbu.v0.drivingdimensions_pb2
import grpc

class DrivingDimensionsStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Get: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        ansys.api.dbu.v0.dbumodels_pb2.DrivingDimension] = ...
    """Gets a driving dimension."""

    GetAll: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.drivingdimensions_pb2.GetAllRequest,
        ansys.api.dbu.v0.drivingdimensions_pb2.GetAllResponse] = ...
    """Lists all driving dimensions."""

    Update: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.drivingdimensions_pb2.UpdateRequest,
        ansys.api.dbu.v0.dbumodels_pb2.DrivingDimension] = ...
    """Upates a driving dimension."""

    UpdateParameter: grpc.UnaryUnaryMultiCallable[
        ansys.api.dbu.v0.drivingdimensions_pb2.UpdateRequest,
        ansys.api.dbu.v0.drivingdimensions_pb2.UpdateResponse] = ...
    """Update a driving dimension and return a update message"""


class DrivingDimensionsServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Get(self,
        request: ansys.api.dbu.v0.dbumodels_pb2.EntityIdentifier,
        context: grpc.ServicerContext,
    ) -> ansys.api.dbu.v0.dbumodels_pb2.DrivingDimension:
        """Gets a driving dimension."""
        pass

    @abc.abstractmethod
    def GetAll(self,
        request: ansys.api.dbu.v0.drivingdimensions_pb2.GetAllRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.dbu.v0.drivingdimensions_pb2.GetAllResponse:
        """Lists all driving dimensions."""
        pass

    @abc.abstractmethod
    def Update(self,
        request: ansys.api.dbu.v0.drivingdimensions_pb2.UpdateRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.dbu.v0.dbumodels_pb2.DrivingDimension:
        """Upates a driving dimension."""
        pass

    @abc.abstractmethod
    def UpdateParameter(self,
        request: ansys.api.dbu.v0.drivingdimensions_pb2.UpdateRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.dbu.v0.drivingdimensions_pb2.UpdateResponse:
        """Update a driving dimension and return a update message"""
        pass


def add_DrivingDimensionsServicer_to_server(servicer: DrivingDimensionsServicer, server: grpc.Server) -> None: ...
