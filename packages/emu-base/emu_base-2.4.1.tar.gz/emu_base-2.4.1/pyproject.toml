[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "emu-base"
description = "Pasqal base classes for emulators"
readme = "../../README.md"
authors = [
    { name = "Kemal Bidzhiev", email="kemal.bidzhiev@pasqal.com" },
    { name = "Stefano Grava", email="stefano.grava@pasqal.com" },
    { name = "Pablo Le Henaff", email="pablo.le-henaff@pasqal.com" },
    { name = "Mauro Mendizabal", email="mauro.mendizabal-pico@pasqal.com" },
    { name = "Elie Merhej", email="elie.merhej@pasqal.com" },
    { name = "Anton Quelle", email = "anton.quelle@pasqal.com"},
]
requires-python = ">=3.10"
license = {file = "../../LICENSE"}
classifiers=[
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pulser-core==1.6.*",
  "torch>=2.8.0"]
dynamic = ["version"]

[project.urls]
Documentation = "https://pasqal-io.github.io/emulators/"
Repository = "https://github.com/pasqal-io/emulators"
Issues = "https://github.com/pasqal-io/emulators/issues"

[tool.hatch.metadata]
allow-direct-references = true
allow-ambiguous-features = true

[tool.hatch.version]
path = "./../../emu_base/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "nbmake",
  "pytest-cov",
  "pre-commit",
  "flake8",
  "black",
  "isort",
  "jupyter",
  "jupyter-black"
]

[tool.hatch.envs.default.scripts]
test = "pytest -vvv --cov-report=term-missing --cov-config=pyproject.toml --cov=emu_mps {args}"
test_notebooks = "pytest --nbmake **/**/**/*ipynb"
coverage_readme = "(cd .. ; readme-cov)" #run this from the root, not the dir of this file

[[tool.hatch.envs.test.matrix]]
python = ["310", "311"]

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings",
  "mkdocstrings-python",
  "mkdocs-section-index",
  "mkdocs-jupyter",
  "mkdocs-exclude",
  "notebook<7",
  "markdown-exec",
  "jupyter_contrib_nbextensions",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict {args}"

[tool.hatch.build.targets.sdist]
packages = ["emu_base"]

[tool.hatch.build.targets.sdist.force-include]
"../../emu_base" = "emu_base"

[tool.hatch.build.targets.wheel]
packages = ["emu_base"]

[tool.hatch.build.targets.wheel.force-include]
"../../emu_base" = "emu_base"

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
