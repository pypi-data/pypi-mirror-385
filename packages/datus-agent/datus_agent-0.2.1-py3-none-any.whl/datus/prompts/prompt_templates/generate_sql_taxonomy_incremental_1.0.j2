Based on the following collection of SQL summaries and comments, please update the existing classification taxonomy by reusing existing categories when appropriate and only adding new ones when necessary.

**Existing Taxonomy:**
{% if existing_taxonomy %}
**Existing Domains:**
{% for domain in existing_taxonomy.domains %}
- {{ domain.name }}: {{ domain.description }}
{% endfor %}

**Existing Layer1 Categories:**
{% for layer1 in existing_taxonomy.layer1_categories %}
- {{ layer1.name }} (domain: {{ layer1.domain }}): {{ layer1.description }}
{% endfor %}

**Existing Layer2 Categories:**
{% for layer2 in existing_taxonomy.layer2_categories %}
- {{ layer2.name }} (layer1: {{ layer2.layer1 }}): {{ layer2.description }}
{% endfor %}

**Existing Tags:**
{% for tag in existing_taxonomy.common_tags %}
- {{ tag.tag }}: {{ tag.description }}
{% endfor %}
{% else %}
No existing taxonomy found - generating fresh taxonomy.
{% endif %}

**New SQL Summaries and Comments:**
{% for item in sql_items %}
---
**Comment:** {{ item.comment }}
**Summary:** {{ item.summary }}
{% endfor %}

Please analyze the new SQL queries above and generate an updated taxonomy in the following JSON format. **IMPORTANT: Reuse existing categories whenever they are appropriate for the new SQL items. Only create new categories when the new SQL items represent genuinely different business domains or functional areas that are not covered by existing categories.**

{
    "domains": [
        {
            "name": "domain_name",
            "description": "Brief description of this business domain",
            "examples": ["example1", "example2"]
        }
    ],
    "layer1_categories": [
        {
            "name": "category_name",
            "description": "Brief description of this primary functional category",
            "domain": "associated_domain_name",
            "examples": ["example1", "example2"]
        }
    ],
    "layer2_categories": [
        {
            "name": "subcategory_name",
            "description": "Brief description of this secondary category",
            "layer1": "parent_layer1_category",
            "examples": ["example1", "example2"]
        }
    ],
    "common_tags": [
        {
            "tag": "tag_name",
            "description": "Brief description of when to use this tag",
            "examples": ["example1", "example2"]
        }
    ]
}

Guidelines for incremental updates:
- **REUSE FIRST**: Always check if new SQL items fit into existing domains/layer1/layer2/tags before creating new ones
- **CONSERVATIVE APPROACH**: Only add new categories when existing ones clearly don't fit the new business scenarios
- **MAINTAIN CONSISTENCY**: Keep existing category names and structures unchanged unless there's a compelling reason to modify
- **LANGUAGE CONSISTENCY**: Keep the same language as the existing taxonomy - if existing is in Chinese, keep Chinese; if English, use English
- For existing categories that still apply, copy them exactly as they appear in the existing taxonomy
- Add new categories only for genuinely new business domains or functional areas
- Merge similar concepts rather than creating duplicates
- Ensure the final taxonomy comprehensively covers both existing and new SQL items
- Include realistic examples for any newly created categories/tags
 - **CRITICAL NAME FORMATTING**:
   - For ANY newly created domain/layer1/layer2 names: MUST use underscores instead of spaces
   - Examples: "customer_orders" NOT "customer orders", "data_analysis" NOT "data analysis"
   - For existing categories: preserve names exactly as-is (do NOT change existing names)
   - **VALIDATION**: All new category names must contain NO spaces - only lowercase letters, numbers, and underscores
   - **FINAL CHECK**: Verify all newly created names follow underscore format
