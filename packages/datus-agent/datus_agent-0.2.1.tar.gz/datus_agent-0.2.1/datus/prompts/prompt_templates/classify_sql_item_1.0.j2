Please classify the following SQL query based on the provided taxonomy.

**SQL Comment:** {{ comment }}
**SQL Summary:** {{ summary }}

**Available Classification Taxonomy (Hierarchical Structure):**

{% for domain in taxonomy.domains %}
**Domain: {{ domain.name }}**
- Description: {{ domain.description }}
- Layer1 Categories under this domain:
  {% for layer1 in taxonomy.layer1_categories %}
    {% if layer1.domain == domain.name %}
  - {{ layer1.name }}: {{ layer1.description }}
    - Layer2 Categories under {{ layer1.name }}:
      {% for layer2 in taxonomy.layer2_categories %}
        {% if layer2.layer1 == layer1.name %}
      - {{ layer2.name }}: {{ layer2.description }}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}

{% endfor %}

**Available Tags:**
{% if taxonomy.common_tags %}
{% for tag in taxonomy.common_tags %}
- {{ tag.tag }}: {{ tag.description }}
{% endfor %}
{% else %}
No predefined tags available.
{% endif %}

Please classify this SQL query in the following JSON format:

{
    "domain": "selected_domain_name",
    "layer1": "selected_layer1_category",
    "layer2": "selected_layer2_category",
    "tags": "comma_separated_relevant_tags"
}

**CRITICAL FORMATTING RULES - MUST FOLLOW EXACTLY:**
1. **NO SPACES ALLOWED**: All domain, layer1, layer2 values MUST use underscores instead of spaces
2. **TRANSFORM NAMES**: Convert any spaces in taxonomy names to underscores in your output
   - Example: "customer management" → "customer_management"
   - Example: "data analysis" → "data_analysis"
   - Example: "user reports" → "user_reports"
3. **VALIDATION**: Your output values must contain NO spaces - only lowercase letters, numbers, and underscores

**Classification Guidelines:**
- **CRITICAL: You MUST select from the provided taxonomy above - DO NOT create new domain/layer1/layer2 values**
- **IMPORTANT: Follow the hierarchical structure strictly**
- Step 1: Select exactly ONE domain from the available domains above
- Step 2: Select exactly ONE layer1 category that belongs to your chosen domain (verify it's listed under that domain)
- Step 3: Select exactly ONE layer2 category that belongs to your chosen layer1 (verify it's listed under that layer1)
- Step 4: {% if taxonomy.common_tags %}Select 2-5 relevant tags from the available tags list{% else %}Leave tags empty or generate appropriate tags if needed{% endif %}
- **Validation**: Ensure your layer1 actually belongs to your selected domain, and your layer2 actually belongs to your selected layer1
- **MANDATORY**: Your domain/layer1/layer2 values MUST exactly match one of the names provided in the taxonomy above
- Choose the most specific and accurate classifications from the available options
- If no perfect match exists, choose the closest available option within the correct hierarchy
- Tags should be comma-separated without spaces after commas
- **FINAL CHECK**: Before submitting, verify that:
  1. Your domain/layer1/layer2 values are exact matches from the taxonomy above
  2. All values contain NO spaces - only lowercase letters, numbers, and underscores