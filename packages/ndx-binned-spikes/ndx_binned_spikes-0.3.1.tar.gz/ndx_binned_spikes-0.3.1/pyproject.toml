[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ndx-binned-spikes"
version = "0.3.1"
authors = [
    { name="Ben Dicther", email="ben.dichter@gmail.com" },
    { name="Heberto Mayorquin", email="h.mayorquin@gmail.com" },
]
description = "NWB extension for storing binned spike data"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = [
    'NeurodataWithoutBorders',
    'NWB',
    'nwb-extension',
    'ndx-extension',
]
dependencies = [
    "pynwb>=3.0.0",
    "hdmf>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/catalystneuro/ndx-binned-spikes"
"Documentation" = "https://github.com/catalystneuro/ndx-binned-spikes"
"Bug Tracker" = "https://github.com/catalystneuro/ndx-binned-spikes/issues"
"Discussions" = "https://github.com/catalystneuro/ndx-binned-spikes/discussions"
"Changelog" = "https://github.com/catalystneuro/ndx-binned-spikes/blob/main/CHANGELOG.md"



[tool.hatch.build.targets.wheel]
packages = [
    "src/pynwb/ndx_binned_spikes",
    "spec",
]


[tool.hatch.build.targets.wheel.sources]
"spec" = "ndx_binned_spikes/spec"

[tool.hatch.build.targets.sdist]
include = [
    "src/pynwb",
    "spec/ndx-binned-spikes.extensions.yaml",
    "spec/ndx-binned-spikes.namespace.yaml",
    "docs",
]
exclude = [
    ".git*",
    "src/matnwb",
]
[tool.pytest.ini_options]
# uncomment below to run pytest with code coverage reporting. NOTE: breakpoints may not work
# addopts = "--cov --cov-report html"

[tool.codespell]
skip = "htmlcov,.git,.mypy_cache,.pytest_cache,.coverage,*.pdf,*.svg,venvs,.tox,hdmf-common-schema,./docs/_build/*,*.ipynb"

[tool.coverage.run]
branch = true
source = ["src/pynwb"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]

[tool.black]
line-length = 120
preview = true
exclude = ".git|.mypy_cache|.tox|.venv|venv|.ipynb_checkpoints|_build/|dist/|__pypackages__|.ipynb|docs/"

[tool.ruff]
exclude = [
  ".git",
  ".tox",
  "__pycache__",
  "build/",
  "dist/",
]
line-length = 120


[tool.ruff.lint]
select = ["E", "F", "T100", "T201", "T203"]

[tool.ruff.lint.per-file-ignores]
"src/spec/create_extension_spec.py" = ["T201"]

[tool.ruff.lint.mccabe]
max-complexity = 17
