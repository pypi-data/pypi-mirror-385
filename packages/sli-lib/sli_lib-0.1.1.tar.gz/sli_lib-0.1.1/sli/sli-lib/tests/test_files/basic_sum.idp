vocabulary V {
    type A := { a, b, c }
    type B := { d, f }
    P: A -> Bool
    T: A -> Int
    Q: A * B -> Bool
}


theory T:V  {
    sum{{ T(x) | x in A: P(x) }} > 2.
    sum{{ 1 | x in A, y in B: Q(x, y) }} > 4.
}

structure {
    T := { a-> -2, b -> -2, c -> 3 }.
    // T := { b }. // not impl for bv
    // S := { c }. // not impl for bv
}
