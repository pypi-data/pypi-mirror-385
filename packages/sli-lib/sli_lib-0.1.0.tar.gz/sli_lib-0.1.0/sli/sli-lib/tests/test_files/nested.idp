// Originates from https://gitlab.com/krr/IDP-Z3

vocabulary {
    type num := { Piet, Jan}
    same: (num) -> num
    negated: (num) -> num
}

theory {
    { !x in num : same(x) = x <- true. }
    {
        negated(Piet) = Jan <- true.
        negated(Jan) = Piet <- true.
    }
    same(Piet)= Piet.
    same(same(Piet))= negated(negated(Piet)).

}

structure {
}
