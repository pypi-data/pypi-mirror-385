vocabulary V {
    type Node <: Int
    edge: Node -> Bool
    a: Node -> Int
    b: Node -> Int
    j: Node * Node -> Int
    d: -> Int
    c: Node -> Int
    z: Node -> Bool
    t: Node -> Bool
}

theory T:V {
    !y in Node: z(y) & !x in Node: (if edge(x) then a(y) + b(y) else j(x, y)) = c(y) & t(x).
}

structure S2:V {
    Node â‰œ {1..2}.
    a := {1 -> 1, 2 -> 2}.
    b := {1 -> 100, 2 -> 20000}.
    c := {1 -> 101, 2 -> 20002 }.
    edge := {1,2}.
}


