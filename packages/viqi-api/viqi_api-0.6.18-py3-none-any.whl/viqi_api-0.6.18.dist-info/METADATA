Metadata-Version: 2.4
Name: viqi_api
Version: 0.6.18
Summary: ViQi Python API
Author-email: ViQi Inc <info@viqi.org>
Project-URL: homepage, https://www.viqi.org
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: configparser
Requires-Dist: bisque-metadoc>=0.6.4.16
Requires-Dist: tifffile
Requires-Dist: furl
Requires-Dist: simplejson
Requires-Dist: shortuuid>=1.0.8
Requires-Dist: tenacity
Requires-Dist: importlib-metadata; python_version < "3.10"
Requires-Dist: boto3>=1.28.52
Requires-Dist: urllib3>=2.0.0
Requires-Dist: requests>=2.32.0
Requires-Dist: requests-cache>=1.1.0
Requires-Dist: requests-toolbelt>=1.0.0
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: webtest; extra == "test"
Provides-Extra: image-service
Requires-Dist: tifffile; extra == "image-service"
Requires-Dist: tables; extra == "image-service"
Provides-Extra: table-service
Requires-Dist: numpy; extra == "table-service"
Requires-Dist: pandas; extra == "table-service"
Requires-Dist: tables; extra == "table-service"

# ViQi API

Low level interface to ViQi services


## Install


`pip install viqi-api `

## Configuration

For command line tools create `~/.config/viqi/profiles`  or `~/config/viqi/profiles`` (windows) with the following

```
[default]
host=https://science.viqiai.cloud
user=myuser
password=mysecret

[science-user2]
host=https://science.viqiai.cloud
user=myuser2
password=mysecret2
```

## Documentation

* [Service-oriented API](https://viqi.gitlab.io/viqi-common/bisque-api/soapi.html)
* [Object-oriented API](https://viqi.gitlab.io/viqi-common/bisque-api/ooapi.html)


## Usage

Example ipython session:

```
ipython
from vqapi import viqi_session
session = viqi_session(args=["--profile=science-user2"])

meta = session.service("meta")
user = meta.fetch("user")
print(user)
```

If used in script viqi_session will read from sys.argv

myscript.py:
```
from vqapi import viqi_session
session = viqi_session()

meta = session.service("meta")
user = meta.fetch("user")
print(user)
```

Pass args on command line:
```
$ python myscript.py --profile=science-user2
```
