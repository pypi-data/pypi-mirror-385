[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-lexicon"
version = "0.1.4"
description = "Neural semantic modeling toolkit with persona-aware generation and diagnostics."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
authors = [
    {name = "Semantic Lexicon Team"},
]
keywords = ["nlp", "semantics", "persona", "knowledge-graph", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "numpy>=1.23,<2.0",
    "typer>=0.13,<0.20",
    "PyYAML>=6.0,<7.0",
    "matplotlib>=3.8,<4.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0",
    "ruff>=0.4",
    "mypy>=1.4",
    "pytest>=7.0",
    "pytest-cov>=4.1",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.5",
]
tadkit = [
    "transformers>=4.37",
    "torch>=2.1",
    "pandas>=2.0",
    "streamlit>=1.30",
]
personarag = [
    "langchain>=0.2",
    "langchain-core>=0.2",
    "langchain-openai>=0.1",
    "langchain-community>=0.2",
    "langgraph>=0.0.64",
    "faiss-cpu>=1.7",
    "openai>=1.0",
]

[project.urls]
Homepage = "https://github.com/farukalpay/Semantic-Lexicon"
Documentation = "https://github.com/farukalpay/Semantic-Lexicon#readme"
Issues = "https://github.com/farukalpay/Semantic-Lexicon/issues"

[project.scripts]
semantic-lexicon = "semantic_lexicon.cli:app"
tadkit = "tadkit.cli:app"

[tool.setuptools]
package-dir = {"" = "src"}
packages = {find = {where = ["src"]}}
include-package-data = true

[tool.setuptools.package-data]
"semantic_lexicon" = ["data/*.jsonl"]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
exclude = ["Archive"]
target-version = "py39"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "UP", "TCH"]
ignore = ["B905", "UP007", "UP045"]

[tool.ruff.lint.per-file-ignores]
"src/semantic_lexicon/analysis/*.py" = ["TC001", "TC002", "TC003", "TC006"]
"src/semantic_lexicon/api/*.py" = ["TC001"]
"src/semantic_lexicon/config.py" = ["TC006"]
"src/semantic_lexicon/training.py" = ["TC001", "TC006"]
"src/semantic_lexicon/utils/*.py" = ["TC003"]
"tests/*" = ["TC003"]
"src/semantic_lexicon/diagnostics.py" = ["TC001", "TC003"]
"src/semantic_lexicon/embeddings.py" = ["TC003", "TC006"]
"src/semantic_lexicon/generator.py" = ["TC001", "TC003", "TC006"]
"src/semantic_lexicon/knowledge.py" = ["TC003", "TC006"]
"src/semantic_lexicon/model.py" = ["TC003"]
"src/semantic_lexicon/presentation.py" = ["TC003"]
"src/semantic_lexicon/template_learning.py" = ["TC006"]
"src/semantic_lexicon/templates.py" = ["TC003"]
"src/semantic_lexicon/go_no_go.py" = ["TC006"]
"src/semantic_lexicon/intent.py" = ["TC002", "TC003"]

[tool.mypy]
python_version = "3.10"
strict = false
warn_return_any = true
warn_unused_configs = true
packages = ["semantic_lexicon"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["semantic_lexicon"]
