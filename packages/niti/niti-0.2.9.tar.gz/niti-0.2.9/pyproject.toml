[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "niti"
dynamic = ["version"]
description = "A modern C++ linter written in Python"
readme = "README.md"
license = {text = "Apache 2.0"}
keywords = ["c++", "linter", "static-analysis", "code-quality"]
requires-python = ">=3.8"
dependencies = [
    "pyyaml",
    "tree-sitter",
    "tree-sitter-cpp",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "autoflake>=2.0",
    "flake8>=5.0",
    "flake8-pyproject>=1.2",
    "mypy>=1.0",
    "pre-commit>=2.20",
    "twine>=4.0",
    "build>=0.8",
]

[project.urls]
Repository = "https://github.com/project-vajra/niti.git"
Documentation = "https://project-vajra.github.io/niti/"
"Bug Tracker" = "https://github.com/project-vajra/niti/issues"

[project.scripts]
niti = "niti.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["niti*"]

[tool.setuptools.package-dir]
niti = "niti"

[tool.setuptools_scm]
write_to = "niti/_version.py"
fallback_version = "0.2.5"

[tool.isort]
profile = "black"
known_first_party = ["niti"]
known_third_party = ["pyyaml", "tree_sitter"]

[tool.black]
line-length = 80
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "-s",
    "--junitxml=test_reports/pytest-results.xml",
    "--cov=niti",
    "--cov-report=xml:test_reports/coverage.xml",
    "--cov-report=html:test_reports/coverage_html",
    "--cov-report=term-missing"
]
testpaths = [
    "test"
]
markers = [
    "unit: Python unit tests.",
    "integration: Integration tests.",
    "performance: Performance benchmarking tests.",
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.pyright]
include = ["niti", "test"]
exclude = [
    "**/__pycache__",
    "**/*.pyc",
]
reportMissingImports = false

[tool.flake8]
max-line-length = 80
extend-ignore = ["E203", "W503", "F841", "E402", "F541", "W293", "W291", "E262", "F402"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
]
per-file-ignores = [
    "niti/rules/rule_definition.py:E501",
    "niti/rules/documentation.py:E501",
    "niti/rules/naming.py:E501",
    "niti/rules/includes.py:E501",
    "niti/rules/safety.py:E501",
    "niti/rules/class_traits.py:E501",
    "niti/rules/modern_cpp.py:E501",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
files = ["niti/"]
exclude = [
    "__pycache__",
]