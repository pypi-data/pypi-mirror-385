name: Build and Deploy Documentation
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
permissions:
  contents: read
  pages: write
  id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/pyproject.toml', '**/docs/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
      - name: Build documentation
        run: |
          cd docs
          make html
      - name: Check for warnings
        run: |
          cd docs
          # Build with warnings as errors, but ignore expected warnings
          make html SPHINXOPTS="-W --keep-going" 2>&1 | tee build.log
          # Check if there are any warnings other than the expected ones
          if grep -E "WARNING|ERROR" build.log | grep -v "duplicate object description" | grep -v "docstring of niti.NITI_" | grep -v "is not a valid filetype for"; then
            echo "Found unexpected warnings in documentation build"
            exit 1
          fi
      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation-html
          path: docs/build/html/
      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4
      - name: Upload to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html
  deploy-docs:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
