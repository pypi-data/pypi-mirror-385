# Niti configuration file for testing plugin system
# This file can be named .nitirc or cpp-lint.yaml
## Niti Configuration for Vajra Project
# This config is tailored for the vajra C++ codebase structure and conventions
plugins:
  enabled:
    - vajra
rules:
  # ============================================================================
  # DISABLE PROBLEMATIC RULES FOR VAJRA PROJECT STRUCTURE
  # ============================================================================

  # Disable file organization rule that expects csrc/include/ structure
  # Vajra uses csrc/vajra/ which is a valid alternative organization
  file-organization-header:
    enabled: false
  # Disable copyright rules - these may have different requirements
  file-header-copyright:
    enabled: false
  header-copyright:
    enabled: false
  # Disable some documentation rules that may be too strict for large codebase
  doc-function-missing:
    enabled: false
  doc-class-missing:
    enabled: false
  doc-function-missing-param-docs:
    enabled: false
  doc-function-missing-return-docs:
    enabled: false
  doc-function-missing-throws-docs:
    enabled: false
  doc-param-direction-missing:
    enabled: false
  # ============================================================================
  # RELAX SOME STRICT NAMING CONVENTIONS
  # ============================================================================

  # Allow some flexibility in naming for large codebase
  naming-constant-case:
    enabled: false # Vajra may have different constant naming conventions
  naming-function-case:
    enabled: false # May have mixed conventions from different components
  naming-member-case:
    enabled: false # May have different member naming patterns
  # ============================================================================
  # RELAX INCLUDE/FILE ORGANIZATION RULES  
  # ============================================================================

  # Vajra may have different include organization needs
  include-angle-bracket-forbidden:
    enabled: false # System headers legitimately use angle brackets
  include-order-wrong:
    severity: warning # Make this a warning instead of error
  # File naming may follow different conventions
  file-naming-convention:
    enabled: false
  # ============================================================================
  # RELAX MODERN C++ SUGGESTIONS
  # ============================================================================

  # These are good practices but may be too noisy for large existing codebase
  modern-missing-noexcept:
    severity: warning # Reduce to warning
  modern-nodiscard-missing:
    severity: warning # Reduce to warning
  modern-missing-const:
    severity: warning # Reduce to warning
  # ============================================================================
  # RELAX CODE QUALITY RULES
  # ============================================================================

  # Magic numbers may be acceptable in some contexts
  quality-magic-numbers:
    enabled: false # Can be too noisy in numerical code
  # ============================================================================
  # KEEP IMPORTANT SAFETY RULES (HIGH PRIORITY)
  # ============================================================================

  # Keep all safety rules enabled - these are important
  safety-range-loop-missing:
    enabled: true
    severity: error
  safety-raw-pointer-param:
    enabled: true
    severity: error
  safety-raw-pointer-return:
    enabled: true
    severity: error
  safety-unsafe-cast:
    enabled: true
    severity: error
  # ============================================================================
  # KEEP IMPORTANT TYPE SYSTEM RULES
  # ============================================================================
  type-forbidden-int:
    severity: warning # Reduce to warning as it may be needed in some contexts
  type-pair-tuple:
    severity: warning # Reduce to warning
  # ============================================================================
  # KEEP IMPORTANT STRUCTURAL RULES
  # ============================================================================

  # Keep class organization rules but make them warnings
  class-access-specifier-order:
    severity: warning
  class-member-order:
    severity: warning
  class-member-organization:
    severity: warning
  # Disable class trait rules as they may not apply to all vajra code
  class-trait-missing:
    enabled: false
  class-trait-static:
    enabled: false
  # ============================================================================
  # NAMESPACE RULES
  # ============================================================================
  namespace-using-forbidden:
    severity: warning # May be needed in some contexts
  namespace-old-style:
    enabled: true
    severity: error
  namespace-long-usage:
    severity: warning
  # ============================================================================
  # VAJRA PLUGIN RULES
  # ============================================================================

  # Enable vajra-specific rules
  vajra/include-missing-pch:
    enabled: false # Disabled as requested
  vajra/forward-declaration-missing:
    enabled: true
    severity: warning
