# Envoy Configuration Generated by GAL
# Provider: envoy
# Services: 5 (3 gRPC, 2 REST)

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains: ['*']
              routes:
              - match:
                  prefix: '/myapp.UserService'
                  grpc: {}
                route:
                  cluster: user_service_cluster
              - match:
                  prefix: '/myapp.OrderService'
                  grpc: {}
                route:
                  cluster: order_service_cluster
              - match:
                  prefix: '/myapp.NotificationService'
                  grpc: {}
                route:
                  cluster: notification_service_cluster
              - match:
                  prefix: '/api/products'
                route:
                  cluster: product_service_cluster
              - match:
                  prefix: '/api/payments'
                route:
                  cluster: payment_service_cluster
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                  -- Transformation logic here
                  local path = request_handle:headers():get(':path')
                  -- user_service transformations
                  if string.find(path, '/myapp.UserService') then
                    local body = request_handle:body()
                    if body then
                      -- Apply defaults and computed fields
                    end
                  end
                  -- order_service transformations
                  if string.find(path, '/myapp.OrderService') then
                    local body = request_handle:body()
                    if body then
                      -- Apply defaults and computed fields
                    end
                  end
                  -- notification_service transformations
                  if string.find(path, '/myapp.NotificationService') then
                    local body = request_handle:body()
                    if body then
                      -- Apply defaults and computed fields
                    end
                  end
                  -- product_service transformations
                  if string.find(path, '/api/products') then
                    local body = request_handle:body()
                    if body then
                      -- Apply defaults and computed fields
                    end
                  end
                  -- payment_service transformations
                  if string.find(path, '/api/payments') then
                    local body = request_handle:body()
                    if body then
                      -- Apply defaults and computed fields
                    end
                  end
                end
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: user_service_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: user_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: user-service
                port_value: 9090

  - name: order_service_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: order_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: order-service
                port_value: 9091

  - name: notification_service_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: notification_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: notification-service
                port_value: 9092

  - name: product_service_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: product_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: product-service
                port_value: 8080

  - name: payment_service_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: payment_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: payment-service
                port_value: 8081

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901