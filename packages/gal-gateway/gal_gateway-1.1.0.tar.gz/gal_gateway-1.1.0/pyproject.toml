[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gal-gateway"
dynamic = ["version"]
description = "Gateway Abstraction Layer - Provider-agnostic API Gateway configuration system"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Dietmar Burkard"}
]
keywords = [
    "api-gateway",
    "envoy",
    "kong",
    "apisix",
    "traefik",
    "gateway",
    "configuration",
    "abstraction",
    "devops",
    "infrastructure",
    "rate-limiting",
    "authentication",
    "cors",
    "circuit-breaker",
    "health-checks",
    "load-balancing",
    "jwt",
    "security"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Code Generators",
    "Topic :: System :: Networking",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Typing :: Typed",
    "Framework :: AsyncIO",
]
dependencies = [
    "click>=8.1.0",
    "pyyaml>=6.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "isort>=5.13.0",
]

[project.urls]
Homepage = "https://github.com/pt9912/x-gal"
Documentation = "https://github.com/pt9912/x-gal/blob/main/README.md"
Repository = "https://github.com/pt9912/x-gal"
"Bug Tracker" = "https://github.com/pt9912/x-gal/issues"
Changelog = "https://github.com/pt9912/x-gal/blob/main/CHANGELOG.md"

[project.scripts]
gal = "gal.cli:cli"

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "docs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=gal --cov-report=term-missing"

[tool.coverage.run]
source = ["gal"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["gal"]
