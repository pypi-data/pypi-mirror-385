# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.get_subscriptions_results_schema_dto import GetSubscriptionsResultsSchemaDto

class TestGetSubscriptionsResultsSchemaDto(unittest.TestCase):
    """GetSubscriptionsResultsSchemaDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSubscriptionsResultsSchemaDto:
        """Test GetSubscriptionsResultsSchemaDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSubscriptionsResultsSchemaDto`
        """
        model = GetSubscriptionsResultsSchemaDto()
        if include_optional:
            return GetSubscriptionsResultsSchemaDto(
                id = '',
                subscriptions = [
                    do_sdk_platform.models.get_subscriptions_results_schema_dto_subscriptions_inner.GetSubscriptionsResultsSchemaDto_subscriptions_inner(
                        group_id = '', 
                        group_name = '', 
                        description = '', 
                        plans = [
                            do_sdk_platform.models.get_subscriptions_results_schema_dto_subscriptions_inner_plans_inner.GetSubscriptionsResultsSchemaDto_subscriptions_inner_plans_inner(
                                id = '', 
                                plan_id = '', 
                                group_id = '', 
                                group = '', 
                                description = '', 
                                period = 'Monthly', 
                                name = '', 
                                qty = 1.337, 
                                price = '', 
                                enabled = True, 
                                is_available = True, 
                                qty_required = True, 
                                can_delete = True, 
                                auto_set_qty = True, 
                                meta = do_sdk_platform.models.get_subscriptions_results_schema_dto_subscriptions_inner_plans_inner_meta.GetSubscriptionsResultsSchemaDto_subscriptions_inner_plans_inner_meta(
                                    includes = [
                                        ''
                                        ], 
                                    index = 1.337, 
                                    coming_soon = [
                                        ''
                                        ], 
                                    is_coming_soon = '', 
                                    max_days = 1.337, 
                                    renewable = True, 
                                    max_invites = 1.337, 
                                    max_subscriptions = 1.337, 
                                    can_buy_credits = True, 
                                    needs_credit_card = True, 
                                    academic = True, 
                                    is_beta = True, 
                                    demo_url = '', 
                                    doc_url = '', 
                                    gateway = True, ), 
                                auto_renew = True, 
                                to_date = '', 
                                monthly_price = 1.337, 
                                annually_price = 1.337, 
                                semi_annually_price = 1.337, 
                                quarterly_price = 1.337, )
                            ], )
                    ],
                total_items_count = 1.337,
                error = '',
                is_success = True
            )
        else:
            return GetSubscriptionsResultsSchemaDto(
                subscriptions = [
                    do_sdk_platform.models.get_subscriptions_results_schema_dto_subscriptions_inner.GetSubscriptionsResultsSchemaDto_subscriptions_inner(
                        group_id = '', 
                        group_name = '', 
                        description = '', 
                        plans = [
                            do_sdk_platform.models.get_subscriptions_results_schema_dto_subscriptions_inner_plans_inner.GetSubscriptionsResultsSchemaDto_subscriptions_inner_plans_inner(
                                id = '', 
                                plan_id = '', 
                                group_id = '', 
                                group = '', 
                                description = '', 
                                period = 'Monthly', 
                                name = '', 
                                qty = 1.337, 
                                price = '', 
                                enabled = True, 
                                is_available = True, 
                                qty_required = True, 
                                can_delete = True, 
                                auto_set_qty = True, 
                                meta = do_sdk_platform.models.get_subscriptions_results_schema_dto_subscriptions_inner_plans_inner_meta.GetSubscriptionsResultsSchemaDto_subscriptions_inner_plans_inner_meta(
                                    includes = [
                                        ''
                                        ], 
                                    index = 1.337, 
                                    coming_soon = [
                                        ''
                                        ], 
                                    is_coming_soon = '', 
                                    max_days = 1.337, 
                                    renewable = True, 
                                    max_invites = 1.337, 
                                    max_subscriptions = 1.337, 
                                    can_buy_credits = True, 
                                    needs_credit_card = True, 
                                    academic = True, 
                                    is_beta = True, 
                                    demo_url = '', 
                                    doc_url = '', 
                                    gateway = True, ), 
                                auto_renew = True, 
                                to_date = '', 
                                monthly_price = 1.337, 
                                annually_price = 1.337, 
                                semi_annually_price = 1.337, 
                                quarterly_price = 1.337, )
                            ], )
                    ],
                total_items_count = 1.337,
                is_success = True,
        )
        """

    def testGetSubscriptionsResultsSchemaDto(self):
        """Test GetSubscriptionsResultsSchemaDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
