# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.tools_get_tool_executions200_response import ToolsGetToolExecutions200Response

class TestToolsGetToolExecutions200Response(unittest.TestCase):
    """ToolsGetToolExecutions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolsGetToolExecutions200Response:
        """Test ToolsGetToolExecutions200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolsGetToolExecutions200Response`
        """
        model = ToolsGetToolExecutions200Response()
        if include_optional:
            return ToolsGetToolExecutions200Response(
                count = 10,
                data = [
                    do_sdk_platform.models.tools_get_tool_executions_200_response_data_inner.toolsGetToolExecutions_200_response_data_inner(
                        id = 'abc123', 
                        type = 'toolExecution', 
                        attributes = do_sdk_platform.models.tool_execution_interface_schema_dto.ToolExecutionInterfaceSchemaDto(
                            tag = '', 
                            execution_id = '', 
                            resource_id = '', 
                            completed_at = '', 
                            started_at = '', 
                            user_inputs = {
                                'key' : null
                                }, 
                            user_outputs = {
                                'key' : null
                                }, 
                            job_outputs = {
                                'key' : null
                                }, 
                            resources_used = {
                                'key' : null
                                }, 
                            resources_requested = {
                                'key' : null
                                }, 
                            progress_report = '', 
                            status = 'Quoted', 
                            metadata = {
                                'key' : null
                                }, 
                            name = '', 
                            tool = do_sdk_platform.models.tool_execution_interface_schema_dto_tool.ToolExecutionInterfaceSchemaDto_tool(
                                key = '', 
                                version = '', ), 
                            approve_amount = 1.337, ), )
                    ]
            )
        else:
            return ToolsGetToolExecutions200Response(
        )
        """

    def testToolsGetToolExecutions200Response(self):
        """Test ToolsGetToolExecutions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
