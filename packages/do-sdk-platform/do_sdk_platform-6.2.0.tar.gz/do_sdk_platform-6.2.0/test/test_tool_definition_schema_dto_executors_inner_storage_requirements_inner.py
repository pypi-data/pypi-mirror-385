# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.tool_definition_schema_dto_executors_inner_storage_requirements_inner import ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner

class TestToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner(unittest.TestCase):
    """ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner:
        """Test ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner`
        """
        model = ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner()
        if include_optional:
            return ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner(
                name = '',
                path = '',
                type = 'reference',
                disk_type = 'object',
                size = 1.337
            )
        else:
            return ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner(
                name = '',
                path = '',
                type = 'reference',
                disk_type = 'object',
                size = 1.337,
        )
        """

    def testToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner(self):
        """Test ToolDefinitionSchemaDtoExecutorsInnerStorageRequirementsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
