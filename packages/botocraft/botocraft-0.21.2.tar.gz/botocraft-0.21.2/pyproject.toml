[project]
name = "botocraft"
version = "0.21.2"
authors = [
    {name = "Caltech IMSS ADS", email = "imss-ads-staff@caltech.edu"},
]
maintainers = [
    {name = "Chris Malek", email = "cmalek@caltech.edu"},
]
requires-python = ">= 3.10"
description = "An opinionated boto3 wrapper for AWS"
readme = "README.md"
keywords = ["aws"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "boto3>=1.35.58",
  "botocore>=1.35.58",
  "pydantic >= 2.9.0",
  "click >= 8.0",
  "inflect >= 7.4.0",
  "jsonpath-ng >= 1.6.1",
  "docker >= 7.1.0",
  "ipython >= 8.36.0",
  "psutil>=7.0.0",
  "markdownify >= 0.21.2",
  "pyyaml >= 6.0.2",
  "docformatter >= 1.7.5",
]

[dependency-groups]
dev = [
  "datamodel-code-generator>=0.30.1",
  "bump-pydantic>=0.8.0",
  "bumpversion == 0.5.3",
  "boto3-stubs>=1.35.35",
  "botocore-stubs>=1.35.35",
  "types-PyYAML >= 6.0.2",
  "types-requests>=2.32.0.20240914",
  "ruff>=0.11.11",
]
docs = [
  "sphinx<7",
  "sphinx_rtd_theme == 2.0.0",
  "sphinxcontrib-images >= 0.9.4",
  "autodoc_pydantic >= 2.0.0",
  "diagrams >= 0.23.3",
  "setuptools>=75.1.0",
]
build = [
  "build>=1.2.2.post1",
]
test = [
  "pytest>=7.4.0",
  "pytest-cov >= 4.1.0",
  "pytest-mock >= 3.10.0",
  "pytest-xdist >= 3.4.0",
  "pytest-benchmark >= 3.4.1",
]

[project.urls]
Documentation = "https://botocraft.readthedocs.io/en/latest/"
Source = "https://github.com/caltechads/botocraft"
Issues = "https://github.com/caltechads/botocraft/issues"

[project.scripts]
botocraft = "botocraft.main:main"

[build-system]
requires = [
  "setuptools >= 48",
  "wheel >= 0.29.0",
]
build-backend = "setuptools.build_meta"

[tool.uv]
python-preference = "only-system"
default-groups = ["docs", "build"]

[tool.setuptools]
# ...
# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]

[tool.mypy]
plugins = "pydantic.mypy"
exclude = "^build"

[[tool.mypy.overrides]]
module = "sphinx_rtd_theme.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "bleach.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "markdownify.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "docformatter.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "isort.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "docker.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psutil.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true


[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    #### modules
    "ANN", # flake8-annotations
    "COM", # flake8-commas
    "C90", # mccabe complexity
    "DJ",  # django
    "EXE", # flake8-executable
    "T10", # debugger
    "TID", # flake8-tidy-imports

    #### specific rules
    "D100",   # ignore missing docs
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D203",
    "D205",
    "D212",
    "D400",
    "D401",
    "D415",
    "E402",   # false positives for local imports
    "S603",   # ignore subprocess calls that do not check return code
    "S607",   # ignore subprocess programs that are not absolute paths
    "TRY003", # external messages in exceptions are too verbose
    "T201",   # ignore print statements
    "TD002",
    "TD003",
    "FIX002", # too verbose descriptions of todos
    "SIM102", # combine nested ifs
    "UP006",  # stop bugging me about modern type hints
    "FBT001", # stop bugging me about booleans in function signatures
    "FBT002", # stop bugging me about booleans in function signatures
    "N818",   # stop bugging me about not ending my exceptions with "Error"
    "FA100",  # stop bugging me about old-style Optional
    "UP035",  # stop bugging me about modern type hints
    "S101",   # stop bugging me about asserts
    "N802",   # stop bugging me about camelCase names -- AWS uses camelCase
    "N815",   # stop bugging me about camelCase names -- AWS uses camelCase
    "PLC0415"  # stop bugging me about imports not at top level -- we need this to avoid circular imports
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"tests/services/*" = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "E501",  # Line too long
    "PLR2004", # Magic value used
]
"botocraft/services/*" = [
    "N803",  # Argument name should be lowercase
    "D301",  # Use 'r"""' for all backticks in docstrings
    "UP037",  # Remove quotes from type annotation
    "E501",  # Line too long
    "C408",  # Unnecessary dict call - rewrite as a literal
    "RET504",  # Unnecessary assignment before return statement
    "D202",  # No blank lines allowed after function docstring
    "D404",  # First word of the docstring should not be "This"
    "D413",  # missing blank line after last section of docstring
    "A002",  # Argument name is shadowing a python builtin
    "PLR0913",  # Too many arguments in function call
    "I001",  # Import order
    "F401",  # Something imported but not used
    "D213",  # Multi-line docstring summary should start at the second line
    "E501",  # Line too long
    "F841",  # Unused variable
    "N803",  # Argument name should be lowercase
    "PLR0913",  # Too many arguments in function call
    "C408",  # Unnecessary dict call - rewrite
    "D404",  # First word of the docstring should not be "This"
    "B006",  # argument default is mutable
    "ARG002",  # Unused argument
    "RUF001",  # Ambiguous line separator
    "RUF002",  # Doctring contains ambiguous characters
]
