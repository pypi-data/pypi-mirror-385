[project]
name = "run-mcp-servers-with-aws-lambda"
dynamic = ["version"]
description = "Run Model Context Protocol (MCP) servers with AWS Lambda"
requires-python = ">=3.11"
readme = "README.md"

authors = [{ name = "Amazon Web Services" }]
license = { text = "Apache License (2.0)" }

keywords = ["aws", "lambda", "mcp", "modelcontextprotocol"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "anyio>=4.10.0",
    "aiobotocore>=2.24.1",
    "mcp>=1.13.1",
    "aws-lambda-powertools>=3.19.0"
]

[project.urls]
Repository = "https://github.com/awslabs/run-model-context-protocol-servers-with-aws-lambda"
Issues = "https://github.com/awslabs/run-model-context-protocol-servers-with-aws-lambda/issues"

[project.optional-dependencies]
stubs = ["types-aiobotocore[lambda]>=2.22.0"]

[tool.uv]
resolution = "lowest-direct"
dev-dependencies = [
    "pyright>=1.1.402",
    "pytest>=8.4.1",
    "ruff>=0.12.2",
    "trio>=0.30.0",
    "pytest-cov>=6.2.1",
    "pytest-env>=1.1.5",
    "pre-commit>=4.2.0",
    "pytest-asyncio>=1.0.0"
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = false
fallback-version = "0.0.0"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_lambda"]

[tool.pyright]
include = ["src/mcp_lambda", "tests"]
venvPath = "."
venv = ".venv"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["E501"]

[tool.pytest.ini_options]
log_format = "%(asctime)s - %(levelname)s - %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_level = "DEBUG"
log_cli = true
addopts = "--cov=src/mcp_lambda --cov-report=term --cov-report=html --cov-fail-under=90"

[tool.pytest_env]
LOG_LEVEL = "DEBUG"
