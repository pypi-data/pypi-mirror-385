# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import zerog_bridge_pb2 as zerog__bridge__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in zerog_bridge_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StorageServiceStub(object):
    """=============================================================================
    STORAGE SERVICE
    =============================================================================

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/zerog.bridge.v1.StorageService/Put',
                request_serializer=zerog__bridge__pb2.PutRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.PutResponse.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/zerog.bridge.v1.StorageService/Get',
                request_serializer=zerog__bridge__pb2.GetRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.GetResponse.FromString,
                _registered_method=True)
        self.Verify = channel.unary_unary(
                '/zerog.bridge.v1.StorageService/Verify',
                request_serializer=zerog__bridge__pb2.VerifyRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.VerifyResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/zerog.bridge.v1.StorageService/Delete',
                request_serializer=zerog__bridge__pb2.DeleteRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/zerog.bridge.v1.StorageService/HealthCheck',
                request_serializer=zerog__bridge__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class StorageServiceServicer(object):
    """=============================================================================
    STORAGE SERVICE
    =============================================================================

    """

    def Put(self, request, context):
        """Upload data to 0G Storage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Retrieve data from 0G Storage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Verify(self, request, context):
        """Verify data integrity in 0G Storage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete data from 0G Storage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Health check for storage service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=zerog__bridge__pb2.PutRequest.FromString,
                    response_serializer=zerog__bridge__pb2.PutResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=zerog__bridge__pb2.GetRequest.FromString,
                    response_serializer=zerog__bridge__pb2.GetResponse.SerializeToString,
            ),
            'Verify': grpc.unary_unary_rpc_method_handler(
                    servicer.Verify,
                    request_deserializer=zerog__bridge__pb2.VerifyRequest.FromString,
                    response_serializer=zerog__bridge__pb2.VerifyResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=zerog__bridge__pb2.DeleteRequest.FromString,
                    response_serializer=zerog__bridge__pb2.DeleteResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=zerog__bridge__pb2.HealthCheckRequest.FromString,
                    response_serializer=zerog__bridge__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zerog.bridge.v1.StorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('zerog.bridge.v1.StorageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StorageService(object):
    """=============================================================================
    STORAGE SERVICE
    =============================================================================

    """

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.StorageService/Put',
            zerog__bridge__pb2.PutRequest.SerializeToString,
            zerog__bridge__pb2.PutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.StorageService/Get',
            zerog__bridge__pb2.GetRequest.SerializeToString,
            zerog__bridge__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.StorageService/Verify',
            zerog__bridge__pb2.VerifyRequest.SerializeToString,
            zerog__bridge__pb2.VerifyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.StorageService/Delete',
            zerog__bridge__pb2.DeleteRequest.SerializeToString,
            zerog__bridge__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.StorageService/HealthCheck',
            zerog__bridge__pb2.HealthCheckRequest.SerializeToString,
            zerog__bridge__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ComputeServiceStub(object):
    """=============================================================================
    COMPUTE SERVICE
    =============================================================================

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Submit = channel.unary_unary(
                '/zerog.bridge.v1.ComputeService/Submit',
                request_serializer=zerog__bridge__pb2.SubmitRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.SubmitResponse.FromString,
                _registered_method=True)
        self.Status = channel.unary_unary(
                '/zerog.bridge.v1.ComputeService/Status',
                request_serializer=zerog__bridge__pb2.StatusRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.Result = channel.unary_unary(
                '/zerog.bridge.v1.ComputeService/Result',
                request_serializer=zerog__bridge__pb2.ResultRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.ResultResponse.FromString,
                _registered_method=True)
        self.Attestation = channel.unary_unary(
                '/zerog.bridge.v1.ComputeService/Attestation',
                request_serializer=zerog__bridge__pb2.AttestationRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.AttestationResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/zerog.bridge.v1.ComputeService/HealthCheck',
                request_serializer=zerog__bridge__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=zerog__bridge__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class ComputeServiceServicer(object):
    """=============================================================================
    COMPUTE SERVICE
    =============================================================================

    """

    def Submit(self, request, context):
        """Submit a compute task to 0G Compute Network
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Get status of a compute job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Result(self, request, context):
        """Get result of a completed compute job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Attestation(self, request, context):
        """Get attestation (verification proof) for a compute job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Health check for compute service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ComputeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Submit': grpc.unary_unary_rpc_method_handler(
                    servicer.Submit,
                    request_deserializer=zerog__bridge__pb2.SubmitRequest.FromString,
                    response_serializer=zerog__bridge__pb2.SubmitResponse.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=zerog__bridge__pb2.StatusRequest.FromString,
                    response_serializer=zerog__bridge__pb2.StatusResponse.SerializeToString,
            ),
            'Result': grpc.unary_unary_rpc_method_handler(
                    servicer.Result,
                    request_deserializer=zerog__bridge__pb2.ResultRequest.FromString,
                    response_serializer=zerog__bridge__pb2.ResultResponse.SerializeToString,
            ),
            'Attestation': grpc.unary_unary_rpc_method_handler(
                    servicer.Attestation,
                    request_deserializer=zerog__bridge__pb2.AttestationRequest.FromString,
                    response_serializer=zerog__bridge__pb2.AttestationResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=zerog__bridge__pb2.HealthCheckRequest.FromString,
                    response_serializer=zerog__bridge__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zerog.bridge.v1.ComputeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('zerog.bridge.v1.ComputeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ComputeService(object):
    """=============================================================================
    COMPUTE SERVICE
    =============================================================================

    """

    @staticmethod
    def Submit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.ComputeService/Submit',
            zerog__bridge__pb2.SubmitRequest.SerializeToString,
            zerog__bridge__pb2.SubmitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.ComputeService/Status',
            zerog__bridge__pb2.StatusRequest.SerializeToString,
            zerog__bridge__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.ComputeService/Result',
            zerog__bridge__pb2.ResultRequest.SerializeToString,
            zerog__bridge__pb2.ResultResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Attestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.ComputeService/Attestation',
            zerog__bridge__pb2.AttestationRequest.SerializeToString,
            zerog__bridge__pb2.AttestationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/zerog.bridge.v1.ComputeService/HealthCheck',
            zerog__bridge__pb2.HealthCheckRequest.SerializeToString,
            zerog__bridge__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
