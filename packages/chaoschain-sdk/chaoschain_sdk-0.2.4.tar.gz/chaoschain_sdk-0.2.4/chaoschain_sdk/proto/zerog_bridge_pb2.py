# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: zerog_bridge.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'zerog_bridge.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12zerog_bridge.proto\x12\x0fzerog.bridge.v1\"\xa8\x01\n\nPutRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x11\n\tmime_type\x18\x02 \x01(\t\x12\x33\n\x04tags\x18\x03 \x03(\x0b\x32%.zerog.bridge.v1.PutRequest.TagsEntry\x12\x17\n\x0fidempotency_key\x18\x04 \x01(\t\x1a+\n\tTagsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf2\x01\n\x0bPutResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0b\n\x03uri\x18\x02 \x01(\t\x12\x11\n\troot_hash\x18\x03 \x01(\t\x12\x0f\n\x07tx_hash\x18\x04 \x01(\t\x12\x11\n\tdata_hash\x18\x05 \x01(\t\x12\x10\n\x08provider\x18\x06 \x01(\t\x12<\n\x08metadata\x18\x07 \x03(\x0b\x32*.zerog.bridge.v1.PutResponse.MetadataEntry\x12\r\n\x05\x65rror\x18\x08 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x19\n\nGetRequest\x12\x0b\n\x03uri\x18\x01 \x01(\t\"\xaa\x01\n\x0bGetResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12<\n\x08metadata\x18\x03 \x03(\x0b\x32*.zerog.bridge.v1.GetResponse.MetadataEntry\x12\r\n\x05\x65rror\x18\x04 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"3\n\rVerifyRequest\x12\x0b\n\x03uri\x18\x01 \x01(\t\x12\x15\n\rexpected_hash\x18\x02 \x01(\t\"F\n\x0eVerifyResponse\x12\x10\n\x08is_valid\x18\x01 \x01(\x08\x12\x13\n\x0b\x61\x63tual_hash\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t\"5\n\rDeleteRequest\x12\x0b\n\x03uri\x18\x01 \x01(\t\x12\x17\n\x0fidempotency_key\x18\x02 \x01(\t\"0\n\x0e\x44\x65leteResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"}\n\rSubmitRequest\x12\x11\n\ttask_json\x18\x01 \x01(\t\x12@\n\x13verification_method\x18\x02 \x01(\x0e\x32#.zerog.bridge.v1.VerificationMethod\x12\x17\n\x0fidempotency_key\x18\x03 \x01(\t\"@\n\x0eSubmitResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0e\n\x06job_id\x18\x02 \x01(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t\"\x1f\n\rStatusRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\t\"\xc3\x01\n\x0eStatusResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\r\n\x05state\x18\x02 \x01(\t\x12\x10\n\x08progress\x18\x03 \x01(\x05\x12?\n\x08metadata\x18\x04 \x03(\x0b\x32-.zerog.bridge.v1.StatusResponse.MetadataEntry\x12\r\n\x05\x65rror\x18\x05 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1f\n\rResultRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\t\"\xa0\x02\n\x0eResultResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x13\n\x0boutput_json\x18\x02 \x01(\t\x12\x16\n\x0e\x65xecution_hash\x18\x03 \x01(\t\x12@\n\x13verification_method\x18\x04 \x01(\x0e\x32#.zerog.bridge.v1.VerificationMethod\x12\r\n\x05proof\x18\x05 \x01(\x0c\x12?\n\x08metadata\x18\x06 \x03(\x0b\x32-.zerog.bridge.v1.ResultResponse.MetadataEntry\x12\r\n\x05\x65rror\x18\x07 \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"$\n\x12\x41ttestationRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\t\"b\n\x13\x41ttestationResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x18\n\x10\x61ttestation_json\x18\x02 \x01(\t\x12\x11\n\tsignature\x18\x03 \x01(\x0c\x12\r\n\x05\x65rror\x18\x04 \x01(\t\"%\n\x12HealthCheckRequest\x12\x0f\n\x07service\x18\x01 \x01(\t\"\xb8\x02\n\x13HealthCheckResponse\x12;\n\x06status\x18\x01 \x01(\x0e\x32+.zerog.bridge.v1.HealthCheckResponse.Status\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x42\n\x07metrics\x18\x03 \x03(\x0b\x32\x31.zerog.bridge.v1.HealthCheckResponse.MetricsEntry\x1a.\n\x0cMetricsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"_\n\x06Status\x12\x16\n\x12STATUS_UNSPECIFIED\x10\x00\x12\x12\n\x0eSTATUS_HEALTHY\x10\x01\x12\x14\n\x10STATUS_UNHEALTHY\x10\x02\x12\x13\n\x0fSTATUS_DEGRADED\x10\x03*\xb5\x01\n\x12VerificationMethod\x12#\n\x1fVERIFICATION_METHOD_UNSPECIFIED\x10\x00\x12\x1c\n\x18VERIFICATION_METHOD_NONE\x10\x01\x12\x1e\n\x1aVERIFICATION_METHOD_TEE_ML\x10\x02\x12\x1d\n\x19VERIFICATION_METHOD_ZK_ML\x10\x03\x12\x1d\n\x19VERIFICATION_METHOD_OP_ML\x10\x04\x32\x84\x03\n\x0eStorageService\x12@\n\x03Put\x12\x1b.zerog.bridge.v1.PutRequest\x1a\x1c.zerog.bridge.v1.PutResponse\x12@\n\x03Get\x12\x1b.zerog.bridge.v1.GetRequest\x1a\x1c.zerog.bridge.v1.GetResponse\x12I\n\x06Verify\x12\x1e.zerog.bridge.v1.VerifyRequest\x1a\x1f.zerog.bridge.v1.VerifyResponse\x12I\n\x06\x44\x65lete\x12\x1e.zerog.bridge.v1.DeleteRequest\x1a\x1f.zerog.bridge.v1.DeleteResponse\x12X\n\x0bHealthCheck\x12#.zerog.bridge.v1.HealthCheckRequest\x1a$.zerog.bridge.v1.HealthCheckResponse2\xa5\x03\n\x0e\x43omputeService\x12I\n\x06Submit\x12\x1e.zerog.bridge.v1.SubmitRequest\x1a\x1f.zerog.bridge.v1.SubmitResponse\x12I\n\x06Status\x12\x1e.zerog.bridge.v1.StatusRequest\x1a\x1f.zerog.bridge.v1.StatusResponse\x12I\n\x06Result\x12\x1e.zerog.bridge.v1.ResultRequest\x1a\x1f.zerog.bridge.v1.ResultResponse\x12X\n\x0b\x41ttestation\x12#.zerog.bridge.v1.AttestationRequest\x1a$.zerog.bridge.v1.AttestationResponse\x12X\n\x0bHealthCheck\x12#.zerog.bridge.v1.HealthCheckRequest\x1a$.zerog.bridge.v1.HealthCheckResponseB6Z4github.com/chaoschain/zerog-bridge/proto/v1;bridgev1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'zerog_bridge_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z4github.com/chaoschain/zerog-bridge/proto/v1;bridgev1'
  _globals['_PUTREQUEST_TAGSENTRY']._loaded_options = None
  _globals['_PUTREQUEST_TAGSENTRY']._serialized_options = b'8\001'
  _globals['_PUTRESPONSE_METADATAENTRY']._loaded_options = None
  _globals['_PUTRESPONSE_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_GETRESPONSE_METADATAENTRY']._loaded_options = None
  _globals['_GETRESPONSE_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_STATUSRESPONSE_METADATAENTRY']._loaded_options = None
  _globals['_STATUSRESPONSE_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_RESULTRESPONSE_METADATAENTRY']._loaded_options = None
  _globals['_RESULTRESPONSE_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_HEALTHCHECKRESPONSE_METRICSENTRY']._loaded_options = None
  _globals['_HEALTHCHECKRESPONSE_METRICSENTRY']._serialized_options = b'8\001'
  _globals['_VERIFICATIONMETHOD']._serialized_start=2126
  _globals['_VERIFICATIONMETHOD']._serialized_end=2307
  _globals['_PUTREQUEST']._serialized_start=40
  _globals['_PUTREQUEST']._serialized_end=208
  _globals['_PUTREQUEST_TAGSENTRY']._serialized_start=165
  _globals['_PUTREQUEST_TAGSENTRY']._serialized_end=208
  _globals['_PUTRESPONSE']._serialized_start=211
  _globals['_PUTRESPONSE']._serialized_end=453
  _globals['_PUTRESPONSE_METADATAENTRY']._serialized_start=406
  _globals['_PUTRESPONSE_METADATAENTRY']._serialized_end=453
  _globals['_GETREQUEST']._serialized_start=455
  _globals['_GETREQUEST']._serialized_end=480
  _globals['_GETRESPONSE']._serialized_start=483
  _globals['_GETRESPONSE']._serialized_end=653
  _globals['_GETRESPONSE_METADATAENTRY']._serialized_start=406
  _globals['_GETRESPONSE_METADATAENTRY']._serialized_end=453
  _globals['_VERIFYREQUEST']._serialized_start=655
  _globals['_VERIFYREQUEST']._serialized_end=706
  _globals['_VERIFYRESPONSE']._serialized_start=708
  _globals['_VERIFYRESPONSE']._serialized_end=778
  _globals['_DELETEREQUEST']._serialized_start=780
  _globals['_DELETEREQUEST']._serialized_end=833
  _globals['_DELETERESPONSE']._serialized_start=835
  _globals['_DELETERESPONSE']._serialized_end=883
  _globals['_SUBMITREQUEST']._serialized_start=885
  _globals['_SUBMITREQUEST']._serialized_end=1010
  _globals['_SUBMITRESPONSE']._serialized_start=1012
  _globals['_SUBMITRESPONSE']._serialized_end=1076
  _globals['_STATUSREQUEST']._serialized_start=1078
  _globals['_STATUSREQUEST']._serialized_end=1109
  _globals['_STATUSRESPONSE']._serialized_start=1112
  _globals['_STATUSRESPONSE']._serialized_end=1307
  _globals['_STATUSRESPONSE_METADATAENTRY']._serialized_start=406
  _globals['_STATUSRESPONSE_METADATAENTRY']._serialized_end=453
  _globals['_RESULTREQUEST']._serialized_start=1309
  _globals['_RESULTREQUEST']._serialized_end=1340
  _globals['_RESULTRESPONSE']._serialized_start=1343
  _globals['_RESULTRESPONSE']._serialized_end=1631
  _globals['_RESULTRESPONSE_METADATAENTRY']._serialized_start=406
  _globals['_RESULTRESPONSE_METADATAENTRY']._serialized_end=453
  _globals['_ATTESTATIONREQUEST']._serialized_start=1633
  _globals['_ATTESTATIONREQUEST']._serialized_end=1669
  _globals['_ATTESTATIONRESPONSE']._serialized_start=1671
  _globals['_ATTESTATIONRESPONSE']._serialized_end=1769
  _globals['_HEALTHCHECKREQUEST']._serialized_start=1771
  _globals['_HEALTHCHECKREQUEST']._serialized_end=1808
  _globals['_HEALTHCHECKRESPONSE']._serialized_start=1811
  _globals['_HEALTHCHECKRESPONSE']._serialized_end=2123
  _globals['_HEALTHCHECKRESPONSE_METRICSENTRY']._serialized_start=1980
  _globals['_HEALTHCHECKRESPONSE_METRICSENTRY']._serialized_end=2026
  _globals['_HEALTHCHECKRESPONSE_STATUS']._serialized_start=2028
  _globals['_HEALTHCHECKRESPONSE_STATUS']._serialized_end=2123
  _globals['_STORAGESERVICE']._serialized_start=2310
  _globals['_STORAGESERVICE']._serialized_end=2698
  _globals['_COMPUTESERVICE']._serialized_start=2701
  _globals['_COMPUTESERVICE']._serialized_end=3122
# @@protoc_insertion_point(module_scope)
