[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chaoschain-sdk"
version = "0.2.4"
description = "Minimal SDK for building verifiable agents on ChaosChain protocol - ERC-8004, x402, local storage"
readme = "README.md"
license = "MIT"
authors = [
    {name = "ChaosChain", email = "sumeet.chougule@nethermind.io"}
]
maintainers = [
    {name = "ChaosChain", email = "sumeet.chougule@nethermind.io"}
]
keywords = [
    "ai-agents", 
    "blockchain", 
    "erc-8004", 
    "x402", 
    "web3",
    "autonomous-agents",
    "chaoschain",
    "crypto-payments",
    "agent-commerce"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Security :: Cryptography",
]
requires-python = ">=3.9"
dependencies = [
    # ══════════════════════════════════════════════════════════════
    # MINIMAL CORE (Lean Base Install)
    # ══════════════════════════════════════════════════════════════
    
    # ERC-8004 Protocol (Identity/Reputation/Validation)
    "web3>=6.0.0",
    "eth-account>=0.8.0",
    
    # x402 Payment Protocol (Coinbase official)
    "x402>=0.2.1",
    
    # Wallet Manager
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
    
    # Local IPFS Storage (Minimal - HTTP API only)
    "requests>=2.28.0",
    
    # Essential utilities
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
# ══════════════════════════════════════════════════════════════
# PLUGGABLE PROVIDERS (Install What You Need)
# Usage: pip install chaoschain-sdk[provider-name]
# ══════════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────────
# Storage Providers (Pluggable)
# ─────────────────────────────────────────────────────────────

pinata = [
    "httpx>=0.24.0",
]

irys = [
    "httpx>=0.24.0",
]

ipfs = [
    "ipfshttpclient>=0.8.0",  # Enhanced IPFS client
]

0g-storage = [
    # No Python dependencies - uses official Go CLI
    # Install: git clone https://github.com/0gfoundation/0g-storage-client.git && cd 0g-storage-client && go build
    # See: https://docs.0g.ai/developer-hub/building-on-0g/storage/storage-cli
    # Only needs ZEROG_TESTNET_PRIVATE_KEY (indexer finds nodes automatically)
]

# ─────────────────────────────────────────────────────────────
# Compute Providers (Pluggable)
# ─────────────────────────────────────────────────────────────

0g-compute = [
    # No Python dependencies - uses Node.js SDK via subprocess
    # Requires: npm install @0glabs/0g-serving-broker @types/crypto-js crypto-js
    # See: https://docs.0g.ai/developer-hub/building-on-0g/compute-network/sdk
]

# ─────────────────────────────────────────────────────────────
# TEE (Trusted Execution Environment) Providers
# ─────────────────────────────────────────────────────────────

phala-tee = [
    "dstack-sdk>=0.1.0",  # Phala Cloud dstack for CVM/TEE attestation
    # Enables hardware-verified agent identity and signing
    # See: https://github.com/HashWarlock/erc-8004-ex-phala
]

morpheus = [
    # Add when Morpheus SDK is available
]

chainlink = [
    # Add when Chainlink Functions SDK is available
]

# ─────────────────────────────────────────────────────────────
# Payment Extensions (Pluggable)
# ─────────────────────────────────────────────────────────────

ap2 = [
    # Google AP2: pip install git+https://github.com/google-agentic-commerce/AP2.git@main
    # Then: pip install chaoschain-sdk[ap2]
]

payments-fiat = [
    "stripe>=7.0.0",
    "paypalrestsdk>=1.13.0",
]

# ─────────────────────────────────────────────────────────────
# Full Stacks (Convenience Bundles)
# ─────────────────────────────────────────────────────────────

# 0G Full Stack (Storage + Compute)
0g = [
    "chaoschain-sdk[0g-storage,0g-compute]",
]

# All Storage Providers
storage-all = [
    "chaoschain-sdk[pinata,irys,ipfs,0g-storage]",
]

# All Compute Providers
compute-all = [
    "chaoschain-sdk[0g-compute,morpheus,chainlink]",
]

# Everything (All Providers)
all = [
    "chaoschain-sdk[0g,morpheus,chainlink,pinata,irys,ipfs,phala-tee,payments-fiat]",
]

# ─────────────────────────────────────────────────────────────
# Development & Tools
# ─────────────────────────────────────────────────────────────

dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.urls]
Homepage = "https://chaoschain.io"
Documentation = "https://docs.chaoschain.io"
Repository = "https://github.com/ChaosChain/chaoschain"
Issues = "https://github.com/ChaosChain/chaoschain/issues"

[tool.setuptools]
# Automatically discover all subpackages (providers/, proto/, storage/, etc.)
packages = { find = { where = ["."], include = ["chaoschain_sdk*"] } }

[tool.setuptools.package-data]
chaoschain_sdk = ["py.typed", "*.pyi", "proto/*.py"]
