name: '🧹 Code Linting'
# Runs code quality checks using ruff, mypy, and other linting tools
# Checks both package code and test code for consistency

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "From which folder this pipeline executes"
      python-version:
        required: true
        type: string
        description: "Python version to use"

permissions:
  contents: read

env:
  WORKDIR: ${{ inputs.working-directory == '' && '.' || inputs.working-directory }}

  # This env var allows us to get inline annotations when ruff has complaints.
  RUFF_OUTPUT_FORMAT: github

  UV_FROZEN: "true"

jobs:
  # Linting job - runs quality checks on package and test code
  build:
    name: 'Python ${{ inputs.python-version }}'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: '📋 Checkout Code'
        uses: actions/checkout@v5

      - name: '🐍 Set up Python ${{ inputs.python-version }} + UV'
        uses: "./.github/actions/uv_setup"
        with:
          python-version: ${{ inputs.python-version }}
          cache-suffix: lint-${{ inputs.working-directory }}
          working-directory: ${{ inputs.working-directory }}

      - name: '📦 Install Lint & Typing Dependencies'
        # Also installs dev/lint/test/typing dependencies, to ensure we have
        # type hints for as many of our libraries as possible.

        working-directory: ${{ inputs.working-directory }}
        run: |
          uv sync --group lint

      - name: '🔍 Analyze Package Code with Linters'
        working-directory: ${{ inputs.working-directory }}
        run: |
          make lint

      - name: '🔍 Analyze Test Code with Linters'
        working-directory: ${{ inputs.working-directory }}
        run: |
          make lint_test