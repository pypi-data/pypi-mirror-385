"use strict";(self.webpackChunkruncell=self.webpackChunkruncell||[]).push([[2229],{42229:(t,e,a)=>{a.d(e,{diagram:()=>S});var r=a(18118),n=a(45412),i=a(19209),s={showLegend:!0,ticks:5,max:null,min:0,graticule:"circle"},l={axes:[],curves:[],options:s},o=structuredClone(l),c=r.H.radar,d=(0,r._)(()=>(0,r.F)({...c,...(0,r.G)().radar}),"getConfig"),u=(0,r._)(()=>o.axes,"getAxes"),g=(0,r._)(()=>o.curves,"getCurves"),p=(0,r._)(()=>o.options,"getOptions"),h=(0,r._)(t=>{o.axes=t.map(t=>({name:t.name,label:t.label??t.name}))},"setAxes"),x=(0,r._)(t=>{o.curves=t.map(t=>({name:t.name,label:t.label??t.name,entries:m(t.entries)}))},"setCurves"),m=(0,r._)(t=>{if(null==t[0].axis)return t.map(t=>t.value);const e=u();if(0===e.length)throw new Error("Axes must be populated before curves for reference entries");return e.map(e=>{const a=t.find(t=>{var a;return(null==(a=t.axis)?void 0:a.$refText)===e.name});if(void 0===a)throw new Error("Missing entry for axis "+e.label);return a.value})},"computeCurveEntries"),$={getAxes:u,getCurves:g,getOptions:p,setAxes:h,setCurves:x,setOptions:(0,r._)(t=>{var e,a,r,n,i;const l=t.reduce((t,e)=>(t[e.name]=e,t),{});o.options={showLegend:(null==(e=l.showLegend)?void 0:e.value)??s.showLegend,ticks:(null==(a=l.ticks)?void 0:a.value)??s.ticks,max:(null==(r=l.max)?void 0:r.value)??s.max,min:(null==(n=l.min)?void 0:n.value)??s.min,graticule:(null==(i=l.graticule)?void 0:i.value)??s.graticule}},"setOptions"),getConfig:d,clear:(0,r._)(()=>{(0,r.z)(),o=structuredClone(l)},"clear"),setAccTitle:r.b,getAccTitle:r.a,setDiagramTitle:r.q,getDiagramTitle:r.t,getAccDescription:r.g,setAccDescription:r.s},f=(0,r._)(t=>{(0,n.p)(t,$);const{axes:e,curves:a,options:r}=t;$.setAxes(e),$.setCurves(a),$.setOptions(r)},"populate"),v={parse:(0,r._)(async t=>{const e=await(0,i.p)("radar",t);r.l.debug(e),f(e)},"parse")},y=(0,r._)((t,e,a,n)=>{const i=n.db,s=i.getAxes(),l=i.getCurves(),o=i.getOptions(),c=i.getConfig(),d=i.getDiagramTitle(),u=(0,r.K)(e),g=w(u,c),p=o.max??Math.max(...l.map(t=>Math.max(...t.entries))),h=o.min,x=Math.min(c.width,c.height)/2;b(g,s,x,o.ticks,o.graticule),C(g,s,x,c),_(g,s,l,h,p,o.graticule,c),T(g,l,o.showLegend,c),g.append("text").attr("class","radarTitle").text(d).attr("x",0).attr("y",-c.height/2-c.marginTop)},"draw"),w=(0,r._)((t,e)=>{const a=e.width+e.marginLeft+e.marginRight,r=e.height+e.marginTop+e.marginBottom,n=e.marginLeft+e.width/2,i=e.marginTop+e.height/2;return t.attr("viewbox",`0 0 ${a} ${r}`).attr("width",a).attr("height",r),t.append("g").attr("transform",`translate(${n}, ${i})`)},"drawFrame"),b=(0,r._)((t,e,a,r,n)=>{if("circle"===n)for(let e=0;e<r;e++){const n=a*(e+1)/r;t.append("circle").attr("r",n).attr("class","radarGraticule")}else if("polygon"===n){const n=e.length;for(let i=0;i<r;i++){const s=a*(i+1)/r,l=e.map((t,e)=>{const a=2*e*Math.PI/n-Math.PI/2;return`${s*Math.cos(a)},${s*Math.sin(a)}`}).join(" ");t.append("polygon").attr("points",l).attr("class","radarGraticule")}}},"drawGraticule"),C=(0,r._)((t,e,a,r)=>{const n=e.length;for(let i=0;i<n;i++){const s=e[i].label,l=2*i*Math.PI/n-Math.PI/2;t.append("line").attr("x1",0).attr("y1",0).attr("x2",a*r.axisScaleFactor*Math.cos(l)).attr("y2",a*r.axisScaleFactor*Math.sin(l)).attr("class","radarAxisLine"),t.append("text").text(s).attr("x",a*r.axisLabelFactor*Math.cos(l)).attr("y",a*r.axisLabelFactor*Math.sin(l)).attr("class","radarAxisLabel")}},"drawAxes");function _(t,e,a,r,n,i,s){const l=e.length,o=Math.min(s.width,s.height)/2;a.forEach((e,a)=>{if(e.entries.length!==l)return;const c=e.entries.map((t,e)=>{const a=2*Math.PI*e/l-Math.PI/2,i=M(t,r,n,o);return{x:i*Math.cos(a),y:i*Math.sin(a)}});"circle"===i?t.append("path").attr("d",L(c,s.curveTension)).attr("class",`radarCurve-${a}`):"polygon"===i&&t.append("polygon").attr("points",c.map(t=>`${t.x},${t.y}`).join(" ")).attr("class",`radarCurve-${a}`)})}function M(t,e,a,r){return r*(Math.min(Math.max(t,e),a)-e)/(a-e)}function L(t,e){const a=t.length;let r=`M${t[0].x},${t[0].y}`;for(let n=0;n<a;n++){const i=t[(n-1+a)%a],s=t[n],l=t[(n+1)%a],o=t[(n+2)%a],c={x:s.x+(l.x-i.x)*e,y:s.y+(l.y-i.y)*e},d={x:l.x-(o.x-s.x)*e,y:l.y-(o.y-s.y)*e};r+=` C${c.x},${c.y} ${d.x},${d.y} ${l.x},${l.y}`}return`${r} Z`}function T(t,e,a,r){if(!a)return;const n=3*(r.width/2+r.marginRight)/4,i=3*-(r.height/2+r.marginTop)/4;e.forEach((e,a)=>{const r=t.append("g").attr("transform",`translate(${n}, ${i+20*a})`);r.append("rect").attr("width",12).attr("height",12).attr("class",`radarLegendBox-${a}`),r.append("text").attr("x",16).attr("y",0).attr("class","radarLegendText").text(e.label)})}(0,r._)(_,"drawCurves"),(0,r._)(M,"relativeRadius"),(0,r._)(L,"closedRoundCurve"),(0,r._)(T,"drawLegend");var k={draw:y},A=(0,r._)((t,e)=>{let a="";for(let r=0;r<t.THEME_COLOR_LIMIT;r++){const n=t[`cScale${r}`];a+=`\n\t\t.radarCurve-${r} {\n\t\t\tcolor: ${n};\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${e.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t\tstroke-width: ${e.curveStrokeWidth};\n\t\t}\n\t\t.radarLegendBox-${r} {\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${e.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t}\n\t\t`}return a},"genIndexStyles"),O=(0,r._)(t=>{const e=(0,r.a1)(),a=(0,r.G)(),n=(0,r.F)(e,a.themeVariables);return{themeVariables:n,radarOptions:(0,r.F)(n.radar,t)}},"buildRadarStyleOptions"),S={parser:v,db:$,renderer:k,styles:(0,r._)(({radar:t}={})=>{const{themeVariables:e,radarOptions:a}=O(t);return`\n\t.radarTitle {\n\t\tfont-size: ${e.fontSize};\n\t\tcolor: ${e.titleColor};\n\t\tdominant-baseline: hanging;\n\t\ttext-anchor: middle;\n\t}\n\t.radarAxisLine {\n\t\tstroke: ${a.axisColor};\n\t\tstroke-width: ${a.axisStrokeWidth};\n\t}\n\t.radarAxisLabel {\n\t\tdominant-baseline: middle;\n\t\ttext-anchor: middle;\n\t\tfont-size: ${a.axisLabelFontSize}px;\n\t\tcolor: ${a.axisColor};\n\t}\n\t.radarGraticule {\n\t\tfill: ${a.graticuleColor};\n\t\tfill-opacity: ${a.graticuleOpacity};\n\t\tstroke: ${a.graticuleColor};\n\t\tstroke-width: ${a.graticuleStrokeWidth};\n\t}\n\t.radarLegendText {\n\t\ttext-anchor: start;\n\t\tfont-size: ${a.legendFontSize}px;\n\t\tdominant-baseline: hanging;\n\t}\n\t${A(e,a)}\n\t`},"styles")}},45412:(t,e,a)=>{function r(t,e){var a,r,n;t.accDescr&&(null==(a=e.setAccDescription)||a.call(e,t.accDescr)),t.accTitle&&(null==(r=e.setAccTitle)||r.call(e,t.accTitle)),t.title&&(null==(n=e.setDiagramTitle)||n.call(e,t.title))}a.d(e,{p:()=>r}),(0,a(18118)._)(r,"populateCommonDb")}}]);