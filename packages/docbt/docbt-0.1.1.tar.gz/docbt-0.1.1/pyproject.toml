[project]
name = "docbt"
version = "0.1.1"
description = "docdbt (documentation build tool) is a Streamlit app for managing dbt project documentation."
readme = "README.md"
authors = [{ name = "Alin Preda", email = "predaalin2694@gmail.com" }]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Libraries",
]
license = "Apache-2.0"
license-files = ["LICENSE"]
dependencies = [
    "click>=8.2.1",
    "loguru>=0.7.3",
    "python-dotenv>=1.1.1",
    "streamlit>=1.49.1",
    "watchdog>=6.0.0",
    "openai>=1.0.0",
    "requests>=2.31.0",
    "tiktoken>=0.5.0",
    "pyyaml>=6.0.2",
]
keywords = [
    "dbt",
    "documentation",
    "testing",
    "sql",
    "streamlit",
    "llm",
    "ai",
    "openai",
    "ollama",
    "snowflake",
    "bigquery",
]

[project.optional-dependencies]
# Optional features for end-users
snowflake = ["snowflake-connector-python>=3.17.4"]
bigquery = ["google-cloud>=0.34.0", "google-cloud-bigquery>=3.38.0"]
all-providers = [
    "snowflake-connector-python>=3.17.4",
    "google-cloud>=0.34.0",
    "google-cloud-bigquery>=3.38.0",
]

[project.urls]
Homepage = "https://github.com/aleenprd/docbt"
Repository = "https://github.com/aleenprd/docbt"
Issues = "https://github.com/aleenprd/docbt/issues"

[project.scripts]
docbt = "docbt.cli.docbt_cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/docbt"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short", "--strict-markers"]
markers = ["unit: Unit tests", "integration: Integration tests"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*.py" = ["B018"]  # Allow "useless expressions" in tests

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = [
    "B101",  # assert_used - asserts are fine in tests
    "B601",  # shell_injection - paramiko calls
    "B404",  # import_subprocess - we need subprocess for CLI
    "B603",  # subprocess_without_shell_equals_true - we're not using shell=True which is good
    "B608",  # hardcoded_sql_expressions - SQL queries in a data tool are expected, using trusted inputs
]

[dependency-groups]
# Development dependencies (not published with package)
dev = [
    "pre-commit>=4.3.0",
    "ruff>=0.14.1",
    "pytest>=8.4.2",
    "pytest-cov>=4.1.0",
    "twine>=6.2.0",
    "bump-my-version>=0.26.0",
]

[tool.bumpversion]
current_version = "0.1.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} â†’ {new_version}"
allow_dirty = false
commit = true
message = "chore: bump version from {current_version} to {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = """## [Unreleased]

## [{new_version}] - {now:%Y-%m-%d}"""
