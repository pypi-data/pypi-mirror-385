[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-registration-utils"
description = "Tools for registration of individual brains to a template brain"
license = "MIT"
requires-python = ">=3.10"
authors = [
  { name = "Galen Lynch", email = "galen@galenlynch.com" },
  { name = "Allen Institute for Neural Dynamics" },
]
classifiers = ["Programming Language :: Python :: 3"]
readme = "README.md"
version = "0.4.1"

dependencies = [
  "aind-anatomical-utils>=0.1,<0.5",
  "aind-ants-transform-sidecar>=0.1,<0.2",
  "antspyx>=0.2,<0.7",
  "numpy>=1,<3",
  "pandas>=2,<3",
  "scikit-image>=0.14,<1",
  "scipy>=1,<2",
  "SimpleITK>=2,<3",
  "vtk>=9,<10",
]

[project.urls]
Repository = "https://github.com/AllenNeuralDynamics/aind-registration-utils/"
Issues = "https://github.com/AllenNeuralDynamics/aind-registration-utils/issues"
Changelog = "https://github.com/AllenNeuralDynamics/aind-registration-utils/blob/main/CHANGELOG.md"


[project.scripts]
register_individual_to_template = "aind_registration_utils.scripts.register_individual_to_template:main"

[dependency-groups]
types = [
    "mypy",
    "pandas-stubs",
    "scipy-stubs",
]
dev = [{ include-group = "types" }, "codespell", "pytest", "pytest-cov", "ruff", "interrogate"]
jupyter = [{ include-group = "dev" }, "ipykernel", "pip"]
docs = [
  { include-group = "dev" },
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings[python]",
  "pymdown-extensions",
  "ruff",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"aind_registration_utils" = ["py.typed"]


[tool.ruff]
line-length = 88
target-version = 'py310'


[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "I", "F", "E", "W", "UP", "ANN", "PYI"]
extend-ignore = ["ANN401"]
per-file-ignores = { "tests/*.py" = ["ANN"], "docs/**/*.py" = ["ANN"], "notebooks/*.py" = ["ANN"] }
mccabe = { max-complexity = 14 }
pydocstyle = { convention = "numpy" }

[tool.codespell]
skip = ".git,*.pdf,*.svg,./bonsai,*.bonsai,./docs/_build,uv.lock"
ignore-words-list = "nd"

[tool.pytest.ini_options]
addopts = "--strict-markers --tb=short --cov=src --cov-report=term-missing --cov-fail-under=0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.interrogate]
ignore-init-method = true
ignore-magic = true
ignore_module = true
fail-under = 30
exclude = [
  "__init__.py",
  "tests",
  "docs",
  "build",
  "setup.py",
  "examples",
  "site",
]

[tool.mypy]
files = ["src/aind_registration_utils"]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ants.*",
    "vtk.*",
    "skimage.*",
    "aind_anatomical_utils.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.commitizen]
version_provider = "pep621"
version_files = [
  "src/aind_registration_utils/__init__.py:__version__",
]
update_changelog_on_bump = true
tag_format = "v$version"
major_version_zero = true
