# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from phonexia.grpc.technologies.age_estimation.v1 import age_estimation_pb2 as phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2

GRPC_GENERATED_VERSION = '1.71.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in phonexia/grpc/technologies/age_estimation/v1/age_estimation_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AgeEstimationStub(object):
    """Service that implements age estimation.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Estimate = channel.stream_stream(
                '/phonexia.grpc.technologies.age_estimation.v1.AgeEstimation/Estimate',
                request_serializer=phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2.EstimateRequest.SerializeToString,
                response_deserializer=phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2.EstimateResponse.FromString,
                _registered_method=True)


class AgeEstimationServicer(object):
    """Service that implements age estimation.
    """

    def Estimate(self, request_iterator, context):
        """Performs synchronous age estimation using either voiceprints or audio.

        If voiceprints are used:
        - Multiple voiceprints can be sent at a time.
        - Due to message size limitations (typically 4MB), voiceprints may need to be sent in multiple chunks.
        - The service processes each chunk separately and returns a corresponding partial result.

        If audio is used:
        - Only a single audio may be sent.
        - The result is returned after the entire audio file has been received and processed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgeEstimationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Estimate': grpc.stream_stream_rpc_method_handler(
                    servicer.Estimate,
                    request_deserializer=phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2.EstimateRequest.FromString,
                    response_serializer=phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2.EstimateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'phonexia.grpc.technologies.age_estimation.v1.AgeEstimation', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('phonexia.grpc.technologies.age_estimation.v1.AgeEstimation', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AgeEstimation(object):
    """Service that implements age estimation.
    """

    @staticmethod
    def Estimate(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/phonexia.grpc.technologies.age_estimation.v1.AgeEstimation/Estimate',
            phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2.EstimateRequest.SerializeToString,
            phonexia_dot_grpc_dot_technologies_dot_age__estimation_dot_v1_dot_age__estimation__pb2.EstimateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
