---
source: tests/btor2_test.rs
expression: sys.serialize_to_str(&ctx)
---
sdram_controller.original
input clk : bv<1>
input data_in : bv<16>
input rd_addr : bv<24>
input rd_enable : bv<1>
input rst_n : bv<1>
input wr_addr : bv<24>
input wr_data : bv<16>
input wr_enable : bv<1>
node _eq_sdram_controller.no_tri_state.v:276_22 : bv<1> = eq(state, 5'b01110)
node data_oe : bv<1> = eq(state, 5'b11010)
node _or_sdram_controller.no_tri_state.v:253_21 : bv<1> = or(eq(state, 5'b10010), data_oe)
node _or_sdram_controller.no_tri_state.v:248_18 : bv<1> = or(eq(state, 5'b10000), eq(state, 5'b11000))
node %39 : bv<1> = state[4]
output addr : bv<13> = ite(or(%39, _eq_sdram_controller.no_tri_state.v:276_22), ite(_or_sdram_controller.no_tri_state.v:248_18, haddr_r[21:9], ite(_or_sdram_controller.no_tri_state.v:253_21, concat(4'b0010, haddr_r[8:0]), ite(_eq_sdram_controller.no_tri_state.v:276_22, 13'x0230, 13'x0000))), concat(2'b00, concat(command[0], 10'x000)))
node %43 : bv<2> = haddr_r[23:22]
output bank_addr : bv<2> = ite(%39, ite(_or_sdram_controller.no_tri_state.v:248_18, %43, ite(_or_sdram_controller.no_tri_state.v:253_21, %43, 2'b00)), command[2:1])
output busy : bv<1>
output cas_n : bv<1> = command[4]
output clock_enable : bv<1> = command[7]
output cs_n : bv<1> = command[6]
output data_mask_high : bv<1> = not(%39)
output data_out : bv<16>
output ras_n : bv<1> = command[5]
output rd_data : bv<16>
output rd_ready : bv<1>
output we_n : bv<1> = command[3]
node %152 : bv<17> = _state_5[state]
node _logic_not_sdram_controller.no_tri_state.v:315_26 : bv<1> = eq(state_cnt, 4'b0000)
node _ge_sdram_controller.no_tri_state.v:294_25 : bv<1> = ugte(concat(22'x000000, refresh_cnt), 32'x00000207)
node _eq_sdram_controller.no_tri_state.v:292_24 : bv<1> = eq(state, 5'b00000)
node _auto_opt_dff.cc:195:make_patterns_logic_224 : bv<1> = not(or(_eq_sdram_controller.no_tri_state.v:292_24, _logic_not_sdram_controller.no_tri_state.v:315_26))
node _procmux_171 : bv<1> = eq(state, 5'b10100)
state command : bv<8>
  [next] ite(rst_n, ite(_auto_opt_dff.cc:195:make_patterns_logic_224, ite(_eq_sdram_controller.no_tri_state.v:292_24, ite(_ge_sdram_controller.no_tri_state.v:294_25, 8'b10010001, ite(rd_enable, 8'b10011000, ite(wr_enable, 8'b10011000, 8'b10111000))), ite(_logic_not_sdram_controller.no_tri_state.v:315_26, %152[16:9], 8'b00000000)), command), 8'b10111000)
state state : bv<5>
  [next] ite(rst_n, ite(_auto_opt_dff.cc:195:make_patterns_logic_224, ite(_eq_sdram_controller.no_tri_state.v:292_24, ite(_ge_sdram_controller.no_tri_state.v:294_25, 5'b00001, ite(rd_enable, 5'b10000, ite(wr_enable, 5'b11000, 5'b00000))), ite(_logic_not_sdram_controller.no_tri_state.v:315_26, %152[8:4], 5'b00000)), state), 5'b01000)
state haddr_r : bv<24>
  [next] ite(rst_n, ite(not(or(rd_enable, wr_enable)), ite(rd_enable, rd_addr, ite(wr_enable, wr_addr, 24'x000000)), haddr_r), 24'x000000)
state busy : bv<1>
  [next] and(rst_n, %39)
state data_out : bv<16>
  [next] ite(rst_n, ite(wr_enable, wr_data, data_out), 16'x0000)
state rd_data : bv<16>
  [next] ite(rst_n, ite(_procmux_171, data_in, rd_data), 16'x0000)
state rd_ready : bv<1>
  [next] ite(rst_n, _procmux_171, rd_ready)
state _state_5 : bv<5> -> bv<17>
  [init] ([17'x00000] x 2^5)[5'b00000 := 17'x17000][5'b00001 := 17'x17020][5'b00010 := 17'x11030][5'b00011 := 17'x17047][5'b00100 := 17'x17000][5'b00101 := 17'x110a0][5'b00110 := 17'x17000][5'b00111 := 17'x17000][5'b01000 := 17'x12290][5'b01001 := 17'x17050][5'b01010 := 17'x170b7][5'b01011 := 17'x110c0][5'b01100 := 17'x170d7][5'b01101 := 17'x100e0][5'b01110 := 17'x170f1][5'b01111 := 17'x17000][5'b10000 := 17'x17111][5'b10001 := 17'x15320][5'b10010 := 17'x17131][5'b10011 := 17'x17140][5'b10100 := 17'x17000][5'b10101 := 17'x17000][5'b10110 := 17'x17000][5'b10111 := 17'x17000][5'b11000 := 17'x17191][5'b11001 := 17'x143a0][5'b11010 := 17'x171b1][5'b11011 := 17'x17000][5'b11100 := 17'x17000][5'b11101 := 17'x17000][5'b11110 := 17'x17000][5'b11111 := 17'x17000]
  [next] _state_5
state state_cnt : bv<4>
  [next] ite(rst_n, ite(_logic_not_sdram_controller.no_tri_state.v:315_26, ite(_eq_sdram_controller.no_tri_state.v:292_24, 4'b0000, %152[3:0]), sub(state_cnt, 4'b0001)), 4'b1111)
state refresh_cnt : bv<10>
  [next] ite(not(and(rst_n, not(eq(state, 5'b00100)))), 10'x000, add(refresh_cnt, 10'x001))
