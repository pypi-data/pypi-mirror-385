---
source: tests/btor2_test.rs
expression: sys.serialize_to_str(&ctx)
---
DSP48E2
input RSTP : bv<1>
input RSTM : bv<1>
input RSTINMODE : bv<1>
input RSTD : bv<1>
input RSTCTRL : bv<1>
input RSTC : bv<1>
input RSTB : bv<1>
input RSTALUMODE : bv<1>
input RSTALLCARRYIN : bv<1>
input RSTA : bv<1>
input PCIN : bv<48>
input OPMODE : bv<9>
input MULTSIGNIN : bv<1>
input INMODE : bv<5>
input D : bv<27>
input CLK : bv<1>
input CEP : bv<1>
input CEM : bv<1>
input CEINMODE : bv<1>
input CED : bv<1>
input CECTRL : bv<1>
input CECARRYIN : bv<1>
input CEC : bv<1>
input CEB2 : bv<1>
input CEB1 : bv<1>
input CEALUMODE : bv<1>
input CEAD : bv<1>
input CEA2 : bv<1>
input CEA1 : bv<1>
input CARRYINSEL : bv<3>
input CARRYIN : bv<1>
input CARRYCASCIN : bv<1>
input C : bv<48>
input BCIN : bv<18>
input B : bv<18>
input ALUMODE : bv<4>
input ACIN : bv<30>
input A : bv<30>
input XORSIMD : bv<5>
input USE_WIDEXOR : bv<5>
input USE_SIMD : bv<5>
input USE_PATTERN_DETECT : bv<5>
input USE_MULT : bv<5>
input SEL_PATTERN : bv<5>
input SEL_MASK : bv<5>
input RND : bv<48>
input PREG : bv<32>
input PREADDINSEL : bv<5>
input PATTERN : bv<48>
input OPMODEREG : bv<32>
input MREG : bv<32>
input MASK : bv<48>
input IS_RSTP_INVERTED : bv<1>
input IS_RSTM_INVERTED : bv<1>
input IS_RSTINMODE_INVERTED : bv<1>
input IS_RSTD_INVERTED : bv<1>
input IS_RSTC_INVERTED : bv<1>
input IS_RSTCTRL_INVERTED : bv<1>
input IS_RSTB_INVERTED : bv<1>
input IS_RSTA_INVERTED : bv<1>
input IS_RSTALUMODE_INVERTED : bv<1>
input IS_RSTALLCARRYIN_INVERTED : bv<1>
input IS_OPMODE_INVERTED : bv<9>
input IS_INMODE_INVERTED : bv<5>
input IS_CLK_INVERTED : bv<1>
input IS_CARRYIN_INVERTED : bv<1>
input IS_ALUMODE_INVERTED : bv<4>
input INMODEREG : bv<32>
input DREG : bv<32>
input CREG : bv<32>
input CARRYINSELREG : bv<32>
input CARRYINREG : bv<32>
input B_INPUT : bv<5>
input BREG : bv<32>
input BMULTSEL : bv<5>
input BCASCREG : bv<32>
input A_INPUT : bv<5>
input AUTORESET_PRIORITY : bv<5>
input AUTORESET_PATDET : bv<5>
input AREG : bv<32>
input AMULTSEL : bv<5>
input ALUMODEREG : bv<32>
input ADREG : bv<32>
input ACASCREG : bv<32>
node %8608 : bv<1> = C[11]
node %8607 : bv<1> = C_reg[11]
node CREG_BIN : bv<1> = CREG[0]
node %8609 : bv<1> = ite(CREG_BIN, %8607, %8608)
node %5427 : bv<2> = IS_OPMODE_INVERTED[3:2]
node %5426 : bv<2> = OPMODE[3:2]
node %5428 : bv<2> = xor(%5426, %5427)
node %5423 : bv<2> = OPMODE_reg[3:2]
node OPMODEREG_BIN : bv<1> = OPMODEREG[0]
node %5429 : bv<2> = ite(OPMODEREG_BIN, %5423, %5428)
node _procmux_624_CMP0 : bv<1> = eq(%5429, 2'b11)
node %8736 : bv<1> = and(_procmux_624_CMP0, %8609)
node _procmux_625_CMP0 : bv<1> = eq(%5429, 2'b10)
node %8737 : bv<1> = or(_procmux_625_CMP0, %8736)
node %2249 : bv<18> = A[17:0]
node %2250 : bv<18> = ACIN[17:0]
node %1989 : bv<1> = eq(A_INPUT, 5'b01111)
node %1993 : bv<1> = eq(A_INPUT, 5'b00111)
node %1998 : bv<1> = not(%1993)
node A_INPUT_BIN : bv<1> = and(%1998, %1989)
node %2251 : bv<18> = ite(A_INPUT_BIN, %2250, %2249)
node %2252 : bv<18> = A2_reg[17:0]
node AREG_BIN : bv<2> = AREG[1:0]
node %247 : bv<1> = eq(AREG_BIN, 2'b00)
node %248 : bv<1> = not(%247)
node %2253 : bv<18> = ite(%248, %2252, %2251)
node %2254 : bv<18> = A1_reg[17:0]
node %2029 : bv<1> = IS_INMODE_INVERTED[0]
node %2028 : bv<1> = INMODE[0]
node %2030 : bv<1> = xor(%2028, %2029)
node %2025 : bv<1> = INMODE_reg[0]
node INMODEREG_BIN : bv<1> = INMODEREG[0]
node %2031 : bv<1> = ite(INMODEREG_BIN, %2025, %2030)
node %2255 : bv<18> = ite(%2031, %2254, %2253)
node %2037 : bv<1> = IS_INMODE_INVERTED[1]
node %2036 : bv<1> = INMODE[1]
node %2038 : bv<1> = xor(%2036, %2037)
node %2033 : bv<1> = INMODE_reg[1]
node %2039 : bv<1> = ite(INMODEREG_BIN, %2033, %2038)
node %2046 : bv<1> = eq(PREADDINSEL, 5'b00001)
node %2053 : bv<1> = eq(PREADDINSEL, 5'b00000)
node %2058 : bv<1> = not(%2053)
node PREADDINSEL_BIN : bv<1> = and(%2058, %2046)
node %2065 : bv<1> = not(PREADDINSEL_BIN)
node %2066 : bv<1> = and(%2065, %2039)
node %2256 : bv<18> = ite(%2066, 18'x00000, %2255)
node %2257 : bv<18> = ite(%2066, 18'x00000, %2256)
node %1963 : bv<1> = eq(B_INPUT, 5'b01111)
node %1971 : bv<1> = eq(B_INPUT, 5'b00111)
node %1978 : bv<1> = not(%1971)
node B_INPUT_BIN : bv<1> = and(%1978, %1963)
node _procmux_557 : bv<18> = ite(B_INPUT_BIN, BCIN, B)
node BREG_BIN : bv<2> = BREG[1:0]
node %233 : bv<1> = eq(BREG_BIN, 2'b00)
node %234 : bv<1> = not(%233)
node B2_DATA : bv<18> = ite(%234, B2_reg, _procmux_557)
node %2073 : bv<1> = IS_INMODE_INVERTED[4]
node %2072 : bv<1> = INMODE[4]
node %2074 : bv<1> = xor(%2072, %2073)
node %2069 : bv<1> = INMODE_reg[4]
node %2075 : bv<1> = ite(INMODEREG_BIN, %2069, %2074)
node _procmux_453 : bv<18> = ite(%2075, B1_DATA_out, B2_DATA)
node %2079 : bv<1> = and(PREADDINSEL_BIN, %2039)
node _procmux_456 : bv<18> = ite(%2079, 18'x00000, _procmux_453)
node B2B1 : bv<18> = ite(%2079, 18'x00000, _procmux_456)
node %2266 : bv<18> = ite(PREADDINSEL_BIN, B2B1, %2257)
node %2270 : bv<18> = D[17:0]
node %2269 : bv<18> = D_DATA_reg[17:0]
node DREG_BIN : bv<1> = DREG[0]
node %2117 : bv<1> = eq(USE_MULT, 5'b10100)
node %2143 : bv<2> = ite(%2117, 2'b10, 2'b00)
node %2125 : bv<1> = eq(USE_MULT, 5'b10010)
node %2144 : bv<2> = ite(%2125, 2'b01, %2143)
node %2133 : bv<1> = eq(USE_MULT, 5'b01010)
node USE_MULT_BIN : bv<2> = ite(%2133, 2'b00, %2144)
node %2151 : bv<1> = eq(USE_MULT_BIN, 2'b10)
node %2158 : bv<1> = eq(BMULTSEL, 5'b00010)
node %2166 : bv<1> = eq(BMULTSEL, 5'b00001)
node %2171 : bv<1> = not(%2166)
node BMULTSEL_BIN : bv<1> = and(%2171, %2158)
node %2179 : bv<1> = eq(AMULTSEL, 5'b00010)
node %2187 : bv<1> = eq(AMULTSEL, 5'b00000)
node %2192 : bv<1> = not(%2187)
node AMULTSEL_BIN : bv<1> = and(%2192, %2179)
node %2198 : bv<1> = or(AMULTSEL_BIN, BMULTSEL_BIN)
node %2199 : bv<1> = or(%2198, %2151)
node %2200 : bv<1> = not(%2199)
node DREG_INT : bv<1> = and(%2200, DREG_BIN)
node %2271 : bv<18> = ite(DREG_INT, %2269, %2270)
node %2207 : bv<1> = IS_INMODE_INVERTED[2]
node %2206 : bv<1> = INMODE[2]
node %2208 : bv<1> = xor(%2206, %2207)
node %2203 : bv<1> = INMODE_reg[2]
node %2209 : bv<1> = ite(INMODEREG_BIN, %2203, %2208)
node %2272 : bv<18> = ite(%2209, %2271, 18'x00000)
node %2273 : bv<18> = add(%2272, %2266)
node %2275 : bv<18> = sub(%2272, %2266)
node %2217 : bv<1> = IS_INMODE_INVERTED[3]
node %2216 : bv<1> = INMODE[3]
node %2218 : bv<1> = xor(%2216, %2217)
node %2213 : bv<1> = INMODE_reg[3]
node %2219 : bv<1> = ite(INMODEREG_BIN, %2213, %2218)
node %2276 : bv<18> = ite(%2219, %2275, %2273)
node %2223 : bv<18> = AD_DATA_reg[17:0]
node ADREG_BIN : bv<1> = ADREG[0]
node ADREG_INT : bv<1> = and(%2200, ADREG_BIN)
node %2277 : bv<18> = ite(ADREG_INT, %2223, %2276)
node %2176 : bv<1> = not(BMULTSEL_BIN)
node b_mult_mux : bv<18> = ite(%2176, B2B1, %2277)
node %2286 : bv<1> = %2273[17]
node %2285 : bv<1> = %2275[17]
node %2287 : bv<1> = ite(%2219, %2285, %2286)
node %2288 : bv<1> = AD_DATA_reg[17]
node %2289 : bv<1> = ite(ADREG_INT, %2288, %2287)
node %2094 : bv<1> = B[17]
node %2093 : bv<1> = BCIN[17]
node %2095 : bv<1> = ite(B_INPUT_BIN, %2093, %2094)
node %2090 : bv<1> = B2_reg[17]
node %2096 : bv<1> = ite(%234, %2090, %2095)
node %2087 : bv<1> = B1_DATA_out[17]
node %2097 : bv<1> = ite(%2075, %2087, %2096)
node %2098 : bv<1> = not(%2079)
node %2099 : bv<1> = and(%2098, %2097)
node %2100 : bv<1> = and(%2098, %2099)
node BMULT17_in : bv<1> = ite(%2176, %2100, %2289)
node %2291 : bv<19> = concat(BMULT17_in, b_mult_mux)
node %2292 : bv<20> = concat(BMULT17_in, %2291)
node %2293 : bv<21> = concat(BMULT17_in, %2292)
node %2294 : bv<22> = concat(BMULT17_in, %2293)
node %2295 : bv<23> = concat(BMULT17_in, %2294)
node %2296 : bv<24> = concat(BMULT17_in, %2295)
node %2297 : bv<25> = concat(BMULT17_in, %2296)
node %2298 : bv<26> = concat(BMULT17_in, %2297)
node %2299 : bv<27> = concat(BMULT17_in, %2298)
node %2300 : bv<28> = concat(BMULT17_in, %2299)
node %2301 : bv<29> = concat(BMULT17_in, %2300)
node %2302 : bv<30> = concat(BMULT17_in, %2301)
node %2303 : bv<31> = concat(BMULT17_in, %2302)
node %2304 : bv<32> = concat(BMULT17_in, %2303)
node %2305 : bv<33> = concat(BMULT17_in, %2304)
node %2306 : bv<34> = concat(BMULT17_in, %2305)
node %2307 : bv<35> = concat(BMULT17_in, %2306)
node %2308 : bv<36> = concat(BMULT17_in, %2307)
node %2309 : bv<37> = concat(BMULT17_in, %2308)
node %2310 : bv<38> = concat(BMULT17_in, %2309)
node %2311 : bv<39> = concat(BMULT17_in, %2310)
node %2312 : bv<40> = concat(BMULT17_in, %2311)
node %2313 : bv<41> = concat(BMULT17_in, %2312)
node %2314 : bv<42> = concat(BMULT17_in, %2313)
node %2315 : bv<43> = concat(BMULT17_in, %2314)
node %2316 : bv<44> = concat(BMULT17_in, %2315)
node %2021 : bv<27> = A[26:0]
node %2020 : bv<27> = ACIN[26:0]
node %2022 : bv<27> = ite(A_INPUT_BIN, %2020, %2021)
node %2017 : bv<27> = A2_reg[26:0]
node %2023 : bv<27> = ite(%248, %2017, %2022)
node %316 : bv<27> = A1_reg[26:0]
node _procmux_462 : bv<27> = ite(%2031, %316, %2023)
node _procmux_465 : bv<27> = ite(%2066, 27'x0000000, _procmux_462)
node A2A1 : bv<27> = ite(%2066, 27'x0000000, _procmux_465)
node %2101 : bv<19> = concat(%2100, B2B1)
node %2102 : bv<20> = concat(%2100, %2101)
node %2103 : bv<21> = concat(%2100, %2102)
node %2104 : bv<22> = concat(%2100, %2103)
node %2105 : bv<23> = concat(%2100, %2104)
node %2106 : bv<24> = concat(%2100, %2105)
node %2107 : bv<25> = concat(%2100, %2106)
node %2108 : bv<26> = concat(%2100, %2107)
node %2109 : bv<27> = concat(%2100, %2108)
node PREADD_AB : bv<27> = ite(PREADDINSEL_BIN, %2109, A2A1)
node D_DATA : bv<27> = ite(DREG_INT, D_DATA_reg, D)
node D_DATA_mux : bv<27> = ite(%2209, D_DATA, 27'x0000000)
node %2211 : bv<27> = add(D_DATA_mux, PREADD_AB)
node %2212 : bv<27> = sub(D_DATA_mux, PREADD_AB)
node AD_in : bv<27> = ite(%2219, %2212, %2211)
node AD_DATA : bv<27> = ite(ADREG_INT, AD_DATA_reg, AD_in)
node %2197 : bv<1> = not(AMULTSEL_BIN)
node a_mult_mux : bv<27> = ite(%2197, A2A1, AD_DATA)
node %2326 : bv<1> = %2211[26]
node %2325 : bv<1> = %2212[26]
node %2327 : bv<1> = ite(%2219, %2325, %2326)
node %2322 : bv<1> = AD_DATA_reg[26]
node %2328 : bv<1> = ite(ADREG_INT, %2322, %2327)
node %2343 : bv<1> = A[26]
node %2344 : bv<1> = ACIN[26]
node %2345 : bv<1> = ite(A_INPUT_BIN, %2344, %2343)
node %2346 : bv<1> = A2_reg[26]
node %2347 : bv<1> = ite(%248, %2346, %2345)
node %2348 : bv<1> = A1_reg[26]
node %2349 : bv<1> = ite(%2031, %2348, %2347)
node %2350 : bv<1> = not(%2066)
node %2351 : bv<1> = and(%2350, %2349)
node %2352 : bv<1> = and(%2350, %2351)
node AMULT26_in : bv<1> = ite(%2197, %2352, %2328)
node %2354 : bv<28> = concat(AMULT26_in, a_mult_mux)
node %2355 : bv<29> = concat(AMULT26_in, %2354)
node %2356 : bv<30> = concat(AMULT26_in, %2355)
node %2357 : bv<31> = concat(AMULT26_in, %2356)
node %2358 : bv<32> = concat(AMULT26_in, %2357)
node %2359 : bv<33> = concat(AMULT26_in, %2358)
node %2360 : bv<34> = concat(AMULT26_in, %2359)
node %2361 : bv<35> = concat(AMULT26_in, %2360)
node %2362 : bv<36> = concat(AMULT26_in, %2361)
node %2363 : bv<37> = concat(AMULT26_in, %2362)
node %2364 : bv<38> = concat(AMULT26_in, %2363)
node %2365 : bv<39> = concat(AMULT26_in, %2364)
node %2366 : bv<40> = concat(AMULT26_in, %2365)
node %2367 : bv<41> = concat(AMULT26_in, %2366)
node %2368 : bv<42> = concat(AMULT26_in, %2367)
node %2369 : bv<43> = concat(AMULT26_in, %2368)
node %2370 : bv<44> = concat(AMULT26_in, %2369)
node %2380 : bv<44> = mul(%2370, %2316)
node %5520 : bv<1> = %2380[11]
node %2608 : bv<1> = not(%2151)
node %5522 : bv<1> = and(%2608, %5520)
node %8741 : bv<1> = V_DATA_reg[11]
node MREG_BIN : bv<1> = MREG[0]
node %8777 : bv<1> = ite(MREG_BIN, %8741, %5522)
node %5370 : bv<1> = eq(USE_SIMD, 5'b11001)
node %5393 : bv<2> = ite(%5370, 2'b10, 2'b00)
node %5378 : bv<1> = eq(USE_SIMD, 5'b10011)
node %5394 : bv<2> = ite(%5378, 2'b01, %5393)
node %5386 : bv<1> = eq(USE_SIMD, 5'b01100)
node USE_SIMD_BIN : bv<2> = ite(%5386, 2'b00, %5394)
node %5401 : bv<1> = eq(USE_SIMD_BIN, 2'b00)
node %8778 : bv<1> = and(%5401, %8777)
node _procmux_626_CMP0 : bv<1> = eq(%5429, 2'b01)
node %8779 : bv<1> = ite(_procmux_626_CMP0, %8778, %8737)
node _procmux_627_CMP0 : bv<1> = eq(%5429, 2'b00)
node %8780 : bv<1> = not(_procmux_627_CMP0)
node %8781 : bv<1> = and(%8780, %8779)
node %8667 : bv<1> = B[11]
node %8666 : bv<1> = BCIN[11]
node %8668 : bv<1> = ite(B_INPUT_BIN, %8666, %8667)
node %8663 : bv<1> = B2_reg[11]
node %8669 : bv<1> = ite(%234, %8663, %8668)
node %2010 : bv<2> = IS_OPMODE_INVERTED[1:0]
node %2009 : bv<2> = OPMODE[1:0]
node %2011 : bv<2> = xor(%2009, %2010)
node %2006 : bv<2> = OPMODE_reg[1:0]
node %2012 : bv<2> = ite(OPMODEREG_BIN, %2006, %2011)
node _procmux_629_CMP0 : bv<1> = eq(%2012, 2'b11)
node %8670 : bv<1> = and(_procmux_629_CMP0, %8669)
node %8555 : bv<1> = P_FDBK_in[11]
node _procmux_630_CMP0 : bv<1> = eq(%2012, 2'b10)
node %8671 : bv<1> = ite(_procmux_630_CMP0, %8555, %8670)
node %8678 : bv<1> = U_DATA_reg[11]
node %8713 : bv<1> = and(MREG_BIN, %8678)
node %8714 : bv<1> = and(%5401, %8713)
node _procmux_631_CMP0 : bv<1> = eq(%2012, 2'b01)
node %8715 : bv<1> = ite(_procmux_631_CMP0, %8714, %8671)
node _procmux_632_CMP0 : bv<1> = eq(%2012, 2'b00)
node %8719 : bv<1> = not(_procmux_632_CMP0)
node %8720 : bv<1> = and(%8719, %8715)
node %8585 : bv<1> = P_FDBK_in[28]
node %1877 : bv<2> = IS_OPMODE_INVERTED[6:5]
node %1876 : bv<2> = OPMODE[6:5]
node %1878 : bv<2> = xor(%1876, %1877)
node %1873 : bv<2> = OPMODE_reg[6:5]
node %1879 : bv<2> = ite(OPMODEREG_BIN, %1873, %1878)
node _procmux_616_CMP0 : bv<1> = eq(%1879, 2'b11)
node %8586 : bv<1> = and(_procmux_616_CMP0, %8585)
node %8604 : bv<1> = PCIN[28]
node %1886 : bv<3> = IS_OPMODE_INVERTED[6:4]
node %1885 : bv<3> = OPMODE[6:4]
node %1887 : bv<3> = xor(%1885, %1886)
node %1882 : bv<3> = OPMODE_reg[6:4]
node %1888 : bv<3> = ite(OPMODEREG_BIN, %1882, %1887)
node _procmux_617_CMP0 : bv<1> = eq(%1888, 3'b101)
node %8605 : bv<1> = ite(_procmux_617_CMP0, %8604, %8586)
node _procmux_618_CMP0 : bv<1> = eq(%1888, 3'b100)
node %8606 : bv<1> = ite(_procmux_618_CMP0, %8555, %8605)
node _procmux_619_CMP0 : bv<1> = eq(%1888, 3'b011)
node %8610 : bv<1> = ite(_procmux_619_CMP0, %8609, %8606)
node _procmux_620_CMP0 : bv<1> = eq(%1888, 3'b010)
node %8611 : bv<1> = ite(_procmux_620_CMP0, %8555, %8610)
node %8552 : bv<1> = PCIN[11]
node _procmux_621_CMP0 : bv<1> = eq(%1888, 3'b001)
node %8612 : bv<1> = ite(_procmux_621_CMP0, %8552, %8611)
node _procmux_622_CMP0 : bv<1> = eq(%1888, 3'b000)
node %8613 : bv<1> = not(_procmux_622_CMP0)
node %8614 : bv<1> = and(%8613, %8612)
node %1906 : bv<1> = IS_ALUMODE_INVERTED[0]
node %1905 : bv<1> = ALUMODE[0]
node %1907 : bv<1> = xor(%1905, %1906)
node %1902 : bv<1> = ALUMODE_reg[0]
node ALUMODEREG_BIN : bv<1> = ALUMODEREG[0]
node %1908 : bv<1> = ite(ALUMODEREG_BIN, %1902, %1907)
node %8651 : bv<1> = xor(%1908, %8614)
node %10717 : bv<1> = xor(%8651, %8720)
node %10718 : bv<1> = xor(%10717, %8781)
node %10772 : bv<1> = C[10]
node %10773 : bv<1> = C_reg[10]
node %10774 : bv<1> = ite(CREG_BIN, %10773, %10772)
node %10832 : bv<1> = and(_procmux_624_CMP0, %10774)
node %10833 : bv<1> = or(_procmux_625_CMP0, %10832)
node %10839 : bv<1> = V_DATA_reg[10]
node %10840 : bv<1> = and(MREG_BIN, %10839)
node %10841 : bv<1> = and(%5401, %10840)
node %10842 : bv<1> = ite(_procmux_626_CMP0, %10841, %10833)
node %10843 : bv<1> = and(%8780, %10842)
node %10797 : bv<1> = B[10]
node %10798 : bv<1> = BCIN[10]
node %10799 : bv<1> = ite(B_INPUT_BIN, %10798, %10797)
node %10800 : bv<1> = B2_reg[10]
node %10801 : bv<1> = ite(%234, %10800, %10799)
node %10802 : bv<1> = and(_procmux_629_CMP0, %10801)
node %10767 : bv<1> = P_FDBK_in[10]
node %10803 : bv<1> = ite(_procmux_630_CMP0, %10767, %10802)
node %2627 : bv<1> = %2380[10]
node %2629 : bv<1> = and(%2608, %2627)
node %10809 : bv<1> = U_DATA_reg[10]
node %10810 : bv<1> = ite(MREG_BIN, %10809, %2629)
node %10811 : bv<1> = and(%5401, %10810)
node %10812 : bv<1> = ite(_procmux_631_CMP0, %10811, %10803)
node %10816 : bv<1> = and(%8719, %10812)
node %10763 : bv<1> = P_FDBK_in[27]
node %10764 : bv<1> = and(_procmux_616_CMP0, %10763)
node %10765 : bv<1> = PCIN[27]
node %10766 : bv<1> = ite(_procmux_617_CMP0, %10765, %10764)
node %10768 : bv<1> = ite(_procmux_618_CMP0, %10767, %10766)
node %10775 : bv<1> = ite(_procmux_619_CMP0, %10774, %10768)
node %10776 : bv<1> = ite(_procmux_620_CMP0, %10767, %10775)
node %10777 : bv<1> = PCIN[10]
node %10778 : bv<1> = ite(_procmux_621_CMP0, %10777, %10776)
node %10779 : bv<1> = and(%8613, %10778)
node %10780 : bv<1> = xor(%1908, %10779)
node %12878 : bv<1> = xor(%10780, %10816)
node %12879 : bv<1> = xor(%12878, %10843)
node %12897 : bv<1> = C[9]
node %12898 : bv<1> = C_reg[9]
node %12899 : bv<1> = ite(CREG_BIN, %12898, %12897)
node %12900 : bv<1> = and(_procmux_624_CMP0, %12899)
node %12901 : bv<1> = or(_procmux_625_CMP0, %12900)
node %5516 : bv<1> = %2380[9]
node %5518 : bv<1> = and(%2608, %5516)
node %12909 : bv<1> = V_DATA_reg[9]
node %12910 : bv<1> = ite(MREG_BIN, %12909, %5518)
node %12911 : bv<1> = and(%5401, %12910)
node %12912 : bv<1> = ite(_procmux_626_CMP0, %12911, %12901)
node %12913 : bv<1> = and(%8780, %12912)
node %12933 : bv<1> = B[9]
node %12934 : bv<1> = BCIN[9]
node %12935 : bv<1> = ite(B_INPUT_BIN, %12934, %12933)
node %12936 : bv<1> = B2_reg[9]
node %12937 : bv<1> = ite(%234, %12936, %12935)
node %12938 : bv<1> = and(_procmux_629_CMP0, %12937)
node %12939 : bv<1> = P_FDBK_in[9]
node %12940 : bv<1> = ite(_procmux_630_CMP0, %12939, %12938)
node %12948 : bv<1> = U_DATA_reg[9]
node %12949 : bv<1> = and(MREG_BIN, %12948)
node %12950 : bv<1> = and(%5401, %12949)
node %12951 : bv<1> = ite(_procmux_631_CMP0, %12950, %12940)
node %12952 : bv<1> = and(%8719, %12951)
node %12972 : bv<1> = P_FDBK_in[26]
node %12973 : bv<1> = and(_procmux_616_CMP0, %12972)
node %12974 : bv<1> = PCIN[26]
node %12975 : bv<1> = ite(_procmux_617_CMP0, %12974, %12973)
node %12976 : bv<1> = ite(_procmux_618_CMP0, %12939, %12975)
node %12977 : bv<1> = ite(_procmux_619_CMP0, %12899, %12976)
node %12978 : bv<1> = ite(_procmux_620_CMP0, %12939, %12977)
node %12979 : bv<1> = PCIN[9]
node %12980 : bv<1> = ite(_procmux_621_CMP0, %12979, %12978)
node %12981 : bv<1> = and(%8613, %12980)
node %12984 : bv<1> = xor(%1908, %12981)
node %12985 : bv<1> = xor(%12984, %12952)
node %12986 : bv<1> = xor(%12985, %12913)
node %13004 : bv<1> = C[8]
node %13005 : bv<1> = C_reg[8]
node %13006 : bv<1> = ite(CREG_BIN, %13005, %13004)
node %13007 : bv<1> = and(_procmux_624_CMP0, %13006)
node %13008 : bv<1> = or(_procmux_625_CMP0, %13007)
node %13017 : bv<1> = V_DATA_reg[8]
node %13018 : bv<1> = and(MREG_BIN, %13017)
node %13019 : bv<1> = and(%5401, %13018)
node %13020 : bv<1> = ite(_procmux_626_CMP0, %13019, %13008)
node %13021 : bv<1> = and(%8780, %13020)
node %13041 : bv<1> = B[8]
node %13042 : bv<1> = BCIN[8]
node %13043 : bv<1> = ite(B_INPUT_BIN, %13042, %13041)
node %13044 : bv<1> = B2_reg[8]
node %13045 : bv<1> = ite(%234, %13044, %13043)
node %13046 : bv<1> = and(_procmux_629_CMP0, %13045)
node %13047 : bv<1> = P_FDBK_in[8]
node %13048 : bv<1> = ite(_procmux_630_CMP0, %13047, %13046)
node %2623 : bv<1> = %2380[8]
node %2625 : bv<1> = and(%2608, %2623)
node %13057 : bv<1> = U_DATA_reg[8]
node %13058 : bv<1> = ite(MREG_BIN, %13057, %2625)
node %13059 : bv<1> = and(%5401, %13058)
node %13060 : bv<1> = ite(_procmux_631_CMP0, %13059, %13048)
node %13061 : bv<1> = and(%8719, %13060)
node %13081 : bv<1> = P_FDBK_in[25]
node %13082 : bv<1> = and(_procmux_616_CMP0, %13081)
node %13083 : bv<1> = PCIN[25]
node %13084 : bv<1> = ite(_procmux_617_CMP0, %13083, %13082)
node %13085 : bv<1> = ite(_procmux_618_CMP0, %13047, %13084)
node %13086 : bv<1> = ite(_procmux_619_CMP0, %13006, %13085)
node %13087 : bv<1> = ite(_procmux_620_CMP0, %13047, %13086)
node %13088 : bv<1> = PCIN[8]
node %13089 : bv<1> = ite(_procmux_621_CMP0, %13088, %13087)
node %13090 : bv<1> = and(%8613, %13089)
node %13094 : bv<1> = xor(%1908, %13090)
node %13095 : bv<1> = xor(%13094, %13061)
node %13096 : bv<1> = xor(%13095, %13021)
node %13114 : bv<1> = C[7]
node %13115 : bv<1> = C_reg[7]
node %13116 : bv<1> = ite(CREG_BIN, %13115, %13114)
node %13117 : bv<1> = and(_procmux_624_CMP0, %13116)
node %13118 : bv<1> = or(_procmux_625_CMP0, %13117)
node %5512 : bv<1> = %2380[7]
node %5514 : bv<1> = and(%2608, %5512)
node %13128 : bv<1> = V_DATA_reg[7]
node %13129 : bv<1> = ite(MREG_BIN, %13128, %5514)
node %13130 : bv<1> = and(%5401, %13129)
node %13131 : bv<1> = ite(_procmux_626_CMP0, %13130, %13118)
node %13132 : bv<1> = and(%8780, %13131)
node %13152 : bv<1> = B[7]
node %13153 : bv<1> = BCIN[7]
node %13154 : bv<1> = ite(B_INPUT_BIN, %13153, %13152)
node %13155 : bv<1> = B2_reg[7]
node %13156 : bv<1> = ite(%234, %13155, %13154)
node %13157 : bv<1> = and(_procmux_629_CMP0, %13156)
node %13158 : bv<1> = P_FDBK_in[7]
node %13159 : bv<1> = ite(_procmux_630_CMP0, %13158, %13157)
node %13169 : bv<1> = U_DATA_reg[7]
node %13170 : bv<1> = and(MREG_BIN, %13169)
node %13171 : bv<1> = and(%5401, %13170)
node %13172 : bv<1> = ite(_procmux_631_CMP0, %13171, %13159)
node %13173 : bv<1> = and(%8719, %13172)
node %13193 : bv<1> = P_FDBK_in[24]
node %13194 : bv<1> = and(_procmux_616_CMP0, %13193)
node %13195 : bv<1> = PCIN[24]
node %13196 : bv<1> = ite(_procmux_617_CMP0, %13195, %13194)
node %13197 : bv<1> = ite(_procmux_618_CMP0, %13158, %13196)
node %13198 : bv<1> = ite(_procmux_619_CMP0, %13116, %13197)
node %13199 : bv<1> = ite(_procmux_620_CMP0, %13158, %13198)
node %13200 : bv<1> = PCIN[7]
node %13201 : bv<1> = ite(_procmux_621_CMP0, %13200, %13199)
node %13202 : bv<1> = and(%8613, %13201)
node %13207 : bv<1> = xor(%1908, %13202)
node %13208 : bv<1> = xor(%13207, %13173)
node %13209 : bv<1> = xor(%13208, %13132)
node %13227 : bv<1> = C[6]
node %13228 : bv<1> = C_reg[6]
node %13229 : bv<1> = ite(CREG_BIN, %13228, %13227)
node %13230 : bv<1> = and(_procmux_624_CMP0, %13229)
node %13231 : bv<1> = or(_procmux_625_CMP0, %13230)
node %13241 : bv<1> = V_DATA_reg[6]
node %13242 : bv<1> = and(MREG_BIN, %13241)
node %13243 : bv<1> = and(%5401, %13242)
node %13244 : bv<1> = ite(_procmux_626_CMP0, %13243, %13231)
node %13245 : bv<1> = and(%8780, %13244)
node %13265 : bv<1> = B[6]
node %13266 : bv<1> = BCIN[6]
node %13267 : bv<1> = ite(B_INPUT_BIN, %13266, %13265)
node %13268 : bv<1> = B2_reg[6]
node %13269 : bv<1> = ite(%234, %13268, %13267)
node %13270 : bv<1> = and(_procmux_629_CMP0, %13269)
node %13271 : bv<1> = P_FDBK_in[6]
node %13272 : bv<1> = ite(_procmux_630_CMP0, %13271, %13270)
node %2619 : bv<1> = %2380[6]
node %2621 : bv<1> = and(%2608, %2619)
node %13282 : bv<1> = U_DATA_reg[6]
node %13283 : bv<1> = ite(MREG_BIN, %13282, %2621)
node %13284 : bv<1> = and(%5401, %13283)
node %13285 : bv<1> = ite(_procmux_631_CMP0, %13284, %13272)
node %13286 : bv<1> = and(%8719, %13285)
node %9093 : bv<1> = P_FDBK_in[23]
node %13306 : bv<1> = and(_procmux_616_CMP0, %9093)
node %9090 : bv<1> = PCIN[23]
node %13307 : bv<1> = ite(_procmux_617_CMP0, %9090, %13306)
node %13308 : bv<1> = ite(_procmux_618_CMP0, %13271, %13307)
node %13309 : bv<1> = ite(_procmux_619_CMP0, %13229, %13308)
node %13310 : bv<1> = ite(_procmux_620_CMP0, %13271, %13309)
node %13311 : bv<1> = PCIN[6]
node %13312 : bv<1> = ite(_procmux_621_CMP0, %13311, %13310)
node %13313 : bv<1> = and(%8613, %13312)
node %13318 : bv<1> = xor(%1908, %13313)
node %13319 : bv<1> = xor(%13318, %13286)
node %13320 : bv<1> = xor(%13319, %13245)
node %13321 : bv<1> = xor(%13320, %13209)
node %13322 : bv<1> = xor(%13321, %13096)
node %13323 : bv<1> = xor(%13322, %12986)
node %13324 : bv<1> = xor(%13323, %12879)
node %13325 : bv<1> = xor(%13324, %10718)
node %13333 : bv<1> = eq(USE_WIDEXOR, 5'b11000)
node %13341 : bv<1> = eq(USE_WIDEXOR, 5'b01101)
node %13346 : bv<1> = not(%13341)
node USE_WIDEXOR_BIN : bv<1> = and(%13346, %13333)
node xor_12b : bv<1> = and(USE_WIDEXOR_BIN, %13325)
node %13620 : bv<1> = C[5]
node %13621 : bv<1> = C_reg[5]
node %13622 : bv<1> = ite(CREG_BIN, %13621, %13620)
node %13623 : bv<1> = and(_procmux_624_CMP0, %13622)
node %13624 : bv<1> = or(_procmux_625_CMP0, %13623)
node %5508 : bv<1> = %2380[5]
node %5510 : bv<1> = and(%2608, %5508)
node %13630 : bv<1> = V_DATA_reg[5]
node %13631 : bv<1> = ite(MREG_BIN, %13630, %5510)
node %13632 : bv<1> = and(%5401, %13631)
node %13633 : bv<1> = ite(_procmux_626_CMP0, %13632, %13624)
node %13634 : bv<1> = and(%8780, %13633)
node %13655 : bv<1> = B[5]
node %13656 : bv<1> = BCIN[5]
node %13657 : bv<1> = ite(B_INPUT_BIN, %13656, %13655)
node %13658 : bv<1> = B2_reg[5]
node %13659 : bv<1> = ite(%234, %13658, %13657)
node %13660 : bv<1> = and(_procmux_629_CMP0, %13659)
node %13661 : bv<1> = P_FDBK_in[5]
node %13662 : bv<1> = ite(_procmux_630_CMP0, %13661, %13660)
node %13668 : bv<1> = U_DATA_reg[5]
node %13669 : bv<1> = and(MREG_BIN, %13668)
node %13670 : bv<1> = and(%5401, %13669)
node %13671 : bv<1> = ite(_procmux_631_CMP0, %13670, %13662)
node %13675 : bv<1> = and(%8719, %13671)
node %11291 : bv<1> = P_FDBK_in[22]
node %13694 : bv<1> = and(_procmux_616_CMP0, %11291)
node %11301 : bv<1> = PCIN[22]
node %13695 : bv<1> = ite(_procmux_617_CMP0, %11301, %13694)
node %13696 : bv<1> = ite(_procmux_618_CMP0, %13661, %13695)
node %13697 : bv<1> = ite(_procmux_619_CMP0, %13622, %13696)
node %13698 : bv<1> = ite(_procmux_620_CMP0, %13661, %13697)
node %13699 : bv<1> = PCIN[5]
node %13700 : bv<1> = ite(_procmux_621_CMP0, %13699, %13698)
node %13701 : bv<1> = and(%8613, %13700)
node %13702 : bv<1> = xor(%1908, %13701)
node %13703 : bv<1> = xor(%13702, %13675)
node %13704 : bv<1> = xor(%13703, %13634)
node %13720 : bv<1> = C[4]
node %13721 : bv<1> = C_reg[4]
node %13722 : bv<1> = ite(CREG_BIN, %13721, %13720)
node %13723 : bv<1> = and(_procmux_624_CMP0, %13722)
node %13724 : bv<1> = or(_procmux_625_CMP0, %13723)
node %13731 : bv<1> = V_DATA_reg[4]
node %13732 : bv<1> = and(MREG_BIN, %13731)
node %13733 : bv<1> = and(%5401, %13732)
node %13734 : bv<1> = ite(_procmux_626_CMP0, %13733, %13724)
node %13735 : bv<1> = and(%8780, %13734)
node %13756 : bv<1> = B[4]
node %13757 : bv<1> = BCIN[4]
node %13758 : bv<1> = ite(B_INPUT_BIN, %13757, %13756)
node %13759 : bv<1> = B2_reg[4]
node %13760 : bv<1> = ite(%234, %13759, %13758)
node %13761 : bv<1> = and(_procmux_629_CMP0, %13760)
node %13762 : bv<1> = P_FDBK_in[4]
node %13763 : bv<1> = ite(_procmux_630_CMP0, %13762, %13761)
node %2615 : bv<1> = %2380[4]
node %2617 : bv<1> = and(%2608, %2615)
node %13770 : bv<1> = U_DATA_reg[4]
node %13771 : bv<1> = ite(MREG_BIN, %13770, %2617)
node %13772 : bv<1> = and(%5401, %13771)
node %13773 : bv<1> = ite(_procmux_631_CMP0, %13772, %13763)
node %13777 : bv<1> = and(%8719, %13773)
node %13796 : bv<1> = P_FDBK_in[21]
node %13797 : bv<1> = and(_procmux_616_CMP0, %13796)
node %13798 : bv<1> = PCIN[21]
node %13799 : bv<1> = ite(_procmux_617_CMP0, %13798, %13797)
node %13800 : bv<1> = ite(_procmux_618_CMP0, %13762, %13799)
node %13801 : bv<1> = ite(_procmux_619_CMP0, %13722, %13800)
node %13802 : bv<1> = ite(_procmux_620_CMP0, %13762, %13801)
node %13803 : bv<1> = PCIN[4]
node %13804 : bv<1> = ite(_procmux_621_CMP0, %13803, %13802)
node %13805 : bv<1> = and(%8613, %13804)
node %13806 : bv<1> = xor(%1908, %13805)
node %13807 : bv<1> = xor(%13806, %13777)
node %13808 : bv<1> = xor(%13807, %13735)
node %13824 : bv<1> = C[3]
node %13825 : bv<1> = C_reg[3]
node %13826 : bv<1> = ite(CREG_BIN, %13825, %13824)
node %13827 : bv<1> = and(_procmux_624_CMP0, %13826)
node %13828 : bv<1> = or(_procmux_625_CMP0, %13827)
node %5504 : bv<1> = %2380[3]
node %5506 : bv<1> = and(%2608, %5504)
node %13836 : bv<1> = V_DATA_reg[3]
node %13837 : bv<1> = ite(MREG_BIN, %13836, %5506)
node %13838 : bv<1> = and(%5401, %13837)
node %13839 : bv<1> = ite(_procmux_626_CMP0, %13838, %13828)
node %13840 : bv<1> = and(%8780, %13839)
node %13861 : bv<1> = B[3]
node %13862 : bv<1> = BCIN[3]
node %13863 : bv<1> = ite(B_INPUT_BIN, %13862, %13861)
node %13864 : bv<1> = B2_reg[3]
node %13865 : bv<1> = ite(%234, %13864, %13863)
node %13866 : bv<1> = and(_procmux_629_CMP0, %13865)
node %13867 : bv<1> = P_FDBK_in[3]
node %13868 : bv<1> = ite(_procmux_630_CMP0, %13867, %13866)
node %13876 : bv<1> = U_DATA_reg[3]
node %13877 : bv<1> = and(MREG_BIN, %13876)
node %13878 : bv<1> = and(%5401, %13877)
node %13879 : bv<1> = ite(_procmux_631_CMP0, %13878, %13868)
node %13883 : bv<1> = and(%8719, %13879)
node %13902 : bv<1> = P_FDBK_in[20]
node %13903 : bv<1> = and(_procmux_616_CMP0, %13902)
node %13904 : bv<1> = PCIN[20]
node %13905 : bv<1> = ite(_procmux_617_CMP0, %13904, %13903)
node %13906 : bv<1> = ite(_procmux_618_CMP0, %13867, %13905)
node %13907 : bv<1> = ite(_procmux_619_CMP0, %13826, %13906)
node %13908 : bv<1> = ite(_procmux_620_CMP0, %13867, %13907)
node %13909 : bv<1> = PCIN[3]
node %13910 : bv<1> = ite(_procmux_621_CMP0, %13909, %13908)
node %13911 : bv<1> = and(%8613, %13910)
node %13912 : bv<1> = xor(%1908, %13911)
node %13913 : bv<1> = xor(%13912, %13883)
node %13914 : bv<1> = xor(%13913, %13840)
node %13930 : bv<1> = C[2]
node %13931 : bv<1> = C_reg[2]
node %13932 : bv<1> = ite(CREG_BIN, %13931, %13930)
node %13933 : bv<1> = and(_procmux_624_CMP0, %13932)
node %13934 : bv<1> = or(_procmux_625_CMP0, %13933)
node %13943 : bv<1> = V_DATA_reg[2]
node %13944 : bv<1> = and(MREG_BIN, %13943)
node %13945 : bv<1> = and(%5401, %13944)
node %13946 : bv<1> = ite(_procmux_626_CMP0, %13945, %13934)
node %13947 : bv<1> = and(%8780, %13946)
node %13968 : bv<1> = B[2]
node %13969 : bv<1> = BCIN[2]
node %13970 : bv<1> = ite(B_INPUT_BIN, %13969, %13968)
node %13971 : bv<1> = B2_reg[2]
node %13972 : bv<1> = ite(%234, %13971, %13970)
node %13973 : bv<1> = and(_procmux_629_CMP0, %13972)
node %13974 : bv<1> = P_FDBK_in[2]
node %13975 : bv<1> = ite(_procmux_630_CMP0, %13974, %13973)
node %2611 : bv<1> = %2380[2]
node %2613 : bv<1> = and(%2608, %2611)
node %13984 : bv<1> = U_DATA_reg[2]
node %13985 : bv<1> = ite(MREG_BIN, %13984, %2613)
node %13986 : bv<1> = and(%5401, %13985)
node %13987 : bv<1> = ite(_procmux_631_CMP0, %13986, %13975)
node %13991 : bv<1> = and(%8719, %13987)
node %14010 : bv<1> = P_FDBK_in[19]
node %14011 : bv<1> = and(_procmux_616_CMP0, %14010)
node %14012 : bv<1> = PCIN[19]
node %14013 : bv<1> = ite(_procmux_617_CMP0, %14012, %14011)
node %14014 : bv<1> = ite(_procmux_618_CMP0, %13974, %14013)
node %14015 : bv<1> = ite(_procmux_619_CMP0, %13932, %14014)
node %14016 : bv<1> = ite(_procmux_620_CMP0, %13974, %14015)
node %14017 : bv<1> = PCIN[2]
node %14018 : bv<1> = ite(_procmux_621_CMP0, %14017, %14016)
node %14019 : bv<1> = and(%8613, %14018)
node %14020 : bv<1> = xor(%1908, %14019)
node %14021 : bv<1> = xor(%14020, %13991)
node %14022 : bv<1> = xor(%14021, %13947)
node %14038 : bv<1> = C[1]
node %14039 : bv<1> = C_reg[1]
node %14040 : bv<1> = ite(CREG_BIN, %14039, %14038)
node %14041 : bv<1> = and(_procmux_624_CMP0, %14040)
node %14042 : bv<1> = or(_procmux_625_CMP0, %14041)
node %5500 : bv<1> = %2380[1]
node %5502 : bv<1> = and(%2608, %5500)
node %14052 : bv<1> = V_DATA_reg[1]
node %14053 : bv<1> = ite(MREG_BIN, %14052, %5502)
node %14054 : bv<1> = and(%5401, %14053)
node %14055 : bv<1> = ite(_procmux_626_CMP0, %14054, %14042)
node %14056 : bv<1> = and(%8780, %14055)
node %14077 : bv<1> = B[1]
node %14078 : bv<1> = BCIN[1]
node %14079 : bv<1> = ite(B_INPUT_BIN, %14078, %14077)
node %14080 : bv<1> = B2_reg[1]
node %14081 : bv<1> = ite(%234, %14080, %14079)
node %14082 : bv<1> = and(_procmux_629_CMP0, %14081)
node %14083 : bv<1> = P_FDBK_in[1]
node %14084 : bv<1> = ite(_procmux_630_CMP0, %14083, %14082)
node %14094 : bv<1> = U_DATA_reg[1]
node %14095 : bv<1> = and(MREG_BIN, %14094)
node %14096 : bv<1> = and(%5401, %14095)
node %14097 : bv<1> = ite(_procmux_631_CMP0, %14096, %14084)
node %14101 : bv<1> = and(_procmux_618_CMP0, MULTSIGNIN)
node %14102 : bv<1> = ite(_procmux_632_CMP0, %14101, %14097)
node %14121 : bv<1> = P_FDBK_in[18]
node %14122 : bv<1> = and(_procmux_616_CMP0, %14121)
node %14123 : bv<1> = PCIN[18]
node %14124 : bv<1> = ite(_procmux_617_CMP0, %14123, %14122)
node %14125 : bv<1> = ite(_procmux_618_CMP0, %14083, %14124)
node %14126 : bv<1> = ite(_procmux_619_CMP0, %14040, %14125)
node %14127 : bv<1> = ite(_procmux_620_CMP0, %14083, %14126)
node %14128 : bv<1> = PCIN[1]
node %14129 : bv<1> = ite(_procmux_621_CMP0, %14128, %14127)
node %14130 : bv<1> = and(%8613, %14129)
node %14131 : bv<1> = xor(%1908, %14130)
node %14132 : bv<1> = xor(%14131, %14102)
node %14133 : bv<1> = xor(%14132, %14056)
node %14149 : bv<1> = C[0]
node %14150 : bv<1> = C_reg[0]
node %14151 : bv<1> = ite(CREG_BIN, %14150, %14149)
node %14152 : bv<1> = and(_procmux_624_CMP0, %14151)
node %14153 : bv<1> = or(_procmux_625_CMP0, %14152)
node %14163 : bv<1> = V_DATA_reg[0]
node %14164 : bv<1> = and(MREG_BIN, %14163)
node %14165 : bv<1> = and(%5401, %14164)
node %14166 : bv<1> = ite(_procmux_626_CMP0, %14165, %14153)
node %14167 : bv<1> = and(%8780, %14166)
node %2528 : bv<1> = B[0]
node %2527 : bv<1> = BCIN[0]
node %2529 : bv<1> = ite(B_INPUT_BIN, %2527, %2528)
node %2524 : bv<1> = B2_reg[0]
node %2530 : bv<1> = ite(%234, %2524, %2529)
node %14188 : bv<1> = and(_procmux_629_CMP0, %2530)
node %14189 : bv<1> = P_FDBK_in[0]
node %14190 : bv<1> = ite(_procmux_630_CMP0, %14189, %14188)
node %2508 : bv<1> = A[0]
node %2509 : bv<1> = ACIN[0]
node %2510 : bv<1> = ite(A_INPUT_BIN, %2509, %2508)
node %2511 : bv<1> = A2_reg[0]
node %2512 : bv<1> = ite(%248, %2511, %2510)
node %2513 : bv<1> = A1_reg[0]
node %2514 : bv<1> = ite(%2031, %2513, %2512)
node %2515 : bv<1> = and(%2350, %2514)
node %2516 : bv<1> = and(%2350, %2515)
node %2521 : bv<1> = B1_DATA_out[0]
node %2531 : bv<1> = ite(%2075, %2521, %2530)
node %2532 : bv<1> = and(%2098, %2531)
node %2533 : bv<1> = and(%2098, %2532)
node %2534 : bv<1> = ite(PREADDINSEL_BIN, %2533, %2516)
node %2540 : bv<1> = D[0]
node %2541 : bv<1> = D_DATA_reg[0]
node %2542 : bv<1> = ite(DREG_INT, %2541, %2540)
node %2543 : bv<1> = and(%2209, %2542)
node %2544 : bv<1> = add(%2543, %2534)
node %2546 : bv<1> = sub(%2543, %2534)
node %2547 : bv<1> = ite(%2219, %2546, %2544)
node %2548 : bv<1> = AD_DATA_reg[0]
node %2549 : bv<1> = ite(ADREG_INT, %2548, %2547)
node %2550 : bv<1> = ite(%2176, %2533, %2549)
node %2606 : bv<1> = ite(%2197, %2516, %2549)
node %2607 : bv<1> = mul(%2606, %2550)
node %2609 : bv<1> = and(%2608, %2607)
node %14200 : bv<1> = U_DATA_reg[0]
node %14201 : bv<1> = ite(MREG_BIN, %14200, %2609)
node %14202 : bv<1> = and(%5401, %14201)
node %14203 : bv<1> = ite(_procmux_631_CMP0, %14202, %14190)
node %14207 : bv<1> = and(%8719, %14203)
node %14226 : bv<1> = P_FDBK_in[17]
node %14227 : bv<1> = and(_procmux_616_CMP0, %14226)
node %14228 : bv<1> = PCIN[17]
node %14229 : bv<1> = ite(_procmux_617_CMP0, %14228, %14227)
node %14230 : bv<1> = ite(_procmux_618_CMP0, %14189, %14229)
node %14231 : bv<1> = ite(_procmux_619_CMP0, %14151, %14230)
node %14232 : bv<1> = ite(_procmux_620_CMP0, %14189, %14231)
node %14233 : bv<1> = PCIN[0]
node %14234 : bv<1> = ite(_procmux_621_CMP0, %14233, %14232)
node %14235 : bv<1> = and(%8613, %14234)
node %14236 : bv<1> = xor(%1908, %14235)
node %14237 : bv<1> = xor(%14236, %14207)
node %14238 : bv<1> = xor(%14237, %14167)
node %14239 : bv<1> = xor(%14238, %14133)
node %14240 : bv<1> = xor(%14239, %14022)
node %14241 : bv<1> = xor(%14240, %13914)
node %14242 : bv<1> = xor(%14241, %13808)
node %14243 : bv<1> = xor(%14242, %13704)
node xor_12a : bv<1> = and(USE_WIDEXOR_BIN, %14243)
node xor_24a : bv<1> = xor(xor_12a, xor_12b)
node %14256 : bv<1> = eq(XORSIMD, 5'b11010)
node %14264 : bv<1> = eq(XORSIMD, 5'b01110)
node %14269 : bv<1> = not(%14264)
node XORSIMD_BIN : bv<1> = and(%14269, %14256)
node %14271 : bv<1> = ite(XORSIMD_BIN, xor_12a, xor_24a)
node %9146 : bv<1> = C[23]
node %9145 : bv<1> = C_reg[23]
node %9147 : bv<1> = ite(CREG_BIN, %9145, %9146)
node %9248 : bv<1> = and(_procmux_624_CMP0, %9147)
node %9249 : bv<1> = or(_procmux_625_CMP0, %9248)
node %5544 : bv<1> = %2380[23]
node %5546 : bv<1> = and(%2608, %5544)
node %9253 : bv<1> = V_DATA_reg[23]
node %9277 : bv<1> = ite(MREG_BIN, %9253, %5546)
node %9278 : bv<1> = and(%5401, %9277)
node %9279 : bv<1> = ite(_procmux_626_CMP0, %9278, %9249)
node %9280 : bv<1> = and(%8780, %9279)
node %9192 : bv<1> = A[5]
node %9191 : bv<1> = ACIN[5]
node %9193 : bv<1> = ite(A_INPUT_BIN, %9191, %9192)
node %9188 : bv<1> = A2_reg[5]
node %9194 : bv<1> = ite(%248, %9188, %9193)
node %9195 : bv<1> = and(_procmux_629_CMP0, %9194)
node %9196 : bv<1> = ite(_procmux_630_CMP0, %9093, %9195)
node %9203 : bv<1> = U_DATA_reg[23]
node %9226 : bv<1> = and(MREG_BIN, %9203)
node %9227 : bv<1> = and(%5401, %9226)
node %9228 : bv<1> = ite(_procmux_631_CMP0, %9227, %9196)
node %9232 : bv<1> = and(%8719, %9228)
node %9123 : bv<1> = P_FDBK_in[40]
node %9124 : bv<1> = and(_procmux_616_CMP0, %9123)
node %9142 : bv<1> = PCIN[40]
node %9143 : bv<1> = ite(_procmux_617_CMP0, %9142, %9124)
node %9144 : bv<1> = ite(_procmux_618_CMP0, %9093, %9143)
node %9148 : bv<1> = ite(_procmux_619_CMP0, %9147, %9144)
node %9149 : bv<1> = ite(_procmux_620_CMP0, %9093, %9148)
node %9150 : bv<1> = ite(_procmux_621_CMP0, %9090, %9149)
node %9151 : bv<1> = and(%8613, %9150)
node %9176 : bv<1> = xor(%1908, %9151)
node %11245 : bv<1> = xor(%9176, %9232)
node %11246 : bv<1> = xor(%11245, %9280)
node %11296 : bv<1> = C[22]
node %11297 : bv<1> = C_reg[22]
node %11298 : bv<1> = ite(CREG_BIN, %11297, %11296)
node %11352 : bv<1> = and(_procmux_624_CMP0, %11298)
node %11353 : bv<1> = or(_procmux_625_CMP0, %11352)
node %11359 : bv<1> = V_DATA_reg[22]
node %11360 : bv<1> = and(MREG_BIN, %11359)
node %11361 : bv<1> = and(%5401, %11360)
node %11362 : bv<1> = ite(_procmux_626_CMP0, %11361, %11353)
node %11363 : bv<1> = and(%8780, %11362)
node %11321 : bv<1> = A[4]
node %11322 : bv<1> = ACIN[4]
node %11323 : bv<1> = ite(A_INPUT_BIN, %11322, %11321)
node %11324 : bv<1> = A2_reg[4]
node %11325 : bv<1> = ite(%248, %11324, %11323)
node %11326 : bv<1> = and(_procmux_629_CMP0, %11325)
node %11327 : bv<1> = ite(_procmux_630_CMP0, %11291, %11326)
node %2651 : bv<1> = %2380[22]
node %2653 : bv<1> = and(%2608, %2651)
node %11333 : bv<1> = U_DATA_reg[22]
node %11334 : bv<1> = ite(MREG_BIN, %11333, %2653)
node %11335 : bv<1> = and(%5401, %11334)
node %11336 : bv<1> = ite(_procmux_631_CMP0, %11335, %11327)
node %11337 : bv<1> = and(%8719, %11336)
node %11287 : bv<1> = P_FDBK_in[39]
node %11288 : bv<1> = and(_procmux_616_CMP0, %11287)
node %11289 : bv<1> = PCIN[39]
node %11290 : bv<1> = ite(_procmux_617_CMP0, %11289, %11288)
node %11292 : bv<1> = ite(_procmux_618_CMP0, %11291, %11290)
node %11299 : bv<1> = ite(_procmux_619_CMP0, %11298, %11292)
node %11300 : bv<1> = ite(_procmux_620_CMP0, %11291, %11299)
node %11302 : bv<1> = ite(_procmux_621_CMP0, %11301, %11300)
node %11303 : bv<1> = and(%8613, %11302)
node %11304 : bv<1> = xor(%1908, %11303)
node %14619 : bv<1> = xor(%11304, %11337)
node %14620 : bv<1> = xor(%14619, %11363)
node %14636 : bv<1> = C[21]
node %14637 : bv<1> = C_reg[21]
node %14638 : bv<1> = ite(CREG_BIN, %14637, %14636)
node %14639 : bv<1> = and(_procmux_624_CMP0, %14638)
node %14640 : bv<1> = or(_procmux_625_CMP0, %14639)
node %5540 : bv<1> = %2380[21]
node %5542 : bv<1> = and(%2608, %5540)
node %14648 : bv<1> = V_DATA_reg[21]
node %14649 : bv<1> = ite(MREG_BIN, %14648, %5542)
node %14650 : bv<1> = and(%5401, %14649)
node %14651 : bv<1> = ite(_procmux_626_CMP0, %14650, %14640)
node %14652 : bv<1> = and(%8780, %14651)
node %14672 : bv<1> = A[3]
node %14673 : bv<1> = ACIN[3]
node %14674 : bv<1> = ite(A_INPUT_BIN, %14673, %14672)
node %14675 : bv<1> = A2_reg[3]
node %14676 : bv<1> = ite(%248, %14675, %14674)
node %14677 : bv<1> = and(_procmux_629_CMP0, %14676)
node %14678 : bv<1> = ite(_procmux_630_CMP0, %13796, %14677)
node %14686 : bv<1> = U_DATA_reg[21]
node %14687 : bv<1> = and(MREG_BIN, %14686)
node %14688 : bv<1> = and(%5401, %14687)
node %14689 : bv<1> = ite(_procmux_631_CMP0, %14688, %14678)
node %14690 : bv<1> = and(%8719, %14689)
node %14709 : bv<1> = P_FDBK_in[38]
node %14710 : bv<1> = and(_procmux_616_CMP0, %14709)
node %14711 : bv<1> = PCIN[38]
node %14712 : bv<1> = ite(_procmux_617_CMP0, %14711, %14710)
node %14713 : bv<1> = ite(_procmux_618_CMP0, %13796, %14712)
node %14714 : bv<1> = ite(_procmux_619_CMP0, %14638, %14713)
node %14715 : bv<1> = ite(_procmux_620_CMP0, %13796, %14714)
node %14716 : bv<1> = ite(_procmux_621_CMP0, %13798, %14715)
node %14717 : bv<1> = and(%8613, %14716)
node %14718 : bv<1> = xor(%1908, %14717)
node %14719 : bv<1> = xor(%14718, %14690)
node %14720 : bv<1> = xor(%14719, %14652)
node %14736 : bv<1> = C[20]
node %14737 : bv<1> = C_reg[20]
node %14738 : bv<1> = ite(CREG_BIN, %14737, %14736)
node %14739 : bv<1> = and(_procmux_624_CMP0, %14738)
node %14740 : bv<1> = or(_procmux_625_CMP0, %14739)
node %14749 : bv<1> = V_DATA_reg[20]
node %14750 : bv<1> = and(MREG_BIN, %14749)
node %14751 : bv<1> = and(%5401, %14750)
node %14752 : bv<1> = ite(_procmux_626_CMP0, %14751, %14740)
node %14753 : bv<1> = and(%8780, %14752)
node %14773 : bv<1> = A[2]
node %14774 : bv<1> = ACIN[2]
node %14775 : bv<1> = ite(A_INPUT_BIN, %14774, %14773)
node %14776 : bv<1> = A2_reg[2]
node %14777 : bv<1> = ite(%248, %14776, %14775)
node %14778 : bv<1> = and(_procmux_629_CMP0, %14777)
node %14779 : bv<1> = ite(_procmux_630_CMP0, %13902, %14778)
node %2647 : bv<1> = %2380[20]
node %2649 : bv<1> = and(%2608, %2647)
node %14788 : bv<1> = U_DATA_reg[20]
node %14789 : bv<1> = ite(MREG_BIN, %14788, %2649)
node %14790 : bv<1> = and(%5401, %14789)
node %14791 : bv<1> = ite(_procmux_631_CMP0, %14790, %14779)
node %14792 : bv<1> = and(%8719, %14791)
node %14811 : bv<1> = P_FDBK_in[37]
node %14812 : bv<1> = and(_procmux_616_CMP0, %14811)
node %14813 : bv<1> = PCIN[37]
node %14814 : bv<1> = ite(_procmux_617_CMP0, %14813, %14812)
node %14815 : bv<1> = ite(_procmux_618_CMP0, %13902, %14814)
node %14816 : bv<1> = ite(_procmux_619_CMP0, %14738, %14815)
node %14817 : bv<1> = ite(_procmux_620_CMP0, %13902, %14816)
node %14818 : bv<1> = ite(_procmux_621_CMP0, %13904, %14817)
node %14819 : bv<1> = and(%8613, %14818)
node %14820 : bv<1> = xor(%1908, %14819)
node %14821 : bv<1> = xor(%14820, %14792)
node %14822 : bv<1> = xor(%14821, %14753)
node %14838 : bv<1> = C[19]
node %14839 : bv<1> = C_reg[19]
node %14840 : bv<1> = ite(CREG_BIN, %14839, %14838)
node %14841 : bv<1> = and(_procmux_624_CMP0, %14840)
node %14842 : bv<1> = or(_procmux_625_CMP0, %14841)
node %5536 : bv<1> = %2380[19]
node %5538 : bv<1> = and(%2608, %5536)
node %14852 : bv<1> = V_DATA_reg[19]
node %14853 : bv<1> = ite(MREG_BIN, %14852, %5538)
node %14854 : bv<1> = and(%5401, %14853)
node %14855 : bv<1> = ite(_procmux_626_CMP0, %14854, %14842)
node %14856 : bv<1> = and(%8780, %14855)
node %14876 : bv<1> = A[1]
node %14877 : bv<1> = ACIN[1]
node %14878 : bv<1> = ite(A_INPUT_BIN, %14877, %14876)
node %14879 : bv<1> = A2_reg[1]
node %14880 : bv<1> = ite(%248, %14879, %14878)
node %14881 : bv<1> = and(_procmux_629_CMP0, %14880)
node %14882 : bv<1> = ite(_procmux_630_CMP0, %14010, %14881)
node %14892 : bv<1> = U_DATA_reg[19]
node %14893 : bv<1> = and(MREG_BIN, %14892)
node %14894 : bv<1> = and(%5401, %14893)
node %14895 : bv<1> = ite(_procmux_631_CMP0, %14894, %14882)
node %14896 : bv<1> = and(%8719, %14895)
node %14915 : bv<1> = P_FDBK_in[36]
node %14916 : bv<1> = and(_procmux_616_CMP0, %14915)
node %14917 : bv<1> = PCIN[36]
node %14918 : bv<1> = ite(_procmux_617_CMP0, %14917, %14916)
node %14919 : bv<1> = ite(_procmux_618_CMP0, %14010, %14918)
node %14920 : bv<1> = ite(_procmux_619_CMP0, %14840, %14919)
node %14921 : bv<1> = ite(_procmux_620_CMP0, %14010, %14920)
node %14922 : bv<1> = ite(_procmux_621_CMP0, %14012, %14921)
node %14923 : bv<1> = and(%8613, %14922)
node %14924 : bv<1> = xor(%1908, %14923)
node %14925 : bv<1> = xor(%14924, %14896)
node %14926 : bv<1> = xor(%14925, %14856)
node %14942 : bv<1> = C[18]
node %14943 : bv<1> = C_reg[18]
node %14944 : bv<1> = ite(CREG_BIN, %14943, %14942)
node %14945 : bv<1> = and(_procmux_624_CMP0, %14944)
node %14946 : bv<1> = or(_procmux_625_CMP0, %14945)
node %14956 : bv<1> = V_DATA_reg[18]
node %14957 : bv<1> = and(MREG_BIN, %14956)
node %14958 : bv<1> = and(%5401, %14957)
node %14959 : bv<1> = ite(_procmux_626_CMP0, %14958, %14946)
node %14960 : bv<1> = and(%8780, %14959)
node %14980 : bv<1> = and(_procmux_629_CMP0, %2512)
node %14981 : bv<1> = ite(_procmux_630_CMP0, %14121, %14980)
node %2643 : bv<1> = %2380[18]
node %2645 : bv<1> = and(%2608, %2643)
node %14991 : bv<1> = U_DATA_reg[18]
node %14992 : bv<1> = ite(MREG_BIN, %14991, %2645)
node %14993 : bv<1> = and(%5401, %14992)
node %14994 : bv<1> = ite(_procmux_631_CMP0, %14993, %14981)
node %14995 : bv<1> = and(%8719, %14994)
node %9561 : bv<1> = P_FDBK_in[35]
node %15014 : bv<1> = and(_procmux_616_CMP0, %9561)
node %9558 : bv<1> = PCIN[35]
node %15015 : bv<1> = ite(_procmux_617_CMP0, %9558, %15014)
node %15016 : bv<1> = ite(_procmux_618_CMP0, %14121, %15015)
node %15017 : bv<1> = ite(_procmux_619_CMP0, %14944, %15016)
node %15018 : bv<1> = ite(_procmux_620_CMP0, %14121, %15017)
node %15019 : bv<1> = ite(_procmux_621_CMP0, %14123, %15018)
node %15020 : bv<1> = and(%8613, %15019)
node %15021 : bv<1> = xor(%1908, %15020)
node %15022 : bv<1> = xor(%15021, %14995)
node %15023 : bv<1> = xor(%15022, %14960)
node %15024 : bv<1> = xor(%15023, %14926)
node %15025 : bv<1> = xor(%15024, %14822)
node %15026 : bv<1> = xor(%15025, %14720)
node %15027 : bv<1> = xor(%15026, %14620)
node %15028 : bv<1> = xor(%15027, %11246)
node xor_12d : bv<1> = and(USE_WIDEXOR_BIN, %15028)
node %15255 : bv<1> = C[17]
node %15256 : bv<1> = C_reg[17]
node %15257 : bv<1> = ite(CREG_BIN, %15256, %15255)
node %15258 : bv<1> = and(_procmux_624_CMP0, %15257)
node %15259 : bv<1> = or(_procmux_625_CMP0, %15258)
node %5532 : bv<1> = %2380[17]
node %5534 : bv<1> = and(%2608, %5532)
node %15265 : bv<1> = V_DATA_reg[17]
node %15266 : bv<1> = ite(MREG_BIN, %15265, %5534)
node %15267 : bv<1> = and(%5401, %15266)
node %15268 : bv<1> = ite(_procmux_626_CMP0, %15267, %15259)
node %15269 : bv<1> = and(%8780, %15268)
node %15289 : bv<1> = and(_procmux_629_CMP0, %2096)
node %15290 : bv<1> = ite(_procmux_630_CMP0, %14226, %15289)
node %15296 : bv<1> = U_DATA_reg[17]
node %15297 : bv<1> = and(MREG_BIN, %15296)
node %15298 : bv<1> = and(%5401, %15297)
node %15299 : bv<1> = ite(_procmux_631_CMP0, %15298, %15290)
node %15300 : bv<1> = and(%8719, %15299)
node %11817 : bv<1> = P_FDBK_in[34]
node %15319 : bv<1> = and(_procmux_616_CMP0, %11817)
node %11827 : bv<1> = PCIN[34]
node %15320 : bv<1> = ite(_procmux_617_CMP0, %11827, %15319)
node %15321 : bv<1> = ite(_procmux_618_CMP0, %14226, %15320)
node %15322 : bv<1> = ite(_procmux_619_CMP0, %15257, %15321)
node %15323 : bv<1> = ite(_procmux_620_CMP0, %14226, %15322)
node %15324 : bv<1> = ite(_procmux_621_CMP0, %14228, %15323)
node %15325 : bv<1> = and(%8613, %15324)
node %15326 : bv<1> = xor(%1908, %15325)
node %15327 : bv<1> = xor(%15326, %15300)
node %15328 : bv<1> = xor(%15327, %15269)
node %15344 : bv<1> = C[16]
node %15345 : bv<1> = C_reg[16]
node %15346 : bv<1> = ite(CREG_BIN, %15345, %15344)
node %15347 : bv<1> = and(_procmux_624_CMP0, %15346)
node %15348 : bv<1> = or(_procmux_625_CMP0, %15347)
node %15355 : bv<1> = V_DATA_reg[16]
node %15356 : bv<1> = and(MREG_BIN, %15355)
node %15357 : bv<1> = and(%5401, %15356)
node %15358 : bv<1> = ite(_procmux_626_CMP0, %15357, %15348)
node %15359 : bv<1> = and(%8780, %15358)
node %15379 : bv<1> = B[16]
node %15380 : bv<1> = BCIN[16]
node %15381 : bv<1> = ite(B_INPUT_BIN, %15380, %15379)
node %15382 : bv<1> = B2_reg[16]
node %15383 : bv<1> = ite(%234, %15382, %15381)
node %15384 : bv<1> = and(_procmux_629_CMP0, %15383)
node %15385 : bv<1> = P_FDBK_in[16]
node %15386 : bv<1> = ite(_procmux_630_CMP0, %15385, %15384)
node %2639 : bv<1> = %2380[16]
node %2641 : bv<1> = and(%2608, %2639)
node %15393 : bv<1> = U_DATA_reg[16]
node %15394 : bv<1> = ite(MREG_BIN, %15393, %2641)
node %15395 : bv<1> = and(%5401, %15394)
node %15396 : bv<1> = ite(_procmux_631_CMP0, %15395, %15386)
node %15397 : bv<1> = and(%8719, %15396)
node %15416 : bv<1> = P_FDBK_in[33]
node %15417 : bv<1> = and(_procmux_616_CMP0, %15416)
node %15418 : bv<1> = PCIN[33]
node %15419 : bv<1> = ite(_procmux_617_CMP0, %15418, %15417)
node %15420 : bv<1> = ite(_procmux_618_CMP0, %15385, %15419)
node %15421 : bv<1> = ite(_procmux_619_CMP0, %15346, %15420)
node %15422 : bv<1> = ite(_procmux_620_CMP0, %15385, %15421)
node %15423 : bv<1> = PCIN[16]
node %15424 : bv<1> = ite(_procmux_621_CMP0, %15423, %15422)
node %15425 : bv<1> = and(%8613, %15424)
node %15426 : bv<1> = xor(%1908, %15425)
node %15427 : bv<1> = xor(%15426, %15397)
node %15428 : bv<1> = xor(%15427, %15359)
node %15444 : bv<1> = C[15]
node %15445 : bv<1> = C_reg[15]
node %15446 : bv<1> = ite(CREG_BIN, %15445, %15444)
node %15447 : bv<1> = and(_procmux_624_CMP0, %15446)
node %15448 : bv<1> = or(_procmux_625_CMP0, %15447)
node %5528 : bv<1> = %2380[15]
node %5530 : bv<1> = and(%2608, %5528)
node %15456 : bv<1> = V_DATA_reg[15]
node %15457 : bv<1> = ite(MREG_BIN, %15456, %5530)
node %15458 : bv<1> = and(%5401, %15457)
node %15459 : bv<1> = ite(_procmux_626_CMP0, %15458, %15448)
node %15460 : bv<1> = and(%8780, %15459)
node %15480 : bv<1> = B[15]
node %15481 : bv<1> = BCIN[15]
node %15482 : bv<1> = ite(B_INPUT_BIN, %15481, %15480)
node %15483 : bv<1> = B2_reg[15]
node %15484 : bv<1> = ite(%234, %15483, %15482)
node %15485 : bv<1> = and(_procmux_629_CMP0, %15484)
node %15486 : bv<1> = P_FDBK_in[15]
node %15487 : bv<1> = ite(_procmux_630_CMP0, %15486, %15485)
node %15495 : bv<1> = U_DATA_reg[15]
node %15496 : bv<1> = and(MREG_BIN, %15495)
node %15497 : bv<1> = and(%5401, %15496)
node %15498 : bv<1> = ite(_procmux_631_CMP0, %15497, %15487)
node %15499 : bv<1> = and(%8719, %15498)
node %15518 : bv<1> = P_FDBK_in[32]
node %15519 : bv<1> = and(_procmux_616_CMP0, %15518)
node %15520 : bv<1> = PCIN[32]
node %15521 : bv<1> = ite(_procmux_617_CMP0, %15520, %15519)
node %15522 : bv<1> = ite(_procmux_618_CMP0, %15486, %15521)
node %15523 : bv<1> = ite(_procmux_619_CMP0, %15446, %15522)
node %15524 : bv<1> = ite(_procmux_620_CMP0, %15486, %15523)
node %15525 : bv<1> = PCIN[15]
node %15526 : bv<1> = ite(_procmux_621_CMP0, %15525, %15524)
node %15527 : bv<1> = and(%8613, %15526)
node %15528 : bv<1> = xor(%1908, %15527)
node %15529 : bv<1> = xor(%15528, %15499)
node %15530 : bv<1> = xor(%15529, %15460)
node %15546 : bv<1> = C[14]
node %15547 : bv<1> = C_reg[14]
node %15548 : bv<1> = ite(CREG_BIN, %15547, %15546)
node %15549 : bv<1> = and(_procmux_624_CMP0, %15548)
node %15550 : bv<1> = or(_procmux_625_CMP0, %15549)
node %15559 : bv<1> = V_DATA_reg[14]
node %15560 : bv<1> = and(MREG_BIN, %15559)
node %15561 : bv<1> = and(%5401, %15560)
node %15562 : bv<1> = ite(_procmux_626_CMP0, %15561, %15550)
node %15563 : bv<1> = and(%8780, %15562)
node %15583 : bv<1> = B[14]
node %15584 : bv<1> = BCIN[14]
node %15585 : bv<1> = ite(B_INPUT_BIN, %15584, %15583)
node %15586 : bv<1> = B2_reg[14]
node %15587 : bv<1> = ite(%234, %15586, %15585)
node %15588 : bv<1> = and(_procmux_629_CMP0, %15587)
node %15589 : bv<1> = P_FDBK_in[14]
node %15590 : bv<1> = ite(_procmux_630_CMP0, %15589, %15588)
node %2635 : bv<1> = %2380[14]
node %2637 : bv<1> = and(%2608, %2635)
node %15599 : bv<1> = U_DATA_reg[14]
node %15600 : bv<1> = ite(MREG_BIN, %15599, %2637)
node %15601 : bv<1> = and(%5401, %15600)
node %15602 : bv<1> = ite(_procmux_631_CMP0, %15601, %15590)
node %15603 : bv<1> = and(%8719, %15602)
node %15622 : bv<1> = P_FDBK_in[31]
node %15623 : bv<1> = and(_procmux_616_CMP0, %15622)
node %15624 : bv<1> = PCIN[31]
node %15625 : bv<1> = ite(_procmux_617_CMP0, %15624, %15623)
node %15626 : bv<1> = ite(_procmux_618_CMP0, %15589, %15625)
node %15627 : bv<1> = ite(_procmux_619_CMP0, %15548, %15626)
node %15628 : bv<1> = ite(_procmux_620_CMP0, %15589, %15627)
node %15629 : bv<1> = PCIN[14]
node %15630 : bv<1> = ite(_procmux_621_CMP0, %15629, %15628)
node %15631 : bv<1> = and(%8613, %15630)
node %15632 : bv<1> = xor(%1908, %15631)
node %15633 : bv<1> = xor(%15632, %15603)
node %15634 : bv<1> = xor(%15633, %15563)
node %15650 : bv<1> = C[13]
node %15651 : bv<1> = C_reg[13]
node %15652 : bv<1> = ite(CREG_BIN, %15651, %15650)
node %15653 : bv<1> = and(_procmux_624_CMP0, %15652)
node %15654 : bv<1> = or(_procmux_625_CMP0, %15653)
node %5524 : bv<1> = %2380[13]
node %5526 : bv<1> = and(%2608, %5524)
node %15664 : bv<1> = V_DATA_reg[13]
node %15665 : bv<1> = ite(MREG_BIN, %15664, %5526)
node %15666 : bv<1> = and(%5401, %15665)
node %15667 : bv<1> = ite(_procmux_626_CMP0, %15666, %15654)
node %15668 : bv<1> = and(%8780, %15667)
node %15688 : bv<1> = B[13]
node %15689 : bv<1> = BCIN[13]
node %15690 : bv<1> = ite(B_INPUT_BIN, %15689, %15688)
node %15691 : bv<1> = B2_reg[13]
node %15692 : bv<1> = ite(%234, %15691, %15690)
node %15693 : bv<1> = and(_procmux_629_CMP0, %15692)
node %15694 : bv<1> = P_FDBK_in[13]
node %15695 : bv<1> = ite(_procmux_630_CMP0, %15694, %15693)
node %15705 : bv<1> = U_DATA_reg[13]
node %15706 : bv<1> = and(MREG_BIN, %15705)
node %15707 : bv<1> = and(%5401, %15706)
node %15708 : bv<1> = ite(_procmux_631_CMP0, %15707, %15695)
node %15709 : bv<1> = and(%8719, %15708)
node %15728 : bv<1> = P_FDBK_in[30]
node %15729 : bv<1> = and(_procmux_616_CMP0, %15728)
node %15730 : bv<1> = PCIN[30]
node %15731 : bv<1> = ite(_procmux_617_CMP0, %15730, %15729)
node %15732 : bv<1> = ite(_procmux_618_CMP0, %15694, %15731)
node %15733 : bv<1> = ite(_procmux_619_CMP0, %15652, %15732)
node %15734 : bv<1> = ite(_procmux_620_CMP0, %15694, %15733)
node %15735 : bv<1> = PCIN[13]
node %15736 : bv<1> = ite(_procmux_621_CMP0, %15735, %15734)
node %15737 : bv<1> = and(%8613, %15736)
node %15738 : bv<1> = xor(%1908, %15737)
node %15739 : bv<1> = xor(%15738, %15709)
node %15740 : bv<1> = xor(%15739, %15668)
node %15756 : bv<1> = C[12]
node %15757 : bv<1> = C_reg[12]
node %15758 : bv<1> = ite(CREG_BIN, %15757, %15756)
node %15759 : bv<1> = and(_procmux_624_CMP0, %15758)
node %15760 : bv<1> = or(_procmux_625_CMP0, %15759)
node %15770 : bv<1> = V_DATA_reg[12]
node %15771 : bv<1> = and(MREG_BIN, %15770)
node %15772 : bv<1> = and(%5401, %15771)
node %15773 : bv<1> = ite(_procmux_626_CMP0, %15772, %15760)
node %15774 : bv<1> = and(%8780, %15773)
node %15794 : bv<1> = B[12]
node %15795 : bv<1> = BCIN[12]
node %15796 : bv<1> = ite(B_INPUT_BIN, %15795, %15794)
node %15797 : bv<1> = B2_reg[12]
node %15798 : bv<1> = ite(%234, %15797, %15796)
node %15799 : bv<1> = and(_procmux_629_CMP0, %15798)
node %15800 : bv<1> = P_FDBK_in[12]
node %15801 : bv<1> = ite(_procmux_630_CMP0, %15800, %15799)
node %2631 : bv<1> = %2380[12]
node %2633 : bv<1> = and(%2608, %2631)
node %15811 : bv<1> = U_DATA_reg[12]
node %15812 : bv<1> = ite(MREG_BIN, %15811, %2633)
node %15813 : bv<1> = and(%5401, %15812)
node %15814 : bv<1> = ite(_procmux_631_CMP0, %15813, %15801)
node %15815 : bv<1> = and(%8719, %15814)
node %15834 : bv<1> = P_FDBK_in[29]
node %15835 : bv<1> = and(_procmux_616_CMP0, %15834)
node %15836 : bv<1> = PCIN[29]
node %15837 : bv<1> = ite(_procmux_617_CMP0, %15836, %15835)
node %15838 : bv<1> = ite(_procmux_618_CMP0, %15800, %15837)
node %15839 : bv<1> = ite(_procmux_619_CMP0, %15758, %15838)
node %15840 : bv<1> = ite(_procmux_620_CMP0, %15800, %15839)
node %15841 : bv<1> = PCIN[12]
node %15842 : bv<1> = ite(_procmux_621_CMP0, %15841, %15840)
node %15843 : bv<1> = and(%8613, %15842)
node %15844 : bv<1> = xor(%1908, %15843)
node %15845 : bv<1> = xor(%15844, %15815)
node %15846 : bv<1> = xor(%15845, %15774)
node %15847 : bv<1> = xor(%15846, %15740)
node %15848 : bv<1> = xor(%15847, %15634)
node %15849 : bv<1> = xor(%15848, %15530)
node %15850 : bv<1> = xor(%15849, %15428)
node %15851 : bv<1> = xor(%15850, %15328)
node xor_12c : bv<1> = and(USE_WIDEXOR_BIN, %15851)
node xor_24b : bv<1> = xor(xor_12c, xor_12d)
node xor_48a : bv<1> = xor(xor_24a, xor_24b)
node %15859 : bv<1> = ite(XORSIMD_BIN, xor_12b, xor_48a)
node %15860 : bv<2> = concat(%15859, %14271)
node %15861 : bv<1> = ite(XORSIMD_BIN, xor_12c, xor_24b)
node %15862 : bv<3> = concat(%15861, %15860)
node %11693 : bv<1> = C[47]
node %11692 : bv<1> = C_reg[47]
node %11694 : bv<1> = ite(CREG_BIN, %11692, %11693)
node %11740 : bv<1> = and(_procmux_624_CMP0, %11694)
node %11741 : bv<1> = or(_procmux_625_CMP0, %11740)
node %11743 : bv<1> = not(_procmux_626_CMP0)
node %11744 : bv<1> = and(%11743, %11741)
node %11745 : bv<1> = and(%8780, %11744)
node %11715 : bv<1> = A[29]
node %11714 : bv<1> = ACIN[29]
node %11716 : bv<1> = ite(A_INPUT_BIN, %11714, %11715)
node %11711 : bv<1> = A2_reg[29]
node %11717 : bv<1> = ite(%248, %11711, %11716)
node %11718 : bv<1> = and(_procmux_629_CMP0, %11717)
node P_FDBK_47_in : bv<1> = P_FDBK_in[47]
node %11719 : bv<1> = ite(_procmux_630_CMP0, P_FDBK_47_in, %11718)
node %5406 : bv<1> = U_DATA_reg[44]
node %5410 : bv<1> = not(MREG_BIN)
node %5411 : bv<1> = or(%5410, %5406)
node %5412 : bv<1> = not(%5401)
node %5413 : bv<1> = or(%5412, %5411)
node %11720 : bv<1> = ite(_procmux_631_CMP0, %5413, %11719)
node %11724 : bv<1> = and(%8719, %11720)
node %9586 : bv<1> = and(_procmux_616_CMP0, P_FDBK_47_in)
node %171 : bv<1> = PCIN[47]
node %9599 : bv<1> = ite(_procmux_617_CMP0, %171, %9586)
node %11691 : bv<1> = ite(_procmux_618_CMP0, P_FDBK_47_in, %9599)
node %11695 : bv<1> = ite(_procmux_619_CMP0, %11694, %11691)
node %11696 : bv<1> = ite(_procmux_620_CMP0, P_FDBK_47_in, %11695)
node %11697 : bv<1> = ite(_procmux_621_CMP0, %171, %11696)
node %11698 : bv<1> = and(%8613, %11697)
node %11699 : bv<1> = xor(%1908, %11698)
node %16059 : bv<1> = xor(%11699, %11724)
node %16060 : bv<1> = xor(%16059, %11745)
node %16076 : bv<1> = C[46]
node %16077 : bv<1> = C_reg[46]
node %16078 : bv<1> = ite(CREG_BIN, %16077, %16076)
node %16079 : bv<1> = and(_procmux_624_CMP0, %16078)
node %16080 : bv<1> = or(_procmux_625_CMP0, %16079)
node %16082 : bv<1> = and(%11743, %16080)
node %16083 : bv<1> = and(%8780, %16082)
node %16103 : bv<1> = A[28]
node %16104 : bv<1> = ACIN[28]
node %16105 : bv<1> = ite(A_INPUT_BIN, %16104, %16103)
node %16106 : bv<1> = A2_reg[28]
node %16107 : bv<1> = ite(%248, %16106, %16105)
node %16108 : bv<1> = and(_procmux_629_CMP0, %16107)
node %16109 : bv<1> = P_FDBK_in[46]
node %16110 : bv<1> = ite(_procmux_630_CMP0, %16109, %16108)
node %16112 : bv<1> = ite(_procmux_631_CMP0, %5413, %16110)
node %16113 : bv<1> = and(%8719, %16112)
node %16134 : bv<1> = ite(_procmux_618_CMP0, %16109, %9599)
node %16135 : bv<1> = ite(_procmux_619_CMP0, %16078, %16134)
node %16136 : bv<1> = ite(_procmux_620_CMP0, %16109, %16135)
node %16137 : bv<1> = PCIN[46]
node %16138 : bv<1> = ite(_procmux_621_CMP0, %16137, %16136)
node %16139 : bv<1> = and(%8613, %16138)
node %16140 : bv<1> = xor(%1908, %16139)
node %16141 : bv<1> = xor(%16140, %16113)
node %16142 : bv<1> = xor(%16141, %16083)
node %16158 : bv<1> = C[45]
node %16159 : bv<1> = C_reg[45]
node %16160 : bv<1> = ite(CREG_BIN, %16159, %16158)
node %16161 : bv<1> = and(_procmux_624_CMP0, %16160)
node %16162 : bv<1> = or(_procmux_625_CMP0, %16161)
node %16164 : bv<1> = and(%11743, %16162)
node %16165 : bv<1> = and(%8780, %16164)
node %16185 : bv<1> = A[27]
node %16186 : bv<1> = ACIN[27]
node %16187 : bv<1> = ite(A_INPUT_BIN, %16186, %16185)
node %16188 : bv<1> = A2_reg[27]
node %16189 : bv<1> = ite(%248, %16188, %16187)
node %16190 : bv<1> = and(_procmux_629_CMP0, %16189)
node %16191 : bv<1> = P_FDBK_in[45]
node %16192 : bv<1> = ite(_procmux_630_CMP0, %16191, %16190)
node %16195 : bv<1> = ite(_procmux_631_CMP0, %5413, %16192)
node %16196 : bv<1> = and(%8719, %16195)
node %16219 : bv<1> = ite(_procmux_618_CMP0, %16191, %9599)
node %16220 : bv<1> = ite(_procmux_619_CMP0, %16160, %16219)
node %16221 : bv<1> = ite(_procmux_620_CMP0, %16191, %16220)
node %16222 : bv<1> = PCIN[45]
node %16223 : bv<1> = ite(_procmux_621_CMP0, %16222, %16221)
node %16224 : bv<1> = and(%8613, %16223)
node %16225 : bv<1> = xor(%1908, %16224)
node %16226 : bv<1> = xor(%16225, %16196)
node %16227 : bv<1> = xor(%16226, %16165)
node %16243 : bv<1> = C[44]
node %16244 : bv<1> = C_reg[44]
node %16245 : bv<1> = ite(CREG_BIN, %16244, %16243)
node %16246 : bv<1> = and(_procmux_624_CMP0, %16245)
node %16247 : bv<1> = or(_procmux_625_CMP0, %16246)
node %2317 : bv<45> = concat(BMULT17_in, %2316)
node %2371 : bv<45> = concat(AMULT26_in, %2370)
node %2372 : bv<45> = mul(%2371, %2317)
node %8256 : bv<1> = %2372[44]
node %8258 : bv<1> = and(%2608, %8256)
node %8259 : bv<1> = not(%8258)
node %16255 : bv<1> = V_DATA_reg[44]
node %16256 : bv<1> = ite(MREG_BIN, %16255, %8259)
node %16257 : bv<1> = or(%5412, %16256)
node %16258 : bv<1> = ite(_procmux_626_CMP0, %16257, %16247)
node %16259 : bv<1> = and(%8780, %16258)
node %16279 : bv<1> = and(_procmux_629_CMP0, %2347)
node %16280 : bv<1> = P_FDBK_in[44]
node %16281 : bv<1> = ite(_procmux_630_CMP0, %16280, %16279)
node %16290 : bv<1> = ite(_procmux_631_CMP0, %5413, %16281)
node %16291 : bv<1> = and(%8719, %16290)
node %16316 : bv<1> = ite(_procmux_618_CMP0, %16280, %9599)
node %16317 : bv<1> = ite(_procmux_619_CMP0, %16245, %16316)
node %16318 : bv<1> = ite(_procmux_620_CMP0, %16280, %16317)
node %16319 : bv<1> = PCIN[44]
node %16320 : bv<1> = ite(_procmux_621_CMP0, %16319, %16318)
node %16321 : bv<1> = and(%8613, %16320)
node %16322 : bv<1> = xor(%1908, %16321)
node %16323 : bv<1> = xor(%16322, %16291)
node %16324 : bv<1> = xor(%16323, %16259)
node %16340 : bv<1> = C[43]
node %16341 : bv<1> = C_reg[43]
node %16342 : bv<1> = ite(CREG_BIN, %16341, %16340)
node %16343 : bv<1> = and(_procmux_624_CMP0, %16342)
node %16344 : bv<1> = or(_procmux_625_CMP0, %16343)
node %5584 : bv<1> = %2380[43]
node %5586 : bv<1> = and(%2608, %5584)
node %16353 : bv<1> = V_DATA_reg[43]
node %16354 : bv<1> = ite(MREG_BIN, %16353, %5586)
node %16355 : bv<1> = and(%5401, %16354)
node %16356 : bv<1> = ite(_procmux_626_CMP0, %16355, %16344)
node %16357 : bv<1> = and(%8780, %16356)
node %16377 : bv<1> = A[25]
node %16378 : bv<1> = ACIN[25]
node %16379 : bv<1> = ite(A_INPUT_BIN, %16378, %16377)
node %16380 : bv<1> = A2_reg[25]
node %16381 : bv<1> = ite(%248, %16380, %16379)
node %16382 : bv<1> = and(_procmux_629_CMP0, %16381)
node %16383 : bv<1> = P_FDBK_in[43]
node %16384 : bv<1> = ite(_procmux_630_CMP0, %16383, %16382)
node %16394 : bv<1> = U_DATA_reg[43]
node %16395 : bv<1> = and(MREG_BIN, %16394)
node %16396 : bv<1> = and(%5401, %16395)
node %16397 : bv<1> = ite(_procmux_631_CMP0, %16396, %16384)
node %16398 : bv<1> = and(%8719, %16397)
node %16425 : bv<1> = ite(_procmux_618_CMP0, %16383, %9599)
node %16426 : bv<1> = ite(_procmux_619_CMP0, %16342, %16425)
node %16427 : bv<1> = ite(_procmux_620_CMP0, %16383, %16426)
node %16428 : bv<1> = PCIN[43]
node %16429 : bv<1> = ite(_procmux_621_CMP0, %16428, %16427)
node %16430 : bv<1> = and(%8613, %16429)
node %16431 : bv<1> = xor(%1908, %16430)
node %16432 : bv<1> = xor(%16431, %16398)
node %16433 : bv<1> = xor(%16432, %16357)
node %16449 : bv<1> = C[42]
node %16450 : bv<1> = C_reg[42]
node %16451 : bv<1> = ite(CREG_BIN, %16450, %16449)
node %16452 : bv<1> = and(_procmux_624_CMP0, %16451)
node %16453 : bv<1> = or(_procmux_625_CMP0, %16452)
node %16462 : bv<1> = V_DATA_reg[42]
node %16463 : bv<1> = and(MREG_BIN, %16462)
node %16464 : bv<1> = and(%5401, %16463)
node %16465 : bv<1> = ite(_procmux_626_CMP0, %16464, %16453)
node %16466 : bv<1> = and(%8780, %16465)
node %16486 : bv<1> = A[24]
node %16487 : bv<1> = ACIN[24]
node %16488 : bv<1> = ite(A_INPUT_BIN, %16487, %16486)
node %16489 : bv<1> = A2_reg[24]
node %16490 : bv<1> = ite(%248, %16489, %16488)
node %16491 : bv<1> = and(_procmux_629_CMP0, %16490)
node %16492 : bv<1> = P_FDBK_in[42]
node %16493 : bv<1> = ite(_procmux_630_CMP0, %16492, %16491)
node %2691 : bv<1> = %2380[42]
node %2693 : bv<1> = and(%2608, %2691)
node %16502 : bv<1> = U_DATA_reg[42]
node %16503 : bv<1> = ite(MREG_BIN, %16502, %2693)
node %16504 : bv<1> = and(%5401, %16503)
node %16505 : bv<1> = ite(_procmux_631_CMP0, %16504, %16493)
node %16506 : bv<1> = and(%8719, %16505)
node %16533 : bv<1> = ite(_procmux_618_CMP0, %16492, %9599)
node %16534 : bv<1> = ite(_procmux_619_CMP0, %16451, %16533)
node %16535 : bv<1> = ite(_procmux_620_CMP0, %16492, %16534)
node %16536 : bv<1> = PCIN[42]
node %16537 : bv<1> = ite(_procmux_621_CMP0, %16536, %16535)
node %16538 : bv<1> = and(%8613, %16537)
node %16539 : bv<1> = xor(%1908, %16538)
node %16540 : bv<1> = xor(%16539, %16506)
node %16541 : bv<1> = xor(%16540, %16466)
node %16542 : bv<1> = xor(%16541, %16433)
node %16543 : bv<1> = xor(%16542, %16324)
node %16544 : bv<1> = xor(%16543, %16227)
node %16545 : bv<1> = xor(%16544, %16142)
node %16546 : bv<1> = xor(%16545, %16060)
node xor_12h : bv<1> = and(USE_WIDEXOR_BIN, %16546)
node %16681 : bv<1> = C[41]
node %16682 : bv<1> = C_reg[41]
node %16683 : bv<1> = ite(CREG_BIN, %16682, %16681)
node %16684 : bv<1> = and(_procmux_624_CMP0, %16683)
node %16685 : bv<1> = or(_procmux_625_CMP0, %16684)
node %5580 : bv<1> = %2380[41]
node %5582 : bv<1> = and(%2608, %5580)
node %16691 : bv<1> = V_DATA_reg[41]
node %16692 : bv<1> = ite(MREG_BIN, %16691, %5582)
node %16693 : bv<1> = and(%5401, %16692)
node %16694 : bv<1> = ite(_procmux_626_CMP0, %16693, %16685)
node %16695 : bv<1> = and(%8780, %16694)
node %16715 : bv<1> = A[23]
node %16716 : bv<1> = ACIN[23]
node %16717 : bv<1> = ite(A_INPUT_BIN, %16716, %16715)
node %16718 : bv<1> = A2_reg[23]
node %16719 : bv<1> = ite(%248, %16718, %16717)
node %16720 : bv<1> = and(_procmux_629_CMP0, %16719)
node %16721 : bv<1> = P_FDBK_in[41]
node %16722 : bv<1> = ite(_procmux_630_CMP0, %16721, %16720)
node %16728 : bv<1> = U_DATA_reg[41]
node %16729 : bv<1> = and(MREG_BIN, %16728)
node %16730 : bv<1> = and(%5401, %16729)
node %16731 : bv<1> = ite(_procmux_631_CMP0, %16730, %16722)
node %16732 : bv<1> = and(%8719, %16731)
node %16745 : bv<1> = ite(_procmux_618_CMP0, %16721, %9599)
node %16746 : bv<1> = ite(_procmux_619_CMP0, %16683, %16745)
node %16747 : bv<1> = ite(_procmux_620_CMP0, %16721, %16746)
node %16748 : bv<1> = PCIN[41]
node %16749 : bv<1> = ite(_procmux_621_CMP0, %16748, %16747)
node %16750 : bv<1> = and(%8613, %16749)
node %16751 : bv<1> = xor(%1908, %16750)
node %16752 : bv<1> = xor(%16751, %16732)
node %16753 : bv<1> = xor(%16752, %16695)
node %16769 : bv<1> = C[40]
node %16770 : bv<1> = C_reg[40]
node %16771 : bv<1> = ite(CREG_BIN, %16770, %16769)
node %16772 : bv<1> = and(_procmux_624_CMP0, %16771)
node %16773 : bv<1> = or(_procmux_625_CMP0, %16772)
node %16780 : bv<1> = V_DATA_reg[40]
node %16781 : bv<1> = and(MREG_BIN, %16780)
node %16782 : bv<1> = and(%5401, %16781)
node %16783 : bv<1> = ite(_procmux_626_CMP0, %16782, %16773)
node %16784 : bv<1> = and(%8780, %16783)
node %16804 : bv<1> = A[22]
node %16805 : bv<1> = ACIN[22]
node %16806 : bv<1> = ite(A_INPUT_BIN, %16805, %16804)
node %16807 : bv<1> = A2_reg[22]
node %16808 : bv<1> = ite(%248, %16807, %16806)
node %16809 : bv<1> = and(_procmux_629_CMP0, %16808)
node %16810 : bv<1> = ite(_procmux_630_CMP0, %9123, %16809)
node %2687 : bv<1> = %2380[40]
node %2689 : bv<1> = and(%2608, %2687)
node %16817 : bv<1> = U_DATA_reg[40]
node %16818 : bv<1> = ite(MREG_BIN, %16817, %2689)
node %16819 : bv<1> = and(%5401, %16818)
node %16820 : bv<1> = ite(_procmux_631_CMP0, %16819, %16810)
node %16821 : bv<1> = and(%8719, %16820)
node %16834 : bv<1> = ite(_procmux_618_CMP0, %9123, %9599)
node %16835 : bv<1> = ite(_procmux_619_CMP0, %16771, %16834)
node %16836 : bv<1> = ite(_procmux_620_CMP0, %9123, %16835)
node %16837 : bv<1> = ite(_procmux_621_CMP0, %9142, %16836)
node %16838 : bv<1> = and(%8613, %16837)
node %16839 : bv<1> = xor(%1908, %16838)
node %16840 : bv<1> = xor(%16839, %16821)
node %16841 : bv<1> = xor(%16840, %16784)
node %16857 : bv<1> = C[39]
node %16858 : bv<1> = C_reg[39]
node %16859 : bv<1> = ite(CREG_BIN, %16858, %16857)
node %16860 : bv<1> = and(_procmux_624_CMP0, %16859)
node %16861 : bv<1> = or(_procmux_625_CMP0, %16860)
node %5576 : bv<1> = %2380[39]
node %5578 : bv<1> = and(%2608, %5576)
node %16869 : bv<1> = V_DATA_reg[39]
node %16870 : bv<1> = ite(MREG_BIN, %16869, %5578)
node %16871 : bv<1> = and(%5401, %16870)
node %16872 : bv<1> = ite(_procmux_626_CMP0, %16871, %16861)
node %16873 : bv<1> = and(%8780, %16872)
node %16893 : bv<1> = A[21]
node %16894 : bv<1> = ACIN[21]
node %16895 : bv<1> = ite(A_INPUT_BIN, %16894, %16893)
node %16896 : bv<1> = A2_reg[21]
node %16897 : bv<1> = ite(%248, %16896, %16895)
node %16898 : bv<1> = and(_procmux_629_CMP0, %16897)
node %16899 : bv<1> = ite(_procmux_630_CMP0, %11287, %16898)
node %16907 : bv<1> = U_DATA_reg[39]
node %16908 : bv<1> = and(MREG_BIN, %16907)
node %16909 : bv<1> = and(%5401, %16908)
node %16910 : bv<1> = ite(_procmux_631_CMP0, %16909, %16899)
node %16911 : bv<1> = and(%8719, %16910)
node %16924 : bv<1> = ite(_procmux_618_CMP0, %11287, %9599)
node %16925 : bv<1> = ite(_procmux_619_CMP0, %16859, %16924)
node %16926 : bv<1> = ite(_procmux_620_CMP0, %11287, %16925)
node %16927 : bv<1> = ite(_procmux_621_CMP0, %11289, %16926)
node %16928 : bv<1> = and(%8613, %16927)
node %16929 : bv<1> = xor(%1908, %16928)
node %16930 : bv<1> = xor(%16929, %16911)
node %16931 : bv<1> = xor(%16930, %16873)
node %16947 : bv<1> = C[38]
node %16948 : bv<1> = C_reg[38]
node %16949 : bv<1> = ite(CREG_BIN, %16948, %16947)
node %16950 : bv<1> = and(_procmux_624_CMP0, %16949)
node %16951 : bv<1> = or(_procmux_625_CMP0, %16950)
node %16960 : bv<1> = V_DATA_reg[38]
node %16961 : bv<1> = and(MREG_BIN, %16960)
node %16962 : bv<1> = and(%5401, %16961)
node %16963 : bv<1> = ite(_procmux_626_CMP0, %16962, %16951)
node %16964 : bv<1> = and(%8780, %16963)
node %16984 : bv<1> = A[20]
node %16985 : bv<1> = ACIN[20]
node %16986 : bv<1> = ite(A_INPUT_BIN, %16985, %16984)
node %16987 : bv<1> = A2_reg[20]
node %16988 : bv<1> = ite(%248, %16987, %16986)
node %16989 : bv<1> = and(_procmux_629_CMP0, %16988)
node %16990 : bv<1> = ite(_procmux_630_CMP0, %14709, %16989)
node %2683 : bv<1> = %2380[38]
node %2685 : bv<1> = and(%2608, %2683)
node %16999 : bv<1> = U_DATA_reg[38]
node %17000 : bv<1> = ite(MREG_BIN, %16999, %2685)
node %17001 : bv<1> = and(%5401, %17000)
node %17002 : bv<1> = ite(_procmux_631_CMP0, %17001, %16990)
node %17003 : bv<1> = and(%8719, %17002)
node %17016 : bv<1> = ite(_procmux_618_CMP0, %14709, %9599)
node %17017 : bv<1> = ite(_procmux_619_CMP0, %16949, %17016)
node %17018 : bv<1> = ite(_procmux_620_CMP0, %14709, %17017)
node %17019 : bv<1> = ite(_procmux_621_CMP0, %14711, %17018)
node %17020 : bv<1> = and(%8613, %17019)
node %17021 : bv<1> = xor(%1908, %17020)
node %17022 : bv<1> = xor(%17021, %17003)
node %17023 : bv<1> = xor(%17022, %16964)
node %17039 : bv<1> = C[37]
node %17040 : bv<1> = C_reg[37]
node %17041 : bv<1> = ite(CREG_BIN, %17040, %17039)
node %17042 : bv<1> = and(_procmux_624_CMP0, %17041)
node %17043 : bv<1> = or(_procmux_625_CMP0, %17042)
node %5572 : bv<1> = %2380[37]
node %5574 : bv<1> = and(%2608, %5572)
node %17053 : bv<1> = V_DATA_reg[37]
node %17054 : bv<1> = ite(MREG_BIN, %17053, %5574)
node %17055 : bv<1> = and(%5401, %17054)
node %17056 : bv<1> = ite(_procmux_626_CMP0, %17055, %17043)
node %17057 : bv<1> = and(%8780, %17056)
node %17077 : bv<1> = A[19]
node %17078 : bv<1> = ACIN[19]
node %17079 : bv<1> = ite(A_INPUT_BIN, %17078, %17077)
node %17080 : bv<1> = A2_reg[19]
node %17081 : bv<1> = ite(%248, %17080, %17079)
node %17082 : bv<1> = and(_procmux_629_CMP0, %17081)
node %17083 : bv<1> = ite(_procmux_630_CMP0, %14811, %17082)
node %17093 : bv<1> = U_DATA_reg[37]
node %17094 : bv<1> = and(MREG_BIN, %17093)
node %17095 : bv<1> = and(%5401, %17094)
node %17096 : bv<1> = ite(_procmux_631_CMP0, %17095, %17083)
node %17097 : bv<1> = and(%8719, %17096)
node %17110 : bv<1> = ite(_procmux_618_CMP0, %14811, %9599)
node %17111 : bv<1> = ite(_procmux_619_CMP0, %17041, %17110)
node %17112 : bv<1> = ite(_procmux_620_CMP0, %14811, %17111)
node %17113 : bv<1> = ite(_procmux_621_CMP0, %14813, %17112)
node %17114 : bv<1> = and(%8613, %17113)
node %17115 : bv<1> = xor(%1908, %17114)
node %17116 : bv<1> = xor(%17115, %17097)
node %17117 : bv<1> = xor(%17116, %17057)
node %17133 : bv<1> = C[36]
node %17134 : bv<1> = C_reg[36]
node %17135 : bv<1> = ite(CREG_BIN, %17134, %17133)
node %17136 : bv<1> = and(_procmux_624_CMP0, %17135)
node %17137 : bv<1> = or(_procmux_625_CMP0, %17136)
node %17147 : bv<1> = V_DATA_reg[36]
node %17148 : bv<1> = and(MREG_BIN, %17147)
node %17149 : bv<1> = and(%5401, %17148)
node %17150 : bv<1> = ite(_procmux_626_CMP0, %17149, %17137)
node %17151 : bv<1> = and(%8780, %17150)
node %17171 : bv<1> = A[18]
node %17172 : bv<1> = ACIN[18]
node %17173 : bv<1> = ite(A_INPUT_BIN, %17172, %17171)
node %17174 : bv<1> = A2_reg[18]
node %17175 : bv<1> = ite(%248, %17174, %17173)
node %17176 : bv<1> = and(_procmux_629_CMP0, %17175)
node %17177 : bv<1> = ite(_procmux_630_CMP0, %14915, %17176)
node %2679 : bv<1> = %2380[36]
node %2681 : bv<1> = and(%2608, %2679)
node %17187 : bv<1> = U_DATA_reg[36]
node %17188 : bv<1> = ite(MREG_BIN, %17187, %2681)
node %17189 : bv<1> = and(%5401, %17188)
node %17190 : bv<1> = ite(_procmux_631_CMP0, %17189, %17177)
node %17191 : bv<1> = and(%8719, %17190)
node %17204 : bv<1> = ite(_procmux_618_CMP0, %14915, %9599)
node %17205 : bv<1> = ite(_procmux_619_CMP0, %17135, %17204)
node %17206 : bv<1> = ite(_procmux_620_CMP0, %14915, %17205)
node %17207 : bv<1> = ite(_procmux_621_CMP0, %14917, %17206)
node %17208 : bv<1> = and(%8613, %17207)
node %17209 : bv<1> = xor(%1908, %17208)
node %17210 : bv<1> = xor(%17209, %17191)
node %17211 : bv<1> = xor(%17210, %17151)
node %17212 : bv<1> = xor(%17211, %17117)
node %17213 : bv<1> = xor(%17212, %17023)
node %17214 : bv<1> = xor(%17213, %16931)
node %17215 : bv<1> = xor(%17214, %16841)
node %17216 : bv<1> = xor(%17215, %16753)
node xor_12g : bv<1> = and(USE_WIDEXOR_BIN, %17216)
node xor_24d : bv<1> = xor(xor_12g, xor_12h)
node %9602 : bv<1> = C[35]
node %9601 : bv<1> = C_reg[35]
node %9603 : bv<1> = ite(CREG_BIN, %9601, %9602)
node %9680 : bv<1> = and(_procmux_624_CMP0, %9603)
node %9681 : bv<1> = or(_procmux_625_CMP0, %9680)
node %5568 : bv<1> = %2380[35]
node %5570 : bv<1> = and(%2608, %5568)
node %9685 : bv<1> = V_DATA_reg[35]
node %9697 : bv<1> = ite(MREG_BIN, %9685, %5570)
node %9698 : bv<1> = and(%5401, %9697)
node %9699 : bv<1> = ite(_procmux_626_CMP0, %9698, %9681)
node %9700 : bv<1> = and(%8780, %9699)
node %9636 : bv<1> = A[17]
node %9635 : bv<1> = ACIN[17]
node %9637 : bv<1> = ite(A_INPUT_BIN, %9635, %9636)
node %9632 : bv<1> = A2_reg[17]
node %9638 : bv<1> = ite(%248, %9632, %9637)
node %9639 : bv<1> = and(_procmux_629_CMP0, %9638)
node %9640 : bv<1> = ite(_procmux_630_CMP0, %9561, %9639)
node %9647 : bv<1> = U_DATA_reg[35]
node %9658 : bv<1> = and(MREG_BIN, %9647)
node %9659 : bv<1> = and(%5401, %9658)
node %9660 : bv<1> = ite(_procmux_631_CMP0, %9659, %9640)
node %9664 : bv<1> = and(%8719, %9660)
node %9600 : bv<1> = ite(_procmux_618_CMP0, %9561, %9599)
node %9604 : bv<1> = ite(_procmux_619_CMP0, %9603, %9600)
node %9605 : bv<1> = ite(_procmux_620_CMP0, %9561, %9604)
node %9606 : bv<1> = ite(_procmux_621_CMP0, %9558, %9605)
node %9607 : bv<1> = and(%8613, %9606)
node %9620 : bv<1> = xor(%1908, %9607)
node %11777 : bv<1> = xor(%9620, %9664)
node %11778 : bv<1> = xor(%11777, %9700)
node %11822 : bv<1> = C[34]
node %11823 : bv<1> = C_reg[34]
node %11824 : bv<1> = ite(CREG_BIN, %11823, %11822)
node %11877 : bv<1> = and(_procmux_624_CMP0, %11824)
node %11878 : bv<1> = or(_procmux_625_CMP0, %11877)
node %11884 : bv<1> = V_DATA_reg[34]
node %11885 : bv<1> = and(MREG_BIN, %11884)
node %11886 : bv<1> = and(%5401, %11885)
node %11887 : bv<1> = ite(_procmux_626_CMP0, %11886, %11878)
node %11888 : bv<1> = and(%8780, %11887)
node %11846 : bv<1> = A[16]
node %11847 : bv<1> = ACIN[16]
node %11848 : bv<1> = ite(A_INPUT_BIN, %11847, %11846)
node %11849 : bv<1> = A2_reg[16]
node %11850 : bv<1> = ite(%248, %11849, %11848)
node %11851 : bv<1> = and(_procmux_629_CMP0, %11850)
node %11852 : bv<1> = ite(_procmux_630_CMP0, %11817, %11851)
node %2675 : bv<1> = %2380[34]
node %2677 : bv<1> = and(%2608, %2675)
node %11858 : bv<1> = U_DATA_reg[34]
node %11859 : bv<1> = ite(MREG_BIN, %11858, %2677)
node %11860 : bv<1> = and(%5401, %11859)
node %11861 : bv<1> = ite(_procmux_631_CMP0, %11860, %11852)
node %11862 : bv<1> = and(%8719, %11861)
node %11818 : bv<1> = ite(_procmux_618_CMP0, %11817, %9599)
node %11825 : bv<1> = ite(_procmux_619_CMP0, %11824, %11818)
node %11826 : bv<1> = ite(_procmux_620_CMP0, %11817, %11825)
node %11828 : bv<1> = ite(_procmux_621_CMP0, %11827, %11826)
node %11829 : bv<1> = and(%8613, %11828)
node %11830 : bv<1> = xor(%1908, %11829)
node %17536 : bv<1> = xor(%11830, %11862)
node %17537 : bv<1> = xor(%17536, %11888)
node %17553 : bv<1> = C[33]
node %17554 : bv<1> = C_reg[33]
node %17555 : bv<1> = ite(CREG_BIN, %17554, %17553)
node %17556 : bv<1> = and(_procmux_624_CMP0, %17555)
node %17557 : bv<1> = or(_procmux_625_CMP0, %17556)
node %5564 : bv<1> = %2380[33]
node %5566 : bv<1> = and(%2608, %5564)
node %17565 : bv<1> = V_DATA_reg[33]
node %17566 : bv<1> = ite(MREG_BIN, %17565, %5566)
node %17567 : bv<1> = and(%5401, %17566)
node %17568 : bv<1> = ite(_procmux_626_CMP0, %17567, %17557)
node %17569 : bv<1> = and(%8780, %17568)
node %17589 : bv<1> = A[15]
node %17590 : bv<1> = ACIN[15]
node %17591 : bv<1> = ite(A_INPUT_BIN, %17590, %17589)
node %17592 : bv<1> = A2_reg[15]
node %17593 : bv<1> = ite(%248, %17592, %17591)
node %17594 : bv<1> = and(_procmux_629_CMP0, %17593)
node %17595 : bv<1> = ite(_procmux_630_CMP0, %15416, %17594)
node %17603 : bv<1> = U_DATA_reg[33]
node %17604 : bv<1> = and(MREG_BIN, %17603)
node %17605 : bv<1> = and(%5401, %17604)
node %17606 : bv<1> = ite(_procmux_631_CMP0, %17605, %17595)
node %17607 : bv<1> = and(%8719, %17606)
node %17620 : bv<1> = ite(_procmux_618_CMP0, %15416, %9599)
node %17621 : bv<1> = ite(_procmux_619_CMP0, %17555, %17620)
node %17622 : bv<1> = ite(_procmux_620_CMP0, %15416, %17621)
node %17623 : bv<1> = ite(_procmux_621_CMP0, %15418, %17622)
node %17624 : bv<1> = and(%8613, %17623)
node %17625 : bv<1> = xor(%1908, %17624)
node %17626 : bv<1> = xor(%17625, %17607)
node %17627 : bv<1> = xor(%17626, %17569)
node %17643 : bv<1> = C[32]
node %17644 : bv<1> = C_reg[32]
node %17645 : bv<1> = ite(CREG_BIN, %17644, %17643)
node %17646 : bv<1> = and(_procmux_624_CMP0, %17645)
node %17647 : bv<1> = or(_procmux_625_CMP0, %17646)
node %17656 : bv<1> = V_DATA_reg[32]
node %17657 : bv<1> = and(MREG_BIN, %17656)
node %17658 : bv<1> = and(%5401, %17657)
node %17659 : bv<1> = ite(_procmux_626_CMP0, %17658, %17647)
node %17660 : bv<1> = and(%8780, %17659)
node %17680 : bv<1> = A[14]
node %17681 : bv<1> = ACIN[14]
node %17682 : bv<1> = ite(A_INPUT_BIN, %17681, %17680)
node %17683 : bv<1> = A2_reg[14]
node %17684 : bv<1> = ite(%248, %17683, %17682)
node %17685 : bv<1> = and(_procmux_629_CMP0, %17684)
node %17686 : bv<1> = ite(_procmux_630_CMP0, %15518, %17685)
node %2671 : bv<1> = %2380[32]
node %2673 : bv<1> = and(%2608, %2671)
node %17695 : bv<1> = U_DATA_reg[32]
node %17696 : bv<1> = ite(MREG_BIN, %17695, %2673)
node %17697 : bv<1> = and(%5401, %17696)
node %17698 : bv<1> = ite(_procmux_631_CMP0, %17697, %17686)
node %17699 : bv<1> = and(%8719, %17698)
node %17712 : bv<1> = ite(_procmux_618_CMP0, %15518, %9599)
node %17713 : bv<1> = ite(_procmux_619_CMP0, %17645, %17712)
node %17714 : bv<1> = ite(_procmux_620_CMP0, %15518, %17713)
node %17715 : bv<1> = ite(_procmux_621_CMP0, %15520, %17714)
node %17716 : bv<1> = and(%8613, %17715)
node %17717 : bv<1> = xor(%1908, %17716)
node %17718 : bv<1> = xor(%17717, %17699)
node %17719 : bv<1> = xor(%17718, %17660)
node %17735 : bv<1> = C[31]
node %17736 : bv<1> = C_reg[31]
node %17737 : bv<1> = ite(CREG_BIN, %17736, %17735)
node %17738 : bv<1> = and(_procmux_624_CMP0, %17737)
node %17739 : bv<1> = or(_procmux_625_CMP0, %17738)
node %5560 : bv<1> = %2380[31]
node %5562 : bv<1> = and(%2608, %5560)
node %17749 : bv<1> = V_DATA_reg[31]
node %17750 : bv<1> = ite(MREG_BIN, %17749, %5562)
node %17751 : bv<1> = and(%5401, %17750)
node %17752 : bv<1> = ite(_procmux_626_CMP0, %17751, %17739)
node %17753 : bv<1> = and(%8780, %17752)
node %17773 : bv<1> = A[13]
node %17774 : bv<1> = ACIN[13]
node %17775 : bv<1> = ite(A_INPUT_BIN, %17774, %17773)
node %17776 : bv<1> = A2_reg[13]
node %17777 : bv<1> = ite(%248, %17776, %17775)
node %17778 : bv<1> = and(_procmux_629_CMP0, %17777)
node %17779 : bv<1> = ite(_procmux_630_CMP0, %15622, %17778)
node %17789 : bv<1> = U_DATA_reg[31]
node %17790 : bv<1> = and(MREG_BIN, %17789)
node %17791 : bv<1> = and(%5401, %17790)
node %17792 : bv<1> = ite(_procmux_631_CMP0, %17791, %17779)
node %17793 : bv<1> = and(%8719, %17792)
node %17806 : bv<1> = ite(_procmux_618_CMP0, %15622, %9599)
node %17807 : bv<1> = ite(_procmux_619_CMP0, %17737, %17806)
node %17808 : bv<1> = ite(_procmux_620_CMP0, %15622, %17807)
node %17809 : bv<1> = ite(_procmux_621_CMP0, %15624, %17808)
node %17810 : bv<1> = and(%8613, %17809)
node %17811 : bv<1> = xor(%1908, %17810)
node %17812 : bv<1> = xor(%17811, %17793)
node %17813 : bv<1> = xor(%17812, %17753)
node %17829 : bv<1> = C[30]
node %17830 : bv<1> = C_reg[30]
node %17831 : bv<1> = ite(CREG_BIN, %17830, %17829)
node %17832 : bv<1> = and(_procmux_624_CMP0, %17831)
node %17833 : bv<1> = or(_procmux_625_CMP0, %17832)
node %17843 : bv<1> = V_DATA_reg[30]
node %17844 : bv<1> = and(MREG_BIN, %17843)
node %17845 : bv<1> = and(%5401, %17844)
node %17846 : bv<1> = ite(_procmux_626_CMP0, %17845, %17833)
node %17847 : bv<1> = and(%8780, %17846)
node %17867 : bv<1> = A[12]
node %17868 : bv<1> = ACIN[12]
node %17869 : bv<1> = ite(A_INPUT_BIN, %17868, %17867)
node %17870 : bv<1> = A2_reg[12]
node %17871 : bv<1> = ite(%248, %17870, %17869)
node %17872 : bv<1> = and(_procmux_629_CMP0, %17871)
node %17873 : bv<1> = ite(_procmux_630_CMP0, %15728, %17872)
node %2667 : bv<1> = %2380[30]
node %2669 : bv<1> = and(%2608, %2667)
node %17883 : bv<1> = U_DATA_reg[30]
node %17884 : bv<1> = ite(MREG_BIN, %17883, %2669)
node %17885 : bv<1> = and(%5401, %17884)
node %17886 : bv<1> = ite(_procmux_631_CMP0, %17885, %17873)
node %17887 : bv<1> = and(%8719, %17886)
node %17900 : bv<1> = ite(_procmux_618_CMP0, %15728, %9599)
node %17901 : bv<1> = ite(_procmux_619_CMP0, %17831, %17900)
node %17902 : bv<1> = ite(_procmux_620_CMP0, %15728, %17901)
node %17903 : bv<1> = ite(_procmux_621_CMP0, %15730, %17902)
node %17904 : bv<1> = and(%8613, %17903)
node %17905 : bv<1> = xor(%1908, %17904)
node %17906 : bv<1> = xor(%17905, %17887)
node %17907 : bv<1> = xor(%17906, %17847)
node %17908 : bv<1> = xor(%17907, %17813)
node %17909 : bv<1> = xor(%17908, %17719)
node %17910 : bv<1> = xor(%17909, %17627)
node %17911 : bv<1> = xor(%17910, %17537)
node %17912 : bv<1> = xor(%17911, %11778)
node xor_12f : bv<1> = and(USE_WIDEXOR_BIN, %17912)
node %18111 : bv<1> = C[29]
node %18112 : bv<1> = C_reg[29]
node %18113 : bv<1> = ite(CREG_BIN, %18112, %18111)
node %18114 : bv<1> = and(_procmux_624_CMP0, %18113)
node %18115 : bv<1> = or(_procmux_625_CMP0, %18114)
node %5556 : bv<1> = %2380[29]
node %5558 : bv<1> = and(%2608, %5556)
node %18121 : bv<1> = V_DATA_reg[29]
node %18122 : bv<1> = ite(MREG_BIN, %18121, %5558)
node %18123 : bv<1> = and(%5401, %18122)
node %18124 : bv<1> = ite(_procmux_626_CMP0, %18123, %18115)
node %18125 : bv<1> = and(%8780, %18124)
node %18145 : bv<1> = A[11]
node %18146 : bv<1> = ACIN[11]
node %18147 : bv<1> = ite(A_INPUT_BIN, %18146, %18145)
node %18148 : bv<1> = A2_reg[11]
node %18149 : bv<1> = ite(%248, %18148, %18147)
node %18150 : bv<1> = and(_procmux_629_CMP0, %18149)
node %18151 : bv<1> = ite(_procmux_630_CMP0, %15834, %18150)
node %18157 : bv<1> = U_DATA_reg[29]
node %18158 : bv<1> = and(MREG_BIN, %18157)
node %18159 : bv<1> = and(%5401, %18158)
node %18160 : bv<1> = ite(_procmux_631_CMP0, %18159, %18151)
node %18161 : bv<1> = and(%8719, %18160)
node %18180 : bv<1> = and(_procmux_616_CMP0, %16109)
node %18181 : bv<1> = ite(_procmux_617_CMP0, %16137, %18180)
node %18182 : bv<1> = ite(_procmux_618_CMP0, %15834, %18181)
node %18183 : bv<1> = ite(_procmux_619_CMP0, %18113, %18182)
node %18184 : bv<1> = ite(_procmux_620_CMP0, %15834, %18183)
node %18185 : bv<1> = ite(_procmux_621_CMP0, %15836, %18184)
node %18186 : bv<1> = and(%8613, %18185)
node %18187 : bv<1> = xor(%1908, %18186)
node %18188 : bv<1> = xor(%18187, %18161)
node %18189 : bv<1> = xor(%18188, %18125)
node %18205 : bv<1> = C[28]
node %18206 : bv<1> = C_reg[28]
node %18207 : bv<1> = ite(CREG_BIN, %18206, %18205)
node %18208 : bv<1> = and(_procmux_624_CMP0, %18207)
node %18209 : bv<1> = or(_procmux_625_CMP0, %18208)
node %18216 : bv<1> = V_DATA_reg[28]
node %18217 : bv<1> = and(MREG_BIN, %18216)
node %18218 : bv<1> = and(%5401, %18217)
node %18219 : bv<1> = ite(_procmux_626_CMP0, %18218, %18209)
node %18220 : bv<1> = and(%8780, %18219)
node %18240 : bv<1> = A[10]
node %18241 : bv<1> = ACIN[10]
node %18242 : bv<1> = ite(A_INPUT_BIN, %18241, %18240)
node %18243 : bv<1> = A2_reg[10]
node %18244 : bv<1> = ite(%248, %18243, %18242)
node %18245 : bv<1> = and(_procmux_629_CMP0, %18244)
node %18246 : bv<1> = ite(_procmux_630_CMP0, %8585, %18245)
node %2663 : bv<1> = %2380[28]
node %2665 : bv<1> = and(%2608, %2663)
node %18253 : bv<1> = U_DATA_reg[28]
node %18254 : bv<1> = ite(MREG_BIN, %18253, %2665)
node %18255 : bv<1> = and(%5401, %18254)
node %18256 : bv<1> = ite(_procmux_631_CMP0, %18255, %18246)
node %18257 : bv<1> = and(%8719, %18256)
node %18276 : bv<1> = and(_procmux_616_CMP0, %16191)
node %18277 : bv<1> = ite(_procmux_617_CMP0, %16222, %18276)
node %18278 : bv<1> = ite(_procmux_618_CMP0, %8585, %18277)
node %18279 : bv<1> = ite(_procmux_619_CMP0, %18207, %18278)
node %18280 : bv<1> = ite(_procmux_620_CMP0, %8585, %18279)
node %18281 : bv<1> = ite(_procmux_621_CMP0, %8604, %18280)
node %18282 : bv<1> = and(%8613, %18281)
node %18283 : bv<1> = xor(%1908, %18282)
node %18284 : bv<1> = xor(%18283, %18257)
node %18285 : bv<1> = xor(%18284, %18220)
node %18301 : bv<1> = C[27]
node %18302 : bv<1> = C_reg[27]
node %18303 : bv<1> = ite(CREG_BIN, %18302, %18301)
node %18304 : bv<1> = and(_procmux_624_CMP0, %18303)
node %18305 : bv<1> = or(_procmux_625_CMP0, %18304)
node %5552 : bv<1> = %2380[27]
node %5554 : bv<1> = and(%2608, %5552)
node %18313 : bv<1> = V_DATA_reg[27]
node %18314 : bv<1> = ite(MREG_BIN, %18313, %5554)
node %18315 : bv<1> = and(%5401, %18314)
node %18316 : bv<1> = ite(_procmux_626_CMP0, %18315, %18305)
node %18317 : bv<1> = and(%8780, %18316)
node %18337 : bv<1> = A[9]
node %18338 : bv<1> = ACIN[9]
node %18339 : bv<1> = ite(A_INPUT_BIN, %18338, %18337)
node %18340 : bv<1> = A2_reg[9]
node %18341 : bv<1> = ite(%248, %18340, %18339)
node %18342 : bv<1> = and(_procmux_629_CMP0, %18341)
node %18343 : bv<1> = ite(_procmux_630_CMP0, %10763, %18342)
node %18351 : bv<1> = U_DATA_reg[27]
node %18352 : bv<1> = and(MREG_BIN, %18351)
node %18353 : bv<1> = and(%5401, %18352)
node %18354 : bv<1> = ite(_procmux_631_CMP0, %18353, %18343)
node %18355 : bv<1> = and(%8719, %18354)
node %18374 : bv<1> = and(_procmux_616_CMP0, %16280)
node %18375 : bv<1> = ite(_procmux_617_CMP0, %16319, %18374)
node %18376 : bv<1> = ite(_procmux_618_CMP0, %10763, %18375)
node %18377 : bv<1> = ite(_procmux_619_CMP0, %18303, %18376)
node %18378 : bv<1> = ite(_procmux_620_CMP0, %10763, %18377)
node %18379 : bv<1> = ite(_procmux_621_CMP0, %10765, %18378)
node %18380 : bv<1> = and(%8613, %18379)
node %18381 : bv<1> = xor(%1908, %18380)
node %18382 : bv<1> = xor(%18381, %18355)
node %18383 : bv<1> = xor(%18382, %18317)
node %18399 : bv<1> = C[26]
node %18400 : bv<1> = C_reg[26]
node %18401 : bv<1> = ite(CREG_BIN, %18400, %18399)
node %18402 : bv<1> = and(_procmux_624_CMP0, %18401)
node %18403 : bv<1> = or(_procmux_625_CMP0, %18402)
node %18412 : bv<1> = V_DATA_reg[26]
node %18413 : bv<1> = and(MREG_BIN, %18412)
node %18414 : bv<1> = and(%5401, %18413)
node %18415 : bv<1> = ite(_procmux_626_CMP0, %18414, %18403)
node %18416 : bv<1> = and(%8780, %18415)
node %18436 : bv<1> = A[8]
node %18437 : bv<1> = ACIN[8]
node %18438 : bv<1> = ite(A_INPUT_BIN, %18437, %18436)
node %18439 : bv<1> = A2_reg[8]
node %18440 : bv<1> = ite(%248, %18439, %18438)
node %18441 : bv<1> = and(_procmux_629_CMP0, %18440)
node %18442 : bv<1> = ite(_procmux_630_CMP0, %12972, %18441)
node %2659 : bv<1> = %2380[26]
node %2661 : bv<1> = and(%2608, %2659)
node %18451 : bv<1> = U_DATA_reg[26]
node %18452 : bv<1> = ite(MREG_BIN, %18451, %2661)
node %18453 : bv<1> = and(%5401, %18452)
node %18454 : bv<1> = ite(_procmux_631_CMP0, %18453, %18442)
node %18455 : bv<1> = and(%8719, %18454)
node %18474 : bv<1> = and(_procmux_616_CMP0, %16383)
node %18475 : bv<1> = ite(_procmux_617_CMP0, %16428, %18474)
node %18476 : bv<1> = ite(_procmux_618_CMP0, %12972, %18475)
node %18477 : bv<1> = ite(_procmux_619_CMP0, %18401, %18476)
node %18478 : bv<1> = ite(_procmux_620_CMP0, %12972, %18477)
node %18479 : bv<1> = ite(_procmux_621_CMP0, %12974, %18478)
node %18480 : bv<1> = and(%8613, %18479)
node %18481 : bv<1> = xor(%1908, %18480)
node %18482 : bv<1> = xor(%18481, %18455)
node %18483 : bv<1> = xor(%18482, %18416)
node %18499 : bv<1> = C[25]
node %18500 : bv<1> = C_reg[25]
node %18501 : bv<1> = ite(CREG_BIN, %18500, %18499)
node %18502 : bv<1> = and(_procmux_624_CMP0, %18501)
node %18503 : bv<1> = or(_procmux_625_CMP0, %18502)
node %5548 : bv<1> = %2380[25]
node %5550 : bv<1> = and(%2608, %5548)
node %18513 : bv<1> = V_DATA_reg[25]
node %18514 : bv<1> = ite(MREG_BIN, %18513, %5550)
node %18515 : bv<1> = and(%5401, %18514)
node %18516 : bv<1> = ite(_procmux_626_CMP0, %18515, %18503)
node %18517 : bv<1> = and(%8780, %18516)
node %18537 : bv<1> = A[7]
node %18538 : bv<1> = ACIN[7]
node %18539 : bv<1> = ite(A_INPUT_BIN, %18538, %18537)
node %18540 : bv<1> = A2_reg[7]
node %18541 : bv<1> = ite(%248, %18540, %18539)
node %18542 : bv<1> = and(_procmux_629_CMP0, %18541)
node %18543 : bv<1> = ite(_procmux_630_CMP0, %13081, %18542)
node %18553 : bv<1> = U_DATA_reg[25]
node %18554 : bv<1> = and(MREG_BIN, %18553)
node %18555 : bv<1> = and(%5401, %18554)
node %18556 : bv<1> = ite(_procmux_631_CMP0, %18555, %18543)
node %18557 : bv<1> = and(%8719, %18556)
node %18576 : bv<1> = and(_procmux_616_CMP0, %16492)
node %18577 : bv<1> = ite(_procmux_617_CMP0, %16536, %18576)
node %18578 : bv<1> = ite(_procmux_618_CMP0, %13081, %18577)
node %18579 : bv<1> = ite(_procmux_619_CMP0, %18501, %18578)
node %18580 : bv<1> = ite(_procmux_620_CMP0, %13081, %18579)
node %18581 : bv<1> = ite(_procmux_621_CMP0, %13083, %18580)
node %18582 : bv<1> = and(%8613, %18581)
node %18583 : bv<1> = xor(%1908, %18582)
node %18584 : bv<1> = xor(%18583, %18557)
node %18585 : bv<1> = xor(%18584, %18517)
node %18601 : bv<1> = C[24]
node %18602 : bv<1> = C_reg[24]
node %18603 : bv<1> = ite(CREG_BIN, %18602, %18601)
node %18604 : bv<1> = and(_procmux_624_CMP0, %18603)
node %18605 : bv<1> = or(_procmux_625_CMP0, %18604)
node %18615 : bv<1> = V_DATA_reg[24]
node %18616 : bv<1> = and(MREG_BIN, %18615)
node %18617 : bv<1> = and(%5401, %18616)
node %18618 : bv<1> = ite(_procmux_626_CMP0, %18617, %18605)
node %18619 : bv<1> = and(%8780, %18618)
node %18639 : bv<1> = A[6]
node %18640 : bv<1> = ACIN[6]
node %18641 : bv<1> = ite(A_INPUT_BIN, %18640, %18639)
node %18642 : bv<1> = A2_reg[6]
node %18643 : bv<1> = ite(%248, %18642, %18641)
node %18644 : bv<1> = and(_procmux_629_CMP0, %18643)
node %18645 : bv<1> = ite(_procmux_630_CMP0, %13193, %18644)
node %2655 : bv<1> = %2380[24]
node %2657 : bv<1> = and(%2608, %2655)
node %18655 : bv<1> = U_DATA_reg[24]
node %18656 : bv<1> = ite(MREG_BIN, %18655, %2657)
node %18657 : bv<1> = and(%5401, %18656)
node %18658 : bv<1> = ite(_procmux_631_CMP0, %18657, %18645)
node %18659 : bv<1> = and(%8719, %18658)
node %18678 : bv<1> = and(_procmux_616_CMP0, %16721)
node %18679 : bv<1> = ite(_procmux_617_CMP0, %16748, %18678)
node %18680 : bv<1> = ite(_procmux_618_CMP0, %13193, %18679)
node %18681 : bv<1> = ite(_procmux_619_CMP0, %18603, %18680)
node %18682 : bv<1> = ite(_procmux_620_CMP0, %13193, %18681)
node %18683 : bv<1> = ite(_procmux_621_CMP0, %13195, %18682)
node %18684 : bv<1> = and(%8613, %18683)
node %18685 : bv<1> = xor(%1908, %18684)
node %18686 : bv<1> = xor(%18685, %18659)
node %18687 : bv<1> = xor(%18686, %18619)
node %18688 : bv<1> = xor(%18687, %18585)
node %18689 : bv<1> = xor(%18688, %18483)
node %18690 : bv<1> = xor(%18689, %18383)
node %18691 : bv<1> = xor(%18690, %18285)
node %18692 : bv<1> = xor(%18691, %18189)
node xor_12e : bv<1> = and(USE_WIDEXOR_BIN, %18692)
node xor_24c : bv<1> = xor(xor_12e, xor_12f)
node xor_48b : bv<1> = xor(xor_24c, xor_24d)
node xor_96 : bv<1> = xor(xor_48a, xor_48b)
node %18701 : bv<1> = ite(XORSIMD_BIN, xor_12d, xor_96)
node %18702 : bv<4> = concat(%18701, %15862)
node %18703 : bv<1> = ite(XORSIMD_BIN, xor_12e, xor_24c)
node %18704 : bv<5> = concat(%18703, %18702)
node %18705 : bv<1> = ite(XORSIMD_BIN, xor_12f, xor_48b)
node %18706 : bv<6> = concat(%18705, %18704)
node %18707 : bv<1> = ite(XORSIMD_BIN, xor_12g, xor_24d)
node %18708 : bv<7> = concat(%18707, %18706)
node XOR_MX_in : bv<8> = concat(xor_12h, %18708)
node PREG_BIN : bv<1> = PREG[0]
output XOROUT : bv<8> = ite(PREG_BIN, XOR_MX_reg, XOR_MX_in)
node %11922 : bv<46> = C[45:0]
node %11921 : bv<46> = C_reg[45:0]
node %11923 : bv<46> = ite(CREG_BIN, %11921, %11922)
node %11924 : bv<46> = not(%11923)
node %11925 : bv<48> = concat(%11924, 2'b00)
node %11932 : bv<1> = eq(SEL_MASK, 5'b10111)
node %11966 : bv<2> = ite(%11932, 2'b11, 2'b00)
node %11940 : bv<1> = eq(SEL_MASK, 5'b10110)
node %11967 : bv<2> = ite(%11940, 2'b10, %11966)
node %11948 : bv<1> = eq(SEL_MASK, 5'b10001)
node %11968 : bv<2> = ite(%11948, 2'b01, %11967)
node %11956 : bv<1> = eq(SEL_MASK, 5'b01000)
node SEL_MASK_BIN : bv<2> = ite(%11956, 2'b00, %11968)
node %11975 : bv<1> = eq(SEL_MASK_BIN, 2'b11)
node %11976 : bv<48> = ite(%11975, %11925, MASK)
node %11978 : bv<47> = C[46:0]
node %11977 : bv<47> = C_reg[46:0]
node %11979 : bv<47> = ite(CREG_BIN, %11977, %11978)
node %11980 : bv<47> = not(%11979)
node %11981 : bv<48> = concat(%11980, 1'b0)
node %11984 : bv<1> = eq(SEL_MASK_BIN, 2'b10)
node %11985 : bv<48> = ite(%11984, %11981, %11976)
node C_DATA_in : bv<48> = ite(CREG_BIN, C_reg, C)
node %11988 : bv<1> = eq(SEL_MASK_BIN, 2'b01)
node %11989 : bv<48> = ite(%11988, C_DATA_in, %11985)
node %11996 : bv<1> = eq(USE_PATTERN_DETECT, 5'b10101)
node %12004 : bv<1> = eq(USE_PATTERN_DETECT, 5'b01011)
node %12009 : bv<1> = not(%12004)
node USE_PATTERN_DETECT_BIN : bv<1> = and(%12009, %11996)
node %12014 : bv<1> = not(USE_PATTERN_DETECT_BIN)
node the_mask : bv<48> = ite(%12014, 48'xffffffffffff, %11989)
node %9971 : bv<12> = C[11:0]
node %9970 : bv<12> = C_reg[11:0]
node %9972 : bv<12> = ite(CREG_BIN, %9970, %9971)
node %1862 : bv<2> = IS_OPMODE_INVERTED[8:7]
node %1861 : bv<2> = OPMODE[8:7]
node %1863 : bv<2> = xor(%1861, %1862)
node %1858 : bv<2> = OPMODE_reg[8:7]
node %1864 : bv<2> = ite(OPMODEREG_BIN, %1858, %1863)
node _procmux_634_CMP0 : bv<1> = eq(%1864, 2'b11)
node %9973 : bv<12> = ite(_procmux_634_CMP0, %9972, 12'x000)
node %9964 : bv<12> = RND[11:0]
node _procmux_635_CMP0 : bv<1> = eq(%1864, 2'b10)
node %9974 : bv<12> = ite(_procmux_635_CMP0, %9964, %9973)
node %9961 : bv<12> = P_FDBK_in[11:0]
node _procmux_636_CMP0 : bv<1> = eq(%1864, 2'b01)
node %9975 : bv<12> = ite(_procmux_636_CMP0, %9961, %9974)
node _procmux_637_CMP0 : bv<1> = eq(%1864, 2'b00)
node %9976 : bv<12> = ite(_procmux_637_CMP0, 12'x000, %9975)
node %8327 : bv<11> = P_FDBK_in[27:17]
node %8328 : bv<11> = ite(_procmux_616_CMP0, %8327, 11'x000)
node %8346 : bv<11> = PCIN[27:17]
node %8347 : bv<11> = ite(_procmux_617_CMP0, %8346, %8328)
node %8297 : bv<11> = P_FDBK_in[10:0]
node %8348 : bv<11> = ite(_procmux_618_CMP0, %8297, %8347)
node %8350 : bv<11> = C[10:0]
node %8349 : bv<11> = C_reg[10:0]
node %8351 : bv<11> = ite(CREG_BIN, %8349, %8350)
node %8352 : bv<11> = ite(_procmux_619_CMP0, %8351, %8348)
node %8353 : bv<11> = ite(_procmux_620_CMP0, %8297, %8352)
node %8294 : bv<11> = PCIN[10:0]
node %8354 : bv<11> = ite(_procmux_621_CMP0, %8294, %8353)
node %8355 : bv<11> = ite(_procmux_622_CMP0, 11'x000, %8354)
node %1909 : bv<2> = concat(%1908, %1908)
node %1910 : bv<3> = concat(%1908, %1909)
node %1911 : bv<4> = concat(%1908, %1910)
node %1912 : bv<5> = concat(%1908, %1911)
node %1913 : bv<6> = concat(%1908, %1912)
node %1914 : bv<7> = concat(%1908, %1913)
node %1915 : bv<8> = concat(%1908, %1914)
node %1916 : bv<9> = concat(%1908, %1915)
node %1917 : bv<10> = concat(%1908, %1916)
node %1918 : bv<11> = concat(%1908, %1917)
node %8392 : bv<11> = xor(%1918, %8355)
node %8408 : bv<11> = B[10:0]
node %8407 : bv<11> = BCIN[10:0]
node %8409 : bv<11> = ite(B_INPUT_BIN, %8407, %8408)
node %8404 : bv<11> = B2_reg[10:0]
node %8410 : bv<11> = ite(%234, %8404, %8409)
node %8411 : bv<11> = ite(_procmux_629_CMP0, %8410, 11'x000)
node %8412 : bv<11> = ite(_procmux_630_CMP0, %8297, %8411)
node %5319 : bv<2> = concat(1'b0, %2609)
node %5320 : bv<3> = concat(%2613, %5319)
node %5321 : bv<4> = concat(1'b0, %5320)
node %5322 : bv<5> = concat(%2617, %5321)
node %5323 : bv<6> = concat(1'b0, %5322)
node %5324 : bv<7> = concat(%2621, %5323)
node %5325 : bv<8> = concat(1'b0, %5324)
node %5326 : bv<9> = concat(%2625, %5325)
node %5327 : bv<10> = concat(1'b0, %5326)
node %5328 : bv<11> = concat(%2629, %5327)
node %8419 : bv<11> = U_DATA_reg[10:0]
node %8454 : bv<11> = ite(MREG_BIN, %8419, %5328)
node %8455 : bv<11> = ite(%5401, %8454, 11'x000)
node %8456 : bv<11> = ite(_procmux_631_CMP0, %8455, %8412)
node %452 : bv<2> = concat(MULTSIGNIN, 1'b0)
node %8461 : bv<11> = concat(9'x000, %452)
node %8462 : bv<11> = ite(_procmux_618_CMP0, %8461, 11'x000)
node %8463 : bv<11> = ite(_procmux_632_CMP0, %8462, %8456)
node %8464 : bv<11> = and(%8463, %8392)
node %8479 : bv<11> = ite(_procmux_624_CMP0, %8351, 11'x000)
node %8481 : bv<11> = ite(_procmux_625_CMP0, 11'x7ff, %8479)
node %8212 : bv<2> = concat(%5502, 1'b0)
node %8213 : bv<3> = concat(1'b0, %8212)
node %8214 : bv<4> = concat(%5506, %8213)
node %8215 : bv<5> = concat(1'b0, %8214)
node %8216 : bv<6> = concat(%5510, %8215)
node %8217 : bv<7> = concat(1'b0, %8216)
node %8218 : bv<8> = concat(%5514, %8217)
node %8219 : bv<9> = concat(1'b0, %8218)
node %8220 : bv<10> = concat(%5518, %8219)
node %8221 : bv<11> = concat(1'b0, %8220)
node %8485 : bv<11> = V_DATA_reg[10:0]
node %8521 : bv<11> = ite(MREG_BIN, %8485, %8221)
node %8522 : bv<11> = ite(%5401, %8521, 11'x000)
node %8523 : bv<11> = ite(_procmux_626_CMP0, %8522, %8481)
node %8524 : bv<11> = ite(_procmux_627_CMP0, 11'x000, %8523)
node %8525 : bv<11> = and(%8392, %8524)
node %8527 : bv<11> = and(%8463, %8524)
node %8528 : bv<11> = or(%8527, %8525)
node %8529 : bv<11> = or(%8528, %8464)
node %8276 : bv<1> = IS_ALUMODE_INVERTED[2]
node %8275 : bv<1> = ALUMODE[2]
node %8277 : bv<1> = xor(%8275, %8276)
node %8272 : bv<1> = ALUMODE_reg[2]
node %8278 : bv<1> = ite(ALUMODEREG_BIN, %8272, %8277)
node %8530 : bv<11> = ite(%8278, 11'x000, %8529)
node %8531 : bv<12> = concat(%8530, 1'b0)
node %10000 : bv<12> = ite(_procmux_624_CMP0, %9972, 12'x000)
node %10002 : bv<12> = ite(_procmux_625_CMP0, 12'xfff, %10000)
node %8222 : bv<12> = concat(%5522, %8221)
node %10007 : bv<12> = V_DATA_reg[11:0]
node %10042 : bv<12> = ite(MREG_BIN, %10007, %8222)
node %10043 : bv<12> = ite(%5401, %10042, 12'x000)
node %10044 : bv<12> = ite(_procmux_626_CMP0, %10043, %10002)
node %10045 : bv<12> = ite(_procmux_627_CMP0, 12'x000, %10044)
node %10064 : bv<12> = B[11:0]
node %10063 : bv<12> = BCIN[11:0]
node %10065 : bv<12> = ite(B_INPUT_BIN, %10063, %10064)
node %10060 : bv<12> = B2_reg[11:0]
node %10066 : bv<12> = ite(%234, %10060, %10065)
node %10067 : bv<12> = ite(_procmux_629_CMP0, %10066, 12'x000)
node %10068 : bv<12> = ite(_procmux_630_CMP0, %9961, %10067)
node %5329 : bv<12> = concat(1'b0, %5328)
node %10074 : bv<12> = U_DATA_reg[11:0]
node %10108 : bv<12> = ite(MREG_BIN, %10074, %5329)
node %10109 : bv<12> = ite(%5401, %10108, 12'x000)
node %10110 : bv<12> = ite(_procmux_631_CMP0, %10109, %10068)
node %10116 : bv<12> = concat(10'x000, %452)
node %10117 : bv<12> = ite(_procmux_618_CMP0, %10116, 12'x000)
node %10118 : bv<12> = ite(_procmux_632_CMP0, %10117, %10110)
node %10155 : bv<12> = P_FDBK_in[28:17]
node %10156 : bv<12> = ite(_procmux_616_CMP0, %10155, 12'x000)
node %10174 : bv<12> = PCIN[28:17]
node %10175 : bv<12> = ite(_procmux_617_CMP0, %10174, %10156)
node %10176 : bv<12> = ite(_procmux_618_CMP0, %9961, %10175)
node %10177 : bv<12> = ite(_procmux_619_CMP0, %9972, %10176)
node %10178 : bv<12> = ite(_procmux_620_CMP0, %9961, %10177)
node %10124 : bv<12> = PCIN[11:0]
node %10179 : bv<12> = ite(_procmux_621_CMP0, %10124, %10178)
node %10180 : bv<12> = ite(_procmux_622_CMP0, 12'x000, %10179)
node %1919 : bv<12> = concat(%1908, %1918)
node %10216 : bv<12> = xor(%1919, %10180)
node %10217 : bv<12> = xor(%10216, %10118)
node %10218 : bv<12> = xor(%10217, %10045)
node %10223 : bv<12> = and(%10118, %10216)
node %10228 : bv<12> = and(%10216, %10045)
node %10230 : bv<12> = and(%10118, %10045)
node %10231 : bv<12> = or(%10230, %10228)
node %10232 : bv<12> = or(%10231, %10223)
node %9949 : bv<1> = IS_ALUMODE_INVERTED[3]
node %9948 : bv<1> = ALUMODE[3]
node %9950 : bv<1> = xor(%9948, %9949)
node %9945 : bv<1> = ALUMODE_reg[3]
node %9951 : bv<1> = ite(ALUMODEREG_BIN, %9945, %9950)
node %10233 : bv<12> = ite(%9951, %10232, %10218)
node %10234 : bv<12> = xor(%10233, %8531)
node %10235 : bv<12> = xor(%10234, %9976)
node %1158 : bv<1> = not(P_FDBK_47_in)
node CARRYINSELREG_BIN : bv<1> = CARRYINSELREG[0]
node CARRYINSEL_mux : bv<3> = ite(CARRYINSELREG_BIN, CARRYINSEL_reg, CARRYINSEL)
node _procmux_584_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b111)
node %10239 : bv<1> = and(_procmux_584_CMP0, %1158)
node %10240 : bv<1> = xor(AMULT26_in, BMULT17_in)
node c_mult : bv<1> = not(%10240)
node multcarryin_data : bv<1> = ite(MREG_BIN, qmultcarryin, c_mult)
node %10243 : bv<1> = not(multcarryin_data)
node _procmux_585_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b110)
node %10245 : bv<1> = ite(_procmux_585_CMP0, %10243, %10239)
node _procmux_586_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b101)
node %10247 : bv<1> = ite(_procmux_586_CMP0, P_FDBK_47_in, %10245)
node %729 : bv<1> = COUT_reg[3]
node CCOUT_in : bv<1> = xor(ALUMODE10_reg, %729)
node %731 : bv<1> = not(CCOUT_in)
node _procmux_587_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b100)
node %10249 : bv<1> = ite(_procmux_587_CMP0, %731, %10247)
node %734 : bv<1> = not(%171)
node _procmux_588_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b011)
node %10251 : bv<1> = ite(_procmux_588_CMP0, %734, %10249)
node %737 : bv<1> = not(CARRYCASCIN)
node _procmux_589_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b010)
node %10253 : bv<1> = ite(_procmux_589_CMP0, %737, %10251)
node _procmux_590_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b001)
node %10255 : bv<1> = ite(_procmux_590_CMP0, %171, %10253)
node CARRYIN_in : bv<1> = xor(CARRYIN, IS_CARRYIN_INVERTED)
node CARRYINREG_BIN : bv<1> = CARRYINREG[0]
node CARRYIN_mux : bv<1> = ite(CARRYINREG_BIN, CARRYIN_reg, CARRYIN_in)
node %10257 : bv<1> = not(CARRYIN_mux)
node _procmux_591_CMP0 : bv<1> = eq(CARRYINSEL_mux, 3'b000)
node cin_b : bv<1> = ite(_procmux_591_CMP0, %10257, %10255)
node %10261 : bv<1> = or(%9951, %8278)
node cin : bv<1> = or(%10261, cin_b)
node %10284 : bv<11> = ite(_procmux_634_CMP0, %8351, 11'x000)
node %10280 : bv<11> = RND[10:0]
node %10285 : bv<11> = ite(_procmux_635_CMP0, %10280, %10284)
node %10286 : bv<11> = ite(_procmux_636_CMP0, %8297, %10285)
node %10287 : bv<11> = ite(_procmux_637_CMP0, 11'x000, %10286)
node %10293 : bv<11> = xor(%8392, %8463)
node %10294 : bv<11> = xor(%10293, %8524)
node %10295 : bv<11> = ite(%9951, %8529, %10294)
node %10296 : bv<11> = and(%10295, %10287)
node %10340 : bv<10> = P_FDBK_in[26:17]
node %10341 : bv<10> = ite(_procmux_616_CMP0, %10340, 10'x000)
node %10342 : bv<10> = PCIN[26:17]
node %10343 : bv<10> = ite(_procmux_617_CMP0, %10342, %10341)
node %10344 : bv<10> = P_FDBK_in[9:0]
node %10345 : bv<10> = ite(_procmux_618_CMP0, %10344, %10343)
node %10349 : bv<10> = C[9:0]
node %10350 : bv<10> = C_reg[9:0]
node %10351 : bv<10> = ite(CREG_BIN, %10350, %10349)
node %10352 : bv<10> = ite(_procmux_619_CMP0, %10351, %10345)
node %10353 : bv<10> = ite(_procmux_620_CMP0, %10344, %10352)
node %10354 : bv<10> = PCIN[9:0]
node %10355 : bv<10> = ite(_procmux_621_CMP0, %10354, %10353)
node %10356 : bv<10> = ite(_procmux_622_CMP0, 10'x000, %10355)
node %10357 : bv<10> = xor(%1917, %10356)
node %10374 : bv<10> = B[9:0]
node %10375 : bv<10> = BCIN[9:0]
node %10376 : bv<10> = ite(B_INPUT_BIN, %10375, %10374)
node %10377 : bv<10> = B2_reg[9:0]
node %10378 : bv<10> = ite(%234, %10377, %10376)
node %10379 : bv<10> = ite(_procmux_629_CMP0, %10378, 10'x000)
node %10380 : bv<10> = ite(_procmux_630_CMP0, %10344, %10379)
node %10386 : bv<10> = U_DATA_reg[9:0]
node %10387 : bv<10> = ite(MREG_BIN, %10386, %5327)
node %10388 : bv<10> = ite(%5401, %10387, 10'x000)
node %10389 : bv<10> = ite(_procmux_631_CMP0, %10388, %10380)
node %10394 : bv<10> = concat(8'b00000000, %452)
node %10395 : bv<10> = ite(_procmux_618_CMP0, %10394, 10'x000)
node %10396 : bv<10> = ite(_procmux_632_CMP0, %10395, %10389)
node %10397 : bv<10> = and(%10396, %10357)
node %10412 : bv<10> = ite(_procmux_624_CMP0, %10351, 10'x000)
node %10414 : bv<10> = ite(_procmux_625_CMP0, 10'x3ff, %10412)
node %10420 : bv<10> = V_DATA_reg[9:0]
node %10421 : bv<10> = ite(MREG_BIN, %10420, %8220)
node %10422 : bv<10> = ite(%5401, %10421, 10'x000)
node %10423 : bv<10> = ite(_procmux_626_CMP0, %10422, %10414)
node %10424 : bv<10> = ite(_procmux_627_CMP0, 10'x000, %10423)
node %10425 : bv<10> = and(%10357, %10424)
node %10427 : bv<10> = and(%10396, %10424)
node %10428 : bv<10> = or(%10427, %10425)
node %10429 : bv<10> = or(%10428, %10397)
node %10430 : bv<10> = ite(%8278, 10'x000, %10429)
node %10431 : bv<11> = concat(%10430, 1'b0)
node %10432 : bv<11> = and(%10287, %10431)
node %10434 : bv<11> = and(%10295, %10431)
node %10435 : bv<11> = or(%10434, %10432)
node %10436 : bv<11> = or(%10435, %10296)
node %10437 : bv<12> = concat(%10436, cin)
node %12019 : bv<12> = add(%10437, %10235)
node %10236 : bv<13> = concat(1'b0, %10235)
node %10438 : bv<13> = concat(1'b0, %10437)
node s0 : bv<13> = add(%10438, %10236)
node %10440 : bv<1> = s0[12]
node %8536 : bv<1> = eq(USE_SIMD_BIN, 2'b01)
node %8537 : bv<1> = not(%8536)
node intc1 : bv<1> = and(%8537, %10440)
node %12025 : bv<12> = concat(11'x000, intc1)
node %10458 : bv<12> = C[23:12]
node %10457 : bv<12> = C_reg[23:12]
node %10459 : bv<12> = ite(CREG_BIN, %10457, %10458)
node %10460 : bv<12> = ite(_procmux_634_CMP0, %10459, 12'x000)
node %10452 : bv<12> = RND[23:12]
node %10461 : bv<12> = ite(_procmux_635_CMP0, %10452, %10460)
node %10449 : bv<12> = P_FDBK_in[23:12]
node %10462 : bv<12> = ite(_procmux_636_CMP0, %10449, %10461)
node %10463 : bv<12> = ite(_procmux_637_CMP0, 12'x000, %10462)
node %8721 : bv<1> = and(%8720, %8651)
node %8782 : bv<1> = and(%8651, %8781)
node %8784 : bv<1> = and(%8720, %8781)
node %8785 : bv<1> = or(%8784, %8782)
node %8786 : bv<1> = or(%8785, %8721)
node %8787 : bv<1> = not(%8278)
node %8788 : bv<1> = and(%8787, %8786)
node %8789 : bv<1> = and(%8788, %8537)
node %8838 : bv<11> = P_FDBK_in[39:29]
node %8839 : bv<11> = ite(_procmux_616_CMP0, %8838, 11'x000)
node %8857 : bv<11> = PCIN[39:29]
node %8858 : bv<11> = ite(_procmux_617_CMP0, %8857, %8839)
node %8808 : bv<11> = P_FDBK_in[22:12]
node %8859 : bv<11> = ite(_procmux_618_CMP0, %8808, %8858)
node %8861 : bv<11> = C[22:12]
node %8860 : bv<11> = C_reg[22:12]
node %8862 : bv<11> = ite(CREG_BIN, %8860, %8861)
node %8863 : bv<11> = ite(_procmux_619_CMP0, %8862, %8859)
node %8864 : bv<11> = ite(_procmux_620_CMP0, %8808, %8863)
node %8805 : bv<11> = PCIN[22:12]
node %8865 : bv<11> = ite(_procmux_621_CMP0, %8805, %8864)
node %8866 : bv<11> = ite(_procmux_622_CMP0, 11'x000, %8865)
node %8912 : bv<11> = xor(%1918, %8866)
node %8930 : bv<6> = B[17:12]
node %8929 : bv<6> = BCIN[17:12]
node %8931 : bv<6> = ite(B_INPUT_BIN, %8929, %8930)
node %8926 : bv<6> = B2_reg[17:12]
node %8932 : bv<6> = ite(%234, %8926, %8931)
node %8937 : bv<5> = A[4:0]
node %8936 : bv<5> = ACIN[4:0]
node %8938 : bv<5> = ite(A_INPUT_BIN, %8936, %8937)
node %8933 : bv<5> = A2_reg[4:0]
node %8939 : bv<5> = ite(%248, %8933, %8938)
node %8940 : bv<11> = concat(%8939, %8932)
node %8941 : bv<11> = ite(_procmux_629_CMP0, %8940, 11'x000)
node %8942 : bv<11> = ite(_procmux_630_CMP0, %8808, %8941)
node %4029 : bv<2> = concat(1'b0, %2633)
node %4030 : bv<3> = concat(%2637, %4029)
node %4031 : bv<4> = concat(1'b0, %4030)
node %4032 : bv<5> = concat(%2641, %4031)
node %4033 : bv<6> = concat(1'b0, %4032)
node %4034 : bv<7> = concat(%2645, %4033)
node %4035 : bv<8> = concat(1'b0, %4034)
node %4036 : bv<9> = concat(%2649, %4035)
node %4037 : bv<10> = concat(1'b0, %4036)
node %4038 : bv<11> = concat(%2653, %4037)
node %8949 : bv<11> = U_DATA_reg[22:12]
node %8993 : bv<11> = ite(MREG_BIN, %8949, %4038)
node %8994 : bv<11> = ite(%5401, %8993, 11'x000)
node %8995 : bv<11> = ite(_procmux_631_CMP0, %8994, %8942)
node %8999 : bv<11> = ite(_procmux_632_CMP0, 11'x000, %8995)
node %9000 : bv<11> = and(%8999, %8912)
node %9015 : bv<11> = ite(_procmux_624_CMP0, %8862, 11'x000)
node %9016 : bv<11> = ite(_procmux_625_CMP0, 11'x7ff, %9015)
node %6922 : bv<2> = concat(%5526, 1'b0)
node %6923 : bv<3> = concat(1'b0, %6922)
node %6924 : bv<4> = concat(%5530, %6923)
node %6925 : bv<5> = concat(1'b0, %6924)
node %6926 : bv<6> = concat(%5534, %6925)
node %6927 : bv<7> = concat(1'b0, %6926)
node %6928 : bv<8> = concat(%5538, %6927)
node %6929 : bv<9> = concat(1'b0, %6928)
node %6930 : bv<10> = concat(%5542, %6929)
node %6931 : bv<11> = concat(1'b0, %6930)
node %9020 : bv<11> = V_DATA_reg[22:12]
node %9065 : bv<11> = ite(MREG_BIN, %9020, %6931)
node %9066 : bv<11> = ite(%5401, %9065, 11'x000)
node %9067 : bv<11> = ite(_procmux_626_CMP0, %9066, %9016)
node %9068 : bv<11> = ite(_procmux_627_CMP0, 11'x000, %9067)
node %9069 : bv<11> = and(%8912, %9068)
node %9071 : bv<11> = and(%8999, %9068)
node %9072 : bv<11> = or(%9071, %9069)
node %9073 : bv<11> = or(%9072, %9000)
node %9074 : bv<11> = ite(%8278, 11'x000, %9073)
node %10473 : bv<12> = concat(%9074, %8789)
node %10489 : bv<12> = ite(_procmux_624_CMP0, %10459, 12'x000)
node %10490 : bv<12> = ite(_procmux_625_CMP0, 12'xfff, %10489)
node %6932 : bv<12> = concat(%5546, %6931)
node %10495 : bv<12> = V_DATA_reg[23:12]
node %10520 : bv<12> = ite(MREG_BIN, %10495, %6932)
node %10521 : bv<12> = ite(%5401, %10520, 12'x000)
node %10522 : bv<12> = ite(_procmux_626_CMP0, %10521, %10490)
node %10523 : bv<12> = ite(_procmux_627_CMP0, 12'x000, %10522)
node %10543 : bv<6> = A[5:0]
node %10542 : bv<6> = ACIN[5:0]
node %10544 : bv<6> = ite(A_INPUT_BIN, %10542, %10543)
node %10539 : bv<6> = A2_reg[5:0]
node %10545 : bv<6> = ite(%248, %10539, %10544)
node %10546 : bv<12> = concat(%10545, %8932)
node %10547 : bv<12> = ite(_procmux_629_CMP0, %10546, 12'x000)
node %10548 : bv<12> = ite(_procmux_630_CMP0, %10449, %10547)
node %4039 : bv<12> = concat(1'b0, %4038)
node %10554 : bv<12> = U_DATA_reg[23:12]
node %10578 : bv<12> = ite(MREG_BIN, %10554, %4039)
node %10579 : bv<12> = ite(%5401, %10578, 12'x000)
node %10580 : bv<12> = ite(_procmux_631_CMP0, %10579, %10548)
node %10584 : bv<12> = ite(_procmux_632_CMP0, 12'x000, %10580)
node %10621 : bv<12> = P_FDBK_in[40:29]
node %10622 : bv<12> = ite(_procmux_616_CMP0, %10621, 12'x000)
node %10640 : bv<12> = PCIN[40:29]
node %10641 : bv<12> = ite(_procmux_617_CMP0, %10640, %10622)
node %10642 : bv<12> = ite(_procmux_618_CMP0, %10449, %10641)
node %10643 : bv<12> = ite(_procmux_619_CMP0, %10459, %10642)
node %10644 : bv<12> = ite(_procmux_620_CMP0, %10449, %10643)
node %10590 : bv<12> = PCIN[23:12]
node %10645 : bv<12> = ite(_procmux_621_CMP0, %10590, %10644)
node %10646 : bv<12> = ite(_procmux_622_CMP0, 12'x000, %10645)
node %10672 : bv<12> = xor(%1919, %10646)
node %10673 : bv<12> = xor(%10672, %10584)
node %10674 : bv<12> = xor(%10673, %10523)
node %10679 : bv<12> = and(%10584, %10672)
node %10684 : bv<12> = and(%10672, %10523)
node %10686 : bv<12> = and(%10584, %10523)
node %10687 : bv<12> = or(%10686, %10684)
node %10688 : bv<12> = or(%10687, %10679)
node %10689 : bv<12> = ite(%9951, %10688, %10674)
node %10690 : bv<12> = xor(%10689, %10473)
node %10691 : bv<12> = xor(%10690, %10463)
node %10707 : bv<1> = and(_procmux_634_CMP0, %8609)
node %10703 : bv<1> = RND[11]
node %10708 : bv<1> = ite(_procmux_635_CMP0, %10703, %10707)
node %10709 : bv<1> = ite(_procmux_636_CMP0, %8555, %10708)
node %10710 : bv<1> = not(_procmux_637_CMP0)
node %10711 : bv<1> = and(%10710, %10709)
node %10719 : bv<1> = ite(%9951, %8786, %10718)
node %10720 : bv<1> = and(%10719, %10711)
node %10817 : bv<1> = and(%10816, %10780)
node %10844 : bv<1> = and(%10780, %10843)
node %10846 : bv<1> = and(%10816, %10843)
node %10847 : bv<1> = or(%10846, %10844)
node %10848 : bv<1> = or(%10847, %10817)
node %10849 : bv<1> = and(%8787, %10848)
node %10850 : bv<1> = and(%10711, %10849)
node %10852 : bv<1> = and(%10719, %10849)
node %10853 : bv<1> = or(%10852, %10850)
node %10854 : bv<1> = or(%10853, %10720)
node co12_lsb : bv<1> = and(%8537, %10854)
node %10870 : bv<11> = ite(_procmux_634_CMP0, %8862, 11'x000)
node %10866 : bv<11> = RND[22:12]
node %10871 : bv<11> = ite(_procmux_635_CMP0, %10866, %10870)
node %10872 : bv<11> = ite(_procmux_636_CMP0, %8808, %10871)
node %10873 : bv<11> = ite(_procmux_637_CMP0, 11'x000, %10872)
node %10879 : bv<11> = xor(%8912, %8999)
node %10880 : bv<11> = xor(%10879, %9068)
node %10881 : bv<11> = ite(%9951, %9073, %10880)
node %10882 : bv<11> = and(%10881, %10873)
node %10922 : bv<10> = P_FDBK_in[38:29]
node %10923 : bv<10> = ite(_procmux_616_CMP0, %10922, 10'x000)
node %10924 : bv<10> = PCIN[38:29]
node %10925 : bv<10> = ite(_procmux_617_CMP0, %10924, %10923)
node %10926 : bv<10> = P_FDBK_in[21:12]
node %10927 : bv<10> = ite(_procmux_618_CMP0, %10926, %10925)
node %10931 : bv<10> = C[21:12]
node %10932 : bv<10> = C_reg[21:12]
node %10933 : bv<10> = ite(CREG_BIN, %10932, %10931)
node %10934 : bv<10> = ite(_procmux_619_CMP0, %10933, %10927)
node %10935 : bv<10> = ite(_procmux_620_CMP0, %10926, %10934)
node %10936 : bv<10> = PCIN[21:12]
node %10937 : bv<10> = ite(_procmux_621_CMP0, %10936, %10935)
node %10938 : bv<10> = ite(_procmux_622_CMP0, 10'x000, %10937)
node %10939 : bv<10> = xor(%1917, %10938)
node %10957 : bv<4> = A[3:0]
node %10958 : bv<4> = ACIN[3:0]
node %10959 : bv<4> = ite(A_INPUT_BIN, %10958, %10957)
node %10960 : bv<4> = A2_reg[3:0]
node %10961 : bv<4> = ite(%248, %10960, %10959)
node %10962 : bv<10> = concat(%10961, %8932)
node %10963 : bv<10> = ite(_procmux_629_CMP0, %10962, 10'x000)
node %10964 : bv<10> = ite(_procmux_630_CMP0, %10926, %10963)
node %10970 : bv<10> = U_DATA_reg[21:12]
node %10971 : bv<10> = ite(MREG_BIN, %10970, %4037)
node %10972 : bv<10> = ite(%5401, %10971, 10'x000)
node %10973 : bv<10> = ite(_procmux_631_CMP0, %10972, %10964)
node %10974 : bv<10> = ite(_procmux_632_CMP0, 10'x000, %10973)
node %10975 : bv<10> = and(%10974, %10939)
node %10989 : bv<10> = ite(_procmux_624_CMP0, %10933, 10'x000)
node %10990 : bv<10> = ite(_procmux_625_CMP0, 10'x3ff, %10989)
node %10996 : bv<10> = V_DATA_reg[21:12]
node %10997 : bv<10> = ite(MREG_BIN, %10996, %6930)
node %10998 : bv<10> = ite(%5401, %10997, 10'x000)
node %10999 : bv<10> = ite(_procmux_626_CMP0, %10998, %10990)
node %11000 : bv<10> = ite(_procmux_627_CMP0, 10'x000, %10999)
node %11001 : bv<10> = and(%10939, %11000)
node %11003 : bv<10> = and(%10974, %11000)
node %11004 : bv<10> = or(%11003, %11001)
node %11005 : bv<10> = or(%11004, %10975)
node %11006 : bv<10> = ite(%8278, 10'x000, %11005)
node %11007 : bv<11> = concat(%11006, %8789)
node %11008 : bv<11> = and(%10873, %11007)
node %11010 : bv<11> = and(%10881, %11007)
node %11011 : bv<11> = or(%11010, %11008)
node %11012 : bv<11> = or(%11011, %10882)
node %11013 : bv<12> = concat(%11012, co12_lsb)
node %12029 : bv<12> = add(%11013, %10691)
node %12030 : bv<12> = add(%12029, %12025)
node %12031 : bv<24> = concat(%12030, %12019)
node %10442 : bv<13> = concat(12'x000, intc1)
node %10692 : bv<13> = concat(1'b0, %10691)
node %11014 : bv<13> = concat(1'b0, %11013)
node %11015 : bv<13> = add(%11014, %10692)
node s1 : bv<13> = add(%11015, %10442)
node %11017 : bv<1> = s1[12]
node intc2 : bv<1> = and(%5401, %11017)
node %12036 : bv<12> = concat(11'x000, intc2)
node %11035 : bv<12> = C[35:24]
node %11034 : bv<12> = C_reg[35:24]
node %11036 : bv<12> = ite(CREG_BIN, %11034, %11035)
node %11037 : bv<12> = ite(_procmux_634_CMP0, %11036, 12'x000)
node %11029 : bv<12> = RND[35:24]
node %11038 : bv<12> = ite(_procmux_635_CMP0, %11029, %11037)
node %11026 : bv<12> = P_FDBK_in[35:24]
node %11039 : bv<12> = ite(_procmux_636_CMP0, %11026, %11038)
node %11040 : bv<12> = ite(_procmux_637_CMP0, 12'x000, %11039)
node %9233 : bv<1> = and(%9232, %9176)
node %9281 : bv<1> = and(%9176, %9280)
node %9283 : bv<1> = and(%9232, %9280)
node %9284 : bv<1> = or(%9283, %9281)
node %9285 : bv<1> = or(%9284, %9233)
node %9286 : bv<1> = and(%8787, %9285)
node %9287 : bv<1> = and(%9286, %5401)
node %9340 : bv<7> = P_FDBK_in[47:41]
node %9341 : bv<8> = concat(P_FDBK_47_in, %9340)
node %9342 : bv<9> = concat(P_FDBK_47_in, %9341)
node %9343 : bv<10> = concat(P_FDBK_47_in, %9342)
node %9344 : bv<11> = concat(P_FDBK_47_in, %9343)
node %9345 : bv<11> = ite(_procmux_616_CMP0, %9344, 11'x000)
node %9367 : bv<7> = PCIN[47:41]
node %9368 : bv<8> = concat(%171, %9367)
node %9369 : bv<9> = concat(%171, %9368)
node %9370 : bv<10> = concat(%171, %9369)
node %9371 : bv<11> = concat(%171, %9370)
node %9372 : bv<11> = ite(_procmux_617_CMP0, %9371, %9345)
node %9306 : bv<11> = P_FDBK_in[34:24]
node %9373 : bv<11> = ite(_procmux_618_CMP0, %9306, %9372)
node %9375 : bv<11> = C[34:24]
node %9374 : bv<11> = C_reg[34:24]
node %9376 : bv<11> = ite(CREG_BIN, %9374, %9375)
node %9377 : bv<11> = ite(_procmux_619_CMP0, %9376, %9373)
node %9378 : bv<11> = ite(_procmux_620_CMP0, %9306, %9377)
node %9303 : bv<11> = PCIN[34:24]
node %9379 : bv<11> = ite(_procmux_621_CMP0, %9303, %9378)
node %9380 : bv<11> = ite(_procmux_622_CMP0, 11'x000, %9379)
node %9414 : bv<11> = xor(%1918, %9380)
node %9430 : bv<11> = A[16:6]
node %9429 : bv<11> = ACIN[16:6]
node %9431 : bv<11> = ite(A_INPUT_BIN, %9429, %9430)
node %9426 : bv<11> = A2_reg[16:6]
node %9432 : bv<11> = ite(%248, %9426, %9431)
node %9433 : bv<11> = ite(_procmux_629_CMP0, %9432, 11'x000)
node %9434 : bv<11> = ite(_procmux_630_CMP0, %9306, %9433)
node %3171 : bv<2> = concat(1'b0, %2657)
node %3172 : bv<3> = concat(%2661, %3171)
node %3173 : bv<4> = concat(1'b0, %3172)
node %3174 : bv<5> = concat(%2665, %3173)
node %3175 : bv<6> = concat(1'b0, %3174)
node %3176 : bv<7> = concat(%2669, %3175)
node %3177 : bv<8> = concat(1'b0, %3176)
node %3178 : bv<9> = concat(%2673, %3177)
node %3179 : bv<10> = concat(1'b0, %3178)
node %3180 : bv<11> = concat(%2677, %3179)
node %9441 : bv<11> = U_DATA_reg[34:24]
node %9473 : bv<11> = ite(MREG_BIN, %9441, %3180)
node %9474 : bv<11> = ite(%5401, %9473, 11'x000)
node %9475 : bv<11> = ite(_procmux_631_CMP0, %9474, %9434)
node %9479 : bv<11> = ite(_procmux_632_CMP0, 11'x000, %9475)
node %9480 : bv<11> = and(%9479, %9414)
node %9495 : bv<11> = ite(_procmux_624_CMP0, %9376, 11'x000)
node %9496 : bv<11> = ite(_procmux_625_CMP0, 11'x7ff, %9495)
node %6064 : bv<2> = concat(%5550, 1'b0)
node %6065 : bv<3> = concat(1'b0, %6064)
node %6066 : bv<4> = concat(%5554, %6065)
node %6067 : bv<5> = concat(1'b0, %6066)
node %6068 : bv<6> = concat(%5558, %6067)
node %6069 : bv<7> = concat(1'b0, %6068)
node %6070 : bv<8> = concat(%5562, %6069)
node %6071 : bv<9> = concat(1'b0, %6070)
node %6072 : bv<10> = concat(%5566, %6071)
node %6073 : bv<11> = concat(1'b0, %6072)
node %9500 : bv<11> = V_DATA_reg[34:24]
node %9533 : bv<11> = ite(MREG_BIN, %9500, %6073)
node %9534 : bv<11> = ite(%5401, %9533, 11'x000)
node %9535 : bv<11> = ite(_procmux_626_CMP0, %9534, %9496)
node %9536 : bv<11> = ite(_procmux_627_CMP0, 11'x000, %9535)
node %9537 : bv<11> = and(%9414, %9536)
node %9539 : bv<11> = and(%9479, %9536)
node %9540 : bv<11> = or(%9539, %9537)
node %9541 : bv<11> = or(%9540, %9480)
node %9542 : bv<11> = ite(%8278, 11'x000, %9541)
node %11048 : bv<12> = concat(%9542, %9287)
node %11064 : bv<12> = ite(_procmux_624_CMP0, %11036, 12'x000)
node %11065 : bv<12> = ite(_procmux_625_CMP0, 12'xfff, %11064)
node %6074 : bv<12> = concat(%5570, %6073)
node %11070 : bv<12> = V_DATA_reg[35:24]
node %11083 : bv<12> = ite(MREG_BIN, %11070, %6074)
node %11084 : bv<12> = ite(%5401, %11083, 12'x000)
node %11085 : bv<12> = ite(_procmux_626_CMP0, %11084, %11065)
node %11086 : bv<12> = ite(_procmux_627_CMP0, 12'x000, %11085)
node %11105 : bv<12> = A[17:6]
node %11104 : bv<12> = ACIN[17:6]
node %11106 : bv<12> = ite(A_INPUT_BIN, %11104, %11105)
node %11101 : bv<12> = A2_reg[17:6]
node %11107 : bv<12> = ite(%248, %11101, %11106)
node %11108 : bv<12> = ite(_procmux_629_CMP0, %11107, 12'x000)
node %11109 : bv<12> = ite(_procmux_630_CMP0, %11026, %11108)
node %3181 : bv<12> = concat(1'b0, %3180)
node %11115 : bv<12> = U_DATA_reg[35:24]
node %11127 : bv<12> = ite(MREG_BIN, %11115, %3181)
node %11128 : bv<12> = ite(%5401, %11127, 12'x000)
node %11129 : bv<12> = ite(_procmux_631_CMP0, %11128, %11109)
node %11133 : bv<12> = ite(_procmux_632_CMP0, 12'x000, %11129)
node %11166 : bv<12> = concat(P_FDBK_47_in, %9344)
node %11167 : bv<12> = ite(_procmux_616_CMP0, %11166, 12'x000)
node %11181 : bv<12> = concat(%171, %9371)
node %11182 : bv<12> = ite(_procmux_617_CMP0, %11181, %11167)
node %11183 : bv<12> = ite(_procmux_618_CMP0, %11026, %11182)
node %11184 : bv<12> = ite(_procmux_619_CMP0, %11036, %11183)
node %11185 : bv<12> = ite(_procmux_620_CMP0, %11026, %11184)
node %11139 : bv<12> = PCIN[35:24]
node %11186 : bv<12> = ite(_procmux_621_CMP0, %11139, %11185)
node %11187 : bv<12> = ite(_procmux_622_CMP0, 12'x000, %11186)
node %11201 : bv<12> = xor(%1919, %11187)
node %11202 : bv<12> = xor(%11201, %11133)
node %11203 : bv<12> = xor(%11202, %11086)
node %11208 : bv<12> = and(%11133, %11201)
node %11213 : bv<12> = and(%11201, %11086)
node %11215 : bv<12> = and(%11133, %11086)
node %11216 : bv<12> = or(%11215, %11213)
node %11217 : bv<12> = or(%11216, %11208)
node %11218 : bv<12> = ite(%9951, %11217, %11203)
node %11219 : bv<12> = xor(%11218, %11048)
node %11220 : bv<12> = xor(%11219, %11040)
node %11236 : bv<1> = and(_procmux_634_CMP0, %9147)
node %11232 : bv<1> = RND[23]
node %11237 : bv<1> = ite(_procmux_635_CMP0, %11232, %11236)
node %11238 : bv<1> = ite(_procmux_636_CMP0, %9093, %11237)
node %11239 : bv<1> = and(%10710, %11238)
node %11247 : bv<1> = ite(%9951, %9285, %11246)
node %11248 : bv<1> = and(%11247, %11239)
node %11338 : bv<1> = and(%11337, %11304)
node %11364 : bv<1> = and(%11304, %11363)
node %11366 : bv<1> = and(%11337, %11363)
node %11367 : bv<1> = or(%11366, %11364)
node %11368 : bv<1> = or(%11367, %11338)
node %11369 : bv<1> = and(%8787, %11368)
node %11370 : bv<1> = and(%11239, %11369)
node %11372 : bv<1> = and(%11247, %11369)
node %11373 : bv<1> = or(%11372, %11370)
node %11374 : bv<1> = or(%11373, %11248)
node co24_lsb : bv<1> = and(%5401, %11374)
node %11390 : bv<11> = ite(_procmux_634_CMP0, %9376, 11'x000)
node %11386 : bv<11> = RND[34:24]
node %11391 : bv<11> = ite(_procmux_635_CMP0, %11386, %11390)
node %11392 : bv<11> = ite(_procmux_636_CMP0, %9306, %11391)
node %11393 : bv<11> = ite(_procmux_637_CMP0, 11'x000, %11392)
node %11399 : bv<11> = xor(%9414, %9479)
node %11400 : bv<11> = xor(%11399, %9536)
node %11401 : bv<11> = ite(%9951, %9541, %11400)
node %11402 : bv<11> = and(%11401, %11393)
node %11440 : bv<10> = ite(_procmux_616_CMP0, %9343, 10'x000)
node %11441 : bv<10> = ite(_procmux_617_CMP0, %9370, %11440)
node %11442 : bv<10> = P_FDBK_in[33:24]
node %11443 : bv<10> = ite(_procmux_618_CMP0, %11442, %11441)
node %11447 : bv<10> = C[33:24]
node %11448 : bv<10> = C_reg[33:24]
node %11449 : bv<10> = ite(CREG_BIN, %11448, %11447)
node %11450 : bv<10> = ite(_procmux_619_CMP0, %11449, %11443)
node %11451 : bv<10> = ite(_procmux_620_CMP0, %11442, %11450)
node %11452 : bv<10> = PCIN[33:24]
node %11453 : bv<10> = ite(_procmux_621_CMP0, %11452, %11451)
node %11454 : bv<10> = ite(_procmux_622_CMP0, 10'x000, %11453)
node %11455 : bv<10> = xor(%1917, %11454)
node %11471 : bv<10> = A[15:6]
node %11472 : bv<10> = ACIN[15:6]
node %11473 : bv<10> = ite(A_INPUT_BIN, %11472, %11471)
node %11474 : bv<10> = A2_reg[15:6]
node %11475 : bv<10> = ite(%248, %11474, %11473)
node %11476 : bv<10> = ite(_procmux_629_CMP0, %11475, 10'x000)
node %11477 : bv<10> = ite(_procmux_630_CMP0, %11442, %11476)
node %11483 : bv<10> = U_DATA_reg[33:24]
node %11484 : bv<10> = ite(MREG_BIN, %11483, %3179)
node %11485 : bv<10> = ite(%5401, %11484, 10'x000)
node %11486 : bv<10> = ite(_procmux_631_CMP0, %11485, %11477)
node %11487 : bv<10> = ite(_procmux_632_CMP0, 10'x000, %11486)
node %11488 : bv<10> = and(%11487, %11455)
node %11502 : bv<10> = ite(_procmux_624_CMP0, %11449, 10'x000)
node %11503 : bv<10> = ite(_procmux_625_CMP0, 10'x3ff, %11502)
node %11509 : bv<10> = V_DATA_reg[33:24]
node %11510 : bv<10> = ite(MREG_BIN, %11509, %6072)
node %11511 : bv<10> = ite(%5401, %11510, 10'x000)
node %11512 : bv<10> = ite(_procmux_626_CMP0, %11511, %11503)
node %11513 : bv<10> = ite(_procmux_627_CMP0, 10'x000, %11512)
node %11514 : bv<10> = and(%11455, %11513)
node %11516 : bv<10> = and(%11487, %11513)
node %11517 : bv<10> = or(%11516, %11514)
node %11518 : bv<10> = or(%11517, %11488)
node %11519 : bv<10> = ite(%8278, 10'x000, %11518)
node %11520 : bv<11> = concat(%11519, %9287)
node %11521 : bv<11> = and(%11393, %11520)
node %11523 : bv<11> = and(%11401, %11520)
node %11524 : bv<11> = or(%11523, %11521)
node %11525 : bv<11> = or(%11524, %11402)
node %11526 : bv<12> = concat(%11525, co24_lsb)
node %12040 : bv<12> = add(%11526, %11220)
node %12041 : bv<12> = add(%12040, %12036)
node %12042 : bv<36> = concat(%12041, %12031)
node %11019 : bv<13> = concat(12'x000, intc2)
node %11221 : bv<13> = concat(1'b0, %11220)
node %11527 : bv<13> = concat(1'b0, %11526)
node %11528 : bv<13> = add(%11527, %11221)
node s2 : bv<13> = add(%11528, %11019)
node %11530 : bv<1> = s2[12]
node intc3 : bv<1> = and(%8537, %11530)
node %12048 : bv<12> = concat(11'x000, intc3)
node %11549 : bv<12> = C[47:36]
node %11548 : bv<12> = C_reg[47:36]
node %11550 : bv<12> = ite(CREG_BIN, %11548, %11549)
node %11551 : bv<12> = ite(_procmux_634_CMP0, %11550, 12'x000)
node %11543 : bv<12> = RND[47:36]
node %11552 : bv<12> = ite(_procmux_635_CMP0, %11543, %11551)
node %11540 : bv<12> = P_FDBK_in[47:36]
node %11553 : bv<12> = ite(_procmux_636_CMP0, %11540, %11552)
node %11554 : bv<12> = ite(_procmux_637_CMP0, 12'x000, %11553)
node %9665 : bv<1> = and(%9664, %9620)
node %9701 : bv<1> = and(%9620, %9700)
node %9703 : bv<1> = and(%9664, %9700)
node %9704 : bv<1> = or(%9703, %9701)
node %9705 : bv<1> = or(%9704, %9665)
node %9706 : bv<1> = and(%8787, %9705)
node %9707 : bv<1> = and(%9706, %8537)
node %9760 : bv<2> = concat(P_FDBK_47_in, P_FDBK_47_in)
node %9761 : bv<3> = concat(P_FDBK_47_in, %9760)
node %9762 : bv<4> = concat(P_FDBK_47_in, %9761)
node %9763 : bv<5> = concat(P_FDBK_47_in, %9762)
node %9764 : bv<6> = concat(P_FDBK_47_in, %9763)
node %9765 : bv<7> = concat(P_FDBK_47_in, %9764)
node %9766 : bv<8> = concat(P_FDBK_47_in, %9765)
node %9767 : bv<9> = concat(P_FDBK_47_in, %9766)
node %9768 : bv<10> = concat(P_FDBK_47_in, %9767)
node %9769 : bv<11> = concat(P_FDBK_47_in, %9768)
node %9770 : bv<11> = ite(_procmux_616_CMP0, %9769, 11'x000)
node %9792 : bv<2> = concat(%171, %171)
node %9793 : bv<3> = concat(%171, %9792)
node %9794 : bv<4> = concat(%171, %9793)
node %9795 : bv<5> = concat(%171, %9794)
node %9796 : bv<6> = concat(%171, %9795)
node %9797 : bv<7> = concat(%171, %9796)
node %9798 : bv<8> = concat(%171, %9797)
node %9799 : bv<9> = concat(%171, %9798)
node %9800 : bv<10> = concat(%171, %9799)
node %9801 : bv<11> = concat(%171, %9800)
node %9802 : bv<11> = ite(_procmux_617_CMP0, %9801, %9770)
node %9726 : bv<11> = P_FDBK_in[46:36]
node %9803 : bv<11> = ite(_procmux_618_CMP0, %9726, %9802)
node %9805 : bv<11> = C[46:36]
node %9804 : bv<11> = C_reg[46:36]
node %9806 : bv<11> = ite(CREG_BIN, %9804, %9805)
node %9807 : bv<11> = ite(_procmux_619_CMP0, %9806, %9803)
node %9808 : bv<11> = ite(_procmux_620_CMP0, %9726, %9807)
node %9723 : bv<11> = PCIN[46:36]
node %9809 : bv<11> = ite(_procmux_621_CMP0, %9723, %9808)
node %9810 : bv<11> = ite(_procmux_622_CMP0, 11'x000, %9809)
node %9832 : bv<11> = xor(%1918, %9810)
node %9848 : bv<11> = A[28:18]
node %9847 : bv<11> = ACIN[28:18]
node %9849 : bv<11> = ite(A_INPUT_BIN, %9847, %9848)
node %9844 : bv<11> = A2_reg[28:18]
node %9850 : bv<11> = ite(%248, %9844, %9849)
node %9851 : bv<11> = ite(_procmux_629_CMP0, %9850, 11'x000)
node %9852 : bv<11> = ite(_procmux_630_CMP0, %9726, %9851)
node %2745 : bv<2> = concat(1'b0, %2681)
node %2746 : bv<3> = concat(%2685, %2745)
node %2747 : bv<4> = concat(1'b0, %2746)
node %2748 : bv<5> = concat(%2689, %2747)
node %2749 : bv<6> = concat(1'b0, %2748)
node %2750 : bv<7> = concat(%2693, %2749)
node %9879 : bv<9> = concat(2'b10, %2750)
node %9862 : bv<9> = U_DATA_reg[44:36]
node %9880 : bv<9> = ite(MREG_BIN, %9862, %9879)
node %9881 : bv<9> = ite(%5401, %9880, 9'x100)
node %9882 : bv<10> = concat(%5413, %9881)
node %9883 : bv<11> = concat(%5413, %9882)
node %9884 : bv<11> = ite(_procmux_631_CMP0, %9883, %9852)
node %9888 : bv<11> = ite(_procmux_632_CMP0, 11'x000, %9884)
node %9889 : bv<11> = and(%9888, %9832)
node %9904 : bv<11> = ite(_procmux_624_CMP0, %9806, 11'x000)
node %9905 : bv<11> = ite(_procmux_625_CMP0, 11'x7ff, %9904)
node %5638 : bv<2> = concat(%5574, 1'b0)
node %5639 : bv<3> = concat(1'b0, %5638)
node %5640 : bv<4> = concat(%5578, %5639)
node %5641 : bv<5> = concat(1'b0, %5640)
node %5642 : bv<6> = concat(%5582, %5641)
node %5643 : bv<7> = concat(1'b0, %5642)
node %5644 : bv<8> = concat(%5586, %5643)
node %9930 : bv<9> = concat(%8259, %5644)
node %9911 : bv<9> = V_DATA_reg[44:36]
node %9931 : bv<9> = ite(MREG_BIN, %9911, %9930)
node %9932 : bv<9> = ite(%5401, %9931, 9'x100)
node %9933 : bv<11> = concat(2'b00, %9932)
node %9934 : bv<11> = ite(_procmux_626_CMP0, %9933, %9905)
node %9935 : bv<11> = ite(_procmux_627_CMP0, 11'x000, %9934)
node %9936 : bv<11> = and(%9832, %9935)
node %9938 : bv<11> = and(%9888, %9935)
node %9939 : bv<11> = or(%9938, %9936)
node %9940 : bv<11> = or(%9939, %9889)
node %9941 : bv<11> = ite(%8278, 11'x000, %9940)
node %11560 : bv<12> = concat(%9941, %9707)
node %11576 : bv<12> = ite(_procmux_624_CMP0, %11550, 12'x000)
node %11577 : bv<12> = ite(_procmux_625_CMP0, 12'xfff, %11576)
node %11579 : bv<12> = concat(3'b000, %9932)
node %11580 : bv<12> = ite(_procmux_626_CMP0, %11579, %11577)
node %11581 : bv<12> = ite(_procmux_627_CMP0, 12'x000, %11580)
node %11600 : bv<12> = A[29:18]
node %11599 : bv<12> = ACIN[29:18]
node %11601 : bv<12> = ite(A_INPUT_BIN, %11599, %11600)
node %11596 : bv<12> = A2_reg[29:18]
node %11602 : bv<12> = ite(%248, %11596, %11601)
node %11603 : bv<12> = ite(_procmux_629_CMP0, %11602, 12'x000)
node %11604 : bv<12> = ite(_procmux_630_CMP0, %11540, %11603)
node %11606 : bv<12> = concat(%5413, %9883)
node %11607 : bv<12> = ite(_procmux_631_CMP0, %11606, %11604)
node %11611 : bv<12> = ite(_procmux_632_CMP0, 12'x000, %11607)
node %11632 : bv<12> = concat(P_FDBK_47_in, %9769)
node %11633 : bv<12> = ite(_procmux_616_CMP0, %11632, 12'x000)
node %11635 : bv<12> = concat(%171, %9801)
node %11636 : bv<12> = ite(_procmux_617_CMP0, %11635, %11633)
node %11637 : bv<12> = ite(_procmux_618_CMP0, %11540, %11636)
node %11638 : bv<12> = ite(_procmux_619_CMP0, %11550, %11637)
node %11639 : bv<12> = ite(_procmux_620_CMP0, %11540, %11638)
node %11617 : bv<12> = PCIN[47:36]
node %11640 : bv<12> = ite(_procmux_621_CMP0, %11617, %11639)
node %11641 : bv<12> = ite(_procmux_622_CMP0, 12'x000, %11640)
node %11643 : bv<12> = xor(%1919, %11641)
node %11644 : bv<12> = xor(%11643, %11611)
node %11645 : bv<12> = xor(%11644, %11581)
node %11650 : bv<12> = and(%11611, %11643)
node %11655 : bv<12> = and(%11643, %11581)
node %11657 : bv<12> = and(%11611, %11581)
node %11658 : bv<12> = or(%11657, %11655)
node %11659 : bv<12> = or(%11658, %11650)
node %11660 : bv<12> = ite(%9951, %11659, %11645)
node %11661 : bv<12> = xor(%11660, %11560)
node %11662 : bv<12> = xor(%11661, %11554)
node %11768 : bv<1> = and(_procmux_634_CMP0, %9603)
node %11764 : bv<1> = RND[35]
node %11769 : bv<1> = ite(_procmux_635_CMP0, %11764, %11768)
node %11770 : bv<1> = ite(_procmux_636_CMP0, %9561, %11769)
node %11771 : bv<1> = and(%10710, %11770)
node %11779 : bv<1> = ite(%9951, %9705, %11778)
node %11780 : bv<1> = and(%11779, %11771)
node %11863 : bv<1> = and(%11862, %11830)
node %11889 : bv<1> = and(%11830, %11888)
node %11891 : bv<1> = and(%11862, %11888)
node %11892 : bv<1> = or(%11891, %11889)
node %11893 : bv<1> = or(%11892, %11863)
node %11894 : bv<1> = and(%8787, %11893)
node %11895 : bv<1> = and(%11771, %11894)
node %11897 : bv<1> = and(%11779, %11894)
node %11898 : bv<1> = or(%11897, %11895)
node %11899 : bv<1> = or(%11898, %11780)
node co36_lsb : bv<1> = and(%8537, %11899)
node %12075 : bv<11> = ite(_procmux_634_CMP0, %9806, 11'x000)
node %12076 : bv<11> = RND[46:36]
node %12077 : bv<11> = ite(_procmux_635_CMP0, %12076, %12075)
node %12078 : bv<11> = ite(_procmux_636_CMP0, %9726, %12077)
node %12079 : bv<11> = ite(_procmux_637_CMP0, 11'x000, %12078)
node %12132 : bv<11> = xor(%9832, %9888)
node %12133 : bv<11> = xor(%12132, %9935)
node %12143 : bv<11> = ite(%9951, %9940, %12133)
node %12144 : bv<11> = and(%12143, %12079)
node %12180 : bv<10> = ite(_procmux_616_CMP0, %9768, 10'x000)
node %12181 : bv<10> = ite(_procmux_617_CMP0, %9800, %12180)
node %12182 : bv<10> = P_FDBK_in[45:36]
node %12183 : bv<10> = ite(_procmux_618_CMP0, %12182, %12181)
node %12187 : bv<10> = C[45:36]
node %12188 : bv<10> = C_reg[45:36]
node %12189 : bv<10> = ite(CREG_BIN, %12188, %12187)
node %12190 : bv<10> = ite(_procmux_619_CMP0, %12189, %12183)
node %12191 : bv<10> = ite(_procmux_620_CMP0, %12182, %12190)
node %12192 : bv<10> = PCIN[45:36]
node %12193 : bv<10> = ite(_procmux_621_CMP0, %12192, %12191)
node %12194 : bv<10> = ite(_procmux_622_CMP0, 10'x000, %12193)
node %12195 : bv<10> = xor(%1917, %12194)
node %12211 : bv<10> = A[27:18]
node %12212 : bv<10> = ACIN[27:18]
node %12213 : bv<10> = ite(A_INPUT_BIN, %12212, %12211)
node %12214 : bv<10> = A2_reg[27:18]
node %12215 : bv<10> = ite(%248, %12214, %12213)
node %12216 : bv<10> = ite(_procmux_629_CMP0, %12215, 10'x000)
node %12217 : bv<10> = ite(_procmux_630_CMP0, %12182, %12216)
node %12218 : bv<10> = ite(_procmux_631_CMP0, %9882, %12217)
node %12219 : bv<10> = ite(_procmux_632_CMP0, 10'x000, %12218)
node %12220 : bv<10> = and(%12219, %12195)
node %12234 : bv<10> = ite(_procmux_624_CMP0, %12189, 10'x000)
node %12235 : bv<10> = ite(_procmux_625_CMP0, 10'x3ff, %12234)
node %12238 : bv<10> = concat(1'b0, %9932)
node %12239 : bv<10> = ite(_procmux_626_CMP0, %12238, %12235)
node %12240 : bv<10> = ite(_procmux_627_CMP0, 10'x000, %12239)
node %12241 : bv<10> = and(%12195, %12240)
node %12243 : bv<10> = and(%12219, %12240)
node %12244 : bv<10> = or(%12243, %12241)
node %12245 : bv<10> = or(%12244, %12220)
node %12246 : bv<10> = ite(%8278, 10'x000, %12245)
node %12247 : bv<11> = concat(%12246, %9707)
node %12248 : bv<11> = and(%12079, %12247)
node %12250 : bv<11> = and(%12143, %12247)
node %12251 : bv<11> = or(%12250, %12248)
node %12252 : bv<11> = or(%12251, %12144)
node %12253 : bv<12> = concat(%12252, co36_lsb)
node %12254 : bv<12> = add(%12253, %11662)
node %12255 : bv<12> = add(%12254, %12048)
node %12256 : bv<48> = concat(%12255, %12042)
node %12261 : bv<1> = IS_ALUMODE_INVERTED[1]
node %12260 : bv<1> = ALUMODE[1]
node %12262 : bv<1> = xor(%12260, %12261)
node %12257 : bv<1> = ALUMODE_reg[1]
node %12263 : bv<1> = ite(ALUMODEREG_BIN, %12257, %12262)
node %12264 : bv<2> = concat(%12263, %12263)
node %12265 : bv<3> = concat(%12263, %12264)
node %12266 : bv<4> = concat(%12263, %12265)
node %12267 : bv<5> = concat(%12263, %12266)
node %12268 : bv<6> = concat(%12263, %12267)
node %12269 : bv<7> = concat(%12263, %12268)
node %12270 : bv<8> = concat(%12263, %12269)
node %12271 : bv<9> = concat(%12263, %12270)
node %12272 : bv<10> = concat(%12263, %12271)
node %12273 : bv<11> = concat(%12263, %12272)
node %12274 : bv<12> = concat(%12263, %12273)
node %12275 : bv<13> = concat(%12263, %12274)
node %12276 : bv<14> = concat(%12263, %12275)
node %12277 : bv<15> = concat(%12263, %12276)
node %12278 : bv<16> = concat(%12263, %12277)
node %12279 : bv<17> = concat(%12263, %12278)
node %12280 : bv<18> = concat(%12263, %12279)
node %12281 : bv<19> = concat(%12263, %12280)
node %12282 : bv<20> = concat(%12263, %12281)
node %12283 : bv<21> = concat(%12263, %12282)
node %12284 : bv<22> = concat(%12263, %12283)
node %12285 : bv<23> = concat(%12263, %12284)
node %12286 : bv<24> = concat(%12263, %12285)
node %12287 : bv<25> = concat(%12263, %12286)
node %12288 : bv<26> = concat(%12263, %12287)
node %12289 : bv<27> = concat(%12263, %12288)
node %12290 : bv<28> = concat(%12263, %12289)
node %12291 : bv<29> = concat(%12263, %12290)
node %12292 : bv<30> = concat(%12263, %12291)
node %12293 : bv<31> = concat(%12263, %12292)
node %12294 : bv<32> = concat(%12263, %12293)
node %12295 : bv<33> = concat(%12263, %12294)
node %12296 : bv<34> = concat(%12263, %12295)
node %12297 : bv<35> = concat(%12263, %12296)
node %12298 : bv<36> = concat(%12263, %12297)
node %12299 : bv<37> = concat(%12263, %12298)
node %12300 : bv<38> = concat(%12263, %12299)
node %12301 : bv<39> = concat(%12263, %12300)
node %12302 : bv<40> = concat(%12263, %12301)
node %12303 : bv<41> = concat(%12263, %12302)
node %12304 : bv<42> = concat(%12263, %12303)
node %12305 : bv<43> = concat(%12263, %12304)
node %12306 : bv<44> = concat(%12263, %12305)
node %12307 : bv<45> = concat(%12263, %12306)
node %12308 : bv<46> = concat(%12263, %12307)
node %12309 : bv<47> = concat(%12263, %12308)
node %12310 : bv<48> = concat(%12263, %12309)
node ALU_OUT_in : bv<48> = xor(%12310, %12256)
node %12318 : bv<1> = eq(SEL_PATTERN, 5'b10001)
node %12326 : bv<1> = eq(SEL_PATTERN, 5'b01001)
node %12331 : bv<1> = not(%12326)
node SEL_PATTERN_BIN : bv<1> = and(%12331, %12318)
node %12336 : bv<1> = not(SEL_PATTERN_BIN)
node the_pattern : bv<48> = ite(%12336, PATTERN, C_DATA_in)
node %12338 : bv<48> = xor(the_pattern, ALU_OUT_in)
node %12420 : bv<48> = or(%12338, the_mask)
node pdetb_o : bv<1> = eq(%12420, 48'xffffffffffff)
node PATTERNBDETECT : bv<1> = ite(PREG_BIN, pdetb_o_reg1, pdetb_o)
node %12339 : bv<48> = not(%12338)
node %12340 : bv<48> = or(%12339, the_mask)
node pdet_o : bv<1> = eq(%12340, 48'xffffffffffff)
node pdet_o_mux : bv<1> = ite(PREG_BIN, pdet_o_reg1, pdet_o)
node %18748 : bv<1> = or(pdet_o_mux, PATTERNBDETECT)
output UNDERFLOW : bv<1> = and(USE_PATTERN_DETECT_BIN, and(%18748, ite(PREG_BIN, pdetb_o_reg2, pdetb_o)))
output PCOUT : bv<48> = ite(PREG_BIN, P_FDBK_in, ALU_OUT_in)
node overflow_data : bv<1> = ite(PREG_BIN, pdet_o_reg2, pdet_o)
output OVERFLOW : bv<1> = and(USE_PATTERN_DETECT_BIN, and(%18748, overflow_data))
node %11533 : bv<14> = concat(13'x0000, intc3)
node %11725 : bv<1> = and(%11724, %11699)
node %11746 : bv<1> = and(%11699, %11745)
node %11748 : bv<1> = and(%11724, %11745)
node %11749 : bv<1> = or(%11748, %11746)
node %11750 : bv<1> = or(%11749, %11725)
node %11751 : bv<1> = and(%8787, %11750)
node %11752 : bv<13> = concat(%11751, %11662)
node %11753 : bv<14> = concat(1'b0, %11752)
node %11905 : bv<12> = and(%11660, %11554)
node %11910 : bv<12> = and(%11554, %11560)
node %11912 : bv<12> = and(%11660, %11560)
node %11913 : bv<12> = or(%11912, %11910)
node %11914 : bv<12> = or(%11913, %11905)
node %11915 : bv<13> = concat(%11914, co36_lsb)
node %11916 : bv<14> = concat(1'b0, %11915)
node %11917 : bv<14> = add(%11916, %11753)
node s3 : bv<14> = add(%11917, %11533)
node MULTSIGN_ALU_in : bv<1> = s3[13]
output MULTSIGNOUT : bv<1> = ite(PREG_BIN, MULTSIGN_ALU_reg, MULTSIGN_ALU_in)
node %12428 : bv<1> = xor(%10854, %10440)
node %12429 : bv<1> = xor(%12428, %8788)
node ALUMODE10_in : bv<1> = and(%1908, %12263)
node cout0 : bv<1> = xor(ALUMODE10_in, %12429)
node %12436 : bv<2> = IS_ALUMODE_INVERTED[3:2]
node %12435 : bv<2> = ALUMODE[3:2]
node %12437 : bv<2> = xor(%12435, %12436)
node %12432 : bv<2> = ALUMODE_reg[3:2]
node %12438 : bv<2> = ite(ALUMODEREG_BIN, %12432, %12437)
node %12439 : bv<1> = eq(%12438, 2'b00)
node %12440 : bv<1> = not(%12439)
node %12445 : bv<4> = IS_OPMODE_INVERTED[3:0]
node %12444 : bv<4> = OPMODE[3:0]
node %12446 : bv<4> = xor(%12444, %12445)
node %12441 : bv<4> = OPMODE_reg[3:0]
node %12447 : bv<4> = ite(OPMODEREG_BIN, %12441, %12446)
node %12448 : bv<1> = eq(%12447, 4'b0101)
node mult_or_logic : bv<1> = or(%12448, %12440)
node %12450 : bv<1> = not(mult_or_logic)
node cout_0 : bv<1> = and(%12450, cout0)
node %12452 : bv<1> = and(%8536, cout_0)
node %12453 : bv<1> = xor(%11374, %11017)
node %12454 : bv<1> = xor(%12453, %9286)
node cout1 : bv<1> = xor(ALUMODE10_in, %12454)
node cout_1 : bv<1> = and(%12450, cout1)
node %12457 : bv<1> = and(%5412, cout_1)
node %12458 : bv<2> = concat(%12457, %12452)
node %12459 : bv<1> = xor(%11899, %11530)
node %12460 : bv<1> = xor(%12459, %9706)
node cout2 : bv<1> = xor(ALUMODE10_in, %12460)
node cout_2 : bv<1> = and(%12450, cout2)
node %12463 : bv<1> = and(%8536, cout_2)
node %12464 : bv<3> = concat(%12463, %12458)
node %12465 : bv<1> = s3[12]
node cout3 : bv<1> = xor(ALUMODE10_in, %12465)
node COUT_in : bv<4> = concat(cout3, %12464)
output CARRYOUT : bv<4> = ite(PREG_BIN, COUT_reg, COUT_in)
output CARRYCASCOUT : bv<1> = ite(PREG_BIN, CCOUT_in, xor(ALUMODE10_in, cout3))
output BCOUT : bv<18> = ite(eq(BCASCREG[1:0], BREG_BIN), B2_DATA, B1_DATA_out)
node _procmux_576 : bv<30> = ite(A_INPUT_BIN, ACIN, A)
output ACOUT : bv<30> = ite(eq(ACASCREG[1:0], AREG_BIN), ite(%248, A2_reg, _procmux_576), A1_reg)
node %1032 : bv<1> = and(CEP, PREG_BIN)
node auto_reset_pri : bv<1> = or(not(and(not(eq(AUTORESET_PRIORITY, 5'b00110)), eq(AUTORESET_PRIORITY, 5'b10000))), CEP)
node AUTORESET_PATDET_BIN : bv<2> = ite(eq(AUTORESET_PATDET, 5'b00011), 2'b00, ite(eq(AUTORESET_PATDET, 5'b00100), 2'b01, ite(eq(AUTORESET_PATDET, 5'b00101), 2'b10, 2'b00)))
node %12415 : bv<1> = or(xor(RSTP, IS_RSTP_INVERTED), ite(eq(AUTORESET_PATDET_BIN, 2'b01), and(auto_reset_pri, pdet_o_mux), and(eq(AUTORESET_PATDET_BIN, 2'b10), and(and(auto_reset_pri, overflow_data), not(pdet_o_mux)))))
node RSTCTRL_in : bv<1> = xor(RSTCTRL, IS_RSTCTRL_INVERTED)
node RSTB_in : bv<1> = xor(RSTB, IS_RSTB_INVERTED)
node %1051 : bv<1> = or(xor(RSTA, IS_RSTA_INVERTED), %247)
node RSTD_in : bv<1> = xor(RSTD, IS_RSTD_INVERTED)
node %18713 : bv<1> = or(xor(RSTM, IS_RSTM_INVERTED), %5410)
node %12426 : bv<1> = not(xor(RSTALLCARRYIN, IS_RSTALLCARRYIN_INVERTED))
node %12416 : bv<1> = not(%12415)
state ALUMODE_reg : bv<4>
  [next] ite(xor(RSTALUMODE, IS_RSTALUMODE_INVERTED), 4'b0000, ite(CEALUMODE, xor(ALUMODE, IS_ALUMODE_INVERTED), ALUMODE_reg))
state P_FDBK_in : bv<48>
  [next] ite(%12415, 48'x000000000000, ite(%1032, ALU_OUT_in, P_FDBK_in))
state OPMODE_reg : bv<9>
  [next] ite(RSTCTRL_in, 9'x000, ite(CECTRL, xor(OPMODE, IS_OPMODE_INVERTED), OPMODE_reg))
state C_reg : bv<48>
  [next] ite(or(xor(RSTC, IS_RSTC_INVERTED), not(CREG_BIN)), 48'x000000000000, ite(CEC, C, C_reg))
state B2_reg : bv<18>
  [next] ite(RSTB_in, 18'x00000, ite(CEB2, ite(eq(BREG_BIN, 2'b10), B1_DATA_out, _procmux_557), B2_reg))
state A2_reg : bv<30>
  [next] ite(%1051, 30'x00000000, ite(CEA2, ite(eq(AREG_BIN, 2'b10), A1_reg, _procmux_576), A2_reg))
state D_DATA_reg : bv<27>
  [next] ite(or(RSTD_in, not(DREG_INT)), 27'x0000000, ite(CED, D, D_DATA_reg))
state INMODE_reg : bv<5>
  [next] ite(or(xor(RSTINMODE, IS_RSTINMODE_INVERTED), not(INMODEREG_BIN)), 5'b00000, ite(CEINMODE, xor(INMODE, IS_INMODE_INVERTED), INMODE_reg))
state A1_reg : bv<30>
  [next] ite(%1051, 30'x00000000, ite(CEA1, _procmux_576, A1_reg))
state B1_DATA_out : bv<18>
  [next] ite(or(RSTB_in, %233), 18'x00000, ite(CEB1, _procmux_557, B1_DATA_out))
state AD_DATA_reg : bv<27>
  [next] ite(RSTD_in, 27'x0000000, ite(CEAD, AD_in, AD_DATA_reg))
state U_DATA_reg : bv<45>
  [next] ite(%18713, 45'x000000000000, ite(CEM, concat(2'b10, concat(%2693, concat(1'b0, concat(%2689, concat(1'b0, concat(%2685, concat(1'b0, concat(%2681, concat(1'b0, concat(%2677, concat(1'b0, concat(%2673, concat(1'b0, concat(%2669, concat(1'b0, concat(%2665, concat(1'b0, concat(%2661, concat(1'b0, concat(%2657, concat(1'b0, concat(%2653, concat(1'b0, concat(%2649, concat(1'b0, concat(%2645, concat(1'b0, concat(%2641, concat(1'b0, concat(%2637, concat(1'b0, concat(%2633, %5329)))))))))))))))))))))))))))))))), U_DATA_reg))
state V_DATA_reg : bv<45>
  [next] ite(%18713, 45'x000000000000, ite(CEM, concat(%8259, concat(%5586, concat(1'b0, concat(%5582, concat(1'b0, concat(%5578, concat(1'b0, concat(%5574, concat(1'b0, concat(%5570, concat(1'b0, concat(%5566, concat(1'b0, concat(%5562, concat(1'b0, concat(%5558, concat(1'b0, concat(%5554, concat(1'b0, concat(%5550, concat(1'b0, concat(%5546, concat(1'b0, concat(%5542, concat(1'b0, concat(%5538, concat(1'b0, concat(%5534, concat(1'b0, concat(%5530, concat(1'b0, concat(%5526, concat(1'b0, %8222))))))))))))))))))))))))))))))))), V_DATA_reg))
state XOR_MX_reg : bv<8>
  [next] ite(%12415, 8'b00000000, ite(%1032, XOR_MX_in, XOR_MX_reg))
state CARRYINSEL_reg : bv<3>
  [next] ite(RSTCTRL_in, 3'b000, ite(CECTRL, CARRYINSEL, CARRYINSEL_reg))
state qmultcarryin : bv<1>
  [next] and(%12426, ite(CEM, c_mult, qmultcarryin))
state ALUMODE10_reg : bv<1>
  [next] and(%12416, ite(%1032, ALUMODE10_in, ALUMODE10_reg))
state COUT_reg : bv<4>
  [next] ite(%12415, 4'b0000, ite(%1032, COUT_in, COUT_reg))
state CARRYIN_reg : bv<1>
  [next] and(%12426, ite(CECARRYIN, CARRYIN_in, CARRYIN_reg))
state pdet_o_reg1 : bv<1>
  [next] and(%12416, ite(%1032, pdet_o, pdet_o_reg1))
state pdetb_o_reg1 : bv<1>
  [next] and(%12416, ite(%1032, pdetb_o, pdetb_o_reg1))
state pdetb_o_reg2 : bv<1>
  [next] and(%12416, ite(%1032, pdetb_o_reg1, pdetb_o_reg2))
state pdet_o_reg2 : bv<1>
  [next] and(%12416, ite(%1032, pdet_o_reg1, pdet_o_reg2))
state MULTSIGN_ALU_reg : bv<1>
  [next] and(%12416, ite(%1032, MULTSIGN_ALU_in, MULTSIGN_ALU_reg))
