# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Project-specific ignores
# Temporary directories and files
# NOTE: Do NOT add test_*.py patterns here as they would exclude legitimate test files in tests/
tmp/
temp/
*.tmp
*.temp

# Configuration files that might contain sensitive data
config.json
secrets.json
.secrets
*.key
*.pem
*.p12
*.pfx

# AWS credentials and config
.aws/
aws-credentials.json

# Amazon Q CLI configuration (for testing)
.amazonq/

# Backup files
*.bak
*.backup
*~

# Log files
*.log
logs/

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/

# Build artifacts
build/
dist/
*.egg-info/

# Documentation build
docs/build/
docs/_build/

# Example and test output files
example_*.py
test_output/
output/

# Temporary test directories
/tmp*/
/temp*/

# IDE and editor files
*.swp
*.swo
*~
.vimrc
.vim/

# OS generated files
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db

# Package manager files
package-lock.json
yarn.lock

# Local development files
.local/
local/
dev/
development/

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Profiling data
*.prof

# Memory dumps
*.dmp

# Core dumps
core.*

# Application specific
# AI Configurator specific ignores
ai_configurator.log
configurator.log
installation.log

# Test configuration directories
test_config/
test_profiles/
test_contexts/
test_hooks/

# Backup configurations
backup_*/
backups/
*.backup

# Generated documentation
api_docs/
generated_docs/

# Performance test results
benchmark_results/
performance_logs/

# Integration test artifacts
integration_test_*/
e2e_test_*/

# Local configuration overrides
local_config.yaml
local_settings.py
override_config.json

# Development scripts
dev_*.py
debug_*.py
scratch_*.py

# Temporary migration files
migration_*.json
migration_*.yaml
temp_migration/

# Lock files
*.lock

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Terraform (if using for infrastructure)
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig
kube-config

# Monitoring and observability
*.trace
*.perf
monitoring_data/

# Security scanning results
security_scan_results/
vulnerability_reports/

# Dependency check results
dependency-check-report.*

# Code quality reports
quality_reports/
sonar-project.properties

# Local environment files
.env.local
.env.development
.env.test
.env.production

# Temporary Python files
*.pyc.bak
*.pyo.bak

# Coverage reports in different formats
coverage.json
coverage.lcov
.nyc_output/

# Linting cache
.eslintcache
.pylintrc.local

# Type checking cache
.mypy_cache/
.pytype/
.pyre/

# Profiling output
*.prof
*.pstats

# Memory profiling
*.mprof
mprofile_*.dat

# Debugging files
debug.log
debug_*.log
trace.log

# Application logs
app.log
application.log
error.log
access.log

# Temporary directories created by tests
test_temp_*/
pytest_temp_*/
unittest_temp_*/

# Generated test data
test_data_generated/
mock_data/
fixture_data/

# Performance benchmarks
benchmarks/
perf_results/

# Documentation drafts
docs/drafts/
*.draft.md

# Release artifacts
releases/
artifacts/
packages/

# Deployment files
deploy/
deployment/
k8s/
helm/

# CI/CD artifacts
.github/workflows/local_*
.gitlab-ci.local.yml
jenkins/local_*

# Local scripts
local_*.sh
local_*.py
dev_*.sh

# Experimental code
experimental/
experiments/
playground/
sandbox/

# Archive files
*.zip
*.tar.gz
*.tar.bz2
*.tar.xz
*.rar
*.7z

# Compiled documentation
*.pdf
*.epub
*.mobi

# Generated API documentation
api/
swagger-ui/
redoc/

# Local database files
local.db
dev.db
test.db

# Configuration templates filled with real data
config_filled.yaml
settings_filled.json

# Encrypted files
*.gpg
*.asc
*.encrypted

# Certificate files
*.crt
*.cert
*.ca-bundle

# SSH keys
id_rsa*
id_ed25519*
known_hosts

# GPG keys
*.gpg
*.asc
pubring.gpg
secring.gpg

# Local overrides for any configuration
*_local.*
*_override.*
*_custom.*

# Editor backup files
*~
*.orig
*.rej

# Patch files
*.patch
*.diff

# Temporary files from various tools
.tmp/
.temp/
tmp.*
temp.*

# OS-specific network files
.netrwhist

# Vim swap files
.*.swp
.*.swo

# Emacs backup files
*~
\#*\#
.\#*

# Sublime Text
*.sublime-workspace
*.sublime-project

# Atom
.atom/

# Local history (JetBrains IDEs)
.history/

# User-specific files (JetBrains IDEs)
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files (JetBrains IDEs)
.idea/**/contentModel.xml

# Sensitive or high-churn files (JetBrains IDEs)
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle (if using)
.gradle/
build/
gradle-app.setting
!gradle-wrapper.jar
!gradle-wrapper.properties

# Maven (if using)
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
.mvn/wrapper/maven-wrapper.jar

# SBT (if using Scala)
.bsp/
dist/*
target/
lib_managed/
src_managed/
project/boot/
project/plugins/project/
.history
.cache
.lib/

# Local configuration for development
.dev/
.development/
dev-config/
development-config/.ai-configurator/
*.pyc
__pycache__/
