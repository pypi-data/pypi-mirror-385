Metadata-Version: 2.4
Name: abagentsdk
Version: 0.0.7
Summary: The fastest way to build AI agents using Google Gemini
Home-page: https://github.com/ABZAgent/abzagentsdk
Author: Abu Bakar
License: MIT
Project-URL: Homepage, https://github.com/ABZAgent/abzagentsdk
Project-URL: Issues, https://github.com/ABZAgent/abzagentsdk/issues
Project-URL: Documentation, https://abzagent.vercel.app
Keywords: agents,gemini,google generative ai,sdk,llm,tool calling
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: google-generativeai>=0.7.0
Requires-Dist: pydantic>=2.6.0
Requires-Dist: rich>=13.7.0
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: tzdata>=2024.1; platform_system == "Windows"
Requires-Dist: typing-extensions>=4.12.0; python_version < "3.11"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# ================================
# üöÄ ABZ Agent SDK Quick Start Guide
# ================================

# 1Ô∏è‚É£ Install ABZ Agent SDK
pip install abagentsdk
# or
uv add abagentsdk

# 2Ô∏è‚É£ Create a .env file and add your keys
echo "GEMINI_API_KEY=your_gemini_key_here" >> .env
echo "TAVILY_API_KEY=your_tavily_key_here" >> .env

# 3Ô∏è‚É£ Create a new Python file (app.py)
# ------------------------------------
from dotenv import load_dotenv
load_dotenv()
import os
from abagentsdk import Agent, Memory, function_tool
from tavily import TavilyClient

# Load API keys
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
TAVILY_API_KEY = os.getenv("TAVILY_API_KEY")

# Initialize Tavily client
tavily = TavilyClient(api_key=TAVILY_API_KEY)

# Define a Tavily search tool
@function_tool
def tavily_search(query: str) -> str:
    """Search the web using Tavily."""
    result = tavily.search(query)
    return str(result)

# Create an Agent
agent = Agent(
    name="Research Agent",
    instructions="You are a helpful researcher. Use tavily_search to find information.",
    model="gemini-2.0-flash",
    api_key=GEMINI_API_KEY,
    tools=[tavily_search],
    memory=Memory(),
)

# Run the Agent in a chat loop
while True:
    user_input = input("You: ")
    if user_input.lower() in ["exit", "quit"]:
        break
    response = agent.run(user_input)
    print("Agent:", response.content)

# 4Ô∏è‚É£ Run your agent
python app.py

# ‚úÖ Example
# You: Search for BMW 7 Series
# Agent: The BMW 7 Series is a luxury sedan lineup introduced in 1977, featuring advanced comfort and performance technologies.
