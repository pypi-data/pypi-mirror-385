name: Publish to PyPI (Semver)

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (skip actual publish)'
        required: false
        default: false
        type: boolean

jobs:
  bump-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine toml

    - name: Bump version
      id: version
      run: |
        python - << 'EOF'
        import toml
        import sys
        import os

        with open('pyproject.toml', 'r') as f:
            data = toml.load(f)

        current = data['project']['version']
        major, minor, patch = map(int, current.split('.'))

        version_type = "${{ github.event.inputs.version_type }}"
        if version_type == 'major':
            major += 1
            minor = 0
            patch = 0
        elif version_type == 'minor':
            minor += 1
            patch = 0
        else:
            patch += 1

        new_version = f"{major}.{minor}.{patch}"

        data['project']['version'] = new_version
        with open('pyproject.toml', 'w') as f:
            toml.dump(data, f)

        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            print(f"version={new_version}", file=f)

        print(f"Bumped from {current} to {new_version}")
        EOF

    - name: Update uv.lock
      run: |
        pip install uv
        uv lock

    - name: Commit version bump
      run: |
        git config --local user.email "${{ github.actor }}@users.noreply.github.com"
        git config --local user.name "${{ github.actor }}"
        git add pyproject.toml uv.lock
        git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"

    - name: Create tag
      run: |
        git tag v${{ steps.version.outputs.version }}

    - name: Push changes
      run: |
        git push origin main
        git push origin v${{ steps.version.outputs.version }}

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      if: ${{ github.event.inputs.dry_run == 'false' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ## Version ${{ steps.version.outputs.version }}

          **Type:** ${{ github.event.inputs.version_type }} release

          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false