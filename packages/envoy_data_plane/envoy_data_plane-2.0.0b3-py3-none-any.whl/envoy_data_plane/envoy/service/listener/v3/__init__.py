# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/service/listener/v3/lds.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "LdsDummy",
    "ListenerDiscoveryServiceStub",
)

from collections.abc import Iterable, Iterator
from dataclasses import dataclass

import betterproto2
import grpc

from .....message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class LdsDummy(betterproto2.Message):
    """
    [#not-implemented-hide:] Not configuration. Workaround c++ protobuf issue with importing
    services: https://github.com/google/protobuf/issues/4221 and protoxform to upgrade the file.
    """

    pass


default_message_pool.register_message("envoy.service.listener.v3", "LdsDummy", LdsDummy)


class ListenerDiscoveryServiceStub:
    """
    [#protodoc-title: Listener]
    Listener :ref:`configuration overview <config_listeners>`

    The Envoy instance initiates an RPC at startup to discover a list of
    listeners. Updates are delivered via streaming from the LDS server and
    consist of a complete update of all listeners. Existing connections will be
    allowed to drain from listeners that are no longer present.
    """

    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def delta_listeners(
        self, messages: "Iterable[__discovery__v3__.DeltaDiscoveryRequest]"
    ) -> "Iterator[__discovery__v3__.DeltaDiscoveryResponse]":
        yield from self._channel.stream_stream(
            "/envoy.service.listener.v3.ListenerDiscoveryService/DeltaListeners",
            __discovery__v3__.DeltaDiscoveryRequest.SerializeToString,
            __discovery__v3__.DeltaDiscoveryResponse.FromString,
        )(iter(messages))

    def stream_listeners(
        self, messages: "Iterable[__discovery__v3__.DiscoveryRequest]"
    ) -> "Iterator[__discovery__v3__.DiscoveryResponse]":
        yield from self._channel.stream_stream(
            "/envoy.service.listener.v3.ListenerDiscoveryService/StreamListeners",
            __discovery__v3__.DiscoveryRequest.SerializeToString,
            __discovery__v3__.DiscoveryResponse.FromString,
        )(iter(messages))

    def fetch_listeners(
        self, message: "__discovery__v3__.DiscoveryRequest"
    ) -> "__discovery__v3__.DiscoveryResponse":
        return self._channel.unary_unary(
            "/envoy.service.listener.v3.ListenerDiscoveryService/FetchListeners",
            __discovery__v3__.DiscoveryRequest.SerializeToString,
            __discovery__v3__.DiscoveryResponse.FromString,
        )(message)


from ...discovery import v3 as __discovery__v3__
