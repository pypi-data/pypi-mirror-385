# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/service/runtime/v3/rtds.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "RtdsDummy",
    "Runtime",
    "RuntimeDiscoveryServiceStub",
)

from collections.abc import Iterable, Iterator
from dataclasses import dataclass

import betterproto2
import grpc

from .....message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class RtdsDummy(betterproto2.Message):
    """
    [#not-implemented-hide:] Not configuration. Workaround c++ protobuf issue with importing
    services: https://github.com/google/protobuf/issues/4221
    """

    pass


default_message_pool.register_message(
    "envoy.service.runtime.v3", "RtdsDummy", RtdsDummy
)


@dataclass(eq=False, repr=False)
class Runtime(betterproto2.Message):
    """
    RTDS resource type. This describes a layer in the runtime virtual filesystem.
    """

    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Runtime resource name. This makes the Runtime a self-describing xDS
    resource.
    """

    layer: "____google__protobuf__.Struct | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("envoy.service.runtime.v3", "Runtime", Runtime)


class RuntimeDiscoveryServiceStub:
    """
    [#protodoc-title: Runtime discovery service (RTDS)]
    RTDS :ref:`configuration overview <config_runtime_rtds>`

    Discovery service for Runtime resources.
    """

    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def stream_runtime(
        self, messages: "Iterable[__discovery__v3__.DiscoveryRequest]"
    ) -> "Iterator[__discovery__v3__.DiscoveryResponse]":
        yield from self._channel.stream_stream(
            "/envoy.service.runtime.v3.RuntimeDiscoveryService/StreamRuntime",
            __discovery__v3__.DiscoveryRequest.SerializeToString,
            __discovery__v3__.DiscoveryResponse.FromString,
        )(iter(messages))

    def delta_runtime(
        self, messages: "Iterable[__discovery__v3__.DeltaDiscoveryRequest]"
    ) -> "Iterator[__discovery__v3__.DeltaDiscoveryResponse]":
        yield from self._channel.stream_stream(
            "/envoy.service.runtime.v3.RuntimeDiscoveryService/DeltaRuntime",
            __discovery__v3__.DeltaDiscoveryRequest.SerializeToString,
            __discovery__v3__.DeltaDiscoveryResponse.FromString,
        )(iter(messages))

    def fetch_runtime(
        self, message: "__discovery__v3__.DiscoveryRequest"
    ) -> "__discovery__v3__.DiscoveryResponse":
        return self._channel.unary_unary(
            "/envoy.service.runtime.v3.RuntimeDiscoveryService/FetchRuntime",
            __discovery__v3__.DiscoveryRequest.SerializeToString,
            __discovery__v3__.DiscoveryResponse.FromString,
        )(message)


from .....google import protobuf as ____google__protobuf__
from ...discovery import v3 as __discovery__v3__
