name: Tests and Publish

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  tests:
    name: pytests (${{ matrix.os }} - ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: ["ubuntu", "windows"]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13'  ]
    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          miniforge-version: latest
          miniforge-variant: Miniforge3

      - name: Run tests
        run: |
          conda activate test
          pip install .
          cd tests
          pytest -vs --log-cli-level=debug -m "not remote"

  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip build twine

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install typing-extensions
          pip install --upgrade setuptools wheel twine
          pip install --upgrade pkginfo
          pip install -U packaging
          twine upload --skip-existing dist/*
