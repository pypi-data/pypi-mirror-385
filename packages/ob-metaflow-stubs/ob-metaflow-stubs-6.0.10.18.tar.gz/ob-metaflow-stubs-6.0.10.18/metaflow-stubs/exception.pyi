######################################################################################################
#                                 Auto-generated Metaflow stub file                                  #
# MF version: 2.18.12.1+obcheckpoint(0.2.8);ob(v1)                                                   #
# Generated on 2025-10-20T19:13:33.188669                                                            #
######################################################################################################

from __future__ import annotations

import metaflow
import typing
if typing.TYPE_CHECKING:
    import metaflow.exception


METAFLOW_EXIT_DISALLOW_RETRY: int

METAFLOW_EXIT_ALLOW_RETRY: int

class MetaflowExceptionWrapper(Exception, metaclass=type):
    def __init__(self, exc = None):
        ...
    def __reduce__(self):
        ...
    def __getstate__(self):
        ...
    def __setstate__(self, state):
        ...
    def __repr__(self):
        ...
    def __str__(self):
        ...
    ...

class MetaflowException(Exception, metaclass=type):
    def __init__(self, msg = '', lineno = None, source_file = None):
        ...
    def __str__(self):
        ...
    ...

class ParameterFieldFailed(MetaflowException, metaclass=type):
    def __init__(self, name, field):
        ...
    ...

class ParameterFieldTypeMismatch(MetaflowException, metaclass=type):
    def __init__(self, msg):
        ...
    ...

class ExternalCommandFailed(MetaflowException, metaclass=type):
    def __init__(self, msg):
        ...
    ...

class MetaflowNotFound(MetaflowException, metaclass=type):
    ...

class MetaflowNamespaceMismatch(MetaflowException, metaclass=type):
    def __init__(self, namespace):
        ...
    ...

class MetaflowInvalidPathspec(MetaflowException, metaclass=type):
    def __init__(self, msg):
        ...
    ...

class MetaflowInternalError(MetaflowException, metaclass=type):
    ...

class MetaflowTaggingError(MetaflowException, metaclass=type):
    ...

class MetaflowUnknownUser(MetaflowException, metaclass=type):
    def __init__(self):
        ...
    ...

class InvalidDecoratorAttribute(MetaflowException, metaclass=type):
    def __init__(self, deconame, attr, defaults):
        ...
    ...

class CommandException(MetaflowException, metaclass=type):
    ...

class MetaflowDataMissing(MetaflowException, metaclass=type):
    ...

class UnhandledInMergeArtifactsException(MetaflowException, metaclass=type):
    def __init__(self, msg, unhandled):
        ...
    ...

class MissingInMergeArtifactsException(MetaflowException, metaclass=type):
    def __init__(self, msg, unhandled):
        ...
    ...

