######################################################################################################
#                                 Auto-generated Metaflow stub file                                  #
# MF version: 2.18.13.1+obcheckpoint(0.2.8);ob(v1)                                                   #
# Generated on 2025-10-21T09:01:27.292071                                                            #
######################################################################################################

from __future__ import annotations

import threading
import typing
if typing.TYPE_CHECKING:
    import metaflow.mf_extensions.outerbounds.plugins.card_utilities.async_cards
    import threading

from .....metaflow_current import current as current

class InfoCollectorThread(threading.Thread, metaclass=type):
    def __init__(self, interval = 1, file_name = None, sqlite_fetch_func = None):
        ...
    def read(self):
        ...
    def has_errored(self):
        ...
    def get_error(self):
        ...
    def run(self):
        ...
    def stop(self):
        ...
    ...

class CardRefresher(object, metaclass=type):
    def on_startup(self, current_card):
        ...
    def on_error(self, current_card, error_message):
        ...
    def on_update(self, current_card, data_object):
        ...
    def sqlite_fetch_func(self, conn):
        ...
    ...

class CardUpdaterThread(threading.Thread, metaclass=type):
    def __init__(self, card_refresher: CardRefresher, interval = 1, file_name = None, collector_thread: InfoCollectorThread = None):
        ...
    def run(self):
        ...
    def stop(self):
        ...
    ...

class AsyncPeriodicRefresher(object, metaclass=type):
    def __init__(self, card_referesher: CardRefresher, updater_interval = 1, collector_interval = 1, file_name = None):
        ...
    def start(self):
        ...
    def stop(self):
        ...
    ...

