"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.tools.filetransfer.v1.file_transfer_service_pb2
import grpc
import typing

class FileTransferServiceStub:
    """
    File transfer service interfaces.
    """
    def __init__(self, channel: grpc.Channel) -> None: ...
    DownloadFile: grpc.StreamStreamMultiCallable[
        ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.DownloadFileRequest,
        ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.DownloadFileResponse] = ...
    """Downloads a file from the server"""

    UploadFile: grpc.StreamStreamMultiCallable[
        ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.UploadFileRequest,
        ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.UploadFileResponse] = ...
    """Uploads a file to the server"""


class FileTransferServiceServicer(metaclass=abc.ABCMeta):
    """
    File transfer service interfaces.
    """
    @abc.abstractmethod
    def DownloadFile(self,
        request: typing.Iterator[ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.DownloadFileRequest],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.DownloadFileResponse]:
        """Downloads a file from the server"""
        pass

    @abc.abstractmethod
    def UploadFile(self,
        request: typing.Iterator[ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.UploadFileRequest],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.tools.filetransfer.v1.file_transfer_service_pb2.UploadFileResponse]:
        """Uploads a file to the server"""
        pass


def add_FileTransferServiceServicer_to_server(servicer: FileTransferServiceServicer, server: grpc.Server) -> None: ...
