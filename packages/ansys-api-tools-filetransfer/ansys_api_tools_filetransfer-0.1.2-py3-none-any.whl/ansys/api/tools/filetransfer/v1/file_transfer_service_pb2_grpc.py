# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.tools.filetransfer.v1 import file_transfer_service_pb2 as ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2


class FileTransferServiceStub(object):
    """
    File transfer service interfaces.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DownloadFile = channel.stream_stream(
                '/ansys.api.tools.filetransfer.v1.FileTransferService/DownloadFile',
                request_serializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.DownloadFileResponse.FromString,
                )
        self.UploadFile = channel.stream_stream(
                '/ansys.api.tools.filetransfer.v1.FileTransferService/UploadFile',
                request_serializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.UploadFileResponse.FromString,
                )


class FileTransferServiceServicer(object):
    """
    File transfer service interfaces.

    """

    def DownloadFile(self, request_iterator, context):
        """Downloads a file from the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request_iterator, context):
        """Uploads a file to the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileTransferServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DownloadFile': grpc.stream_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.DownloadFileRequest.FromString,
                    response_serializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.DownloadFileResponse.SerializeToString,
            ),
            'UploadFile': grpc.stream_stream_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.UploadFileRequest.FromString,
                    response_serializer=ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.UploadFileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.tools.filetransfer.v1.FileTransferService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileTransferService(object):
    """
    File transfer service interfaces.

    """

    @staticmethod
    def DownloadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ansys.api.tools.filetransfer.v1.FileTransferService/DownloadFile',
            ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.DownloadFileRequest.SerializeToString,
            ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.DownloadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ansys.api.tools.filetransfer.v1.FileTransferService/UploadFile',
            ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.UploadFileRequest.SerializeToString,
            ansys_dot_api_dot_tools_dot_filetransfer_dot_v1_dot_file__transfer__service__pb2.UploadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
