from dataclasses import dataclass

@dataclass
class RBIGConfig:
    """RBIG model configuration.

    Args:
        uniformizer (str): type of uniformizer
        bins (Union[int, str]): histogram estimation
        alpha (float): regularization on the histogram
        bound_ext (float): tolerance factor on the histogram domain
        eps (float): epsilon on the domain to consider [ep, 1- eps] for the Inverse Gaussian CDF
        rotation (str): type of rotation to use in the flow
        zero_tolerance (int): minimum number of transformations in the flow
        max_layers (int): maximum number of transformations in the flow
        random_state (Optional[int]): random state for the different operators
        max_iter (int): maximum number of iterations for the rotation operator
        domain_hint (Optional[List[float]]): bounds on the marginal domains
    """
    uniformizer: str = ...
    bins: int | str = ...
    alpha: float = ...
    bound_ext: float = ...
    eps: float = ...
    rotation: str = ...
    zero_tolerance: int = ...
    max_layers: int = ...
    random_state: int | None = ...
    max_iter: int = ...
    domain_hint: list[float] | None = ...
    def __init__(self, uniformizer=..., bins=..., alpha=..., bound_ext=..., eps=..., rotation=..., zero_tolerance=..., max_layers=..., random_state=..., max_iter=..., domain_hint=...) -> None: ...
