from _typeshed import Incomplete
from sklearn.base import BaseEstimator, TransformerMixin
from ydata.__serializer import SerializerMixin

class BaseOperator(BaseEstimator, TransformerMixin, SerializerMixin):
    def __init__(self) -> None: ...
    @property
    def input_dtypes(self): ...
    @property
    def output_dtypes(self): ...
    def fit(self, X, input_dtypes: Incomplete | None = None) -> None: ...
    def fit_transform(self, X, input_dtypes: Incomplete | None = None) -> None: ...
    def transform(self, X) -> None: ...
    def inverse_transform(self, X) -> None: ...

class Preprocessor(BaseOperator):
    def __init__(self, steps) -> None: ...
    @property
    def pipeline(self): ...
    def get_step(self, name: str): ...
    def output_dtypes(self, step: int): ...
    def input_dtypes(self, step: int): ...
    def fit(self, X, input_dtypes: Incomplete | None = None): ...
    def transform(self, X): ...
    def fit_transform(self, X, input_dtypes: Incomplete | None = None, **fit_params): ...
    def inverse_transform(self, X): ...
