from dataclasses import dataclass
from typing import Any, Callable
from ydata.preprocessors.methods.anonymization import AnonymizerType

@dataclass
class AnonymizerConfig:
    type: AnonymizerType | str
    cols: list[str]
    params: dict[str, Any] = ...
    locale: str = ...
    def from_dict(key: str, config: dict | str | int | AnonymizerType | Callable | list, default_locale: str = 'en', validate: bool = True) -> AnonymizerConfig: ...
    def __init__(self, type, cols, params=..., locale=...) -> None: ...
