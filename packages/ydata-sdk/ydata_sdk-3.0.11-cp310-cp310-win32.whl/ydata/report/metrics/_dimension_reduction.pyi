from pandas import DataFrame as pdDataFrame
from ydata.report.metrics import MetricType
from ydata.report.metrics.base_metric import BaseMetric

def compute_umap(df_real: pdDataFrame, df_synth: pdDataFrame): ...
def compute_tsne(df_real: pdDataFrame, df_synth: pdDataFrame, n_components: int = 2):
    """Compute TSNE embedding for real and synth dataset."""
def compute_pca(df_real: pdDataFrame, df_synth: pdDataFrame, n_components: int = 2): ...
def get_umap_plots(mapper_real, mapper_synth): ...
def get_embedding_plot(real_embedded, synth_embedded, title: str = ''):
    """Get embeddings plots."""

class DimensionReduction(BaseMetric):
    def __init__(self, formatter=...) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def type(self) -> MetricType: ...

def get_heatmap(df, title: str = ''):
    """Get seabort heatmap."""
def compute_corr(df): ...
def get_notebook_heatmaps(df_dict: dict, title: str = 'Correlation matrices comparision'): ...
def get_notebook_embeddings(df_dict: dict, title: str = 'Datasets embeddings - PCA'): ...
def get_corr_heatmap(df):
    """Get correlation heatmap."""
