from _typeshed import Incomplete
from sklearn.base import BaseEstimator, TransformerMixin
from ydata.preprocessors.preprocess_methods import IdentityTransformer, IntegerTransformer

class TimeSeriesIdentity(BaseEstimator, TransformerMixin):
    def fit(self, X): ...
    def transform(self, X, y: Incomplete | None = None): ...
    def inverse_transform(self, X): ...

class TimeSeriesOutlierDetector(BaseEstimator, TransformerMixin):
    outlier_frac: Incomplete
    def __init__(self, *, outlier_frac: float = 0.01) -> None: ...
    model: Incomplete
    def fit(self, X): ...
    def transform(self, X, y: Incomplete | None = None): ...
    def inverse_transform(self, X): ...

class TimeSeriesDetrend(BaseEstimator, TransformerMixin):
    cols_to_detrend: Incomplete
    trends: Incomplete
    def __init__(self, cols_to_detrend) -> None: ...
    def fit(self, X): ...
    def fit_column(self, X): ...
    def transform(self, X, y: Incomplete | None = None): ...
    def inverse_transform(self, X): ...

class TimeSeriesIntegerTransformer(IntegerTransformer):
    def transform(self, X, y: Incomplete | None = None): ...
    def inverse_transform(self, X): ...

class TimeSeriesIdentityTransformer(IdentityTransformer):
    def transform(self, X, y: Incomplete | None = None): ...
    def inverse_transform(self, X): ...

class LambertWTransformer(BaseEstimator, TransformerMixin):
    delta: Incomplete
    def __init__(self, delta: float = 0.6) -> None: ...
    def fit(self, X, y: Incomplete | None = None): ...
    def transform(self, X): ...
    def inverse_transform(self, X): ...
