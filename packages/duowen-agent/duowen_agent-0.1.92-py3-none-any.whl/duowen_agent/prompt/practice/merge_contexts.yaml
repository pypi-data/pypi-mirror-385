prompt_type: General

instruction:
  format: str
  value: "根据对话转录文本，构建一个新的问题。\n  \n分析对话转录文本，识别主题切换的关键点，并选择与构建新问题相关的对话内容，确保保留与主题紧密相关的部分。利用筛选后的对话内容生成逻辑连贯、语义一致的新问题，确保新问题涵盖所有关键信息且不遗漏原始对话的重要细节。\n\
    \n## 具体要求\n\n- **理解任务目标**：\n1. 识别对话中主题切换的关键点。\n2. 筛选与生成新问题紧密相关的对话内容。\n3. 构建能够总结筛选内容的高质量问题。\n\
    \n- **保留用户内容**：忠实保留用户提供的指令，不进行不必要的改动。\n- **推理先于结论**：在新问题生成前，首先明确筛选过程及理由，再构建新问题。\n\
    - **输出清晰简洁**：去除冗余说明，仅输出分析结果和新问题。\n- **格式化**：提供结构化的输出，避免信息混乱。"

step:
  format: str
  value: "1. **主题切换分析**：\n - 检查对话转录文本，定位对话中话题的显著转变点。\n - 记录与新问题构建相关的关键对话内容。\n\n2.\
    \ **筛选相关内容**：\n - 去除与主题无关的内容。\n - 保留必要的上下文信息以确保新问题的语义完整性。\n\n3. **构建新问题**：\n -\
    \ 根据筛选的内容，生成逻辑清晰、语义连贯的新问题。\n - 确保问题能够独立理解，无需依赖原始对话内容。"

output_format:
  format: dict
  value:
    $defs:
      AnalysisResult:
        properties:
          filtered_content:
            description: 经过筛选后与新问题相关的内容
            title: Filtered Content
            type: string
          theme_switch_points:
            description: 对话中的主题切换点，通常是一些关键的对话片段
            items:
              type: string
            title: Theme Switch Points
            type: array
        required:
        - theme_switch_points
        - filtered_content
        title: AnalysisResult
        type: object
    properties:
      analysis_result:
        $ref: '#/$defs/AnalysisResult'
        description: 分析结果，包含主题切换点和筛选内容
      new_question:
        description: 基于筛选内容生成的逻辑连贯的新问题
        title: New Question
        type: string
    required:
    - analysis_result
    - new_question
    title: AnalysisOutput
    type: object

sample:
  format: str
  value: "## 示例1\n  \n**输入示例**\n\n历史对话内容:\n```\nuser：我们需要讨论季度预算问题。\nassistant：好的，请问具体有哪些方面需要考虑？\n\
    user：除了人员成本，还要评估市场推广费用。\nassistant：明白了，这部分费用是否有上限？\n```\n\n最新消息:\n```\n用户：暂时没有明确，但希望尽可能优化。\n\
    ```\n\n**输出示例**\n\n```json\n{\n\"analysis_result\": {\n  \"theme_switch_points\"\
    : [\"用户提到市场推广费用\", \"助手询问费用是否有上限\"],\n  \"filtered_content\": \"用户提到市场推广费用需要优化，但目前没有明确上限。\"\
    \n},\n\"new_question\": \"季度预算中，市场推广费用如何在没有明确上限的情况下进行优化？\"\n}\n```\n\n## 示例2\n\
    \n**输入示例**\n\n历史对话内容:\n```\n用户：我需要一个函数来检查一个数字是否是素数。\n助手：好的，函数需要使用哪种语言编写？\n用户：用\
    \ Python 吧，而且需要返回一个布尔值。\n助手：明白了，这是一个简单的实现：\n```\n\n```python\ndef is_prime(n):\n\
    \  \"\"\"检查一个数字是否为素数\"\"\"\n  if n <= 1:\n      return False\n  for i in range(2,\
    \ int(n**0.5) + 1):\n      if n % i == 0:\n          return False\n  return True\n\
    ```\n```\n\n最新消息:\n```\n用户：代码实现得很清晰，但能否逐行解释一下这段代码的逻辑和作用？\n```\n\n**输出示例**\n\n\
    ```json\n{\n\"analysis_result\": {\n  \"theme_switch_points\": [\n    \"用户提出素数检查函数需求\"\
    ,\n    \"用户请求对输出代码的逐行逻辑进行解释\"\n  ],\n  \"filtered_content\": \"用户需要一个用 Python\
    \ 编写的函数来检查数字是否为素数，并请求对以下代码逐行解释：\n\ndef is_prime(n):\n  \"\"\"检查一个数字是否为素数\"\"\"\
    \n  if n <= 1:\n      return False\n  for i in range(2, int(n**0.5) + 1):\n  \
    \    if n % i == 0:\n          return False\n  return True\"\n},\n\"new_question\"\
    : \"如何逐行解释以下代码，使其逻辑和作用对非技术背景的用户易于理解？\n\ndef is_prime(n):\n  \"\"\"检查一个数字是否为素数\"\
    \"\"\n  if n <= 1:\n      return False\n  for i in range(2, int(n**0.5) + 1):\n\
    \      if n % i == 0:\n          return False\n  return True\",\n}\n```"

note:
  format: str
  value: '- **语义一致性**：确保生成问题的逻辑顺畅，避免信息矛盾。

    - **问题独立性**：新问题应具备完整的上下文，无需依赖原始对话理解。

    - **筛选精确性**：仅保留对问题生成具有决定性意义的对话内容。'
