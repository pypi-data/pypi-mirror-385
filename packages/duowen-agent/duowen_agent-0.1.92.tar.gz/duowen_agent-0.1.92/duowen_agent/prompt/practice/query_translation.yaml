prompt_type: General

instruction:
  format: str
  value: '此任务旨在提升大模型对用户问题的解析能力，并根据问题特性选择合适的方法（Multi-query、Decomposition、Step-back
    或 HYDE），以优化检索效率和回答质量。


    ## 任务目标

    - **理解用户意图**：全面分析用户输入的深层次意图，判断问题的措辞、复杂性和数据需求。

    - **选择优化方案**：根据用户问题特性，灵活应用 Multi-query、Decomposition、Step-back 或 HYDE 方法。

    - **提高回答质量**：优化检索逻辑，生成高效的查询方案或回答策略，确保输出准确全面。
    '

step:
  format: str
  value: "1. **解析用户问题**  \n   - 分析措辞是否专业准确。\n   - 判断问题的复杂程度，是单一问题、多层问题还是细节密集型问题。\n\
    \   - 识别知识库数据能否直接回答或需要整合多个来源。\n\n2. **选择适合的方法**  \n   - **Multi-query**：适用于需要提高覆盖率的问题。\n\
    \   - **Decomposition**：适用于包含多个层次或模块化内容的问题。\n   - **Step-back**：适用于细节过多且初始检索结果有限的问题。\n\
    \   - **HYDE**：适用于知识库数据稀缺、需要额外语义辅助的问题。\n\n3. **生成优化方案**  \n   - 根据选择的优化方法，生成检索查询或问题分解策略。\n\
    \   - 输出清晰的步骤或计划，以便后续操作和回答。"

output_format:
  format: dict
  value:
    properties:
      analysis:
        description: 对输入问题的分析结果
        title: Analysis
        type: string
      final_response:
        description: 最终的回答方式或策略
        title: Final Response
        type: string
      method:
        description: 所选方法
        enum:
          - Multi-query
          - Decomposition
          - Step-back
          - HYDE
        title: Method
        type: string
      queries:
        description: 生成的检索查询或分解问题
        items:
          type: string
        title: Queries
        type: array
      reasoning:
        description: 选择方法的逻辑推导过程
        title: Reasoning
        type: string
    required:
      - method
      - analysis
      - queries
      - reasoning
      - final_response
    title: MethodResponse
    type: object

sample:
  format: str
  value: "## **示例 1：Multi-query**  \n**输入问题**: “如何提高搜索引擎的用户体验？”  \n**输出结果**:  \n```json\n\
    {\n  \"method\": \"Multi-query\",\n  \"analysis\": \"问题措辞较为宽泛，可能导致单一检索结果不充分，需从多个角度扩展查询。\"\
    ,\n  \"queries\": [\n    \"提高搜索引擎用户体验的方法有哪些？\",\n    \"用户体验提升的关键因素是什么？\",\n  \
    \  \"如何优化搜索引擎的界面设计？\"\n  ],\n  \"reasoning\": \"通过扩展多个相似的 Query，从不同角度增加答案的全面性。\"\
    ,\n  \"final_response\": \"分别整合检索结果，最终提供完整的建议。\"\n}\n```\n\n---\n\n## **示例 2：Decomposition**\
    \  \n**输入问题**: “全面介绍机器学习的核心方法及其应用场景。”  \n**输出结果**:  \n```json\n{\n  \"method\"\
    : \"Decomposition\",\n  \"analysis\": \"输入问题涉及核心方法与应用场景两个主要部分，且每部分可能包括多个细分内容。\"\
    ,\n  \"queries\": [\n    \"机器学习的核心方法有哪些？\",\n    \"监督学习的特点和应用场景是什么？\",\n    \"\
    无监督学习的特点和应用场景是什么？\",\n    \"机器学习在金融领域的应用有哪些？\",\n    \"机器学习在医疗领域的应用有哪些？\"\n  ],\n\
    \  \"reasoning\": \"分解问题有助于结构化回答核心方法和应用场景，避免信息遗漏。\",\n  \"final_response\": \"\
    逐步回答子问题，并整合为全面的总结性答案。\"\n}\n```\n\n---\n\n## **示例 3：Step-back**  \n**输入问题**: “深度学习在图像处理中的最新进展有哪些？”\
    \  \n**输出结果**:  \n```json\n{\n  \"method\": \"Step-back\",\n  \"analysis\": \"\
    问题过于具体，直接检索可能受限，需生成更抽象的问题以补充检索结果。\",\n  \"queries\": [\n    \"深度学习的最新研究方向有哪些？\"\
    ,\n    \"深度学习在计算机视觉中的应用进展是什么？\"\n  ],\n  \"reasoning\": \"通过生成抽象问题扩大检索范围，为深入回答原始问题提供更多背景信息。\"\
    ,\n  \"final_response\": \"结合抽象问题的回答，整理出图像处理领域的最新进展。\"\n}\n```\n\n---\n\n## **示例\
    \ 4：HYDE**  \n**输入问题**: “有哪些基于量子计算的前沿算法？”  \n**输出结果**:  \n```json\n{\n  \"method\"\
    : \"HYDE\",\n  \"analysis\": \"问题涉及前沿领域，可能无法直接从知识库中检索到现成答案。\",\n  \"queries\"\
    : [\n    \"假设答案：‘量子计算的前沿算法包括量子近似优化算法和变分量子本征求解器等。’\",\n    \"基于量子计算的算法研究有哪些方向？\"\
    ,\n    \"现阶段有哪些量子计算的实际应用案例？\"\n  ],\n  \"reasoning\": \"生成假设答案可为检索提供方向，结合实际问题进行补充查询。\"\
    ,\n  \"final_response\": \"通过对假设答案和检索结果的整合，提供全面的回答。\"\n}\n```"

note:
  format: f-string
  value: '- 避免直接使用 HYDE 假设答案的内容，确保其仅用于辅助检索。

    - 对复杂问题优先分解，明确各部分需求，避免遗漏重要信息。

    - 输出格式需确保清晰、结构化，便于后续操作和回答生成。

    - {now_day_cn}'

user_input:
  format: f-string
  value: '用户输入的问题是:

    {user_input}'
