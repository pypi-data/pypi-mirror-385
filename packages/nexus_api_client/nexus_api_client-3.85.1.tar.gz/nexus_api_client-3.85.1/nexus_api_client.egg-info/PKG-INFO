Metadata-Version: 2.4
Name: nexus_api_client
Version: 3.85.1
Summary: Sonatype Nexus Repository Manager
Home-page: 
Author: Sonatype Community Maintainers
Author-email: Sonatype Community Maintainers <community@sonatype.com>
License: Apache-2.0
Project-URL: Repository, https://github.com/sonatype-nexus-community/nexus-repo-api-client
Keywords: OpenAPI,OpenAPI-Generator,Sonatype Nexus Repository Manager
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: urllib3<3.0.0,>=2.1.0
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: pydantic>=2
Requires-Dist: typing-extensions>=4.7.1
Dynamic: author
Dynamic: license-file

# nexus-api-client
This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 3.85.0-03
- Package version: 1.0.0
- Generator version: 7.16.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen
For more information, please visit [https://github.com/sonatype-nexus-community](https://github.com/sonatype-nexus-community)

## Requirements.

Python 3.9+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/sonatype-nexus-community/nexus-repo-api-client.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/sonatype-nexus-community/nexus-repo-api-client.git`)

Then import the package:
```python
import nexus_api_client
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import nexus_api_client
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import nexus_api_client
from nexus_api_client.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to http://localhost/service/rest
# See configuration.py for a list of all supported configuration parameters.
configuration = nexus_api_client.Configuration(
    host = "http://localhost/service/rest"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure HTTP basic authorization: BasicAuth
configuration = nexus_api_client.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)


# Enter a context with an instance of the API client
with nexus_api_client.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = nexus_api_client.AzureBlobStoreApi(api_client)
    body = nexus_api_client.AzureConnectionXO() # AzureConnectionXO |  (optional)

    try:
        # Verify connection using supplied Azure Blob Store settings
        api_instance.verify_connection1(body=body)
    except ApiException as e:
        print("Exception when calling AzureBlobStoreApi->verify_connection1: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *http://localhost/service/rest*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*AzureBlobStoreApi* | [**verify_connection1**](docs/AzureBlobStoreApi.md#verify_connection1) | **POST** /v1/azureblobstore/test-connection | Verify connection using supplied Azure Blob Store settings
*BlobStoreApi* | [**convert_blob_store_to_group**](docs/BlobStoreApi.md#convert_blob_store_to_group) | **POST** /v1/blobstores/group/convert/{name}/{newNameForOriginal} | Convert a blob store to a group blob store
*BlobStoreApi* | [**create_blob_store1**](docs/BlobStoreApi.md#create_blob_store1) | **POST** /v1/blobstores/azure | Create an Azure blob store
*BlobStoreApi* | [**create_blob_store2**](docs/BlobStoreApi.md#create_blob_store2) | **POST** /v1/blobstores/google | Create a Google Cloud blob store
*BlobStoreApi* | [**create_file_blob_store**](docs/BlobStoreApi.md#create_file_blob_store) | **POST** /v1/blobstores/file | Create a file blob store
*BlobStoreApi* | [**create_group_blob_store**](docs/BlobStoreApi.md#create_group_blob_store) | **POST** /v1/blobstores/group | Create a group blob store
*BlobStoreApi* | [**create_s3_blob_store**](docs/BlobStoreApi.md#create_s3_blob_store) | **POST** /v1/blobstores/s3 | Create an S3 blob store
*BlobStoreApi* | [**delete_blob_store**](docs/BlobStoreApi.md#delete_blob_store) | **DELETE** /v1/blobstores/{name} | Delete a blob store by name
*BlobStoreApi* | [**get_blob_store1**](docs/BlobStoreApi.md#get_blob_store1) | **GET** /v1/blobstores/azure/{name} | Get an Azure blob store configuration by name
*BlobStoreApi* | [**get_blob_store2**](docs/BlobStoreApi.md#get_blob_store2) | **GET** /v1/blobstores/google/{name} | Get the configuration for a Google Cloud blob store
*BlobStoreApi* | [**get_file_blob_store_configuration**](docs/BlobStoreApi.md#get_file_blob_store_configuration) | **GET** /v1/blobstores/file/{name} | Get a file blob store configuration by name
*BlobStoreApi* | [**get_group_blob_store_configuration**](docs/BlobStoreApi.md#get_group_blob_store_configuration) | **GET** /v1/blobstores/group/{name} | Get a group blob store configuration by name
*BlobStoreApi* | [**get_regions_by_project_id**](docs/BlobStoreApi.md#get_regions_by_project_id) | **GET** /v1/blobstores/google/regions/{projectId} | Get the project regions by project&#39;s id
*BlobStoreApi* | [**get_s3_blob_store**](docs/BlobStoreApi.md#get_s3_blob_store) | **GET** /v1/blobstores/s3/{name} | Get a S3 blob store configuration by name
*BlobStoreApi* | [**list_blob_stores**](docs/BlobStoreApi.md#list_blob_stores) | **GET** /v1/blobstores | List the blob stores
*BlobStoreApi* | [**quota_status**](docs/BlobStoreApi.md#quota_status) | **GET** /v1/blobstores/{name}/quota-status | Get quota status for a given blob store
*BlobStoreApi* | [**update_blob_store1**](docs/BlobStoreApi.md#update_blob_store1) | **PUT** /v1/blobstores/azure/{name} | Update an Azure blob store configuration by name
*BlobStoreApi* | [**update_blob_store2**](docs/BlobStoreApi.md#update_blob_store2) | **PUT** /v1/blobstores/google/{name} | Update a Google Cloud blob store
*BlobStoreApi* | [**update_file_blob_store**](docs/BlobStoreApi.md#update_file_blob_store) | **PUT** /v1/blobstores/file/{name} | Update a file blob store configuration by name
*BlobStoreApi* | [**update_group_blob_store**](docs/BlobStoreApi.md#update_group_blob_store) | **PUT** /v1/blobstores/group/{name} | Update a group blob store configuration by name
*BlobStoreApi* | [**update_s3_blob_store**](docs/BlobStoreApi.md#update_s3_blob_store) | **PUT** /v1/blobstores/s3/{name} | Update an S3 blob store configuration by name
*CapabilitiesApi* | [**create3**](docs/CapabilitiesApi.md#create3) | **POST** /v1/capabilities | Create a capability
*CapabilitiesApi* | [**delete4**](docs/CapabilitiesApi.md#delete4) | **DELETE** /v1/capabilities/{capabilityId} | Delete a capability
*CapabilitiesApi* | [**list**](docs/CapabilitiesApi.md#list) | **GET** /v1/capabilities | List the active capabilities
*CapabilitiesApi* | [**update3**](docs/CapabilitiesApi.md#update3) | **PUT** /v1/capabilities/{capabilityId} | Update a capability
*CleanupPoliciesApi* | [**create1**](docs/CleanupPoliciesApi.md#create1) | **POST** /v1/cleanup-policies | Create a new policy
*CleanupPoliciesApi* | [**delete_policy_by_name**](docs/CleanupPoliciesApi.md#delete_policy_by_name) | **DELETE** /v1/cleanup-policies/{name} | Delete cleanup policy
*CleanupPoliciesApi* | [**get_all**](docs/CleanupPoliciesApi.md#get_all) | **GET** /v1/cleanup-policies | Get a list of existing policies
*CleanupPoliciesApi* | [**get_cleanup_policy_by_name**](docs/CleanupPoliciesApi.md#get_cleanup_policy_by_name) | **GET** /v1/cleanup-policies/{name} | Get a policy by name
*CleanupPoliciesApi* | [**update2**](docs/CleanupPoliciesApi.md#update2) | **PUT** /v1/cleanup-policies/{policyName} | Update existing policy
*CommunityEditionEulaApi* | [**get_community_eula_status**](docs/CommunityEditionEulaApi.md#get_community_eula_status) | **GET** /v1/system/eula | Get the current Community Eula status.
*CommunityEditionEulaApi* | [**set_eula_accepted_ce**](docs/CommunityEditionEulaApi.md#set_eula_accepted_ce) | **POST** /v1/system/eula | Set the Community Eula status.
*ContentSelectorsApi* | [**create_content_selector**](docs/ContentSelectorsApi.md#create_content_selector) | **POST** /v1/security/content-selectors | Create a new content selector
*ContentSelectorsApi* | [**delete_content_selector**](docs/ContentSelectorsApi.md#delete_content_selector) | **DELETE** /v1/security/content-selectors/{name} | Delete a content selector
*ContentSelectorsApi* | [**get_content_selector**](docs/ContentSelectorsApi.md#get_content_selector) | **GET** /v1/security/content-selectors/{name} | Get a content selector by name
*ContentSelectorsApi* | [**get_content_selectors**](docs/ContentSelectorsApi.md#get_content_selectors) | **GET** /v1/security/content-selectors | List content selectors
*ContentSelectorsApi* | [**update_content_selector**](docs/ContentSelectorsApi.md#update_content_selector) | **PUT** /v1/security/content-selectors/{name} | Update a content selector
*DataStoreApi* | [**get_data_store**](docs/DataStoreApi.md#get_data_store) | **GET** /beta/data-store | Get the data store
*DataStoreApi* | [**update_data_store**](docs/DataStoreApi.md#update_data_store) | **PUT** /beta/data-store | Update the data store
*EmailApi* | [**delete_email_configuration**](docs/EmailApi.md#delete_email_configuration) | **DELETE** /v1/email | Disable and clear the email configuration
*EmailApi* | [**get_email_configuration**](docs/EmailApi.md#get_email_configuration) | **GET** /v1/email | Retrieve the current email configuration
*EmailApi* | [**set_email_configuration**](docs/EmailApi.md#set_email_configuration) | **PUT** /v1/email | Set the current email configuration
*EmailApi* | [**test_email_configuration**](docs/EmailApi.md#test_email_configuration) | **POST** /v1/email/verify | Send a test email to the email address provided in the request body
*FormatsApi* | [**get**](docs/FormatsApi.md#get) | **GET** /v1/formats/{format}/upload-specs | Get upload field requirements for the desired format
*FormatsApi* | [**get1**](docs/FormatsApi.md#get1) | **GET** /v1/formats/upload-specs | Get upload field requirements for each supported format
*InstanceConfigurationApi* | [**apply_configuration**](docs/InstanceConfigurationApi.md#apply_configuration) | **PUT** /v1/configuration | Apply instance configuration
*InstanceConfigurationApi* | [**export_configuration**](docs/InstanceConfigurationApi.md#export_configuration) | **GET** /v1/configuration | Export instance configuration
*LifecycleApi* | [**bounce**](docs/LifecycleApi.md#bounce) | **PUT** /v1/lifecycle/bounce | Bounce lifecycle phase
*LifecycleApi* | [**get_phase**](docs/LifecycleApi.md#get_phase) | **GET** /v1/lifecycle/phase | Get current lifecycle phase
*LifecycleApi* | [**set_phase**](docs/LifecycleApi.md#set_phase) | **PUT** /v1/lifecycle/phase | Move to new lifecycle phase
*MaliciousRiskOnDiskApi* | [**get_enabled_registries**](docs/MaliciousRiskOnDiskApi.md#get_enabled_registries) | **GET** /v1/malicious-risk/enabledRegistries | Get RHC Enabled registries for malicious risk scanning.
*MaliciousRiskOnDiskApi* | [**get_malicious_risk_on_disk_count**](docs/MaliciousRiskOnDiskApi.md#get_malicious_risk_on_disk_count) | **GET** /v1/malicious-risk/risk-on-disk | Get Malicious Risk On Disk Count
*ManageSonatypeHTTPSystemSettingsApi* | [**get_http_settings**](docs/ManageSonatypeHTTPSystemSettingsApi.md#get_http_settings) | **GET** /v1/http | Get HTTP system settings
*ManageSonatypeHTTPSystemSettingsApi* | [**reset_http_settings**](docs/ManageSonatypeHTTPSystemSettingsApi.md#reset_http_settings) | **DELETE** /v1/http | Reset HTTP System Settings
*ManageSonatypeHTTPSystemSettingsApi* | [**update_http_settings**](docs/ManageSonatypeHTTPSystemSettingsApi.md#update_http_settings) | **PUT** /v1/http | Update HTTP system settings
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**disable_iq**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#disable_iq) | **POST** /v1/iq/disable | Disable Sonatype Repository Firewall
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**enable_iq**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#enable_iq) | **POST** /v1/iq/enable | Enable Sonatype Repository Firewall
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**get_all_audit_status**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#get_all_audit_status) | **GET** /v1/iq/audit | List repositories audit statuses.
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**get_audit_status**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#get_audit_status) | **GET** /v1/iq/audit/{repositoryName} | Get audit status for the repository
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**get_configuration**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#get_configuration) | **GET** /v1/iq | Get Sonatype Repository Firewall configuration
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**manage_audit**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#manage_audit) | **PUT** /v1/iq/audit | Manage audit
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**update_configuration**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#update_configuration) | **PUT** /v1/iq | Update Sonatype Repository Firewall configuration
*ManageSonatypeRepositoryFirewallConfigurationApi* | [**verify_connection2**](docs/ManageSonatypeRepositoryFirewallConfigurationApi.md#verify_connection2) | **POST** /v1/iq/verify-connection | Verify Sonatype Repository Firewall connection
*MonthlyMetricsApi* | [**get_last12_months_metrics**](docs/MonthlyMetricsApi.md#get_last12_months_metrics) | **GET** /v1/monthly-metrics | Get the last 12 months of metrics.
*ProductLicensingApi* | [**get_license_status**](docs/ProductLicensingApi.md#get_license_status) | **GET** /v1/system/license | Get the current license status.
*ProductLicensingApi* | [**remove_license**](docs/ProductLicensingApi.md#remove_license) | **DELETE** /v1/system/license | Uninstall license if present.
*ProductLicensingApi* | [**set_license**](docs/ProductLicensingApi.md#set_license) | **POST** /v1/system/license | Upload a new license file.
*ReadOnlyApi* | [**force_release**](docs/ReadOnlyApi.md#force_release) | **POST** /v1/read-only/force-release | Forcibly release read-only and allow changes to the database
*ReadOnlyApi* | [**freeze**](docs/ReadOnlyApi.md#freeze) | **POST** /v1/read-only/freeze | Prevent changes to the database
*ReadOnlyApi* | [**get2**](docs/ReadOnlyApi.md#get2) | **GET** /v1/read-only | Get read-only state
*ReadOnlyApi* | [**release**](docs/ReadOnlyApi.md#release) | **POST** /v1/read-only/release | Release read-only and allow changes to the database
*ReconcilePlanApi* | [**create_reconciliation_plans**](docs/ReconcilePlanApi.md#create_reconciliation_plans) | **POST** /v1/plan | Create reconciliation plans with selected parameters
*ReconcilePlanApi* | [**delete_all_plans**](docs/ReconcilePlanApi.md#delete_all_plans) | **DELETE** /v1/plan | Delete all non executed reconciliation plans
*ReconcilePlanApi* | [**delete_plan**](docs/ReconcilePlanApi.md#delete_plan) | **DELETE** /v1/plan/{planId} | Delete a reconciliation plan based on its Id
*ReconcilePlanApi* | [**execute_reconcile_task_by_id**](docs/ReconcilePlanApi.md#execute_reconcile_task_by_id) | **PUT** /v1/plan/{planId} | Execute a reconciliation plan based on its Id
*ReconcilePlanApi* | [**execute_reconcile_tasks**](docs/ReconcilePlanApi.md#execute_reconcile_tasks) | **PUT** /v1/plan | Execute all non executed reconciliation plans
*ReconcilePlanApi* | [**get_available_plans**](docs/ReconcilePlanApi.md#get_available_plans) | **GET** /v1/plan | Get list of currently available plans
*ReconcilePlanApi* | [**get_plan_details**](docs/ReconcilePlanApi.md#get_plan_details) | **GET** /v1/plan/details | Get reconciliation plan details
*ReconcilePlanApi* | [**get_single_plan_with_details**](docs/ReconcilePlanApi.md#get_single_plan_with_details) | **GET** /v1/plan/{planId} | Get single reconciliation plan with details
*RepositoryManagementApi* | [**create_apt_hosted_repository**](docs/RepositoryManagementApi.md#create_apt_hosted_repository) | **POST** /v1/repositories/apt/hosted | Create APT hosted repository
*RepositoryManagementApi* | [**create_apt_proxy_repository**](docs/RepositoryManagementApi.md#create_apt_proxy_repository) | **POST** /v1/repositories/apt/proxy | Create APT proxy repository
*RepositoryManagementApi* | [**create_cargo_group_repository**](docs/RepositoryManagementApi.md#create_cargo_group_repository) | **POST** /v1/repositories/cargo/group | Create cargo group repository
*RepositoryManagementApi* | [**create_cargo_hosted_repository**](docs/RepositoryManagementApi.md#create_cargo_hosted_repository) | **POST** /v1/repositories/cargo/hosted | Create cargo hosted repository
*RepositoryManagementApi* | [**create_cargo_proxy_repository**](docs/RepositoryManagementApi.md#create_cargo_proxy_repository) | **POST** /v1/repositories/cargo/proxy | Create cargo proxy repository
*RepositoryManagementApi* | [**create_cocoapods_proxy_repository**](docs/RepositoryManagementApi.md#create_cocoapods_proxy_repository) | **POST** /v1/repositories/cocoapods/proxy | Create Cocoapods proxy repository
*RepositoryManagementApi* | [**create_composer_proxy_repository**](docs/RepositoryManagementApi.md#create_composer_proxy_repository) | **POST** /v1/repositories/composer/proxy | Create composer proxy repository
*RepositoryManagementApi* | [**create_conan_group_repository**](docs/RepositoryManagementApi.md#create_conan_group_repository) | **POST** /v1/repositories/conan/group | Create Conan group repository
*RepositoryManagementApi* | [**create_conan_hosted_repository**](docs/RepositoryManagementApi.md#create_conan_hosted_repository) | **POST** /v1/repositories/conan/hosted | Create Conan hosted repository
*RepositoryManagementApi* | [**create_conan_proxy_repository**](docs/RepositoryManagementApi.md#create_conan_proxy_repository) | **POST** /v1/repositories/conan/proxy | Create Conan proxy repository
*RepositoryManagementApi* | [**create_conda_proxy_repository**](docs/RepositoryManagementApi.md#create_conda_proxy_repository) | **POST** /v1/repositories/conda/proxy | Create conda proxy repository
*RepositoryManagementApi* | [**create_docker_group_repository**](docs/RepositoryManagementApi.md#create_docker_group_repository) | **POST** /v1/repositories/docker/group | Create Docker group repository
*RepositoryManagementApi* | [**create_docker_hosted_repository**](docs/RepositoryManagementApi.md#create_docker_hosted_repository) | **POST** /v1/repositories/docker/hosted | Create Docker hosted repository
*RepositoryManagementApi* | [**create_docker_proxy_repository**](docs/RepositoryManagementApi.md#create_docker_proxy_repository) | **POST** /v1/repositories/docker/proxy | Create Docker proxy repository
*RepositoryManagementApi* | [**create_gitlfs_hosted_repository**](docs/RepositoryManagementApi.md#create_gitlfs_hosted_repository) | **POST** /v1/repositories/gitlfs/hosted | Create Git LFS hosted repository
*RepositoryManagementApi* | [**create_go_group_repository**](docs/RepositoryManagementApi.md#create_go_group_repository) | **POST** /v1/repositories/go/group | Create a Go group repository
*RepositoryManagementApi* | [**create_go_proxy_repository**](docs/RepositoryManagementApi.md#create_go_proxy_repository) | **POST** /v1/repositories/go/proxy | Create a Go proxy repository
*RepositoryManagementApi* | [**create_helm_hosted_repository**](docs/RepositoryManagementApi.md#create_helm_hosted_repository) | **POST** /v1/repositories/helm/hosted | Create Helm hosted repository
*RepositoryManagementApi* | [**create_helm_proxy_repository**](docs/RepositoryManagementApi.md#create_helm_proxy_repository) | **POST** /v1/repositories/helm/proxy | Create Helm proxy repository
*RepositoryManagementApi* | [**create_huggingface_proxy_repository**](docs/RepositoryManagementApi.md#create_huggingface_proxy_repository) | **POST** /v1/repositories/huggingface/proxy | Create huggingface proxy repository
*RepositoryManagementApi* | [**create_maven_group_repository**](docs/RepositoryManagementApi.md#create_maven_group_repository) | **POST** /v1/repositories/maven/group | Create Maven group repository
*RepositoryManagementApi* | [**create_maven_hosted_repository**](docs/RepositoryManagementApi.md#create_maven_hosted_repository) | **POST** /v1/repositories/maven/hosted | Create Maven hosted repository
*RepositoryManagementApi* | [**create_maven_proxy_repository**](docs/RepositoryManagementApi.md#create_maven_proxy_repository) | **POST** /v1/repositories/maven/proxy | Create Maven proxy repository
*RepositoryManagementApi* | [**create_npm_group_repository**](docs/RepositoryManagementApi.md#create_npm_group_repository) | **POST** /v1/repositories/npm/group | Create npm group repository
*RepositoryManagementApi* | [**create_npm_hosted_repository**](docs/RepositoryManagementApi.md#create_npm_hosted_repository) | **POST** /v1/repositories/npm/hosted | Create npm hosted repository
*RepositoryManagementApi* | [**create_npm_proxy_repository**](docs/RepositoryManagementApi.md#create_npm_proxy_repository) | **POST** /v1/repositories/npm/proxy | Create npm proxy repository
*RepositoryManagementApi* | [**create_nuget_group_repository**](docs/RepositoryManagementApi.md#create_nuget_group_repository) | **POST** /v1/repositories/nuget/group | Create NuGet group repository
*RepositoryManagementApi* | [**create_nuget_hosted_repository**](docs/RepositoryManagementApi.md#create_nuget_hosted_repository) | **POST** /v1/repositories/nuget/hosted | Create NuGet hosted repository
*RepositoryManagementApi* | [**create_nuget_proxy_repository**](docs/RepositoryManagementApi.md#create_nuget_proxy_repository) | **POST** /v1/repositories/nuget/proxy | Create NuGet proxy repository
*RepositoryManagementApi* | [**create_p2_proxy_repository**](docs/RepositoryManagementApi.md#create_p2_proxy_repository) | **POST** /v1/repositories/p2/proxy | Create p2 proxy repository
*RepositoryManagementApi* | [**create_pypi_group_repository**](docs/RepositoryManagementApi.md#create_pypi_group_repository) | **POST** /v1/repositories/pypi/group | Create PyPI group repository
*RepositoryManagementApi* | [**create_pypi_hosted_repository**](docs/RepositoryManagementApi.md#create_pypi_hosted_repository) | **POST** /v1/repositories/pypi/hosted | Create PyPI hosted repository
*RepositoryManagementApi* | [**create_pypi_proxy_repository**](docs/RepositoryManagementApi.md#create_pypi_proxy_repository) | **POST** /v1/repositories/pypi/proxy | Create PyPI proxy repository
*RepositoryManagementApi* | [**create_r_group_repository**](docs/RepositoryManagementApi.md#create_r_group_repository) | **POST** /v1/repositories/r/group | Create R group repository
*RepositoryManagementApi* | [**create_r_hosted_repository**](docs/RepositoryManagementApi.md#create_r_hosted_repository) | **POST** /v1/repositories/r/hosted | Create R hosted repository
*RepositoryManagementApi* | [**create_r_proxy_repository**](docs/RepositoryManagementApi.md#create_r_proxy_repository) | **POST** /v1/repositories/r/proxy | Create R proxy repository
*RepositoryManagementApi* | [**create_raw_group_repository**](docs/RepositoryManagementApi.md#create_raw_group_repository) | **POST** /v1/repositories/raw/group | Create raw group repository
*RepositoryManagementApi* | [**create_raw_hosted_repository**](docs/RepositoryManagementApi.md#create_raw_hosted_repository) | **POST** /v1/repositories/raw/hosted | Create raw hosted repository
*RepositoryManagementApi* | [**create_raw_proxy_repository**](docs/RepositoryManagementApi.md#create_raw_proxy_repository) | **POST** /v1/repositories/raw/proxy | Create raw proxy repository
*RepositoryManagementApi* | [**create_rubygems_group_repository**](docs/RepositoryManagementApi.md#create_rubygems_group_repository) | **POST** /v1/repositories/rubygems/group | Create RubyGems group repository
*RepositoryManagementApi* | [**create_rubygems_hosted_repository**](docs/RepositoryManagementApi.md#create_rubygems_hosted_repository) | **POST** /v1/repositories/rubygems/hosted | Create RubyGems hosted repository
*RepositoryManagementApi* | [**create_rubygems_proxy_repository**](docs/RepositoryManagementApi.md#create_rubygems_proxy_repository) | **POST** /v1/repositories/rubygems/proxy | Create RubyGems proxy repository
*RepositoryManagementApi* | [**create_yum_group_repository**](docs/RepositoryManagementApi.md#create_yum_group_repository) | **POST** /v1/repositories/yum/group | Create Yum group repository
*RepositoryManagementApi* | [**create_yum_hosted_repository**](docs/RepositoryManagementApi.md#create_yum_hosted_repository) | **POST** /v1/repositories/yum/hosted | Create Yum hosted repository
*RepositoryManagementApi* | [**create_yum_proxy_repository**](docs/RepositoryManagementApi.md#create_yum_proxy_repository) | **POST** /v1/repositories/yum/proxy | Create Yum proxy repository
*RepositoryManagementApi* | [**createrepositoryname_health_check_repository**](docs/RepositoryManagementApi.md#createrepositoryname_health_check_repository) | **POST** /v1/repositories/{repositoryName}/health-check | Enable repository health check. Proxy repositories only.
*RepositoryManagementApi* | [**createrepositoryname_invalidate_cache_repository**](docs/RepositoryManagementApi.md#createrepositoryname_invalidate_cache_repository) | **POST** /v1/repositories/{repositoryName}/invalidate-cache | Invalidate repository cache. Proxy or group repositories only.
*RepositoryManagementApi* | [**createrepositoryname_rebuild_index_repository**](docs/RepositoryManagementApi.md#createrepositoryname_rebuild_index_repository) | **POST** /v1/repositories/{repositoryName}/rebuild-index | Schedule a &#39;Repair - Rebuild repository search&#39; Task. Hosted or proxy repositories only.
*RepositoryManagementApi* | [**delete_repository**](docs/RepositoryManagementApi.md#delete_repository) | **DELETE** /v1/repositories/{repositoryName} | Delete repository of any format
*RepositoryManagementApi* | [**disable_repository_health_check**](docs/RepositoryManagementApi.md#disable_repository_health_check) | **DELETE** /v1/repositories/{repositoryName}/health-check | Disable repository health check. Proxy repositories only.
*RepositoryManagementApi* | [**get_all_repositories**](docs/RepositoryManagementApi.md#get_all_repositories) | **GET** /v1/repositories | List repositories
*RepositoryManagementApi* | [**get_apt_hosted_repository**](docs/RepositoryManagementApi.md#get_apt_hosted_repository) | **GET** /v1/repositories/apt/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_apt_proxy_repository**](docs/RepositoryManagementApi.md#get_apt_proxy_repository) | **GET** /v1/repositories/apt/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_cargo_group_repository**](docs/RepositoryManagementApi.md#get_cargo_group_repository) | **GET** /v1/repositories/cargo/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_cargo_hosted_repository**](docs/RepositoryManagementApi.md#get_cargo_hosted_repository) | **GET** /v1/repositories/cargo/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_cargo_proxy_repository**](docs/RepositoryManagementApi.md#get_cargo_proxy_repository) | **GET** /v1/repositories/cargo/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_cocoapods_proxy_repository**](docs/RepositoryManagementApi.md#get_cocoapods_proxy_repository) | **GET** /v1/repositories/cocoapods/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_composer_proxy_repository**](docs/RepositoryManagementApi.md#get_composer_proxy_repository) | **GET** /v1/repositories/composer/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_conan_group_repository**](docs/RepositoryManagementApi.md#get_conan_group_repository) | **GET** /v1/repositories/conan/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_conan_hosted_repository**](docs/RepositoryManagementApi.md#get_conan_hosted_repository) | **GET** /v1/repositories/conan/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_conan_proxy_repository**](docs/RepositoryManagementApi.md#get_conan_proxy_repository) | **GET** /v1/repositories/conan/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_conda_proxy_repository**](docs/RepositoryManagementApi.md#get_conda_proxy_repository) | **GET** /v1/repositories/conda/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_docker_group_repository**](docs/RepositoryManagementApi.md#get_docker_group_repository) | **GET** /v1/repositories/docker/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_docker_hosted_repository**](docs/RepositoryManagementApi.md#get_docker_hosted_repository) | **GET** /v1/repositories/docker/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_docker_proxy_repository**](docs/RepositoryManagementApi.md#get_docker_proxy_repository) | **GET** /v1/repositories/docker/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_gitlfs_hosted_repository**](docs/RepositoryManagementApi.md#get_gitlfs_hosted_repository) | **GET** /v1/repositories/gitlfs/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_go_group_repository**](docs/RepositoryManagementApi.md#get_go_group_repository) | **GET** /v1/repositories/go/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_go_proxy_repository**](docs/RepositoryManagementApi.md#get_go_proxy_repository) | **GET** /v1/repositories/go/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_helm_hosted_repository**](docs/RepositoryManagementApi.md#get_helm_hosted_repository) | **GET** /v1/repositories/helm/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_helm_proxy_repository**](docs/RepositoryManagementApi.md#get_helm_proxy_repository) | **GET** /v1/repositories/helm/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_huggingface_proxy_repository**](docs/RepositoryManagementApi.md#get_huggingface_proxy_repository) | **GET** /v1/repositories/huggingface/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_maven_group_repository**](docs/RepositoryManagementApi.md#get_maven_group_repository) | **GET** /v1/repositories/maven/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_maven_hosted_repository**](docs/RepositoryManagementApi.md#get_maven_hosted_repository) | **GET** /v1/repositories/maven/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_maven_proxy_repository**](docs/RepositoryManagementApi.md#get_maven_proxy_repository) | **GET** /v1/repositories/maven/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_npm_group_repository**](docs/RepositoryManagementApi.md#get_npm_group_repository) | **GET** /v1/repositories/npm/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_npm_hosted_repository**](docs/RepositoryManagementApi.md#get_npm_hosted_repository) | **GET** /v1/repositories/npm/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_npm_proxy_repository**](docs/RepositoryManagementApi.md#get_npm_proxy_repository) | **GET** /v1/repositories/npm/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_nuget_group_repository**](docs/RepositoryManagementApi.md#get_nuget_group_repository) | **GET** /v1/repositories/nuget/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_nuget_hosted_repository**](docs/RepositoryManagementApi.md#get_nuget_hosted_repository) | **GET** /v1/repositories/nuget/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_nuget_proxy_repository**](docs/RepositoryManagementApi.md#get_nuget_proxy_repository) | **GET** /v1/repositories/nuget/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_p2_proxy_repository**](docs/RepositoryManagementApi.md#get_p2_proxy_repository) | **GET** /v1/repositories/p2/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_pypi_group_repository**](docs/RepositoryManagementApi.md#get_pypi_group_repository) | **GET** /v1/repositories/pypi/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_pypi_hosted_repository**](docs/RepositoryManagementApi.md#get_pypi_hosted_repository) | **GET** /v1/repositories/pypi/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_pypi_proxy_repository**](docs/RepositoryManagementApi.md#get_pypi_proxy_repository) | **GET** /v1/repositories/pypi/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_r_group_repository**](docs/RepositoryManagementApi.md#get_r_group_repository) | **GET** /v1/repositories/r/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_r_hosted_repository**](docs/RepositoryManagementApi.md#get_r_hosted_repository) | **GET** /v1/repositories/r/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_r_proxy_repository**](docs/RepositoryManagementApi.md#get_r_proxy_repository) | **GET** /v1/repositories/r/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_raw_group_repository**](docs/RepositoryManagementApi.md#get_raw_group_repository) | **GET** /v1/repositories/raw/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_raw_hosted_repository**](docs/RepositoryManagementApi.md#get_raw_hosted_repository) | **GET** /v1/repositories/raw/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_raw_proxy_repository**](docs/RepositoryManagementApi.md#get_raw_proxy_repository) | **GET** /v1/repositories/raw/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_repositories**](docs/RepositoryManagementApi.md#get_repositories) | **GET** /v1/repositorySettings | List repositories
*RepositoryManagementApi* | [**get_repository**](docs/RepositoryManagementApi.md#get_repository) | **GET** /v1/repositories/{repositoryName} | Get repository details
*RepositoryManagementApi* | [**get_rubygems_group_repository**](docs/RepositoryManagementApi.md#get_rubygems_group_repository) | **GET** /v1/repositories/rubygems/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_rubygems_hosted_repository**](docs/RepositoryManagementApi.md#get_rubygems_hosted_repository) | **GET** /v1/repositories/rubygems/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_rubygems_proxy_repository**](docs/RepositoryManagementApi.md#get_rubygems_proxy_repository) | **GET** /v1/repositories/rubygems/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_yum_group_repository**](docs/RepositoryManagementApi.md#get_yum_group_repository) | **GET** /v1/repositories/yum/group/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_yum_hosted_repository**](docs/RepositoryManagementApi.md#get_yum_hosted_repository) | **GET** /v1/repositories/yum/hosted/{repositoryName} | Get repository
*RepositoryManagementApi* | [**get_yum_proxy_repository**](docs/RepositoryManagementApi.md#get_yum_proxy_repository) | **GET** /v1/repositories/yum/proxy/{repositoryName} | Get repository
*RepositoryManagementApi* | [**update_apt_hosted_repository**](docs/RepositoryManagementApi.md#update_apt_hosted_repository) | **PUT** /v1/repositories/apt/hosted/{repositoryName} | Update APT hosted repository
*RepositoryManagementApi* | [**update_apt_proxy_repository**](docs/RepositoryManagementApi.md#update_apt_proxy_repository) | **PUT** /v1/repositories/apt/proxy/{repositoryName} | Update APT proxy repository
*RepositoryManagementApi* | [**update_cargo_group_repository**](docs/RepositoryManagementApi.md#update_cargo_group_repository) | **PUT** /v1/repositories/cargo/group/{repositoryName} | Update cargo group repository
*RepositoryManagementApi* | [**update_cargo_hosted_repository**](docs/RepositoryManagementApi.md#update_cargo_hosted_repository) | **PUT** /v1/repositories/cargo/hosted/{repositoryName} | Update cargo hosted repository
*RepositoryManagementApi* | [**update_cargo_proxy_repository**](docs/RepositoryManagementApi.md#update_cargo_proxy_repository) | **PUT** /v1/repositories/cargo/proxy/{repositoryName} | Update cargo proxy repository
*RepositoryManagementApi* | [**update_cocoapods_proxy_repository**](docs/RepositoryManagementApi.md#update_cocoapods_proxy_repository) | **PUT** /v1/repositories/cocoapods/proxy/{repositoryName} | Update Cocoapods proxy repository
*RepositoryManagementApi* | [**update_composer_proxy_repository**](docs/RepositoryManagementApi.md#update_composer_proxy_repository) | **PUT** /v1/repositories/composer/proxy/{repositoryName} | Update composer proxy repository
*RepositoryManagementApi* | [**update_conan_group_repository**](docs/RepositoryManagementApi.md#update_conan_group_repository) | **PUT** /v1/repositories/conan/group/{repositoryName} | Update Conan group repository
*RepositoryManagementApi* | [**update_conan_hosted_repository**](docs/RepositoryManagementApi.md#update_conan_hosted_repository) | **PUT** /v1/repositories/conan/hosted/{repositoryName} | Update Conan hosted repository
*RepositoryManagementApi* | [**update_conan_proxy_repository**](docs/RepositoryManagementApi.md#update_conan_proxy_repository) | **PUT** /v1/repositories/conan/proxy/{repositoryName} | Update Conan proxy repository
*RepositoryManagementApi* | [**update_conda_proxy_repository**](docs/RepositoryManagementApi.md#update_conda_proxy_repository) | **PUT** /v1/repositories/conda/proxy/{repositoryName} | Update conda proxy repository
*RepositoryManagementApi* | [**update_docker_group_repository**](docs/RepositoryManagementApi.md#update_docker_group_repository) | **PUT** /v1/repositories/docker/group/{repositoryName} | Update Docker group repository
*RepositoryManagementApi* | [**update_docker_hosted_repository**](docs/RepositoryManagementApi.md#update_docker_hosted_repository) | **PUT** /v1/repositories/docker/hosted/{repositoryName} | Update Docker hosted repository
*RepositoryManagementApi* | [**update_docker_proxy_repository**](docs/RepositoryManagementApi.md#update_docker_proxy_repository) | **PUT** /v1/repositories/docker/proxy/{repositoryName} | Update Docker proxy repository
*RepositoryManagementApi* | [**update_gitlfs_hosted_repository**](docs/RepositoryManagementApi.md#update_gitlfs_hosted_repository) | **PUT** /v1/repositories/gitlfs/hosted/{repositoryName} | Update Git LFS hosted repository
*RepositoryManagementApi* | [**update_go_group_repository**](docs/RepositoryManagementApi.md#update_go_group_repository) | **PUT** /v1/repositories/go/group/{repositoryName} | Update a Go group repository
*RepositoryManagementApi* | [**update_go_proxy_repository**](docs/RepositoryManagementApi.md#update_go_proxy_repository) | **PUT** /v1/repositories/go/proxy/{repositoryName} | Update a Go proxy repository
*RepositoryManagementApi* | [**update_helm_hosted_repository**](docs/RepositoryManagementApi.md#update_helm_hosted_repository) | **PUT** /v1/repositories/helm/hosted/{repositoryName} | Update Helm hosted repository
*RepositoryManagementApi* | [**update_helm_proxy_repository**](docs/RepositoryManagementApi.md#update_helm_proxy_repository) | **PUT** /v1/repositories/helm/proxy/{repositoryName} | Update Helm proxy repository
*RepositoryManagementApi* | [**update_huggingface_proxy_repository**](docs/RepositoryManagementApi.md#update_huggingface_proxy_repository) | **PUT** /v1/repositories/huggingface/proxy/{repositoryName} | Update huggingface proxy repository
*RepositoryManagementApi* | [**update_maven_group_repository**](docs/RepositoryManagementApi.md#update_maven_group_repository) | **PUT** /v1/repositories/maven/group/{repositoryName} | Update Maven group repository
*RepositoryManagementApi* | [**update_maven_hosted_repository**](docs/RepositoryManagementApi.md#update_maven_hosted_repository) | **PUT** /v1/repositories/maven/hosted/{repositoryName} | Update Maven hosted repository
*RepositoryManagementApi* | [**update_maven_proxy_repository**](docs/RepositoryManagementApi.md#update_maven_proxy_repository) | **PUT** /v1/repositories/maven/proxy/{repositoryName} | Update Maven proxy repository
*RepositoryManagementApi* | [**update_npm_group_repository**](docs/RepositoryManagementApi.md#update_npm_group_repository) | **PUT** /v1/repositories/npm/group/{repositoryName} | Update npm group repository
*RepositoryManagementApi* | [**update_npm_hosted_repository**](docs/RepositoryManagementApi.md#update_npm_hosted_repository) | **PUT** /v1/repositories/npm/hosted/{repositoryName} | Update npm hosted repository
*RepositoryManagementApi* | [**update_npm_proxy_repository**](docs/RepositoryManagementApi.md#update_npm_proxy_repository) | **PUT** /v1/repositories/npm/proxy/{repositoryName} | Update npm proxy repository
*RepositoryManagementApi* | [**update_nuget_group_repository**](docs/RepositoryManagementApi.md#update_nuget_group_repository) | **PUT** /v1/repositories/nuget/group/{repositoryName} | Update NuGet group repository
*RepositoryManagementApi* | [**update_nuget_hosted_repository**](docs/RepositoryManagementApi.md#update_nuget_hosted_repository) | **PUT** /v1/repositories/nuget/hosted/{repositoryName} | Update NuGet hosted repository
*RepositoryManagementApi* | [**update_nuget_proxy_repository**](docs/RepositoryManagementApi.md#update_nuget_proxy_repository) | **PUT** /v1/repositories/nuget/proxy/{repositoryName} | Update NuGet proxy repository
*RepositoryManagementApi* | [**update_p2_proxy_repository**](docs/RepositoryManagementApi.md#update_p2_proxy_repository) | **PUT** /v1/repositories/p2/proxy/{repositoryName} | Update p2 proxy repository
*RepositoryManagementApi* | [**update_pypi_group_repository**](docs/RepositoryManagementApi.md#update_pypi_group_repository) | **PUT** /v1/repositories/pypi/group/{repositoryName} | Update PyPI group repository
*RepositoryManagementApi* | [**update_pypi_hosted_repository**](docs/RepositoryManagementApi.md#update_pypi_hosted_repository) | **PUT** /v1/repositories/pypi/hosted/{repositoryName} | Update PyPI hosted repository
*RepositoryManagementApi* | [**update_pypi_proxy_repository**](docs/RepositoryManagementApi.md#update_pypi_proxy_repository) | **PUT** /v1/repositories/pypi/proxy/{repositoryName} | Update PyPI proxy repository
*RepositoryManagementApi* | [**update_r_group_repository**](docs/RepositoryManagementApi.md#update_r_group_repository) | **PUT** /v1/repositories/r/group/{repositoryName} | Update R group repository
*RepositoryManagementApi* | [**update_r_hosted_repository**](docs/RepositoryManagementApi.md#update_r_hosted_repository) | **PUT** /v1/repositories/r/hosted/{repositoryName} | Update R hosted repository
*RepositoryManagementApi* | [**update_r_proxy_repository**](docs/RepositoryManagementApi.md#update_r_proxy_repository) | **PUT** /v1/repositories/r/proxy/{repositoryName} | Update R proxy repository
*RepositoryManagementApi* | [**update_raw_group_repository**](docs/RepositoryManagementApi.md#update_raw_group_repository) | **PUT** /v1/repositories/raw/group/{repositoryName} | Update raw group repository
*RepositoryManagementApi* | [**update_raw_hosted_repository**](docs/RepositoryManagementApi.md#update_raw_hosted_repository) | **PUT** /v1/repositories/raw/hosted/{repositoryName} | Update raw hosted repository
*RepositoryManagementApi* | [**update_raw_proxy_repository**](docs/RepositoryManagementApi.md#update_raw_proxy_repository) | **PUT** /v1/repositories/raw/proxy/{repositoryName} | Update raw proxy repository
*RepositoryManagementApi* | [**update_rubygems_group_repository**](docs/RepositoryManagementApi.md#update_rubygems_group_repository) | **PUT** /v1/repositories/rubygems/group/{repositoryName} | Update RubyGems group repository
*RepositoryManagementApi* | [**update_rubygems_hosted_repository**](docs/RepositoryManagementApi.md#update_rubygems_hosted_repository) | **PUT** /v1/repositories/rubygems/hosted/{repositoryName} | Update RubyGems hosted repository
*RepositoryManagementApi* | [**update_rubygems_proxy_repository**](docs/RepositoryManagementApi.md#update_rubygems_proxy_repository) | **PUT** /v1/repositories/rubygems/proxy/{repositoryName} | Update RubyGems proxy repository
*RepositoryManagementApi* | [**update_yum_group_repository**](docs/RepositoryManagementApi.md#update_yum_group_repository) | **PUT** /v1/repositories/yum/group/{repositoryName} | Update Yum group repository
*RepositoryManagementApi* | [**update_yum_hosted_repository**](docs/RepositoryManagementApi.md#update_yum_hosted_repository) | **PUT** /v1/repositories/yum/hosted/{repositoryName} | Update Yum hosted repository
*RepositoryManagementApi* | [**update_yum_proxy_repository**](docs/RepositoryManagementApi.md#update_yum_proxy_repository) | **PUT** /v1/repositories/yum/proxy/{repositoryName} | Update Yum proxy repository
*RoutingRulesApi* | [**create_routing_rule**](docs/RoutingRulesApi.md#create_routing_rule) | **POST** /v1/routing-rules | Create a single routing rule
*RoutingRulesApi* | [**delete_routing_rule**](docs/RoutingRulesApi.md#delete_routing_rule) | **DELETE** /v1/routing-rules/{name} | Delete a single routing rule
*RoutingRulesApi* | [**get_routing_rule**](docs/RoutingRulesApi.md#get_routing_rule) | **GET** /v1/routing-rules/{name} | Get a single routing rule
*RoutingRulesApi* | [**get_routing_rules**](docs/RoutingRulesApi.md#get_routing_rules) | **GET** /v1/routing-rules | List routing rules
*RoutingRulesApi* | [**update_routing_rule**](docs/RoutingRulesApi.md#update_routing_rule) | **PUT** /v1/routing-rules/{name} | Update a single routing rule
*ScriptApi* | [**add**](docs/ScriptApi.md#add) | **POST** /v1/script | Add a new script
*ScriptApi* | [**browse**](docs/ScriptApi.md#browse) | **GET** /v1/script | List all stored scripts
*ScriptApi* | [**delete1**](docs/ScriptApi.md#delete1) | **DELETE** /v1/script/{name} | Delete stored script by name
*ScriptApi* | [**edit**](docs/ScriptApi.md#edit) | **PUT** /v1/script/{name} | Update stored script by name
*ScriptApi* | [**read**](docs/ScriptApi.md#read) | **GET** /v1/script/{name} | Read stored script by name
*ScriptApi* | [**run1**](docs/ScriptApi.md#run1) | **POST** /v1/script/{name}/run | Run stored script by name
*SearchApi* | [**search**](docs/SearchApi.md#search) | **GET** /v1/search | Search components
*SearchApi* | [**search_and_download_assets**](docs/SearchApi.md#search_and_download_assets) | **GET** /v1/search/assets/download | Search and download asset
*SearchApi* | [**search_assets**](docs/SearchApi.md#search_assets) | **GET** /v1/search/assets | Search assets
*SecurityManagementAnonymousAccessApi* | [**read1**](docs/SecurityManagementAnonymousAccessApi.md#read1) | **GET** /v1/security/anonymous | Get Anonymous Access settings
*SecurityManagementAnonymousAccessApi* | [**update1**](docs/SecurityManagementAnonymousAccessApi.md#update1) | **PUT** /v1/security/anonymous | Update Anonymous Access settings
*SecurityAtlassianCrowdApi* | [**clear_cache**](docs/SecurityAtlassianCrowdApi.md#clear_cache) | **POST** /v1/security/atlassian-crowd/clear-cache | Clear Atlassian Crowd cache
*SecurityAtlassianCrowdApi* | [**read_settings**](docs/SecurityAtlassianCrowdApi.md#read_settings) | **GET** /v1/security/atlassian-crowd | Retrieve Atlassian Crowd settings configured in Nexus Repository Manager
*SecurityAtlassianCrowdApi* | [**update_settings**](docs/SecurityAtlassianCrowdApi.md#update_settings) | **PUT** /v1/security/atlassian-crowd | Update Atlassian Crowd settings configured in Nexus Repository Manager
*SecurityAtlassianCrowdApi* | [**verify_connection**](docs/SecurityAtlassianCrowdApi.md#verify_connection) | **POST** /v1/security/atlassian-crowd/verify-connection | Verify connection using supplied Atlassian Crowd settings
*SecurityCertificatesApi* | [**add_certificate**](docs/SecurityCertificatesApi.md#add_certificate) | **POST** /v1/security/ssl/truststore | Add a certificate to the trust store.
*SecurityCertificatesApi* | [**get_trust_store_certificates**](docs/SecurityCertificatesApi.md#get_trust_store_certificates) | **GET** /v1/security/ssl/truststore | Retrieve a list of certificates added to the trust store.
*SecurityCertificatesApi* | [**remove_certificate**](docs/SecurityCertificatesApi.md#remove_certificate) | **DELETE** /v1/security/ssl/truststore/{id} | Remove a certificate in the trust store.
*SecurityCertificatesApi* | [**retrieve_certificate**](docs/SecurityCertificatesApi.md#retrieve_certificate) | **GET** /v1/security/ssl | Helper method to retrieve certificate details from a remote system.
*SecurityManagementApi* | [**get_user_sources**](docs/SecurityManagementApi.md#get_user_sources) | **GET** /v1/security/user-sources | Retrieve a list of the available user sources.
*SecurityManagementLDAPApi* | [**change_order**](docs/SecurityManagementLDAPApi.md#change_order) | **POST** /v1/security/ldap/change-order | Change LDAP server order
*SecurityManagementLDAPApi* | [**create_ldap_server**](docs/SecurityManagementLDAPApi.md#create_ldap_server) | **POST** /v1/security/ldap | Create LDAP server
*SecurityManagementLDAPApi* | [**delete_ldap_server**](docs/SecurityManagementLDAPApi.md#delete_ldap_server) | **DELETE** /v1/security/ldap/{name} | Delete LDAP server
*SecurityManagementLDAPApi* | [**get_ldap_server**](docs/SecurityManagementLDAPApi.md#get_ldap_server) | **GET** /v1/security/ldap/{name} | Get LDAP server
*SecurityManagementLDAPApi* | [**get_ldap_servers**](docs/SecurityManagementLDAPApi.md#get_ldap_servers) | **GET** /v1/security/ldap | List LDAP servers
*SecurityManagementLDAPApi* | [**update_ldap_server**](docs/SecurityManagementLDAPApi.md#update_ldap_server) | **PUT** /v1/security/ldap/{name} | Update LDAP server
*SecurityManagementSAMLApi* | [**delete_saml_configuration**](docs/SecurityManagementSAMLApi.md#delete_saml_configuration) | **DELETE** /v1/security/saml | Delete SAML configuration
*SecurityManagementSAMLApi* | [**get_metadata**](docs/SecurityManagementSAMLApi.md#get_metadata) | **GET** /v1/security/saml/metadata | Get service provider metadata XML document
*SecurityManagementSAMLApi* | [**get_public_certificate_in_pem_format**](docs/SecurityManagementSAMLApi.md#get_public_certificate_in_pem_format) | **GET** /v1/security/saml/pem | Get service provider signing or decryption certificate in PEM format
*SecurityManagementSAMLApi* | [**get_saml_configuration**](docs/SecurityManagementSAMLApi.md#get_saml_configuration) | **GET** /v1/security/saml | Get SAML configuration
*SecurityManagementSAMLApi* | [**put_saml_configuration**](docs/SecurityManagementSAMLApi.md#put_saml_configuration) | **PUT** /v1/security/saml | Create or update SAML configuration
*SecurityManagementApiKeysPrincipalsEncryptionApi* | [**re_encrypt**](docs/SecurityManagementApiKeysPrincipalsEncryptionApi.md#re_encrypt) | **PUT** /v1/apikeys/encryption/re-encrypt | Re-encrypt api keys principals using the specified configuration
*SecurityManagementPrivilegesApi* | [**create_application_privilege**](docs/SecurityManagementPrivilegesApi.md#create_application_privilege) | **POST** /v1/security/privileges/application | Create an application type privilege.
*SecurityManagementPrivilegesApi* | [**create_repository_admin_privilege**](docs/SecurityManagementPrivilegesApi.md#create_repository_admin_privilege) | **POST** /v1/security/privileges/repository-admin | Create a repository admin type privilege.
*SecurityManagementPrivilegesApi* | [**create_repository_content_selector_privilege**](docs/SecurityManagementPrivilegesApi.md#create_repository_content_selector_privilege) | **POST** /v1/security/privileges/repository-content-selector | Create a repository content selector type privilege.
*SecurityManagementPrivilegesApi* | [**create_repository_view_privilege**](docs/SecurityManagementPrivilegesApi.md#create_repository_view_privilege) | **POST** /v1/security/privileges/repository-view | Create a repository view type privilege.
*SecurityManagementPrivilegesApi* | [**create_script_privilege**](docs/SecurityManagementPrivilegesApi.md#create_script_privilege) | **POST** /v1/security/privileges/script | Create a script type privilege.
*SecurityManagementPrivilegesApi* | [**create_wildcard_privilege**](docs/SecurityManagementPrivilegesApi.md#create_wildcard_privilege) | **POST** /v1/security/privileges/wildcard | Create a wildcard type privilege.
*SecurityManagementPrivilegesApi* | [**delete_privilege**](docs/SecurityManagementPrivilegesApi.md#delete_privilege) | **DELETE** /v1/security/privileges/{privilegeName} | Delete a privilege by name.
*SecurityManagementPrivilegesApi* | [**get_all_privileges**](docs/SecurityManagementPrivilegesApi.md#get_all_privileges) | **GET** /v1/security/privileges | Retrieve a list of privileges.
*SecurityManagementPrivilegesApi* | [**get_privilege**](docs/SecurityManagementPrivilegesApi.md#get_privilege) | **GET** /v1/security/privileges/{privilegeName} | Retrieve a privilege by name.
*SecurityManagementPrivilegesApi* | [**update_application_privilege**](docs/SecurityManagementPrivilegesApi.md#update_application_privilege) | **PUT** /v1/security/privileges/application/{privilegeName} | Update an application type privilege.
*SecurityManagementPrivilegesApi* | [**update_repository_admin_privilege**](docs/SecurityManagementPrivilegesApi.md#update_repository_admin_privilege) | **PUT** /v1/security/privileges/repository-admin/{privilegeName} | Update a repository admin type privilege.
*SecurityManagementPrivilegesApi* | [**update_repository_content_selector_privilege**](docs/SecurityManagementPrivilegesApi.md#update_repository_content_selector_privilege) | **PUT** /v1/security/privileges/repository-content-selector/{privilegeName} | Update a repository content selector type privilege.
*SecurityManagementPrivilegesApi* | [**update_repository_view_privilege**](docs/SecurityManagementPrivilegesApi.md#update_repository_view_privilege) | **PUT** /v1/security/privileges/repository-view/{privilegeName} | Update a repository view type privilege.
*SecurityManagementPrivilegesApi* | [**update_script_privilege**](docs/SecurityManagementPrivilegesApi.md#update_script_privilege) | **PUT** /v1/security/privileges/script/{privilegeName} | Update a script type privilege.
*SecurityManagementPrivilegesApi* | [**update_wildcard_privilege**](docs/SecurityManagementPrivilegesApi.md#update_wildcard_privilege) | **PUT** /v1/security/privileges/wildcard/{privilegeName} | Update a wildcard type privilege.
*SecurityManagementRealmsApi* | [**get_active_realms**](docs/SecurityManagementRealmsApi.md#get_active_realms) | **GET** /v1/security/realms/active | List the active realm IDs in order
*SecurityManagementRealmsApi* | [**get_realms**](docs/SecurityManagementRealmsApi.md#get_realms) | **GET** /v1/security/realms/available | List the available realms
*SecurityManagementRealmsApi* | [**set_active_realms**](docs/SecurityManagementRealmsApi.md#set_active_realms) | **PUT** /v1/security/realms/active | Set the active security realms in the order they should be used
*SecurityManagementRolesApi* | [**create**](docs/SecurityManagementRolesApi.md#create) | **POST** /v1/security/roles | Create role
*SecurityManagementRolesApi* | [**delete**](docs/SecurityManagementRolesApi.md#delete) | **DELETE** /v1/security/roles/{id} | Delete role
*SecurityManagementRolesApi* | [**get_role**](docs/SecurityManagementRolesApi.md#get_role) | **GET** /v1/security/roles/{id} | Get role
*SecurityManagementRolesApi* | [**get_roles**](docs/SecurityManagementRolesApi.md#get_roles) | **GET** /v1/security/roles | List roles
*SecurityManagementRolesApi* | [**update**](docs/SecurityManagementRolesApi.md#update) | **PUT** /v1/security/roles/{id} | Update role
*SecurityManagementSecretsEncryptionApi* | [**re_encrypt1**](docs/SecurityManagementSecretsEncryptionApi.md#re_encrypt1) | **PUT** /v1/secrets/encryption/re-encrypt | Re-encrypt secrets using the specified key
*SecurityManagementUserTokensApi* | [**reset_all_user_tokens**](docs/SecurityManagementUserTokensApi.md#reset_all_user_tokens) | **DELETE** /v1/security/user-tokens | Invalidate all existing user tokens.
*SecurityManagementUserTokensApi* | [**service_status**](docs/SecurityManagementUserTokensApi.md#service_status) | **GET** /v1/security/user-tokens | Show if the user token capability is enabled or not
*SecurityManagementUserTokensApi* | [**set_service_status**](docs/SecurityManagementUserTokensApi.md#set_service_status) | **PUT** /v1/security/user-tokens | Enable/Disable the user token capability
*SecurityManagementUsersApi* | [**change_password**](docs/SecurityManagementUsersApi.md#change_password) | **PUT** /v1/security/users/{userId}/change-password | Change a user&#39;s password.
*SecurityManagementUsersApi* | [**create_user**](docs/SecurityManagementUsersApi.md#create_user) | **POST** /v1/security/users | Create a new user in the default source.
*SecurityManagementUsersApi* | [**delete_user**](docs/SecurityManagementUsersApi.md#delete_user) | **DELETE** /v1/security/users/{userId} | Delete a user.
*SecurityManagementUsersApi* | [**get_users**](docs/SecurityManagementUsersApi.md#get_users) | **GET** /v1/security/users | Retrieve a list of users.
*SecurityManagementUsersApi* | [**reset**](docs/SecurityManagementUsersApi.md#reset) | **DELETE** /v1/security/users/{userId}/{realm}/user-token-reset | Reset the user token for the given user.
*SecurityManagementUsersApi* | [**update_user**](docs/SecurityManagementUsersApi.md#update_user) | **PUT** /v1/security/users/{userId} | Update an existing user.
*StagingApi* | [**delete2**](docs/StagingApi.md#delete2) | **POST** /v1/staging/delete | Delete components
*StagingApi* | [**move**](docs/StagingApi.md#move) | **POST** /v1/staging/move/{destination} | Move components
*StatusApi* | [**get_cluster_system_status_checks**](docs/StatusApi.md#get_cluster_system_status_checks) | **GET** /beta/status/check/cluster | Health check endpoint that returns the results of the system status checks
*StatusApi* | [**get_node_system_status_checks**](docs/StatusApi.md#get_node_system_status_checks) | **GET** /beta/status/check/{nodeId} | Health check endpoint that returns the results of the system status checks of specified Node
*StatusApi* | [**get_system_status_checks**](docs/StatusApi.md#get_system_status_checks) | **GET** /v1/status/check | Health check endpoint that returns the results of the system status checks
*StatusApi* | [**is_available**](docs/StatusApi.md#is_available) | **GET** /v1/status | Health check endpoint that validates server can respond to read requests
*StatusApi* | [**is_writable**](docs/StatusApi.md#is_writable) | **GET** /v1/status/writable | Health check endpoint that validates server can respond to read and write requests
*SupportApi* | [**supportzip**](docs/SupportApi.md#supportzip) | **POST** /v1/support/supportzip | Creates and downloads a support zip
*SupportApi* | [**supportzippath**](docs/SupportApi.md#supportzippath) | **POST** /v1/support/supportzippath | Creates a support zip and returns the path
*SystemNodesApi* | [**clear**](docs/SystemNodesApi.md#clear) | **DELETE** /v1/system/node | Reset the ID for this node. Takes effect after restart and should only be used when cloning an instance
*SystemNodesApi* | [**get_node_id**](docs/SystemNodesApi.md#get_node_id) | **GET** /v1/system/node | Get information about this node
*SystemNodesApi* | [**get_system_information**](docs/SystemNodesApi.md#get_system_information) | **GET** /beta/system/information | Get information about all nodes
*TagsApi* | [**associate**](docs/TagsApi.md#associate) | **POST** /v1/tags/associate/{tagName} | Associate components with a tag
*TagsApi* | [**create2**](docs/TagsApi.md#create2) | **POST** /v1/tags | Create a tag
*TagsApi* | [**delete3**](docs/TagsApi.md#delete3) | **DELETE** /v1/tags/{name} | Delete a tag
*TagsApi* | [**disassociate**](docs/TagsApi.md#disassociate) | **DELETE** /v1/tags/associate/{tagName} | Disassociate components from a tag
*TagsApi* | [**get3**](docs/TagsApi.md#get3) | **GET** /v1/tags/{name} | Get a tag
*TagsApi* | [**get_tags**](docs/TagsApi.md#get_tags) | **GET** /v1/tags | List tags
*TagsApi* | [**replace**](docs/TagsApi.md#replace) | **PUT** /v1/tags/{name} | Update a tags attributes
*TasksApi* | [**create_task**](docs/TasksApi.md#create_task) | **POST** /v1/tasks | Create task
*TasksApi* | [**delete_task_by_id**](docs/TasksApi.md#delete_task_by_id) | **DELETE** /v1/tasks/{id} | Delete task by id
*TasksApi* | [**get_task_by_id**](docs/TasksApi.md#get_task_by_id) | **GET** /v1/tasks/{id} | Get a single task by id
*TasksApi* | [**get_task_template**](docs/TasksApi.md#get_task_template) | **GET** /v1/tasks/templates/{typeId} | Get task template by type. This is the base to create new tasks
*TasksApi* | [**get_task_templates**](docs/TasksApi.md#get_task_templates) | **GET** /v1/tasks/templates | List tasks of template tasks. This is the base to create new tasks
*TasksApi* | [**get_tasks**](docs/TasksApi.md#get_tasks) | **GET** /v1/tasks | List tasks
*TasksApi* | [**run**](docs/TasksApi.md#run) | **POST** /v1/tasks/{id}/run | Run task
*TasksApi* | [**stop**](docs/TasksApi.md#stop) | **POST** /v1/tasks/{id}/stop | Stop task
*TasksApi* | [**update_task**](docs/TasksApi.md#update_task) | **PUT** /v1/tasks/{taskId} | Update an existing task
*AssetsApi* | [**delete_asset**](docs/AssetsApi.md#delete_asset) | **DELETE** /v1/assets/{id} | Delete a single asset
*AssetsApi* | [**get_asset_by_id**](docs/AssetsApi.md#get_asset_by_id) | **GET** /v1/assets/{id} | Get a single asset
*AssetsApi* | [**get_assets**](docs/AssetsApi.md#get_assets) | **GET** /v1/assets | List assets
*ComponentsApi* | [**delete_component**](docs/ComponentsApi.md#delete_component) | **DELETE** /v1/components/{id} | Delete a single component
*ComponentsApi* | [**get_component_by_id**](docs/ComponentsApi.md#get_component_by_id) | **GET** /v1/components/{id} | Get a single component
*ComponentsApi* | [**get_components**](docs/ComponentsApi.md#get_components) | **GET** /v1/components | List components
*ComponentsApi* | [**upload_component**](docs/ComponentsApi.md#upload_component) | **POST** /v1/components | Upload a single component


## Documentation For Models

 - [AbstractApiRepository](docs/AbstractApiRepository.md)
 - [AnonymousAccessSettingsXO](docs/AnonymousAccessSettingsXO.md)
 - [ApiCertificate](docs/ApiCertificate.md)
 - [ApiCreateUser](docs/ApiCreateUser.md)
 - [ApiEmailConfiguration](docs/ApiEmailConfiguration.md)
 - [ApiEmailValidation](docs/ApiEmailValidation.md)
 - [ApiKeysReEncryptionRequestApiXO](docs/ApiKeysReEncryptionRequestApiXO.md)
 - [ApiLicenseDetailsXO](docs/ApiLicenseDetailsXO.md)
 - [ApiPrivilege](docs/ApiPrivilege.md)
 - [ApiPrivilegeApplicationRequest](docs/ApiPrivilegeApplicationRequest.md)
 - [ApiPrivilegeRepositoryAdminRequest](docs/ApiPrivilegeRepositoryAdminRequest.md)
 - [ApiPrivilegeRepositoryContentSelectorRequest](docs/ApiPrivilegeRepositoryContentSelectorRequest.md)
 - [ApiPrivilegeRepositoryViewRequest](docs/ApiPrivilegeRepositoryViewRequest.md)
 - [ApiPrivilegeRequest](docs/ApiPrivilegeRequest.md)
 - [ApiPrivilegeScriptRequest](docs/ApiPrivilegeScriptRequest.md)
 - [ApiPrivilegeWildcardRequest](docs/ApiPrivilegeWildcardRequest.md)
 - [ApiUser](docs/ApiUser.md)
 - [ApiUserSource](docs/ApiUserSource.md)
 - [ApplyStatusXO](docs/ApplyStatusXO.md)
 - [AptHostedApiRepository](docs/AptHostedApiRepository.md)
 - [AptHostedRepositoriesAttributes](docs/AptHostedRepositoriesAttributes.md)
 - [AptHostedRepositoryApiRequest](docs/AptHostedRepositoryApiRequest.md)
 - [AptProxyApiRepository](docs/AptProxyApiRepository.md)
 - [AptProxyRepositoriesAttributes](docs/AptProxyRepositoriesAttributes.md)
 - [AptProxyRepositoryApiRequest](docs/AptProxyRepositoryApiRequest.md)
 - [AptSigningRepositoriesAttributes](docs/AptSigningRepositoriesAttributes.md)
 - [AssetXO](docs/AssetXO.md)
 - [AuthSettingsXo](docs/AuthSettingsXo.md)
 - [AzureBlobStoreApiAuthentication](docs/AzureBlobStoreApiAuthentication.md)
 - [AzureBlobStoreApiBucketConfiguration](docs/AzureBlobStoreApiBucketConfiguration.md)
 - [AzureBlobStoreApiModel](docs/AzureBlobStoreApiModel.md)
 - [AzureConnectionXO](docs/AzureConnectionXO.md)
 - [BaseTagXO](docs/BaseTagXO.md)
 - [BlobStoreApiSoftQuota](docs/BlobStoreApiSoftQuota.md)
 - [BlobStoreQuotaResultXO](docs/BlobStoreQuotaResultXO.md)
 - [CapabilityDTO](docs/CapabilityDTO.md)
 - [CargoAttributes](docs/CargoAttributes.md)
 - [CargoGroupApiRepository](docs/CargoGroupApiRepository.md)
 - [CargoGroupRepositoryApiRequest](docs/CargoGroupRepositoryApiRequest.md)
 - [CargoHostedRepositoryApiRequest](docs/CargoHostedRepositoryApiRequest.md)
 - [CargoProxyApiRepository](docs/CargoProxyApiRepository.md)
 - [CargoProxyRepositoryApiRequest](docs/CargoProxyRepositoryApiRequest.md)
 - [CleanupPolicyAttributes](docs/CleanupPolicyAttributes.md)
 - [CleanupPolicyResourceXO](docs/CleanupPolicyResourceXO.md)
 - [CocoapodsProxyRepositoryApiRequest](docs/CocoapodsProxyRepositoryApiRequest.md)
 - [ComponentAttributes](docs/ComponentAttributes.md)
 - [ComponentXO](docs/ComponentXO.md)
 - [ComposerProxyRepositoryApiRequest](docs/ComposerProxyRepositoryApiRequest.md)
 - [ConanGroupRepositoryApiRequest](docs/ConanGroupRepositoryApiRequest.md)
 - [ConanHostedRepositoryApiRequest](docs/ConanHostedRepositoryApiRequest.md)
 - [ConanProxyAttributes](docs/ConanProxyAttributes.md)
 - [ConanProxyRepositoryApiRequest](docs/ConanProxyRepositoryApiRequest.md)
 - [CondaProxyRepositoryApiRequest](docs/CondaProxyRepositoryApiRequest.md)
 - [ConfigurationApplyResponseXO](docs/ConfigurationApplyResponseXO.md)
 - [ConfigurationXO](docs/ConfigurationXO.md)
 - [ContentSelectorApiCreateRequest](docs/ContentSelectorApiCreateRequest.md)
 - [ContentSelectorApiResponse](docs/ContentSelectorApiResponse.md)
 - [ContentSelectorApiUpdateRequest](docs/ContentSelectorApiUpdateRequest.md)
 - [CreateLdapServerXo](docs/CreateLdapServerXo.md)
 - [CreateTask201Response](docs/CreateTask201Response.md)
 - [CrowdApiXO](docs/CrowdApiXO.md)
 - [DataStoreApiUpdateXO](docs/DataStoreApiUpdateXO.md)
 - [DataStoreApiXO](docs/DataStoreApiXO.md)
 - [DockerAttributes](docs/DockerAttributes.md)
 - [DockerGroupApiRepository](docs/DockerGroupApiRepository.md)
 - [DockerGroupRepositoryApiRequest](docs/DockerGroupRepositoryApiRequest.md)
 - [DockerHostedApiRepository](docs/DockerHostedApiRepository.md)
 - [DockerHostedRepositoryApiRequest](docs/DockerHostedRepositoryApiRequest.md)
 - [DockerHostedStorageAttributes](docs/DockerHostedStorageAttributes.md)
 - [DockerProxyApiRepository](docs/DockerProxyApiRepository.md)
 - [DockerProxyAttributes](docs/DockerProxyAttributes.md)
 - [DockerProxyRepositoryApiRequest](docs/DockerProxyRepositoryApiRequest.md)
 - [EulaStatus](docs/EulaStatus.md)
 - [FileBlobStoreApiCreateRequest](docs/FileBlobStoreApiCreateRequest.md)
 - [FileBlobStoreApiModel](docs/FileBlobStoreApiModel.md)
 - [FileBlobStoreApiUpdateRequest](docs/FileBlobStoreApiUpdateRequest.md)
 - [FrequencyXO](docs/FrequencyXO.md)
 - [GenericBlobStoreApiResponse](docs/GenericBlobStoreApiResponse.md)
 - [GitLfsHostedRepositoryApiRequest](docs/GitLfsHostedRepositoryApiRequest.md)
 - [GolangGroupRepositoryApiRequest](docs/GolangGroupRepositoryApiRequest.md)
 - [GolangProxyRepositoryApiRequest](docs/GolangProxyRepositoryApiRequest.md)
 - [GoogleCloudBlobStoreApiBucket](docs/GoogleCloudBlobStoreApiBucket.md)
 - [GoogleCloudBlobStoreApiBucketAuthentication](docs/GoogleCloudBlobStoreApiBucketAuthentication.md)
 - [GoogleCloudBlobStoreApiBucketConfiguration](docs/GoogleCloudBlobStoreApiBucketConfiguration.md)
 - [GoogleCloudBlobStoreApiEncryption](docs/GoogleCloudBlobStoreApiEncryption.md)
 - [GoogleCloudBlobstoreApiModel](docs/GoogleCloudBlobstoreApiModel.md)
 - [GroupAttributes](docs/GroupAttributes.md)
 - [GroupBlobStoreApiCreateRequest](docs/GroupBlobStoreApiCreateRequest.md)
 - [GroupBlobStoreApiModel](docs/GroupBlobStoreApiModel.md)
 - [GroupBlobStoreApiResponse](docs/GroupBlobStoreApiResponse.md)
 - [GroupBlobStoreApiUpdateRequest](docs/GroupBlobStoreApiUpdateRequest.md)
 - [GroupDeployAttributes](docs/GroupDeployAttributes.md)
 - [HelmHostedRepositoryApiRequest](docs/HelmHostedRepositoryApiRequest.md)
 - [HelmProxyRepositoryApiRequest](docs/HelmProxyRepositoryApiRequest.md)
 - [HostedStorageAttributes](docs/HostedStorageAttributes.md)
 - [HttpClientAttributes](docs/HttpClientAttributes.md)
 - [HttpClientAttributesWithPreemptiveAuth](docs/HttpClientAttributesWithPreemptiveAuth.md)
 - [HttpClientConnectionAttributes](docs/HttpClientConnectionAttributes.md)
 - [HttpClientConnectionAuthenticationAttributes](docs/HttpClientConnectionAuthenticationAttributes.md)
 - [HttpClientConnectionAuthenticationAttributesWithPreemptive](docs/HttpClientConnectionAuthenticationAttributesWithPreemptive.md)
 - [HttpSettingsXo](docs/HttpSettingsXo.md)
 - [HuggingFaceProxyRepositoryApiRequest](docs/HuggingFaceProxyRepositoryApiRequest.md)
 - [InstanceConfigurationXO](docs/InstanceConfigurationXO.md)
 - [IqAuditXo](docs/IqAuditXo.md)
 - [IqConnectionVerificationXo](docs/IqConnectionVerificationXo.md)
 - [IqConnectionXo](docs/IqConnectionXo.md)
 - [MaliciousRiskOnDiskCountResponse](docs/MaliciousRiskOnDiskCountResponse.md)
 - [MavenAttributes](docs/MavenAttributes.md)
 - [MavenGroupRepositoryApiRequest](docs/MavenGroupRepositoryApiRequest.md)
 - [MavenHostedApiRepository](docs/MavenHostedApiRepository.md)
 - [MavenHostedRepositoryApiRequest](docs/MavenHostedRepositoryApiRequest.md)
 - [MavenProxyApiRepository](docs/MavenProxyApiRepository.md)
 - [MavenProxyRepositoryApiRequest](docs/MavenProxyRepositoryApiRequest.md)
 - [NegativeCacheAttributes](docs/NegativeCacheAttributes.md)
 - [NodeInformation](docs/NodeInformation.md)
 - [NpmAttributes](docs/NpmAttributes.md)
 - [NpmGroupRepositoryApiRequest](docs/NpmGroupRepositoryApiRequest.md)
 - [NpmHostedRepositoryApiRequest](docs/NpmHostedRepositoryApiRequest.md)
 - [NpmProxyApiRepository](docs/NpmProxyApiRepository.md)
 - [NpmProxyRepositoryApiRequest](docs/NpmProxyRepositoryApiRequest.md)
 - [NugetAttributes](docs/NugetAttributes.md)
 - [NugetGroupRepositoryApiRequest](docs/NugetGroupRepositoryApiRequest.md)
 - [NugetHostedRepositoryApiRequest](docs/NugetHostedRepositoryApiRequest.md)
 - [NugetProxyApiRepository](docs/NugetProxyApiRepository.md)
 - [NugetProxyRepositoryApiRequest](docs/NugetProxyRepositoryApiRequest.md)
 - [P2ProxyRepositoryApiRequest](docs/P2ProxyRepositoryApiRequest.md)
 - [Page](docs/Page.md)
 - [PageAssetXO](docs/PageAssetXO.md)
 - [PageComponentXO](docs/PageComponentXO.md)
 - [PageReconcilePlanDetailsXO](docs/PageReconcilePlanDetailsXO.md)
 - [PageReconcilePlanXO](docs/PageReconcilePlanXO.md)
 - [PageTagXO](docs/PageTagXO.md)
 - [PageTaskXO](docs/PageTaskXO.md)
 - [ProxyAttributes](docs/ProxyAttributes.md)
 - [ProxySettingsXo](docs/ProxySettingsXo.md)
 - [PyPiProxyApiRepository](docs/PyPiProxyApiRepository.md)
 - [PyPiProxyAttributes](docs/PyPiProxyAttributes.md)
 - [PypiGroupRepositoryApiRequest](docs/PypiGroupRepositoryApiRequest.md)
 - [PypiHostedRepositoryApiRequest](docs/PypiHostedRepositoryApiRequest.md)
 - [PypiProxyRepositoryApiRequest](docs/PypiProxyRepositoryApiRequest.md)
 - [RGroupRepositoryApiRequest](docs/RGroupRepositoryApiRequest.md)
 - [RHostedRepositoryApiRequest](docs/RHostedRepositoryApiRequest.md)
 - [RProxyRepositoryApiRequest](docs/RProxyRepositoryApiRequest.md)
 - [RawAttributes](docs/RawAttributes.md)
 - [RawGroupApiRepository](docs/RawGroupApiRepository.md)
 - [RawGroupRepositoryApiRequest](docs/RawGroupRepositoryApiRequest.md)
 - [RawHostedApiRepository](docs/RawHostedApiRepository.md)
 - [RawHostedRepositoryApiRequest](docs/RawHostedRepositoryApiRequest.md)
 - [RawProxyApiRepository](docs/RawProxyApiRepository.md)
 - [RawProxyRepositoryApiRequest](docs/RawProxyRepositoryApiRequest.md)
 - [ReEncryptionRequestApiXO](docs/ReEncryptionRequestApiXO.md)
 - [ReadLdapServerXo](docs/ReadLdapServerXo.md)
 - [ReadOnlyState](docs/ReadOnlyState.md)
 - [RealmApiXO](docs/RealmApiXO.md)
 - [ReconcilePlanDetailsXO](docs/ReconcilePlanDetailsXO.md)
 - [ReconcilePlanWithDetailsXO](docs/ReconcilePlanWithDetailsXO.md)
 - [ReconcilePlanXO](docs/ReconcilePlanXO.md)
 - [ReplicationAttributes](docs/ReplicationAttributes.md)
 - [RepositoryXO](docs/RepositoryXO.md)
 - [Result](docs/Result.md)
 - [RoleXORequest](docs/RoleXORequest.md)
 - [RoleXOResponse](docs/RoleXOResponse.md)
 - [RoutingRuleXO](docs/RoutingRuleXO.md)
 - [RubyGemsGroupRepositoryApiRequest](docs/RubyGemsGroupRepositoryApiRequest.md)
 - [RubyGemsHostedRepositoryApiRequest](docs/RubyGemsHostedRepositoryApiRequest.md)
 - [RubyGemsProxyRepositoryApiRequest](docs/RubyGemsProxyRepositoryApiRequest.md)
 - [S3BlobStoreApiAdvancedBucketConnection](docs/S3BlobStoreApiAdvancedBucketConnection.md)
 - [S3BlobStoreApiBucket](docs/S3BlobStoreApiBucket.md)
 - [S3BlobStoreApiBucketConfiguration](docs/S3BlobStoreApiBucketConfiguration.md)
 - [S3BlobStoreApiBucketSecurity](docs/S3BlobStoreApiBucketSecurity.md)
 - [S3BlobStoreApiEncryption](docs/S3BlobStoreApiEncryption.md)
 - [S3BlobStoreApiFailoverBucket](docs/S3BlobStoreApiFailoverBucket.md)
 - [S3BlobStoreApiModel](docs/S3BlobStoreApiModel.md)
 - [SamlConfigurationXO](docs/SamlConfigurationXO.md)
 - [ScriptResultXO](docs/ScriptResultXO.md)
 - [ScriptXO](docs/ScriptXO.md)
 - [SimpleApiGroupDeployRepository](docs/SimpleApiGroupDeployRepository.md)
 - [SimpleApiGroupRepository](docs/SimpleApiGroupRepository.md)
 - [SimpleApiHostedRepository](docs/SimpleApiHostedRepository.md)
 - [SimpleApiProxyRepository](docs/SimpleApiProxyRepository.md)
 - [StackTraceElement](docs/StackTraceElement.md)
 - [StorageAttributes](docs/StorageAttributes.md)
 - [SupportZipGeneratorRequest](docs/SupportZipGeneratorRequest.md)
 - [SupportZipXO](docs/SupportZipXO.md)
 - [SystemCheckResultDTO](docs/SystemCheckResultDTO.md)
 - [SystemCheckResultsApiDTO](docs/SystemCheckResultsApiDTO.md)
 - [TagXO](docs/TagXO.md)
 - [TaskTemplateXO](docs/TaskTemplateXO.md)
 - [TaskXO](docs/TaskXO.md)
 - [Throwable](docs/Throwable.md)
 - [UpdateLdapServerXo](docs/UpdateLdapServerXo.md)
 - [UpdateTaskRequest](docs/UpdateTaskRequest.md)
 - [UploadComponentRequest](docs/UploadComponentRequest.md)
 - [UploadDefinitionXO](docs/UploadDefinitionXO.md)
 - [UploadFieldDefinitionXO](docs/UploadFieldDefinitionXO.md)
 - [UserTokensApiModel](docs/UserTokensApiModel.md)
 - [YumAttributes](docs/YumAttributes.md)
 - [YumGroupRepositoryApiRequest](docs/YumGroupRepositoryApiRequest.md)
 - [YumHostedApiRepository](docs/YumHostedApiRepository.md)
 - [YumHostedRepositoryApiRequest](docs/YumHostedRepositoryApiRequest.md)
 - [YumProxyRepositoryApiRequest](docs/YumProxyRepositoryApiRequest.md)
 - [YumSigningRepositoriesAttributes](docs/YumSigningRepositoriesAttributes.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="BasicAuth"></a>
### BasicAuth

- **Type**: HTTP basic authentication


## Author

community@sonatype.com


