# coding: utf-8

"""
    Sonatype Nexus Repository Manager

    This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

    The version of the OpenAPI document: 3.85.0-03
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nexus_api_client.models.task_template_xo import TaskTemplateXO

class TestTaskTemplateXO(unittest.TestCase):
    """TaskTemplateXO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskTemplateXO:
        """Test TaskTemplateXO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskTemplateXO`
        """
        model = TaskTemplateXO()
        if include_optional:
            return TaskTemplateXO(
                alert_email = '',
                enabled = True,
                frequency = nexus_api_client.models.frequency_xo.FrequencyXO(
                    cron_expression = '0 1 2 * * ?', 
                    recurring_days = [
                        56
                        ], 
                    schedule = '', 
                    start_date = 56, 
                    time_zone_offset = '-05:00', ),
                name = '',
                notification_condition = 'FAILURE',
                properties = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return TaskTemplateXO(
                enabled = True,
                frequency = nexus_api_client.models.frequency_xo.FrequencyXO(
                    cron_expression = '0 1 2 * * ?', 
                    recurring_days = [
                        56
                        ], 
                    schedule = '', 
                    start_date = 56, 
                    time_zone_offset = '-05:00', ),
                name = '',
                notification_condition = 'FAILURE',
                type = '',
        )
        """

    def testTaskTemplateXO(self):
        """Test TaskTemplateXO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
