# coding: utf-8

"""
    Sonatype Nexus Repository Manager

    This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

    The version of the OpenAPI document: 3.85.0-03
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nexus_api_client.models.reconcile_plan_with_details_xo import ReconcilePlanWithDetailsXO

class TestReconcilePlanWithDetailsXO(unittest.TestCase):
    """ReconcilePlanWithDetailsXO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReconcilePlanWithDetailsXO:
        """Test ReconcilePlanWithDetailsXO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReconcilePlanWithDetailsXO`
        """
        model = ReconcilePlanWithDetailsXO()
        if include_optional:
            return ReconcilePlanWithDetailsXO(
                configuration = {
                    'key' : ''
                    },
                continuation_token = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                details = [
                    nexus_api_client.models.reconcile_plan_details_xo.ReconcilePlanDetailsXO(
                        action = '', 
                        asset_name = '', 
                        blob_id = '', 
                        date_path_ref = '', 
                        id = 56, 
                        path = '', 
                        plan_id = 56, 
                        reason = '', 
                        repository = '', 
                        state = '', )
                    ],
                id = 56,
                repository = '',
                state = ''
            )
        else:
            return ReconcilePlanWithDetailsXO(
        )
        """

    def testReconcilePlanWithDetailsXO(self):
        """Test ReconcilePlanWithDetailsXO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
