# coding: utf-8

"""
    Sonatype Nexus Repository Manager

    This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

    The version of the OpenAPI document: 3.85.0-03
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nexus_api_client.models.google_cloud_blobstore_api_model import GoogleCloudBlobstoreApiModel

class TestGoogleCloudBlobstoreApiModel(unittest.TestCase):
    """GoogleCloudBlobstoreApiModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBlobstoreApiModel:
        """Test GoogleCloudBlobstoreApiModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBlobstoreApiModel`
        """
        model = GoogleCloudBlobstoreApiModel()
        if include_optional:
            return GoogleCloudBlobstoreApiModel(
                bucket_configuration = nexus_api_client.models.google_cloud_blob_store_api_bucket_configuration.GoogleCloudBlobStoreApiBucketConfiguration(
                    bucket = nexus_api_client.models.google_cloud_blob_store_api_bucket.GoogleCloudBlobStoreApiBucket(
                        name = '', 
                        prefix = '', 
                        project_id = 'project_123', 
                        region = 'us-central1', ), 
                    bucket_security = nexus_api_client.models.google_cloud_blob_store_api_bucket_authentication.GoogleCloudBlobStoreApiBucketAuthentication(
                        account_key = '', 
                        authentication_method = 'applicationDefault', ), 
                    encryption = nexus_api_client.models.google_cloud_blob_store_api_encryption.GoogleCloudBlobStoreApiEncryption(
                        encryption_key = '', 
                        encryption_type = 'default', ), ),
                name = 'gc_storage',
                soft_quota = nexus_api_client.models.blob_store_api_soft_quota.BlobStoreApiSoftQuota(
                    limit = 0, 
                    type = 'spaceRemainingQuota', ),
                type = 'Google Cloud Storage'
            )
        else:
            return GoogleCloudBlobstoreApiModel(
                bucket_configuration = nexus_api_client.models.google_cloud_blob_store_api_bucket_configuration.GoogleCloudBlobStoreApiBucketConfiguration(
                    bucket = nexus_api_client.models.google_cloud_blob_store_api_bucket.GoogleCloudBlobStoreApiBucket(
                        name = '', 
                        prefix = '', 
                        project_id = 'project_123', 
                        region = 'us-central1', ), 
                    bucket_security = nexus_api_client.models.google_cloud_blob_store_api_bucket_authentication.GoogleCloudBlobStoreApiBucketAuthentication(
                        account_key = '', 
                        authentication_method = 'applicationDefault', ), 
                    encryption = nexus_api_client.models.google_cloud_blob_store_api_encryption.GoogleCloudBlobStoreApiEncryption(
                        encryption_key = '', 
                        encryption_type = 'default', ), ),
                name = 'gc_storage',
        )
        """

    def testGoogleCloudBlobstoreApiModel(self):
        """Test GoogleCloudBlobstoreApiModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
