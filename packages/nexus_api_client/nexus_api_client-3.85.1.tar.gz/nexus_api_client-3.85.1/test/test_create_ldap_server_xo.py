# coding: utf-8

"""
    Sonatype Nexus Repository Manager

    This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

    The version of the OpenAPI document: 3.85.0-03
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nexus_api_client.models.create_ldap_server_xo import CreateLdapServerXo

class TestCreateLdapServerXo(unittest.TestCase):
    """CreateLdapServerXo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateLdapServerXo:
        """Test CreateLdapServerXo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateLdapServerXo`
        """
        model = CreateLdapServerXo()
        if include_optional:
            return CreateLdapServerXo(
                auth_password = '',
                auth_realm = 'example.com',
                auth_scheme = 'NONE',
                auth_username = '',
                connection_retry_delay_seconds = 0,
                connection_timeout_seconds = 1,
                group_base_dn = 'ou=Group',
                group_id_attribute = 'cn',
                group_member_attribute = 'memberUid',
                group_member_format = 'uid=${username},ou=people,dc=example,dc=com',
                group_object_class = 'posixGroup',
                group_subtree = True,
                group_type = 'static',
                host = '',
                ldap_groups_as_roles = True,
                max_incidents_count = 0,
                name = '',
                port = 636,
                protocol = 'ldap',
                search_base = 'dc=example,dc=com',
                use_trust_store = True,
                user_base_dn = 'ou=people',
                user_email_address_attribute = 'mail',
                user_id_attribute = 'uid',
                user_ldap_filter = '(|(mail=*@example.com)(uid=dom*))',
                user_member_of_attribute = 'memberOf',
                user_object_class = 'inetOrgPerson',
                user_password_attribute = '',
                user_real_name_attribute = 'cn',
                user_subtree = True
            )
        else:
            return CreateLdapServerXo(
                auth_password = '',
                auth_scheme = 'NONE',
                connection_retry_delay_seconds = 0,
                connection_timeout_seconds = 1,
                host = '',
                max_incidents_count = 0,
                name = '',
                port = 636,
                protocol = 'ldap',
                search_base = 'dc=example,dc=com',
        )
        """

    def testCreateLdapServerXo(self):
        """Test CreateLdapServerXo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
