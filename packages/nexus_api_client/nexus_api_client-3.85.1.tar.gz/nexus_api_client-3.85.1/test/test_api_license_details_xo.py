# coding: utf-8

"""
    Sonatype Nexus Repository Manager

    This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

    The version of the OpenAPI document: 3.85.0-03
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nexus_api_client.models.api_license_details_xo import ApiLicenseDetailsXO

class TestApiLicenseDetailsXO(unittest.TestCase):
    """ApiLicenseDetailsXO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiLicenseDetailsXO:
        """Test ApiLicenseDetailsXO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiLicenseDetailsXO`
        """
        model = ApiLicenseDetailsXO()
        if include_optional:
            return ApiLicenseDetailsXO(
                contact_company = '',
                contact_email = '',
                contact_name = '',
                effective_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                features = '',
                fingerprint = '',
                license_type = '',
                licensed_users = '',
                max_repo_components = 56,
                max_repo_requests = 56
            )
        else:
            return ApiLicenseDetailsXO(
        )
        """

    def testApiLicenseDetailsXO(self):
        """Test ApiLicenseDetailsXO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
