# coding: utf-8

"""
    Sonatype Nexus Repository Manager

    This documents the available APIs into [Sonatype Nexus Repository Manager](https://www.sonatype.com/products/sonatype-nexus-repository) as of version 3.85.0-03.

    The version of the OpenAPI document: 3.85.0-03
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nexus_api_client.models.http_client_attributes_with_preemptive_auth import HttpClientAttributesWithPreemptiveAuth

class TestHttpClientAttributesWithPreemptiveAuth(unittest.TestCase):
    """HttpClientAttributesWithPreemptiveAuth unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HttpClientAttributesWithPreemptiveAuth:
        """Test HttpClientAttributesWithPreemptiveAuth
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HttpClientAttributesWithPreemptiveAuth`
        """
        model = HttpClientAttributesWithPreemptiveAuth()
        if include_optional:
            return HttpClientAttributesWithPreemptiveAuth(
                authentication = nexus_api_client.models.http_client_connection_authentication_attributes_with_preemptive.HttpClientConnectionAuthenticationAttributesWithPreemptive(
                    bearer_token = '', 
                    ntlm_domain = '', 
                    ntlm_host = '', 
                    password = '', 
                    preemptive = False, 
                    type = 'username', 
                    username = '', ),
                auto_block = True,
                blocked = False,
                connection = nexus_api_client.models.http_client_connection_attributes.HttpClientConnectionAttributes(
                    enable_circular_redirects = False, 
                    enable_cookies = False, 
                    retries = 0, 
                    timeout = 60, 
                    use_trust_store = False, 
                    user_agent_suffix = '', )
            )
        else:
            return HttpClientAttributesWithPreemptiveAuth(
                auto_block = True,
                blocked = False,
        )
        """

    def testHttpClientAttributesWithPreemptiveAuth(self):
        """Test HttpClientAttributesWithPreemptiveAuth"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
