name: Publish to PyPI

# Automate publishing based on https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required for setuptools-scm
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"  # speeds up repeated builds
      - name: Upgrade pip & install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build setuptools wheel setuptools-scm
      - name: Build sdist and wheel
        run: python -m build
      - name: Assert artifacts exist
        run: test -n "$(ls -1 dist/* 2>/dev/null)"  # fail if empty
      - uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pelican-hep
    permissions:
      id-token: write  # for trusted publishing
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          skip-existing: true     # tolerate re-runs of the same tag
          print-hash: true        # logs SHA256s

  github-release:
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: |
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create '${{ github.ref_name }}' \
            --repo '${{ github.repository }}' \
            --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload '${{ github.ref_name }}' dist/** \
            --repo '${{ github.repository }}'
