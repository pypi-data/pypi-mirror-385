[build-system]
requires = [
  "scikit-build-core>=0.3",
  "setuptools_scm",
  "numpy>=2.0.0",
  "cython~=3.0",
]
build-backend = "scikit_build_core.build"

[project]
name = "sdf-xarray"
dynamic = ["version"]
license = "BSD-3-Clause"
readme = "README.md"
authors = [
  { name = "Peter Hill", email = "peter.hill@york.ac.uk" },
  { name = "Joel Adams", email = "joel.adams@york.ac.uk" },
  { name = "Shaun Doherty", email = "shaun.doherty@york.ac.uk" },
]
requires-python = ">=3.10,<3.14"
dependencies = ["numpy>=2.0.0", "xarray>=2024.1.0", "dask>=2024.7.1"]
description = "Provides a backend for xarray to read SDF files as created by the EPOCH plasma PIC code."
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
docs = [
  "sphinx>=5.3",
  "sphinx_autodoc_typehints>=1.19",
  "sphinx-book-theme>=0.4.0rc1",
  "sphinx-argparse-cli>=1.10.0",
  "sphinx-inline-tabs",
  "pickleshare",
  "ipython",
  "matplotlib",
  "pint",
  "pint-xarray",
  "myst-parser",
]
test = ["pytest >= 3.3.0", "dask[complete]", "matplotlib"]
lint = ["ruff"]
build = ["cibuildwheel[uv]"]
jupyter = ["dask[diagnostics]", "ipykernel>=6.29.5"]
pint = ["pint", "pint-xarray"]

[project.entry-points."xarray.backends"]
sdf_engine = "sdf_xarray:SDFEntrypoint"

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/sdf_xarray/_version.py"]

[tool.setuptools_scm]
write_to = "src/sdf_xarray/_version.py"

[tool.cibuildwheel]
build-frontend = "build[uv]"
skip = ["*-win32", "*-manylinux_i686", "pp*", "*musllinux*"]
test-extras = ["test"]
test-command = "pytest {project}/tests"

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = true }]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "ARG", # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "ICN", # flake8-import-conventions
  "G",   # flake8-logging-format
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "EXE", # flake8-executable
  "NPY", # NumPy specific rules
  "PD",  # pandas-vet
]
ignore = [
  "PLR2004", # magic-comparison
  "B9",      # flake8-bugbear opinionated warnings
  "PLR0913", # remove maximum number of arguments in a function
]
