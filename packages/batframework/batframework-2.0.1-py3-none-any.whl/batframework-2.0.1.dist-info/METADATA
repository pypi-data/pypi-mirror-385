Metadata-Version: 2.2
Name: batframework
Version: 2.0.1
Summary: Pygame framework for making games easier.
Author-email: Turan Baturay <baturayturan@gmail.com>
License: MIT License
        
        Copyright (c) [2023] [TURAN BATURAY]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/TuranBaturay/batFramework
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pygame-ce>=2.5.2

# batFramework

batFramework is a Python game framework built using Pygame, designed to simplify game development.

## Purpose and Overview
The primary objective of batFramework is to streamline game development. It is mainly designed to program small 2D games

## Installation and Setup
To install batFramework, you can use pip:
```pip install batFramework```

The only dependency required is pygame-ce.

## Usage Instructions
To create a basic app using batFramework, here's an example:

```python
import batFramework as bf

# Initialize the framework
bf.init(resolution=(1280, 720), window_caption="My Amazing Program")

# Create a manager and a scene
bf.Manager(bf.Scene("main")).run()
```
In practice, users can inherit bf.Scene to create their own scenes, adding specific behaviors, entities, etc.

## Features and Functionalities

For more detailed information, please refer to the [documentation](https://batframework.github.io/batDocumentation/).


# License
 MIT License
