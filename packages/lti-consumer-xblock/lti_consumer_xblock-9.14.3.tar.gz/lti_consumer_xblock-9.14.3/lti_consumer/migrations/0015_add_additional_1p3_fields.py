# Generated by Django 3.2.13 on 2022-07-13 17:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('lti_consumer', '0014_adds_external_id'),
    ]

    operations = [
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_1p3_launch_url',
            field=models.CharField(blank=True, help_text='This is the LTI launch URL, otherwise known as the target_link_uri. It represents the LTI resource to launch to or load in the second leg of the launch flow, when the resource is actually launched or loaded.', max_length=255, verbose_name='LTI 1.3 Launch URL'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_1p3_oidc_url',
            field=models.CharField(blank=True, help_text='This is the OIDC third-party initiated login endpoint URL in the LTI 1.3 flow, which should be provided by the LTI Tool.', max_length=255, verbose_name='LTI 1.3 OpenID Connect (OIDC) Login URL'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_1p3_tool_keyset_url',
            field=models.CharField(blank=True, help_text="This is the LTI Tool's JWK (JSON Web Key) Keyset (JWKS) URL. This should be provided by the LTI Tool. One of either lti_1p3_tool_public_key or lti_1p3_tool_keyset_url must not be blank.", max_length=255, verbose_name='LTI 1.3 Tool Keyset URL'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_1p3_tool_public_key',
            field=models.TextField(blank=True, help_text="This is the LTI Tool's public key. This should be provided by the LTI Tool. One of either lti_1p3_tool_public_key or lti_1p3_tool_keyset_url must not be blank.", verbose_name='LTI 1.3 Tool Public Key'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_advantage_ags_mode',
            field=models.CharField(choices=[('disabled', 'Disabled'), ('declarative', 'Allow tools to submit grades only (declarative)'), ('programmatic', 'Allow tools to manage and submit grade (programmatic)')], default='declarative', help_text='Enable LTI Advantage Assignment and Grade Services and select the functionality enabled for LTI tools. The "declarative" mode (default) will provide a tool with a LineItem created from the XBlock settings, while the "programmatic" one will allow tools to manage, create and link the grades.', max_length=20, verbose_name='LTI Advantage Assignment and Grade Services Mode'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_advantage_deep_linking_enabled',
            field=models.BooleanField(default=False, help_text='Enable LTI Advantage Deep Linking.', verbose_name='Enable LTI Advantage Deep Linking'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_advantage_deep_linking_launch_url',
            field=models.CharField(blank=True, help_text='This is the LTI Advantage Deep Linking launch URL. If the LTI Tool does not provide one, use the same value as lti_1p3_launch_url.', max_length=225, verbose_name='LTI Advantage Deep Linking launch URL'),
        ),
        migrations.AddField(
            model_name='lticonfiguration',
            name='lti_advantage_enable_nrps',
            field=models.BooleanField(default=False, help_text='Enable LTI Advantage Names and Role Provisioning Services.', verbose_name='Enable LTI Advantage Names and Role Provisioning Services'),
        ),
    ]
