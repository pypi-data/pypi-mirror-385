name: Build Docs

on:
  push:
    branches:
      - dev
      - main
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy Docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: üêç Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"
          cache-dependency-path: "pyproject.toml"
          cache: "pip"

      - name: Install Dependencies
        run: |
          python -m pip install -U pip
          python -m pip install .[dev]
          python -m pip install .[docs]

      - name: Configure Git user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
        
      - name: Restore shared data cache
        id: cache-data
        uses: actions/cache@v4
        with:
          path: data/
          key: "${{ runner.os }}-data-${{ hashFiles('tests/conftest.py') }}"
          restore-keys: |
            "${{ runner.os }}-data-"
            
      - name: Deploy docs
        run: |
          VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\///' | sed 's/refs\/heads\///')
          echo "Deploying version $VERSION"
          # Check if the version is a stable release
          # Meaning that starts with "v" and contains only numbers and dots
          if [[ $GITHUB_REF == refs/tags/* ]] && [[ $VERSION =~ ^v[0-9.]+$ ]]; then
            mike deploy --push --update-aliases $VERSION stable
            mike set-default --push stable
            echo "Deployed stable version $VERSION (stable)"

          elif [[ $GITHUB_REF == refs/heads/dev ]]; then
            mike deploy --push dev
            mike set-default --push dev
            echo "Deployed development version (dev)"
          fi
