name: CI/CD

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Install Python project
        run: uv sync

      - name: Install Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: package.json

      - name: Install pnpm and Node.js dependencies
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
          run_install: true

      - name: Check
        run: uv run poe check

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      # Required for trusted publishing
      id-token: write

    needs: check

    if: github.event_name == 'push' && github.ref_name == 'main'

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 2
          fetch-tags: true

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Replace versioningit format specs (to force version string format)
        uses: mikefarah/yq@v4
        with:
          cmd: |
            DISTANCE_VALUE=$(yq '.tool.versioningit.format.distance' pyproject.toml)
            sed -i "s/0.0.0+dirty/$DISTANCE_VALUE/" pyproject.toml

      - name: Sync (to update version string)
        run: uv sync

      - name: Build
        run: uv build

      - name: Publish
        run: uv publish
