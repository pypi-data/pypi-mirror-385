name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  select-python-version-for-publishing:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.select-version.outputs.version }}
    steps:
      - id: select-version
        run: echo "version=3.10" >> $GITHUB_OUTPUT

  find-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      python: ${{ steps.filter.outputs.python }}
    steps:
    - uses: actions/checkout@v5
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          python:
            - '.github/workflows/*.yml'
            - 'src/**'
            - 'pyproject.toml'
            - 'README.md'
            - 'LICENSE.txt'

  build-python-module:
    needs: [ select-python-version-for-publishing, find-changes ]
    name: Build source and wheel distributions
    runs-on: ubuntu-latest
    if: >
        always() &&
        (
            needs.find-changes.outputs.python == 'true' ||
            (
                github.event_name == 'release'
            )
        )

    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc

      - name: Hatch fmt and type check
        run: |
          hatch fmt --check
          hatch run types:check

      - name: Build sdist and wheel
        run: |
          hatch build

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        if: matrix.python-version == needs.select-python-version-for-publishing.outputs.python-version
        with:
          name: source
          path: dist/*.tar.gz

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        if: matrix.python-version == needs.select-python-version-for-publishing.outputs.python-version
        with:
          name: wheels
          path: dist/*.whl

  publish-pypi:
    needs: [ build-python-module, select-python-version-for-publishing ]
    name: Publish distribution to PyPi
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: source
          path: dist

      - uses: actions/download-artifact@v5
        with:
          name: wheels
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.release.prerelease
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event.release.prerelease == false
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
