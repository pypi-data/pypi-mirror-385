[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs==0.5",
  "hatchling==1.27",
]

[project]
name = "tap-clinicaltrials"
description = "`tap-clinicaltrials` is a Singer tap for ClinicalTrials.gov, built with the Meltano SDK for Singer Taps."
readme = "README.md"
keywords = [
  "ClinicalTrials.gov",
  "ELT",
  "singer.io",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
maintainers = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrmondragon@hey.com" },
]
authors = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrmondragon@hey.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dynamic = [
  "version",
]
dependencies = [
  "requests>=2,<3",
  "requests-cache>=1,<2",
  "singer-sdk~=0.51.0",
]

urls.Documentation = "https://github.com/edgarrmondragon/tap-clinicaltrials#readme"
urls.Homepage = "https://github.com/edgarrmondragon/tap-clinicaltrials"
urls.Repository = "https://github.com/edgarrmondragon/tap-clinicaltrials"
scripts."tap-clinicaltrials" = "tap_clinicaltrials.tap:TapClinicalTrials.cli"

[dependency-groups]
dev = [
  { include-group = "testing" },
  { include-group = "typing" },
]
testing = [
  "deptry>=0.12",
  "pytest>=7.4",
  "singer-sdk[testing]",
]
typing = [
  "mypy>=1",
  "types-requests>=2.32",
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 160

lint.select = [
  "ALL",
]
lint.ignore = [
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
  "PD",     # pandas-vet
]

lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-public-function
  "S101",   # assert
  "SLF001", # private-member-access
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [
  "tap_clinicaltrials",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"

[tool.deptry.package_module_name_map]
mypy = "mypy"
types-requests = "requests"

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = "-vvv"
filterwarnings = [
  "error",
  "default:No records were available to test:UserWarning",
  "default:Fields in transformed catalog but not in records:UserWarning",
  # Deprecation message introduced in Python 3.14. Upstream issue: https://github.com/python-attrs/cattrs/issues/635
  "default:'_UnionGenericAlias' is deprecated and slated for removal in Python 3.17:DeprecationWarning",
  # Deprecation message introduced in Python 3.14. Upstream PR: https://github.com/litl/backoff/pull/220
  "default:'asyncio.iscoroutinefunction' is deprecated and slated for removal in Python 3.16:DeprecationWarning",
]

[tool.tox]
min_version = "4.22"
env_list = [
  "dependencies",
  "typing",
  "3.14",
  "3.13",
  "3.12",
  "3.11",
  "3.10",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
pass_env = [ "TAP_CLINICALTRIALS_*" ]
dependency_groups = [ "testing" ]
commands = [ [ "pytest", { replace = "posargs", default = [ "tests" ], extend = true } ] ]

[tool.tox.env.dependencies]
dependency_groups = [ "testing" ]
commands = [ [ "deptry", "." ] ]

[tool.tox.env.typing]
dependency_groups = [ "testing", "typing" ]
commands = [
  [
    "mypy",
    "--strict",
    { replace = "posargs", default = [
      "tap_clinicaltrials",
      "tests",
    ], extend = true },
  ],
]

[tool.mypy]
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
