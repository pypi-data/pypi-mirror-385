"use strict";(self.webpackChunk_amzn_sagemaker_gen_ai_jupyterlab_extension=self.webpackChunk_amzn_sagemaker_gen_ai_jupyterlab_extension||[]).push([[455],{455:(t,r,e)=>{function n(t){return"-"===t||"^"===t||"$"===t||"+"===t||"."===t||"("===t||")"===t||"|"===t||"["===t||"]"===t||"{"===t||"}"===t||"*"===t||"?"===t||"\\"===t?"\\".concat(t):t}function a(t,r){if(void 0===r&&(r=!0),Array.isArray(t)){var e=t.map((function(t){return"^".concat(a(t,r),"$")}));return"(?:".concat(e.join("|"),")")}var o="",c="",i=".";!0===r?(o="/",c="[/\\\\]",i="[^/\\\\]"):r&&(c=function(t){for(var r="",e=0;e<t.length;e++)r+=n(t[e]);return r}(o=r),c.length>1?(c="(?:".concat(c,")"),i="((?!".concat(c,").)")):i="[^".concat(c,"]"));for(var s=r?"".concat(c,"+?"):"",p=r?"".concat(c,"*?"):"",u=r?t.split(o):[t],f="",g=0;g<u.length;g++){var l=u[g],y=u[g+1],h="";if(l||!(g>0))if(r&&(h=g===u.length-1?p:"**"!==y?s:""),r&&"**"===l)h&&(f+=0===g?"":g===u.length-1?"(?:".concat(s,"|$)"):s,f+="(?:".concat(i,"*?").concat(h,")*?"));else{for(var b=0;b<l.length;b++){var v=l[b];"\\"===v?b<l.length-1&&(f+=n(l[b+1]),b++):f+="?"===v?i:"*"===v?"".concat(i,"*?"):n(v)}f+=h}}return f}function o(t,r){if("string"!=typeof r)throw new TypeError("Sample must be a string, but ".concat(typeof r," given"));return t.test(r)}function c(t,r){if("string"!=typeof t&&!Array.isArray(t))throw new TypeError("The first argument must be a single pattern string or an array of patterns, but ".concat(typeof t," given"));if("string"!=typeof r&&"boolean"!=typeof r||(r={separator:r}),2===arguments.length&&void 0!==r&&("object"!=typeof r||null===r||Array.isArray(r)))throw new TypeError("The second argument must be an options object or a string/boolean separator, but ".concat(typeof r," given"));if("\\"===(r=r||{}).separator)throw new Error("\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead");var e=a(t,r.separator),n=new RegExp("^".concat(e,"$"),r.flags),c=o.bind(null,n);return c.options=r,c.pattern=t,c.regexp=n,c}e.r(r),e.d(r,{default:()=>c})}}]);