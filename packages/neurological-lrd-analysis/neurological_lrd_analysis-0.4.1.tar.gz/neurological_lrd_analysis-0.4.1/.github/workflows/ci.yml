name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 neurological_lrd_analysis --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 neurological_lrd_analysis --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check formatting with black
      run: |
        black --check neurological_lrd_analysis
    
    - name: Check import sorting with isort
      run: |
        isort --check-only neurological_lrd_analysis
    
    - name: Type check with mypy
      run: |
        mypy neurological_lrd_analysis
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=neurological_lrd_analysis --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Build documentation
      run: |
        cd docs
        make html
    
    - name: Upload docs artifact
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/build/html/

  gpu-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies with GPU support
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install jax[cpu]  # Use CPU version for testing
    
    - name: Test GPU functionality (CPU fallback)
      run: |
        python -c "import jax; print('JAX version:', jax.__version__)"
        python -c "from neurological_lrd_analysis import BiomedicalHurstEstimatorFactory; print('Import successful')"
