# generated by datamodel-codegen:
#   filename:  app_store_connect_api_openapi.json
#   timestamp: 2025-09-11T03:04:44+00:00

from __future__ import annotations

from datetime import date, timedelta
from typing import Any, Dict, List, Literal, Optional, Union

from pydantic import AnyUrl, AwareDatetime, BaseModel, EmailStr, RootModel, conint


class Data1(BaseModel):
    type: Literal["apps"]
    id: str


class App(BaseModel):
    data: Data1


class Relationships(BaseModel):
    app: App


class Attributes2(BaseModel):
    publish: Optional[bool] = None
    supportsAudioDescriptions: Optional[bool] = None
    supportsCaptions: Optional[bool] = None
    supportsDarkInterface: Optional[bool] = None
    supportsDifferentiateWithoutColorAlone: Optional[bool] = None
    supportsLargerText: Optional[bool] = None
    supportsReducedMotion: Optional[bool] = None
    supportsSufficientContrast: Optional[bool] = None
    supportsVoiceControl: Optional[bool] = None
    supportsVoiceover: Optional[bool] = None


class Data2(BaseModel):
    type: Literal["accessibilityDeclarations"]
    id: str
    attributes: Optional[Attributes2] = None


class AccessibilityDeclarationUpdateRequest(BaseModel):
    data: Data2


class Attributes3(BaseModel):
    actorType: Optional[Literal["USER", "API_KEY", "XCODE_CLOUD", "APPLE"]] = None
    userFirstName: Optional[str] = None
    userLastName: Optional[str] = None
    userEmail: Optional[str] = None
    apiKeyId: Optional[str] = None


class Attributes6(BaseModel):
    domain: Optional[str] = None
    referenceName: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None


class Attributes7(BaseModel):
    domain: str
    referenceName: str


class Data4(BaseModel):
    type: Literal["alternativeDistributionDomains"]
    attributes: Attributes7


class AlternativeDistributionDomainCreateRequest(BaseModel):
    data: Data4


class Attributes8(BaseModel):
    publicKey: Optional[str] = None


class Attributes9(BaseModel):
    publicKey: str


class Data6(BaseModel):
    type: Literal["apps"]
    id: str


class App1(BaseModel):
    data: Optional[Data6] = None


class Relationships1(BaseModel):
    app: Optional[App1] = None


class Data5(BaseModel):
    type: Literal["alternativeDistributionKeys"]
    attributes: Attributes9
    relationships: Optional[Relationships1] = None


class AlternativeDistributionKeyCreateRequest(BaseModel):
    data: Data5


class Attributes10(BaseModel):
    url: Optional[AnyUrl] = None
    urlExpirationDate: Optional[AwareDatetime] = None
    alternativeDistributionKeyBlob: Optional[str] = None
    fileChecksum: Optional[str] = None


class Attributes12(BaseModel):
    url: Optional[AnyUrl] = None
    urlExpirationDate: Optional[AwareDatetime] = None
    version: Optional[str] = None
    fileChecksum: Optional[str] = None
    state: Optional[Literal["COMPLETED", "REPLACED"]] = None


class Datum(BaseModel):
    type: Literal["alternativeDistributionPackageVariants"]
    id: str


class Datum1(BaseModel):
    type: Literal["alternativeDistributionPackageDeltas"]
    id: str


class Data7(BaseModel):
    type: Literal["alternativeDistributionPackages"]
    id: str


class AlternativeDistributionPackage(BaseModel):
    data: Optional[Data7] = None


class Datum2(BaseModel):
    type: Literal["alternativeDistributionPackageVersions"]
    id: str


class Data9(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion(BaseModel):
    data: Data9


class Relationships4(BaseModel):
    appStoreVersion: AppStoreVersion


class Data8(BaseModel):
    type: Literal["alternativeDistributionPackages"]
    relationships: Relationships4


class AlternativeDistributionPackageCreateRequest(BaseModel):
    data: Data8


class Attributes13(BaseModel):
    granularity: Optional[Literal["DAILY", "WEEKLY", "MONTHLY"]] = None
    processingDate: Optional[date] = None


class Attributes14(BaseModel):
    accessType: Optional[Literal["ONE_TIME_SNAPSHOT", "ONGOING"]] = None
    stoppedDueToInactivity: Optional[bool] = None


class Datum3(BaseModel):
    type: Literal["analyticsReports"]
    id: str


class Attributes15(BaseModel):
    accessType: Literal["ONE_TIME_SNAPSHOT", "ONGOING"]


class Data11(BaseModel):
    type: Literal["apps"]
    id: str


class App2(BaseModel):
    data: Data11


class Relationships7(BaseModel):
    app: App2


class Data10(BaseModel):
    type: Literal["analyticsReportRequests"]
    attributes: Attributes15
    relationships: Relationships7


class AnalyticsReportRequestCreateRequest(BaseModel):
    data: Data10


class Attributes16(BaseModel):
    checksum: Optional[str] = None
    sizeInBytes: Optional[int] = None
    url: Optional[AnyUrl] = None


class Attributes17(BaseModel):
    name: Optional[str] = None
    category: Optional[
        Literal[
            "APP_USAGE",
            "APP_STORE_ENGAGEMENT",
            "COMMERCE",
            "FRAMEWORK_USAGE",
            "PERFORMANCE",
        ]
    ] = None


class Attributes18(BaseModel):
    availableInNewTerritories: Optional[bool] = None


class Datum4(BaseModel):
    type: Literal["territoryAvailabilities"]
    id: str


class Attributes19(BaseModel):
    availableInNewTerritories: bool


class Data13(BaseModel):
    type: Literal["apps"]
    id: str


class App3(BaseModel):
    data: Data13


class TerritoryAvailabilities1(BaseModel):
    data: List[Datum4]


class Relationships10(BaseModel):
    app: App3
    territoryAvailabilities: TerritoryAvailabilities1


class Data12(BaseModel):
    type: Literal["appAvailabilities"]
    attributes: Attributes19
    relationships: Relationships10


class Datum6(BaseModel):
    type: Literal["appCategories"]
    id: str


class Data14(BaseModel):
    type: Literal["appCategories"]
    id: str


class Attributes22(BaseModel):
    fileSize: int
    fileName: str


class Data15(BaseModel):
    type: Literal["appClipAdvancedExperienceImages"]
    attributes: Attributes22


class AppClipAdvancedExperienceImageCreateRequest(BaseModel):
    data: Data15


class Attributes23(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data16(BaseModel):
    type: Literal["appClipAdvancedExperienceImages"]
    id: str
    attributes: Optional[Attributes23] = None


class AppClipAdvancedExperienceImageUpdateRequest(BaseModel):
    data: Data16


class StructuredAddress(BaseModel):
    streetAddress: Optional[List[str]] = None
    floor: Optional[str] = None
    neighborhood: Optional[str] = None
    locality: Optional[str] = None
    stateProvince: Optional[str] = None
    postalCode: Optional[str] = None
    countryCode: Optional[str] = None


class MainAddress(BaseModel):
    fullAddress: Optional[str] = None
    structuredAddress: Optional[StructuredAddress] = None


class Coordinates(BaseModel):
    latitude: Optional[float] = None
    longitude: Optional[float] = None


class DisplayPoint(BaseModel):
    coordinates: Optional[Coordinates] = None
    source: Optional[Literal["CALCULATED", "MANUALLY_PLACED"]] = None


class PhoneNumber(BaseModel):
    number: Optional[str] = None
    type: Optional[Literal["FAX", "LANDLINE", "MOBILE", "TOLLFREE"]] = None
    intent: Optional[str] = None


class Place(BaseModel):
    placeId: Optional[str] = None
    names: Optional[List[str]] = None
    mainAddress: Optional[MainAddress] = None
    displayPoint: Optional[DisplayPoint] = None
    mapAction: Optional[
        Literal[
            "BUY_TICKETS",
            "VIEW_AVAILABILITY",
            "VIEW_PRICING",
            "HOTEL_BOOK_ROOM",
            "PARKING_RESERVE_PARKING",
            "RESTAURANT_JOIN_WAITLIST",
            "RESTAURANT_ORDER_DELIVERY",
            "RESTAURANT_ORDER_FOOD",
            "RESTAURANT_ORDER_TAKEOUT",
            "RESTAURANT_RESERVATION",
            "SCHEDULE_APPOINTMENT",
            "RESTAURANT_VIEW_MENU",
            "THEATER_NOW_PLAYING",
            "AIRLINE_BOOK_TRAVEL",
            "AIRLINE_CHECK_IN",
            "AIRLINE_FLIGHT_STATUS",
            "APPLY",
            "BOOK",
            "BOOK_ACTIVITIES",
            "BOOK_RIDES",
            "BOOK_TEETIMES",
            "BOOK_TOURS",
            "CAREERS",
            "CHARGE_EV",
            "COUPONS",
            "DONATE",
            "EVENTS",
            "EVENTS_SHOWS",
            "EVENTS_SPORTS",
            "GIFT_CARD",
            "HOTEL_AMENITIES",
            "JOIN",
            "PARKING_AVAILABLE",
            "RESTAURANT_PICKUP",
            "RETAIL_SERVICE_QUOTE",
            "RETAIL_STORE_DELIVERY",
            "RETAIL_STORE_PICKUP",
            "RETAIL_STORE_SHOP",
            "SERVICES",
            "SUPPORT",
        ]
    ] = None
    relationship: Optional[Literal["OWNER", "AUTHORIZED", "OTHER"]] = None
    phoneNumber: Optional[PhoneNumber] = None
    homePage: Optional[str] = None
    categories: Optional[List[str]] = None


class Data17(BaseModel):
    type: Literal["appClips"]
    id: str


class AppClip(BaseModel):
    data: Optional[Data17] = None


class Data18(BaseModel):
    type: Literal["appClipAdvancedExperienceImages"]
    id: str


class HeaderImage(BaseModel):
    data: Optional[Data18] = None


class Datum7(BaseModel):
    type: Literal["appClipAdvancedExperienceLocalizations"]
    id: str


class MainAddress1(BaseModel):
    fullAddress: Optional[str] = None
    structuredAddress: Optional[StructuredAddress] = None


class DisplayPoint1(BaseModel):
    coordinates: Optional[Coordinates] = None
    source: Optional[Literal["CALCULATED", "MANUALLY_PLACED"]] = None


class Place1(BaseModel):
    placeId: Optional[str] = None
    names: Optional[List[str]] = None
    mainAddress: Optional[MainAddress1] = None
    displayPoint: Optional[DisplayPoint1] = None
    mapAction: Optional[
        Literal[
            "BUY_TICKETS",
            "VIEW_AVAILABILITY",
            "VIEW_PRICING",
            "HOTEL_BOOK_ROOM",
            "PARKING_RESERVE_PARKING",
            "RESTAURANT_JOIN_WAITLIST",
            "RESTAURANT_ORDER_DELIVERY",
            "RESTAURANT_ORDER_FOOD",
            "RESTAURANT_ORDER_TAKEOUT",
            "RESTAURANT_RESERVATION",
            "SCHEDULE_APPOINTMENT",
            "RESTAURANT_VIEW_MENU",
            "THEATER_NOW_PLAYING",
            "AIRLINE_BOOK_TRAVEL",
            "AIRLINE_CHECK_IN",
            "AIRLINE_FLIGHT_STATUS",
            "APPLY",
            "BOOK",
            "BOOK_ACTIVITIES",
            "BOOK_RIDES",
            "BOOK_TEETIMES",
            "BOOK_TOURS",
            "CAREERS",
            "CHARGE_EV",
            "COUPONS",
            "DONATE",
            "EVENTS",
            "EVENTS_SHOWS",
            "EVENTS_SPORTS",
            "GIFT_CARD",
            "HOTEL_AMENITIES",
            "JOIN",
            "PARKING_AVAILABLE",
            "RESTAURANT_PICKUP",
            "RETAIL_SERVICE_QUOTE",
            "RETAIL_STORE_DELIVERY",
            "RETAIL_STORE_PICKUP",
            "RETAIL_STORE_SHOP",
            "SERVICES",
            "SUPPORT",
        ]
    ] = None
    relationship: Optional[Literal["OWNER", "AUTHORIZED", "OTHER"]] = None
    phoneNumber: Optional[PhoneNumber] = None
    homePage: Optional[str] = None
    categories: Optional[List[str]] = None


class Data20(BaseModel):
    type: Literal["appClips"]
    id: str


class AppClip1(BaseModel):
    data: Data20


class Data21(BaseModel):
    type: Literal["appClipAdvancedExperienceImages"]
    id: str


class HeaderImage1(BaseModel):
    data: Data21


class Localizations1(BaseModel):
    data: List[Datum7]


class Relationships13(BaseModel):
    appClip: AppClip1
    headerImage: HeaderImage1
    localizations: Localizations1


class MainAddress2(BaseModel):
    fullAddress: Optional[str] = None
    structuredAddress: Optional[StructuredAddress] = None


class DisplayPoint2(BaseModel):
    coordinates: Optional[Coordinates] = None
    source: Optional[Literal["CALCULATED", "MANUALLY_PLACED"]] = None


class Place2(BaseModel):
    placeId: Optional[str] = None
    names: Optional[List[str]] = None
    mainAddress: Optional[MainAddress2] = None
    displayPoint: Optional[DisplayPoint2] = None
    mapAction: Optional[
        Literal[
            "BUY_TICKETS",
            "VIEW_AVAILABILITY",
            "VIEW_PRICING",
            "HOTEL_BOOK_ROOM",
            "PARKING_RESERVE_PARKING",
            "RESTAURANT_JOIN_WAITLIST",
            "RESTAURANT_ORDER_DELIVERY",
            "RESTAURANT_ORDER_FOOD",
            "RESTAURANT_ORDER_TAKEOUT",
            "RESTAURANT_RESERVATION",
            "SCHEDULE_APPOINTMENT",
            "RESTAURANT_VIEW_MENU",
            "THEATER_NOW_PLAYING",
            "AIRLINE_BOOK_TRAVEL",
            "AIRLINE_CHECK_IN",
            "AIRLINE_FLIGHT_STATUS",
            "APPLY",
            "BOOK",
            "BOOK_ACTIVITIES",
            "BOOK_RIDES",
            "BOOK_TEETIMES",
            "BOOK_TOURS",
            "CAREERS",
            "CHARGE_EV",
            "COUPONS",
            "DONATE",
            "EVENTS",
            "EVENTS_SHOWS",
            "EVENTS_SPORTS",
            "GIFT_CARD",
            "HOTEL_AMENITIES",
            "JOIN",
            "PARKING_AVAILABLE",
            "RESTAURANT_PICKUP",
            "RETAIL_SERVICE_QUOTE",
            "RETAIL_STORE_DELIVERY",
            "RETAIL_STORE_PICKUP",
            "RETAIL_STORE_SHOP",
            "SERVICES",
            "SUPPORT",
        ]
    ] = None
    relationship: Optional[Literal["OWNER", "AUTHORIZED", "OTHER"]] = None
    phoneNumber: Optional[PhoneNumber] = None
    homePage: Optional[str] = None
    categories: Optional[List[str]] = None


class Data23(BaseModel):
    type: Literal["appClips"]
    id: str


class AppClip2(BaseModel):
    data: Optional[Data23] = None


class Data24(BaseModel):
    type: Literal["appClipAdvancedExperienceImages"]
    id: str


class HeaderImage2(BaseModel):
    data: Optional[Data24] = None


class Localizations2(BaseModel):
    data: Optional[List[Datum7]] = None


class Relationships14(BaseModel):
    appClip: Optional[AppClip2] = None
    headerImage: Optional[HeaderImage2] = None
    localizations: Optional[Localizations2] = None


class Attributes29(BaseModel):
    invocationUrls: Optional[List[AnyUrl]] = None


class Data25(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class AppClipDefaultExperience(BaseModel):
    data: Optional[Data25] = None


class Relationships15(BaseModel):
    appClipDefaultExperience: Optional[AppClipDefaultExperience] = None


class AppClipDefaultExperience1(BaseModel):
    data: Data25


class Relationships16(BaseModel):
    appClipDefaultExperience: AppClipDefaultExperience1


class Data26(BaseModel):
    type: Literal["appClipAppStoreReviewDetails"]
    attributes: Optional[Attributes29] = None
    relationships: Relationships16


class AppClipAppStoreReviewDetailCreateRequest(BaseModel):
    data: Data26


class Data28(BaseModel):
    type: Literal["appClipAppStoreReviewDetails"]
    id: str
    attributes: Optional[Attributes29] = None


class AppClipAppStoreReviewDetailUpdateRequest(BaseModel):
    data: Data28


class Attributes32(BaseModel):
    locale: Optional[str] = None
    subtitle: Optional[str] = None


class Data29(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class AppClipDefaultExperience2(BaseModel):
    data: Optional[Data29] = None


class Data30(BaseModel):
    type: Literal["appClipHeaderImages"]
    id: str


class Attributes33(BaseModel):
    locale: str
    subtitle: Optional[str] = None


class Data32(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class AppClipDefaultExperience3(BaseModel):
    data: Data32


class Relationships18(BaseModel):
    appClipDefaultExperience: AppClipDefaultExperience3


class Data31(BaseModel):
    type: Literal["appClipDefaultExperienceLocalizations"]
    attributes: Attributes33
    relationships: Relationships18


class AppClipDefaultExperienceLocalizationCreateRequest(BaseModel):
    data: Data31


class Attributes34(BaseModel):
    subtitle: Optional[str] = None


class Data33(BaseModel):
    type: Literal["appClipDefaultExperienceLocalizations"]
    id: str
    attributes: Optional[Attributes34] = None


class AppClipDefaultExperienceLocalizationUpdateRequest(BaseModel):
    data: Data33


class Data34(BaseModel):
    type: Literal["appClips"]
    id: str


class AppClip3(BaseModel):
    data: Optional[Data34] = None


class Data35(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Datum10(BaseModel):
    type: Literal["appClipDefaultExperienceLocalizations"]
    id: str


class Data36(BaseModel):
    type: Literal["appClipAppStoreReviewDetails"]
    id: str


class Data38(BaseModel):
    type: Literal["appClips"]
    id: str


class AppClip4(BaseModel):
    data: Data38


class Data39(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class ReleaseWithAppStoreVersion1(BaseModel):
    data: Optional[Data39] = None


class Data40(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class AppClipDefaultExperienceTemplate(BaseModel):
    data: Optional[Data40] = None


class Relationships20(BaseModel):
    appClip: AppClip4
    releaseWithAppStoreVersion: Optional[ReleaseWithAppStoreVersion1] = None
    appClipDefaultExperienceTemplate: Optional[AppClipDefaultExperienceTemplate] = None


class Data42(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class ReleaseWithAppStoreVersion2(BaseModel):
    data: Optional[Data42] = None


class Relationships21(BaseModel):
    releaseWithAppStoreVersion: Optional[ReleaseWithAppStoreVersion2] = None


class Domain(BaseModel):
    domain: Optional[str] = None
    isValid: Optional[bool] = None
    lastUpdatedDate: Optional[AwareDatetime] = None
    errorCode: Optional[
        Literal[
            "BAD_HTTP_RESPONSE",
            "BAD_JSON_CONTENT",
            "BAD_PKCS7_SIGNATURE",
            "CANNOT_REACH_AASA_FILE",
            "CROSS_SITE_REDIRECTS_FORBIDDEN",
            "DNS_ERROR",
            "INSECURE_REDIRECTS_FORBIDDEN",
            "INVALID_ENTITLEMENT_MISSING_SECTION",
            "INVALID_ENTITLEMENT_SYNTAX_ERROR",
            "INVALID_ENTITLEMENT_UNHANDLED_SECTION",
            "INVALID_ENTITLEMENT_UNKNOWN_ID",
            "NETWORK_ERROR",
            "NETWORK_ERROR_TEMPORARY",
            "OTHER_ERROR",
            "TIMEOUT",
            "TLS_ERROR",
            "TOO_MANY_REDIRECTS",
            "UNEXPECTED_ERROR",
        ]
    ] = None


class Attributes38(BaseModel):
    domains: Optional[List[Domain]] = None
    lastUpdatedDate: Optional[AwareDatetime] = None


class Data43(BaseModel):
    type: Literal["appClipDefaultExperienceLocalizations"]
    id: str


class AppClipDefaultExperienceLocalization1(BaseModel):
    data: Optional[Data43] = None


class Relationships22(BaseModel):
    appClipDefaultExperienceLocalization: Optional[
        AppClipDefaultExperienceLocalization1
    ] = None


class Attributes40(BaseModel):
    fileSize: int
    fileName: str


class AppClipDefaultExperienceLocalization2(BaseModel):
    data: Data43


class Relationships23(BaseModel):
    appClipDefaultExperienceLocalization: AppClipDefaultExperienceLocalization2


class Data44(BaseModel):
    type: Literal["appClipHeaderImages"]
    attributes: Attributes40
    relationships: Relationships23


class AppClipHeaderImageCreateRequest(BaseModel):
    data: Data44


class Attributes41(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data46(BaseModel):
    type: Literal["appClipHeaderImages"]
    id: str
    attributes: Optional[Attributes41] = None


class AppClipHeaderImageUpdateRequest(BaseModel):
    data: Data46


class Attributes42(BaseModel):
    bundleId: Optional[str] = None


class Data47(BaseModel):
    type: Literal["apps"]
    id: str


class App4(BaseModel):
    data: Optional[Data47] = None


class Datum11(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class Attributes43(BaseModel):
    locale: Optional[str] = None
    promotionalText: Optional[str] = None


class Data48(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str


class AppCustomProductPageVersion(BaseModel):
    data: Optional[Data48] = None


class Datum12(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class Datum13(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class Attributes44(BaseModel):
    locale: str
    promotionalText: Optional[str] = None


class AppCustomProductPageVersion1(BaseModel):
    data: Optional[Data48] = None


class Relationships26(BaseModel):
    appCustomProductPageVersion: Optional[AppCustomProductPageVersion1] = None


class AppCustomProductPageLocalizationInlineCreate(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: Optional[str] = None
    attributes: Attributes44
    relationships: Optional[Relationships26] = None


class AppCustomProductPageVersion2(BaseModel):
    data: Data48


class Relationships27(BaseModel):
    appCustomProductPageVersion: AppCustomProductPageVersion2


class Data50(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    attributes: Attributes44
    relationships: Relationships27


class AppCustomProductPageLocalizationCreateRequest(BaseModel):
    data: Data50


class Attributes46(BaseModel):
    promotionalText: Optional[str] = None


class Data52(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str
    attributes: Optional[Attributes46] = None


class AppCustomProductPageLocalizationUpdateRequest(BaseModel):
    data: Data52


class Attributes47(BaseModel):
    version: Optional[str] = None
    state: Optional[
        Literal[
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "ACCEPTED",
            "APPROVED",
            "REPLACED_WITH_NEW_VERSION",
            "REJECTED",
        ]
    ] = None
    deepLink: Optional[AnyUrl] = None


class Data53(BaseModel):
    type: Literal["appCustomProductPages"]
    id: str


class AppCustomProductPage(BaseModel):
    data: Optional[Data53] = None


class Datum14(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str


class Attributes48(BaseModel):
    deepLink: Optional[AnyUrl] = None


class AppCustomProductPage1(BaseModel):
    data: Optional[Data53] = None


class AppCustomProductPageLocalizations1(BaseModel):
    data: Optional[List[Datum14]] = None


class Relationships29(BaseModel):
    appCustomProductPage: Optional[AppCustomProductPage1] = None
    appCustomProductPageLocalizations: Optional[AppCustomProductPageLocalizations1] = (
        None
    )


class AppCustomProductPageVersionInlineCreate(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: Optional[str] = None
    attributes: Optional[Attributes48] = None
    relationships: Optional[Relationships29] = None


class AppCustomProductPage2(BaseModel):
    data: Data53


class AppCustomProductPageLocalizations2(BaseModel):
    data: Optional[List[Datum14]] = None


class Relationships30(BaseModel):
    appCustomProductPage: AppCustomProductPage2
    appCustomProductPageLocalizations: Optional[AppCustomProductPageLocalizations2] = (
        None
    )


class Data55(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    attributes: Optional[Attributes48] = None
    relationships: Relationships30


class AppCustomProductPageVersionCreateRequest(BaseModel):
    data: Data55


class Data57(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str
    attributes: Optional[Attributes48] = None


class AppCustomProductPageVersionUpdateRequest(BaseModel):
    data: Data57


class Attributes51(BaseModel):
    name: Optional[str] = None
    url: Optional[AnyUrl] = None
    visible: Optional[bool] = None


class Data58(BaseModel):
    type: Literal["apps"]
    id: str


class App5(BaseModel):
    data: Optional[Data58] = None


class Datum17(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str


class Attributes52(BaseModel):
    name: str


class App6(BaseModel):
    data: Data58


class AppCustomProductPageVersions1(BaseModel):
    data: Optional[List[Datum17]] = None


class Data61(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersionTemplate(BaseModel):
    data: Optional[Data61] = None


class Data62(BaseModel):
    type: Literal["appCustomProductPages"]
    id: str


class CustomProductPageTemplate(BaseModel):
    data: Optional[Data62] = None


class Relationships32(BaseModel):
    app: App6
    appCustomProductPageVersions: Optional[AppCustomProductPageVersions1] = None
    appStoreVersionTemplate: Optional[AppStoreVersionTemplate] = None
    customProductPageTemplate: Optional[CustomProductPageTemplate] = None


class Data59(BaseModel):
    type: Literal["appCustomProductPages"]
    attributes: Attributes52
    relationships: Relationships32


class AppCustomProductPageCreateRequest(BaseModel):
    data: Data59
    included: Optional[
        List[
            Union[
                AppCustomProductPageLocalizationInlineCreate,
                AppCustomProductPageVersionInlineCreate,
            ]
        ]
    ] = None


class Attributes53(BaseModel):
    name: Optional[str] = None
    visible: Optional[bool] = None


class Data63(BaseModel):
    type: Literal["appCustomProductPages"]
    id: str
    attributes: Optional[Attributes53] = None


class AppCustomProductPageUpdateRequest(BaseModel):
    data: Data63


class Attributes55(BaseModel):
    fileSize: int
    fileName: str


class Data65(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str


class AppEncryptionDeclaration(BaseModel):
    data: Data65


class Relationships33(BaseModel):
    appEncryptionDeclaration: AppEncryptionDeclaration


class Data64(BaseModel):
    type: Literal["appEncryptionDeclarationDocuments"]
    attributes: Attributes55
    relationships: Relationships33


class AppEncryptionDeclarationDocumentCreateRequest(BaseModel):
    data: Data64


class Attributes56(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data66(BaseModel):
    type: Literal["appEncryptionDeclarationDocuments"]
    id: str
    attributes: Optional[Attributes56] = None


class AppEncryptionDeclarationDocumentUpdateRequest(BaseModel):
    data: Data66


class Data67(BaseModel):
    type: Literal["apps"]
    id: str


class Datum19(BaseModel):
    type: Literal["builds"]
    id: str


class Data68(BaseModel):
    type: Literal["appEncryptionDeclarationDocuments"]
    id: str


class Attributes58(BaseModel):
    appDescription: str
    containsProprietaryCryptography: bool
    containsThirdPartyCryptography: bool
    availableOnFrenchStore: bool


class Data70(BaseModel):
    type: Literal["apps"]
    id: str


class App8(BaseModel):
    data: Data70


class Relationships35(BaseModel):
    app: App8


class Data69(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    attributes: Attributes58
    relationships: Relationships35


class AppEncryptionDeclarationCreateRequest(BaseModel):
    data: Data69


class Attributes59(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None
    shortDescription: Optional[str] = None
    longDescription: Optional[str] = None


class Data71(BaseModel):
    type: Literal["appEvents"]
    id: str


class AppEvent(BaseModel):
    data: Optional[Data71] = None


class Datum20(BaseModel):
    type: Literal["appEventScreenshots"]
    id: str


class Datum21(BaseModel):
    type: Literal["appEventVideoClips"]
    id: str


class Attributes60(BaseModel):
    locale: str
    name: Optional[str] = None
    shortDescription: Optional[str] = None
    longDescription: Optional[str] = None


class AppEvent1(BaseModel):
    data: Data71


class Relationships37(BaseModel):
    appEvent: AppEvent1


class Data72(BaseModel):
    type: Literal["appEventLocalizations"]
    attributes: Attributes60
    relationships: Relationships37


class AppEventLocalizationCreateRequest(BaseModel):
    data: Data72


class Attributes61(BaseModel):
    name: Optional[str] = None
    shortDescription: Optional[str] = None
    longDescription: Optional[str] = None


class Data74(BaseModel):
    type: Literal["appEventLocalizations"]
    id: str
    attributes: Optional[Attributes61] = None


class AppEventLocalizationUpdateRequest(BaseModel):
    data: Data74


class Data75(BaseModel):
    type: Literal["appEventLocalizations"]
    id: str


class AppEventLocalization1(BaseModel):
    data: Optional[Data75] = None


class Relationships38(BaseModel):
    appEventLocalization: Optional[AppEventLocalization1] = None


class AppEventLocalization2(BaseModel):
    data: Data75


class Relationships39(BaseModel):
    appEventLocalization: AppEventLocalization2


class Attributes64(BaseModel):
    uploaded: Optional[bool] = None


class Data78(BaseModel):
    type: Literal["appEventScreenshots"]
    id: str
    attributes: Optional[Attributes64] = None


class AppEventScreenshotUpdateRequest(BaseModel):
    data: Data78


class Data79(BaseModel):
    type: Literal["appEventLocalizations"]
    id: str


class AppEventLocalization3(BaseModel):
    data: Optional[Data79] = None


class Relationships40(BaseModel):
    appEventLocalization: Optional[AppEventLocalization3] = None


class AppEventLocalization4(BaseModel):
    data: Data79


class Relationships41(BaseModel):
    appEventLocalization: AppEventLocalization4


class Attributes67(BaseModel):
    previewFrameTimeCode: Optional[str] = None
    uploaded: Optional[bool] = None


class Data82(BaseModel):
    type: Literal["appEventVideoClips"]
    id: str
    attributes: Optional[Attributes67] = None


class AppEventVideoClipUpdateRequest(BaseModel):
    data: Data82


class TerritorySchedule(BaseModel):
    territories: Optional[List[str]] = None
    publishStart: Optional[AwareDatetime] = None
    eventStart: Optional[AwareDatetime] = None
    eventEnd: Optional[AwareDatetime] = None


class ArchivedTerritorySchedule(BaseModel):
    territories: Optional[List[str]] = None
    publishStart: Optional[AwareDatetime] = None
    eventStart: Optional[AwareDatetime] = None
    eventEnd: Optional[AwareDatetime] = None


class Attributes68(BaseModel):
    referenceName: Optional[str] = None
    badge: Optional[
        Literal[
            "LIVE_EVENT",
            "PREMIERE",
            "CHALLENGE",
            "COMPETITION",
            "NEW_SEASON",
            "MAJOR_UPDATE",
            "SPECIAL_EVENT",
        ]
    ] = None
    eventState: Optional[
        Literal[
            "DRAFT",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "REJECTED",
            "ACCEPTED",
            "APPROVED",
            "PUBLISHED",
            "PAST",
            "ARCHIVED",
        ]
    ] = None
    deepLink: Optional[AnyUrl] = None
    purchaseRequirement: Optional[str] = None
    primaryLocale: Optional[str] = None
    priority: Optional[Literal["HIGH", "NORMAL"]] = None
    purpose: Optional[
        Literal[
            "APPROPRIATE_FOR_ALL_USERS",
            "ATTRACT_NEW_USERS",
            "KEEP_ACTIVE_USERS_INFORMED",
            "BRING_BACK_LAPSED_USERS",
        ]
    ] = None
    territorySchedules: Optional[List[TerritorySchedule]] = None
    archivedTerritorySchedules: Optional[List[ArchivedTerritorySchedule]] = None


class Datum22(BaseModel):
    type: Literal["appEventLocalizations"]
    id: str


class Attributes69(BaseModel):
    referenceName: str
    badge: Optional[
        Literal[
            "LIVE_EVENT",
            "PREMIERE",
            "CHALLENGE",
            "COMPETITION",
            "NEW_SEASON",
            "MAJOR_UPDATE",
            "SPECIAL_EVENT",
        ]
    ] = None
    deepLink: Optional[AnyUrl] = None
    purchaseRequirement: Optional[str] = None
    primaryLocale: Optional[str] = None
    priority: Optional[Literal["HIGH", "NORMAL"]] = None
    purpose: Optional[
        Literal[
            "APPROPRIATE_FOR_ALL_USERS",
            "ATTRACT_NEW_USERS",
            "KEEP_ACTIVE_USERS_INFORMED",
            "BRING_BACK_LAPSED_USERS",
        ]
    ] = None
    territorySchedules: Optional[List[TerritorySchedule]] = None


class Data84(BaseModel):
    type: Literal["apps"]
    id: str


class App9(BaseModel):
    data: Data84


class Relationships43(BaseModel):
    app: App9


class Data83(BaseModel):
    type: Literal["appEvents"]
    attributes: Attributes69
    relationships: Relationships43


class AppEventCreateRequest(BaseModel):
    data: Data83


class Attributes70(BaseModel):
    referenceName: Optional[str] = None
    badge: Optional[
        Literal[
            "LIVE_EVENT",
            "PREMIERE",
            "CHALLENGE",
            "COMPETITION",
            "NEW_SEASON",
            "MAJOR_UPDATE",
            "SPECIAL_EVENT",
        ]
    ] = None
    deepLink: Optional[AnyUrl] = None
    purchaseRequirement: Optional[str] = None
    primaryLocale: Optional[str] = None
    priority: Optional[Literal["HIGH", "NORMAL"]] = None
    purpose: Optional[
        Literal[
            "APPROPRIATE_FOR_ALL_USERS",
            "ATTRACT_NEW_USERS",
            "KEEP_ACTIVE_USERS_INFORMED",
            "BRING_BACK_LAPSED_USERS",
        ]
    ] = None
    territorySchedules: Optional[List[TerritorySchedule]] = None


class Data85(BaseModel):
    type: Literal["appEvents"]
    id: str
    attributes: Optional[Attributes70] = None


class AppEventUpdateRequest(BaseModel):
    data: Data85


class Attributes71(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None
    subtitle: Optional[str] = None
    privacyPolicyUrl: Optional[str] = None
    privacyChoicesUrl: Optional[str] = None
    privacyPolicyText: Optional[str] = None


class Data86(BaseModel):
    type: Literal["appInfos"]
    id: str


class AppInfo(BaseModel):
    data: Optional[Data86] = None


class Relationships44(BaseModel):
    appInfo: Optional[AppInfo] = None


class Attributes72(BaseModel):
    locale: str
    name: str
    subtitle: Optional[str] = None
    privacyPolicyUrl: Optional[str] = None
    privacyChoicesUrl: Optional[str] = None
    privacyPolicyText: Optional[str] = None


class AppInfo1(BaseModel):
    data: Data86


class Relationships45(BaseModel):
    appInfo: AppInfo1


class Data87(BaseModel):
    type: Literal["appInfoLocalizations"]
    attributes: Attributes72
    relationships: Relationships45


class AppInfoLocalizationCreateRequest(BaseModel):
    data: Data87


class Attributes73(BaseModel):
    name: Optional[str] = None
    subtitle: Optional[str] = None
    privacyPolicyUrl: Optional[str] = None
    privacyChoicesUrl: Optional[str] = None
    privacyPolicyText: Optional[str] = None


class Data89(BaseModel):
    type: Literal["appInfoLocalizations"]
    id: str
    attributes: Optional[Attributes73] = None


class AppInfoLocalizationUpdateRequest(BaseModel):
    data: Data89


class Data90(BaseModel):
    type: Literal["apps"]
    id: str


class App10(BaseModel):
    data: Optional[Data90] = None


class Data91(BaseModel):
    type: Literal["ageRatingDeclarations"]
    id: str


class Datum23(BaseModel):
    type: Literal["appInfoLocalizations"]
    id: str


class Data92(BaseModel):
    type: Literal["appCategories"]
    id: str


class PrimaryCategory1(BaseModel):
    data: Optional[Data92] = None


class PrimarySubcategoryOne1(BaseModel):
    data: Optional[Data92] = None


class PrimarySubcategoryTwo1(BaseModel):
    data: Optional[Data92] = None


class SecondaryCategory1(BaseModel):
    data: Optional[Data92] = None


class SecondarySubcategoryOne1(BaseModel):
    data: Optional[Data92] = None


class SecondarySubcategoryTwo1(BaseModel):
    data: Optional[Data92] = None


class Relationships47(BaseModel):
    primaryCategory: Optional[PrimaryCategory1] = None
    primarySubcategoryOne: Optional[PrimarySubcategoryOne1] = None
    primarySubcategoryTwo: Optional[PrimarySubcategoryTwo1] = None
    secondaryCategory: Optional[SecondaryCategory1] = None
    secondarySubcategoryOne: Optional[SecondarySubcategoryOne1] = None
    secondarySubcategoryTwo: Optional[SecondarySubcategoryTwo1] = None


class Data98(BaseModel):
    type: Literal["appInfos"]
    id: str
    relationships: Optional[Relationships47] = None


class AppInfoUpdateRequest(BaseModel):
    data: Data98


class Data105(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class AppStoreVersionLocalization(BaseModel):
    data: Optional[Data105] = None


class Data106(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str


class AppCustomProductPageLocalization1(BaseModel):
    data: Optional[Data106] = None


class Data107(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str


class AppStoreVersionExperimentTreatmentLocalization(BaseModel):
    data: Optional[Data107] = None


class Datum24(BaseModel):
    type: Literal["appPreviews"]
    id: str


class Data109(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class AppStoreVersionLocalization1(BaseModel):
    data: Optional[Data109] = None


class Data110(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str


class AppCustomProductPageLocalization2(BaseModel):
    data: Optional[Data110] = None


class Data111(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str


class AppStoreVersionExperimentTreatmentLocalization1(BaseModel):
    data: Optional[Data111] = None


class Relationships49(BaseModel):
    appStoreVersionLocalization: Optional[AppStoreVersionLocalization1] = None
    appCustomProductPageLocalization: Optional[AppCustomProductPageLocalization2] = None
    appStoreVersionExperimentTreatmentLocalization: Optional[
        AppStoreVersionExperimentTreatmentLocalization1
    ] = None


class Data112(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class AppPreviewSet1(BaseModel):
    data: Optional[Data112] = None


class Relationships50(BaseModel):
    appPreviewSet: Optional[AppPreviewSet1] = None


class Attributes78(BaseModel):
    fileSize: int
    fileName: str
    previewFrameTimeCode: Optional[str] = None
    mimeType: Optional[str] = None


class AppPreviewSet2(BaseModel):
    data: Data112


class Relationships51(BaseModel):
    appPreviewSet: AppPreviewSet2


class Data113(BaseModel):
    type: Literal["appPreviews"]
    attributes: Attributes78
    relationships: Relationships51


class AppPreviewCreateRequest(BaseModel):
    data: Data113


class Attributes79(BaseModel):
    sourceFileChecksum: Optional[str] = None
    previewFrameTimeCode: Optional[str] = None
    uploaded: Optional[bool] = None


class Data115(BaseModel):
    type: Literal["appPreviews"]
    id: str
    attributes: Optional[Attributes79] = None


class AppPreviewUpdateRequest(BaseModel):
    data: Data115


class Attributes80(BaseModel):
    customerPrice: Optional[str] = None
    proceeds: Optional[str] = None


class Data116(BaseModel):
    type: Literal["apps"]
    id: str


class App11(BaseModel):
    data: Optional[Data116] = None


class Data117(BaseModel):
    type: Literal["territories"]
    id: str


class Territory(BaseModel):
    data: Optional[Data117] = None


class Data118(BaseModel):
    type: Literal["apps"]
    id: str


class App12(BaseModel):
    data: Optional[Data118] = None


class Data119(BaseModel):
    type: Literal["territories"]
    id: str


class Datum25(BaseModel):
    type: Literal["appPrices"]
    id: str


class Data121(BaseModel):
    type: Literal["apps"]
    id: str


class App13(BaseModel):
    data: Data121


class Data122(BaseModel):
    type: Literal["territories"]
    id: str


class BaseTerritory1(BaseModel):
    data: Data122


class ManualPrices1(BaseModel):
    data: List[Datum25]


class Relationships54(BaseModel):
    app: App13
    baseTerritory: BaseTerritory1
    manualPrices: ManualPrices1


class Data120(BaseModel):
    type: Literal["appPriceSchedules"]
    relationships: Relationships54


class Attributes81(BaseModel):
    manual: Optional[bool] = None
    startDate: Optional[date] = None
    endDate: Optional[date] = None


class Data123(BaseModel):
    type: Literal["appPricePoints"]
    id: str


class AppPricePoint(BaseModel):
    data: Optional[Data123] = None


class Data124(BaseModel):
    type: Literal["territories"]
    id: str


class Territory1(BaseModel):
    data: Optional[Data124] = None


class Relationships55(BaseModel):
    appPricePoint: Optional[AppPricePoint] = None
    territory: Optional[Territory1] = None


class AppPriceV2InlineCreate(BaseModel):
    type: Literal["appPrices"]
    id: Optional[str] = None


class Data125(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class AppStoreVersionLocalization2(BaseModel):
    data: Optional[Data125] = None


class Data126(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str


class AppCustomProductPageLocalization3(BaseModel):
    data: Optional[Data126] = None


class Data127(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str


class AppStoreVersionExperimentTreatmentLocalization2(BaseModel):
    data: Optional[Data127] = None


class Datum28(BaseModel):
    type: Literal["appScreenshots"]
    id: str


class Data129(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class AppStoreVersionLocalization3(BaseModel):
    data: Optional[Data129] = None


class Data130(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str


class AppCustomProductPageLocalization4(BaseModel):
    data: Optional[Data130] = None


class Data131(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str


class AppStoreVersionExperimentTreatmentLocalization3(BaseModel):
    data: Optional[Data131] = None


class Relationships57(BaseModel):
    appStoreVersionLocalization: Optional[AppStoreVersionLocalization3] = None
    appCustomProductPageLocalization: Optional[AppCustomProductPageLocalization4] = None
    appStoreVersionExperimentTreatmentLocalization: Optional[
        AppStoreVersionExperimentTreatmentLocalization3
    ] = None


class Data132(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class AppScreenshotSet1(BaseModel):
    data: Optional[Data132] = None


class Relationships58(BaseModel):
    appScreenshotSet: Optional[AppScreenshotSet1] = None


class Attributes85(BaseModel):
    fileSize: int
    fileName: str


class AppScreenshotSet2(BaseModel):
    data: Data132


class Relationships59(BaseModel):
    appScreenshotSet: AppScreenshotSet2


class Data133(BaseModel):
    type: Literal["appScreenshots"]
    attributes: Attributes85
    relationships: Relationships59


class AppScreenshotCreateRequest(BaseModel):
    data: Data133


class Attributes86(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data135(BaseModel):
    type: Literal["appScreenshots"]
    id: str
    attributes: Optional[Attributes86] = None


class AppScreenshotUpdateRequest(BaseModel):
    data: Data135


class Data136(BaseModel):
    type: Literal["appStoreReviewDetails"]
    id: str


class AppStoreReviewDetail(BaseModel):
    data: Optional[Data136] = None


class Relationships60(BaseModel):
    appStoreReviewDetail: Optional[AppStoreReviewDetail] = None


class Attributes88(BaseModel):
    fileSize: int
    fileName: str


class AppStoreReviewDetail1(BaseModel):
    data: Data136


class Relationships61(BaseModel):
    appStoreReviewDetail: AppStoreReviewDetail1


class Data137(BaseModel):
    type: Literal["appStoreReviewAttachments"]
    attributes: Attributes88
    relationships: Relationships61


class AppStoreReviewAttachmentCreateRequest(BaseModel):
    data: Data137


class Attributes89(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data139(BaseModel):
    type: Literal["appStoreReviewAttachments"]
    id: str
    attributes: Optional[Attributes89] = None


class AppStoreReviewAttachmentUpdateRequest(BaseModel):
    data: Data139


class Attributes90(BaseModel):
    contactFirstName: Optional[str] = None
    contactLastName: Optional[str] = None
    contactPhone: Optional[str] = None
    contactEmail: Optional[str] = None
    demoAccountName: Optional[str] = None
    demoAccountPassword: Optional[str] = None
    demoAccountRequired: Optional[bool] = None
    notes: Optional[str] = None


class Data140(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion1(BaseModel):
    data: Optional[Data140] = None


class Datum29(BaseModel):
    type: Literal["appStoreReviewAttachments"]
    id: str


class AppStoreVersion2(BaseModel):
    data: Data140


class Relationships63(BaseModel):
    appStoreVersion: AppStoreVersion2


class Data141(BaseModel):
    type: Literal["appStoreReviewDetails"]
    attributes: Optional[Attributes90] = None
    relationships: Relationships63


class AppStoreReviewDetailCreateRequest(BaseModel):
    data: Data141


class Data143(BaseModel):
    type: Literal["appStoreReviewDetails"]
    id: str
    attributes: Optional[Attributes90] = None


class AppStoreReviewDetailUpdateRequest(BaseModel):
    data: Data143


class Attributes93(BaseModel):
    locale: Optional[str] = None


class Data144(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    id: str


class AppStoreVersionExperimentTreatment(BaseModel):
    data: Optional[Data144] = None


class Datum30(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class Datum31(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class Attributes94(BaseModel):
    locale: str


class AppStoreVersionExperimentTreatment1(BaseModel):
    data: Data144


class Relationships65(BaseModel):
    appStoreVersionExperimentTreatment: AppStoreVersionExperimentTreatment1


class Data145(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    attributes: Attributes94
    relationships: Relationships65


class AppStoreVersionExperimentTreatmentLocalizationCreateRequest(BaseModel):
    data: Data145


class Data147(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class AppStoreVersionExperiment(BaseModel):
    data: Optional[Data147] = None


class AppStoreVersionExperimentV2(BaseModel):
    data: Optional[Data147] = None


class Datum32(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str


class Attributes96(BaseModel):
    name: str
    appIconName: Optional[str] = None


class AppStoreVersionExperiment1(BaseModel):
    data: Optional[Data147] = None


class AppStoreVersionExperimentV21(BaseModel):
    data: Optional[Data147] = None


class Relationships67(BaseModel):
    appStoreVersionExperiment: Optional[AppStoreVersionExperiment1] = None
    appStoreVersionExperimentV2: Optional[AppStoreVersionExperimentV21] = None


class Data149(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    attributes: Attributes96
    relationships: Optional[Relationships67] = None


class AppStoreVersionExperimentTreatmentCreateRequest(BaseModel):
    data: Data149


class Attributes97(BaseModel):
    name: Optional[str] = None
    appIconName: Optional[str] = None


class Data152(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    id: str
    attributes: Optional[Attributes97] = None


class AppStoreVersionExperimentTreatmentUpdateRequest(BaseModel):
    data: Data152


class Data153(BaseModel):
    type: Literal["apps"]
    id: str


class App14(BaseModel):
    data: Optional[Data153] = None


class Data154(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class LatestControlVersion(BaseModel):
    data: Optional[Data154] = None


class Datum33(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Datum34(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    id: str


class Data156(BaseModel):
    type: Literal["apps"]
    id: str


class App15(BaseModel):
    data: Data156


class Relationships69(BaseModel):
    app: App15


class Attributes100(BaseModel):
    name: Optional[str] = None
    trafficProportion: Optional[int] = None
    started: Optional[bool] = None


class Data157(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str
    attributes: Optional[Attributes100] = None


class AppStoreVersionExperimentV2UpdateRequest(BaseModel):
    data: Data157


class Attributes101(BaseModel):
    name: Optional[str] = None
    trafficProportion: Optional[int] = None
    state: Optional[
        Literal[
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "ACCEPTED",
            "APPROVED",
            "REJECTED",
            "COMPLETED",
            "STOPPED",
        ]
    ] = None
    reviewRequired: Optional[bool] = None
    startDate: Optional[AwareDatetime] = None
    endDate: Optional[AwareDatetime] = None


class Data158(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion3(BaseModel):
    data: Optional[Data158] = None


class Attributes102(BaseModel):
    name: str
    trafficProportion: int


class AppStoreVersion4(BaseModel):
    data: Data158


class Relationships71(BaseModel):
    appStoreVersion: AppStoreVersion4


class Data159(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    attributes: Attributes102
    relationships: Relationships71


class AppStoreVersionExperimentCreateRequest(BaseModel):
    data: Data159


class Attributes103(BaseModel):
    name: Optional[str] = None
    trafficProportion: Optional[int] = None
    started: Optional[bool] = None


class Data161(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str
    attributes: Optional[Attributes103] = None


class AppStoreVersionExperimentUpdateRequest(BaseModel):
    data: Data161


class Attributes104(BaseModel):
    description: Optional[str] = None
    locale: Optional[str] = None
    keywords: Optional[str] = None
    marketingUrl: Optional[AnyUrl] = None
    promotionalText: Optional[str] = None
    supportUrl: Optional[AnyUrl] = None
    whatsNew: Optional[str] = None


class Data162(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion5(BaseModel):
    data: Optional[Data162] = None


class Datum36(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class Datum37(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class Attributes105(BaseModel):
    description: Optional[str] = None
    locale: str
    keywords: Optional[str] = None
    marketingUrl: Optional[AnyUrl] = None
    promotionalText: Optional[str] = None
    supportUrl: Optional[AnyUrl] = None
    whatsNew: Optional[str] = None


class AppStoreVersion6(BaseModel):
    data: Data162


class Relationships73(BaseModel):
    appStoreVersion: AppStoreVersion6


class Data163(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    attributes: Attributes105
    relationships: Relationships73


class AppStoreVersionLocalizationCreateRequest(BaseModel):
    data: Data163


class Attributes106(BaseModel):
    description: Optional[str] = None
    keywords: Optional[str] = None
    marketingUrl: Optional[AnyUrl] = None
    promotionalText: Optional[str] = None
    supportUrl: Optional[AnyUrl] = None
    whatsNew: Optional[str] = None


class Data165(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str
    attributes: Optional[Attributes106] = None


class AppStoreVersionLocalizationUpdateRequest(BaseModel):
    data: Data165


class Data167(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion7(BaseModel):
    data: Data167


class Relationships74(BaseModel):
    appStoreVersion: AppStoreVersion7


class AppStoreVersion8(BaseModel):
    data: Data167


class Data171(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    id: str


class AppStoreVersionExperimentTreatment2(BaseModel):
    data: Data171


class Relationships75(BaseModel):
    appStoreVersion: AppStoreVersion8
    appStoreVersionExperimentTreatment: AppStoreVersionExperimentTreatment2


class Data169(BaseModel):
    type: Literal["appStoreVersionPromotions"]
    relationships: Relationships75


class AppStoreVersionPromotionCreateRequest(BaseModel):
    data: Data169


class Data173(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion9(BaseModel):
    data: Data173


class Relationships76(BaseModel):
    appStoreVersion: AppStoreVersion9


class Data172(BaseModel):
    type: Literal["appStoreVersionReleaseRequests"]
    relationships: Relationships76


class AppStoreVersionReleaseRequestCreateRequest(BaseModel):
    data: Data172


class Data174(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion10(BaseModel):
    data: Optional[Data174] = None


class Relationships77(BaseModel):
    appStoreVersion: Optional[AppStoreVersion10] = None


class Data175(BaseModel):
    type: Literal["apps"]
    id: str


class App16(BaseModel):
    data: Optional[Data175] = None


class Data176(BaseModel):
    type: Literal["ageRatingDeclarations"]
    id: str


class Datum38(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class Data177(BaseModel):
    type: Literal["builds"]
    id: str


class Data178(BaseModel):
    type: Literal["appStoreVersionPhasedReleases"]
    id: str


class Data179(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str


class Data180(BaseModel):
    type: Literal["routingAppCoverages"]
    id: str


class Data181(BaseModel):
    type: Literal["appStoreReviewDetails"]
    id: str


class Data182(BaseModel):
    type: Literal["appStoreVersionSubmissions"]
    id: str


class Data183(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class Datum39(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class Data184(BaseModel):
    type: Literal["alternativeDistributionPackages"]
    id: str


class Data186(BaseModel):
    type: Literal["apps"]
    id: str


class App17(BaseModel):
    data: Data186


class Datum41(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class AppStoreVersionLocalizations1(BaseModel):
    data: Optional[List[Datum41]] = None


class Data187(BaseModel):
    type: Literal["builds"]
    id: str


class Build2(BaseModel):
    data: Optional[Data187] = None


class Relationships79(BaseModel):
    app: App17
    appStoreVersionLocalizations: Optional[AppStoreVersionLocalizations1] = None
    build: Optional[Build2] = None


class Attributes112(BaseModel):
    versionString: Optional[str] = None
    copyright: Optional[str] = None
    reviewType: Optional[Literal["APP_STORE", "NOTARIZATION"]] = None
    releaseType: Optional[Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]] = None
    earliestReleaseDate: Optional[AwareDatetime] = None
    usesIdfa: Optional[bool] = None
    downloadable: Optional[bool] = None


class Build3(BaseModel):
    data: Optional[Data187] = None


class Data190(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class AppClipDefaultExperience5(BaseModel):
    data: Optional[Data190] = None


class Relationships80(BaseModel):
    build: Optional[Build3] = None
    appClipDefaultExperience: Optional[AppClipDefaultExperience5] = None


class Data188(BaseModel):
    type: Literal["appStoreVersions"]
    id: str
    attributes: Optional[Attributes112] = None
    relationships: Optional[Relationships80] = None


class AppStoreVersionUpdateRequest(BaseModel):
    data: Data188


class Datum42(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str


class Data191(BaseModel):
    type: Literal["ciProducts"]
    id: str


class Datum43(BaseModel):
    type: Literal["betaGroups"]
    id: str


class Datum44(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Datum45(BaseModel):
    type: Literal["preReleaseVersions"]
    id: str


class Datum46(BaseModel):
    type: Literal["betaAppLocalizations"]
    id: str


class Datum47(BaseModel):
    type: Literal["builds"]
    id: str


class Data192(BaseModel):
    type: Literal["betaLicenseAgreements"]
    id: str


class Data193(BaseModel):
    type: Literal["betaAppReviewDetails"]
    id: str


class Datum48(BaseModel):
    type: Literal["appInfos"]
    id: str


class Datum49(BaseModel):
    type: Literal["appClips"]
    id: str


class Data194(BaseModel):
    type: Literal["endUserLicenseAgreements"]
    id: str


class Datum50(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class Datum51(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str


class Datum52(BaseModel):
    type: Literal["gameCenterEnabledVersions"]
    id: str


class Datum53(BaseModel):
    type: Literal["appCustomProductPages"]
    id: str


class Datum54(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class Datum55(BaseModel):
    type: Literal["promotedPurchases"]
    id: str


class Datum56(BaseModel):
    type: Literal["appEvents"]
    id: str


class Datum57(BaseModel):
    type: Literal["reviewSubmissions"]
    id: str


class Data195(BaseModel):
    type: Literal["subscriptionGracePeriods"]
    id: str


class Data196(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class Datum58(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class Attributes116(BaseModel):
    assetType: Literal["ASSET", "MANIFEST"]
    fileName: str
    fileSize: conint(ge=1, le=9007199254740991)


class Data199(BaseModel):
    type: Literal["backgroundAssetVersions"]
    id: str


class BackgroundAssetVersion(BaseModel):
    data: Data199


class Relationships82(BaseModel):
    backgroundAssetVersion: BackgroundAssetVersion


class Data198(BaseModel):
    type: Literal["backgroundAssetUploadFiles"]
    attributes: Attributes116
    relationships: Relationships82


class BackgroundAssetUploadFileCreateRequest(BaseModel):
    data: Data198


class Attributes117(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data200(BaseModel):
    type: Literal["backgroundAssetUploadFiles"]
    id: str
    attributes: Optional[Attributes117] = None


class BackgroundAssetUploadFileUpdateRequest(BaseModel):
    data: Data200


class Attributes118(BaseModel):
    state: Optional[Literal["READY_FOR_TESTING", "SUPERSEDED"]] = None


class Data201(BaseModel):
    type: Literal["backgroundAssetVersions"]
    id: str


class BackgroundAssetVersion1(BaseModel):
    data: Optional[Data201] = None


class Relationships83(BaseModel):
    backgroundAssetVersion: Optional[BackgroundAssetVersion1] = None


class Data202(BaseModel):
    type: Literal["backgroundAssetVersionInternalBetaReleases"]
    id: str


class InternalBetaRelease(BaseModel):
    data: Optional[Data202] = None


class Data203(BaseModel):
    type: Literal["backgroundAssetUploadFiles"]
    id: str


class AssetFile(BaseModel):
    data: Optional[Data203] = None


class ManifestFile(BaseModel):
    data: Optional[Data203] = None


class Data206(BaseModel):
    type: Literal["backgroundAssets"]
    id: str


class BackgroundAsset(BaseModel):
    data: Data206


class Relationships85(BaseModel):
    backgroundAsset: BackgroundAsset


class Data205(BaseModel):
    type: Literal["backgroundAssetVersions"]
    relationships: Relationships85


class BackgroundAssetVersionCreateRequest(BaseModel):
    data: Data205


class Attributes120(BaseModel):
    assetPackIdentifier: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None


class Data207(BaseModel):
    type: Literal["backgroundAssetVersions"]
    id: str


class InternalBetaVersion(BaseModel):
    data: Optional[Data207] = None


class Attributes121(BaseModel):
    assetPackIdentifier: str


class Data209(BaseModel):
    type: Literal["apps"]
    id: str


class App18(BaseModel):
    data: Data209


class Relationships87(BaseModel):
    app: App18


class Data208(BaseModel):
    type: Literal["backgroundAssets"]
    attributes: Attributes121
    relationships: Relationships87


class BackgroundAssetCreateRequest(BaseModel):
    data: Data208


class Attributes122(BaseModel):
    title: Optional[str] = None
    locale: Optional[str] = None


class Attributes123(BaseModel):
    title: str
    locale: str


class Data210(BaseModel):
    type: Literal["betaAppClipInvocations"]
    id: str


class BetaAppClipInvocation(BaseModel):
    data: Optional[Data210] = None


class Relationships88(BaseModel):
    betaAppClipInvocation: Optional[BetaAppClipInvocation] = None


class BetaAppClipInvocationLocalizationInlineCreate(BaseModel):
    type: Literal["betaAppClipInvocationLocalizations"]
    id: Optional[str] = None
    attributes: Attributes123
    relationships: Optional[Relationships88] = None


class BetaAppClipInvocation1(BaseModel):
    data: Data210


class Relationships89(BaseModel):
    betaAppClipInvocation: BetaAppClipInvocation1


class Data211(BaseModel):
    type: Literal["betaAppClipInvocationLocalizations"]
    attributes: Attributes123
    relationships: Relationships89


class BetaAppClipInvocationLocalizationCreateRequest(BaseModel):
    data: Data211


class Attributes125(BaseModel):
    title: Optional[str] = None


class Data213(BaseModel):
    type: Literal["betaAppClipInvocationLocalizations"]
    id: str
    attributes: Optional[Attributes125] = None


class BetaAppClipInvocationLocalizationUpdateRequest(BaseModel):
    data: Data213


class Attributes126(BaseModel):
    url: Optional[AnyUrl] = None


class Datum59(BaseModel):
    type: Literal["betaAppClipInvocationLocalizations"]
    id: str


class Attributes127(BaseModel):
    url: AnyUrl


class Data215(BaseModel):
    type: Literal["buildBundles"]
    id: str


class BuildBundle(BaseModel):
    data: Data215


class BetaAppClipInvocationLocalizations1(BaseModel):
    data: List[Datum59]


class Relationships91(BaseModel):
    buildBundle: BuildBundle
    betaAppClipInvocationLocalizations: BetaAppClipInvocationLocalizations1


class Data214(BaseModel):
    type: Literal["betaAppClipInvocations"]
    attributes: Attributes127
    relationships: Relationships91


class BetaAppClipInvocationCreateRequest(BaseModel):
    data: Data214
    included: Optional[List[BetaAppClipInvocationLocalizationInlineCreate]] = None


class Attributes128(BaseModel):
    url: Optional[AnyUrl] = None


class Data216(BaseModel):
    type: Literal["betaAppClipInvocations"]
    id: str
    attributes: Optional[Attributes128] = None


class BetaAppClipInvocationUpdateRequest(BaseModel):
    data: Data216


class Attributes129(BaseModel):
    feedbackEmail: Optional[str] = None
    marketingUrl: Optional[str] = None
    privacyPolicyUrl: Optional[str] = None
    tvOsPrivacyPolicy: Optional[str] = None
    description: Optional[str] = None
    locale: Optional[str] = None


class Data217(BaseModel):
    type: Literal["apps"]
    id: str


class Attributes130(BaseModel):
    feedbackEmail: Optional[str] = None
    marketingUrl: Optional[str] = None
    privacyPolicyUrl: Optional[str] = None
    tvOsPrivacyPolicy: Optional[str] = None
    description: Optional[str] = None
    locale: str


class App20(BaseModel):
    data: Data217


class Relationships93(BaseModel):
    app: App20


class Data218(BaseModel):
    type: Literal["betaAppLocalizations"]
    attributes: Attributes130
    relationships: Relationships93


class BetaAppLocalizationCreateRequest(BaseModel):
    data: Data218


class Attributes131(BaseModel):
    feedbackEmail: Optional[str] = None
    marketingUrl: Optional[str] = None
    privacyPolicyUrl: Optional[str] = None
    tvOsPrivacyPolicy: Optional[str] = None
    description: Optional[str] = None


class Data220(BaseModel):
    type: Literal["betaAppLocalizations"]
    id: str
    attributes: Optional[Attributes131] = None


class BetaAppLocalizationUpdateRequest(BaseModel):
    data: Data220


class Attributes132(BaseModel):
    contactFirstName: Optional[str] = None
    contactLastName: Optional[str] = None
    contactPhone: Optional[str] = None
    contactEmail: Optional[str] = None
    demoAccountName: Optional[str] = None
    demoAccountPassword: Optional[str] = None
    demoAccountRequired: Optional[bool] = None
    notes: Optional[str] = None


class Data221(BaseModel):
    type: Literal["apps"]
    id: str


class Data222(BaseModel):
    type: Literal["betaAppReviewDetails"]
    id: str
    attributes: Optional[Attributes132] = None


class BetaAppReviewDetailUpdateRequest(BaseModel):
    data: Data222


class Data223(BaseModel):
    type: Literal["builds"]
    id: str


class Build5(BaseModel):
    data: Data223


class Relationships96(BaseModel):
    build: Build5


class Data224(BaseModel):
    type: Literal["betaAppReviewSubmissions"]
    relationships: Relationships96


class BetaAppReviewSubmissionCreateRequest(BaseModel):
    data: Data224


class Attributes135(BaseModel):
    whatsNew: Optional[str] = None
    locale: Optional[str] = None


class Data226(BaseModel):
    type: Literal["builds"]
    id: str


class Attributes136(BaseModel):
    whatsNew: Optional[str] = None
    locale: str


class Build7(BaseModel):
    data: Data226


class Relationships98(BaseModel):
    build: Build7


class Data227(BaseModel):
    type: Literal["betaBuildLocalizations"]
    attributes: Attributes136
    relationships: Relationships98


class BetaBuildLocalizationCreateRequest(BaseModel):
    data: Data227


class Attributes137(BaseModel):
    whatsNew: Optional[str] = None


class Data229(BaseModel):
    type: Literal["betaBuildLocalizations"]
    id: str
    attributes: Optional[Attributes137] = None


class BetaBuildLocalizationUpdateRequest(BaseModel):
    data: Data229


class Attributes138(BaseModel):
    logText: Optional[str] = None


class Data230(BaseModel):
    type: Literal["builds"]
    id: str


class Build8(BaseModel):
    data: Optional[Data230] = None


class Data231(BaseModel):
    type: Literal["betaTesters"]
    id: str


class Tester(BaseModel):
    data: Optional[Data231] = None


class Data232(BaseModel):
    type: Literal["builds"]
    id: str


class Build9(BaseModel):
    data: Optional[Data232] = None


class Data233(BaseModel):
    type: Literal["betaTesters"]
    id: str


class Tester1(BaseModel):
    data: Optional[Data233] = None


class Relationships100(BaseModel):
    build: Optional[Build9] = None
    tester: Optional[Tester1] = None


class Attributes141(BaseModel):
    name: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None
    isInternalGroup: Optional[bool] = None
    hasAccessToAllBuilds: Optional[bool] = None
    publicLinkEnabled: Optional[bool] = None
    publicLinkId: Optional[str] = None
    publicLinkLimitEnabled: Optional[bool] = None
    publicLinkLimit: Optional[int] = None
    publicLink: Optional[str] = None
    feedbackEnabled: Optional[bool] = None
    iosBuildsAvailableForAppleSiliconMac: Optional[bool] = None
    iosBuildsAvailableForAppleVision: Optional[bool] = None


class Data234(BaseModel):
    type: Literal["apps"]
    id: str


class Datum61(BaseModel):
    type: Literal["builds"]
    id: str


class Datum62(BaseModel):
    type: Literal["betaTesters"]
    id: str


class Data235(BaseModel):
    type: Literal["betaRecruitmentCriteria"]
    id: str


class Attributes142(BaseModel):
    name: str
    isInternalGroup: Optional[bool] = None
    hasAccessToAllBuilds: Optional[bool] = None
    publicLinkEnabled: Optional[bool] = None
    publicLinkLimitEnabled: Optional[bool] = None
    publicLinkLimit: Optional[int] = None
    feedbackEnabled: Optional[bool] = None


class Data237(BaseModel):
    type: Literal["apps"]
    id: str


class App23(BaseModel):
    data: Data237


class Datum63(BaseModel):
    type: Literal["builds"]
    id: str


class Builds3(BaseModel):
    data: Optional[List[Datum63]] = None


class Datum64(BaseModel):
    type: Literal["betaTesters"]
    id: str


class BetaTesters2(BaseModel):
    data: Optional[List[Datum64]] = None


class Relationships102(BaseModel):
    app: App23
    builds: Optional[Builds3] = None
    betaTesters: Optional[BetaTesters2] = None


class Data236(BaseModel):
    type: Literal["betaGroups"]
    attributes: Attributes142
    relationships: Relationships102


class BetaGroupCreateRequest(BaseModel):
    data: Data236


class Attributes143(BaseModel):
    name: Optional[str] = None
    publicLinkEnabled: Optional[bool] = None
    publicLinkLimitEnabled: Optional[bool] = None
    publicLinkLimit: Optional[int] = None
    feedbackEnabled: Optional[bool] = None
    iosBuildsAvailableForAppleSiliconMac: Optional[bool] = None
    iosBuildsAvailableForAppleVision: Optional[bool] = None


class Data238(BaseModel):
    type: Literal["betaGroups"]
    id: str
    attributes: Optional[Attributes143] = None


class BetaGroupUpdateRequest(BaseModel):
    data: Data238


class Attributes144(BaseModel):
    agreementText: Optional[str] = None


class Data239(BaseModel):
    type: Literal["apps"]
    id: str


class Data240(BaseModel):
    type: Literal["betaLicenseAgreements"]
    id: str
    attributes: Optional[Attributes144] = None


class BetaLicenseAgreementUpdateRequest(BaseModel):
    data: Data240


class Data242(BaseModel):
    type: Literal["betaGroups"]
    id: str


class BetaGroup1(BaseModel):
    data: Data242


class Relationships104(BaseModel):
    betaGroup: BetaGroup1


class Attributes149(BaseModel):
    hasCompatibleBuild: Optional[bool] = None


class Data245(BaseModel):
    type: Literal["betaTesters"]
    id: str


class BetaTester1(BaseModel):
    data: Optional[Data245] = None


class Data246(BaseModel):
    type: Literal["apps"]
    id: str


class App25(BaseModel):
    data: Data246


class Relationships105(BaseModel):
    betaTester: Optional[BetaTester1] = None
    app: App25


class Data244(BaseModel):
    type: Literal["betaTesterInvitations"]
    relationships: Relationships105


class BetaTesterInvitationCreateRequest(BaseModel):
    data: Data244


class Datum65(BaseModel):
    type: Literal["apps"]
    id: str


class Datum66(BaseModel):
    type: Literal["betaGroups"]
    id: str


class Datum67(BaseModel):
    type: Literal["builds"]
    id: str


class Attributes152(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: EmailStr


class Datum68(BaseModel):
    type: Literal["betaGroups"]
    id: str


class BetaGroups2(BaseModel):
    data: Optional[List[Datum68]] = None


class Datum69(BaseModel):
    type: Literal["builds"]
    id: str


class Builds5(BaseModel):
    data: Optional[List[Datum69]] = None


class Relationships107(BaseModel):
    betaGroups: Optional[BetaGroups2] = None
    builds: Optional[Builds5] = None


class Data247(BaseModel):
    type: Literal["betaTesters"]
    attributes: Attributes152
    relationships: Optional[Relationships107] = None


class BetaTesterCreateRequest(BaseModel):
    data: Data247


class Data248(BaseModel):
    type: Literal["builds"]
    id: str


class Attributes154(BaseModel):
    autoNotifyEnabled: Optional[bool] = None


class Data249(BaseModel):
    type: Literal["buildBetaDetails"]
    id: str
    attributes: Optional[Attributes154] = None


class BuildBetaDetailUpdateRequest(BaseModel):
    data: Data249


class Data251(BaseModel):
    type: Literal["builds"]
    id: str


class Build11(BaseModel):
    data: Data251


class Relationships109(BaseModel):
    build: Build11


class Data250(BaseModel):
    type: Literal["buildBetaNotifications"]
    relationships: Relationships109


class BuildBetaNotificationCreateRequest(BaseModel):
    data: Data250


class Attributes155(BaseModel):
    deviceModel: Optional[str] = None
    osVersion: Optional[str] = None
    downloadBytes: Optional[int] = None
    installBytes: Optional[int] = None


class Data252(BaseModel):
    type: Literal["appClipDomainStatuses"]
    id: str


class Datum70(BaseModel):
    type: Literal["betaAppClipInvocations"]
    id: str


class Datum71(BaseModel):
    type: Literal["buildBundleFileSizes"]
    id: str


class Data254(BaseModel):
    type: Literal["preReleaseVersions"]
    id: str


class Datum72(BaseModel):
    type: Literal["betaTesters"]
    id: str


class Datum73(BaseModel):
    type: Literal["betaGroups"]
    id: str


class Datum74(BaseModel):
    type: Literal["betaBuildLocalizations"]
    id: str


class Data255(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str


class Data256(BaseModel):
    type: Literal["betaAppReviewSubmissions"]
    id: str


class Data257(BaseModel):
    type: Literal["apps"]
    id: str


class Data258(BaseModel):
    type: Literal["buildBetaDetails"]
    id: str


class Data259(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Datum75(BaseModel):
    type: Literal["buildIcons"]
    id: str


class Datum76(BaseModel):
    type: Literal["buildBundles"]
    id: str


class Attributes159(BaseModel):
    expired: Optional[bool] = None
    usesNonExemptEncryption: Optional[bool] = None


class Data261(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str


class AppEncryptionDeclaration3(BaseModel):
    data: Optional[Data261] = None


class Relationships112(BaseModel):
    appEncryptionDeclaration: Optional[AppEncryptionDeclaration3] = None


class Data260(BaseModel):
    type: Literal["builds"]
    id: str
    attributes: Optional[Attributes159] = None
    relationships: Optional[Relationships112] = None


class BuildUpdateRequest(BaseModel):
    data: Data260


class Data263(BaseModel):
    type: Literal["bundleIds"]
    id: str


class BundleId(BaseModel):
    data: Data263


class Relationships113(BaseModel):
    bundleId: BundleId


class Datum77(BaseModel):
    type: Literal["profiles"]
    id: str


class Datum78(BaseModel):
    type: Literal["bundleIdCapabilities"]
    id: str


class Data265(BaseModel):
    type: Literal["apps"]
    id: str


class Attributes165(BaseModel):
    name: Optional[str] = None


class Data267(BaseModel):
    type: Literal["bundleIds"]
    id: str
    attributes: Optional[Attributes165] = None


class BundleIdUpdateRequest(BaseModel):
    data: Data267


class Data268(BaseModel):
    type: Literal["passTypeIds"]
    id: str


class Data270(BaseModel):
    type: Literal["merchantIds"]
    id: str


class MerchantId(BaseModel):
    data: Optional[Data270] = None


class Data271(BaseModel):
    type: Literal["passTypeIds"]
    id: str


class PassTypeId1(BaseModel):
    data: Optional[Data271] = None


class Relationships116(BaseModel):
    merchantId: Optional[MerchantId] = None
    passTypeId: Optional[PassTypeId1] = None


class Attributes168(BaseModel):
    activated: Optional[bool] = None


class Data272(BaseModel):
    type: Literal["certificates"]
    id: str
    attributes: Optional[Attributes168] = None


class CertificateUpdateRequest(BaseModel):
    data: Data272


class Attributes169(BaseModel):
    fileType: Optional[
        Literal[
            "ARCHIVE",
            "ARCHIVE_EXPORT",
            "LOG_BUNDLE",
            "RESULT_BUNDLE",
            "TEST_PRODUCTS",
            "XCODEBUILD_PRODUCTS",
            "STAPLED_NOTARIZED_ARCHIVE",
        ]
    ] = None
    fileName: Optional[str] = None
    fileSize: Optional[int] = None
    downloadUrl: Optional[AnyUrl] = None


class Data273(BaseModel):
    type: Literal["ciBuildRuns"]
    id: str


class Datum79(BaseModel):
    type: Literal["builds"]
    id: str


class Data274(BaseModel):
    type: Literal["ciWorkflows"]
    id: str


class Workflow(BaseModel):
    data: Optional[Data274] = None


class Data275(BaseModel):
    type: Literal["ciProducts"]
    id: str


class Product(BaseModel):
    data: Optional[Data275] = None


class Data276(BaseModel):
    type: Literal["scmGitReferences"]
    id: str


class SourceBranchOrTag(BaseModel):
    data: Optional[Data276] = None


class DestinationBranch(BaseModel):
    data: Optional[Data276] = None


class Data278(BaseModel):
    type: Literal["scmPullRequests"]
    id: str


class PullRequest(BaseModel):
    data: Optional[Data278] = None


class Attributes172(BaseModel):
    clean: Optional[bool] = None


class Data280(BaseModel):
    type: Literal["ciBuildRuns"]
    id: str


class BuildRun1(BaseModel):
    data: Optional[Data280] = None


class Data281(BaseModel):
    type: Literal["ciWorkflows"]
    id: str


class Workflow1(BaseModel):
    data: Optional[Data281] = None


class Data282(BaseModel):
    type: Literal["scmGitReferences"]
    id: str


class SourceBranchOrTag1(BaseModel):
    data: Optional[Data282] = None


class Data283(BaseModel):
    type: Literal["scmPullRequests"]
    id: str


class PullRequest1(BaseModel):
    data: Optional[Data283] = None


class Relationships119(BaseModel):
    buildRun: Optional[BuildRun1] = None
    workflow: Optional[Workflow1] = None
    sourceBranchOrTag: Optional[SourceBranchOrTag1] = None
    pullRequest: Optional[PullRequest1] = None


class Data279(BaseModel):
    type: Literal["ciBuildRuns"]
    attributes: Optional[Attributes172] = None
    relationships: Optional[Relationships119] = None


class CiBuildRunCreateRequest(BaseModel):
    data: Data279


class Attributes174(BaseModel):
    version: Optional[str] = None
    name: Optional[str] = None


class Datum80(BaseModel):
    type: Literal["ciXcodeVersions"]
    id: str


class Attributes175(BaseModel):
    name: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None
    productType: Optional[Literal["APP", "FRAMEWORK"]] = None


class Data284(BaseModel):
    type: Literal["apps"]
    id: str


class Data285(BaseModel):
    type: Literal["bundleIds"]
    id: str


class BundleId2(BaseModel):
    data: Optional[Data285] = None


class Datum81(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Data286(BaseModel):
    type: Literal["ciProducts"]
    id: str


class Product1(BaseModel):
    data: Optional[Data286] = None


class Data287(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Data288(BaseModel):
    type: Literal["ciXcodeVersions"]
    id: str


class XcodeVersion(BaseModel):
    data: Optional[Data288] = None


class Data289(BaseModel):
    type: Literal["ciMacOsVersions"]
    id: str


class MacOsVersion(BaseModel):
    data: Optional[Data289] = None


class Data291(BaseModel):
    type: Literal["ciProducts"]
    id: str


class Product2(BaseModel):
    data: Data291


class Data292(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Repository1(BaseModel):
    data: Data292


class Data293(BaseModel):
    type: Literal["ciXcodeVersions"]
    id: str


class XcodeVersion1(BaseModel):
    data: Data293


class Data294(BaseModel):
    type: Literal["ciMacOsVersions"]
    id: str


class MacOsVersion1(BaseModel):
    data: Data294


class Relationships123(BaseModel):
    product: Product2
    repository: Repository1
    xcodeVersion: XcodeVersion1
    macOsVersion: MacOsVersion1


class Data296(BaseModel):
    type: Literal["ciXcodeVersions"]
    id: str


class XcodeVersion2(BaseModel):
    data: Optional[Data296] = None


class Data297(BaseModel):
    type: Literal["ciMacOsVersions"]
    id: str


class MacOsVersion2(BaseModel):
    data: Optional[Data297] = None


class Relationships124(BaseModel):
    xcodeVersion: Optional[XcodeVersion2] = None
    macOsVersion: Optional[MacOsVersion2] = None


class AvailableRuntime(BaseModel):
    runtimeName: Optional[str] = None
    runtimeIdentifier: Optional[str] = None


class Datum82(BaseModel):
    type: Literal["ciMacOsVersions"]
    id: str


class Attributes181(BaseModel):
    responseBody: Optional[str] = None
    lastModifiedDate: Optional[AwareDatetime] = None
    state: Optional[Literal["PUBLISHED", "PENDING_PUBLISH"]] = None


class Data298(BaseModel):
    type: Literal["customerReviews"]
    id: str


class Review(BaseModel):
    data: Optional[Data298] = None


class Relationships126(BaseModel):
    review: Optional[Review] = None


class Attributes182(BaseModel):
    responseBody: str


class Review1(BaseModel):
    data: Data298


class Relationships127(BaseModel):
    review: Review1


class Data299(BaseModel):
    type: Literal["customerReviewResponses"]
    attributes: Attributes182
    relationships: Relationships127


class CustomerReviewResponseV1CreateRequest(BaseModel):
    data: Data299


class Data301(BaseModel):
    type: Literal["territories"]
    id: str


class Territory2(BaseModel):
    data: Optional[Data301] = None


class Relationships128(BaseModel):
    territory: Optional[Territory2] = None


class Data302(BaseModel):
    type: Literal["customerReviewResponses"]
    id: str


class Attributes187(BaseModel):
    name: Optional[str] = None
    status: Optional[Literal["ENABLED", "DISABLED"]] = None


class Data304(BaseModel):
    type: Literal["devices"]
    id: str
    attributes: Optional[Attributes187] = None


class DeviceUpdateRequest(BaseModel):
    data: Data304


class Datum83(BaseModel):
    type: Literal["territoryAvailabilities"]
    id: str


class TerritoryAvailabilities2(BaseModel):
    data: List[Datum83]


class Relationships131(BaseModel):
    territoryAvailabilities: TerritoryAvailabilities2


class Data305(BaseModel):
    type: Literal["endAppAvailabilityPreOrders"]
    relationships: Relationships131


class EndAppAvailabilityPreOrderCreateRequest(BaseModel):
    data: Data305


class Attributes189(BaseModel):
    agreementText: Optional[str] = None


class Data306(BaseModel):
    type: Literal["apps"]
    id: str


class App29(BaseModel):
    data: Optional[Data306] = None


class Datum84(BaseModel):
    type: Literal["territories"]
    id: str


class Attributes190(BaseModel):
    agreementText: str


class App30(BaseModel):
    data: Data306


class Territories1(BaseModel):
    data: List[Datum84]


class Relationships133(BaseModel):
    app: App30
    territories: Territories1


class Data307(BaseModel):
    type: Literal["endUserLicenseAgreements"]
    attributes: Attributes190
    relationships: Relationships133


class EndUserLicenseAgreementCreateRequest(BaseModel):
    data: Data307


class Attributes191(BaseModel):
    agreementText: Optional[str] = None


class Territories2(BaseModel):
    data: Optional[List[Datum84]] = None


class Relationships134(BaseModel):
    territories: Optional[Territories2] = None


class Data309(BaseModel):
    type: Literal["endUserLicenseAgreements"]
    id: str
    attributes: Optional[Attributes191] = None
    relationships: Optional[Relationships134] = None


class EndUserLicenseAgreementUpdateRequest(BaseModel):
    data: Data309


class Data310(BaseModel):
    type: Literal["gameCenterAchievementLocalizations"]
    id: str


class GameCenterAchievementLocalization(BaseModel):
    data: Optional[Data310] = None


class Relationships135(BaseModel):
    gameCenterAchievementLocalization: Optional[GameCenterAchievementLocalization] = (
        None
    )


class Attributes193(BaseModel):
    fileSize: int
    fileName: str


class GameCenterAchievementLocalization1(BaseModel):
    data: Data310


class Relationships136(BaseModel):
    gameCenterAchievementLocalization: GameCenterAchievementLocalization1


class Data311(BaseModel):
    type: Literal["gameCenterAchievementImages"]
    attributes: Attributes193
    relationships: Relationships136


class GameCenterAchievementImageCreateRequest(BaseModel):
    data: Data311


class Attributes194(BaseModel):
    uploaded: Optional[bool] = None


class Data313(BaseModel):
    type: Literal["gameCenterAchievementImages"]
    id: str
    attributes: Optional[Attributes194] = None


class GameCenterAchievementImageUpdateRequest(BaseModel):
    data: Data313


class Attributes195(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None
    beforeEarnedDescription: Optional[str] = None
    afterEarnedDescription: Optional[str] = None


class Data314(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class Data315(BaseModel):
    type: Literal["gameCenterAchievementImages"]
    id: str


class Attributes196(BaseModel):
    locale: str
    name: str
    beforeEarnedDescription: str
    afterEarnedDescription: str


class Data317(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterAchievement1(BaseModel):
    data: Data317


class Relationships138(BaseModel):
    gameCenterAchievement: GameCenterAchievement1


class Data316(BaseModel):
    type: Literal["gameCenterAchievementLocalizations"]
    attributes: Attributes196
    relationships: Relationships138


class GameCenterAchievementLocalizationCreateRequest(BaseModel):
    data: Data316


class Attributes197(BaseModel):
    name: Optional[str] = None
    beforeEarnedDescription: Optional[str] = None
    afterEarnedDescription: Optional[str] = None


class Data318(BaseModel):
    type: Literal["gameCenterAchievementLocalizations"]
    id: str
    attributes: Optional[Attributes197] = None


class GameCenterAchievementLocalizationUpdateRequest(BaseModel):
    data: Data318


class Attributes198(BaseModel):
    live: Optional[bool] = None


class Data319(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail1(BaseModel):
    data: Optional[Data319] = None


class Data320(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterAchievement2(BaseModel):
    data: Optional[Data320] = None


class Relationships139(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail1] = None
    gameCenterAchievement: Optional[GameCenterAchievement2] = None


class Data322(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail2(BaseModel):
    data: Data322


class Data323(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterAchievement3(BaseModel):
    data: Data323


class Relationships140(BaseModel):
    gameCenterDetail: GameCenterDetail2
    gameCenterAchievement: GameCenterAchievement3


class Data321(BaseModel):
    type: Literal["gameCenterAchievementReleases"]
    relationships: Relationships140


class GameCenterAchievementReleaseCreateRequest(BaseModel):
    data: Data321


class Data324(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail3(BaseModel):
    data: Optional[Data324] = None


class Data325(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup(BaseModel):
    data: Optional[Data325] = None


class Data326(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class Datum87(BaseModel):
    type: Literal["gameCenterAchievementLocalizations"]
    id: str


class Datum88(BaseModel):
    type: Literal["gameCenterAchievementReleases"]
    id: str


class Data327(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Data329(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail4(BaseModel):
    data: Optional[Data329] = None


class Data330(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup1(BaseModel):
    data: Optional[Data330] = None


class Relationships142(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail4] = None
    gameCenterGroup: Optional[GameCenterGroup1] = None


class Data332(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail5(BaseModel):
    data: Optional[Data332] = None


class Data333(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup2(BaseModel):
    data: Optional[Data333] = None


class Datum89(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class Datum90(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Datum91(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Data335(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail6(BaseModel):
    data: Optional[Data335] = None


class Data336(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup3(BaseModel):
    data: Optional[Data336] = None


class Relationships144(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail6] = None
    gameCenterGroup: Optional[GameCenterGroup3] = None


class Attributes206(BaseModel):
    fileSize: int
    fileName: str


class Data339(BaseModel):
    type: Literal["gameCenterActivityLocalizations"]
    id: str


class Localization(BaseModel):
    data: Optional[Data339] = None


class Data340(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Version(BaseModel):
    data: Optional[Data340] = None


class Relationships145(BaseModel):
    localization: Optional[Localization] = None
    version: Optional[Version] = None


class Data338(BaseModel):
    type: Literal["gameCenterActivityImages"]
    attributes: Attributes206
    relationships: Optional[Relationships145] = None


class GameCenterActivityImageCreateRequest(BaseModel):
    data: Data338


class Attributes207(BaseModel):
    uploaded: Optional[bool] = None


class Data341(BaseModel):
    type: Literal["gameCenterActivityImages"]
    id: str
    attributes: Optional[Attributes207] = None


class GameCenterActivityImageUpdateRequest(BaseModel):
    data: Data341


class Attributes208(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None


class Data342(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Version1(BaseModel):
    data: Optional[Data342] = None


class Data343(BaseModel):
    type: Literal["gameCenterActivityImages"]
    id: str


class Attributes209(BaseModel):
    locale: str
    name: str
    description: Optional[str] = None


class Data345(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Version2(BaseModel):
    data: Data345


class Relationships147(BaseModel):
    version: Version2


class Data344(BaseModel):
    type: Literal["gameCenterActivityLocalizations"]
    attributes: Attributes209
    relationships: Relationships147


class GameCenterActivityLocalizationCreateRequest(BaseModel):
    data: Data344


class Attributes210(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None


class Data346(BaseModel):
    type: Literal["gameCenterActivityLocalizations"]
    id: str
    attributes: Optional[Attributes210] = None


class GameCenterActivityLocalizationUpdateRequest(BaseModel):
    data: Data346


class Data347(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Version3(BaseModel):
    data: Optional[Data347] = None


class Relationships148(BaseModel):
    version: Optional[Version3] = None


class Data349(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail7(BaseModel):
    data: Data349


class Data350(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Version4(BaseModel):
    data: Data350


class Relationships149(BaseModel):
    gameCenterDetail: GameCenterDetail7
    version: Version4


class Data348(BaseModel):
    type: Literal["gameCenterActivityVersionReleases"]
    relationships: Relationships149


class GameCenterActivityVersionReleaseCreateRequest(BaseModel):
    data: Data348


class Data351(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Activity1(BaseModel):
    data: Optional[Data351] = None


class Datum92(BaseModel):
    type: Literal["gameCenterActivityLocalizations"]
    id: str


class Data352(BaseModel):
    type: Literal["gameCenterActivityImages"]
    id: str


class Datum93(BaseModel):
    type: Literal["gameCenterActivityVersionReleases"]
    id: str


class Attributes212(BaseModel):
    fallbackUrl: Optional[str] = None


class Data354(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Activity2(BaseModel):
    data: Data354


class Relationships151(BaseModel):
    activity: Activity2


class Data353(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    attributes: Optional[Attributes212] = None
    relationships: Relationships151


class GameCenterActivityVersionCreateRequest(BaseModel):
    data: Data353


class Data355(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str
    attributes: Optional[Attributes212] = None


class GameCenterActivityVersionUpdateRequest(BaseModel):
    data: Data355


class Attributes214(BaseModel):
    enabled: Optional[bool] = None


class Datum94(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str


class Data356(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion13(BaseModel):
    data: Data356


class Relationships153(BaseModel):
    appStoreVersion: AppStoreVersion13


class Data357(BaseModel):
    type: Literal["gameCenterAppVersions"]
    relationships: Relationships153


class GameCenterAppVersionCreateRequest(BaseModel):
    data: Data357


class Data359(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str
    attributes: Optional[Attributes214] = None


class GameCenterAppVersionUpdateRequest(BaseModel):
    data: Data359


class Attributes217(BaseModel):
    fileSize: int
    fileName: str


class Data361(BaseModel):
    type: Literal["gameCenterChallengeLocalizations"]
    id: str


class Localization1(BaseModel):
    data: Optional[Data361] = None


class Data362(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Version5(BaseModel):
    data: Optional[Data362] = None


class Relationships154(BaseModel):
    localization: Optional[Localization1] = None
    version: Optional[Version5] = None


class Data360(BaseModel):
    type: Literal["gameCenterChallengeImages"]
    attributes: Attributes217
    relationships: Optional[Relationships154] = None


class GameCenterChallengeImageCreateRequest(BaseModel):
    data: Data360


class Attributes218(BaseModel):
    uploaded: Optional[bool] = None


class Data363(BaseModel):
    type: Literal["gameCenterChallengeImages"]
    id: str
    attributes: Optional[Attributes218] = None


class GameCenterChallengeImageUpdateRequest(BaseModel):
    data: Data363


class Attributes219(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None


class Data364(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Version6(BaseModel):
    data: Optional[Data364] = None


class Data365(BaseModel):
    type: Literal["gameCenterChallengeImages"]
    id: str


class Attributes220(BaseModel):
    locale: str
    name: str
    description: Optional[str] = None


class Data367(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Version7(BaseModel):
    data: Data367


class Relationships156(BaseModel):
    version: Version7


class Data366(BaseModel):
    type: Literal["gameCenterChallengeLocalizations"]
    attributes: Attributes220
    relationships: Relationships156


class GameCenterChallengeLocalizationCreateRequest(BaseModel):
    data: Data366


class Attributes221(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None


class Data368(BaseModel):
    type: Literal["gameCenterChallengeLocalizations"]
    id: str
    attributes: Optional[Attributes221] = None


class GameCenterChallengeLocalizationUpdateRequest(BaseModel):
    data: Data368


class Data369(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Version8(BaseModel):
    data: Optional[Data369] = None


class Relationships157(BaseModel):
    version: Optional[Version8] = None


class Data371(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail8(BaseModel):
    data: Data371


class Data372(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Version9(BaseModel):
    data: Data372


class Relationships158(BaseModel):
    gameCenterDetail: GameCenterDetail8
    version: Version9


class Data370(BaseModel):
    type: Literal["gameCenterChallengeVersionReleases"]
    relationships: Relationships158


class GameCenterChallengeVersionReleaseCreateRequest(BaseModel):
    data: Data370


class Data373(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Challenge(BaseModel):
    data: Optional[Data373] = None


class Datum95(BaseModel):
    type: Literal["gameCenterChallengeLocalizations"]
    id: str


class Datum96(BaseModel):
    type: Literal["gameCenterChallengeVersionReleases"]
    id: str


class Data374(BaseModel):
    type: Literal["gameCenterChallengeImages"]
    id: str


class Data376(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Challenge1(BaseModel):
    data: Data376


class Relationships160(BaseModel):
    challenge: Challenge1


class Data375(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    relationships: Relationships160


class GameCenterChallengeVersionCreateRequest(BaseModel):
    data: Data375


class Attributes223(BaseModel):
    referenceName: Optional[str] = None
    vendorIdentifier: Optional[str] = None
    allowedDurations: Optional[List[Literal["ONE_DAY", "THREE_DAYS", "ONE_WEEK"]]] = (
        None
    )
    archived: Optional[bool] = None
    challengeType: Optional[Literal["LEADERBOARD"]] = None
    repeatable: Optional[bool] = None


class Data377(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail9(BaseModel):
    data: Optional[Data377] = None


class Data378(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup4(BaseModel):
    data: Optional[Data378] = None


class Datum97(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Data379(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Attributes224(BaseModel):
    referenceName: str
    vendorIdentifier: str
    allowedDurations: Optional[List[Literal["ONE_DAY", "THREE_DAYS", "ONE_WEEK"]]] = (
        None
    )
    challengeType: Literal["LEADERBOARD"]
    repeatable: Optional[bool] = None


class Data381(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail10(BaseModel):
    data: Optional[Data381] = None


class Data382(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup5(BaseModel):
    data: Optional[Data382] = None


class Data383(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Leaderboard1(BaseModel):
    data: Optional[Data383] = None


class Relationships162(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail10] = None
    gameCenterGroup: Optional[GameCenterGroup5] = None
    leaderboard: Optional[Leaderboard1] = None


class Data380(BaseModel):
    type: Literal["gameCenterChallenges"]
    attributes: Attributes224
    relationships: Optional[Relationships162] = None


class GameCenterChallengeCreateRequest(BaseModel):
    data: Data380


class Attributes225(BaseModel):
    referenceName: Optional[str] = None
    allowedDurations: Optional[List[Literal["ONE_DAY", "THREE_DAYS", "ONE_WEEK"]]] = (
        None
    )
    archived: Optional[bool] = None
    repeatable: Optional[bool] = None


class Data385(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Leaderboard2(BaseModel):
    data: Optional[Data385] = None


class Relationships163(BaseModel):
    leaderboard: Optional[Leaderboard2] = None


class Data384(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str
    attributes: Optional[Attributes225] = None
    relationships: Optional[Relationships163] = None


class GameCenterChallengeUpdateRequest(BaseModel):
    data: Data384


class Attributes226(BaseModel):
    arcadeEnabled: Optional[bool] = None
    challengeEnabled: Optional[bool] = None


class Data386(BaseModel):
    type: Literal["apps"]
    id: str


class App31(BaseModel):
    data: Optional[Data386] = None


class Datum98(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str


class Data387(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class Datum99(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Datum100(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class Datum101(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class Datum102(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Datum103(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Data388(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class DefaultLeaderboard(BaseModel):
    data: Optional[Data388] = None


class DefaultGroupLeaderboard(BaseModel):
    data: Optional[Data388] = None


class Datum104(BaseModel):
    type: Literal["gameCenterAchievementReleases"]
    id: str


class Datum105(BaseModel):
    type: Literal["gameCenterActivityVersionReleases"]
    id: str


class Datum106(BaseModel):
    type: Literal["gameCenterChallengeVersionReleases"]
    id: str


class Datum107(BaseModel):
    type: Literal["gameCenterLeaderboardReleases"]
    id: str


class Datum108(BaseModel):
    type: Literal["gameCenterLeaderboardSetReleases"]
    id: str


class Datum109(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Attributes227(BaseModel):
    challengeEnabled: Optional[bool] = None


class Data391(BaseModel):
    type: Literal["apps"]
    id: str


class App32(BaseModel):
    data: Data391


class Relationships165(BaseModel):
    app: App32


class Data390(BaseModel):
    type: Literal["gameCenterDetails"]
    attributes: Optional[Attributes227] = None
    relationships: Relationships165


class GameCenterDetailCreateRequest(BaseModel):
    data: Data390


class Data393(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup7(BaseModel):
    data: Optional[Data393] = None


class Data394(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class DefaultLeaderboard1(BaseModel):
    data: Optional[Data394] = None


class DefaultGroupLeaderboard1(BaseModel):
    data: Optional[Data394] = None


class Relationships166(BaseModel):
    gameCenterGroup: Optional[GameCenterGroup7] = None
    defaultLeaderboard: Optional[DefaultLeaderboard1] = None
    defaultGroupLeaderboard: Optional[DefaultGroupLeaderboard1] = None


class Data392(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str
    attributes: Optional[Attributes227] = None
    relationships: Optional[Relationships166] = None


class GameCenterDetailUpdateRequest(BaseModel):
    data: Data392


class Datum110(BaseModel):
    type: Literal["gameCenterEnabledVersions"]
    id: str


class Data396(BaseModel):
    type: Literal["apps"]
    id: str


class App33(BaseModel):
    data: Optional[Data396] = None


class Attributes230(BaseModel):
    referenceName: Optional[str] = None


class Datum111(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class Datum112(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Datum113(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class Datum114(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class Datum115(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Datum116(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Data397(BaseModel):
    type: Literal["gameCenterGroups"]
    attributes: Optional[Attributes230] = None


class GameCenterGroupCreateRequest(BaseModel):
    data: Data397


class Data398(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str
    attributes: Optional[Attributes230] = None


class GameCenterGroupUpdateRequest(BaseModel):
    data: Data398


class Attributes233(BaseModel):
    bundleId: Optional[str] = None
    challengeIds: Optional[List[str]] = None
    context: Optional[str] = None
    scopedPlayerId: Optional[str] = None
    score: Optional[str] = None
    submittedDate: Optional[AwareDatetime] = None
    vendorIdentifier: Optional[str] = None


class Attributes234(BaseModel):
    bundleId: str
    challengeIds: Optional[List[str]] = None
    context: Optional[str] = None
    scopedPlayerId: str
    score: str
    submittedDate: Optional[AwareDatetime] = None
    vendorIdentifier: str


class Data399(BaseModel):
    type: Literal["gameCenterLeaderboardEntrySubmissions"]
    attributes: Attributes234


class GameCenterLeaderboardEntrySubmissionCreateRequest(BaseModel):
    data: Data399


class Data400(BaseModel):
    type: Literal["gameCenterLeaderboardLocalizations"]
    id: str


class GameCenterLeaderboardLocalization(BaseModel):
    data: Optional[Data400] = None


class Relationships169(BaseModel):
    gameCenterLeaderboardLocalization: Optional[GameCenterLeaderboardLocalization] = (
        None
    )


class Attributes236(BaseModel):
    fileSize: int
    fileName: str


class GameCenterLeaderboardLocalization1(BaseModel):
    data: Data400


class Relationships170(BaseModel):
    gameCenterLeaderboardLocalization: GameCenterLeaderboardLocalization1


class Data401(BaseModel):
    type: Literal["gameCenterLeaderboardImages"]
    attributes: Attributes236
    relationships: Relationships170


class GameCenterLeaderboardImageCreateRequest(BaseModel):
    data: Data401


class Attributes237(BaseModel):
    uploaded: Optional[bool] = None


class Data403(BaseModel):
    type: Literal["gameCenterLeaderboardImages"]
    id: str
    attributes: Optional[Attributes237] = None


class GameCenterLeaderboardImageUpdateRequest(BaseModel):
    data: Data403


class Data404(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboard1(BaseModel):
    data: Optional[Data404] = None


class Data405(BaseModel):
    type: Literal["gameCenterLeaderboardImages"]
    id: str


class Data407(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboard2(BaseModel):
    data: Data407


class Relationships172(BaseModel):
    gameCenterLeaderboard: GameCenterLeaderboard2


class Attributes241(BaseModel):
    live: Optional[bool] = None


class Data409(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail11(BaseModel):
    data: Optional[Data409] = None


class Data410(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboard3(BaseModel):
    data: Optional[Data410] = None


class Relationships173(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail11] = None
    gameCenterLeaderboard: Optional[GameCenterLeaderboard3] = None


class Data412(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail12(BaseModel):
    data: Data412


class Data413(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboard4(BaseModel):
    data: Data413


class Relationships174(BaseModel):
    gameCenterDetail: GameCenterDetail12
    gameCenterLeaderboard: GameCenterLeaderboard4


class Data411(BaseModel):
    type: Literal["gameCenterLeaderboardReleases"]
    relationships: Relationships174


class GameCenterLeaderboardReleaseCreateRequest(BaseModel):
    data: Data411


class Data414(BaseModel):
    type: Literal["gameCenterLeaderboardSetLocalizations"]
    id: str


class GameCenterLeaderboardSetLocalization(BaseModel):
    data: Optional[Data414] = None


class Relationships175(BaseModel):
    gameCenterLeaderboardSetLocalization: Optional[
        GameCenterLeaderboardSetLocalization
    ] = None


class Attributes243(BaseModel):
    fileSize: int
    fileName: str


class GameCenterLeaderboardSetLocalization1(BaseModel):
    data: Data414


class Relationships176(BaseModel):
    gameCenterLeaderboardSetLocalization: GameCenterLeaderboardSetLocalization1


class Data415(BaseModel):
    type: Literal["gameCenterLeaderboardSetImages"]
    attributes: Attributes243
    relationships: Relationships176


class GameCenterLeaderboardSetImageCreateRequest(BaseModel):
    data: Data415


class Attributes244(BaseModel):
    uploaded: Optional[bool] = None


class Data417(BaseModel):
    type: Literal["gameCenterLeaderboardSetImages"]
    id: str
    attributes: Optional[Attributes244] = None


class GameCenterLeaderboardSetImageUpdateRequest(BaseModel):
    data: Data417


class Attributes245(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None


class Data418(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSet1(BaseModel):
    data: Optional[Data418] = None


class Data419(BaseModel):
    type: Literal["gameCenterLeaderboardSetImages"]
    id: str


class Attributes246(BaseModel):
    locale: str
    name: str


class Data421(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSet2(BaseModel):
    data: Data421


class Relationships178(BaseModel):
    gameCenterLeaderboardSet: GameCenterLeaderboardSet2


class Data420(BaseModel):
    type: Literal["gameCenterLeaderboardSetLocalizations"]
    attributes: Attributes246
    relationships: Relationships178


class GameCenterLeaderboardSetLocalizationCreateRequest(BaseModel):
    data: Data420


class Attributes247(BaseModel):
    name: Optional[str] = None


class Data422(BaseModel):
    type: Literal["gameCenterLeaderboardSetLocalizations"]
    id: str
    attributes: Optional[Attributes247] = None


class GameCenterLeaderboardSetLocalizationUpdateRequest(BaseModel):
    data: Data422


class Attributes248(BaseModel):
    name: Optional[str] = None
    locale: Optional[str] = None


class Data423(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class Data424(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Data426(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSet4(BaseModel):
    data: Data426


class Data427(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboard6(BaseModel):
    data: Data427


class Relationships180(BaseModel):
    gameCenterLeaderboardSet: GameCenterLeaderboardSet4
    gameCenterLeaderboard: GameCenterLeaderboard6


class Data425(BaseModel):
    type: Literal["gameCenterLeaderboardSetMemberLocalizations"]
    attributes: Optional[Attributes248] = None
    relationships: Relationships180


class GameCenterLeaderboardSetMemberLocalizationCreateRequest(BaseModel):
    data: Data425


class Attributes250(BaseModel):
    name: Optional[str] = None


class Data428(BaseModel):
    type: Literal["gameCenterLeaderboardSetMemberLocalizations"]
    id: str
    attributes: Optional[Attributes250] = None


class GameCenterLeaderboardSetMemberLocalizationUpdateRequest(BaseModel):
    data: Data428


class Attributes251(BaseModel):
    live: Optional[bool] = None


class Data429(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail13(BaseModel):
    data: Optional[Data429] = None


class Data430(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSet5(BaseModel):
    data: Optional[Data430] = None


class Relationships181(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail13] = None
    gameCenterLeaderboardSet: Optional[GameCenterLeaderboardSet5] = None


class Data432(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail14(BaseModel):
    data: Data432


class Data433(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSet6(BaseModel):
    data: Data433


class Relationships182(BaseModel):
    gameCenterDetail: GameCenterDetail14
    gameCenterLeaderboardSet: GameCenterLeaderboardSet6


class Data431(BaseModel):
    type: Literal["gameCenterLeaderboardSetReleases"]
    relationships: Relationships182


class GameCenterLeaderboardSetReleaseCreateRequest(BaseModel):
    data: Data431


class Attributes252(BaseModel):
    referenceName: Optional[str] = None
    vendorIdentifier: Optional[str] = None


class Data434(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail15(BaseModel):
    data: Optional[Data434] = None


class Data435(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup8(BaseModel):
    data: Optional[Data435] = None


class Data436(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class Datum117(BaseModel):
    type: Literal["gameCenterLeaderboardSetLocalizations"]
    id: str


class Datum118(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Datum119(BaseModel):
    type: Literal["gameCenterLeaderboardSetReleases"]
    id: str


class Attributes253(BaseModel):
    referenceName: str
    vendorIdentifier: str


class Data438(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail16(BaseModel):
    data: Optional[Data438] = None


class Data439(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup9(BaseModel):
    data: Optional[Data439] = None


class Datum120(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboards3(BaseModel):
    data: Optional[List[Datum120]] = None


class Relationships184(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail16] = None
    gameCenterGroup: Optional[GameCenterGroup9] = None
    gameCenterLeaderboards: Optional[GameCenterLeaderboards3] = None


class Data437(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    attributes: Attributes253
    relationships: Optional[Relationships184] = None


class GameCenterLeaderboardSetCreateRequest(BaseModel):
    data: Data437


class Attributes254(BaseModel):
    referenceName: Optional[str] = None


class Data440(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str
    attributes: Optional[Attributes254] = None


class GameCenterLeaderboardSetUpdateRequest(BaseModel):
    data: Data440


class Data441(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail17(BaseModel):
    data: Optional[Data441] = None


class Data442(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup10(BaseModel):
    data: Optional[Data442] = None


class Data443(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Datum121(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class Datum122(BaseModel):
    type: Literal["gameCenterLeaderboardLocalizations"]
    id: str


class Datum123(BaseModel):
    type: Literal["gameCenterLeaderboardReleases"]
    id: str


class Data444(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Data445(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Data447(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class GameCenterDetail18(BaseModel):
    data: Optional[Data447] = None


class Data448(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class GameCenterGroup11(BaseModel):
    data: Optional[Data448] = None


class Datum124(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSets3(BaseModel):
    data: Optional[List[Datum124]] = None


class Relationships186(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail18] = None
    gameCenterGroup: Optional[GameCenterGroup11] = None
    gameCenterLeaderboardSets: Optional[GameCenterLeaderboardSets3] = None


class Attributes258(BaseModel):
    referenceName: Optional[str] = None
    classicMatchmakingBundleIds: Optional[List[str]] = None


class Data450(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str


class RuleSet(BaseModel):
    data: Optional[Data450] = None


class ExperimentRuleSet(BaseModel):
    data: Optional[Data450] = None


class Relationships187(BaseModel):
    ruleSet: Optional[RuleSet] = None
    experimentRuleSet: Optional[ExperimentRuleSet] = None


class Attributes259(BaseModel):
    referenceName: str
    classicMatchmakingBundleIds: Optional[List[str]] = None


class RuleSet1(BaseModel):
    data: Data450


class ExperimentRuleSet1(BaseModel):
    data: Optional[Data450] = None


class Relationships188(BaseModel):
    ruleSet: RuleSet1
    experimentRuleSet: Optional[ExperimentRuleSet1] = None


class Data452(BaseModel):
    type: Literal["gameCenterMatchmakingQueues"]
    attributes: Attributes259
    relationships: Relationships188


class GameCenterMatchmakingQueueCreateRequest(BaseModel):
    data: Data452


class Attributes260(BaseModel):
    classicMatchmakingBundleIds: Optional[List[str]] = None


class Data456(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str


class RuleSet2(BaseModel):
    data: Optional[Data456] = None


class ExperimentRuleSet2(BaseModel):
    data: Optional[Data456] = None


class Relationships189(BaseModel):
    ruleSet: Optional[RuleSet2] = None
    experimentRuleSet: Optional[ExperimentRuleSet2] = None


class Data455(BaseModel):
    type: Literal["gameCenterMatchmakingQueues"]
    id: str
    attributes: Optional[Attributes260] = None
    relationships: Optional[Relationships189] = None


class GameCenterMatchmakingQueueUpdateRequest(BaseModel):
    data: Data455


class Data459(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str


class MatchmakingRuleSet(BaseModel):
    data: Data459


class Datum125(BaseModel):
    type: Literal["gameCenterMatchmakingTestRequests"]
    id: str


class MatchmakingRequests(BaseModel):
    data: List[Datum125]


class Relationships190(BaseModel):
    matchmakingRuleSet: MatchmakingRuleSet
    matchmakingRequests: MatchmakingRequests


class Data458(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSetTests"]
    relationships: Relationships190


class Attributes262(BaseModel):
    referenceName: Optional[str] = None
    ruleLanguageVersion: Optional[int] = None
    minPlayers: Optional[int] = None
    maxPlayers: Optional[int] = None


class Datum126(BaseModel):
    type: Literal["gameCenterMatchmakingTeams"]
    id: str


class Datum127(BaseModel):
    type: Literal["gameCenterMatchmakingRules"]
    id: str


class Datum128(BaseModel):
    type: Literal["gameCenterMatchmakingQueues"]
    id: str


class Attributes263(BaseModel):
    referenceName: str
    ruleLanguageVersion: int
    minPlayers: int
    maxPlayers: int


class Data460(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    attributes: Attributes263


class GameCenterMatchmakingRuleSetCreateRequest(BaseModel):
    data: Data460


class Attributes264(BaseModel):
    minPlayers: Optional[int] = None
    maxPlayers: Optional[int] = None


class Data461(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str
    attributes: Optional[Attributes264] = None


class GameCenterMatchmakingRuleSetUpdateRequest(BaseModel):
    data: Data461


class Attributes265(BaseModel):
    referenceName: Optional[str] = None
    description: Optional[str] = None
    type: Optional[Literal["COMPATIBLE", "DISTANCE", "MATCH", "TEAM"]] = None
    expression: Optional[str] = None
    weight: Optional[float] = None


class Attributes266(BaseModel):
    referenceName: str
    description: str
    type: Literal["COMPATIBLE", "DISTANCE", "MATCH", "TEAM"]
    expression: str
    weight: Optional[float] = None


class Data463(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str


class RuleSet3(BaseModel):
    data: Data463


class Relationships192(BaseModel):
    ruleSet: RuleSet3


class Data462(BaseModel):
    type: Literal["gameCenterMatchmakingRules"]
    attributes: Attributes266
    relationships: Relationships192


class GameCenterMatchmakingRuleCreateRequest(BaseModel):
    data: Data462


class Attributes267(BaseModel):
    description: Optional[str] = None
    expression: Optional[str] = None
    weight: Optional[float] = None


class Data464(BaseModel):
    type: Literal["gameCenterMatchmakingRules"]
    id: str
    attributes: Optional[Attributes267] = None


class GameCenterMatchmakingRuleUpdateRequest(BaseModel):
    data: Data464


class Attributes268(BaseModel):
    referenceName: Optional[str] = None
    minPlayers: Optional[int] = None
    maxPlayers: Optional[int] = None


class Attributes269(BaseModel):
    referenceName: str
    minPlayers: int
    maxPlayers: int


class Data466(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str


class RuleSet4(BaseModel):
    data: Data466


class Relationships193(BaseModel):
    ruleSet: RuleSet4


class Data465(BaseModel):
    type: Literal["gameCenterMatchmakingTeams"]
    attributes: Attributes269
    relationships: Relationships193


class GameCenterMatchmakingTeamCreateRequest(BaseModel):
    data: Data465


class Attributes270(BaseModel):
    minPlayers: Optional[int] = None
    maxPlayers: Optional[int] = None


class Data467(BaseModel):
    type: Literal["gameCenterMatchmakingTeams"]
    id: str
    attributes: Optional[Attributes270] = None


class GameCenterMatchmakingTeamUpdateRequest(BaseModel):
    data: Data467


class Datum129(BaseModel):
    type: Literal["gameCenterMatchmakingTestPlayerProperties"]
    id: str


class MatchmakingPlayerProperties(BaseModel):
    data: Optional[List[Datum129]] = None


class Relationships194(BaseModel):
    matchmakingPlayerProperties: Optional[MatchmakingPlayerProperties] = None


class Attributes273(BaseModel):
    bundleId: Optional[str] = None
    challengeIds: Optional[List[str]] = None
    percentageAchieved: Optional[int] = None
    scopedPlayerId: Optional[str] = None
    submittedDate: Optional[AwareDatetime] = None
    vendorIdentifier: Optional[str] = None


class Attributes274(BaseModel):
    bundleId: str
    challengeIds: Optional[List[str]] = None
    percentageAchieved: int
    scopedPlayerId: str
    submittedDate: Optional[AwareDatetime] = None
    vendorIdentifier: str


class Data468(BaseModel):
    type: Literal["gameCenterPlayerAchievementSubmissions"]
    attributes: Attributes274


class GameCenterPlayerAchievementSubmissionCreateRequest(BaseModel):
    data: Data468


class Data469(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV21(BaseModel):
    data: Optional[Data469] = None


class Relationships195(BaseModel):
    inAppPurchaseV2: Optional[InAppPurchaseV21] = None


class Attributes276(BaseModel):
    fileSize: int
    fileName: str


class InAppPurchaseV22(BaseModel):
    data: Data469


class Relationships196(BaseModel):
    inAppPurchaseV2: InAppPurchaseV22


class Data470(BaseModel):
    type: Literal["inAppPurchaseAppStoreReviewScreenshots"]
    attributes: Attributes276
    relationships: Relationships196


class InAppPurchaseAppStoreReviewScreenshotCreateRequest(BaseModel):
    data: Data470


class Attributes277(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data472(BaseModel):
    type: Literal["inAppPurchaseAppStoreReviewScreenshots"]
    id: str
    attributes: Optional[Attributes277] = None


class InAppPurchaseAppStoreReviewScreenshotUpdateRequest(BaseModel):
    data: Data472


class Attributes278(BaseModel):
    availableInNewTerritories: Optional[bool] = None


class Datum130(BaseModel):
    type: Literal["territories"]
    id: str


class Attributes279(BaseModel):
    availableInNewTerritories: bool


class Data474(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchase1(BaseModel):
    data: Data474


class AvailableTerritories1(BaseModel):
    data: List[Datum130]


class Relationships198(BaseModel):
    inAppPurchase: InAppPurchase1
    availableTerritories: AvailableTerritories1


class Data473(BaseModel):
    type: Literal["inAppPurchaseAvailabilities"]
    attributes: Attributes279
    relationships: Relationships198


class InAppPurchaseAvailabilityCreateRequest(BaseModel):
    data: Data473


class Attributes280(BaseModel):
    fileName: Optional[str] = None
    fileSize: Optional[int] = None
    url: Optional[AnyUrl] = None
    lastModifiedDate: Optional[AwareDatetime] = None


class Data475(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV23(BaseModel):
    data: Optional[Data475] = None


class Relationships199(BaseModel):
    inAppPurchaseV2: Optional[InAppPurchaseV23] = None


class InAppPurchase2(BaseModel):
    data: Optional[Data475] = None


class Relationships200(BaseModel):
    inAppPurchase: Optional[InAppPurchase2] = None


class Attributes282(BaseModel):
    fileSize: int
    fileName: str


class InAppPurchase3(BaseModel):
    data: Data475


class Relationships201(BaseModel):
    inAppPurchase: InAppPurchase3


class Data477(BaseModel):
    type: Literal["inAppPurchaseImages"]
    attributes: Attributes282
    relationships: Relationships201


class InAppPurchaseImageCreateRequest(BaseModel):
    data: Data477


class Attributes283(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data479(BaseModel):
    type: Literal["inAppPurchaseImages"]
    id: str
    attributes: Optional[Attributes283] = None


class InAppPurchaseImageUpdateRequest(BaseModel):
    data: Data479


class Attributes284(BaseModel):
    name: Optional[str] = None
    locale: Optional[str] = None
    description: Optional[str] = None
    state: Optional[
        Literal["PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED"]
    ] = None


class Data480(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV24(BaseModel):
    data: Optional[Data480] = None


class Relationships202(BaseModel):
    inAppPurchaseV2: Optional[InAppPurchaseV24] = None


class Attributes285(BaseModel):
    name: str
    locale: str
    description: Optional[str] = None


class InAppPurchaseV25(BaseModel):
    data: Data480


class Relationships203(BaseModel):
    inAppPurchaseV2: InAppPurchaseV25


class Data481(BaseModel):
    type: Literal["inAppPurchaseLocalizations"]
    attributes: Attributes285
    relationships: Relationships203


class InAppPurchaseLocalizationCreateRequest(BaseModel):
    data: Data481


class Attributes286(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None


class Data483(BaseModel):
    type: Literal["inAppPurchaseLocalizations"]
    id: str
    attributes: Optional[Attributes286] = None


class InAppPurchaseLocalizationUpdateRequest(BaseModel):
    data: Data483


class Attributes287(BaseModel):
    customerPrice: Optional[str] = None
    proceeds: Optional[str] = None


class Data484(BaseModel):
    type: Literal["territories"]
    id: str


class Territory3(BaseModel):
    data: Optional[Data484] = None


class Datum132(BaseModel):
    type: Literal["inAppPurchasePrices"]
    id: str


class Data487(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchase4(BaseModel):
    data: Data487


class Data488(BaseModel):
    type: Literal["territories"]
    id: str


class BaseTerritory3(BaseModel):
    data: Data488


class ManualPrices3(BaseModel):
    data: List[Datum132]


class Relationships206(BaseModel):
    inAppPurchase: InAppPurchase4
    baseTerritory: BaseTerritory3
    manualPrices: ManualPrices3


class Data486(BaseModel):
    type: Literal["inAppPurchasePriceSchedules"]
    relationships: Relationships206


class Attributes288(BaseModel):
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    manual: Optional[bool] = None


class Data489(BaseModel):
    type: Literal["inAppPurchasePricePoints"]
    id: str


class InAppPurchasePricePoint1(BaseModel):
    data: Optional[Data489] = None


class Data490(BaseModel):
    type: Literal["territories"]
    id: str


class Territory4(BaseModel):
    data: Optional[Data490] = None


class Relationships207(BaseModel):
    inAppPurchasePricePoint: Optional[InAppPurchasePricePoint1] = None
    territory: Optional[Territory4] = None


class Attributes289(BaseModel):
    startDate: Optional[date] = None
    endDate: Optional[date] = None


class Data491(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV26(BaseModel):
    data: Optional[Data491] = None


class Data492(BaseModel):
    type: Literal["inAppPurchasePricePoints"]
    id: str


class InAppPurchasePricePoint2(BaseModel):
    data: Optional[Data492] = None


class Relationships208(BaseModel):
    inAppPurchaseV2: Optional[InAppPurchaseV26] = None
    inAppPurchasePricePoint: Optional[InAppPurchasePricePoint2] = None


class InAppPurchasePriceInlineCreate(BaseModel):
    type: Literal["inAppPurchasePrices"]
    id: Optional[str] = None
    attributes: Optional[Attributes289] = None
    relationships: Optional[Relationships208] = None


class Data493(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV27(BaseModel):
    data: Optional[Data493] = None


class Relationships209(BaseModel):
    inAppPurchaseV2: Optional[InAppPurchaseV27] = None


class InAppPurchaseV28(BaseModel):
    data: Data493


class Relationships210(BaseModel):
    inAppPurchaseV2: InAppPurchaseV28


class Data494(BaseModel):
    type: Literal["inAppPurchaseSubmissions"]
    relationships: Relationships210


class InAppPurchaseSubmissionCreateRequest(BaseModel):
    data: Data494


class Attributes290(BaseModel):
    referenceName: Optional[str] = None
    productId: Optional[str] = None
    inAppPurchaseType: Optional[
        Literal[
            "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION",
            "NON_CONSUMABLE",
            "CONSUMABLE",
            "NON_RENEWING_SUBSCRIPTION",
            "FREE_SUBSCRIPTION",
        ]
    ] = None
    state: Optional[
        Literal[
            "CREATED",
            "DEVELOPER_SIGNED_OFF",
            "DEVELOPER_ACTION_NEEDED",
            "DELETION_IN_PROGRESS",
            "APPROVED",
            "DELETED",
            "REMOVED_FROM_SALE",
            "DEVELOPER_REMOVED_FROM_SALE",
            "WAITING_FOR_UPLOAD",
            "PROCESSING_CONTENT",
            "REPLACED",
            "REJECTED",
            "WAITING_FOR_SCREENSHOT",
            "PREPARE_FOR_SUBMISSION",
            "MISSING_METADATA",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "PENDING_DEVELOPER_RELEASE",
        ]
    ] = None


class Datum135(BaseModel):
    type: Literal["apps"]
    id: str


class Datum136(BaseModel):
    type: Literal["inAppPurchaseLocalizations"]
    id: str


class Datum137(BaseModel):
    type: Literal["inAppPurchasePricePoints"]
    id: str


class Data496(BaseModel):
    type: Literal["inAppPurchaseContents"]
    id: str


class Data497(BaseModel):
    type: Literal["inAppPurchaseAppStoreReviewScreenshots"]
    id: str


class Data498(BaseModel):
    type: Literal["promotedPurchases"]
    id: str


class Data499(BaseModel):
    type: Literal["inAppPurchasePriceSchedules"]
    id: str


class Data500(BaseModel):
    type: Literal["inAppPurchaseAvailabilities"]
    id: str


class Datum138(BaseModel):
    type: Literal["inAppPurchaseImages"]
    id: str


class Data502(BaseModel):
    type: Literal["apps"]
    id: str


class App34(BaseModel):
    data: Data502


class Relationships213(BaseModel):
    app: App34


class Attributes293(BaseModel):
    name: Optional[str] = None
    reviewNote: Optional[str] = None
    familySharable: Optional[bool] = None


class Data503(BaseModel):
    type: Literal["inAppPurchases"]
    id: str
    attributes: Optional[Attributes293] = None


class InAppPurchaseV2UpdateRequest(BaseModel):
    data: Data503


class Attributes294(BaseModel):
    catalogUrl: Optional[AnyUrl] = None


class Attributes295(BaseModel):
    catalogUrl: AnyUrl


class Data505(BaseModel):
    type: Literal["apps"]
    id: str


class App35(BaseModel):
    data: Data505


class Relationships214(BaseModel):
    app: App35


class Data504(BaseModel):
    type: Literal["marketplaceSearchDetails"]
    attributes: Attributes295
    relationships: Relationships214


class MarketplaceSearchDetailCreateRequest(BaseModel):
    data: Data504


class Attributes296(BaseModel):
    catalogUrl: Optional[AnyUrl] = None


class Data506(BaseModel):
    type: Literal["marketplaceSearchDetails"]
    id: str
    attributes: Optional[Attributes296] = None


class MarketplaceSearchDetailUpdateRequest(BaseModel):
    data: Data506


class Attributes297(BaseModel):
    endpointUrl: Optional[AnyUrl] = None


class Attributes298(BaseModel):
    endpointUrl: AnyUrl
    secret: str


class Data507(BaseModel):
    type: Literal["marketplaceWebhooks"]
    attributes: Attributes298


class MarketplaceWebhookCreateRequest(BaseModel):
    data: Data507


class Attributes299(BaseModel):
    endpointUrl: Optional[AnyUrl] = None
    secret: Optional[str] = None


class Data508(BaseModel):
    type: Literal["marketplaceWebhooks"]
    id: str
    attributes: Optional[Attributes299] = None


class MarketplaceWebhookUpdateRequest(BaseModel):
    data: Data508


class Attributes300(BaseModel):
    name: Optional[str] = None
    identifier: Optional[str] = None


class Datum139(BaseModel):
    type: Literal["certificates"]
    id: str


class Attributes301(BaseModel):
    name: str
    identifier: str


class Data509(BaseModel):
    type: Literal["merchantIds"]
    attributes: Attributes301


class MerchantIdCreateRequest(BaseModel):
    data: Data509


class Attributes302(BaseModel):
    name: Optional[str] = None


class Data510(BaseModel):
    type: Literal["merchantIds"]
    id: str
    attributes: Optional[Attributes302] = None


class MerchantIdUpdateRequest(BaseModel):
    data: Data510


class Datum140(BaseModel):
    type: Literal["apps"]
    id: str


class Data511(BaseModel):
    type: Literal["actors"]
    id: str


class CreatedByActor(BaseModel):
    data: Optional[Data511] = None


class LastModifiedByActor(BaseModel):
    data: Optional[Data511] = None


class SubmittedByActor(BaseModel):
    data: Optional[Data511] = None


class Datum141(BaseModel):
    type: Literal["appEvents"]
    id: str


class Datum142(BaseModel):
    type: Literal["territories"]
    id: str


class Datum143(BaseModel):
    type: Literal["apps"]
    id: str


class RelatedApps1(BaseModel):
    data: List[Datum143]


class Datum144(BaseModel):
    type: Literal["appEvents"]
    id: str


class InAppEvents1(BaseModel):
    data: Optional[List[Datum144]] = None


class Datum145(BaseModel):
    type: Literal["territories"]
    id: str


class SupportedTerritories1(BaseModel):
    data: Optional[List[Datum145]] = None


class Relationships217(BaseModel):
    relatedApps: RelatedApps1
    inAppEvents: Optional[InAppEvents1] = None
    supportedTerritories: Optional[SupportedTerritories1] = None


class Datum146(BaseModel):
    type: Literal["apps"]
    id: str


class RelatedApps2(BaseModel):
    data: Optional[List[Datum146]] = None


class Datum147(BaseModel):
    type: Literal["appEvents"]
    id: str


class InAppEvents2(BaseModel):
    data: Optional[List[Datum147]] = None


class Datum148(BaseModel):
    type: Literal["territories"]
    id: str


class SupportedTerritories2(BaseModel):
    data: Optional[List[Datum148]] = None


class Relationships218(BaseModel):
    relatedApps: Optional[RelatedApps2] = None
    inAppEvents: Optional[InAppEvents2] = None
    supportedTerritories: Optional[SupportedTerritories2] = None


class Attributes306(BaseModel):
    name: Optional[str] = None
    identifier: Optional[str] = None


class Datum149(BaseModel):
    type: Literal["certificates"]
    id: str


class Attributes307(BaseModel):
    name: str
    identifier: str


class Data516(BaseModel):
    type: Literal["passTypeIds"]
    attributes: Attributes307


class PassTypeIdCreateRequest(BaseModel):
    data: Data516


class Attributes308(BaseModel):
    name: Optional[str] = None


class Data517(BaseModel):
    type: Literal["passTypeIds"]
    id: str
    attributes: Optional[Attributes308] = None


class PassTypeIdUpdateRequest(BaseModel):
    data: Data517


class Attributes309(BaseModel):
    platform: Optional[Literal["IOS"]] = None
    metricType: Optional[
        Literal[
            "DISK", "HANG", "BATTERY", "LAUNCH", "MEMORY", "ANIMATION", "TERMINATION"
        ]
    ] = None
    deviceType: Optional[str] = None


class Datum150(BaseModel):
    type: Literal["builds"]
    id: str


class Data518(BaseModel):
    type: Literal["apps"]
    id: str


class Data519(BaseModel):
    type: Literal["bundleIds"]
    id: str


class Datum151(BaseModel):
    type: Literal["devices"]
    id: str


class Datum152(BaseModel):
    type: Literal["certificates"]
    id: str


class Attributes312(BaseModel):
    name: str
    profileType: Literal[
        "IOS_APP_DEVELOPMENT",
        "IOS_APP_STORE",
        "IOS_APP_ADHOC",
        "IOS_APP_INHOUSE",
        "MAC_APP_DEVELOPMENT",
        "MAC_APP_STORE",
        "MAC_APP_DIRECT",
        "TVOS_APP_DEVELOPMENT",
        "TVOS_APP_STORE",
        "TVOS_APP_ADHOC",
        "TVOS_APP_INHOUSE",
        "MAC_CATALYST_APP_DEVELOPMENT",
        "MAC_CATALYST_APP_STORE",
        "MAC_CATALYST_APP_DIRECT",
    ]


class BundleId4(BaseModel):
    data: Data519


class Datum153(BaseModel):
    type: Literal["devices"]
    id: str


class Devices1(BaseModel):
    data: Optional[List[Datum153]] = None


class Datum154(BaseModel):
    type: Literal["certificates"]
    id: str


class Certificates3(BaseModel):
    data: List[Datum154]


class Relationships222(BaseModel):
    bundleId: BundleId4
    devices: Optional[Devices1] = None
    certificates: Certificates3


class Data520(BaseModel):
    type: Literal["profiles"]
    attributes: Attributes312
    relationships: Relationships222


class ProfileCreateRequest(BaseModel):
    data: Data520


class Attributes313(BaseModel):
    visibleForAllUsers: Optional[bool] = None
    enabled: Optional[bool] = None
    state: Optional[
        Literal["APPROVED", "IN_REVIEW", "PREPARE_FOR_SUBMISSION", "REJECTED"]
    ] = None


class Data522(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV29(BaseModel):
    data: Optional[Data522] = None


class Data523(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription(BaseModel):
    data: Optional[Data523] = None


class Relationships223(BaseModel):
    inAppPurchaseV2: Optional[InAppPurchaseV29] = None
    subscription: Optional[Subscription] = None


class Attributes314(BaseModel):
    visibleForAllUsers: bool
    enabled: Optional[bool] = None


class Data525(BaseModel):
    type: Literal["apps"]
    id: str


class App37(BaseModel):
    data: Data525


class Data526(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class InAppPurchaseV210(BaseModel):
    data: Optional[Data526] = None


class Data527(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription1(BaseModel):
    data: Optional[Data527] = None


class Relationships224(BaseModel):
    app: App37
    inAppPurchaseV2: Optional[InAppPurchaseV210] = None
    subscription: Optional[Subscription1] = None


class Data524(BaseModel):
    type: Literal["promotedPurchases"]
    attributes: Attributes314
    relationships: Relationships224


class PromotedPurchaseCreateRequest(BaseModel):
    data: Data524


class Attributes315(BaseModel):
    visibleForAllUsers: Optional[bool] = None
    enabled: Optional[bool] = None


class Data528(BaseModel):
    type: Literal["promotedPurchases"]
    id: str
    attributes: Optional[Attributes315] = None


class PromotedPurchaseUpdateRequest(BaseModel):
    data: Data528


class Attributes316(BaseModel):
    state: Optional[
        Literal["READY_FOR_REVIEW", "ACCEPTED", "APPROVED", "REJECTED", "REMOVED"]
    ] = None


class Data529(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion14(BaseModel):
    data: Optional[Data529] = None


class Data530(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str


class AppCustomProductPageVersion3(BaseModel):
    data: Optional[Data530] = None


class Data531(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class AppStoreVersionExperiment2(BaseModel):
    data: Optional[Data531] = None


class AppStoreVersionExperimentV22(BaseModel):
    data: Optional[Data531] = None


class Data533(BaseModel):
    type: Literal["appEvents"]
    id: str


class AppEvent2(BaseModel):
    data: Optional[Data533] = None


class Relationships225(BaseModel):
    appStoreVersion: Optional[AppStoreVersion14] = None
    appCustomProductPageVersion: Optional[AppCustomProductPageVersion3] = None
    appStoreVersionExperiment: Optional[AppStoreVersionExperiment2] = None
    appStoreVersionExperimentV2: Optional[AppStoreVersionExperimentV22] = None
    appEvent: Optional[AppEvent2] = None


class Data535(BaseModel):
    type: Literal["reviewSubmissions"]
    id: str


class ReviewSubmission1(BaseModel):
    data: Data535


class Data536(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion15(BaseModel):
    data: Optional[Data536] = None


class Data537(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str


class AppCustomProductPageVersion4(BaseModel):
    data: Optional[Data537] = None


class Data538(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class AppStoreVersionExperiment3(BaseModel):
    data: Optional[Data538] = None


class AppStoreVersionExperimentV23(BaseModel):
    data: Optional[Data538] = None


class Data540(BaseModel):
    type: Literal["appEvents"]
    id: str


class AppEvent3(BaseModel):
    data: Optional[Data540] = None


class Relationships226(BaseModel):
    reviewSubmission: ReviewSubmission1
    appStoreVersion: Optional[AppStoreVersion15] = None
    appCustomProductPageVersion: Optional[AppCustomProductPageVersion4] = None
    appStoreVersionExperiment: Optional[AppStoreVersionExperiment3] = None
    appStoreVersionExperimentV2: Optional[AppStoreVersionExperimentV23] = None
    appEvent: Optional[AppEvent3] = None


class Data534(BaseModel):
    type: Literal["reviewSubmissionItems"]
    relationships: Relationships226


class ReviewSubmissionItemCreateRequest(BaseModel):
    data: Data534


class Attributes317(BaseModel):
    resolved: Optional[bool] = None
    removed: Optional[bool] = None


class Data541(BaseModel):
    type: Literal["reviewSubmissionItems"]
    id: str
    attributes: Optional[Attributes317] = None


class ReviewSubmissionItemUpdateRequest(BaseModel):
    data: Data541


class Data542(BaseModel):
    type: Literal["apps"]
    id: str


class App38(BaseModel):
    data: Optional[Data542] = None


class Datum155(BaseModel):
    type: Literal["reviewSubmissionItems"]
    id: str


class Data543(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersionForReview(BaseModel):
    data: Optional[Data543] = None


class Data544(BaseModel):
    type: Literal["actors"]
    id: str


class SubmittedByActor1(BaseModel):
    data: Optional[Data544] = None


class LastUpdatedByActor(BaseModel):
    data: Optional[Data544] = None


class Data547(BaseModel):
    type: Literal["apps"]
    id: str


class App39(BaseModel):
    data: Data547


class Relationships228(BaseModel):
    app: App39


class Data549(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppStoreVersion16(BaseModel):
    data: Optional[Data549] = None


class Relationships229(BaseModel):
    appStoreVersion: Optional[AppStoreVersion16] = None


class Attributes322(BaseModel):
    fileSize: int
    fileName: str


class AppStoreVersion17(BaseModel):
    data: Data549


class Relationships230(BaseModel):
    appStoreVersion: AppStoreVersion17


class Data550(BaseModel):
    type: Literal["routingAppCoverages"]
    attributes: Attributes322
    relationships: Relationships230


class RoutingAppCoverageCreateRequest(BaseModel):
    data: Data550


class Attributes323(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data552(BaseModel):
    type: Literal["routingAppCoverages"]
    id: str
    attributes: Optional[Attributes323] = None


class RoutingAppCoverageUpdateRequest(BaseModel):
    data: Data552


class Datum156(BaseModel):
    type: Literal["sandboxTesters"]
    id: str


class SandboxTesters(BaseModel):
    data: List[Datum156]


class Relationships231(BaseModel):
    sandboxTesters: SandboxTesters


class Data554(BaseModel):
    type: Literal["sandboxTestersClearPurchaseHistoryRequest"]
    relationships: Relationships231


class SandboxTestersClearPurchaseHistoryRequestV2CreateRequest(BaseModel):
    data: Data554


class Data555(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Repository2(BaseModel):
    data: Optional[Data555] = None


class Relationships232(BaseModel):
    repository: Optional[Repository2] = None


class Attributes328(BaseModel):
    title: Optional[str] = None
    number: Optional[int] = None
    webUrl: Optional[AnyUrl] = None
    sourceRepositoryOwner: Optional[str] = None
    sourceRepositoryName: Optional[str] = None
    sourceBranchName: Optional[str] = None
    destinationRepositoryOwner: Optional[str] = None
    destinationRepositoryName: Optional[str] = None
    destinationBranchName: Optional[str] = None
    isClosed: Optional[bool] = None
    isCrossRepository: Optional[bool] = None


class Repository3(BaseModel):
    data: Optional[Data555] = None


class Relationships234(BaseModel):
    repository: Optional[Repository3] = None


class Attributes329(BaseModel):
    lastAccessedDate: Optional[AwareDatetime] = None
    httpCloneUrl: Optional[AnyUrl] = None
    sshCloneUrl: Optional[AnyUrl] = None
    ownerName: Optional[str] = None
    repositoryName: Optional[str] = None


class Data557(BaseModel):
    type: Literal["scmProviders"]
    id: str


class ScmProvider1(BaseModel):
    data: Optional[Data557] = None


class Data558(BaseModel):
    type: Literal["scmGitReferences"]
    id: str


class DefaultBranch(BaseModel):
    data: Optional[Data558] = None


class Data559(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription2(BaseModel):
    data: Optional[Data559] = None


class Relationships236(BaseModel):
    subscription: Optional[Subscription2] = None


class Attributes331(BaseModel):
    fileSize: int
    fileName: str


class Subscription3(BaseModel):
    data: Data559


class Relationships237(BaseModel):
    subscription: Subscription3


class Data560(BaseModel):
    type: Literal["subscriptionAppStoreReviewScreenshots"]
    attributes: Attributes331
    relationships: Relationships237


class SubscriptionAppStoreReviewScreenshotCreateRequest(BaseModel):
    data: Data560


class Attributes332(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data562(BaseModel):
    type: Literal["subscriptionAppStoreReviewScreenshots"]
    id: str
    attributes: Optional[Attributes332] = None


class SubscriptionAppStoreReviewScreenshotUpdateRequest(BaseModel):
    data: Data562


class Attributes333(BaseModel):
    availableInNewTerritories: Optional[bool] = None


class Datum157(BaseModel):
    type: Literal["territories"]
    id: str


class Attributes334(BaseModel):
    availableInNewTerritories: bool


class Data564(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription4(BaseModel):
    data: Data564


class AvailableTerritories3(BaseModel):
    data: List[Datum157]


class Relationships239(BaseModel):
    subscription: Subscription4
    availableTerritories: AvailableTerritories3


class Data563(BaseModel):
    type: Literal["subscriptionAvailabilities"]
    attributes: Attributes334
    relationships: Relationships239


class SubscriptionAvailabilityCreateRequest(BaseModel):
    data: Data563


class Attributes337(BaseModel):
    name: Optional[str] = None
    customAppName: Optional[str] = None
    locale: Optional[str] = None
    state: Optional[
        Literal["PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED"]
    ] = None


class Data566(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str


class SubscriptionGroup1(BaseModel):
    data: Optional[Data566] = None


class Relationships240(BaseModel):
    subscriptionGroup: Optional[SubscriptionGroup1] = None


class Attributes338(BaseModel):
    name: str
    customAppName: Optional[str] = None
    locale: str


class SubscriptionGroup2(BaseModel):
    data: Data566


class Relationships241(BaseModel):
    subscriptionGroup: SubscriptionGroup2


class Data567(BaseModel):
    type: Literal["subscriptionGroupLocalizations"]
    attributes: Attributes338
    relationships: Relationships241


class SubscriptionGroupLocalizationCreateRequest(BaseModel):
    data: Data567


class Attributes339(BaseModel):
    name: Optional[str] = None
    customAppName: Optional[str] = None


class Data569(BaseModel):
    type: Literal["subscriptionGroupLocalizations"]
    id: str
    attributes: Optional[Attributes339] = None


class SubscriptionGroupLocalizationUpdateRequest(BaseModel):
    data: Data569


class Data571(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str


class SubscriptionGroup3(BaseModel):
    data: Data571


class Relationships242(BaseModel):
    subscriptionGroup: SubscriptionGroup3


class Data570(BaseModel):
    type: Literal["subscriptionGroupSubmissions"]
    relationships: Relationships242


class SubscriptionGroupSubmissionCreateRequest(BaseModel):
    data: Data570


class Attributes340(BaseModel):
    referenceName: Optional[str] = None


class Datum159(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Datum160(BaseModel):
    type: Literal["subscriptionGroupLocalizations"]
    id: str


class Attributes341(BaseModel):
    referenceName: str


class Data573(BaseModel):
    type: Literal["apps"]
    id: str


class App40(BaseModel):
    data: Data573


class Relationships244(BaseModel):
    app: App40


class Data572(BaseModel):
    type: Literal["subscriptionGroups"]
    attributes: Attributes341
    relationships: Relationships244


class SubscriptionGroupCreateRequest(BaseModel):
    data: Data572


class Attributes342(BaseModel):
    referenceName: Optional[str] = None


class Data574(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str
    attributes: Optional[Attributes342] = None


class SubscriptionGroupUpdateRequest(BaseModel):
    data: Data574


class Data575(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription5(BaseModel):
    data: Optional[Data575] = None


class Relationships245(BaseModel):
    subscription: Optional[Subscription5] = None


class Attributes344(BaseModel):
    fileSize: int
    fileName: str


class Subscription6(BaseModel):
    data: Data575


class Relationships246(BaseModel):
    subscription: Subscription6


class Data576(BaseModel):
    type: Literal["subscriptionImages"]
    attributes: Attributes344
    relationships: Relationships246


class SubscriptionImageCreateRequest(BaseModel):
    data: Data576


class Attributes345(BaseModel):
    sourceFileChecksum: Optional[str] = None
    uploaded: Optional[bool] = None


class Data578(BaseModel):
    type: Literal["subscriptionImages"]
    id: str
    attributes: Optional[Attributes345] = None


class SubscriptionImageUpdateRequest(BaseModel):
    data: Data578


class Data579(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription7(BaseModel):
    data: Optional[Data579] = None


class Data580(BaseModel):
    type: Literal["territories"]
    id: str


class Territory5(BaseModel):
    data: Optional[Data580] = None


class Data581(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint(BaseModel):
    data: Optional[Data581] = None


class Relationships247(BaseModel):
    subscription: Optional[Subscription7] = None
    territory: Optional[Territory5] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint] = None


class Data582(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription8(BaseModel):
    data: Optional[Data582] = None


class Data583(BaseModel):
    type: Literal["territories"]
    id: str


class Territory6(BaseModel):
    data: Optional[Data583] = None


class Data584(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint1(BaseModel):
    data: Optional[Data584] = None


class Relationships248(BaseModel):
    subscription: Optional[Subscription8] = None
    territory: Optional[Territory6] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint1] = None


class Data586(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription9(BaseModel):
    data: Data586


class Data587(BaseModel):
    type: Literal["territories"]
    id: str


class Territory7(BaseModel):
    data: Optional[Data587] = None


class Data588(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint2(BaseModel):
    data: Optional[Data588] = None


class Relationships249(BaseModel):
    subscription: Subscription9
    territory: Optional[Territory7] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint2] = None


class Attributes349(BaseModel):
    endDate: Optional[date] = None


class Data589(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    id: str
    attributes: Optional[Attributes349] = None


class SubscriptionIntroductoryOfferUpdateRequest(BaseModel):
    data: Data589


class Attributes350(BaseModel):
    name: Optional[str] = None
    locale: Optional[str] = None
    description: Optional[str] = None
    state: Optional[
        Literal["PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED"]
    ] = None


class Data590(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription10(BaseModel):
    data: Optional[Data590] = None


class Relationships250(BaseModel):
    subscription: Optional[Subscription10] = None


class Attributes351(BaseModel):
    name: str
    locale: str
    description: Optional[str] = None


class Subscription11(BaseModel):
    data: Data590


class Relationships251(BaseModel):
    subscription: Subscription11


class Data591(BaseModel):
    type: Literal["subscriptionLocalizations"]
    attributes: Attributes351
    relationships: Relationships251


class SubscriptionLocalizationCreateRequest(BaseModel):
    data: Data591


class Attributes352(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None


class Data593(BaseModel):
    type: Literal["subscriptionLocalizations"]
    id: str
    attributes: Optional[Attributes352] = None


class SubscriptionLocalizationUpdateRequest(BaseModel):
    data: Data593


class Attributes353(BaseModel):
    customCode: Optional[str] = None
    numberOfCodes: Optional[int] = None
    createdDate: Optional[AwareDatetime] = None
    expirationDate: Optional[date] = None
    active: Optional[bool] = None


class Data594(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    id: str


class OfferCode(BaseModel):
    data: Optional[Data594] = None


class Relationships252(BaseModel):
    offerCode: Optional[OfferCode] = None


class Attributes354(BaseModel):
    customCode: str
    numberOfCodes: int
    expirationDate: Optional[date] = None


class OfferCode1(BaseModel):
    data: Data594


class Relationships253(BaseModel):
    offerCode: OfferCode1


class Data595(BaseModel):
    type: Literal["subscriptionOfferCodeCustomCodes"]
    attributes: Attributes354
    relationships: Relationships253


class SubscriptionOfferCodeCustomCodeCreateRequest(BaseModel):
    data: Data595


class Attributes355(BaseModel):
    active: Optional[bool] = None


class Data597(BaseModel):
    type: Literal["subscriptionOfferCodeCustomCodes"]
    id: str
    attributes: Optional[Attributes355] = None


class SubscriptionOfferCodeCustomCodeUpdateRequest(BaseModel):
    data: Data597


class Attributes356(BaseModel):
    numberOfCodes: Optional[int] = None
    createdDate: Optional[AwareDatetime] = None
    expirationDate: Optional[date] = None
    active: Optional[bool] = None


class Data598(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    id: str


class OfferCode2(BaseModel):
    data: Optional[Data598] = None


class Attributes357(BaseModel):
    numberOfCodes: int
    expirationDate: date


class OfferCode3(BaseModel):
    data: Data598


class Relationships255(BaseModel):
    offerCode: OfferCode3


class Data599(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodes"]
    attributes: Attributes357
    relationships: Relationships255


class SubscriptionOfferCodeOneTimeUseCodeCreateRequest(BaseModel):
    data: Data599


class Attributes358(BaseModel):
    active: Optional[bool] = None


class Data601(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodes"]
    id: str
    attributes: Optional[Attributes358] = None


class SubscriptionOfferCodeOneTimeUseCodeUpdateRequest(BaseModel):
    data: Data601


class Data602(BaseModel):
    type: Literal["territories"]
    id: str


class Territory8(BaseModel):
    data: Optional[Data602] = None


class Data603(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint3(BaseModel):
    data: Optional[Data603] = None


class Relationships256(BaseModel):
    territory: Optional[Territory8] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint3] = None


class Data604(BaseModel):
    type: Literal["territories"]
    id: str


class Territory9(BaseModel):
    data: Optional[Data604] = None


class Data605(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint4(BaseModel):
    data: Optional[Data605] = None


class Relationships257(BaseModel):
    territory: Optional[Territory9] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint4] = None


class SubscriptionOfferCodePriceInlineCreate(BaseModel):
    type: Literal["subscriptionOfferCodePrices"]
    id: Optional[str] = None
    relationships: Optional[Relationships257] = None


class Data606(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription12(BaseModel):
    data: Optional[Data606] = None


class Datum161(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodes"]
    id: str


class Datum162(BaseModel):
    type: Literal["subscriptionOfferCodeCustomCodes"]
    id: str


class Datum163(BaseModel):
    type: Literal["subscriptionOfferCodePrices"]
    id: str


class Subscription13(BaseModel):
    data: Data606


class Prices1(BaseModel):
    data: List[Datum163]


class Relationships259(BaseModel):
    subscription: Subscription13
    prices: Prices1


class Data609(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    id: str
    attributes: Optional[Attributes358] = None


class SubscriptionOfferCodeUpdateRequest(BaseModel):
    data: Data609


class Attributes362(BaseModel):
    customerPrice: Optional[str] = None
    proceeds: Optional[str] = None
    proceedsYear2: Optional[str] = None


class Data610(BaseModel):
    type: Literal["territories"]
    id: str


class Territory10(BaseModel):
    data: Optional[Data610] = None


class SubscriptionPricePointInlineCreate(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: Optional[str] = None


class Attributes363(BaseModel):
    startDate: Optional[date] = None
    preserved: Optional[bool] = None


class Territory11(BaseModel):
    data: Optional[Data610] = None


class Data612(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint5(BaseModel):
    data: Optional[Data612] = None


class Relationships261(BaseModel):
    territory: Optional[Territory11] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint5] = None


class Attributes364(BaseModel):
    startDate: Optional[date] = None
    preserveCurrentPrice: Optional[bool] = None


class Data613(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription14(BaseModel):
    data: Optional[Data613] = None


class Data614(BaseModel):
    type: Literal["territories"]
    id: str


class Territory12(BaseModel):
    data: Optional[Data614] = None


class Data615(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint6(BaseModel):
    data: Optional[Data615] = None


class Relationships262(BaseModel):
    subscription: Optional[Subscription14] = None
    territory: Optional[Territory12] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint6] = None


class SubscriptionPriceInlineCreate(BaseModel):
    type: Literal["subscriptionPrices"]
    id: Optional[str] = None
    attributes: Optional[Attributes364] = None
    relationships: Optional[Relationships262] = None


class Data617(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription15(BaseModel):
    data: Data617


class Data618(BaseModel):
    type: Literal["territories"]
    id: str


class Territory13(BaseModel):
    data: Optional[Data618] = None


class Data619(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint7(BaseModel):
    data: Data619


class Relationships263(BaseModel):
    subscription: Subscription15
    territory: Optional[Territory13] = None
    subscriptionPricePoint: SubscriptionPricePoint7


class Data616(BaseModel):
    type: Literal["subscriptionPrices"]
    attributes: Optional[Attributes364] = None
    relationships: Relationships263


class SubscriptionPriceCreateRequest(BaseModel):
    data: Data616


class Data620(BaseModel):
    type: Literal["territories"]
    id: str


class Territory14(BaseModel):
    data: Optional[Data620] = None


class Data621(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint8(BaseModel):
    data: Optional[Data621] = None


class Relationships264(BaseModel):
    territory: Optional[Territory14] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint8] = None


class Data622(BaseModel):
    type: Literal["territories"]
    id: str


class Territory15(BaseModel):
    data: Optional[Data622] = None


class Data623(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint9(BaseModel):
    data: Optional[Data623] = None


class Relationships265(BaseModel):
    territory: Optional[Territory15] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint9] = None


class SubscriptionPromotionalOfferPriceInlineCreate(BaseModel):
    type: Literal["subscriptionPromotionalOfferPrices"]
    id: Optional[str] = None
    relationships: Optional[Relationships265] = None


class Data624(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription16(BaseModel):
    data: Optional[Data624] = None


class Datum165(BaseModel):
    type: Literal["subscriptionPromotionalOfferPrices"]
    id: str


class Subscription17(BaseModel):
    data: Optional[Data624] = None


class Prices3(BaseModel):
    data: Optional[List[Datum165]] = None


class Relationships267(BaseModel):
    subscription: Optional[Subscription17] = None
    prices: Optional[Prices3] = None


class Subscription18(BaseModel):
    data: Data624


class Prices4(BaseModel):
    data: List[Datum165]


class Relationships268(BaseModel):
    subscription: Subscription18
    prices: Prices4


class Prices5(BaseModel):
    data: Optional[List[Datum165]] = None


class Relationships269(BaseModel):
    prices: Optional[Prices5] = None


class Data628(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    id: str
    relationships: Optional[Relationships269] = None


class SubscriptionPromotionalOfferUpdateRequest(BaseModel):
    data: Data628
    included: Optional[List[SubscriptionPromotionalOfferPriceInlineCreate]] = None


class Data629(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription19(BaseModel):
    data: Optional[Data629] = None


class Relationships270(BaseModel):
    subscription: Optional[Subscription19] = None


class Subscription20(BaseModel):
    data: Data629


class Relationships271(BaseModel):
    subscription: Subscription20


class Data630(BaseModel):
    type: Literal["subscriptionSubmissions"]
    relationships: Relationships271


class SubscriptionSubmissionCreateRequest(BaseModel):
    data: Data630


class Attributes369(BaseModel):
    name: Optional[str] = None
    productId: Optional[str] = None
    familySharable: Optional[bool] = None
    state: Optional[
        Literal[
            "MISSING_METADATA",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "DEVELOPER_ACTION_NEEDED",
            "PENDING_BINARY_APPROVAL",
            "APPROVED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "REMOVED_FROM_SALE",
            "REJECTED",
        ]
    ] = None
    subscriptionPeriod: Optional[
        Literal[
            "ONE_WEEK",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = None
    reviewNote: Optional[str] = None
    groupLevel: Optional[int] = None


class Datum169(BaseModel):
    type: Literal["subscriptionLocalizations"]
    id: str


class Data632(BaseModel):
    type: Literal["subscriptionAppStoreReviewScreenshots"]
    id: str


class Data633(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str


class Group(BaseModel):
    data: Optional[Data633] = None


class Datum170(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    id: str


class Datum171(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    id: str


class Datum172(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    id: str


class Datum173(BaseModel):
    type: Literal["subscriptionPrices"]
    id: str


class Data634(BaseModel):
    type: Literal["promotedPurchases"]
    id: str


class Data635(BaseModel):
    type: Literal["subscriptionAvailabilities"]
    id: str


class Datum174(BaseModel):
    type: Literal["winBackOffers"]
    id: str


class Datum175(BaseModel):
    type: Literal["subscriptionImages"]
    id: str


class Attributes370(BaseModel):
    name: str
    productId: str
    familySharable: Optional[bool] = None
    subscriptionPeriod: Optional[
        Literal[
            "ONE_WEEK",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = None
    reviewNote: Optional[str] = None
    groupLevel: Optional[int] = None


class Data637(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str


class Group1(BaseModel):
    data: Data637


class Relationships273(BaseModel):
    group: Group1


class Data636(BaseModel):
    type: Literal["subscriptions"]
    attributes: Attributes370
    relationships: Relationships273


class SubscriptionCreateRequest(BaseModel):
    data: Data636


class Attributes371(BaseModel):
    name: Optional[str] = None
    familySharable: Optional[bool] = None
    subscriptionPeriod: Optional[
        Literal[
            "ONE_WEEK",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = None
    reviewNote: Optional[str] = None
    groupLevel: Optional[int] = None


class Datum176(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    id: str


class IntroductoryOffers1(BaseModel):
    data: Optional[List[Datum176]] = None


class Datum177(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    id: str


class PromotionalOffers1(BaseModel):
    data: Optional[List[Datum177]] = None


class Datum178(BaseModel):
    type: Literal["subscriptionPrices"]
    id: str


class Prices7(BaseModel):
    data: Optional[List[Datum178]] = None


class Relationships274(BaseModel):
    introductoryOffers: Optional[IntroductoryOffers1] = None
    promotionalOffers: Optional[PromotionalOffers1] = None
    prices: Optional[Prices7] = None


class Data638(BaseModel):
    type: Literal["subscriptions"]
    id: str
    attributes: Optional[Attributes371] = None
    relationships: Optional[Relationships274] = None


class Attributes372(BaseModel):
    currency: Optional[str] = None


class TerritoryInlineCreate(BaseModel):
    type: Literal["territories"]
    id: Optional[str] = None


class Attributes373(BaseModel):
    available: Optional[bool] = None
    releaseDate: Optional[date] = None
    preOrderEnabled: Optional[bool] = None
    preOrderPublishDate: Optional[date] = None
    contentStatuses: Optional[
        List[
            Literal[
                "AVAILABLE",
                "AVAILABLE_FOR_PREORDER_ON_DATE",
                "PROCESSING_TO_NOT_AVAILABLE",
                "PROCESSING_TO_AVAILABLE",
                "PROCESSING_TO_PRE_ORDER",
                "AVAILABLE_FOR_SALE_UNRELEASED_APP",
                "PREORDER_ON_UNRELEASED_APP",
                "AVAILABLE_FOR_PREORDER",
                "MISSING_RATING",
                "CANNOT_SELL_RESTRICTED_RATING",
                "BRAZIL_REQUIRED_TAX_ID",
                "MISSING_GRN",
                "UNVERIFIED_GRN",
                "ICP_NUMBER_INVALID",
                "ICP_NUMBER_MISSING",
                "TRADER_STATUS_NOT_PROVIDED",
                "TRADER_STATUS_VERIFICATION_FAILED",
                "TRADER_STATUS_VERIFICATION_STATUS_MISSING",
                "CANNOT_SELL_SEVENTEEN_PLUS_APPS",
                "CANNOT_SELL_SEXUALLY_EXPLICIT",
                "CANNOT_SELL_NON_IOS_GAMES",
                "CANNOT_SELL_SEVENTEEN_PLUS_GAMES",
                "CANNOT_SELL_CASINO",
                "CANNOT_SELL_CASINO_WITHOUT_GRAC",
                "CANNOT_SELL_CASINO_WITHOUT_AGE_VERIFICATION",
                "CANNOT_SELL_ADULT_ONLY",
                "CANNOT_SELL_GAMBLING_CONTESTS",
                "CANNOT_SELL_GAMBLING",
                "CANNOT_SELL_CONTESTS",
                "CANNOT_SELL",
            ]
        ]
    ] = None


class Data639(BaseModel):
    type: Literal["territories"]
    id: str


class Territory16(BaseModel):
    data: Optional[Data639] = None


class Relationships275(BaseModel):
    territory: Optional[Territory16] = None


class TerritoryAvailabilityInlineCreate(BaseModel):
    type: Literal["territoryAvailabilities"]
    id: Optional[str] = None


class Attributes374(BaseModel):
    available: Optional[bool] = None
    releaseDate: Optional[date] = None
    preOrderEnabled: Optional[bool] = None


class Data640(BaseModel):
    type: Literal["territoryAvailabilities"]
    id: str
    attributes: Optional[Attributes374] = None


class TerritoryAvailabilityUpdateRequest(BaseModel):
    data: Data640


class Datum179(BaseModel):
    type: Literal["apps"]
    id: str


class VisibleApps1(BaseModel):
    data: Optional[List[Datum179]] = None


class Relationships277(BaseModel):
    visibleApps: Optional[VisibleApps1] = None


class VisibleApps3(BaseModel):
    data: Optional[List[Datum179]] = None


class Relationships279(BaseModel):
    visibleApps: Optional[VisibleApps3] = None


class Request(BaseModel):
    url: Optional[AnyUrl] = None


class Response1(BaseModel):
    httpStatusCode: Optional[int] = None
    body: Optional[str] = None


class Attributes379(BaseModel):
    createdDate: Optional[AwareDatetime] = None
    deliveryState: Optional[Literal["SUCCEEDED", "FAILED", "PENDING"]] = None
    errorMessage: Optional[str] = None
    redelivery: Optional[bool] = None
    sentDate: Optional[AwareDatetime] = None
    request: Optional[Request] = None
    response: Optional[Response1] = None


class Data643(BaseModel):
    type: Literal["webhookEvents"]
    id: str


class Event(BaseModel):
    data: Optional[Data643] = None


class Relationships280(BaseModel):
    event: Optional[Event] = None


class Data645(BaseModel):
    type: Literal["webhookDeliveries"]
    id: str


class Template(BaseModel):
    data: Data645


class Relationships281(BaseModel):
    template: Template


class Data644(BaseModel):
    type: Literal["webhookDeliveries"]
    relationships: Relationships281


class WebhookDeliveryCreateRequest(BaseModel):
    data: Data644


class Data647(BaseModel):
    type: Literal["webhooks"]
    id: str


class Webhook(BaseModel):
    data: Data647


class Relationships282(BaseModel):
    webhook: Webhook


class Data646(BaseModel):
    type: Literal["webhookPings"]
    relationships: Relationships282


class WebhookPingCreateRequest(BaseModel):
    data: Data646


class Data648(BaseModel):
    type: Literal["apps"]
    id: str


class App41(BaseModel):
    data: Optional[Data648] = None


class App42(BaseModel):
    data: Data648


class Relationships284(BaseModel):
    app: App42


class Data652(BaseModel):
    type: Literal["territories"]
    id: str


class Territory17(BaseModel):
    data: Optional[Data652] = None


class Data653(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class SubscriptionPricePoint10(BaseModel):
    data: Optional[Data653] = None


class Relationships285(BaseModel):
    territory: Optional[Territory17] = None
    subscriptionPricePoint: Optional[SubscriptionPricePoint10] = None


class WinBackOfferPriceInlineCreate(BaseModel):
    type: Literal["winBackOfferPrices"]
    id: Optional[str] = None


class Datum183(BaseModel):
    type: Literal["winBackOfferPrices"]
    id: str


class Data655(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Subscription21(BaseModel):
    data: Data655


class Prices9(BaseModel):
    data: List[Datum183]


class Relationships287(BaseModel):
    subscription: Subscription21
    prices: Prices9


class Datum185(BaseModel):
    type: Literal["alternativeDistributionPackageDeltas"]
    id: str


class Datum186(BaseModel):
    type: Literal["alternativeDistributionPackageVariants"]
    id: str


class Datum187(BaseModel):
    type: Literal["alternativeDistributionPackageVersions"]
    id: str


class Datum188(BaseModel):
    type: Literal["analyticsReportSegments"]
    id: str


class Datum189(BaseModel):
    type: Literal["analyticsReports"]
    id: str


class Datum190(BaseModel):
    type: Literal["analyticsReportInstances"]
    id: str


class Datum191(BaseModel):
    type: Literal["territoryAvailabilities"]
    id: str


class Data657(BaseModel):
    type: Literal["appCategories"]
    id: str


class Datum192(BaseModel):
    type: Literal["appCategories"]
    id: str


class Data658(BaseModel):
    type: Literal["appClipHeaderImages"]
    id: str


class Data659(BaseModel):
    type: Literal["appClipAppStoreReviewDetails"]
    id: str


class Datum193(BaseModel):
    type: Literal["appClipDefaultExperienceLocalizations"]
    id: str


class Data660(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageRequest(BaseModel):
    data: Data660


class Datum194(BaseModel):
    type: Literal["appClipAdvancedExperiences"]
    id: str


class Datum195(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class Datum196(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class Datum197(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class Datum198(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str


class Datum199(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str


class Data662(BaseModel):
    type: Literal["apps"]
    id: str


class Data663(BaseModel):
    type: Literal["appEncryptionDeclarationDocuments"]
    id: str


class Datum200(BaseModel):
    type: Literal["builds"]
    id: str


class AppEncryptionDeclarationBuildsLinkagesRequest(BaseModel):
    data: List[Datum200]


class Datum201(BaseModel):
    type: Literal["appEventScreenshots"]
    id: str


class Datum202(BaseModel):
    type: Literal["appEventVideoClips"]
    id: str


class Datum203(BaseModel):
    type: Literal["appEventLocalizations"]
    id: str


class Data664(BaseModel):
    type: Literal["ageRatingDeclarations"]
    id: str


class Datum204(BaseModel):
    type: Literal["appInfoLocalizations"]
    id: str


class Data665(BaseModel):
    type: Literal["appCategories"]
    id: str


class Datum205(BaseModel):
    type: Literal["appPreviews"]
    id: str


class AppPreviewSetAppPreviewsLinkagesRequest(BaseModel):
    data: List[Datum205]


class Datum207(BaseModel):
    type: Literal["appPricePoints"]
    id: str


class Datum208(BaseModel):
    type: Literal["appPrices"]
    id: str


class Data671(BaseModel):
    type: Literal["territories"]
    id: str


class Datum210(BaseModel):
    type: Literal["appScreenshots"]
    id: str


class AppScreenshotSetAppScreenshotsLinkagesRequest(BaseModel):
    data: List[Datum210]


class Datum212(BaseModel):
    type: Literal["appStoreReviewAttachments"]
    id: str


class Datum213(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class Datum214(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class Datum215(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str


class Datum216(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    id: str


class Datum218(BaseModel):
    type: Literal["appPreviewSets"]
    id: str


class Datum219(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str


class Data672(BaseModel):
    type: Literal["ageRatingDeclarations"]
    id: str


class Data673(BaseModel):
    type: Literal["alternativeDistributionPackages"]
    id: str


class Data674(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str


class AppStoreVersionAppClipDefaultExperienceLinkageRequest(BaseModel):
    data: Data674


class Data676(BaseModel):
    type: Literal["appStoreReviewDetails"]
    id: str


class Datum220(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class Datum222(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str


class Data677(BaseModel):
    type: Literal["appStoreVersionPhasedReleases"]
    id: str


class Data678(BaseModel):
    type: Literal["appStoreVersionSubmissions"]
    id: str


class Data679(BaseModel):
    type: Literal["builds"]
    id: str


class AppStoreVersionBuildLinkageRequest(BaseModel):
    data: Data679


class Datum223(BaseModel):
    type: Literal["customerReviews"]
    id: str


class Data681(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str


class Data682(BaseModel):
    type: Literal["routingAppCoverages"]
    id: str


class Datum224(BaseModel):
    type: Literal["accessibilityDeclarations"]
    id: str


class Data683(BaseModel):
    type: Literal["alternativeDistributionKeys"]
    id: str


class Datum225(BaseModel):
    type: Literal["analyticsReportRequests"]
    id: str


class Data684(BaseModel):
    type: Literal["appAvailabilities"]
    id: str


class Datum226(BaseModel):
    type: Literal["appClips"]
    id: str


class Datum227(BaseModel):
    type: Literal["appCustomProductPages"]
    id: str


class Datum228(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str


class Datum229(BaseModel):
    type: Literal["appEvents"]
    id: str


class Datum230(BaseModel):
    type: Literal["appInfos"]
    id: str


class Datum231(BaseModel):
    type: Literal["appPricePoints"]
    id: str


class Data685(BaseModel):
    type: Literal["appPriceSchedules"]
    id: str


class Datum232(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str


class Datum233(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Datum234(BaseModel):
    type: Literal["backgroundAssets"]
    id: str


class Datum235(BaseModel):
    type: Literal["betaAppLocalizations"]
    id: str


class Data686(BaseModel):
    type: Literal["betaAppReviewDetails"]
    id: str


class Datum236(BaseModel):
    type: Literal["betaFeedbackCrashSubmissions"]
    id: str


class Datum237(BaseModel):
    type: Literal["betaFeedbackScreenshotSubmissions"]
    id: str


class Datum238(BaseModel):
    type: Literal["betaGroups"]
    id: str


class Data687(BaseModel):
    type: Literal["betaLicenseAgreements"]
    id: str


class Datum239(BaseModel):
    type: Literal["betaTesters"]
    id: str


class AppBetaTestersLinkagesRequest(BaseModel):
    data: List[Datum239]


class Datum240(BaseModel):
    type: Literal["builds"]
    id: str


class Data688(BaseModel):
    type: Literal["ciProducts"]
    id: str


class Datum241(BaseModel):
    type: Literal["customerReviews"]
    id: str


class Data689(BaseModel):
    type: Literal["endUserLicenseAgreements"]
    id: str


class Data690(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class Datum242(BaseModel):
    type: Literal["gameCenterEnabledVersions"]
    id: str


class Datum243(BaseModel):
    type: Literal["inAppPurchases"]
    id: str


class Data691(BaseModel):
    type: Literal["marketplaceSearchDetails"]
    id: str


class Datum245(BaseModel):
    type: Literal["perfPowerMetrics"]
    id: str


class Datum246(BaseModel):
    type: Literal["preReleaseVersions"]
    id: str


class Datum247(BaseModel):
    type: Literal["promotedPurchases"]
    id: str


class AppPromotedPurchasesLinkagesRequest(BaseModel):
    data: List[Datum247]


class Datum249(BaseModel):
    type: Literal["reviewSubmissions"]
    id: str


class Data692(BaseModel):
    type: Literal["subscriptionGracePeriods"]
    id: str


class Datum250(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str


class Datum251(BaseModel):
    type: Literal["webhooks"]
    id: str


class Datum252(BaseModel):
    type: Literal["backgroundAssetUploadFiles"]
    id: str


class Datum253(BaseModel):
    type: Literal["backgroundAssetVersions"]
    id: str


class Data693(BaseModel):
    type: Literal["apps"]
    id: str


class Data695(BaseModel):
    type: Literal["builds"]
    id: str


class Data697(BaseModel):
    type: Literal["betaCrashLogs"]
    id: str


class Data698(BaseModel):
    type: Literal["apps"]
    id: str


class Data699(BaseModel):
    type: Literal["betaRecruitmentCriteria"]
    id: str


class Data700(BaseModel):
    type: Literal["betaRecruitmentCriterionCompatibleBuildChecks"]
    id: str


class Datum254(BaseModel):
    type: Literal["betaTesters"]
    id: str


class BetaGroupBetaTestersLinkagesRequest(BaseModel):
    data: List[Datum254]


class Datum256(BaseModel):
    type: Literal["builds"]
    id: str


class BetaGroupBuildsLinkagesRequest(BaseModel):
    data: List[Datum256]


class Data701(BaseModel):
    type: Literal["apps"]
    id: str


class Datum258(BaseModel):
    type: Literal["apps"]
    id: str


class BetaTesterAppsLinkagesRequest(BaseModel):
    data: List[Datum258]


class Datum260(BaseModel):
    type: Literal["betaGroups"]
    id: str


class BetaTesterBetaGroupsLinkagesRequest(BaseModel):
    data: List[Datum260]


class Datum262(BaseModel):
    type: Literal["builds"]
    id: str


class BetaTesterBuildsLinkagesRequest(BaseModel):
    data: List[Datum262]


class Data702(BaseModel):
    type: Literal["builds"]
    id: str


class Data703(BaseModel):
    type: Literal["appClipDomainStatuses"]
    id: str


class Datum264(BaseModel):
    type: Literal["betaAppClipInvocations"]
    id: str


class Datum265(BaseModel):
    type: Literal["buildBundleFileSizes"]
    id: str


class Data705(BaseModel):
    type: Literal["apps"]
    id: str


class Data706(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str


class BuildAppEncryptionDeclarationLinkageRequest(BaseModel):
    data: Data706


class Data708(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Data709(BaseModel):
    type: Literal["betaAppReviewSubmissions"]
    id: str


class Datum266(BaseModel):
    type: Literal["betaBuildLocalizations"]
    id: str


class Datum267(BaseModel):
    type: Literal["betaGroups"]
    id: str


class BuildBetaGroupsLinkagesRequest(BaseModel):
    data: List[Datum267]


class Data710(BaseModel):
    type: Literal["buildBetaDetails"]
    id: str


class Datum268(BaseModel):
    type: Literal["diagnosticSignatures"]
    id: str


class Datum269(BaseModel):
    type: Literal["buildIcons"]
    id: str


class Datum270(BaseModel):
    type: Literal["betaTesters"]
    id: str


class BuildIndividualTestersLinkagesRequest(BaseModel):
    data: List[Datum270]


class Datum272(BaseModel):
    type: Literal["perfPowerMetrics"]
    id: str


class Data711(BaseModel):
    type: Literal["preReleaseVersions"]
    id: str


class Data712(BaseModel):
    type: Literal["apps"]
    id: str


class Datum273(BaseModel):
    type: Literal["bundleIdCapabilities"]
    id: str


class Datum274(BaseModel):
    type: Literal["profiles"]
    id: str


class Data713(BaseModel):
    type: Literal["passTypeIds"]
    id: str


class Datum275(BaseModel):
    type: Literal["ciArtifacts"]
    id: str


class Data714(BaseModel):
    type: Literal["ciBuildRuns"]
    id: str


class Datum276(BaseModel):
    type: Literal["ciIssues"]
    id: str


class Datum277(BaseModel):
    type: Literal["ciTestResults"]
    id: str


class Datum278(BaseModel):
    type: Literal["ciBuildActions"]
    id: str


class Datum279(BaseModel):
    type: Literal["builds"]
    id: str


class Datum280(BaseModel):
    type: Literal["ciXcodeVersions"]
    id: str


class Datum281(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Data715(BaseModel):
    type: Literal["apps"]
    id: str


class Datum282(BaseModel):
    type: Literal["ciBuildRuns"]
    id: str


class Datum283(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Datum284(BaseModel):
    type: Literal["ciWorkflows"]
    id: str


class Datum285(BaseModel):
    type: Literal["ciBuildRuns"]
    id: str


class Data716(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Datum286(BaseModel):
    type: Literal["ciMacOsVersions"]
    id: str


class Data717(BaseModel):
    type: Literal["customerReviewResponses"]
    id: str


class Datum287(BaseModel):
    type: Literal["diagnosticLogs"]
    id: str


class Datum288(BaseModel):
    type: Literal["territories"]
    id: str


class Data718(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class Data719(BaseModel):
    type: Literal["gameCenterAchievementImages"]
    id: str


class Data720(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class GameCenterAchievementActivityLinkageRequest(BaseModel):
    data: Data720


class Data721(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterAchievementGroupAchievementLinkageRequest(BaseModel):
    data: Data721


class Datum289(BaseModel):
    type: Literal["gameCenterAchievementLocalizations"]
    id: str


class Datum290(BaseModel):
    type: Literal["gameCenterAchievementReleases"]
    id: str


class Datum291(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterActivityAchievementsLinkagesRequest(BaseModel):
    data: List[Datum291]


class Datum292(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterActivityLeaderboardsLinkagesRequest(BaseModel):
    data: List[Datum292]


class Datum293(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str


class Data723(BaseModel):
    type: Literal["gameCenterActivityImages"]
    id: str


class Datum294(BaseModel):
    type: Literal["gameCenterActivityLocalizations"]
    id: str


class Data725(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class Datum295(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str


class GameCenterAppVersionCompatibilityVersionsLinkagesRequest(BaseModel):
    data: List[Datum295]


class Data726(BaseModel):
    type: Literal["gameCenterChallengeImages"]
    id: str


class Datum297(BaseModel):
    type: Literal["gameCenterChallengeLocalizations"]
    id: str


class Data728(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterChallengeLeaderboardLinkageRequest(BaseModel):
    data: Data728


class Datum298(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str


class Datum299(BaseModel):
    type: Literal["gameCenterAchievementReleases"]
    id: str


class Datum300(BaseModel):
    type: Literal["gameCenterActivityVersionReleases"]
    id: str


class Datum301(BaseModel):
    type: Literal["gameCenterChallengeVersionReleases"]
    id: str


class Datum302(BaseModel):
    type: Literal["appStoreVersions"]
    id: str


class GameCenterDetailChallengesMinimumPlatformVersionsLinkagesRequest(BaseModel):
    data: List[Datum302]


class Datum303(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterDetailGameCenterAchievementsLinkagesRequest(BaseModel):
    data: List[Datum303]


class Datum305(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Datum306(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str


class Datum307(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Data729(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str


class Datum308(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterDetailGameCenterLeaderboardSetsLinkagesRequest(BaseModel):
    data: List[Datum308]


class Datum310(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterDetailGameCenterLeaderboardsLinkagesRequest(BaseModel):
    data: List[Datum310]


class Datum312(BaseModel):
    type: Literal["gameCenterLeaderboardReleases"]
    id: str


class Datum313(BaseModel):
    type: Literal["gameCenterLeaderboardSetReleases"]
    id: str


class Datum314(BaseModel):
    type: Literal["gameCenterEnabledVersions"]
    id: str


class GameCenterEnabledVersionCompatibleVersionsLinkagesRequest(BaseModel):
    data: List[Datum314]


class Datum316(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str


class GameCenterGroupGameCenterAchievementsLinkagesRequest(BaseModel):
    data: List[Datum316]


class Datum318(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class Datum319(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class Datum320(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str


class Datum321(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterGroupGameCenterLeaderboardSetsLinkagesRequest(BaseModel):
    data: List[Datum321]


class Datum323(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterGroupGameCenterLeaderboardsLinkagesRequest(BaseModel):
    data: List[Datum323]


class Data730(BaseModel):
    type: Literal["gameCenterLeaderboardImages"]
    id: str


class Data731(BaseModel):
    type: Literal["gameCenterLeaderboardSetImages"]
    id: str


class Data732(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class Data733(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str


class GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest(BaseModel):
    data: List[Datum323]


class GameCenterLeaderboardSetGroupLeaderboardSetLinkageRequest(BaseModel):
    data: Data733


class Datum327(BaseModel):
    type: Literal["gameCenterLeaderboardSetLocalizations"]
    id: str


class Datum328(BaseModel):
    type: Literal["gameCenterLeaderboardSetReleases"]
    id: str


class Data736(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str


class GameCenterLeaderboardActivityLinkageRequest(BaseModel):
    data: Data736


class Data737(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str


class GameCenterLeaderboardChallengeLinkageRequest(BaseModel):
    data: Data737


class Data738(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str


class GameCenterLeaderboardGroupLeaderboardLinkageRequest(BaseModel):
    data: Data738


class Datum329(BaseModel):
    type: Literal["gameCenterLeaderboardLocalizations"]
    id: str


class Datum330(BaseModel):
    type: Literal["gameCenterLeaderboardReleases"]
    id: str


class Datum331(BaseModel):
    type: Literal["gameCenterMatchmakingQueues"]
    id: str


class Datum332(BaseModel):
    type: Literal["gameCenterMatchmakingRules"]
    id: str


class Datum333(BaseModel):
    type: Literal["gameCenterMatchmakingTeams"]
    id: str


class Datum334(BaseModel):
    type: Literal["territories"]
    id: str


class Datum335(BaseModel):
    type: Literal["inAppPurchasePricePoints"]
    id: str


class Datum336(BaseModel):
    type: Literal["inAppPurchasePrices"]
    id: str


class Data740(BaseModel):
    type: Literal["territories"]
    id: str


class Data741(BaseModel):
    type: Literal["inAppPurchaseAppStoreReviewScreenshots"]
    id: str


class Data742(BaseModel):
    type: Literal["inAppPurchaseContents"]
    id: str


class Data743(BaseModel):
    type: Literal["inAppPurchasePriceSchedules"]
    id: str


class Datum338(BaseModel):
    type: Literal["inAppPurchaseImages"]
    id: str


class Data744(BaseModel):
    type: Literal["inAppPurchaseAvailabilities"]
    id: str


class Datum339(BaseModel):
    type: Literal["inAppPurchaseLocalizations"]
    id: str


class Datum340(BaseModel):
    type: Literal["inAppPurchasePricePoints"]
    id: str


class Data745(BaseModel):
    type: Literal["promotedPurchases"]
    id: str


class Datum341(BaseModel):
    type: Literal["certificates"]
    id: str


class Data746(BaseModel):
    type: Literal["apps"]
    id: str


class Datum343(BaseModel):
    type: Literal["builds"]
    id: str


class Data747(BaseModel):
    type: Literal["bundleIds"]
    id: str


class Datum344(BaseModel):
    type: Literal["certificates"]
    id: str


class Datum345(BaseModel):
    type: Literal["devices"]
    id: str


class Datum346(BaseModel):
    type: Literal["reviewSubmissionItems"]
    id: str


class Datum347(BaseModel):
    type: Literal["scmRepositories"]
    id: str


class Datum348(BaseModel):
    type: Literal["scmGitReferences"]
    id: str


class Datum349(BaseModel):
    type: Literal["scmPullRequests"]
    id: str


class Datum350(BaseModel):
    type: Literal["territories"]
    id: str


class Datum351(BaseModel):
    type: Literal["subscriptionGroupLocalizations"]
    id: str


class Datum352(BaseModel):
    type: Literal["subscriptions"]
    id: str


class Data748(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodeValues"]
    id: str


class Datum353(BaseModel):
    type: Literal["subscriptionOfferCodeCustomCodes"]
    id: str


class Datum354(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodes"]
    id: str


class Datum355(BaseModel):
    type: Literal["subscriptionOfferCodePrices"]
    id: str


class Datum356(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class Datum357(BaseModel):
    type: Literal["subscriptionPromotionalOfferPrices"]
    id: str


class Data749(BaseModel):
    type: Literal["subscriptionAppStoreReviewScreenshots"]
    id: str


class Datum358(BaseModel):
    type: Literal["subscriptionImages"]
    id: str


class Datum359(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    id: str


class SubscriptionIntroductoryOffersLinkagesRequest(BaseModel):
    data: List[Datum359]


class Datum361(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    id: str


class Datum362(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str


class Datum363(BaseModel):
    type: Literal["subscriptionPrices"]
    id: str


class SubscriptionPricesLinkagesRequest(BaseModel):
    data: List[Datum363]


class Data750(BaseModel):
    type: Literal["promotedPurchases"]
    id: str


class Datum365(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    id: str


class Data751(BaseModel):
    type: Literal["subscriptionAvailabilities"]
    id: str


class Datum366(BaseModel):
    type: Literal["subscriptionLocalizations"]
    id: str


class Datum367(BaseModel):
    type: Literal["winBackOffers"]
    id: str


class Datum368(BaseModel):
    type: Literal["apps"]
    id: str


class UserVisibleAppsLinkagesRequest(BaseModel):
    data: List[Datum368]


class Datum371(BaseModel):
    type: Literal["webhookDeliveries"]
    id: str


class Datum372(BaseModel):
    type: Literal["winBackOfferPrices"]
    id: str


class Values1(BaseModel):
    crashCount: Optional[int] = None
    sessionCount: Optional[int] = None
    feedbackCount: Optional[int] = None


class DataPoints(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values1] = None


class Links(BaseModel):
    groupBy: Optional[str] = None
    related: Optional[str] = None


class BetaTesters3(BaseModel):
    links: Optional[Links] = None
    data: Optional[str] = None


class Dimensions(BaseModel):
    betaTesters: Optional[BetaTesters3] = None


class Datum373(BaseModel):
    dataPoints: Optional[DataPoints] = None
    dimensions: Optional[Dimensions] = None


class Values2(BaseModel):
    viewCount: Optional[int] = None
    acceptedCount: Optional[int] = None
    didNotAcceptCount: Optional[int] = None
    didNotMeetCriteriaCount: Optional[int] = None
    notRelevantRatio: Optional[float] = None
    notClearRatio: Optional[float] = None
    notInterestingRatio: Optional[float] = None


class DataPoints1(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values2] = None


class Datum374(BaseModel):
    dataPoints: Optional[DataPoints1] = None


class Values3(BaseModel):
    crashCount: Optional[int] = None
    sessionCount: Optional[int] = None
    feedbackCount: Optional[int] = None


class DataPoints2(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values3] = None


class Apps2(BaseModel):
    links: Optional[Links] = None
    data: Optional[str] = None


class Dimensions1(BaseModel):
    apps: Optional[Apps2] = None


class Datum375(BaseModel):
    dataPoints: Optional[DataPoints2] = None
    dimensions: Optional[Dimensions1] = None


class Values4(BaseModel):
    crashCount: Optional[int] = None
    installCount: Optional[int] = None
    sessionCount: Optional[int] = None
    feedbackCount: Optional[int] = None
    inviteCount: Optional[int] = None


class DataPoints3(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values4] = None


class Datum376(BaseModel):
    dataPoints: Optional[DataPoints3] = None


class Values5(BaseModel):
    count: Optional[int] = None
    averageSecondsInQueue: Optional[float] = None
    p50SecondsInQueue: Optional[float] = None
    p95SecondsInQueue: Optional[float] = None


class DataPoints4(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values5] = None


class Links2(BaseModel):
    groupBy: Optional[str] = None


class Result(BaseModel):
    links: Optional[Links2] = None
    data: Optional[Literal["MATCHED", "CANCELED", "EXPIRED"]] = None


class Dimensions2(BaseModel):
    result: Optional[Result] = None


class Datum377(BaseModel):
    dataPoints: Optional[DataPoints4] = None
    dimensions: Optional[Dimensions2] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class Values6(BaseModel):
    count: Optional[int] = None
    averageNumberOfRequests: Optional[float] = None
    p50NumberOfRequests: Optional[float] = None
    p95NumberOfRequests: Optional[float] = None


class DataPoints5(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values6] = None


class Datum378(BaseModel):
    dataPoints: Optional[DataPoints5] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class Values7(BaseModel):
    count: Optional[int] = None
    averageSecondsInQueue: Optional[float] = None
    p50SecondsInQueue: Optional[float] = None
    p95SecondsInQueue: Optional[float] = None


class DataPoints6(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values7] = None


class Result1(BaseModel):
    links: Optional[Links2] = None
    data: Optional[Literal["MATCHED", "CANCELED", "EXPIRED"]] = None


class Links4(BaseModel):
    groupBy: Optional[str] = None
    related: Optional[str] = None


class GameCenterDetail19(BaseModel):
    links: Optional[Links4] = None
    data: Optional[str] = None


class Dimensions3(BaseModel):
    result: Optional[Result1] = None
    gameCenterDetail: Optional[GameCenterDetail19] = None


class Datum379(BaseModel):
    dataPoints: Optional[DataPoints6] = None
    dimensions: Optional[Dimensions3] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class Values8(BaseModel):
    count: Optional[int] = None
    averagePlayerCount: Optional[float] = None
    p50PlayerCount: Optional[float] = None
    p95PlayerCount: Optional[float] = None


class DataPoints7(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values8] = None


class Datum380(BaseModel):
    dataPoints: Optional[DataPoints7] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class Values9(BaseModel):
    count: Optional[int] = None


class DataPoints8(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values9] = None


class Links5(BaseModel):
    groupBy: Optional[str] = None


class Result2(BaseModel):
    links: Optional[Links5] = None
    data: Optional[str] = None


class Links6(BaseModel):
    groupBy: Optional[str] = None
    related: Optional[str] = None


class GameCenterMatchmakingQueue1(BaseModel):
    links: Optional[Links6] = None
    data: Optional[str] = None


class Dimensions4(BaseModel):
    result: Optional[Result2] = None
    gameCenterMatchmakingQueue: Optional[GameCenterMatchmakingQueue1] = None


class Datum381(BaseModel):
    dataPoints: Optional[DataPoints8] = None
    dimensions: Optional[Dimensions4] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class Values10(BaseModel):
    count: Optional[int] = None
    averageResult: Optional[float] = None
    p50Result: Optional[float] = None
    p95Result: Optional[float] = None


class DataPoints9(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values10] = None


class GameCenterMatchmakingQueue2(BaseModel):
    links: Optional[Links6] = None
    data: Optional[str] = None


class Dimensions5(BaseModel):
    gameCenterMatchmakingQueue: Optional[GameCenterMatchmakingQueue2] = None


class Datum382(BaseModel):
    dataPoints: Optional[DataPoints9] = None
    dimensions: Optional[Dimensions5] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class Values11(BaseModel):
    count: Optional[int] = None


class DataPoints10(BaseModel):
    start: Optional[AwareDatetime] = None
    end: Optional[AwareDatetime] = None
    values: Optional[Values11] = None


class GameCenterMatchmakingQueue3(BaseModel):
    links: Optional[Links6] = None
    data: Optional[str] = None


class Dimensions6(BaseModel):
    gameCenterMatchmakingQueue: Optional[GameCenterMatchmakingQueue3] = None


class Datum383(BaseModel):
    dataPoints: Optional[DataPoints10] = None
    dimensions: Optional[Dimensions6] = None
    granularity: Optional[Literal["P1D", "PT1H", "PT15M"]] = None


class ErrorSourceParameter(BaseModel):
    parameter: str


class ErrorSourcePointer(BaseModel):
    pointer: str


class Meta(BaseModel):
    source: Optional[str] = None


class Associated(BaseModel):
    href: Optional[str] = None
    meta: Optional[Meta] = None


class ErrorLinks(BaseModel):
    about: Optional[str] = None
    associated: Optional[Union[str, Associated]] = None


class PagedDocumentLinks(BaseModel):
    self: str
    first: Optional[str] = None
    next: Optional[str] = None


class Paging(BaseModel):
    total: Optional[int] = None
    limit: int
    nextCursor: Optional[str] = None


class PagingInformation(BaseModel):
    paging: Paging


class DocumentLinks(BaseModel):
    self: str


class ResourceLinks(BaseModel):
    self: Optional[str] = None


class RelationshipLinks(BaseModel):
    self: Optional[str] = None
    related: Optional[str] = None


class AppClipAction(RootModel[Literal["OPEN", "VIEW", "PLAY"]]):
    root: Literal["OPEN", "VIEW", "PLAY"]


class AppClipAdvancedExperienceLanguage(
    RootModel[
        Literal[
            "AR",
            "CA",
            "CS",
            "DA",
            "DE",
            "EL",
            "EN",
            "ES",
            "FI",
            "FR",
            "HE",
            "HI",
            "HR",
            "HU",
            "ID",
            "IT",
            "JA",
            "KO",
            "MS",
            "NL",
            "NO",
            "PL",
            "PT",
            "RO",
            "RU",
            "SK",
            "SV",
            "TH",
            "TR",
            "UK",
            "VI",
            "ZH",
        ]
    ]
):
    root: Literal[
        "AR",
        "CA",
        "CS",
        "DA",
        "DE",
        "EL",
        "EN",
        "ES",
        "FI",
        "FR",
        "HE",
        "HI",
        "HR",
        "HU",
        "ID",
        "IT",
        "JA",
        "KO",
        "MS",
        "NL",
        "NO",
        "PL",
        "PT",
        "RO",
        "RU",
        "SK",
        "SV",
        "TH",
        "TR",
        "UK",
        "VI",
        "ZH",
    ]


class AppEncryptionDeclarationState(
    RootModel[
        Literal["CREATED", "IN_REVIEW", "APPROVED", "REJECTED", "INVALID", "EXPIRED"]
    ]
):
    root: Literal["CREATED", "IN_REVIEW", "APPROVED", "REJECTED", "INVALID", "EXPIRED"]


class AppEventAssetType(RootModel[Literal["EVENT_CARD", "EVENT_DETAILS_PAGE"]]):
    root: Literal["EVENT_CARD", "EVENT_DETAILS_PAGE"]


class AppMediaStateError(BaseModel):
    code: Optional[str] = None
    description: Optional[str] = None


class AppMediaVideoState(BaseModel):
    errors: Optional[List[AppMediaStateError]] = None
    warnings: Optional[List[AppMediaStateError]] = None
    state: Optional[
        Literal[
            "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "PROCESSING", "COMPLETE", "FAILED"
        ]
    ] = None


class AppStoreAgeRating(
    RootModel[
        Literal["FOUR_PLUS", "NINE_PLUS", "TWELVE_PLUS", "SEVENTEEN_PLUS", "UNRATED"]
    ]
):
    root: Literal["FOUR_PLUS", "NINE_PLUS", "TWELVE_PLUS", "SEVENTEEN_PLUS", "UNRATED"]


class AppStoreVersionState(
    RootModel[
        Literal[
            "ACCEPTED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_CONTRACT",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PREORDER_READY_FOR_SALE",
            "PROCESSING_FOR_APP_STORE",
            "READY_FOR_REVIEW",
            "READY_FOR_SALE",
            "REJECTED",
            "REMOVED_FROM_SALE",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
            "REPLACED_WITH_NEW_VERSION",
            "NOT_APPLICABLE",
        ]
    ]
):
    root: Literal[
        "ACCEPTED",
        "DEVELOPER_REMOVED_FROM_SALE",
        "DEVELOPER_REJECTED",
        "IN_REVIEW",
        "INVALID_BINARY",
        "METADATA_REJECTED",
        "PENDING_APPLE_RELEASE",
        "PENDING_CONTRACT",
        "PENDING_DEVELOPER_RELEASE",
        "PREPARE_FOR_SUBMISSION",
        "PREORDER_READY_FOR_SALE",
        "PROCESSING_FOR_APP_STORE",
        "READY_FOR_REVIEW",
        "READY_FOR_SALE",
        "REJECTED",
        "REMOVED_FROM_SALE",
        "WAITING_FOR_EXPORT_COMPLIANCE",
        "WAITING_FOR_REVIEW",
        "REPLACED_WITH_NEW_VERSION",
        "NOT_APPLICABLE",
    ]


class AppVersionState(
    RootModel[
        Literal[
            "ACCEPTED",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PROCESSING_FOR_DISTRIBUTION",
            "READY_FOR_DISTRIBUTION",
            "READY_FOR_REVIEW",
            "REJECTED",
            "REPLACED_WITH_NEW_VERSION",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
        ]
    ]
):
    root: Literal[
        "ACCEPTED",
        "DEVELOPER_REJECTED",
        "IN_REVIEW",
        "INVALID_BINARY",
        "METADATA_REJECTED",
        "PENDING_APPLE_RELEASE",
        "PENDING_DEVELOPER_RELEASE",
        "PREPARE_FOR_SUBMISSION",
        "PROCESSING_FOR_DISTRIBUTION",
        "READY_FOR_DISTRIBUTION",
        "READY_FOR_REVIEW",
        "REJECTED",
        "REPLACED_WITH_NEW_VERSION",
        "WAITING_FOR_EXPORT_COMPLIANCE",
        "WAITING_FOR_REVIEW",
    ]


class BackgroundAssetVersionState(
    RootModel[Literal["AWAITING_UPLOAD", "PROCESSING", "FAILED", "COMPLETE"]]
):
    root: Literal["AWAITING_UPLOAD", "PROCESSING", "FAILED", "COMPLETE"]


class BetaFeedbackScreenshotImage(BaseModel):
    url: Optional[str] = None
    width: Optional[int] = None
    height: Optional[int] = None
    expirationDate: Optional[AwareDatetime] = None


class BetaInviteType(RootModel[Literal["EMAIL", "PUBLIC_LINK"]]):
    root: Literal["EMAIL", "PUBLIC_LINK"]


class BetaReviewState(
    RootModel[Literal["WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED"]]
):
    root: Literal["WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED"]


class BetaTesterState(
    RootModel[Literal["NOT_INVITED", "INVITED", "ACCEPTED", "INSTALLED", "REVOKED"]]
):
    root: Literal["NOT_INVITED", "INVITED", "ACCEPTED", "INSTALLED", "REVOKED"]


class BrazilAgeRating(
    RootModel[Literal["L", "TEN", "TWELVE", "FOURTEEN", "SIXTEEN", "EIGHTEEN"]]
):
    root: Literal["L", "TEN", "TWELVE", "FOURTEEN", "SIXTEEN", "EIGHTEEN"]


class BuildAudienceType(RootModel[Literal["INTERNAL_ONLY", "APP_STORE_ELIGIBLE"]]):
    root: Literal["INTERNAL_ONLY", "APP_STORE_ELIGIBLE"]


class BuildBundleType(RootModel[Literal["APP", "APP_CLIP"]]):
    root: Literal["APP", "APP_CLIP"]


class BundleIdPlatform(RootModel[Literal["IOS", "MAC_OS", "UNIVERSAL"]]):
    root: Literal["IOS", "MAC_OS", "UNIVERSAL"]


class CapabilityOption(BaseModel):
    key: Optional[
        Literal[
            "XCODE_5",
            "XCODE_6",
            "COMPLETE_PROTECTION",
            "PROTECTED_UNLESS_OPEN",
            "PROTECTED_UNTIL_FIRST_USER_AUTH",
            "PRIMARY_APP_CONSENT",
        ]
    ] = None
    name: Optional[str] = None
    description: Optional[str] = None
    enabledByDefault: Optional[bool] = None
    enabled: Optional[bool] = None
    supportsWildcard: Optional[bool] = None


class CapabilitySetting(BaseModel):
    key: Optional[
        Literal[
            "ICLOUD_VERSION",
            "DATA_PROTECTION_PERMISSION_LEVEL",
            "APPLE_ID_AUTH_APP_CONSENT",
        ]
    ] = None
    name: Optional[str] = None
    description: Optional[str] = None
    enabledByDefault: Optional[bool] = None
    visible: Optional[bool] = None
    allowedInstances: Optional[Literal["ENTRY", "SINGLE", "MULTIPLE"]] = None
    minInstances: Optional[int] = None
    options: Optional[List[CapabilityOption]] = None


class CapabilityType(
    RootModel[
        Literal[
            "ICLOUD",
            "IN_APP_PURCHASE",
            "GAME_CENTER",
            "PUSH_NOTIFICATIONS",
            "WALLET",
            "INTER_APP_AUDIO",
            "MAPS",
            "ASSOCIATED_DOMAINS",
            "PERSONAL_VPN",
            "APP_GROUPS",
            "HEALTHKIT",
            "HOMEKIT",
            "WIRELESS_ACCESSORY_CONFIGURATION",
            "APPLE_PAY",
            "DATA_PROTECTION",
            "SIRIKIT",
            "NETWORK_EXTENSIONS",
            "MULTIPATH",
            "HOT_SPOT",
            "NFC_TAG_READING",
            "CLASSKIT",
            "AUTOFILL_CREDENTIAL_PROVIDER",
            "ACCESS_WIFI_INFORMATION",
            "NETWORK_CUSTOM_PROTOCOL",
            "COREMEDIA_HLS_LOW_LATENCY",
            "SYSTEM_EXTENSION_INSTALL",
            "USER_MANAGEMENT",
            "APPLE_ID_AUTH",
        ]
    ]
):
    root: Literal[
        "ICLOUD",
        "IN_APP_PURCHASE",
        "GAME_CENTER",
        "PUSH_NOTIFICATIONS",
        "WALLET",
        "INTER_APP_AUDIO",
        "MAPS",
        "ASSOCIATED_DOMAINS",
        "PERSONAL_VPN",
        "APP_GROUPS",
        "HEALTHKIT",
        "HOMEKIT",
        "WIRELESS_ACCESSORY_CONFIGURATION",
        "APPLE_PAY",
        "DATA_PROTECTION",
        "SIRIKIT",
        "NETWORK_EXTENSIONS",
        "MULTIPATH",
        "HOT_SPOT",
        "NFC_TAG_READING",
        "CLASSKIT",
        "AUTOFILL_CREDENTIAL_PROVIDER",
        "ACCESS_WIFI_INFORMATION",
        "NETWORK_CUSTOM_PROTOCOL",
        "COREMEDIA_HLS_LOW_LATENCY",
        "SYSTEM_EXTENSION_INSTALL",
        "USER_MANAGEMENT",
        "APPLE_ID_AUTH",
    ]


class CertificateType(
    RootModel[
        Literal[
            "APPLE_PAY",
            "APPLE_PAY_MERCHANT_IDENTITY",
            "APPLE_PAY_PSP_IDENTITY",
            "APPLE_PAY_RSA",
            "DEVELOPER_ID_KEXT",
            "DEVELOPER_ID_KEXT_G2",
            "DEVELOPER_ID_APPLICATION",
            "DEVELOPER_ID_APPLICATION_G2",
            "DEVELOPMENT",
            "DISTRIBUTION",
            "IDENTITY_ACCESS",
            "IOS_DEVELOPMENT",
            "IOS_DISTRIBUTION",
            "MAC_APP_DISTRIBUTION",
            "MAC_INSTALLER_DISTRIBUTION",
            "MAC_APP_DEVELOPMENT",
            "PASS_TYPE_ID",
            "PASS_TYPE_ID_WITH_NFC",
        ]
    ]
):
    root: Literal[
        "APPLE_PAY",
        "APPLE_PAY_MERCHANT_IDENTITY",
        "APPLE_PAY_PSP_IDENTITY",
        "APPLE_PAY_RSA",
        "DEVELOPER_ID_KEXT",
        "DEVELOPER_ID_KEXT_G2",
        "DEVELOPER_ID_APPLICATION",
        "DEVELOPER_ID_APPLICATION_G2",
        "DEVELOPMENT",
        "DISTRIBUTION",
        "IDENTITY_ACCESS",
        "IOS_DEVELOPMENT",
        "IOS_DISTRIBUTION",
        "MAC_APP_DISTRIBUTION",
        "MAC_INSTALLER_DISTRIBUTION",
        "MAC_APP_DEVELOPMENT",
        "PASS_TYPE_ID",
        "PASS_TYPE_ID_WITH_NFC",
    ]


class CiActionType(RootModel[Literal["BUILD", "ANALYZE", "TEST", "ARCHIVE"]]):
    root: Literal["BUILD", "ANALYZE", "TEST", "ARCHIVE"]


class Pattern(BaseModel):
    pattern: Optional[str] = None
    isPrefix: Optional[bool] = None


class CiBranchPatterns(BaseModel):
    isAllMatch: Optional[bool] = None
    patterns: Optional[List[Pattern]] = None


class CiCompletionStatus(
    RootModel[Literal["SUCCEEDED", "FAILED", "ERRORED", "CANCELED", "SKIPPED"]]
):
    root: Literal["SUCCEEDED", "FAILED", "ERRORED", "CANCELED", "SKIPPED"]


class CiExecutionProgress(RootModel[Literal["PENDING", "RUNNING", "COMPLETE"]]):
    root: Literal["PENDING", "RUNNING", "COMPLETE"]


class CiGitRefKind(RootModel[Literal["BRANCH", "TAG"]]):
    root: Literal["BRANCH", "TAG"]


class CiGitUser(BaseModel):
    displayName: Optional[str] = None
    avatarUrl: Optional[AnyUrl] = None


class CiIssueCounts(BaseModel):
    analyzerWarnings: Optional[int] = None
    errors: Optional[int] = None
    testFailures: Optional[int] = None
    warnings: Optional[int] = None


class CiManualBranchStartCondition(BaseModel):
    source: Optional[CiBranchPatterns] = None


class CiManualPullRequestStartCondition(BaseModel):
    source: Optional[CiBranchPatterns] = None
    destination: Optional[CiBranchPatterns] = None


class Schedule(BaseModel):
    frequency: Optional[Literal["WEEKLY", "DAILY", "HOURLY"]] = None
    days: Optional[
        List[
            Literal[
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
            ]
        ]
    ] = None
    hour: Optional[int] = None
    minute: Optional[int] = None
    timezone: Optional[str] = None


class CiScheduledStartCondition(BaseModel):
    source: Optional[CiBranchPatterns] = None
    schedule: Optional[Schedule] = None


class CiStartConditionFileMatcher(BaseModel):
    directory: Optional[str] = None
    fileExtension: Optional[str] = None
    fileName: Optional[str] = None


class CiTagPatterns(BaseModel):
    isAllMatch: Optional[bool] = None
    patterns: Optional[List[Pattern]] = None


class CiTestDestinationKind(RootModel[Literal["SIMULATOR", "MAC"]]):
    root: Literal["SIMULATOR", "MAC"]


class CiTestStatus(
    RootModel[Literal["SUCCESS", "FAILURE", "MIXED", "SKIPPED", "EXPECTED_FAILURE"]]
):
    root: Literal["SUCCESS", "FAILURE", "MIXED", "SKIPPED", "EXPECTED_FAILURE"]


class DeviceConnectionType(
    RootModel[Literal["WIFI", "MOBILE_DATA", "WIRE", "UNKNOWN", "NONE"]]
):
    root: Literal["WIFI", "MOBILE_DATA", "WIRE", "UNKNOWN", "NONE"]


class DeviceFamily(
    RootModel[Literal["IPHONE", "IPAD", "APPLE_TV", "APPLE_WATCH", "MAC", "VISION"]]
):
    root: Literal["IPHONE", "IPAD", "APPLE_TV", "APPLE_WATCH", "MAC", "VISION"]


class DeviceFamilyOsVersionFilter(BaseModel):
    deviceFamily: Optional[DeviceFamily] = None
    minimumOsInclusive: Optional[str] = None
    maximumOsInclusive: Optional[str] = None


class ReferenceVersion(BaseModel):
    version: Optional[str] = None
    value: Optional[float] = None


class DiagnosticInsightDirection(RootModel[Literal["UP", "DOWN", "UNDEFINED"]]):
    root: Literal["UP", "DOWN", "UNDEFINED"]


class DiagnosticInsightType(RootModel[Literal["TREND"]]):
    root: Literal["TREND"]


class DiagnosticLogCallStackNode(BaseModel):
    sampleCount: Optional[int] = None
    isBlameFrame: Optional[bool] = None
    symbolName: Optional[str] = None
    insightsCategory: Optional[str] = None
    offsetIntoSymbol: Optional[str] = None
    binaryName: Optional[str] = None
    fileName: Optional[str] = None
    binaryUUID: Optional[str] = None
    lineNumber: Optional[str] = None
    address: Optional[str] = None
    offsetIntoBinaryTextSegment: Optional[str] = None
    rawFrame: Optional[str] = None
    subFrames: Optional[List[DiagnosticLogCallStackNode]] = None


class ExternalBetaState(
    RootModel[
        Literal[
            "PROCESSING",
            "PROCESSING_EXCEPTION",
            "MISSING_EXPORT_COMPLIANCE",
            "READY_FOR_BETA_TESTING",
            "IN_BETA_TESTING",
            "EXPIRED",
            "READY_FOR_BETA_SUBMISSION",
            "IN_EXPORT_COMPLIANCE_REVIEW",
            "WAITING_FOR_BETA_REVIEW",
            "IN_BETA_REVIEW",
            "BETA_REJECTED",
            "BETA_APPROVED",
            "NOT_APPLICABLE",
        ]
    ]
):
    root: Literal[
        "PROCESSING",
        "PROCESSING_EXCEPTION",
        "MISSING_EXPORT_COMPLIANCE",
        "READY_FOR_BETA_TESTING",
        "IN_BETA_TESTING",
        "EXPIRED",
        "READY_FOR_BETA_SUBMISSION",
        "IN_EXPORT_COMPLIANCE_REVIEW",
        "WAITING_FOR_BETA_REVIEW",
        "IN_BETA_REVIEW",
        "BETA_REJECTED",
        "BETA_APPROVED",
        "NOT_APPLICABLE",
    ]


class FileLocation(BaseModel):
    path: Optional[str] = None
    lineNumber: Optional[int] = None


class GameCenterLeaderboardFormatter(
    RootModel[
        Literal[
            "INTEGER",
            "DECIMAL_POINT_1_PLACE",
            "DECIMAL_POINT_2_PLACE",
            "DECIMAL_POINT_3_PLACE",
            "ELAPSED_TIME_CENTISECOND",
            "ELAPSED_TIME_MINUTE",
            "ELAPSED_TIME_SECOND",
            "MONEY_POUND_DECIMAL",
            "MONEY_POUND",
            "MONEY_DOLLAR_DECIMAL",
            "MONEY_DOLLAR",
            "MONEY_EURO_DECIMAL",
            "MONEY_EURO",
            "MONEY_FRANC_DECIMAL",
            "MONEY_FRANC",
            "MONEY_KRONER_DECIMAL",
            "MONEY_KRONER",
            "MONEY_YEN",
        ]
    ]
):
    root: Literal[
        "INTEGER",
        "DECIMAL_POINT_1_PLACE",
        "DECIMAL_POINT_2_PLACE",
        "DECIMAL_POINT_3_PLACE",
        "ELAPSED_TIME_CENTISECOND",
        "ELAPSED_TIME_MINUTE",
        "ELAPSED_TIME_SECOND",
        "MONEY_POUND_DECIMAL",
        "MONEY_POUND",
        "MONEY_DOLLAR_DECIMAL",
        "MONEY_DOLLAR",
        "MONEY_EURO_DECIMAL",
        "MONEY_EURO",
        "MONEY_FRANC_DECIMAL",
        "MONEY_FRANC",
        "MONEY_KRONER_DECIMAL",
        "MONEY_KRONER",
        "MONEY_YEN",
    ]


class GameCenterMatchmakingTeamAssignment(BaseModel):
    playerId: Optional[str] = None
    team: Optional[str] = None


class GameCenterVersionState(
    RootModel[
        Literal[
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "REJECTED",
            "ACCEPTED",
            "PENDING_RELEASE",
            "LIVE",
            "REPLACED_WITH_NEW_VERSION",
        ]
    ]
):
    root: Literal[
        "PREPARE_FOR_SUBMISSION",
        "READY_FOR_REVIEW",
        "WAITING_FOR_REVIEW",
        "IN_REVIEW",
        "REJECTED",
        "ACCEPTED",
        "PENDING_RELEASE",
        "LIVE",
        "REPLACED_WITH_NEW_VERSION",
    ]


class HttpHeader(BaseModel):
    name: Optional[str] = None
    value: Optional[str] = None


class IconAssetType(
    RootModel[
        Literal[
            "APP_STORE",
            "MESSAGES_APP_STORE",
            "WATCH_APP_STORE",
            "TV_OS_HOME_SCREEN",
            "TV_OS_TOP_SHELF",
            "ALTERNATE_EXPERIMENT",
        ]
    ]
):
    root: Literal[
        "APP_STORE",
        "MESSAGES_APP_STORE",
        "WATCH_APP_STORE",
        "TV_OS_HOME_SCREEN",
        "TV_OS_TOP_SHELF",
        "ALTERNATE_EXPERIMENT",
    ]


class ImageAsset(BaseModel):
    templateUrl: Optional[str] = None
    width: Optional[int] = None
    height: Optional[int] = None


class InAppPurchaseState(
    RootModel[
        Literal[
            "MISSING_METADATA",
            "WAITING_FOR_UPLOAD",
            "PROCESSING_CONTENT",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "DEVELOPER_ACTION_NEEDED",
            "PENDING_BINARY_APPROVAL",
            "APPROVED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "REMOVED_FROM_SALE",
            "REJECTED",
        ]
    ]
):
    root: Literal[
        "MISSING_METADATA",
        "WAITING_FOR_UPLOAD",
        "PROCESSING_CONTENT",
        "READY_TO_SUBMIT",
        "WAITING_FOR_REVIEW",
        "IN_REVIEW",
        "DEVELOPER_ACTION_NEEDED",
        "PENDING_BINARY_APPROVAL",
        "APPROVED",
        "DEVELOPER_REMOVED_FROM_SALE",
        "REMOVED_FROM_SALE",
        "REJECTED",
    ]


class InAppPurchaseType(
    RootModel[Literal["CONSUMABLE", "NON_CONSUMABLE", "NON_RENEWING_SUBSCRIPTION"]]
):
    root: Literal["CONSUMABLE", "NON_CONSUMABLE", "NON_RENEWING_SUBSCRIPTION"]


class IntegerRange(BaseModel):
    minimum: Optional[int] = None
    maximum: Optional[int] = None


class InternalBetaState(
    RootModel[
        Literal[
            "PROCESSING",
            "PROCESSING_EXCEPTION",
            "MISSING_EXPORT_COMPLIANCE",
            "READY_FOR_BETA_TESTING",
            "IN_BETA_TESTING",
            "EXPIRED",
            "IN_EXPORT_COMPLIANCE_REVIEW",
        ]
    ]
):
    root: Literal[
        "PROCESSING",
        "PROCESSING_EXCEPTION",
        "MISSING_EXPORT_COMPLIANCE",
        "READY_FOR_BETA_TESTING",
        "IN_BETA_TESTING",
        "EXPIRED",
        "IN_EXPORT_COMPLIANCE_REVIEW",
    ]


class KidsAgeBand(
    RootModel[Literal["FIVE_AND_UNDER", "SIX_TO_EIGHT", "NINE_TO_ELEVEN"]]
):
    root: Literal["FIVE_AND_UNDER", "SIX_TO_EIGHT", "NINE_TO_ELEVEN"]


class Location(BaseModel):
    latitude: Optional[float] = None
    longitude: Optional[float] = None


class MetricCategory(
    RootModel[
        Literal[
            "HANG", "LAUNCH", "MEMORY", "DISK", "BATTERY", "TERMINATION", "ANIMATION"
        ]
    ]
):
    root: Literal[
        "HANG", "LAUNCH", "MEMORY", "DISK", "BATTERY", "TERMINATION", "ANIMATION"
    ]


class Population(BaseModel):
    deltaPercentage: Optional[float] = None
    percentile: Optional[str] = None
    summaryString: Optional[str] = None
    referenceAverageValue: Optional[float] = None
    latestVersionValue: Optional[float] = None
    device: Optional[str] = None


class MetricsInsight(BaseModel):
    metricCategory: Optional[MetricCategory] = None
    latestVersion: Optional[str] = None
    metric: Optional[str] = None
    summaryString: Optional[str] = None
    referenceVersions: Optional[str] = None
    maxLatestVersionValue: Optional[float] = None
    subSystemLabel: Optional[str] = None
    highImpact: Optional[bool] = None
    populations: Optional[List[Population]] = None


class PhasedReleaseState(
    RootModel[Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]]
):
    root: Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]


class Platform(RootModel[Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]]):
    root: Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]


class PreviewType(
    RootModel[
        Literal[
            "IPHONE_67",
            "IPHONE_61",
            "IPHONE_65",
            "IPHONE_58",
            "IPHONE_55",
            "IPHONE_47",
            "IPHONE_40",
            "IPHONE_35",
            "IPAD_PRO_3GEN_129",
            "IPAD_PRO_3GEN_11",
            "IPAD_PRO_129",
            "IPAD_105",
            "IPAD_97",
            "DESKTOP",
            "APPLE_TV",
            "APPLE_VISION_PRO",
        ]
    ]
):
    root: Literal[
        "IPHONE_67",
        "IPHONE_61",
        "IPHONE_65",
        "IPHONE_58",
        "IPHONE_55",
        "IPHONE_47",
        "IPHONE_40",
        "IPHONE_35",
        "IPAD_PRO_3GEN_129",
        "IPAD_PRO_3GEN_11",
        "IPAD_PRO_129",
        "IPAD_105",
        "IPAD_97",
        "DESKTOP",
        "APPLE_TV",
        "APPLE_VISION_PRO",
    ]


class Property(BaseModel):
    key: Optional[str] = None
    value: Optional[str] = None


class ScmProviderType(BaseModel):
    kind: Optional[
        Literal[
            "BITBUCKET_CLOUD",
            "BITBUCKET_SERVER",
            "GITHUB_CLOUD",
            "GITHUB_ENTERPRISE",
            "GITLAB_CLOUD",
            "GITLAB_SELF_MANAGED",
        ]
    ] = None
    displayName: Optional[str] = None
    isOnPremise: Optional[bool] = None


class ScreenshotDisplayType(
    RootModel[
        Literal[
            "APP_IPHONE_67",
            "APP_IPHONE_61",
            "APP_IPHONE_65",
            "APP_IPHONE_58",
            "APP_IPHONE_55",
            "APP_IPHONE_47",
            "APP_IPHONE_40",
            "APP_IPHONE_35",
            "APP_IPAD_PRO_3GEN_129",
            "APP_IPAD_PRO_3GEN_11",
            "APP_IPAD_PRO_129",
            "APP_IPAD_105",
            "APP_IPAD_97",
            "APP_DESKTOP",
            "APP_WATCH_ULTRA",
            "APP_WATCH_SERIES_10",
            "APP_WATCH_SERIES_7",
            "APP_WATCH_SERIES_4",
            "APP_WATCH_SERIES_3",
            "APP_APPLE_TV",
            "APP_APPLE_VISION_PRO",
            "IMESSAGE_APP_IPHONE_67",
            "IMESSAGE_APP_IPHONE_61",
            "IMESSAGE_APP_IPHONE_65",
            "IMESSAGE_APP_IPHONE_58",
            "IMESSAGE_APP_IPHONE_55",
            "IMESSAGE_APP_IPHONE_47",
            "IMESSAGE_APP_IPHONE_40",
            "IMESSAGE_APP_IPAD_PRO_3GEN_129",
            "IMESSAGE_APP_IPAD_PRO_3GEN_11",
            "IMESSAGE_APP_IPAD_PRO_129",
            "IMESSAGE_APP_IPAD_105",
            "IMESSAGE_APP_IPAD_97",
        ]
    ]
):
    root: Literal[
        "APP_IPHONE_67",
        "APP_IPHONE_61",
        "APP_IPHONE_65",
        "APP_IPHONE_58",
        "APP_IPHONE_55",
        "APP_IPHONE_47",
        "APP_IPHONE_40",
        "APP_IPHONE_35",
        "APP_IPAD_PRO_3GEN_129",
        "APP_IPAD_PRO_3GEN_11",
        "APP_IPAD_PRO_129",
        "APP_IPAD_105",
        "APP_IPAD_97",
        "APP_DESKTOP",
        "APP_WATCH_ULTRA",
        "APP_WATCH_SERIES_10",
        "APP_WATCH_SERIES_7",
        "APP_WATCH_SERIES_4",
        "APP_WATCH_SERIES_3",
        "APP_APPLE_TV",
        "APP_APPLE_VISION_PRO",
        "IMESSAGE_APP_IPHONE_67",
        "IMESSAGE_APP_IPHONE_61",
        "IMESSAGE_APP_IPHONE_65",
        "IMESSAGE_APP_IPHONE_58",
        "IMESSAGE_APP_IPHONE_55",
        "IMESSAGE_APP_IPHONE_47",
        "IMESSAGE_APP_IPHONE_40",
        "IMESSAGE_APP_IPAD_PRO_3GEN_129",
        "IMESSAGE_APP_IPAD_PRO_3GEN_11",
        "IMESSAGE_APP_IPAD_PRO_129",
        "IMESSAGE_APP_IPAD_105",
        "IMESSAGE_APP_IPAD_97",
    ]


class StringToStringMap(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class SubscriptionCustomerEligibility(RootModel[Literal["NEW", "EXISTING", "EXPIRED"]]):
    root: Literal["NEW", "EXISTING", "EXPIRED"]


class SubscriptionGracePeriodDuration(
    RootModel[Literal["THREE_DAYS", "SIXTEEN_DAYS", "TWENTY_EIGHT_DAYS"]]
):
    root: Literal["THREE_DAYS", "SIXTEEN_DAYS", "TWENTY_EIGHT_DAYS"]


class SubscriptionOfferDuration(
    RootModel[
        Literal[
            "THREE_DAYS",
            "ONE_WEEK",
            "TWO_WEEKS",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ]
):
    root: Literal[
        "THREE_DAYS",
        "ONE_WEEK",
        "TWO_WEEKS",
        "ONE_MONTH",
        "TWO_MONTHS",
        "THREE_MONTHS",
        "SIX_MONTHS",
        "ONE_YEAR",
    ]


class SubscriptionOfferEligibility(
    RootModel[Literal["STACK_WITH_INTRO_OFFERS", "REPLACE_INTRO_OFFERS"]]
):
    root: Literal["STACK_WITH_INTRO_OFFERS", "REPLACE_INTRO_OFFERS"]


class SubscriptionOfferMode(
    RootModel[Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]]
):
    root: Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]


class SubscriptionStatusUrlVersion(RootModel[Literal["V1", "V2"]]):
    root: Literal["V1", "V2"]


class TerritoryCode(
    RootModel[
        Literal[
            "ABW",
            "AFG",
            "AGO",
            "AIA",
            "ALB",
            "AND",
            "ANT",
            "ARE",
            "ARG",
            "ARM",
            "ASM",
            "ATG",
            "AUS",
            "AUT",
            "AZE",
            "BDI",
            "BEL",
            "BEN",
            "BES",
            "BFA",
            "BGD",
            "BGR",
            "BHR",
            "BHS",
            "BIH",
            "BLR",
            "BLZ",
            "BMU",
            "BOL",
            "BRA",
            "BRB",
            "BRN",
            "BTN",
            "BWA",
            "CAF",
            "CAN",
            "CHE",
            "CHL",
            "CHN",
            "CIV",
            "CMR",
            "COD",
            "COG",
            "COK",
            "COL",
            "COM",
            "CPV",
            "CRI",
            "CUB",
            "CUW",
            "CXR",
            "CYM",
            "CYP",
            "CZE",
            "DEU",
            "DJI",
            "DMA",
            "DNK",
            "DOM",
            "DZA",
            "ECU",
            "EGY",
            "ERI",
            "ESP",
            "EST",
            "ETH",
            "FIN",
            "FJI",
            "FLK",
            "FRA",
            "FRO",
            "FSM",
            "GAB",
            "GBR",
            "GEO",
            "GGY",
            "GHA",
            "GIB",
            "GIN",
            "GLP",
            "GMB",
            "GNB",
            "GNQ",
            "GRC",
            "GRD",
            "GRL",
            "GTM",
            "GUF",
            "GUM",
            "GUY",
            "HKG",
            "HND",
            "HRV",
            "HTI",
            "HUN",
            "IDN",
            "IMN",
            "IND",
            "IRL",
            "IRQ",
            "ISL",
            "ISR",
            "ITA",
            "JAM",
            "JEY",
            "JOR",
            "JPN",
            "KAZ",
            "KEN",
            "KGZ",
            "KHM",
            "KIR",
            "KNA",
            "KOR",
            "KWT",
            "LAO",
            "LBN",
            "LBR",
            "LBY",
            "LCA",
            "LIE",
            "LKA",
            "LSO",
            "LTU",
            "LUX",
            "LVA",
            "MAC",
            "MAR",
            "MCO",
            "MDA",
            "MDG",
            "MDV",
            "MEX",
            "MHL",
            "MKD",
            "MLI",
            "MLT",
            "MMR",
            "MNE",
            "MNG",
            "MNP",
            "MOZ",
            "MRT",
            "MSR",
            "MTQ",
            "MUS",
            "MWI",
            "MYS",
            "MYT",
            "NAM",
            "NCL",
            "NER",
            "NFK",
            "NGA",
            "NIC",
            "NIU",
            "NLD",
            "NOR",
            "NPL",
            "NRU",
            "NZL",
            "OMN",
            "PAK",
            "PAN",
            "PER",
            "PHL",
            "PLW",
            "PNG",
            "POL",
            "PRI",
            "PRT",
            "PRY",
            "PSE",
            "PYF",
            "QAT",
            "REU",
            "ROU",
            "RUS",
            "RWA",
            "SAU",
            "SEN",
            "SGP",
            "SHN",
            "SLB",
            "SLE",
            "SLV",
            "SMR",
            "SOM",
            "SPM",
            "SRB",
            "SSD",
            "STP",
            "SUR",
            "SVK",
            "SVN",
            "SWE",
            "SWZ",
            "SXM",
            "SYC",
            "TCA",
            "TCD",
            "TGO",
            "THA",
            "TJK",
            "TKM",
            "TLS",
            "TON",
            "TTO",
            "TUN",
            "TUR",
            "TUV",
            "TWN",
            "TZA",
            "UGA",
            "UKR",
            "UMI",
            "URY",
            "USA",
            "UZB",
            "VAT",
            "VCT",
            "VEN",
            "VGB",
            "VIR",
            "VNM",
            "VUT",
            "WLF",
            "WSM",
            "YEM",
            "ZAF",
            "ZMB",
            "ZWE",
        ]
    ]
):
    root: Literal[
        "ABW",
        "AFG",
        "AGO",
        "AIA",
        "ALB",
        "AND",
        "ANT",
        "ARE",
        "ARG",
        "ARM",
        "ASM",
        "ATG",
        "AUS",
        "AUT",
        "AZE",
        "BDI",
        "BEL",
        "BEN",
        "BES",
        "BFA",
        "BGD",
        "BGR",
        "BHR",
        "BHS",
        "BIH",
        "BLR",
        "BLZ",
        "BMU",
        "BOL",
        "BRA",
        "BRB",
        "BRN",
        "BTN",
        "BWA",
        "CAF",
        "CAN",
        "CHE",
        "CHL",
        "CHN",
        "CIV",
        "CMR",
        "COD",
        "COG",
        "COK",
        "COL",
        "COM",
        "CPV",
        "CRI",
        "CUB",
        "CUW",
        "CXR",
        "CYM",
        "CYP",
        "CZE",
        "DEU",
        "DJI",
        "DMA",
        "DNK",
        "DOM",
        "DZA",
        "ECU",
        "EGY",
        "ERI",
        "ESP",
        "EST",
        "ETH",
        "FIN",
        "FJI",
        "FLK",
        "FRA",
        "FRO",
        "FSM",
        "GAB",
        "GBR",
        "GEO",
        "GGY",
        "GHA",
        "GIB",
        "GIN",
        "GLP",
        "GMB",
        "GNB",
        "GNQ",
        "GRC",
        "GRD",
        "GRL",
        "GTM",
        "GUF",
        "GUM",
        "GUY",
        "HKG",
        "HND",
        "HRV",
        "HTI",
        "HUN",
        "IDN",
        "IMN",
        "IND",
        "IRL",
        "IRQ",
        "ISL",
        "ISR",
        "ITA",
        "JAM",
        "JEY",
        "JOR",
        "JPN",
        "KAZ",
        "KEN",
        "KGZ",
        "KHM",
        "KIR",
        "KNA",
        "KOR",
        "KWT",
        "LAO",
        "LBN",
        "LBR",
        "LBY",
        "LCA",
        "LIE",
        "LKA",
        "LSO",
        "LTU",
        "LUX",
        "LVA",
        "MAC",
        "MAR",
        "MCO",
        "MDA",
        "MDG",
        "MDV",
        "MEX",
        "MHL",
        "MKD",
        "MLI",
        "MLT",
        "MMR",
        "MNE",
        "MNG",
        "MNP",
        "MOZ",
        "MRT",
        "MSR",
        "MTQ",
        "MUS",
        "MWI",
        "MYS",
        "MYT",
        "NAM",
        "NCL",
        "NER",
        "NFK",
        "NGA",
        "NIC",
        "NIU",
        "NLD",
        "NOR",
        "NPL",
        "NRU",
        "NZL",
        "OMN",
        "PAK",
        "PAN",
        "PER",
        "PHL",
        "PLW",
        "PNG",
        "POL",
        "PRI",
        "PRT",
        "PRY",
        "PSE",
        "PYF",
        "QAT",
        "REU",
        "ROU",
        "RUS",
        "RWA",
        "SAU",
        "SEN",
        "SGP",
        "SHN",
        "SLB",
        "SLE",
        "SLV",
        "SMR",
        "SOM",
        "SPM",
        "SRB",
        "SSD",
        "STP",
        "SUR",
        "SVK",
        "SVN",
        "SWE",
        "SWZ",
        "SXM",
        "SYC",
        "TCA",
        "TCD",
        "TGO",
        "THA",
        "TJK",
        "TKM",
        "TLS",
        "TON",
        "TTO",
        "TUN",
        "TUR",
        "TUV",
        "TWN",
        "TZA",
        "UGA",
        "UKR",
        "UMI",
        "URY",
        "USA",
        "UZB",
        "VAT",
        "VCT",
        "VEN",
        "VGB",
        "VIR",
        "VNM",
        "VUT",
        "WLF",
        "WSM",
        "YEM",
        "ZAF",
        "ZMB",
        "ZWE",
    ]


class UploadOperation(BaseModel):
    method: Optional[str] = None
    url: Optional[str] = None
    length: Optional[int] = None
    offset: Optional[int] = None
    requestHeaders: Optional[List[HttpHeader]] = None


class UserRole(
    RootModel[
        Literal[
            "ADMIN",
            "FINANCE",
            "ACCOUNT_HOLDER",
            "SALES",
            "MARKETING",
            "APP_MANAGER",
            "DEVELOPER",
            "ACCESS_TO_REPORTS",
            "CUSTOMER_SUPPORT",
            "CREATE_APPS",
            "CLOUD_MANAGED_DEVELOPER_ID",
            "CLOUD_MANAGED_APP_DISTRIBUTION",
            "GENERATE_INDIVIDUAL_KEYS",
        ]
    ]
):
    root: Literal[
        "ADMIN",
        "FINANCE",
        "ACCOUNT_HOLDER",
        "SALES",
        "MARKETING",
        "APP_MANAGER",
        "DEVELOPER",
        "ACCESS_TO_REPORTS",
        "CUSTOMER_SUPPORT",
        "CREATE_APPS",
        "CLOUD_MANAGED_DEVELOPER_ID",
        "CLOUD_MANAGED_APP_DISTRIBUTION",
        "GENERATE_INDIVIDUAL_KEYS",
    ]


class WebhookEventType(
    RootModel[
        Literal[
            "APP_STORE_VERSION_APP_VERSION_STATE_UPDATED",
            "BETA_FEEDBACK_CRASH_SUBMISSION_CREATED",
            "BETA_FEEDBACK_SCREENSHOT_SUBMISSION_CREATED",
        ]
    ]
):
    root: Literal[
        "APP_STORE_VERSION_APP_VERSION_STATE_UPDATED",
        "BETA_FEEDBACK_CRASH_SUBMISSION_CREATED",
        "BETA_FEEDBACK_SCREENSHOT_SUBMISSION_CREATED",
    ]


class Csv(RootModel[str]):
    root: str


class DiagnosticInsight1(BaseModel):
    insightsURL: Optional[str] = None
    insightsCategory: Optional[str] = None
    insightsString: Optional[str] = None


class CallStack(BaseModel):
    callStackRootFrames: Optional[List[DiagnosticLogCallStackNode]] = None


class CallStackTreeItem(BaseModel):
    callStackPerThread: Optional[bool] = None
    callStacks: Optional[List[CallStack]] = None


class DiagnosticMetaData(BaseModel):
    bundleId: Optional[str] = None
    event: Optional[str] = None
    osVersion: Optional[str] = None
    appVersion: Optional[str] = None
    writesCaused: Optional[str] = None
    deviceType: Optional[str] = None
    platformArchitecture: Optional[str] = None
    eventDetail: Optional[str] = None
    buildVersion: Optional[str] = None


class DiagnosticLog1(BaseModel):
    callStackTree: Optional[List[CallStackTreeItem]] = None
    diagnosticMetaData: Optional[DiagnosticMetaData] = None


class ProductDatum(BaseModel):
    signatureId: Optional[str] = None
    diagnosticInsights: Optional[List[DiagnosticInsight1]] = None
    diagnosticLogs: Optional[List[DiagnosticLog1]] = None


class DiagnosticLogs(BaseModel):
    productData: Optional[List[ProductDatum]] = None
    version: Optional[str] = None


class Gzip(RootModel[bytes]):
    root: bytes


class Insights(BaseModel):
    trendingUp: Optional[List[MetricsInsight]] = None
    regressions: Optional[List[MetricsInsight]] = None


class GoalKey(BaseModel):
    goalKey: Optional[str] = None
    lowerBound: Optional[int] = None
    upperBound: Optional[int] = None


class Unit(BaseModel):
    identifier: Optional[str] = None
    displayName: Optional[str] = None


class FilterCriteria(BaseModel):
    percentile: Optional[str] = None
    device: Optional[str] = None
    deviceMarketingName: Optional[str] = None


class PercentageBreakdown(BaseModel):
    value: Optional[float] = None
    subSystemLabel: Optional[str] = None


class Point(BaseModel):
    version: Optional[str] = None
    value: Optional[float] = None
    errorMargin: Optional[float] = None
    percentageBreakdown: Optional[PercentageBreakdown] = None
    goal: Optional[str] = None


class RecommendedMetricGoal(BaseModel):
    value: Optional[float] = None
    detail: Optional[str] = None


class Dataset(BaseModel):
    filterCriteria: Optional[FilterCriteria] = None
    points: Optional[List[Point]] = None
    recommendedMetricGoal: Optional[RecommendedMetricGoal] = None


class Metric(BaseModel):
    identifier: Optional[str] = None
    goalKeys: Optional[List[GoalKey]] = None
    unit: Optional[Unit] = None
    datasets: Optional[List[Dataset]] = None


class MetricCategory1(BaseModel):
    identifier: Optional[MetricCategory] = None
    metrics: Optional[List[Metric]] = None


class ProductDatum1(BaseModel):
    platform: Optional[str] = None
    metricCategories: Optional[List[MetricCategory1]] = None


class XcodeMetrics(BaseModel):
    version: Optional[str] = None
    insights: Optional[Insights] = None
    productData: Optional[List[ProductDatum1]] = None


class Attributes(BaseModel):
    deviceFamily: Optional[DeviceFamily] = None
    state: Optional[Literal["DRAFT", "PUBLISHED", "REPLACED"]] = None
    supportsAudioDescriptions: Optional[bool] = None
    supportsCaptions: Optional[bool] = None
    supportsDarkInterface: Optional[bool] = None
    supportsDifferentiateWithoutColorAlone: Optional[bool] = None
    supportsLargerText: Optional[bool] = None
    supportsReducedMotion: Optional[bool] = None
    supportsSufficientContrast: Optional[bool] = None
    supportsVoiceControl: Optional[bool] = None
    supportsVoiceover: Optional[bool] = None


class AccessibilityDeclaration(BaseModel):
    type: Literal["accessibilityDeclarations"]
    id: str
    attributes: Optional[Attributes] = None
    links: Optional[ResourceLinks] = None


class AccessibilityDeclarationsResponse(BaseModel):
    data: List[AccessibilityDeclaration]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AccessibilityDeclarationResponse(BaseModel):
    data: AccessibilityDeclaration
    links: DocumentLinks


class Attributes1(BaseModel):
    deviceFamily: DeviceFamily
    supportsAudioDescriptions: Optional[bool] = None
    supportsCaptions: Optional[bool] = None
    supportsDarkInterface: Optional[bool] = None
    supportsDifferentiateWithoutColorAlone: Optional[bool] = None
    supportsLargerText: Optional[bool] = None
    supportsReducedMotion: Optional[bool] = None
    supportsSufficientContrast: Optional[bool] = None
    supportsVoiceControl: Optional[bool] = None
    supportsVoiceover: Optional[bool] = None


class Data(BaseModel):
    type: Literal["accessibilityDeclarations"]
    attributes: Attributes1
    relationships: Relationships


class AccessibilityDeclarationCreateRequest(BaseModel):
    data: Data


class Actor(BaseModel):
    type: Literal["actors"]
    id: str
    attributes: Optional[Attributes3] = None
    links: Optional[ResourceLinks] = None


class ActorsResponse(BaseModel):
    data: List[Actor]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ActorResponse(BaseModel):
    data: Actor
    links: DocumentLinks


class Attributes4(BaseModel):
    alcoholTobaccoOrDrugUseOrReferences: Optional[Literal["NONE"]] = None
    contests: Optional[Literal["NONE"]] = None
    gambling: Optional[bool] = None
    gamblingSimulated: Optional[Literal["NONE"]] = None
    kidsAgeBand: Optional[KidsAgeBand] = None
    lootBox: Optional[bool] = None
    medicalOrTreatmentInformation: Optional[Literal["NONE"]] = None
    profanityOrCrudeHumor: Optional[Literal["NONE"]] = None
    sexualContentGraphicAndNudity: Optional[Literal["NONE"]] = None
    sexualContentOrNudity: Optional[Literal["NONE"]] = None
    horrorOrFearThemes: Optional[Literal["NONE"]] = None
    matureOrSuggestiveThemes: Optional[Literal["NONE"]] = None
    unrestrictedWebAccess: Optional[bool] = None
    violenceCartoonOrFantasy: Optional[Literal["NONE"]] = None
    violenceRealisticProlongedGraphicOrSadistic: Optional[Literal["NONE"]] = None
    violenceRealistic: Optional[Literal["NONE"]] = None
    koreaAgeRatingOverride: Optional[
        Literal["NONE", "FIFTEEN_PLUS", "NINETEEN_PLUS"]
    ] = None


class AgeRatingDeclaration(BaseModel):
    type: Literal["ageRatingDeclarations"]
    id: str
    attributes: Optional[Attributes4] = None
    links: Optional[ResourceLinks] = None


class AgeRatingDeclarationResponse(BaseModel):
    data: AgeRatingDeclaration
    links: DocumentLinks


class Data3(BaseModel):
    type: Literal["ageRatingDeclarations"]
    id: str
    attributes: Optional[Attributes4] = None


class AgeRatingDeclarationUpdateRequest(BaseModel):
    data: Data3


class AlternativeDistributionDomain(BaseModel):
    type: Literal["alternativeDistributionDomains"]
    id: str
    attributes: Optional[Attributes6] = None
    links: Optional[ResourceLinks] = None


class AlternativeDistributionDomainsResponse(BaseModel):
    data: List[AlternativeDistributionDomain]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionDomainResponse(BaseModel):
    data: AlternativeDistributionDomain
    links: DocumentLinks


class AlternativeDistributionKey(BaseModel):
    type: Literal["alternativeDistributionKeys"]
    id: str
    attributes: Optional[Attributes8] = None
    links: Optional[ResourceLinks] = None


class AlternativeDistributionKeysResponse(BaseModel):
    data: List[AlternativeDistributionKey]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionKeyResponse(BaseModel):
    data: AlternativeDistributionKey
    links: DocumentLinks


class AlternativeDistributionPackageDelta(BaseModel):
    type: Literal["alternativeDistributionPackageDeltas"]
    id: str
    attributes: Optional[Attributes10] = None
    links: Optional[ResourceLinks] = None


class AlternativeDistributionPackageDeltasResponse(BaseModel):
    data: List[AlternativeDistributionPackageDelta]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionPackageDeltaResponse(BaseModel):
    data: AlternativeDistributionPackageDelta
    links: DocumentLinks


class AlternativeDistributionPackageVariant(BaseModel):
    type: Literal["alternativeDistributionPackageVariants"]
    id: str
    attributes: Optional[Attributes10] = None
    links: Optional[ResourceLinks] = None


class AlternativeDistributionPackageVariantsResponse(BaseModel):
    data: List[AlternativeDistributionPackageVariant]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionPackageVariantResponse(BaseModel):
    data: AlternativeDistributionPackageVariant
    links: DocumentLinks


class Variants(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum]] = None


class Deltas(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum1]] = None


class Relationships2(BaseModel):
    variants: Optional[Variants] = None
    deltas: Optional[Deltas] = None
    alternativeDistributionPackage: Optional[AlternativeDistributionPackage] = None


class AlternativeDistributionPackageVersion(BaseModel):
    type: Literal["alternativeDistributionPackageVersions"]
    id: str
    attributes: Optional[Attributes12] = None
    relationships: Optional[Relationships2] = None
    links: Optional[ResourceLinks] = None


class Versions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum2]] = None


class Relationships3(BaseModel):
    versions: Optional[Versions] = None


class AlternativeDistributionPackageModel(BaseModel):
    type: Literal["alternativeDistributionPackages"]
    id: str
    relationships: Optional[Relationships3] = None
    links: Optional[ResourceLinks] = None


class AlternativeDistributionPackageResponse(BaseModel):
    data: AlternativeDistributionPackageModel
    included: Optional[List[AlternativeDistributionPackageVersion]] = None
    links: DocumentLinks


class Segments(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships5(BaseModel):
    segments: Optional[Segments] = None


class AnalyticsReportInstance(BaseModel):
    type: Literal["analyticsReportInstances"]
    id: str
    attributes: Optional[Attributes13] = None
    relationships: Optional[Relationships5] = None
    links: Optional[ResourceLinks] = None


class AnalyticsReportInstancesResponse(BaseModel):
    data: List[AnalyticsReportInstance]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportInstanceResponse(BaseModel):
    data: AnalyticsReportInstance
    links: DocumentLinks


class Reports(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum3]] = None


class Relationships6(BaseModel):
    reports: Optional[Reports] = None


class AnalyticsReportRequest(BaseModel):
    type: Literal["analyticsReportRequests"]
    id: str
    attributes: Optional[Attributes14] = None
    relationships: Optional[Relationships6] = None
    links: Optional[ResourceLinks] = None


class AnalyticsReportSegment(BaseModel):
    type: Literal["analyticsReportSegments"]
    id: str
    attributes: Optional[Attributes16] = None
    links: Optional[ResourceLinks] = None


class AnalyticsReportSegmentsResponse(BaseModel):
    data: List[AnalyticsReportSegment]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportSegmentResponse(BaseModel):
    data: AnalyticsReportSegment
    links: DocumentLinks


class Instances(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships8(BaseModel):
    instances: Optional[Instances] = None


class AnalyticsReport(BaseModel):
    type: Literal["analyticsReports"]
    id: str
    attributes: Optional[Attributes17] = None
    relationships: Optional[Relationships8] = None
    links: Optional[ResourceLinks] = None


class AnalyticsReportsResponse(BaseModel):
    data: List[AnalyticsReport]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportResponse(BaseModel):
    data: AnalyticsReport
    links: DocumentLinks


class TerritoryAvailabilities(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum4]] = None


class Relationships9(BaseModel):
    territoryAvailabilities: Optional[TerritoryAvailabilities] = None


class AppAvailabilityV2(BaseModel):
    type: Literal["appAvailabilities"]
    id: str
    attributes: Optional[Attributes18] = None
    relationships: Optional[Relationships9] = None
    links: Optional[ResourceLinks] = None


class AppAvailabilityV2CreateRequest(BaseModel):
    data: Data12
    included: Optional[List[TerritoryAvailabilityInlineCreate]] = None


class Attributes20(BaseModel):
    platforms: Optional[List[Platform]] = None


class Subcategories(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum6]] = None


class Parent(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data14] = None


class Relationships11(BaseModel):
    subcategories: Optional[Subcategories] = None
    parent: Optional[Parent] = None


class AppCategory(BaseModel):
    type: Literal["appCategories"]
    id: str
    attributes: Optional[Attributes20] = None
    relationships: Optional[Relationships11] = None
    links: Optional[ResourceLinks] = None


class AppCategoriesResponse(BaseModel):
    data: List[AppCategory]
    included: Optional[List[AppCategory]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCategoryResponse(BaseModel):
    data: AppCategory
    included: Optional[List[AppCategory]] = None
    links: DocumentLinks


class Attributes24(BaseModel):
    language: Optional[AppClipAdvancedExperienceLanguage] = None
    title: Optional[str] = None
    subtitle: Optional[str] = None


class AppClipAdvancedExperienceLocalization(BaseModel):
    type: Literal["appClipAdvancedExperienceLocalizations"]
    id: str
    attributes: Optional[Attributes24] = None
    links: Optional[ResourceLinks] = None


class AppClipAdvancedExperienceLocalizationInlineCreate(BaseModel):
    type: Literal["appClipAdvancedExperienceLocalizations"]
    id: Optional[str] = None
    attributes: Optional[Attributes24] = None


class Attributes26(BaseModel):
    link: Optional[AnyUrl] = None
    version: Optional[int] = None
    status: Optional[Literal["RECEIVED", "DEACTIVATED", "APP_TRANSFER_IN_PROGRESS"]] = (
        None
    )
    action: Optional[AppClipAction] = None
    isPoweredBy: Optional[bool] = None
    place: Optional[Place] = None
    placeStatus: Optional[Literal["PENDING", "MATCHED", "NO_MATCH"]] = None
    businessCategory: Optional[
        Literal[
            "AUTOMOTIVE",
            "BEAUTY",
            "BIKES",
            "BOOKS",
            "CASINO",
            "EDUCATION",
            "EDUCATION_JAPAN",
            "ENTERTAINMENT",
            "EV_CHARGER",
            "FINANCIAL_USD",
            "FINANCIAL_CNY",
            "FINANCIAL_GBP",
            "FINANCIAL_JPY",
            "FINANCIAL_EUR",
            "FITNESS",
            "FOOD_AND_DRINK",
            "GAS",
            "GROCERY",
            "HEALTH_AND_MEDICAL",
            "HOTEL_AND_TRAVEL",
            "MUSIC",
            "PARKING",
            "PET_SERVICES",
            "PROFESSIONAL_SERVICES",
            "SHOPPING",
            "TICKETING",
            "TRANSIT",
        ]
    ] = None
    defaultLanguage: Optional[AppClipAdvancedExperienceLanguage] = None


class Localizations(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum7]] = None


class Relationships12(BaseModel):
    appClip: Optional[AppClip] = None
    headerImage: Optional[HeaderImage] = None
    localizations: Optional[Localizations] = None


class AppClipAdvancedExperience(BaseModel):
    type: Literal["appClipAdvancedExperiences"]
    id: str
    attributes: Optional[Attributes26] = None
    relationships: Optional[Relationships12] = None
    links: Optional[ResourceLinks] = None


class Attributes27(BaseModel):
    link: AnyUrl
    action: Optional[AppClipAction] = None
    isPoweredBy: bool
    place: Optional[Place1] = None
    businessCategory: Optional[
        Literal[
            "AUTOMOTIVE",
            "BEAUTY",
            "BIKES",
            "BOOKS",
            "CASINO",
            "EDUCATION",
            "EDUCATION_JAPAN",
            "ENTERTAINMENT",
            "EV_CHARGER",
            "FINANCIAL_USD",
            "FINANCIAL_CNY",
            "FINANCIAL_GBP",
            "FINANCIAL_JPY",
            "FINANCIAL_EUR",
            "FITNESS",
            "FOOD_AND_DRINK",
            "GAS",
            "GROCERY",
            "HEALTH_AND_MEDICAL",
            "HOTEL_AND_TRAVEL",
            "MUSIC",
            "PARKING",
            "PET_SERVICES",
            "PROFESSIONAL_SERVICES",
            "SHOPPING",
            "TICKETING",
            "TRANSIT",
        ]
    ] = None
    defaultLanguage: AppClipAdvancedExperienceLanguage


class Data19(BaseModel):
    type: Literal["appClipAdvancedExperiences"]
    attributes: Attributes27
    relationships: Relationships13


class AppClipAdvancedExperienceCreateRequest(BaseModel):
    data: Data19
    included: Optional[List[AppClipAdvancedExperienceLocalizationInlineCreate]] = None


class Attributes28(BaseModel):
    action: Optional[AppClipAction] = None
    isPoweredBy: Optional[bool] = None
    place: Optional[Place2] = None
    businessCategory: Optional[
        Literal[
            "AUTOMOTIVE",
            "BEAUTY",
            "BIKES",
            "BOOKS",
            "CASINO",
            "EDUCATION",
            "EDUCATION_JAPAN",
            "ENTERTAINMENT",
            "EV_CHARGER",
            "FINANCIAL_USD",
            "FINANCIAL_CNY",
            "FINANCIAL_GBP",
            "FINANCIAL_JPY",
            "FINANCIAL_EUR",
            "FITNESS",
            "FOOD_AND_DRINK",
            "GAS",
            "GROCERY",
            "HEALTH_AND_MEDICAL",
            "HOTEL_AND_TRAVEL",
            "MUSIC",
            "PARKING",
            "PET_SERVICES",
            "PROFESSIONAL_SERVICES",
            "SHOPPING",
            "TICKETING",
            "TRANSIT",
        ]
    ] = None
    defaultLanguage: Optional[AppClipAdvancedExperienceLanguage] = None
    removed: Optional[bool] = None


class Data22(BaseModel):
    type: Literal["appClipAdvancedExperiences"]
    id: str
    attributes: Optional[Attributes28] = None
    relationships: Optional[Relationships14] = None


class AppClipAdvancedExperienceUpdateRequest(BaseModel):
    data: Data22
    included: Optional[List[AppClipAdvancedExperienceLocalizationInlineCreate]] = None


class AppClipAppStoreReviewDetail(BaseModel):
    type: Literal["appClipAppStoreReviewDetails"]
    id: str
    attributes: Optional[Attributes29] = None
    relationships: Optional[Relationships15] = None
    links: Optional[ResourceLinks] = None


class AppClipHeaderImage(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data30] = None


class Relationships17(BaseModel):
    appClipDefaultExperience: Optional[AppClipDefaultExperience2] = None
    appClipHeaderImage: Optional[AppClipHeaderImage] = None


class AppClipDefaultExperienceLocalization(BaseModel):
    type: Literal["appClipDefaultExperienceLocalizations"]
    id: str
    attributes: Optional[Attributes32] = None
    relationships: Optional[Relationships17] = None
    links: Optional[ResourceLinks] = None


class Attributes35(BaseModel):
    action: Optional[AppClipAction] = None


class ReleaseWithAppStoreVersion(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data35] = None


class AppClipDefaultExperienceLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum10]] = None


class AppClipAppStoreReviewDetail1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data36] = None


class Relationships19(BaseModel):
    appClip: Optional[AppClip3] = None
    releaseWithAppStoreVersion: Optional[ReleaseWithAppStoreVersion] = None
    appClipDefaultExperienceLocalizations: Optional[
        AppClipDefaultExperienceLocalizations
    ] = None
    appClipAppStoreReviewDetail: Optional[AppClipAppStoreReviewDetail1] = None


class AppClipDefaultExperienceModel(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str
    attributes: Optional[Attributes35] = None
    relationships: Optional[Relationships19] = None
    links: Optional[ResourceLinks] = None


class Data37(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    attributes: Optional[Attributes35] = None
    relationships: Relationships20


class AppClipDefaultExperienceCreateRequest(BaseModel):
    data: Data37


class Data41(BaseModel):
    type: Literal["appClipDefaultExperiences"]
    id: str
    attributes: Optional[Attributes35] = None
    relationships: Optional[Relationships21] = None


class AppClipDefaultExperienceUpdateRequest(BaseModel):
    data: Data41


class AppClipDomainStatus(BaseModel):
    type: Literal["appClipDomainStatuses"]
    id: str
    attributes: Optional[Attributes38] = None
    links: Optional[ResourceLinks] = None


class AppClipDomainStatusResponse(BaseModel):
    data: AppClipDomainStatus
    links: DocumentLinks


class AppClipDefaultExperiences(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum11]] = None


class AppClipAdvancedExperiences(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships24(BaseModel):
    app: Optional[App4] = None
    appClipDefaultExperiences: Optional[AppClipDefaultExperiences] = None
    appClipAdvancedExperiences: Optional[AppClipAdvancedExperiences] = None


class AppClipModel(BaseModel):
    type: Literal["appClips"]
    id: str
    attributes: Optional[Attributes42] = None
    relationships: Optional[Relationships24] = None
    links: Optional[ResourceLinks] = None


class AppScreenshotSets(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum12]] = None


class AppPreviewSets(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum13]] = None


class Relationships25(BaseModel):
    appCustomProductPageVersion: Optional[AppCustomProductPageVersion] = None
    appScreenshotSets: Optional[AppScreenshotSets] = None
    appPreviewSets: Optional[AppPreviewSets] = None


class AppCustomProductPageLocalization(BaseModel):
    type: Literal["appCustomProductPageLocalizations"]
    id: str
    attributes: Optional[Attributes43] = None
    relationships: Optional[Relationships25] = None
    links: Optional[ResourceLinks] = None


class AppCustomProductPageLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum14]] = None


class Relationships28(BaseModel):
    appCustomProductPage: Optional[AppCustomProductPage] = None
    appCustomProductPageLocalizations: Optional[AppCustomProductPageLocalizations] = (
        None
    )


class AppCustomProductPageVersionModel(BaseModel):
    type: Literal["appCustomProductPageVersions"]
    id: str
    attributes: Optional[Attributes47] = None
    relationships: Optional[Relationships28] = None
    links: Optional[ResourceLinks] = None


class AppCustomProductPageVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum17]] = None


class Relationships31(BaseModel):
    app: Optional[App5] = None
    appCustomProductPageVersions: Optional[AppCustomProductPageVersions] = None


class AppCustomProductPageModel(BaseModel):
    type: Literal["appCustomProductPages"]
    id: str
    attributes: Optional[Attributes51] = None
    relationships: Optional[Relationships31] = None
    links: Optional[ResourceLinks] = None


class Attributes57(BaseModel):
    appDescription: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None
    usesEncryption: Optional[bool] = None
    exempt: Optional[bool] = None
    containsProprietaryCryptography: Optional[bool] = None
    containsThirdPartyCryptography: Optional[bool] = None
    availableOnFrenchStore: Optional[bool] = None
    platform: Optional[Platform] = None
    uploadedDate: Optional[AwareDatetime] = None
    documentUrl: Optional[str] = None
    documentName: Optional[str] = None
    documentType: Optional[str] = None
    appEncryptionDeclarationState: Optional[AppEncryptionDeclarationState] = None
    codeValue: Optional[str] = None


class App7(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data67] = None


class Builds(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum19]] = None


class AppEncryptionDeclarationDocument1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data68] = None


class Relationships34(BaseModel):
    app: Optional[App7] = None
    builds: Optional[Builds] = None
    appEncryptionDeclarationDocument: Optional[AppEncryptionDeclarationDocument1] = None


class AppEncryptionDeclaration1(BaseModel):
    type: Literal["appEncryptionDeclarations"]
    id: str
    attributes: Optional[Attributes57] = None
    relationships: Optional[Relationships34] = None
    links: Optional[ResourceLinks] = None


class AppEventScreenshots(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum20]] = None


class AppEventVideoClips(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum21]] = None


class Relationships36(BaseModel):
    appEvent: Optional[AppEvent] = None
    appEventScreenshots: Optional[AppEventScreenshots] = None
    appEventVideoClips: Optional[AppEventVideoClips] = None


class AppEventLocalization(BaseModel):
    type: Literal["appEventLocalizations"]
    id: str
    attributes: Optional[Attributes59] = None
    relationships: Optional[Relationships36] = None
    links: Optional[ResourceLinks] = None


class Attributes63(BaseModel):
    fileSize: int
    fileName: str
    appEventAssetType: AppEventAssetType


class Data76(BaseModel):
    type: Literal["appEventScreenshots"]
    attributes: Attributes63
    relationships: Relationships39


class AppEventScreenshotCreateRequest(BaseModel):
    data: Data76


class Attributes66(BaseModel):
    fileSize: int
    fileName: str
    previewFrameTimeCode: Optional[str] = None
    appEventAssetType: AppEventAssetType


class Data80(BaseModel):
    type: Literal["appEventVideoClips"]
    attributes: Attributes66
    relationships: Relationships41


class AppEventVideoClipCreateRequest(BaseModel):
    data: Data80


class Localizations3(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum22]] = None


class Relationships42(BaseModel):
    localizations: Optional[Localizations3] = None


class AppEventModel(BaseModel):
    type: Literal["appEvents"]
    id: str
    attributes: Optional[Attributes68] = None
    relationships: Optional[Relationships42] = None
    links: Optional[ResourceLinks] = None


class AppEventsResponse(BaseModel):
    data: List[AppEventModel]
    included: Optional[List[AppEventLocalization]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEventResponse(BaseModel):
    data: AppEventModel
    included: Optional[List[AppEventLocalization]] = None
    links: DocumentLinks


class AppInfoLocalization(BaseModel):
    type: Literal["appInfoLocalizations"]
    id: str
    attributes: Optional[Attributes71] = None
    relationships: Optional[Relationships44] = None
    links: Optional[ResourceLinks] = None


class Attributes74(BaseModel):
    appStoreState: Optional[AppStoreVersionState] = None
    state: Optional[
        Literal[
            "ACCEPTED",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "PENDING_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_DISTRIBUTION",
            "READY_FOR_REVIEW",
            "REJECTED",
            "REPLACED_WITH_NEW_INFO",
            "WAITING_FOR_REVIEW",
        ]
    ] = None
    appStoreAgeRating: Optional[AppStoreAgeRating] = None
    australiaAgeRating: Optional[Literal["FIFTEEN", "EIGHTEEN"]] = None
    brazilAgeRating: Optional[BrazilAgeRating] = None
    brazilAgeRatingV2: Optional[
        Literal[
            "SELF_RATED_L",
            "SELF_RATED_TEN",
            "SELF_RATED_TWELVE",
            "SELF_RATED_FOURTEEN",
            "SELF_RATED_SIXTEEN",
            "SELF_RATED_EIGHTEEN",
            "OFFICIAL_L",
            "OFFICIAL_TEN",
            "OFFICIAL_TWELVE",
            "OFFICIAL_FOURTEEN",
            "OFFICIAL_SIXTEEN",
            "OFFICIAL_EIGHTEEN",
        ]
    ] = None
    franceAgeRating: Optional[Literal["EIGHTEEN"]] = None
    koreaAgeRating: Optional[
        Literal["ALL", "TWELVE", "FIFTEEN", "NINETEEN", "NOT_APPLICABLE"]
    ] = None
    kidsAgeBand: Optional[KidsAgeBand] = None


class AgeRatingDeclaration1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data91] = None


class AppInfoLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum23]] = None


class PrimaryCategory(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data92] = None


class PrimarySubcategoryOne(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data92] = None


class PrimarySubcategoryTwo(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data92] = None


class SecondaryCategory(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data92] = None


class SecondarySubcategoryOne(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data92] = None


class SecondarySubcategoryTwo(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data92] = None


class Relationships46(BaseModel):
    app: Optional[App10] = None
    ageRatingDeclaration: Optional[AgeRatingDeclaration1] = None
    appInfoLocalizations: Optional[AppInfoLocalizations] = None
    primaryCategory: Optional[PrimaryCategory] = None
    primarySubcategoryOne: Optional[PrimarySubcategoryOne] = None
    primarySubcategoryTwo: Optional[PrimarySubcategoryTwo] = None
    secondaryCategory: Optional[SecondaryCategory] = None
    secondarySubcategoryOne: Optional[SecondarySubcategoryOne] = None
    secondarySubcategoryTwo: Optional[SecondarySubcategoryTwo] = None


class AppInfoModel(BaseModel):
    type: Literal["appInfos"]
    id: str
    attributes: Optional[Attributes74] = None
    relationships: Optional[Relationships46] = None
    links: Optional[ResourceLinks] = None


class Attributes75(BaseModel):
    previewType: Optional[PreviewType] = None


class AppPreviews(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum24]] = None


class Relationships48(BaseModel):
    appStoreVersionLocalization: Optional[AppStoreVersionLocalization] = None
    appCustomProductPageLocalization: Optional[AppCustomProductPageLocalization1] = None
    appStoreVersionExperimentTreatmentLocalization: Optional[
        AppStoreVersionExperimentTreatmentLocalization
    ] = None
    appPreviews: Optional[AppPreviews] = None


class AppPreviewSet(BaseModel):
    type: Literal["appPreviewSets"]
    id: str
    attributes: Optional[Attributes75] = None
    relationships: Optional[Relationships48] = None
    links: Optional[ResourceLinks] = None


class Attributes76(BaseModel):
    previewType: PreviewType


class Data108(BaseModel):
    type: Literal["appPreviewSets"]
    attributes: Attributes76
    relationships: Optional[Relationships49] = None


class AppPreviewSetCreateRequest(BaseModel):
    data: Data108


class Equalizations(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships52(BaseModel):
    app: Optional[App11] = None
    equalizations: Optional[Equalizations] = None
    territory: Optional[Territory] = None


class AppPricePointV3(BaseModel):
    type: Literal["appPricePoints"]
    id: str
    attributes: Optional[Attributes80] = None
    relationships: Optional[Relationships52] = None
    links: Optional[ResourceLinks] = None


class BaseTerritory(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data119] = None


class ManualPrices(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum25]] = None


class AutomaticPrices(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum25]] = None


class Relationships53(BaseModel):
    app: Optional[App12] = None
    baseTerritory: Optional[BaseTerritory] = None
    manualPrices: Optional[ManualPrices] = None
    automaticPrices: Optional[AutomaticPrices] = None


class AppPriceSchedule(BaseModel):
    type: Literal["appPriceSchedules"]
    id: str
    relationships: Optional[Relationships53] = None
    links: Optional[ResourceLinks] = None


class AppPriceScheduleCreateRequest(BaseModel):
    data: Data120
    included: Optional[List[Union[AppPriceV2InlineCreate, TerritoryInlineCreate]]] = (
        None
    )


class AppPriceV2(BaseModel):
    type: Literal["appPrices"]
    id: str
    attributes: Optional[Attributes81] = None
    relationships: Optional[Relationships55] = None
    links: Optional[ResourceLinks] = None


class Attributes82(BaseModel):
    screenshotDisplayType: Optional[ScreenshotDisplayType] = None


class AppScreenshots(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum28]] = None


class Relationships56(BaseModel):
    appStoreVersionLocalization: Optional[AppStoreVersionLocalization2] = None
    appCustomProductPageLocalization: Optional[AppCustomProductPageLocalization3] = None
    appStoreVersionExperimentTreatmentLocalization: Optional[
        AppStoreVersionExperimentTreatmentLocalization2
    ] = None
    appScreenshots: Optional[AppScreenshots] = None


class AppScreenshotSet(BaseModel):
    type: Literal["appScreenshotSets"]
    id: str
    attributes: Optional[Attributes82] = None
    relationships: Optional[Relationships56] = None
    links: Optional[ResourceLinks] = None


class Attributes83(BaseModel):
    screenshotDisplayType: ScreenshotDisplayType


class Data128(BaseModel):
    type: Literal["appScreenshotSets"]
    attributes: Attributes83
    relationships: Optional[Relationships57] = None


class AppScreenshotSetCreateRequest(BaseModel):
    data: Data128


class AppStoreReviewAttachments(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum29]] = None


class Relationships62(BaseModel):
    appStoreVersion: Optional[AppStoreVersion1] = None
    appStoreReviewAttachments: Optional[AppStoreReviewAttachments] = None


class AppStoreReviewDetailModel(BaseModel):
    type: Literal["appStoreReviewDetails"]
    id: str
    attributes: Optional[Attributes90] = None
    relationships: Optional[Relationships62] = None
    links: Optional[ResourceLinks] = None


class AppScreenshotSets1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum30]] = None


class AppPreviewSets1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum31]] = None


class Relationships64(BaseModel):
    appStoreVersionExperimentTreatment: Optional[AppStoreVersionExperimentTreatment] = (
        None
    )
    appScreenshotSets: Optional[AppScreenshotSets1] = None
    appPreviewSets: Optional[AppPreviewSets1] = None


class AppStoreVersionExperimentTreatmentLocalizationModel(BaseModel):
    type: Literal["appStoreVersionExperimentTreatmentLocalizations"]
    id: str
    attributes: Optional[Attributes93] = None
    relationships: Optional[Relationships64] = None
    links: Optional[ResourceLinks] = None


class Attributes95(BaseModel):
    name: Optional[str] = None
    appIcon: Optional[ImageAsset] = None
    appIconName: Optional[str] = None
    promotedDate: Optional[AwareDatetime] = None


class AppStoreVersionExperimentTreatmentLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum32]] = None


class Relationships66(BaseModel):
    appStoreVersionExperiment: Optional[AppStoreVersionExperiment] = None
    appStoreVersionExperimentV2: Optional[AppStoreVersionExperimentV2] = None
    appStoreVersionExperimentTreatmentLocalizations: Optional[
        AppStoreVersionExperimentTreatmentLocalizations
    ] = None


class AppStoreVersionExperimentTreatmentModel(BaseModel):
    type: Literal["appStoreVersionExperimentTreatments"]
    id: str
    attributes: Optional[Attributes95] = None
    relationships: Optional[Relationships66] = None
    links: Optional[ResourceLinks] = None


class Attributes98(BaseModel):
    name: Optional[str] = None
    platform: Optional[Platform] = None
    trafficProportion: Optional[int] = None
    state: Optional[
        Literal[
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "ACCEPTED",
            "APPROVED",
            "REJECTED",
            "COMPLETED",
            "STOPPED",
        ]
    ] = None
    reviewRequired: Optional[bool] = None
    startDate: Optional[AwareDatetime] = None
    endDate: Optional[AwareDatetime] = None


class ControlVersions(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum33]] = None


class AppStoreVersionExperimentTreatments(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum34]] = None


class Relationships68(BaseModel):
    app: Optional[App14] = None
    latestControlVersion: Optional[LatestControlVersion] = None
    controlVersions: Optional[ControlVersions] = None
    appStoreVersionExperimentTreatments: Optional[
        AppStoreVersionExperimentTreatments
    ] = None


class AppStoreVersionExperimentV2Model(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str
    attributes: Optional[Attributes98] = None
    relationships: Optional[Relationships68] = None
    links: Optional[ResourceLinks] = None


class Attributes99(BaseModel):
    name: str
    platform: Platform
    trafficProportion: int


class Data155(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    attributes: Attributes99
    relationships: Relationships69


class AppStoreVersionExperimentV2CreateRequest(BaseModel):
    data: Data155


class AppStoreVersionExperimentTreatments1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum34]] = None


class Relationships70(BaseModel):
    appStoreVersion: Optional[AppStoreVersion3] = None
    appStoreVersionExperimentTreatments: Optional[
        AppStoreVersionExperimentTreatments1
    ] = None


class AppStoreVersionExperimentModel(BaseModel):
    type: Literal["appStoreVersionExperiments"]
    id: str
    attributes: Optional[Attributes101] = None
    relationships: Optional[Relationships70] = None
    links: Optional[ResourceLinks] = None


class AppScreenshotSets2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum36]] = None


class AppPreviewSets2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum37]] = None


class Relationships72(BaseModel):
    appStoreVersion: Optional[AppStoreVersion5] = None
    appScreenshotSets: Optional[AppScreenshotSets2] = None
    appPreviewSets: Optional[AppPreviewSets2] = None


class AppStoreVersionLocalizationModel(BaseModel):
    type: Literal["appStoreVersionLocalizations"]
    id: str
    attributes: Optional[Attributes104] = None
    relationships: Optional[Relationships72] = None
    links: Optional[ResourceLinks] = None


class Attributes107(BaseModel):
    phasedReleaseState: Optional[PhasedReleaseState] = None
    startDate: Optional[AwareDatetime] = None
    totalPauseDuration: Optional[int] = None
    currentDayNumber: Optional[int] = None


class AppStoreVersionPhasedRelease(BaseModel):
    type: Literal["appStoreVersionPhasedReleases"]
    id: str
    attributes: Optional[Attributes107] = None
    links: Optional[ResourceLinks] = None


class AppStoreVersionPhasedReleaseResponse(BaseModel):
    data: AppStoreVersionPhasedRelease
    links: DocumentLinks


class Attributes108(BaseModel):
    phasedReleaseState: Optional[PhasedReleaseState] = None


class Data166(BaseModel):
    type: Literal["appStoreVersionPhasedReleases"]
    attributes: Optional[Attributes108] = None
    relationships: Relationships74


class AppStoreVersionPhasedReleaseCreateRequest(BaseModel):
    data: Data166


class Data168(BaseModel):
    type: Literal["appStoreVersionPhasedReleases"]
    id: str
    attributes: Optional[Attributes108] = None


class AppStoreVersionPhasedReleaseUpdateRequest(BaseModel):
    data: Data168


class AppStoreVersionPromotion(BaseModel):
    type: Literal["appStoreVersionPromotions"]
    id: str
    links: Optional[ResourceLinks] = None


class AppStoreVersionPromotionResponse(BaseModel):
    data: AppStoreVersionPromotion
    links: DocumentLinks


class AppStoreVersionReleaseRequest(BaseModel):
    type: Literal["appStoreVersionReleaseRequests"]
    id: str
    links: Optional[ResourceLinks] = None


class AppStoreVersionReleaseRequestResponse(BaseModel):
    data: AppStoreVersionReleaseRequest
    links: DocumentLinks


class AppStoreVersionSubmission(BaseModel):
    type: Literal["appStoreVersionSubmissions"]
    id: str
    relationships: Optional[Relationships77] = None
    links: Optional[ResourceLinks] = None


class Attributes110(BaseModel):
    platform: Optional[Platform] = None
    versionString: Optional[str] = None
    appStoreState: Optional[AppStoreVersionState] = None
    appVersionState: Optional[AppVersionState] = None
    copyright: Optional[str] = None
    reviewType: Optional[Literal["APP_STORE", "NOTARIZATION"]] = None
    releaseType: Optional[Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]] = None
    earliestReleaseDate: Optional[AwareDatetime] = None
    usesIdfa: Optional[bool] = None
    downloadable: Optional[bool] = None
    createdDate: Optional[AwareDatetime] = None


class AgeRatingDeclaration2(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data176] = None


class AppStoreVersionLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum38]] = None


class Build1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data177] = None


class AppStoreVersionPhasedRelease1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data178] = None


class GameCenterAppVersion(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data179] = None


class RoutingAppCoverage(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data180] = None


class AppStoreReviewDetail2(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data181] = None


class AppStoreVersionSubmission1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data182] = None


class AppClipDefaultExperience4(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data183] = None


class AppStoreVersionExperiments(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum39]] = None


class AppStoreVersionExperimentsV2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum39]] = None


class CustomerReviews(BaseModel):
    links: Optional[RelationshipLinks] = None


class AlternativeDistributionPackage1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data184] = None


class Relationships78(BaseModel):
    app: Optional[App16] = None
    ageRatingDeclaration: Optional[AgeRatingDeclaration2] = None
    appStoreVersionLocalizations: Optional[AppStoreVersionLocalizations] = None
    build: Optional[Build1] = None
    appStoreVersionPhasedRelease: Optional[AppStoreVersionPhasedRelease1] = None
    gameCenterAppVersion: Optional[GameCenterAppVersion] = None
    routingAppCoverage: Optional[RoutingAppCoverage] = None
    appStoreReviewDetail: Optional[AppStoreReviewDetail2] = None
    appStoreVersionSubmission: Optional[AppStoreVersionSubmission1] = None
    appClipDefaultExperience: Optional[AppClipDefaultExperience4] = None
    appStoreVersionExperiments: Optional[AppStoreVersionExperiments] = None
    appStoreVersionExperimentsV2: Optional[AppStoreVersionExperimentsV2] = None
    customerReviews: Optional[CustomerReviews] = None
    alternativeDistributionPackage: Optional[AlternativeDistributionPackage1] = None


class AppStoreVersionModel(BaseModel):
    type: Literal["appStoreVersions"]
    id: str
    attributes: Optional[Attributes110] = None
    relationships: Optional[Relationships78] = None
    links: Optional[ResourceLinks] = None


class Attributes111(BaseModel):
    platform: Platform
    versionString: str
    copyright: Optional[str] = None
    reviewType: Optional[Literal["APP_STORE", "NOTARIZATION"]] = None
    releaseType: Optional[Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]] = None
    earliestReleaseDate: Optional[AwareDatetime] = None
    usesIdfa: Optional[bool] = None


class Data185(BaseModel):
    type: Literal["appStoreVersions"]
    attributes: Attributes111
    relationships: Relationships79


class AppStoreVersionCreateRequest(BaseModel):
    data: Data185


class Attributes113(BaseModel):
    accessibilityUrl: Optional[AnyUrl] = None
    name: Optional[str] = None
    bundleId: Optional[str] = None
    sku: Optional[str] = None
    primaryLocale: Optional[str] = None
    isOrEverWasMadeForKids: Optional[bool] = None
    subscriptionStatusUrl: Optional[AnyUrl] = None
    subscriptionStatusUrlVersion: Optional[SubscriptionStatusUrlVersion] = None
    subscriptionStatusUrlForSandbox: Optional[AnyUrl] = None
    subscriptionStatusUrlVersionForSandbox: Optional[SubscriptionStatusUrlVersion] = (
        None
    )
    contentRightsDeclaration: Optional[
        Literal["DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT"]
    ] = None
    streamlinedPurchasingEnabled: Optional[bool] = None


class AccessibilityDeclarations(BaseModel):
    links: Optional[RelationshipLinks] = None


class AppEncryptionDeclarations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum42]] = None


class CiProduct(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data191] = None


class BetaTesters(BaseModel):
    links: Optional[RelationshipLinks] = None


class BetaGroups(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum43]] = None


class AppStoreVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum44]] = None


class PreReleaseVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum45]] = None


class BetaAppLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum46]] = None


class Builds1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum47]] = None


class BetaLicenseAgreement(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data192] = None


class BetaAppReviewDetail(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data193] = None


class AppInfos(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum48]] = None


class AppClips(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum49]] = None


class AppPricePoints(BaseModel):
    links: Optional[RelationshipLinks] = None


class EndUserLicenseAgreement(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data194] = None


class AppPriceSchedule1(BaseModel):
    links: Optional[RelationshipLinks] = None


class AppAvailabilityV21(BaseModel):
    links: Optional[RelationshipLinks] = None


class InAppPurchases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum50]] = None


class SubscriptionGroups(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum51]] = None


class GameCenterEnabledVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum52]] = None


class PerfPowerMetrics(BaseModel):
    links: Optional[RelationshipLinks] = None


class AppCustomProductPages(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum53]] = None


class InAppPurchasesV2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum54]] = None


class PromotedPurchases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum55]] = None


class AppEvents(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum56]] = None


class ReviewSubmissions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum57]] = None


class SubscriptionGracePeriod(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data195] = None


class CustomerReviewSummarizations(BaseModel):
    links: Optional[RelationshipLinks] = None


class GameCenterDetail(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data196] = None


class AppStoreVersionExperimentsV21(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum58]] = None


class AlternativeDistributionKey1(BaseModel):
    links: Optional[RelationshipLinks] = None


class AnalyticsReportRequests(BaseModel):
    links: Optional[RelationshipLinks] = None


class MarketplaceSearchDetail(BaseModel):
    links: Optional[RelationshipLinks] = None


class BackgroundAssets(BaseModel):
    links: Optional[RelationshipLinks] = None


class BetaFeedbackScreenshotSubmissions(BaseModel):
    links: Optional[RelationshipLinks] = None


class BetaFeedbackCrashSubmissions(BaseModel):
    links: Optional[RelationshipLinks] = None


class Webhooks(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships81(BaseModel):
    accessibilityDeclarations: Optional[AccessibilityDeclarations] = None
    appEncryptionDeclarations: Optional[AppEncryptionDeclarations] = None
    ciProduct: Optional[CiProduct] = None
    betaTesters: Optional[BetaTesters] = None
    betaGroups: Optional[BetaGroups] = None
    appStoreVersions: Optional[AppStoreVersions] = None
    preReleaseVersions: Optional[PreReleaseVersions] = None
    betaAppLocalizations: Optional[BetaAppLocalizations] = None
    builds: Optional[Builds1] = None
    betaLicenseAgreement: Optional[BetaLicenseAgreement] = None
    betaAppReviewDetail: Optional[BetaAppReviewDetail] = None
    appInfos: Optional[AppInfos] = None
    appClips: Optional[AppClips] = None
    appPricePoints: Optional[AppPricePoints] = None
    endUserLicenseAgreement: Optional[EndUserLicenseAgreement] = None
    appPriceSchedule: Optional[AppPriceSchedule1] = None
    appAvailabilityV2: Optional[AppAvailabilityV21] = None
    inAppPurchases: Optional[InAppPurchases] = None
    subscriptionGroups: Optional[SubscriptionGroups] = None
    gameCenterEnabledVersions: Optional[GameCenterEnabledVersions] = None
    perfPowerMetrics: Optional[PerfPowerMetrics] = None
    appCustomProductPages: Optional[AppCustomProductPages] = None
    inAppPurchasesV2: Optional[InAppPurchasesV2] = None
    promotedPurchases: Optional[PromotedPurchases] = None
    appEvents: Optional[AppEvents] = None
    reviewSubmissions: Optional[ReviewSubmissions] = None
    subscriptionGracePeriod: Optional[SubscriptionGracePeriod] = None
    customerReviews: Optional[CustomerReviews] = None
    customerReviewSummarizations: Optional[CustomerReviewSummarizations] = None
    gameCenterDetail: Optional[GameCenterDetail] = None
    appStoreVersionExperimentsV2: Optional[AppStoreVersionExperimentsV21] = None
    alternativeDistributionKey: Optional[AlternativeDistributionKey1] = None
    analyticsReportRequests: Optional[AnalyticsReportRequests] = None
    marketplaceSearchDetail: Optional[MarketplaceSearchDetail] = None
    backgroundAssets: Optional[BackgroundAssets] = None
    betaFeedbackScreenshotSubmissions: Optional[BetaFeedbackScreenshotSubmissions] = (
        None
    )
    betaFeedbackCrashSubmissions: Optional[BetaFeedbackCrashSubmissions] = None
    webhooks: Optional[Webhooks] = None


class AppModel(BaseModel):
    type: Literal["apps"]
    id: str
    attributes: Optional[Attributes113] = None
    relationships: Optional[Relationships81] = None
    links: Optional[ResourceLinks] = None


class Attributes114(BaseModel):
    accessibilityUrl: Optional[AnyUrl] = None
    bundleId: Optional[str] = None
    primaryLocale: Optional[str] = None
    subscriptionStatusUrl: Optional[AnyUrl] = None
    subscriptionStatusUrlVersion: Optional[SubscriptionStatusUrlVersion] = None
    subscriptionStatusUrlForSandbox: Optional[AnyUrl] = None
    subscriptionStatusUrlVersionForSandbox: Optional[SubscriptionStatusUrlVersion] = (
        None
    )
    contentRightsDeclaration: Optional[
        Literal["DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT"]
    ] = None
    streamlinedPurchasingEnabled: Optional[bool] = None


class Data197(BaseModel):
    type: Literal["apps"]
    id: str
    attributes: Optional[Attributes114] = None


class AppUpdateRequest(BaseModel):
    data: Data197


class BackgroundAssetVersionInternalBetaRelease(BaseModel):
    type: Literal["backgroundAssetVersionInternalBetaReleases"]
    id: str
    attributes: Optional[Attributes118] = None
    relationships: Optional[Relationships83] = None
    links: Optional[ResourceLinks] = None


class Attributes119(BaseModel):
    createdDate: Optional[AwareDatetime] = None
    platforms: Optional[List[Platform]] = None
    state: Optional[BackgroundAssetVersionState] = None
    version: Optional[str] = None


class BackgroundAssetUploadFiles(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships84(BaseModel):
    internalBetaRelease: Optional[InternalBetaRelease] = None
    assetFile: Optional[AssetFile] = None
    manifestFile: Optional[ManifestFile] = None
    backgroundAssetUploadFiles: Optional[BackgroundAssetUploadFiles] = None


class BackgroundAssetVersionModel(BaseModel):
    type: Literal["backgroundAssetVersions"]
    id: str
    attributes: Optional[Attributes119] = None
    relationships: Optional[Relationships84] = None
    links: Optional[ResourceLinks] = None


class Versions1(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships86(BaseModel):
    versions: Optional[Versions1] = None
    internalBetaVersion: Optional[InternalBetaVersion] = None


class BackgroundAsset1(BaseModel):
    type: Literal["backgroundAssets"]
    id: str
    attributes: Optional[Attributes120] = None
    relationships: Optional[Relationships86] = None
    links: Optional[ResourceLinks] = None


class BackgroundAssetsResponse(BaseModel):
    data: List[BackgroundAsset1]
    included: Optional[List[BackgroundAssetVersionModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BackgroundAssetResponse(BaseModel):
    data: BackgroundAsset1
    included: Optional[List[BackgroundAssetVersionModel]] = None
    links: DocumentLinks


class BetaAppClipInvocationLocalization(BaseModel):
    type: Literal["betaAppClipInvocationLocalizations"]
    id: str
    attributes: Optional[Attributes122] = None
    links: Optional[ResourceLinks] = None


class BetaAppClipInvocationLocalizationResponse(BaseModel):
    data: BetaAppClipInvocationLocalization
    links: DocumentLinks


class BetaAppClipInvocationLocalizations(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum59]] = None


class Relationships90(BaseModel):
    betaAppClipInvocationLocalizations: Optional[BetaAppClipInvocationLocalizations] = (
        None
    )


class BetaAppClipInvocation2(BaseModel):
    type: Literal["betaAppClipInvocations"]
    id: str
    attributes: Optional[Attributes126] = None
    relationships: Optional[Relationships90] = None
    links: Optional[ResourceLinks] = None


class BetaAppClipInvocationsResponse(BaseModel):
    data: List[BetaAppClipInvocation2]
    included: Optional[List[BetaAppClipInvocationLocalization]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppClipInvocationResponse(BaseModel):
    data: BetaAppClipInvocation2
    included: Optional[List[BetaAppClipInvocationLocalization]] = None
    links: DocumentLinks


class App19(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data217] = None


class Relationships92(BaseModel):
    app: Optional[App19] = None


class BetaAppLocalization(BaseModel):
    type: Literal["betaAppLocalizations"]
    id: str
    attributes: Optional[Attributes129] = None
    relationships: Optional[Relationships92] = None
    links: Optional[ResourceLinks] = None


class BetaAppLocalizationsResponse(BaseModel):
    data: List[BetaAppLocalization]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppLocalizationResponse(BaseModel):
    data: BetaAppLocalization
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class App21(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data221] = None


class Relationships94(BaseModel):
    app: Optional[App21] = None


class BetaAppReviewDetailModel(BaseModel):
    type: Literal["betaAppReviewDetails"]
    id: str
    attributes: Optional[Attributes132] = None
    relationships: Optional[Relationships94] = None
    links: Optional[ResourceLinks] = None


class BetaAppReviewDetailsResponse(BaseModel):
    data: List[BetaAppReviewDetailModel]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppReviewDetailResponse(BaseModel):
    data: BetaAppReviewDetailModel
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class Attributes134(BaseModel):
    betaReviewState: Optional[BetaReviewState] = None
    submittedDate: Optional[AwareDatetime] = None


class Build4(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data223] = None


class Relationships95(BaseModel):
    build: Optional[Build4] = None


class BetaAppReviewSubmission(BaseModel):
    type: Literal["betaAppReviewSubmissions"]
    id: str
    attributes: Optional[Attributes134] = None
    relationships: Optional[Relationships95] = None
    links: Optional[ResourceLinks] = None


class Build6(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data226] = None


class Relationships97(BaseModel):
    build: Optional[Build6] = None


class BetaBuildLocalization(BaseModel):
    type: Literal["betaBuildLocalizations"]
    id: str
    attributes: Optional[Attributes135] = None
    relationships: Optional[Relationships97] = None
    links: Optional[ResourceLinks] = None


class BetaCrashLog(BaseModel):
    type: Literal["betaCrashLogs"]
    id: str
    attributes: Optional[Attributes138] = None
    links: Optional[ResourceLinks] = None


class BetaCrashLogResponse(BaseModel):
    data: BetaCrashLog
    links: DocumentLinks


class Attributes139(BaseModel):
    createdDate: Optional[AwareDatetime] = None
    comment: Optional[str] = None
    email: Optional[str] = None
    deviceModel: Optional[str] = None
    osVersion: Optional[str] = None
    locale: Optional[str] = None
    timeZone: Optional[str] = None
    architecture: Optional[str] = None
    connectionType: Optional[DeviceConnectionType] = None
    pairedAppleWatch: Optional[str] = None
    appUptimeInMilliseconds: Optional[conint(ge=0, le=9007199254740991)] = None
    diskBytesAvailable: Optional[conint(ge=0, le=9007199254740991)] = None
    diskBytesTotal: Optional[conint(ge=0, le=9007199254740991)] = None
    batteryPercentage: Optional[int] = None
    screenWidthInPoints: Optional[int] = None
    screenHeightInPoints: Optional[int] = None
    appPlatform: Optional[Platform] = None
    devicePlatform: Optional[Platform] = None
    deviceFamily: Optional[DeviceFamily] = None
    buildBundleId: Optional[str] = None


class CrashLog(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships99(BaseModel):
    crashLog: Optional[CrashLog] = None
    build: Optional[Build8] = None
    tester: Optional[Tester] = None


class BetaFeedbackCrashSubmission(BaseModel):
    type: Literal["betaFeedbackCrashSubmissions"]
    id: str
    attributes: Optional[Attributes139] = None
    relationships: Optional[Relationships99] = None
    links: Optional[ResourceLinks] = None


class Attributes140(BaseModel):
    createdDate: Optional[AwareDatetime] = None
    comment: Optional[str] = None
    email: Optional[str] = None
    deviceModel: Optional[str] = None
    osVersion: Optional[str] = None
    locale: Optional[str] = None
    timeZone: Optional[str] = None
    architecture: Optional[str] = None
    connectionType: Optional[DeviceConnectionType] = None
    pairedAppleWatch: Optional[str] = None
    appUptimeInMilliseconds: Optional[conint(ge=0, le=9007199254740991)] = None
    diskBytesAvailable: Optional[conint(ge=0, le=9007199254740991)] = None
    diskBytesTotal: Optional[conint(ge=0, le=9007199254740991)] = None
    batteryPercentage: Optional[int] = None
    screenWidthInPoints: Optional[int] = None
    screenHeightInPoints: Optional[int] = None
    appPlatform: Optional[Platform] = None
    devicePlatform: Optional[Platform] = None
    deviceFamily: Optional[DeviceFamily] = None
    buildBundleId: Optional[str] = None
    screenshots: Optional[List[BetaFeedbackScreenshotImage]] = None


class BetaFeedbackScreenshotSubmission(BaseModel):
    type: Literal["betaFeedbackScreenshotSubmissions"]
    id: str
    attributes: Optional[Attributes140] = None
    relationships: Optional[Relationships100] = None
    links: Optional[ResourceLinks] = None


class App22(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data234] = None


class Builds2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum61]] = None


class BetaTesters1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum62]] = None


class BetaRecruitmentCriteria(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data235] = None


class BetaRecruitmentCriterionCompatibleBuildCheck(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships101(BaseModel):
    app: Optional[App22] = None
    builds: Optional[Builds2] = None
    betaTesters: Optional[BetaTesters1] = None
    betaRecruitmentCriteria: Optional[BetaRecruitmentCriteria] = None
    betaRecruitmentCriterionCompatibleBuildCheck: Optional[
        BetaRecruitmentCriterionCompatibleBuildCheck
    ] = None


class BetaGroup(BaseModel):
    type: Literal["betaGroups"]
    id: str
    attributes: Optional[Attributes141] = None
    relationships: Optional[Relationships101] = None
    links: Optional[ResourceLinks] = None


class App24(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data239] = None


class Relationships103(BaseModel):
    app: Optional[App24] = None


class BetaLicenseAgreementModel(BaseModel):
    type: Literal["betaLicenseAgreements"]
    id: str
    attributes: Optional[Attributes144] = None
    relationships: Optional[Relationships103] = None
    links: Optional[ResourceLinks] = None


class BetaLicenseAgreementsResponse(BaseModel):
    data: List[BetaLicenseAgreementModel]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaLicenseAgreementResponse(BaseModel):
    data: BetaLicenseAgreementModel
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class Attributes146(BaseModel):
    lastModifiedDate: Optional[AwareDatetime] = None
    deviceFamilyOsVersionFilters: Optional[List[DeviceFamilyOsVersionFilter]] = None


class BetaRecruitmentCriterion(BaseModel):
    type: Literal["betaRecruitmentCriteria"]
    id: str
    attributes: Optional[Attributes146] = None
    links: Optional[ResourceLinks] = None


class BetaRecruitmentCriterionResponse(BaseModel):
    data: BetaRecruitmentCriterion
    links: DocumentLinks


class Attributes147(BaseModel):
    deviceFamilyOsVersionFilters: List[DeviceFamilyOsVersionFilter]


class Data241(BaseModel):
    type: Literal["betaRecruitmentCriteria"]
    attributes: Attributes147
    relationships: Relationships104


class BetaRecruitmentCriterionCreateRequest(BaseModel):
    data: Data241


class Attributes148(BaseModel):
    deviceFamilyOsVersionFilters: Optional[List[DeviceFamilyOsVersionFilter]] = None


class Data243(BaseModel):
    type: Literal["betaRecruitmentCriteria"]
    id: str
    attributes: Optional[Attributes148] = None


class BetaRecruitmentCriterionUpdateRequest(BaseModel):
    data: Data243


class BetaRecruitmentCriterionCompatibleBuildCheck1(BaseModel):
    type: Literal["betaRecruitmentCriterionCompatibleBuildChecks"]
    id: str
    attributes: Optional[Attributes149] = None
    links: Optional[ResourceLinks] = None


class BetaRecruitmentCriterionCompatibleBuildCheckResponse(BaseModel):
    data: BetaRecruitmentCriterionCompatibleBuildCheck1
    links: DocumentLinks


class DeviceFamilyOsVersion(BaseModel):
    deviceFamily: Optional[DeviceFamily] = None
    osVersions: Optional[List[str]] = None


class Attributes150(BaseModel):
    deviceFamilyOsVersions: Optional[List[DeviceFamilyOsVersion]] = None


class BetaRecruitmentCriterionOption(BaseModel):
    type: Literal["betaRecruitmentCriterionOptions"]
    id: str
    attributes: Optional[Attributes150] = None
    links: Optional[ResourceLinks] = None


class BetaRecruitmentCriterionOptionsResponse(BaseModel):
    data: List[BetaRecruitmentCriterionOption]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaTesterInvitation(BaseModel):
    type: Literal["betaTesterInvitations"]
    id: str
    links: Optional[ResourceLinks] = None


class BetaTesterInvitationResponse(BaseModel):
    data: BetaTesterInvitation
    links: DocumentLinks


class Attributes151(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[EmailStr] = None
    inviteType: Optional[BetaInviteType] = None
    state: Optional[BetaTesterState] = None


class Apps(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum65]] = None


class BetaGroups1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum66]] = None


class Builds4(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum67]] = None


class Relationships106(BaseModel):
    apps: Optional[Apps] = None
    betaGroups: Optional[BetaGroups1] = None
    builds: Optional[Builds4] = None


class BetaTester(BaseModel):
    type: Literal["betaTesters"]
    id: str
    attributes: Optional[Attributes151] = None
    relationships: Optional[Relationships106] = None
    links: Optional[ResourceLinks] = None


class Attributes153(BaseModel):
    autoNotifyEnabled: Optional[bool] = None
    internalBuildState: Optional[InternalBetaState] = None
    externalBuildState: Optional[ExternalBetaState] = None


class Build10(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data248] = None


class Relationships108(BaseModel):
    build: Optional[Build10] = None


class BuildBetaDetail(BaseModel):
    type: Literal["buildBetaDetails"]
    id: str
    attributes: Optional[Attributes153] = None
    relationships: Optional[Relationships108] = None
    links: Optional[ResourceLinks] = None


class BuildBetaNotification(BaseModel):
    type: Literal["buildBetaNotifications"]
    id: str
    links: Optional[ResourceLinks] = None


class BuildBetaNotificationResponse(BaseModel):
    data: BuildBetaNotification
    links: DocumentLinks


class BuildBundleFileSize(BaseModel):
    type: Literal["buildBundleFileSizes"]
    id: str
    attributes: Optional[Attributes155] = None
    links: Optional[ResourceLinks] = None


class BuildBundleFileSizesResponse(BaseModel):
    data: List[BuildBundleFileSize]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class Attributes156(BaseModel):
    bundleId: Optional[str] = None
    bundleType: Optional[BuildBundleType] = None
    sdkBuild: Optional[str] = None
    platformBuild: Optional[str] = None
    fileName: Optional[str] = None
    hasSirikit: Optional[bool] = None
    hasOnDemandResources: Optional[bool] = None
    hasPrerenderedIcon: Optional[bool] = None
    usesLocationServices: Optional[bool] = None
    isIosBuildMacAppStoreCompatible: Optional[bool] = None
    includesSymbols: Optional[bool] = None
    dSYMUrl: Optional[AnyUrl] = None
    supportedArchitectures: Optional[List[str]] = None
    requiredCapabilities: Optional[List[str]] = None
    deviceProtocols: Optional[List[str]] = None
    locales: Optional[List[str]] = None
    entitlements: Optional[Dict[str, Dict[str, str]]] = None
    baDownloadAllowance: Optional[int] = None
    baMaxInstallSize: Optional[int] = None


class AppClipDomainCacheStatus(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data252] = None


class AppClipDomainDebugStatus(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data252] = None


class BetaAppClipInvocations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum70]] = None


class BuildBundleFileSizes(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum71]] = None


class Relationships110(BaseModel):
    appClipDomainCacheStatus: Optional[AppClipDomainCacheStatus] = None
    appClipDomainDebugStatus: Optional[AppClipDomainDebugStatus] = None
    betaAppClipInvocations: Optional[BetaAppClipInvocations] = None
    buildBundleFileSizes: Optional[BuildBundleFileSizes] = None


class BuildBundle1(BaseModel):
    type: Literal["buildBundles"]
    id: str
    attributes: Optional[Attributes156] = None
    relationships: Optional[Relationships110] = None
    links: Optional[ResourceLinks] = None


class Attributes157(BaseModel):
    iconAsset: Optional[ImageAsset] = None
    iconType: Optional[IconAssetType] = None
    name: Optional[str] = None


class BuildIcon(BaseModel):
    type: Literal["buildIcons"]
    id: str
    attributes: Optional[Attributes157] = None
    links: Optional[ResourceLinks] = None


class BuildIconsResponse(BaseModel):
    data: List[BuildIcon]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class Attributes158(BaseModel):
    version: Optional[str] = None
    uploadedDate: Optional[AwareDatetime] = None
    expirationDate: Optional[AwareDatetime] = None
    expired: Optional[bool] = None
    minOsVersion: Optional[str] = None
    lsMinimumSystemVersion: Optional[str] = None
    computedMinMacOsVersion: Optional[str] = None
    computedMinVisionOsVersion: Optional[str] = None
    iconAssetToken: Optional[ImageAsset] = None
    processingState: Optional[Literal["PROCESSING", "FAILED", "INVALID", "VALID"]] = (
        None
    )
    buildAudienceType: Optional[BuildAudienceType] = None
    usesNonExemptEncryption: Optional[bool] = None


class PreReleaseVersion(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data254] = None


class IndividualTesters(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum72]] = None


class BetaGroups3(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum73]] = None


class BetaBuildLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum74]] = None


class AppEncryptionDeclaration2(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data255] = None


class BetaAppReviewSubmission1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data256] = None


class App26(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data257] = None


class BuildBetaDetail1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data258] = None


class AppStoreVersion11(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data259] = None


class Icons(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum75]] = None


class BuildBundles(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum76]] = None


class DiagnosticSignatures(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships111(BaseModel):
    preReleaseVersion: Optional[PreReleaseVersion] = None
    individualTesters: Optional[IndividualTesters] = None
    betaGroups: Optional[BetaGroups3] = None
    betaBuildLocalizations: Optional[BetaBuildLocalizations] = None
    appEncryptionDeclaration: Optional[AppEncryptionDeclaration2] = None
    betaAppReviewSubmission: Optional[BetaAppReviewSubmission1] = None
    app: Optional[App26] = None
    buildBetaDetail: Optional[BuildBetaDetail1] = None
    appStoreVersion: Optional[AppStoreVersion11] = None
    icons: Optional[Icons] = None
    buildBundles: Optional[BuildBundles] = None
    perfPowerMetrics: Optional[PerfPowerMetrics] = None
    diagnosticSignatures: Optional[DiagnosticSignatures] = None


class Build(BaseModel):
    type: Literal["builds"]
    id: str
    attributes: Optional[Attributes158] = None
    relationships: Optional[Relationships111] = None
    links: Optional[ResourceLinks] = None


class Attributes160(BaseModel):
    capabilityType: Optional[CapabilityType] = None
    settings: Optional[List[CapabilitySetting]] = None


class BundleIdCapability(BaseModel):
    type: Literal["bundleIdCapabilities"]
    id: str
    attributes: Optional[Attributes160] = None
    links: Optional[ResourceLinks] = None


class BundleIdCapabilitiesResponse(BaseModel):
    data: List[BundleIdCapability]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BundleIdCapabilityResponse(BaseModel):
    data: BundleIdCapability
    links: DocumentLinks


class Attributes161(BaseModel):
    capabilityType: CapabilityType
    settings: Optional[List[CapabilitySetting]] = None


class Data262(BaseModel):
    type: Literal["bundleIdCapabilities"]
    attributes: Attributes161
    relationships: Relationships113


class BundleIdCapabilityCreateRequest(BaseModel):
    data: Data262


class Attributes162(BaseModel):
    capabilityType: Optional[CapabilityType] = None
    settings: Optional[List[CapabilitySetting]] = None


class Data264(BaseModel):
    type: Literal["bundleIdCapabilities"]
    id: str
    attributes: Optional[Attributes162] = None


class BundleIdCapabilityUpdateRequest(BaseModel):
    data: Data264


class Attributes163(BaseModel):
    name: Optional[str] = None
    platform: Optional[BundleIdPlatform] = None
    identifier: Optional[str] = None
    seedId: Optional[str] = None


class Profiles(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum77]] = None


class BundleIdCapabilities(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum78]] = None


class App27(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data265] = None


class Relationships114(BaseModel):
    profiles: Optional[Profiles] = None
    bundleIdCapabilities: Optional[BundleIdCapabilities] = None
    app: Optional[App27] = None


class BundleId1(BaseModel):
    type: Literal["bundleIds"]
    id: str
    attributes: Optional[Attributes163] = None
    relationships: Optional[Relationships114] = None
    links: Optional[ResourceLinks] = None


class Attributes164(BaseModel):
    name: str
    platform: BundleIdPlatform
    identifier: str
    seedId: Optional[str] = None


class Data266(BaseModel):
    type: Literal["bundleIds"]
    attributes: Attributes164


class BundleIdCreateRequest(BaseModel):
    data: Data266


class Attributes166(BaseModel):
    name: Optional[str] = None
    certificateType: Optional[CertificateType] = None
    displayName: Optional[str] = None
    serialNumber: Optional[str] = None
    platform: Optional[BundleIdPlatform] = None
    expirationDate: Optional[AwareDatetime] = None
    certificateContent: Optional[str] = None
    activated: Optional[bool] = None


class PassTypeId(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data268] = None


class Relationships115(BaseModel):
    passTypeId: Optional[PassTypeId] = None


class Certificate(BaseModel):
    type: Literal["certificates"]
    id: str
    attributes: Optional[Attributes166] = None
    relationships: Optional[Relationships115] = None
    links: Optional[ResourceLinks] = None


class Attributes167(BaseModel):
    csrContent: str
    certificateType: CertificateType


class Data269(BaseModel):
    type: Literal["certificates"]
    attributes: Attributes167
    relationships: Optional[Relationships116] = None


class CertificateCreateRequest(BaseModel):
    data: Data269


class CiArtifact(BaseModel):
    type: Literal["ciArtifacts"]
    id: str
    attributes: Optional[Attributes169] = None
    links: Optional[ResourceLinks] = None


class CiArtifactsResponse(BaseModel):
    data: List[CiArtifact]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiArtifactResponse(BaseModel):
    data: CiArtifact
    links: DocumentLinks


class Attributes170(BaseModel):
    name: Optional[str] = None
    actionType: Optional[CiActionType] = None
    startedDate: Optional[AwareDatetime] = None
    finishedDate: Optional[AwareDatetime] = None
    issueCounts: Optional[CiIssueCounts] = None
    executionProgress: Optional[CiExecutionProgress] = None
    completionStatus: Optional[CiCompletionStatus] = None
    isRequiredToPass: Optional[bool] = None


class BuildRun(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data273] = None


class Artifacts(BaseModel):
    links: Optional[RelationshipLinks] = None


class Issues(BaseModel):
    links: Optional[RelationshipLinks] = None


class TestResults(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships117(BaseModel):
    buildRun: Optional[BuildRun] = None
    artifacts: Optional[Artifacts] = None
    issues: Optional[Issues] = None
    testResults: Optional[TestResults] = None


class CiBuildAction(BaseModel):
    type: Literal["ciBuildActions"]
    id: str
    attributes: Optional[Attributes170] = None
    relationships: Optional[Relationships117] = None
    links: Optional[ResourceLinks] = None


class SourceCommit(BaseModel):
    commitSha: Optional[str] = None
    message: Optional[str] = None
    author: Optional[CiGitUser] = None
    committer: Optional[CiGitUser] = None
    webUrl: Optional[AnyUrl] = None


class DestinationCommit(BaseModel):
    commitSha: Optional[str] = None
    message: Optional[str] = None
    author: Optional[CiGitUser] = None
    committer: Optional[CiGitUser] = None
    webUrl: Optional[AnyUrl] = None


class Attributes171(BaseModel):
    number: Optional[int] = None
    createdDate: Optional[AwareDatetime] = None
    startedDate: Optional[AwareDatetime] = None
    finishedDate: Optional[AwareDatetime] = None
    sourceCommit: Optional[SourceCommit] = None
    destinationCommit: Optional[DestinationCommit] = None
    isPullRequestBuild: Optional[bool] = None
    issueCounts: Optional[CiIssueCounts] = None
    executionProgress: Optional[CiExecutionProgress] = None
    completionStatus: Optional[CiCompletionStatus] = None
    startReason: Optional[
        Literal[
            "GIT_REF_CHANGE",
            "MANUAL",
            "MANUAL_REBUILD",
            "PULL_REQUEST_OPEN",
            "PULL_REQUEST_UPDATE",
            "SCHEDULE",
        ]
    ] = None
    cancelReason: Optional[
        Literal["AUTOMATICALLY_BY_NEWER_BUILD", "MANUALLY_BY_USER"]
    ] = None


class Builds6(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum79]] = None


class Actions(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships118(BaseModel):
    builds: Optional[Builds6] = None
    workflow: Optional[Workflow] = None
    product: Optional[Product] = None
    sourceBranchOrTag: Optional[SourceBranchOrTag] = None
    destinationBranch: Optional[DestinationBranch] = None
    actions: Optional[Actions] = None
    pullRequest: Optional[PullRequest] = None


class CiBuildRun(BaseModel):
    type: Literal["ciBuildRuns"]
    id: str
    attributes: Optional[Attributes171] = None
    relationships: Optional[Relationships118] = None
    links: Optional[ResourceLinks] = None


class Attributes173(BaseModel):
    issueType: Optional[
        Literal["ANALYZER_WARNING", "ERROR", "TEST_FAILURE", "WARNING"]
    ] = None
    message: Optional[str] = None
    fileSource: Optional[FileLocation] = None
    category: Optional[str] = None


class CiIssue(BaseModel):
    type: Literal["ciIssues"]
    id: str
    attributes: Optional[Attributes173] = None
    links: Optional[ResourceLinks] = None


class CiIssuesResponse(BaseModel):
    data: List[CiIssue]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiIssueResponse(BaseModel):
    data: CiIssue
    links: DocumentLinks


class XcodeVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum80]] = None


class Relationships120(BaseModel):
    xcodeVersions: Optional[XcodeVersions] = None


class CiMacOsVersion(BaseModel):
    type: Literal["ciMacOsVersions"]
    id: str
    attributes: Optional[Attributes174] = None
    relationships: Optional[Relationships120] = None
    links: Optional[ResourceLinks] = None


class App28(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data284] = None


class Workflows(BaseModel):
    links: Optional[RelationshipLinks] = None


class PrimaryRepositories(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum81]] = None


class AdditionalRepositories(BaseModel):
    links: Optional[RelationshipLinks] = None


class BuildRuns(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships121(BaseModel):
    app: Optional[App28] = None
    bundleId: Optional[BundleId2] = None
    workflows: Optional[Workflows] = None
    primaryRepositories: Optional[PrimaryRepositories] = None
    additionalRepositories: Optional[AdditionalRepositories] = None
    buildRuns: Optional[BuildRuns] = None


class CiProductModel(BaseModel):
    type: Literal["ciProducts"]
    id: str
    attributes: Optional[Attributes175] = None
    relationships: Optional[Relationships121] = None
    links: Optional[ResourceLinks] = None


class DestinationTestResult(BaseModel):
    uuid: Optional[str] = None
    deviceName: Optional[str] = None
    osVersion: Optional[str] = None
    status: Optional[CiTestStatus] = None
    duration: Optional[float] = None


class Attributes176(BaseModel):
    className: Optional[str] = None
    name: Optional[str] = None
    status: Optional[CiTestStatus] = None
    fileSource: Optional[FileLocation] = None
    message: Optional[str] = None
    destinationTestResults: Optional[List[DestinationTestResult]] = None


class CiTestResult(BaseModel):
    type: Literal["ciTestResults"]
    id: str
    attributes: Optional[Attributes176] = None
    links: Optional[ResourceLinks] = None


class CiTestResultsResponse(BaseModel):
    data: List[CiTestResult]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiTestResultResponse(BaseModel):
    data: CiTestResult
    links: DocumentLinks


class Repository(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data287] = None


class Relationships122(BaseModel):
    product: Optional[Product1] = None
    repository: Optional[Repository] = None
    xcodeVersion: Optional[XcodeVersion] = None
    macOsVersion: Optional[MacOsVersion] = None
    buildRuns: Optional[BuildRuns] = None


class TestDestination(BaseModel):
    deviceTypeName: Optional[str] = None
    deviceTypeIdentifier: Optional[str] = None
    availableRuntimes: Optional[List[AvailableRuntime]] = None
    kind: Optional[CiTestDestinationKind] = None


class Attributes180(BaseModel):
    version: Optional[str] = None
    name: Optional[str] = None
    testDestinations: Optional[List[TestDestination]] = None


class MacOsVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum82]] = None


class Relationships125(BaseModel):
    macOsVersions: Optional[MacOsVersions] = None


class CiXcodeVersion(BaseModel):
    type: Literal["ciXcodeVersions"]
    id: str
    attributes: Optional[Attributes180] = None
    relationships: Optional[Relationships125] = None
    links: Optional[ResourceLinks] = None


class CiXcodeVersionsResponse(BaseModel):
    data: List[CiXcodeVersion]
    included: Optional[List[CiMacOsVersion]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiXcodeVersionResponse(BaseModel):
    data: CiXcodeVersion
    included: Optional[List[CiMacOsVersion]] = None
    links: DocumentLinks


class CustomerReviewResponseV1(BaseModel):
    type: Literal["customerReviewResponses"]
    id: str
    attributes: Optional[Attributes181] = None
    relationships: Optional[Relationships126] = None
    links: Optional[ResourceLinks] = None


class Attributes183(BaseModel):
    createdDate: Optional[AwareDatetime] = None
    locale: Optional[str] = None
    platform: Optional[Platform] = None
    text: Optional[str] = None


class CustomerReviewSummarization(BaseModel):
    type: Literal["customerReviewSummarizations"]
    id: str
    attributes: Optional[Attributes183] = None
    relationships: Optional[Relationships128] = None
    links: Optional[ResourceLinks] = None


class Attributes184(BaseModel):
    rating: Optional[conint(ge=1, le=5)] = None
    title: Optional[str] = None
    body: Optional[str] = None
    reviewerNickname: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None
    territory: Optional[TerritoryCode] = None


class Response(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data302] = None


class Relationships129(BaseModel):
    response: Optional[Response] = None


class CustomerReview(BaseModel):
    type: Literal["customerReviews"]
    id: str
    attributes: Optional[Attributes184] = None
    relationships: Optional[Relationships129] = None
    links: Optional[ResourceLinks] = None


class CustomerReviewsResponse(BaseModel):
    data: List[CustomerReview]
    included: Optional[List[CustomerReviewResponseV1]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CustomerReviewResponse(BaseModel):
    data: CustomerReview
    included: Optional[List[CustomerReviewResponseV1]] = None
    links: DocumentLinks


class Attributes185(BaseModel):
    name: Optional[str] = None
    platform: Optional[BundleIdPlatform] = None
    udid: Optional[str] = None
    deviceClass: Optional[
        Literal[
            "APPLE_VISION_PRO",
            "APPLE_WATCH",
            "IPAD",
            "IPHONE",
            "IPOD",
            "APPLE_TV",
            "MAC",
        ]
    ] = None
    status: Optional[Literal["ENABLED", "DISABLED"]] = None
    model: Optional[str] = None
    addedDate: Optional[AwareDatetime] = None


class Device(BaseModel):
    type: Literal["devices"]
    id: str
    attributes: Optional[Attributes185] = None
    links: Optional[ResourceLinks] = None


class DevicesResponse(BaseModel):
    data: List[Device]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class DeviceResponse(BaseModel):
    data: Device
    links: DocumentLinks


class Attributes186(BaseModel):
    name: str
    platform: BundleIdPlatform
    udid: str


class Data303(BaseModel):
    type: Literal["devices"]
    attributes: Attributes186


class DeviceCreateRequest(BaseModel):
    data: Data303


class DiagnosticLog(BaseModel):
    type: Literal["diagnosticLogs"]
    id: str
    links: Optional[ResourceLinks] = None


class Logs(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships130(BaseModel):
    logs: Optional[Logs] = None


class EndAppAvailabilityPreOrder(BaseModel):
    type: Literal["endAppAvailabilityPreOrders"]
    id: str
    links: Optional[ResourceLinks] = None


class EndAppAvailabilityPreOrderResponse(BaseModel):
    data: EndAppAvailabilityPreOrder
    links: DocumentLinks


class Territories(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum84]] = None


class Relationships132(BaseModel):
    app: Optional[App29] = None
    territories: Optional[Territories] = None


class EndUserLicenseAgreementModel(BaseModel):
    type: Literal["endUserLicenseAgreements"]
    id: str
    attributes: Optional[Attributes189] = None
    relationships: Optional[Relationships132] = None
    links: Optional[ResourceLinks] = None


class GameCenterAchievement(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data314] = None


class GameCenterAchievementImage1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data315] = None


class Relationships137(BaseModel):
    gameCenterAchievement: Optional[GameCenterAchievement] = None
    gameCenterAchievementImage: Optional[GameCenterAchievementImage1] = None


class GameCenterAchievementLocalizationModel(BaseModel):
    type: Literal["gameCenterAchievementLocalizations"]
    id: str
    attributes: Optional[Attributes195] = None
    relationships: Optional[Relationships137] = None
    links: Optional[ResourceLinks] = None


class GameCenterAchievementRelease(BaseModel):
    type: Literal["gameCenterAchievementReleases"]
    id: str
    attributes: Optional[Attributes198] = None
    relationships: Optional[Relationships139] = None
    links: Optional[ResourceLinks] = None


class Attributes199(BaseModel):
    referenceName: Optional[str] = None
    vendorIdentifier: Optional[str] = None
    points: Optional[int] = None
    showBeforeEarned: Optional[bool] = None
    repeatable: Optional[bool] = None
    archived: Optional[bool] = None
    activityProperties: Optional[StringToStringMap] = None


class GroupAchievement(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data326] = None


class Localizations4(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum87]] = None


class Releases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum88]] = None


class Activity(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data327] = None


class Relationships141(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail3] = None
    gameCenterGroup: Optional[GameCenterGroup] = None
    groupAchievement: Optional[GroupAchievement] = None
    localizations: Optional[Localizations4] = None
    releases: Optional[Releases] = None
    activity: Optional[Activity] = None


class GameCenterAchievementModel(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str
    attributes: Optional[Attributes199] = None
    relationships: Optional[Relationships141] = None
    links: Optional[ResourceLinks] = None


class Attributes200(BaseModel):
    referenceName: str
    vendorIdentifier: str
    points: int
    showBeforeEarned: bool
    repeatable: bool
    activityProperties: Optional[StringToStringMap] = None


class Data328(BaseModel):
    type: Literal["gameCenterAchievements"]
    attributes: Attributes200
    relationships: Optional[Relationships142] = None


class GameCenterAchievementCreateRequest(BaseModel):
    data: Data328


class Attributes201(BaseModel):
    referenceName: Optional[str] = None
    points: Optional[int] = None
    showBeforeEarned: Optional[bool] = None
    repeatable: Optional[bool] = None
    archived: Optional[bool] = None
    activityProperties: Optional[StringToStringMap] = None


class Data331(BaseModel):
    type: Literal["gameCenterAchievements"]
    id: str
    attributes: Optional[Attributes201] = None


class GameCenterAchievementUpdateRequest(BaseModel):
    data: Data331


class Attributes202(BaseModel):
    referenceName: Optional[str] = None
    vendorIdentifier: Optional[str] = None
    playStyle: Optional[Literal["ASYNCHRONOUS", "SYNCHRONOUS"]] = None
    minimumPlayersCount: Optional[int] = None
    maximumPlayersCount: Optional[int] = None
    supportsPartyCode: Optional[bool] = None
    archived: Optional[bool] = None
    properties: Optional[StringToStringMap] = None


class Achievements(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum89]] = None


class Leaderboards(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum90]] = None


class Versions2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum91]] = None


class Relationships143(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail5] = None
    gameCenterGroup: Optional[GameCenterGroup2] = None
    achievements: Optional[Achievements] = None
    leaderboards: Optional[Leaderboards] = None
    versions: Optional[Versions2] = None


class GameCenterActivity(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str
    attributes: Optional[Attributes202] = None
    relationships: Optional[Relationships143] = None
    links: Optional[ResourceLinks] = None


class Attributes203(BaseModel):
    referenceName: str
    vendorIdentifier: str
    playStyle: Optional[Literal["ASYNCHRONOUS", "SYNCHRONOUS"]] = None
    minimumPlayersCount: Optional[int] = None
    maximumPlayersCount: Optional[int] = None
    supportsPartyCode: Optional[bool] = None
    properties: Optional[StringToStringMap] = None


class Data334(BaseModel):
    type: Literal["gameCenterActivities"]
    attributes: Attributes203
    relationships: Optional[Relationships144] = None


class GameCenterActivityCreateRequest(BaseModel):
    data: Data334


class Attributes204(BaseModel):
    referenceName: Optional[str] = None
    playStyle: Optional[Literal["ASYNCHRONOUS", "SYNCHRONOUS"]] = None
    minimumPlayersCount: Optional[int] = None
    maximumPlayersCount: Optional[int] = None
    supportsPartyCode: Optional[bool] = None
    archived: Optional[bool] = None
    properties: Optional[StringToStringMap] = None


class Data337(BaseModel):
    type: Literal["gameCenterActivities"]
    id: str
    attributes: Optional[Attributes204] = None


class GameCenterActivityUpdateRequest(BaseModel):
    data: Data337


class Image(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data343] = None


class Relationships146(BaseModel):
    version: Optional[Version1] = None
    image: Optional[Image] = None


class GameCenterActivityLocalization(BaseModel):
    type: Literal["gameCenterActivityLocalizations"]
    id: str
    attributes: Optional[Attributes208] = None
    relationships: Optional[Relationships146] = None
    links: Optional[ResourceLinks] = None


class GameCenterActivityVersionRelease(BaseModel):
    type: Literal["gameCenterActivityVersionReleases"]
    id: str
    relationships: Optional[Relationships148] = None
    links: Optional[ResourceLinks] = None


class Attributes211(BaseModel):
    version: Optional[int] = None
    state: Optional[GameCenterVersionState] = None
    fallbackUrl: Optional[str] = None


class Localizations5(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum92]] = None


class DefaultImage(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data352] = None


class Releases1(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum93]] = None


class Relationships150(BaseModel):
    activity: Optional[Activity1] = None
    localizations: Optional[Localizations5] = None
    defaultImage: Optional[DefaultImage] = None
    releases: Optional[Releases1] = None


class GameCenterActivityVersion(BaseModel):
    type: Literal["gameCenterActivityVersions"]
    id: str
    attributes: Optional[Attributes211] = None
    relationships: Optional[Relationships150] = None
    links: Optional[ResourceLinks] = None


class CompatibilityVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum94]] = None


class AppStoreVersion12(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data356] = None


class Relationships152(BaseModel):
    compatibilityVersions: Optional[CompatibilityVersions] = None
    appStoreVersion: Optional[AppStoreVersion12] = None


class GameCenterAppVersionModel(BaseModel):
    type: Literal["gameCenterAppVersions"]
    id: str
    attributes: Optional[Attributes214] = None
    relationships: Optional[Relationships152] = None
    links: Optional[ResourceLinks] = None


class GameCenterAppVersionsResponse(BaseModel):
    data: List[GameCenterAppVersionModel]
    included: Optional[List[Union[GameCenterAppVersionModel, AppStoreVersionModel]]] = (
        None
    )
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAppVersionResponse(BaseModel):
    data: GameCenterAppVersionModel
    included: Optional[List[Union[GameCenterAppVersionModel, AppStoreVersionModel]]] = (
        None
    )
    links: DocumentLinks


class Image1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data365] = None


class Relationships155(BaseModel):
    version: Optional[Version6] = None
    image: Optional[Image1] = None


class GameCenterChallengeLocalization(BaseModel):
    type: Literal["gameCenterChallengeLocalizations"]
    id: str
    attributes: Optional[Attributes219] = None
    relationships: Optional[Relationships155] = None
    links: Optional[ResourceLinks] = None


class GameCenterChallengeVersionRelease(BaseModel):
    type: Literal["gameCenterChallengeVersionReleases"]
    id: str
    relationships: Optional[Relationships157] = None
    links: Optional[ResourceLinks] = None


class Attributes222(BaseModel):
    version: Optional[int] = None
    state: Optional[GameCenterVersionState] = None


class Localizations6(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum95]] = None


class Releases2(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum96]] = None


class DefaultImage1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data374] = None


class Relationships159(BaseModel):
    challenge: Optional[Challenge] = None
    localizations: Optional[Localizations6] = None
    releases: Optional[Releases2] = None
    defaultImage: Optional[DefaultImage1] = None


class GameCenterChallengeVersion(BaseModel):
    type: Literal["gameCenterChallengeVersions"]
    id: str
    attributes: Optional[Attributes222] = None
    relationships: Optional[Relationships159] = None
    links: Optional[ResourceLinks] = None


class Versions3(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum97]] = None


class Leaderboard(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data379] = None


class Relationships161(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail9] = None
    gameCenterGroup: Optional[GameCenterGroup4] = None
    versions: Optional[Versions3] = None
    leaderboard: Optional[Leaderboard] = None


class GameCenterChallenge(BaseModel):
    type: Literal["gameCenterChallenges"]
    id: str
    attributes: Optional[Attributes223] = None
    relationships: Optional[Relationships161] = None
    links: Optional[ResourceLinks] = None


class GameCenterAppVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum98]] = None


class GameCenterGroup6(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data387] = None


class GameCenterLeaderboards(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum99]] = None


class GameCenterLeaderboardSets(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum100]] = None


class GameCenterAchievements(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum101]] = None


class GameCenterActivities(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum102]] = None


class GameCenterChallenges(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum103]] = None


class AchievementReleases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum104]] = None


class ActivityReleases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum105]] = None


class ChallengeReleases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum106]] = None


class LeaderboardReleases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum107]] = None


class LeaderboardSetReleases(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum108]] = None


class ChallengesMinimumPlatformVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum109]] = None


class Relationships164(BaseModel):
    app: Optional[App31] = None
    gameCenterAppVersions: Optional[GameCenterAppVersions] = None
    gameCenterGroup: Optional[GameCenterGroup6] = None
    gameCenterLeaderboards: Optional[GameCenterLeaderboards] = None
    gameCenterLeaderboardSets: Optional[GameCenterLeaderboardSets] = None
    gameCenterAchievements: Optional[GameCenterAchievements] = None
    gameCenterActivities: Optional[GameCenterActivities] = None
    gameCenterChallenges: Optional[GameCenterChallenges] = None
    defaultLeaderboard: Optional[DefaultLeaderboard] = None
    defaultGroupLeaderboard: Optional[DefaultGroupLeaderboard] = None
    achievementReleases: Optional[AchievementReleases] = None
    activityReleases: Optional[ActivityReleases] = None
    challengeReleases: Optional[ChallengeReleases] = None
    leaderboardReleases: Optional[LeaderboardReleases] = None
    leaderboardSetReleases: Optional[LeaderboardSetReleases] = None
    challengesMinimumPlatformVersions: Optional[ChallengesMinimumPlatformVersions] = (
        None
    )


class GameCenterDetailModel(BaseModel):
    type: Literal["gameCenterDetails"]
    id: str
    attributes: Optional[Attributes226] = None
    relationships: Optional[Relationships164] = None
    links: Optional[ResourceLinks] = None


class Attributes229(BaseModel):
    platform: Optional[Platform] = None
    versionString: Optional[str] = None
    iconAsset: Optional[ImageAsset] = None


class CompatibleVersions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum110]] = None


class Relationships167(BaseModel):
    compatibleVersions: Optional[CompatibleVersions] = None
    app: Optional[App33] = None


class GameCenterEnabledVersion(BaseModel):
    type: Literal["gameCenterEnabledVersions"]
    id: str
    attributes: Optional[Attributes229] = None
    relationships: Optional[Relationships167] = None
    links: Optional[ResourceLinks] = None


class GameCenterEnabledVersionsResponse(BaseModel):
    data: List[GameCenterEnabledVersion]
    included: Optional[List[Union[GameCenterEnabledVersion, AppModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetails(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum111]] = None


class GameCenterLeaderboards1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum112]] = None


class GameCenterLeaderboardSets1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum113]] = None


class GameCenterAchievements1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum114]] = None


class GameCenterActivities1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum115]] = None


class GameCenterChallenges1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum116]] = None


class Relationships168(BaseModel):
    gameCenterDetails: Optional[GameCenterDetails] = None
    gameCenterLeaderboards: Optional[GameCenterLeaderboards1] = None
    gameCenterLeaderboardSets: Optional[GameCenterLeaderboardSets1] = None
    gameCenterAchievements: Optional[GameCenterAchievements1] = None
    gameCenterActivities: Optional[GameCenterActivities1] = None
    gameCenterChallenges: Optional[GameCenterChallenges1] = None


class GameCenterGroupModel(BaseModel):
    type: Literal["gameCenterGroups"]
    id: str
    attributes: Optional[Attributes230] = None
    relationships: Optional[Relationships168] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardEntrySubmission(BaseModel):
    type: Literal["gameCenterLeaderboardEntrySubmissions"]
    id: str
    attributes: Optional[Attributes233] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardEntrySubmissionResponse(BaseModel):
    data: GameCenterLeaderboardEntrySubmission
    links: DocumentLinks


class Attributes238(BaseModel):
    locale: Optional[str] = None
    name: Optional[str] = None
    formatterOverride: Optional[GameCenterLeaderboardFormatter] = None
    formatterSuffix: Optional[str] = None
    formatterSuffixSingular: Optional[str] = None


class GameCenterLeaderboardImage1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data405] = None


class Relationships171(BaseModel):
    gameCenterLeaderboard: Optional[GameCenterLeaderboard1] = None
    gameCenterLeaderboardImage: Optional[GameCenterLeaderboardImage1] = None


class GameCenterLeaderboardLocalizationModel(BaseModel):
    type: Literal["gameCenterLeaderboardLocalizations"]
    id: str
    attributes: Optional[Attributes238] = None
    relationships: Optional[Relationships171] = None
    links: Optional[ResourceLinks] = None


class Attributes239(BaseModel):
    locale: str
    name: str
    formatterOverride: Optional[GameCenterLeaderboardFormatter] = None
    formatterSuffix: Optional[str] = None
    formatterSuffixSingular: Optional[str] = None


class Data406(BaseModel):
    type: Literal["gameCenterLeaderboardLocalizations"]
    attributes: Attributes239
    relationships: Relationships172


class GameCenterLeaderboardLocalizationCreateRequest(BaseModel):
    data: Data406


class Attributes240(BaseModel):
    name: Optional[str] = None
    formatterOverride: Optional[GameCenterLeaderboardFormatter] = None
    formatterSuffix: Optional[str] = None
    formatterSuffixSingular: Optional[str] = None


class Data408(BaseModel):
    type: Literal["gameCenterLeaderboardLocalizations"]
    id: str
    attributes: Optional[Attributes240] = None


class GameCenterLeaderboardLocalizationUpdateRequest(BaseModel):
    data: Data408


class GameCenterLeaderboardRelease(BaseModel):
    type: Literal["gameCenterLeaderboardReleases"]
    id: str
    attributes: Optional[Attributes241] = None
    relationships: Optional[Relationships173] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardSetImage1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data419] = None


class Relationships177(BaseModel):
    gameCenterLeaderboardSet: Optional[GameCenterLeaderboardSet1] = None
    gameCenterLeaderboardSetImage: Optional[GameCenterLeaderboardSetImage1] = None


class GameCenterLeaderboardSetLocalizationModel(BaseModel):
    type: Literal["gameCenterLeaderboardSetLocalizations"]
    id: str
    attributes: Optional[Attributes245] = None
    relationships: Optional[Relationships177] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardSet3(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data423] = None


class GameCenterLeaderboard5(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data424] = None


class Relationships179(BaseModel):
    gameCenterLeaderboardSet: Optional[GameCenterLeaderboardSet3] = None
    gameCenterLeaderboard: Optional[GameCenterLeaderboard5] = None


class GameCenterLeaderboardSetMemberLocalization(BaseModel):
    type: Literal["gameCenterLeaderboardSetMemberLocalizations"]
    id: str
    attributes: Optional[Attributes248] = None
    relationships: Optional[Relationships179] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardSetRelease(BaseModel):
    type: Literal["gameCenterLeaderboardSetReleases"]
    id: str
    attributes: Optional[Attributes251] = None
    relationships: Optional[Relationships181] = None
    links: Optional[ResourceLinks] = None


class GroupLeaderboardSet(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data436] = None


class Localizations7(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum117]] = None


class GameCenterLeaderboards2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum118]] = None


class Releases3(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum119]] = None


class Relationships183(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail15] = None
    gameCenterGroup: Optional[GameCenterGroup8] = None
    groupLeaderboardSet: Optional[GroupLeaderboardSet] = None
    localizations: Optional[Localizations7] = None
    gameCenterLeaderboards: Optional[GameCenterLeaderboards2] = None
    releases: Optional[Releases3] = None


class GameCenterLeaderboardSet(BaseModel):
    type: Literal["gameCenterLeaderboardSets"]
    id: str
    attributes: Optional[Attributes252] = None
    relationships: Optional[Relationships183] = None
    links: Optional[ResourceLinks] = None


class Attributes255(BaseModel):
    defaultFormatter: Optional[GameCenterLeaderboardFormatter] = None
    referenceName: Optional[str] = None
    vendorIdentifier: Optional[str] = None
    submissionType: Optional[Literal["BEST_SCORE", "MOST_RECENT_SCORE"]] = None
    scoreSortType: Optional[Literal["ASC", "DESC"]] = None
    scoreRangeStart: Optional[str] = None
    scoreRangeEnd: Optional[str] = None
    recurrenceStartDate: Optional[AwareDatetime] = None
    recurrenceDuration: Optional[timedelta] = None
    recurrenceRule: Optional[str] = None
    archived: Optional[bool] = None
    activityProperties: Optional[StringToStringMap] = None
    visibility: Optional[Literal["SHOW_FOR_ALL", "HIDE_FOR_ALL"]] = None


class GroupLeaderboard(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data443] = None


class GameCenterLeaderboardSets2(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum121]] = None


class Localizations8(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum122]] = None


class Releases4(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum123]] = None


class Activity3(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data444] = None


class Challenge2(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data445] = None


class Relationships185(BaseModel):
    gameCenterDetail: Optional[GameCenterDetail17] = None
    gameCenterGroup: Optional[GameCenterGroup10] = None
    groupLeaderboard: Optional[GroupLeaderboard] = None
    gameCenterLeaderboardSets: Optional[GameCenterLeaderboardSets2] = None
    localizations: Optional[Localizations8] = None
    releases: Optional[Releases4] = None
    activity: Optional[Activity3] = None
    challenge: Optional[Challenge2] = None


class GameCenterLeaderboard(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str
    attributes: Optional[Attributes255] = None
    relationships: Optional[Relationships185] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardsResponse(BaseModel):
    data: List[GameCenterLeaderboard]
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSet,
                GameCenterLeaderboardLocalizationModel,
                GameCenterLeaderboardRelease,
                GameCenterActivity,
                GameCenterChallenge,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardResponse(BaseModel):
    data: GameCenterLeaderboard
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSet,
                GameCenterLeaderboardLocalizationModel,
                GameCenterLeaderboardRelease,
                GameCenterActivity,
                GameCenterChallenge,
            ]
        ]
    ] = None
    links: DocumentLinks


class Attributes256(BaseModel):
    defaultFormatter: GameCenterLeaderboardFormatter
    referenceName: str
    vendorIdentifier: str
    submissionType: Literal["BEST_SCORE", "MOST_RECENT_SCORE"]
    scoreSortType: Literal["ASC", "DESC"]
    scoreRangeStart: Optional[str] = None
    scoreRangeEnd: Optional[str] = None
    recurrenceStartDate: Optional[AwareDatetime] = None
    recurrenceDuration: Optional[timedelta] = None
    recurrenceRule: Optional[str] = None
    activityProperties: Optional[StringToStringMap] = None
    visibility: Optional[Literal["SHOW_FOR_ALL", "HIDE_FOR_ALL"]] = None


class Data446(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    attributes: Attributes256
    relationships: Optional[Relationships186] = None


class GameCenterLeaderboardCreateRequest(BaseModel):
    data: Data446


class Attributes257(BaseModel):
    defaultFormatter: Optional[GameCenterLeaderboardFormatter] = None
    referenceName: Optional[str] = None
    submissionType: Optional[Literal["BEST_SCORE", "MOST_RECENT_SCORE"]] = None
    scoreSortType: Optional[Literal["ASC", "DESC"]] = None
    scoreRangeStart: Optional[str] = None
    scoreRangeEnd: Optional[str] = None
    recurrenceStartDate: Optional[AwareDatetime] = None
    recurrenceDuration: Optional[timedelta] = None
    recurrenceRule: Optional[str] = None
    archived: Optional[bool] = None
    activityProperties: Optional[StringToStringMap] = None
    visibility: Optional[Literal["SHOW_FOR_ALL", "HIDE_FOR_ALL"]] = None


class Data449(BaseModel):
    type: Literal["gameCenterLeaderboards"]
    id: str
    attributes: Optional[Attributes257] = None


class GameCenterLeaderboardUpdateRequest(BaseModel):
    data: Data449


class GameCenterMatchmakingQueue(BaseModel):
    type: Literal["gameCenterMatchmakingQueues"]
    id: str
    attributes: Optional[Attributes258] = None
    relationships: Optional[Relationships187] = None
    links: Optional[ResourceLinks] = None


class MatchmakingResult(BaseModel):
    requestName: Optional[str] = None
    teamAssignments: Optional[List[GameCenterMatchmakingTeamAssignment]] = None


class Attributes261(BaseModel):
    matchmakingResults: Optional[List[List[MatchmakingResult]]] = None


class GameCenterMatchmakingRuleSetTest(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSetTests"]
    id: str
    attributes: Optional[Attributes261] = None
    links: Optional[ResourceLinks] = None


class GameCenterMatchmakingRuleSetTestResponse(BaseModel):
    data: GameCenterMatchmakingRuleSetTest
    links: DocumentLinks


class Teams(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum126]] = None


class Rules(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum127]] = None


class MatchmakingQueues(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum128]] = None


class Relationships191(BaseModel):
    teams: Optional[Teams] = None
    rules: Optional[Rules] = None
    matchmakingQueues: Optional[MatchmakingQueues] = None


class GameCenterMatchmakingRuleSet(BaseModel):
    type: Literal["gameCenterMatchmakingRuleSets"]
    id: str
    attributes: Optional[Attributes262] = None
    relationships: Optional[Relationships191] = None
    links: Optional[ResourceLinks] = None


class GameCenterMatchmakingRule(BaseModel):
    type: Literal["gameCenterMatchmakingRules"]
    id: str
    attributes: Optional[Attributes265] = None
    links: Optional[ResourceLinks] = None


class GameCenterMatchmakingRulesResponse(BaseModel):
    data: List[GameCenterMatchmakingRule]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingRuleResponse(BaseModel):
    data: GameCenterMatchmakingRule
    links: DocumentLinks


class GameCenterMatchmakingTeam(BaseModel):
    type: Literal["gameCenterMatchmakingTeams"]
    id: str
    attributes: Optional[Attributes268] = None
    links: Optional[ResourceLinks] = None


class GameCenterMatchmakingTeamsResponse(BaseModel):
    data: List[GameCenterMatchmakingTeam]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingTeamResponse(BaseModel):
    data: GameCenterMatchmakingTeam
    links: DocumentLinks


class Attributes271(BaseModel):
    playerId: str
    properties: Optional[List[Property]] = None


class GameCenterMatchmakingTestPlayerPropertyInlineCreate(BaseModel):
    type: Literal["gameCenterMatchmakingTestPlayerProperties"]
    id: Optional[str] = None
    attributes: Attributes271


class Attributes272(BaseModel):
    requestName: str
    secondsInQueue: int
    locale: Optional[
        Literal[
            "AR-SA",
            "CA-ES",
            "CS-CZ",
            "DA-DK",
            "DE-DE",
            "EL-GR",
            "EN-AU",
            "EN-GB",
            "EN-US",
            "EN-KY",
            "ES-ES",
            "ES-MX",
            "FI-FI",
            "FR-CA",
            "FR-FR",
            "HI-IN",
            "HR-HR",
            "HU-HU",
            "ID-ID",
            "IT-IT",
            "IW-IL",
            "JA-JP",
            "KO-KR",
            "MS-MY",
            "NL-NL",
            "NO-NO",
            "PL-PL",
            "PT-BR",
            "PT-PT",
            "RO-RO",
            "RU-RU",
            "SK-SK",
            "SV-SE",
            "TH-TH",
            "TR-TR",
            "UK-UA",
            "ZH-CN",
            "ZH-TW",
            "ZH-HK",
        ]
    ] = None
    location: Optional[Location] = None
    minPlayers: Optional[int] = None
    maxPlayers: Optional[int] = None
    playerCount: Optional[int] = None
    bundleId: str
    platform: Platform
    appVersion: str


class GameCenterMatchmakingTestRequestInlineCreate(BaseModel):
    type: Literal["gameCenterMatchmakingTestRequests"]
    id: Optional[str] = None
    attributes: Attributes272
    relationships: Optional[Relationships194] = None


class GameCenterPlayerAchievementSubmission(BaseModel):
    type: Literal["gameCenterPlayerAchievementSubmissions"]
    id: str
    attributes: Optional[Attributes273] = None
    links: Optional[ResourceLinks] = None


class GameCenterPlayerAchievementSubmissionResponse(BaseModel):
    data: GameCenterPlayerAchievementSubmission
    links: DocumentLinks


class AvailableTerritories(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum130]] = None


class Relationships197(BaseModel):
    availableTerritories: Optional[AvailableTerritories] = None


class InAppPurchaseAvailability(BaseModel):
    type: Literal["inAppPurchaseAvailabilities"]
    id: str
    attributes: Optional[Attributes278] = None
    relationships: Optional[Relationships197] = None
    links: Optional[ResourceLinks] = None


class InAppPurchaseContent(BaseModel):
    type: Literal["inAppPurchaseContents"]
    id: str
    attributes: Optional[Attributes280] = None
    relationships: Optional[Relationships199] = None
    links: Optional[ResourceLinks] = None


class Attributes281(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    assetToken: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    state: Optional[
        Literal[
            "AWAITING_UPLOAD",
            "UPLOAD_COMPLETE",
            "FAILED",
            "PREPARE_FOR_SUBMISSION",
            "WAITING_FOR_REVIEW",
            "APPROVED",
            "REJECTED",
        ]
    ] = None


class InAppPurchaseImage(BaseModel):
    type: Literal["inAppPurchaseImages"]
    id: str
    attributes: Optional[Attributes281] = None
    relationships: Optional[Relationships200] = None
    links: Optional[ResourceLinks] = None


class InAppPurchaseLocalization(BaseModel):
    type: Literal["inAppPurchaseLocalizations"]
    id: str
    attributes: Optional[Attributes284] = None
    relationships: Optional[Relationships202] = None
    links: Optional[ResourceLinks] = None


class Relationships204(BaseModel):
    territory: Optional[Territory3] = None
    equalizations: Optional[Equalizations] = None


class InAppPurchasePricePoint(BaseModel):
    type: Literal["inAppPurchasePricePoints"]
    id: str
    attributes: Optional[Attributes287] = None
    relationships: Optional[Relationships204] = None
    links: Optional[ResourceLinks] = None


class BaseTerritory2(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data484] = None


class ManualPrices2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum132]] = None


class AutomaticPrices1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum132]] = None


class Relationships205(BaseModel):
    baseTerritory: Optional[BaseTerritory2] = None
    manualPrices: Optional[ManualPrices2] = None
    automaticPrices: Optional[AutomaticPrices1] = None


class InAppPurchasePriceSchedule(BaseModel):
    type: Literal["inAppPurchasePriceSchedules"]
    id: str
    relationships: Optional[Relationships205] = None
    links: Optional[ResourceLinks] = None


class InAppPurchasePriceScheduleCreateRequest(BaseModel):
    data: Data486
    included: Optional[
        List[Union[InAppPurchasePriceInlineCreate, TerritoryInlineCreate]]
    ] = None


class InAppPurchasePrice(BaseModel):
    type: Literal["inAppPurchasePrices"]
    id: str
    attributes: Optional[Attributes288] = None
    relationships: Optional[Relationships207] = None
    links: Optional[ResourceLinks] = None


class InAppPurchaseSubmission(BaseModel):
    type: Literal["inAppPurchaseSubmissions"]
    id: str
    relationships: Optional[Relationships209] = None
    links: Optional[ResourceLinks] = None


class Apps1(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum135]] = None


class Relationships211(BaseModel):
    apps: Optional[Apps1] = None


class InAppPurchase(BaseModel):
    type: Literal["inAppPurchases"]
    id: str
    attributes: Optional[Attributes290] = None
    relationships: Optional[Relationships211] = None
    links: Optional[ResourceLinks] = None


class InAppPurchasesResponse(BaseModel):
    data: List[InAppPurchase]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseResponse(BaseModel):
    data: InAppPurchase
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class Attributes291(BaseModel):
    name: Optional[str] = None
    productId: Optional[str] = None
    inAppPurchaseType: Optional[InAppPurchaseType] = None
    state: Optional[InAppPurchaseState] = None
    reviewNote: Optional[str] = None
    familySharable: Optional[bool] = None
    contentHosting: Optional[bool] = None


class InAppPurchaseLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum136]] = None


class PricePoints(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum137]] = None


class Content(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data496] = None


class AppStoreReviewScreenshot(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data497] = None


class PromotedPurchase1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data498] = None


class IapPriceSchedule(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data499] = None


class InAppPurchaseAvailability1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data500] = None


class Images(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum138]] = None


class Relationships212(BaseModel):
    inAppPurchaseLocalizations: Optional[InAppPurchaseLocalizations] = None
    pricePoints: Optional[PricePoints] = None
    content: Optional[Content] = None
    appStoreReviewScreenshot: Optional[AppStoreReviewScreenshot] = None
    promotedPurchase: Optional[PromotedPurchase1] = None
    iapPriceSchedule: Optional[IapPriceSchedule] = None
    inAppPurchaseAvailability: Optional[InAppPurchaseAvailability1] = None
    images: Optional[Images] = None


class InAppPurchaseV2(BaseModel):
    type: Literal["inAppPurchases"]
    id: str
    attributes: Optional[Attributes291] = None
    relationships: Optional[Relationships212] = None
    links: Optional[ResourceLinks] = None


class Attributes292(BaseModel):
    name: str
    productId: str
    inAppPurchaseType: InAppPurchaseType
    reviewNote: Optional[str] = None
    familySharable: Optional[bool] = None


class Data501(BaseModel):
    type: Literal["inAppPurchases"]
    attributes: Attributes292
    relationships: Relationships213


class InAppPurchaseV2CreateRequest(BaseModel):
    data: Data501


class MarketplaceSearchDetail1(BaseModel):
    type: Literal["marketplaceSearchDetails"]
    id: str
    attributes: Optional[Attributes294] = None
    links: Optional[ResourceLinks] = None


class MarketplaceSearchDetailResponse(BaseModel):
    data: MarketplaceSearchDetail1
    links: DocumentLinks


class MarketplaceWebhook(BaseModel):
    type: Literal["marketplaceWebhooks"]
    id: str
    attributes: Optional[Attributes297] = None
    links: Optional[ResourceLinks] = None


class MarketplaceWebhooksResponse(BaseModel):
    data: List[MarketplaceWebhook]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class MarketplaceWebhookResponse(BaseModel):
    data: MarketplaceWebhook
    links: DocumentLinks


class Certificates(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum139]] = None


class Relationships215(BaseModel):
    certificates: Optional[Certificates] = None


class MerchantId1(BaseModel):
    type: Literal["merchantIds"]
    id: str
    attributes: Optional[Attributes300] = None
    relationships: Optional[Relationships215] = None
    links: Optional[ResourceLinks] = None


class MerchantIdsResponse(BaseModel):
    data: List[MerchantId1]
    included: Optional[List[Certificate]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class MerchantIdResponse(BaseModel):
    data: MerchantId1
    included: Optional[List[Certificate]] = None
    links: DocumentLinks


class Attributes303(BaseModel):
    name: Optional[str] = None
    type: Optional[Literal["APP_LAUNCH", "APP_ENHANCEMENTS", "NEW_CONTENT"]] = None
    description: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None
    lastModifiedDate: Optional[AwareDatetime] = None
    submittedDate: Optional[AwareDatetime] = None
    state: Optional[Literal["DRAFT", "SUBMITTED", "ARCHIVED"]] = None
    publishStartDate: Optional[AwareDatetime] = None
    publishEndDate: Optional[AwareDatetime] = None
    deviceFamilies: Optional[List[DeviceFamily]] = None
    locales: Optional[List[str]] = None
    supplementalMaterialsUris: Optional[List[AnyUrl]] = None
    hasInAppEvents: Optional[bool] = None
    launchInSelectMarketsFirst: Optional[bool] = None
    notes: Optional[str] = None
    preOrderEnabled: Optional[bool] = None


class RelatedApps(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum140]] = None


class InAppEvents(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum141]] = None


class SupportedTerritories(BaseModel):
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum142]] = None


class Relationships216(BaseModel):
    relatedApps: Optional[RelatedApps] = None
    createdByActor: Optional[CreatedByActor] = None
    lastModifiedByActor: Optional[LastModifiedByActor] = None
    submittedByActor: Optional[SubmittedByActor] = None
    inAppEvents: Optional[InAppEvents] = None
    supportedTerritories: Optional[SupportedTerritories] = None


class Nomination(BaseModel):
    type: Literal["nominations"]
    id: str
    attributes: Optional[Attributes303] = None
    relationships: Optional[Relationships216] = None
    links: Optional[ResourceLinks] = None


class Attributes304(BaseModel):
    name: str
    type: Literal["APP_LAUNCH", "APP_ENHANCEMENTS", "NEW_CONTENT"]
    description: str
    submitted: bool
    publishStartDate: AwareDatetime
    publishEndDate: Optional[AwareDatetime] = None
    deviceFamilies: Optional[List[DeviceFamily]] = None
    locales: Optional[List[str]] = None
    supplementalMaterialsUris: Optional[List[AnyUrl]] = None
    hasInAppEvents: Optional[bool] = None
    launchInSelectMarketsFirst: Optional[bool] = None
    notes: Optional[str] = None
    preOrderEnabled: Optional[bool] = None


class Data514(BaseModel):
    type: Literal["nominations"]
    attributes: Attributes304
    relationships: Relationships217


class NominationCreateRequest(BaseModel):
    data: Data514


class Attributes305(BaseModel):
    name: Optional[str] = None
    type: Optional[Literal["APP_LAUNCH", "APP_ENHANCEMENTS", "NEW_CONTENT"]] = None
    description: Optional[str] = None
    submitted: Optional[bool] = None
    archived: Optional[bool] = None
    publishStartDate: Optional[AwareDatetime] = None
    publishEndDate: Optional[AwareDatetime] = None
    deviceFamilies: Optional[List[DeviceFamily]] = None
    locales: Optional[List[str]] = None
    supplementalMaterialsUris: Optional[List[AnyUrl]] = None
    hasInAppEvents: Optional[bool] = None
    launchInSelectMarketsFirst: Optional[bool] = None
    notes: Optional[str] = None
    preOrderEnabled: Optional[bool] = None


class Data515(BaseModel):
    type: Literal["nominations"]
    id: str
    attributes: Optional[Attributes305] = None
    relationships: Optional[Relationships218] = None


class NominationUpdateRequest(BaseModel):
    data: Data515


class Certificates1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum149]] = None


class Relationships219(BaseModel):
    certificates: Optional[Certificates1] = None


class PassTypeIdModel(BaseModel):
    type: Literal["passTypeIds"]
    id: str
    attributes: Optional[Attributes306] = None
    relationships: Optional[Relationships219] = None
    links: Optional[ResourceLinks] = None


class PassTypeIdsResponse(BaseModel):
    data: List[PassTypeIdModel]
    included: Optional[List[Certificate]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PassTypeIdResponse(BaseModel):
    data: PassTypeIdModel
    included: Optional[List[Certificate]] = None
    links: DocumentLinks


class PerfPowerMetric(BaseModel):
    type: Literal["perfPowerMetrics"]
    id: str
    attributes: Optional[Attributes309] = None
    links: Optional[ResourceLinks] = None


class Attributes310(BaseModel):
    version: Optional[str] = None
    platform: Optional[Platform] = None


class Builds7(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum150]] = None


class App36(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data518] = None


class Relationships220(BaseModel):
    builds: Optional[Builds7] = None
    app: Optional[App36] = None


class PrereleaseVersion(BaseModel):
    type: Literal["preReleaseVersions"]
    id: str
    attributes: Optional[Attributes310] = None
    relationships: Optional[Relationships220] = None
    links: Optional[ResourceLinks] = None


class PreReleaseVersionsResponse(BaseModel):
    data: List[PrereleaseVersion]
    included: Optional[List[Union[Build, AppModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PrereleaseVersionResponse(BaseModel):
    data: PrereleaseVersion
    included: Optional[List[Union[Build, AppModel]]] = None
    links: DocumentLinks


class Attributes311(BaseModel):
    name: Optional[str] = None
    platform: Optional[BundleIdPlatform] = None
    profileType: Optional[
        Literal[
            "IOS_APP_DEVELOPMENT",
            "IOS_APP_STORE",
            "IOS_APP_ADHOC",
            "IOS_APP_INHOUSE",
            "MAC_APP_DEVELOPMENT",
            "MAC_APP_STORE",
            "MAC_APP_DIRECT",
            "TVOS_APP_DEVELOPMENT",
            "TVOS_APP_STORE",
            "TVOS_APP_ADHOC",
            "TVOS_APP_INHOUSE",
            "MAC_CATALYST_APP_DEVELOPMENT",
            "MAC_CATALYST_APP_STORE",
            "MAC_CATALYST_APP_DIRECT",
        ]
    ] = None
    profileState: Optional[Literal["ACTIVE", "INVALID"]] = None
    profileContent: Optional[str] = None
    uuid: Optional[str] = None
    createdDate: Optional[AwareDatetime] = None
    expirationDate: Optional[AwareDatetime] = None


class BundleId3(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data519] = None


class Devices(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum151]] = None


class Certificates2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum152]] = None


class Relationships221(BaseModel):
    bundleId: Optional[BundleId3] = None
    devices: Optional[Devices] = None
    certificates: Optional[Certificates2] = None


class Profile(BaseModel):
    type: Literal["profiles"]
    id: str
    attributes: Optional[Attributes311] = None
    relationships: Optional[Relationships221] = None
    links: Optional[ResourceLinks] = None


class ProfilesResponse(BaseModel):
    data: List[Profile]
    included: Optional[List[Union[BundleId1, Device, Certificate]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ProfileResponse(BaseModel):
    data: Profile
    included: Optional[List[Union[BundleId1, Device, Certificate]]] = None
    links: DocumentLinks


class PromotedPurchase(BaseModel):
    type: Literal["promotedPurchases"]
    id: str
    attributes: Optional[Attributes313] = None
    relationships: Optional[Relationships223] = None
    links: Optional[ResourceLinks] = None


class ReviewSubmissionItem(BaseModel):
    type: Literal["reviewSubmissionItems"]
    id: str
    attributes: Optional[Attributes316] = None
    relationships: Optional[Relationships225] = None
    links: Optional[ResourceLinks] = None


class ReviewSubmissionItemsResponse(BaseModel):
    data: List[ReviewSubmissionItem]
    included: Optional[
        List[
            Union[
                AppStoreVersionModel,
                AppCustomProductPageVersionModel,
                AppStoreVersionExperimentModel,
                AppStoreVersionExperimentV2Model,
                AppEventModel,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ReviewSubmissionItemResponse(BaseModel):
    data: ReviewSubmissionItem
    included: Optional[
        List[
            Union[
                AppStoreVersionModel,
                AppCustomProductPageVersionModel,
                AppStoreVersionExperimentModel,
                AppStoreVersionExperimentV2Model,
                AppEventModel,
            ]
        ]
    ] = None
    links: DocumentLinks


class Attributes318(BaseModel):
    platform: Optional[Platform] = None
    submittedDate: Optional[AwareDatetime] = None
    state: Optional[
        Literal[
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "UNRESOLVED_ISSUES",
            "CANCELING",
            "COMPLETING",
            "COMPLETE",
        ]
    ] = None


class Items(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum155]] = None


class Relationships227(BaseModel):
    app: Optional[App38] = None
    items: Optional[Items] = None
    appStoreVersionForReview: Optional[AppStoreVersionForReview] = None
    submittedByActor: Optional[SubmittedByActor1] = None
    lastUpdatedByActor: Optional[LastUpdatedByActor] = None


class ReviewSubmission(BaseModel):
    type: Literal["reviewSubmissions"]
    id: str
    attributes: Optional[Attributes318] = None
    relationships: Optional[Relationships227] = None
    links: Optional[ResourceLinks] = None


class ReviewSubmissionsResponse(BaseModel):
    data: List[ReviewSubmission]
    included: Optional[
        List[Union[AppModel, ReviewSubmissionItem, AppStoreVersionModel, Actor]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ReviewSubmissionResponse(BaseModel):
    data: ReviewSubmission
    included: Optional[
        List[Union[AppModel, ReviewSubmissionItem, AppStoreVersionModel, Actor]]
    ] = None
    links: DocumentLinks


class Attributes319(BaseModel):
    platform: Optional[Platform] = None


class Data546(BaseModel):
    type: Literal["reviewSubmissions"]
    attributes: Optional[Attributes319] = None
    relationships: Relationships228


class ReviewSubmissionCreateRequest(BaseModel):
    data: Data546


class Attributes320(BaseModel):
    platform: Optional[Platform] = None
    submitted: Optional[bool] = None
    canceled: Optional[bool] = None


class Data548(BaseModel):
    type: Literal["reviewSubmissions"]
    id: str
    attributes: Optional[Attributes320] = None


class ReviewSubmissionUpdateRequest(BaseModel):
    data: Data548


class Attributes324(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    acAccountName: Optional[str] = None
    territory: Optional[TerritoryCode] = None
    applePayCompatible: Optional[bool] = None
    interruptPurchases: Optional[bool] = None
    subscriptionRenewalRate: Optional[
        Literal[
            "MONTHLY_RENEWAL_EVERY_ONE_HOUR",
            "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES",
            "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES",
            "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES",
            "MONTHLY_RENEWAL_EVERY_THREE_MINUTES",
        ]
    ] = None


class SandboxTesterV2(BaseModel):
    type: Literal["sandboxTesters"]
    id: str
    attributes: Optional[Attributes324] = None
    links: Optional[ResourceLinks] = None


class SandboxTestersV2Response(BaseModel):
    data: List[SandboxTesterV2]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SandboxTesterV2Response(BaseModel):
    data: SandboxTesterV2
    links: DocumentLinks


class Attributes325(BaseModel):
    territory: Optional[TerritoryCode] = None
    interruptPurchases: Optional[bool] = None
    subscriptionRenewalRate: Optional[
        Literal[
            "MONTHLY_RENEWAL_EVERY_ONE_HOUR",
            "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES",
            "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES",
            "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES",
            "MONTHLY_RENEWAL_EVERY_THREE_MINUTES",
        ]
    ] = None


class Data553(BaseModel):
    type: Literal["sandboxTesters"]
    id: str
    attributes: Optional[Attributes325] = None


class SandboxTesterV2UpdateRequest(BaseModel):
    data: Data553


class SandboxTestersClearPurchaseHistoryRequestV2(BaseModel):
    type: Literal["sandboxTestersClearPurchaseHistoryRequest"]
    id: str
    links: Optional[ResourceLinks] = None


class SandboxTestersClearPurchaseHistoryRequestV2Response(BaseModel):
    data: SandboxTestersClearPurchaseHistoryRequestV2
    links: DocumentLinks


class Attributes326(BaseModel):
    name: Optional[str] = None
    canonicalName: Optional[str] = None
    isDeleted: Optional[bool] = None
    kind: Optional[CiGitRefKind] = None


class ScmGitReference(BaseModel):
    type: Literal["scmGitReferences"]
    id: str
    attributes: Optional[Attributes326] = None
    relationships: Optional[Relationships232] = None
    links: Optional[ResourceLinks] = None


class Attributes327(BaseModel):
    scmProviderType: Optional[ScmProviderType] = None
    url: Optional[AnyUrl] = None


class Repositories(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships233(BaseModel):
    repositories: Optional[Repositories] = None


class ScmProvider(BaseModel):
    type: Literal["scmProviders"]
    id: str
    attributes: Optional[Attributes327] = None
    relationships: Optional[Relationships233] = None
    links: Optional[ResourceLinks] = None


class ScmProvidersResponse(BaseModel):
    data: List[ScmProvider]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmProviderResponse(BaseModel):
    data: ScmProvider
    links: DocumentLinks


class ScmPullRequest(BaseModel):
    type: Literal["scmPullRequests"]
    id: str
    attributes: Optional[Attributes328] = None
    relationships: Optional[Relationships234] = None
    links: Optional[ResourceLinks] = None


class GitReferences(BaseModel):
    links: Optional[RelationshipLinks] = None


class PullRequests(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships235(BaseModel):
    scmProvider: Optional[ScmProvider1] = None
    defaultBranch: Optional[DefaultBranch] = None
    gitReferences: Optional[GitReferences] = None
    pullRequests: Optional[PullRequests] = None


class ScmRepository(BaseModel):
    type: Literal["scmRepositories"]
    id: str
    attributes: Optional[Attributes329] = None
    relationships: Optional[Relationships235] = None
    links: Optional[ResourceLinks] = None


class ScmRepositoriesResponse(BaseModel):
    data: List[ScmRepository]
    included: Optional[List[Union[ScmProvider, ScmGitReference]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmRepositoryResponse(BaseModel):
    data: ScmRepository
    included: Optional[List[Union[ScmProvider, ScmGitReference]]] = None
    links: DocumentLinks


class AvailableTerritories2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum157]] = None


class Relationships238(BaseModel):
    availableTerritories: Optional[AvailableTerritories2] = None


class SubscriptionAvailability(BaseModel):
    type: Literal["subscriptionAvailabilities"]
    id: str
    attributes: Optional[Attributes333] = None
    relationships: Optional[Relationships238] = None
    links: Optional[ResourceLinks] = None


class Attributes335(BaseModel):
    optIn: Optional[bool] = None
    sandboxOptIn: Optional[bool] = None
    duration: Optional[SubscriptionGracePeriodDuration] = None
    renewalType: Optional[Literal["ALL_RENEWALS", "PAID_TO_PAID_ONLY"]] = None


class SubscriptionGracePeriodModel(BaseModel):
    type: Literal["subscriptionGracePeriods"]
    id: str
    attributes: Optional[Attributes335] = None
    links: Optional[ResourceLinks] = None


class SubscriptionGracePeriodResponse(BaseModel):
    data: SubscriptionGracePeriodModel
    links: DocumentLinks


class Data565(BaseModel):
    type: Literal["subscriptionGracePeriods"]
    id: str
    attributes: Optional[Attributes335] = None


class SubscriptionGracePeriodUpdateRequest(BaseModel):
    data: Data565


class SubscriptionGroupLocalization(BaseModel):
    type: Literal["subscriptionGroupLocalizations"]
    id: str
    attributes: Optional[Attributes337] = None
    relationships: Optional[Relationships240] = None
    links: Optional[ResourceLinks] = None


class SubscriptionGroupSubmission(BaseModel):
    type: Literal["subscriptionGroupSubmissions"]
    id: str
    links: Optional[ResourceLinks] = None


class SubscriptionGroupSubmissionResponse(BaseModel):
    data: SubscriptionGroupSubmission
    links: DocumentLinks


class Subscriptions(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum159]] = None


class SubscriptionGroupLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum160]] = None


class Relationships243(BaseModel):
    subscriptions: Optional[Subscriptions] = None
    subscriptionGroupLocalizations: Optional[SubscriptionGroupLocalizations] = None


class SubscriptionGroup(BaseModel):
    type: Literal["subscriptionGroups"]
    id: str
    attributes: Optional[Attributes340] = None
    relationships: Optional[Relationships243] = None
    links: Optional[ResourceLinks] = None


class Attributes343(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    assetToken: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    state: Optional[
        Literal[
            "AWAITING_UPLOAD",
            "UPLOAD_COMPLETE",
            "FAILED",
            "PREPARE_FOR_SUBMISSION",
            "WAITING_FOR_REVIEW",
            "APPROVED",
            "REJECTED",
        ]
    ] = None


class SubscriptionImage(BaseModel):
    type: Literal["subscriptionImages"]
    id: str
    attributes: Optional[Attributes343] = None
    relationships: Optional[Relationships245] = None
    links: Optional[ResourceLinks] = None


class Attributes346(BaseModel):
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    duration: Optional[SubscriptionOfferDuration] = None
    offerMode: Optional[SubscriptionOfferMode] = None
    numberOfPeriods: Optional[int] = None


class SubscriptionIntroductoryOffer(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    id: str
    attributes: Optional[Attributes346] = None
    relationships: Optional[Relationships247] = None
    links: Optional[ResourceLinks] = None


class Attributes347(BaseModel):
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    duration: SubscriptionOfferDuration
    offerMode: SubscriptionOfferMode
    numberOfPeriods: int


class SubscriptionIntroductoryOfferInlineCreate(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    id: Optional[str] = None
    attributes: Attributes347
    relationships: Optional[Relationships248] = None


class Data585(BaseModel):
    type: Literal["subscriptionIntroductoryOffers"]
    attributes: Attributes347
    relationships: Relationships249


class SubscriptionIntroductoryOfferCreateRequest(BaseModel):
    data: Data585
    included: Optional[List[SubscriptionPricePointInlineCreate]] = None


class SubscriptionLocalization(BaseModel):
    type: Literal["subscriptionLocalizations"]
    id: str
    attributes: Optional[Attributes350] = None
    relationships: Optional[Relationships250] = None
    links: Optional[ResourceLinks] = None


class SubscriptionOfferCodeCustomCode(BaseModel):
    type: Literal["subscriptionOfferCodeCustomCodes"]
    id: str
    attributes: Optional[Attributes353] = None
    relationships: Optional[Relationships252] = None
    links: Optional[ResourceLinks] = None


class SubscriptionOfferCodeOneTimeUseCodeValue(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodeValues"]
    id: str
    links: Optional[ResourceLinks] = None


class Values(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships254(BaseModel):
    offerCode: Optional[OfferCode2] = None
    values: Optional[Values] = None


class SubscriptionOfferCodeOneTimeUseCode(BaseModel):
    type: Literal["subscriptionOfferCodeOneTimeUseCodes"]
    id: str
    attributes: Optional[Attributes356] = None
    relationships: Optional[Relationships254] = None
    links: Optional[ResourceLinks] = None


class SubscriptionOfferCodePrice(BaseModel):
    type: Literal["subscriptionOfferCodePrices"]
    id: str
    relationships: Optional[Relationships256] = None
    links: Optional[ResourceLinks] = None


class Attributes359(BaseModel):
    name: Optional[str] = None
    customerEligibilities: Optional[List[SubscriptionCustomerEligibility]] = None
    offerEligibility: Optional[SubscriptionOfferEligibility] = None
    duration: Optional[SubscriptionOfferDuration] = None
    offerMode: Optional[SubscriptionOfferMode] = None
    numberOfPeriods: Optional[int] = None
    active: Optional[bool] = None


class OneTimeUseCodes(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum161]] = None


class CustomCodes(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum162]] = None


class Prices(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum163]] = None


class Relationships258(BaseModel):
    subscription: Optional[Subscription12] = None
    oneTimeUseCodes: Optional[OneTimeUseCodes] = None
    customCodes: Optional[CustomCodes] = None
    prices: Optional[Prices] = None


class SubscriptionOfferCode(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    id: str
    attributes: Optional[Attributes359] = None
    relationships: Optional[Relationships258] = None
    links: Optional[ResourceLinks] = None


class Attributes360(BaseModel):
    name: str
    customerEligibilities: List[SubscriptionCustomerEligibility]
    offerEligibility: SubscriptionOfferEligibility
    duration: SubscriptionOfferDuration
    offerMode: SubscriptionOfferMode
    numberOfPeriods: int


class Data607(BaseModel):
    type: Literal["subscriptionOfferCodes"]
    attributes: Attributes360
    relationships: Relationships259


class SubscriptionOfferCodeCreateRequest(BaseModel):
    data: Data607
    included: Optional[List[SubscriptionOfferCodePriceInlineCreate]] = None


class Relationships260(BaseModel):
    territory: Optional[Territory10] = None
    equalizations: Optional[Equalizations] = None


class SubscriptionPricePointModel(BaseModel):
    type: Literal["subscriptionPricePoints"]
    id: str
    attributes: Optional[Attributes362] = None
    relationships: Optional[Relationships260] = None
    links: Optional[ResourceLinks] = None


class SubscriptionPrice(BaseModel):
    type: Literal["subscriptionPrices"]
    id: str
    attributes: Optional[Attributes363] = None
    relationships: Optional[Relationships261] = None
    links: Optional[ResourceLinks] = None


class SubscriptionPromotionalOfferPrice(BaseModel):
    type: Literal["subscriptionPromotionalOfferPrices"]
    id: str
    relationships: Optional[Relationships264] = None
    links: Optional[ResourceLinks] = None


class Attributes366(BaseModel):
    duration: Optional[SubscriptionOfferDuration] = None
    name: Optional[str] = None
    numberOfPeriods: Optional[int] = None
    offerCode: Optional[str] = None
    offerMode: Optional[SubscriptionOfferMode] = None


class Prices2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum165]] = None


class Relationships266(BaseModel):
    subscription: Optional[Subscription16] = None
    prices: Optional[Prices2] = None


class SubscriptionPromotionalOffer(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    id: str
    attributes: Optional[Attributes366] = None
    relationships: Optional[Relationships266] = None
    links: Optional[ResourceLinks] = None


class Attributes367(BaseModel):
    duration: SubscriptionOfferDuration
    name: str
    numberOfPeriods: int
    offerCode: str
    offerMode: SubscriptionOfferMode


class SubscriptionPromotionalOfferInlineCreate(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    id: Optional[str] = None
    attributes: Attributes367
    relationships: Optional[Relationships267] = None


class Data626(BaseModel):
    type: Literal["subscriptionPromotionalOffers"]
    attributes: Attributes367
    relationships: Relationships268


class SubscriptionPromotionalOfferCreateRequest(BaseModel):
    data: Data626
    included: Optional[List[SubscriptionPromotionalOfferPriceInlineCreate]] = None


class SubscriptionSubmission(BaseModel):
    type: Literal["subscriptionSubmissions"]
    id: str
    relationships: Optional[Relationships270] = None
    links: Optional[ResourceLinks] = None


class SubscriptionLocalizations(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum169]] = None


class AppStoreReviewScreenshot1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data632] = None


class IntroductoryOffers(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum170]] = None


class PromotionalOffers(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum171]] = None


class OfferCodes(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum172]] = None


class Prices6(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum173]] = None


class PricePoints1(BaseModel):
    links: Optional[RelationshipLinks] = None


class PromotedPurchase2(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data634] = None


class SubscriptionAvailability1(BaseModel):
    links: Optional[RelationshipLinks] = None
    data: Optional[Data635] = None


class WinBackOffers(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum174]] = None


class Images1(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum175]] = None


class Relationships272(BaseModel):
    subscriptionLocalizations: Optional[SubscriptionLocalizations] = None
    appStoreReviewScreenshot: Optional[AppStoreReviewScreenshot1] = None
    group: Optional[Group] = None
    introductoryOffers: Optional[IntroductoryOffers] = None
    promotionalOffers: Optional[PromotionalOffers] = None
    offerCodes: Optional[OfferCodes] = None
    prices: Optional[Prices6] = None
    pricePoints: Optional[PricePoints1] = None
    promotedPurchase: Optional[PromotedPurchase2] = None
    subscriptionAvailability: Optional[SubscriptionAvailability1] = None
    winBackOffers: Optional[WinBackOffers] = None
    images: Optional[Images1] = None


class SubscriptionModel(BaseModel):
    type: Literal["subscriptions"]
    id: str
    attributes: Optional[Attributes369] = None
    relationships: Optional[Relationships272] = None
    links: Optional[ResourceLinks] = None


class SubscriptionUpdateRequest(BaseModel):
    data: Data638
    included: Optional[
        List[
            Union[
                SubscriptionPromotionalOfferInlineCreate,
                SubscriptionPriceInlineCreate,
                SubscriptionIntroductoryOfferInlineCreate,
            ]
        ]
    ] = None


class TerritoryModel(BaseModel):
    type: Literal["territories"]
    id: str
    attributes: Optional[Attributes372] = None
    links: Optional[ResourceLinks] = None


class TerritoriesResponse(BaseModel):
    data: List[TerritoryModel]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class TerritoryResponse(BaseModel):
    data: TerritoryModel
    links: DocumentLinks


class TerritoryAvailability(BaseModel):
    type: Literal["territoryAvailabilities"]
    id: str
    attributes: Optional[Attributes373] = None
    relationships: Optional[Relationships275] = None
    links: Optional[ResourceLinks] = None


class TerritoryAvailabilitiesResponse(BaseModel):
    data: List[TerritoryAvailability]
    included: Optional[List[TerritoryModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class TerritoryAvailabilityResponse(BaseModel):
    data: TerritoryAvailability
    included: Optional[List[TerritoryModel]] = None
    links: DocumentLinks


class Attributes375(BaseModel):
    email: Optional[EmailStr] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    expirationDate: Optional[AwareDatetime] = None
    roles: Optional[List[UserRole]] = None
    allAppsVisible: Optional[bool] = None
    provisioningAllowed: Optional[bool] = None


class VisibleApps(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum179]] = None


class Relationships276(BaseModel):
    visibleApps: Optional[VisibleApps] = None


class UserInvitation(BaseModel):
    type: Literal["userInvitations"]
    id: str
    attributes: Optional[Attributes375] = None
    relationships: Optional[Relationships276] = None
    links: Optional[ResourceLinks] = None


class UserInvitationsResponse(BaseModel):
    data: List[UserInvitation]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class UserInvitationResponse(BaseModel):
    data: UserInvitation
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class Attributes376(BaseModel):
    email: EmailStr
    firstName: str
    lastName: str
    roles: List[UserRole]
    allAppsVisible: Optional[bool] = None
    provisioningAllowed: Optional[bool] = None


class Data641(BaseModel):
    type: Literal["userInvitations"]
    attributes: Attributes376
    relationships: Optional[Relationships277] = None


class UserInvitationCreateRequest(BaseModel):
    data: Data641


class Attributes377(BaseModel):
    username: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    roles: Optional[List[UserRole]] = None
    allAppsVisible: Optional[bool] = None
    provisioningAllowed: Optional[bool] = None


class VisibleApps2(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum179]] = None


class Relationships278(BaseModel):
    visibleApps: Optional[VisibleApps2] = None


class User(BaseModel):
    type: Literal["users"]
    id: str
    attributes: Optional[Attributes377] = None
    relationships: Optional[Relationships278] = None
    links: Optional[ResourceLinks] = None


class UsersResponse(BaseModel):
    data: List[User]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class UserResponse(BaseModel):
    data: User
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class Attributes378(BaseModel):
    roles: Optional[List[UserRole]] = None
    allAppsVisible: Optional[bool] = None
    provisioningAllowed: Optional[bool] = None


class Data642(BaseModel):
    type: Literal["users"]
    id: str
    attributes: Optional[Attributes378] = None
    relationships: Optional[Relationships279] = None


class UserUpdateRequest(BaseModel):
    data: Data642


class WebhookDelivery(BaseModel):
    type: Literal["webhookDeliveries"]
    id: str
    attributes: Optional[Attributes379] = None
    relationships: Optional[Relationships280] = None
    links: Optional[ResourceLinks] = None


class Attributes380(BaseModel):
    eventType: Optional[WebhookEventType] = None
    payload: Optional[str] = None
    ping: Optional[bool] = None
    createdDate: Optional[AwareDatetime] = None


class WebhookEvent(BaseModel):
    type: Literal["webhookEvents"]
    id: str
    attributes: Optional[Attributes380] = None
    links: Optional[ResourceLinks] = None


class WebhookPing(BaseModel):
    type: Literal["webhookPings"]
    id: str
    links: Optional[ResourceLinks] = None


class WebhookPingResponse(BaseModel):
    data: WebhookPing
    links: DocumentLinks


class Attributes381(BaseModel):
    enabled: Optional[bool] = None
    eventTypes: Optional[List[WebhookEventType]] = None
    name: Optional[str] = None
    url: Optional[AnyUrl] = None


class Deliveries(BaseModel):
    links: Optional[RelationshipLinks] = None


class Relationships283(BaseModel):
    app: Optional[App41] = None
    deliveries: Optional[Deliveries] = None


class Webhook1(BaseModel):
    type: Literal["webhooks"]
    id: str
    attributes: Optional[Attributes381] = None
    relationships: Optional[Relationships283] = None
    links: Optional[ResourceLinks] = None


class WebhooksResponse(BaseModel):
    data: List[Webhook1]
    included: Optional[List[AppModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class WebhookResponse(BaseModel):
    data: Webhook1
    included: Optional[List[AppModel]] = None
    links: DocumentLinks


class Attributes382(BaseModel):
    enabled: bool
    eventTypes: List[WebhookEventType]
    name: str
    secret: str
    url: AnyUrl


class Data649(BaseModel):
    type: Literal["webhooks"]
    attributes: Attributes382
    relationships: Relationships284


class WebhookCreateRequest(BaseModel):
    data: Data649


class Attributes383(BaseModel):
    enabled: Optional[bool] = None
    eventTypes: Optional[List[WebhookEventType]] = None
    name: Optional[str] = None
    secret: Optional[str] = None
    url: Optional[AnyUrl] = None


class Data651(BaseModel):
    type: Literal["webhooks"]
    id: str
    attributes: Optional[Attributes383] = None


class WebhookUpdateRequest(BaseModel):
    data: Data651


class WinBackOfferPrice(BaseModel):
    type: Literal["winBackOfferPrices"]
    id: str
    relationships: Optional[Relationships285] = None
    links: Optional[ResourceLinks] = None


class WinBackOfferPricesResponse(BaseModel):
    data: List[WinBackOfferPrice]
    included: Optional[List[Union[TerritoryModel, SubscriptionPricePointModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class Attributes384(BaseModel):
    referenceName: Optional[str] = None
    offerId: Optional[str] = None
    duration: Optional[SubscriptionOfferDuration] = None
    offerMode: Optional[SubscriptionOfferMode] = None
    periodCount: Optional[int] = None
    customerEligibilityPaidSubscriptionDurationInMonths: Optional[int] = None
    customerEligibilityTimeSinceLastSubscribedInMonths: Optional[IntegerRange] = None
    customerEligibilityWaitBetweenOffersInMonths: Optional[int] = None
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    priority: Optional[Literal["HIGH", "NORMAL"]] = None
    promotionIntent: Optional[Literal["NOT_PROMOTED", "USE_AUTO_GENERATED_ASSETS"]] = (
        None
    )


class Prices8(BaseModel):
    links: Optional[RelationshipLinks] = None
    meta: Optional[PagingInformation] = None
    data: Optional[List[Datum183]] = None


class Relationships286(BaseModel):
    prices: Optional[Prices8] = None


class WinBackOffer(BaseModel):
    type: Literal["winBackOffers"]
    id: str
    attributes: Optional[Attributes384] = None
    relationships: Optional[Relationships286] = None
    links: Optional[ResourceLinks] = None


class WinBackOffersResponse(BaseModel):
    data: List[WinBackOffer]
    included: Optional[List[WinBackOfferPrice]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class WinBackOfferResponse(BaseModel):
    data: WinBackOffer
    included: Optional[List[WinBackOfferPrice]] = None
    links: DocumentLinks


class Attributes385(BaseModel):
    referenceName: str
    offerId: str
    duration: SubscriptionOfferDuration
    offerMode: SubscriptionOfferMode
    periodCount: int
    customerEligibilityPaidSubscriptionDurationInMonths: int
    customerEligibilityTimeSinceLastSubscribedInMonths: IntegerRange
    customerEligibilityWaitBetweenOffersInMonths: Optional[int] = None
    startDate: date
    endDate: Optional[date] = None
    priority: Literal["HIGH", "NORMAL"]
    promotionIntent: Optional[Literal["NOT_PROMOTED", "USE_AUTO_GENERATED_ASSETS"]] = (
        None
    )


class Data654(BaseModel):
    type: Literal["winBackOffers"]
    attributes: Attributes385
    relationships: Relationships287


class WinBackOfferCreateRequest(BaseModel):
    data: Data654
    included: Optional[List[WinBackOfferPriceInlineCreate]] = None


class Attributes386(BaseModel):
    customerEligibilityPaidSubscriptionDurationInMonths: Optional[int] = None
    customerEligibilityTimeSinceLastSubscribedInMonths: Optional[IntegerRange] = None
    customerEligibilityWaitBetweenOffersInMonths: Optional[int] = None
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    priority: Optional[Literal["HIGH", "NORMAL"]] = None
    promotionIntent: Optional[Literal["NOT_PROMOTED", "USE_AUTO_GENERATED_ASSETS"]] = (
        None
    )


class Data656(BaseModel):
    type: Literal["winBackOffers"]
    id: str
    attributes: Optional[Attributes386] = None


class WinBackOfferUpdateRequest(BaseModel):
    data: Data656


class AlternativeDistributionPackageVersionDeltasLinkagesResponse(BaseModel):
    data: List[Datum185]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionPackageVersionVariantsLinkagesResponse(BaseModel):
    data: List[Datum186]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionPackageVersionsLinkagesResponse(BaseModel):
    data: List[Datum187]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportInstanceSegmentsLinkagesResponse(BaseModel):
    data: List[Datum188]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportRequestReportsLinkagesResponse(BaseModel):
    data: List[Datum189]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportInstancesLinkagesResponse(BaseModel):
    data: List[Datum190]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAvailabilityV2TerritoryAvailabilitiesLinkagesResponse(BaseModel):
    data: List[Datum191]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCategoryWithoutIncludesResponse(BaseModel):
    data: AppCategory
    links: DocumentLinks


class AppCategoryParentLinkageResponse(BaseModel):
    data: Data657
    links: DocumentLinks


class AppCategoriesWithoutIncludesResponse(BaseModel):
    data: List[AppCategory]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCategorySubcategoriesLinkagesResponse(BaseModel):
    data: List[Datum192]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipDefaultExperienceLocalizationAppClipHeaderImageLinkageResponse(BaseModel):
    data: Data658
    links: DocumentLinks


class AppClipDefaultExperienceAppClipAppStoreReviewDetailLinkageResponse(BaseModel):
    data: Data659
    links: DocumentLinks


class AppClipDefaultExperienceAppClipDefaultExperienceLocalizationsLinkagesResponse(
    BaseModel
):
    data: List[Datum193]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse(BaseModel):
    data: Data660
    links: DocumentLinks


class AppClipAppClipAdvancedExperiencesLinkagesResponse(BaseModel):
    data: List[Datum194]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipAppClipDefaultExperiencesLinkagesResponse(BaseModel):
    data: List[Datum195]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageLocalizationAppPreviewSetsLinkagesResponse(BaseModel):
    data: List[Datum196]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageLocalizationAppScreenshotSetsLinkagesResponse(BaseModel):
    data: List[Datum197]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageVersionAppCustomProductPageLocalizationsLinkagesResponse(
    BaseModel
):
    data: List[Datum198]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageAppCustomProductPageVersionsLinkagesResponse(BaseModel):
    data: List[Datum199]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppWithoutIncludesResponse(BaseModel):
    data: AppModel
    links: DocumentLinks


class AppEncryptionDeclarationAppLinkageResponse(BaseModel):
    data: Data662
    links: DocumentLinks


class AppEncryptionDeclarationAppEncryptionDeclarationDocumentLinkageResponse(
    BaseModel
):
    data: Data663
    links: DocumentLinks


class AppEventLocalizationAppEventScreenshotsLinkagesResponse(BaseModel):
    data: List[Datum201]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEventLocalizationAppEventVideoClipsLinkagesResponse(BaseModel):
    data: List[Datum202]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEventLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum203]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppInfoAgeRatingDeclarationLinkageResponse(BaseModel):
    data: Data664
    links: DocumentLinks


class AppInfoAppInfoLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum204]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppInfoPrimaryCategoryLinkageResponse(BaseModel):
    data: Data665
    links: DocumentLinks


class AppInfoPrimarySubcategoryOneLinkageResponse(BaseModel):
    data: Data665
    links: DocumentLinks


class AppInfoPrimarySubcategoryTwoLinkageResponse(BaseModel):
    data: Data665
    links: DocumentLinks


class AppInfoSecondaryCategoryLinkageResponse(BaseModel):
    data: Data665
    links: DocumentLinks


class AppInfoSecondarySubcategoryOneLinkageResponse(BaseModel):
    data: Data665
    links: DocumentLinks


class AppInfoSecondarySubcategoryTwoLinkageResponse(BaseModel):
    data: Data665
    links: DocumentLinks


class AppPreviewSetAppPreviewsLinkagesResponse(BaseModel):
    data: List[Datum205]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPricePointV3EqualizationsLinkagesResponse(BaseModel):
    data: List[Datum207]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPriceScheduleAutomaticPricesLinkagesResponse(BaseModel):
    data: List[Datum208]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPriceScheduleBaseTerritoryLinkageResponse(BaseModel):
    data: Data671
    links: DocumentLinks


class AppPriceScheduleManualPricesLinkagesResponse(BaseModel):
    data: List[Datum208]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppScreenshotSetAppScreenshotsLinkagesResponse(BaseModel):
    data: List[Datum210]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreReviewDetailAppStoreReviewAttachmentsLinkagesResponse(BaseModel):
    data: List[Datum212]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentTreatmentLocalizationAppPreviewSetsLinkagesResponse(
    BaseModel
):
    data: List[Datum213]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentTreatmentLocalizationAppScreenshotSetsLinkagesResponse(
    BaseModel
):
    data: List[Datum214]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentTreatmentAppStoreVersionExperimentTreatmentLocalizationsLinkagesResponse(
    BaseModel
):
    data: List[Datum215]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentV2AppStoreVersionExperimentTreatmentsLinkagesResponse(
    BaseModel
):
    data: List[Datum216]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentAppStoreVersionExperimentTreatmentsLinkagesResponse(
    BaseModel
):
    data: List[Datum216]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionLocalizationAppPreviewSetsLinkagesResponse(BaseModel):
    data: List[Datum218]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionLocalizationAppScreenshotSetsLinkagesResponse(BaseModel):
    data: List[Datum219]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AgeRatingDeclarationWithoutIncludesResponse(BaseModel):
    data: AgeRatingDeclaration
    links: DocumentLinks


class AppStoreVersionAgeRatingDeclarationLinkageResponse(BaseModel):
    data: Data672
    links: DocumentLinks


class AppStoreVersionAlternativeDistributionPackageLinkageResponse(BaseModel):
    data: Data673
    links: DocumentLinks


class AppStoreVersionAppClipDefaultExperienceLinkageResponse(BaseModel):
    data: Data674
    links: DocumentLinks


class AppStoreVersionAppStoreReviewDetailLinkageResponse(BaseModel):
    data: Data676
    links: DocumentLinks


class AppStoreVersionAppStoreVersionExperimentsLinkagesResponse(BaseModel):
    data: List[Datum220]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionAppStoreVersionExperimentsV2LinkagesResponse(BaseModel):
    data: List[Datum220]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionAppStoreVersionLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum222]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionPhasedReleaseWithoutIncludesResponse(BaseModel):
    data: AppStoreVersionPhasedRelease
    links: DocumentLinks


class AppStoreVersionAppStoreVersionPhasedReleaseLinkageResponse(BaseModel):
    data: Data677
    links: DocumentLinks


class AppStoreVersionAppStoreVersionSubmissionLinkageResponse(BaseModel):
    data: Data678
    links: DocumentLinks


class BuildWithoutIncludesResponse(BaseModel):
    data: Build
    links: DocumentLinks


class AppStoreVersionBuildLinkageResponse(BaseModel):
    data: Data679
    links: DocumentLinks


class AppStoreVersionCustomerReviewsLinkagesResponse(BaseModel):
    data: List[Datum223]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionGameCenterAppVersionLinkageResponse(BaseModel):
    data: Data681
    links: DocumentLinks


class AppStoreVersionRoutingAppCoverageLinkageResponse(BaseModel):
    data: Data682
    links: DocumentLinks


class AppAccessibilityDeclarationsLinkagesResponse(BaseModel):
    data: List[Datum224]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAlternativeDistributionKeyLinkageResponse(BaseModel):
    data: Data683
    links: DocumentLinks


class AppAnalyticsReportRequestsLinkagesResponse(BaseModel):
    data: List[Datum225]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppAvailabilityV2LinkageResponse(BaseModel):
    data: Data684
    links: DocumentLinks


class AppAppClipsLinkagesResponse(BaseModel):
    data: List[Datum226]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppCustomProductPagesLinkagesResponse(BaseModel):
    data: List[Datum227]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppEncryptionDeclarationsLinkagesResponse(BaseModel):
    data: List[Datum228]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppEventsLinkagesResponse(BaseModel):
    data: List[Datum229]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppInfosLinkagesResponse(BaseModel):
    data: List[Datum230]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppPricePointsLinkagesResponse(BaseModel):
    data: List[Datum231]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppPriceScheduleLinkageResponse(BaseModel):
    data: Data685
    links: DocumentLinks


class AppAppStoreVersionExperimentsV2LinkagesResponse(BaseModel):
    data: List[Datum232]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppAppStoreVersionsLinkagesResponse(BaseModel):
    data: List[Datum233]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppBackgroundAssetsLinkagesResponse(BaseModel):
    data: List[Datum234]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppLocalizationsWithoutIncludesResponse(BaseModel):
    data: List[BetaAppLocalization]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppBetaAppLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum235]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppReviewDetailWithoutIncludesResponse(BaseModel):
    data: BetaAppReviewDetailModel
    links: DocumentLinks


class AppBetaAppReviewDetailLinkageResponse(BaseModel):
    data: Data686
    links: DocumentLinks


class AppBetaFeedbackCrashSubmissionsLinkagesResponse(BaseModel):
    data: List[Datum236]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppBetaFeedbackScreenshotSubmissionsLinkagesResponse(BaseModel):
    data: List[Datum237]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaGroupsWithoutIncludesResponse(BaseModel):
    data: List[BetaGroup]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppBetaGroupsLinkagesResponse(BaseModel):
    data: List[Datum238]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaLicenseAgreementWithoutIncludesResponse(BaseModel):
    data: BetaLicenseAgreementModel
    links: DocumentLinks


class AppBetaLicenseAgreementLinkageResponse(BaseModel):
    data: Data687
    links: DocumentLinks


class BuildsWithoutIncludesResponse(BaseModel):
    data: List[Build]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppBuildsLinkagesResponse(BaseModel):
    data: List[Datum240]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCiProductLinkageResponse(BaseModel):
    data: Data688
    links: DocumentLinks


class AppCustomerReviewsLinkagesResponse(BaseModel):
    data: List[Datum241]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class EndUserLicenseAgreementWithoutIncludesResponse(BaseModel):
    data: EndUserLicenseAgreementModel
    links: DocumentLinks


class AppEndUserLicenseAgreementLinkageResponse(BaseModel):
    data: Data689
    links: DocumentLinks


class AppGameCenterDetailLinkageResponse(BaseModel):
    data: Data690
    links: DocumentLinks


class AppGameCenterEnabledVersionsLinkagesResponse(BaseModel):
    data: List[Datum242]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppInAppPurchasesLinkagesResponse(BaseModel):
    data: List[Datum243]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppInAppPurchasesV2LinkagesResponse(BaseModel):
    data: List[Datum243]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppMarketplaceSearchDetailLinkageResponse(BaseModel):
    data: Data691
    links: DocumentLinks


class AppPerfPowerMetricsLinkagesResponse(BaseModel):
    data: List[Datum245]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PreReleaseVersionsWithoutIncludesResponse(BaseModel):
    data: List[PrereleaseVersion]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPreReleaseVersionsLinkagesResponse(BaseModel):
    data: List[Datum246]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPromotedPurchasesLinkagesResponse(BaseModel):
    data: List[Datum247]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppReviewSubmissionsLinkagesResponse(BaseModel):
    data: List[Datum249]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppSubscriptionGracePeriodLinkageResponse(BaseModel):
    data: Data692
    links: DocumentLinks


class AppSubscriptionGroupsLinkagesResponse(BaseModel):
    data: List[Datum250]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppWebhooksLinkagesResponse(BaseModel):
    data: List[Datum251]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BackgroundAssetVersionBackgroundAssetUploadFilesLinkagesResponse(BaseModel):
    data: List[Datum252]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BackgroundAssetVersionsLinkagesResponse(BaseModel):
    data: List[Datum253]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppLocalizationAppLinkageResponse(BaseModel):
    data: Data693
    links: DocumentLinks


class BetaAppReviewDetailAppLinkageResponse(BaseModel):
    data: Data693
    links: DocumentLinks


class BetaAppReviewSubmissionBuildLinkageResponse(BaseModel):
    data: Data695
    links: DocumentLinks


class BetaBuildLocalizationBuildLinkageResponse(BaseModel):
    data: Data695
    links: DocumentLinks


class BetaFeedbackCrashSubmissionCrashLogLinkageResponse(BaseModel):
    data: Data697
    links: DocumentLinks


class BetaGroupAppLinkageResponse(BaseModel):
    data: Data698
    links: DocumentLinks


class BetaGroupBetaRecruitmentCriteriaLinkageResponse(BaseModel):
    data: Data699
    links: DocumentLinks


class BetaGroupBetaRecruitmentCriterionCompatibleBuildCheckLinkageResponse(BaseModel):
    data: Data700
    links: DocumentLinks


class BetaTestersWithoutIncludesResponse(BaseModel):
    data: List[BetaTester]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaGroupBetaTestersLinkagesResponse(BaseModel):
    data: List[Datum254]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaGroupBuildsLinkagesResponse(BaseModel):
    data: List[Datum256]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaLicenseAgreementAppLinkageResponse(BaseModel):
    data: Data701
    links: DocumentLinks


class AppsWithoutIncludesResponse(BaseModel):
    data: List[AppModel]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaTesterAppsLinkagesResponse(BaseModel):
    data: List[Datum258]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaTesterBetaGroupsLinkagesResponse(BaseModel):
    data: List[Datum260]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaTesterBuildsLinkagesResponse(BaseModel):
    data: List[Datum262]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildBetaDetailBuildLinkageResponse(BaseModel):
    data: Data702
    links: DocumentLinks


class BuildBundleAppClipDomainCacheStatusLinkageResponse(BaseModel):
    data: Data703
    links: DocumentLinks


class BuildBundleAppClipDomainDebugStatusLinkageResponse(BaseModel):
    data: Data703
    links: DocumentLinks


class BuildBundleBetaAppClipInvocationsLinkagesResponse(BaseModel):
    data: List[Datum264]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildBundleBuildBundleFileSizesLinkagesResponse(BaseModel):
    data: List[Datum265]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildAppLinkageResponse(BaseModel):
    data: Data705
    links: DocumentLinks


class AppEncryptionDeclarationWithoutIncludesResponse(BaseModel):
    data: AppEncryptionDeclaration1
    links: DocumentLinks


class BuildAppEncryptionDeclarationLinkageResponse(BaseModel):
    data: Data706
    links: DocumentLinks


class BuildAppStoreVersionLinkageResponse(BaseModel):
    data: Data708
    links: DocumentLinks


class BetaAppReviewSubmissionWithoutIncludesResponse(BaseModel):
    data: BetaAppReviewSubmission
    links: DocumentLinks


class BuildBetaAppReviewSubmissionLinkageResponse(BaseModel):
    data: Data709
    links: DocumentLinks


class BetaBuildLocalizationsWithoutIncludesResponse(BaseModel):
    data: List[BetaBuildLocalization]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildBetaBuildLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum266]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildBuildBetaDetailLinkageResponse(BaseModel):
    data: Data710
    links: DocumentLinks


class BuildDiagnosticSignaturesLinkagesResponse(BaseModel):
    data: List[Datum268]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildIconsWithoutIncludesResponse(BaseModel):
    data: List[BuildIcon]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildIconsLinkagesResponse(BaseModel):
    data: List[Datum269]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildIndividualTestersLinkagesResponse(BaseModel):
    data: List[Datum270]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildPerfPowerMetricsLinkagesResponse(BaseModel):
    data: List[Datum272]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PrereleaseVersionWithoutIncludesResponse(BaseModel):
    data: PrereleaseVersion
    links: DocumentLinks


class BuildPreReleaseVersionLinkageResponse(BaseModel):
    data: Data711
    links: DocumentLinks


class BundleIdAppLinkageResponse(BaseModel):
    data: Data712
    links: DocumentLinks


class BundleIdCapabilitiesWithoutIncludesResponse(BaseModel):
    data: List[BundleIdCapability]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BundleIdBundleIdCapabilitiesLinkagesResponse(BaseModel):
    data: List[Datum273]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ProfilesWithoutIncludesResponse(BaseModel):
    data: List[Profile]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BundleIdProfilesLinkagesResponse(BaseModel):
    data: List[Datum274]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CertificatePassTypeIdLinkageResponse(BaseModel):
    data: Data713
    links: DocumentLinks


class CiBuildActionArtifactsLinkagesResponse(BaseModel):
    data: List[Datum275]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiBuildActionBuildRunLinkageResponse(BaseModel):
    data: Data714
    links: DocumentLinks


class CiBuildActionIssuesLinkagesResponse(BaseModel):
    data: List[Datum276]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiBuildActionTestResultsLinkagesResponse(BaseModel):
    data: List[Datum277]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiBuildRunActionsLinkagesResponse(BaseModel):
    data: List[Datum278]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiBuildRunBuildsLinkagesResponse(BaseModel):
    data: List[Datum279]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiMacOsVersionXcodeVersionsLinkagesResponse(BaseModel):
    data: List[Datum280]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiProductAdditionalRepositoriesLinkagesResponse(BaseModel):
    data: List[Datum281]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiProductAppLinkageResponse(BaseModel):
    data: Data715
    links: DocumentLinks


class CiProductBuildRunsLinkagesResponse(BaseModel):
    data: List[Datum282]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiProductPrimaryRepositoriesLinkagesResponse(BaseModel):
    data: List[Datum283]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiProductWorkflowsLinkagesResponse(BaseModel):
    data: List[Datum284]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiWorkflowBuildRunsLinkagesResponse(BaseModel):
    data: List[Datum285]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiWorkflowRepositoryLinkageResponse(BaseModel):
    data: Data716
    links: DocumentLinks


class CiXcodeVersionMacOsVersionsLinkagesResponse(BaseModel):
    data: List[Datum286]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CustomerReviewResponseLinkageResponse(BaseModel):
    data: Data717
    links: DocumentLinks


class DiagnosticSignatureLogsLinkagesResponse(BaseModel):
    data: List[Datum287]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class TerritoriesWithoutIncludesResponse(BaseModel):
    data: List[TerritoryModel]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class EndUserLicenseAgreementTerritoriesLinkagesResponse(BaseModel):
    data: List[Datum288]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAchievementLocalizationGameCenterAchievementLinkageResponse(BaseModel):
    data: Data718
    links: DocumentLinks


class GameCenterAchievementLocalizationGameCenterAchievementImageLinkageResponse(
    BaseModel
):
    data: Data719
    links: DocumentLinks


class GameCenterAchievementGroupAchievementLinkageResponse(BaseModel):
    data: Data721
    links: DocumentLinks


class GameCenterAchievementLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum289]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAchievementReleasesLinkagesResponse(BaseModel):
    data: List[Datum290]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterActivityVersionsLinkagesResponse(BaseModel):
    data: List[Datum293]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterActivityLocalizationImageLinkageResponse(BaseModel):
    data: Data723
    links: DocumentLinks


class GameCenterActivityVersionDefaultImageLinkageResponse(BaseModel):
    data: Data723
    links: DocumentLinks


class GameCenterActivityVersionLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum294]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAppVersionAppStoreVersionLinkageResponse(BaseModel):
    data: Data725
    links: DocumentLinks


class GameCenterAppVersionCompatibilityVersionsLinkagesResponse(BaseModel):
    data: List[Datum295]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterChallengeLocalizationImageLinkageResponse(BaseModel):
    data: Data726
    links: DocumentLinks


class GameCenterChallengeVersionDefaultImageLinkageResponse(BaseModel):
    data: Data726
    links: DocumentLinks


class GameCenterChallengeVersionLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum297]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterChallengeVersionsLinkagesResponse(BaseModel):
    data: List[Datum298]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailAchievementReleasesLinkagesResponse(BaseModel):
    data: List[Datum299]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailActivityReleasesLinkagesResponse(BaseModel):
    data: List[Datum300]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailChallengeReleasesLinkagesResponse(BaseModel):
    data: List[Datum301]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailGameCenterAchievementsLinkagesResponse(BaseModel):
    data: List[Datum303]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailGameCenterActivitiesLinkagesResponse(BaseModel):
    data: List[Datum305]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailGameCenterAppVersionsLinkagesResponse(BaseModel):
    data: List[Datum306]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailGameCenterChallengesLinkagesResponse(BaseModel):
    data: List[Datum307]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailGameCenterGroupLinkageResponse(BaseModel):
    data: Data729
    links: DocumentLinks


class GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse(BaseModel):
    data: List[Datum308]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailGameCenterLeaderboardsLinkagesResponse(BaseModel):
    data: List[Datum310]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailLeaderboardReleasesLinkagesResponse(BaseModel):
    data: List[Datum312]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailLeaderboardSetReleasesLinkagesResponse(BaseModel):
    data: List[Datum313]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterEnabledVersionCompatibleVersionsLinkagesResponse(BaseModel):
    data: List[Datum314]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupGameCenterAchievementsLinkagesResponse(BaseModel):
    data: List[Datum316]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupGameCenterActivitiesLinkagesResponse(BaseModel):
    data: List[Datum318]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupGameCenterChallengesLinkagesResponse(BaseModel):
    data: List[Datum319]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupGameCenterDetailsLinkagesResponse(BaseModel):
    data: List[Datum320]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupGameCenterLeaderboardSetsLinkagesResponse(BaseModel):
    data: List[Datum321]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupGameCenterLeaderboardsLinkagesResponse(BaseModel):
    data: List[Datum323]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardLocalizationGameCenterLeaderboardImageLinkageResponse(
    BaseModel
):
    data: Data730
    links: DocumentLinks


class GameCenterLeaderboardSetLocalizationGameCenterLeaderboardSetImageLinkageResponse(
    BaseModel
):
    data: Data731
    links: DocumentLinks


class GameCenterLeaderboardSetMemberLocalizationGameCenterLeaderboardLinkageResponse(
    BaseModel
):
    data: Data732
    links: DocumentLinks


class GameCenterLeaderboardSetMemberLocalizationGameCenterLeaderboardSetLinkageResponse(
    BaseModel
):
    data: Data733
    links: DocumentLinks


class GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesResponse(BaseModel):
    data: List[Datum323]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardSetGroupLeaderboardSetLinkageResponse(BaseModel):
    data: Data733
    links: DocumentLinks


class GameCenterLeaderboardSetLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum327]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardSetReleasesLinkagesResponse(BaseModel):
    data: List[Datum328]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardGroupLeaderboardLinkageResponse(BaseModel):
    data: Data738
    links: DocumentLinks


class GameCenterLeaderboardLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum329]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardReleasesLinkagesResponse(BaseModel):
    data: List[Datum330]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingRuleSetMatchmakingQueuesLinkagesResponse(BaseModel):
    data: List[Datum331]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingRuleSetRulesLinkagesResponse(BaseModel):
    data: List[Datum332]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingRuleSetTeamsLinkagesResponse(BaseModel):
    data: List[Datum333]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseAvailabilityAvailableTerritoriesLinkagesResponse(BaseModel):
    data: List[Datum334]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchasePricePointEqualizationsLinkagesResponse(BaseModel):
    data: List[Datum335]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchasePriceScheduleAutomaticPricesLinkagesResponse(BaseModel):
    data: List[Datum336]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchasePriceScheduleBaseTerritoryLinkageResponse(BaseModel):
    data: Data740
    links: DocumentLinks


class InAppPurchasePriceScheduleManualPricesLinkagesResponse(BaseModel):
    data: List[Datum336]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseV2AppStoreReviewScreenshotLinkageResponse(BaseModel):
    data: Data741
    links: DocumentLinks


class InAppPurchaseV2ContentLinkageResponse(BaseModel):
    data: Data742
    links: DocumentLinks


class InAppPurchaseV2IapPriceScheduleLinkageResponse(BaseModel):
    data: Data743
    links: DocumentLinks


class InAppPurchaseV2ImagesLinkagesResponse(BaseModel):
    data: List[Datum338]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseV2InAppPurchaseAvailabilityLinkageResponse(BaseModel):
    data: Data744
    links: DocumentLinks


class InAppPurchaseV2InAppPurchaseLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum339]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseV2PricePointsLinkagesResponse(BaseModel):
    data: List[Datum340]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseV2PromotedPurchaseLinkageResponse(BaseModel):
    data: Data745
    links: DocumentLinks


class MerchantIdCertificatesLinkagesResponse(BaseModel):
    data: List[Datum341]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PassTypeIdCertificatesLinkagesResponse(BaseModel):
    data: List[Datum341]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PrereleaseVersionAppLinkageResponse(BaseModel):
    data: Data746
    links: DocumentLinks


class PrereleaseVersionBuildsLinkagesResponse(BaseModel):
    data: List[Datum343]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BundleIdWithoutIncludesResponse(BaseModel):
    data: BundleId1
    links: DocumentLinks


class ProfileBundleIdLinkageResponse(BaseModel):
    data: Data747
    links: DocumentLinks


class CertificatesWithoutIncludesResponse(BaseModel):
    data: List[Certificate]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ProfileCertificatesLinkagesResponse(BaseModel):
    data: List[Datum344]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class DevicesWithoutIncludesResponse(BaseModel):
    data: List[Device]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ProfileDevicesLinkagesResponse(BaseModel):
    data: List[Datum345]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ReviewSubmissionItemsLinkagesResponse(BaseModel):
    data: List[Datum346]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmProviderRepositoriesLinkagesResponse(BaseModel):
    data: List[Datum347]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmRepositoryGitReferencesLinkagesResponse(BaseModel):
    data: List[Datum348]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmRepositoryPullRequestsLinkagesResponse(BaseModel):
    data: List[Datum349]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionAvailabilityAvailableTerritoriesLinkagesResponse(BaseModel):
    data: List[Datum350]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionGroupSubscriptionGroupLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum351]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionGroupSubscriptionsLinkagesResponse(BaseModel):
    data: List[Datum352]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodeOneTimeUseCodeValuesLinkageResponse(BaseModel):
    data: Data748
    links: DocumentLinks


class SubscriptionOfferCodeCustomCodesLinkagesResponse(BaseModel):
    data: List[Datum353]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodeOneTimeUseCodesLinkagesResponse(BaseModel):
    data: List[Datum354]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodePricesLinkagesResponse(BaseModel):
    data: List[Datum355]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPricePointEqualizationsLinkagesResponse(BaseModel):
    data: List[Datum356]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPromotionalOfferPricesLinkagesResponse(BaseModel):
    data: List[Datum357]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionAppStoreReviewScreenshotLinkageResponse(BaseModel):
    data: Data749
    links: DocumentLinks


class SubscriptionImagesLinkagesResponse(BaseModel):
    data: List[Datum358]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionIntroductoryOffersLinkagesResponse(BaseModel):
    data: List[Datum359]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodesLinkagesResponse(BaseModel):
    data: List[Datum361]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPricePointsLinkagesResponse(BaseModel):
    data: List[Datum362]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPricesLinkagesResponse(BaseModel):
    data: List[Datum363]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPromotedPurchaseLinkageResponse(BaseModel):
    data: Data750
    links: DocumentLinks


class SubscriptionPromotionalOffersLinkagesResponse(BaseModel):
    data: List[Datum365]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionSubscriptionAvailabilityLinkageResponse(BaseModel):
    data: Data751
    links: DocumentLinks


class SubscriptionSubscriptionLocalizationsLinkagesResponse(BaseModel):
    data: List[Datum366]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionWinBackOffersLinkagesResponse(BaseModel):
    data: List[Datum367]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class UserInvitationVisibleAppsLinkagesResponse(BaseModel):
    data: List[Datum368]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class UserVisibleAppsLinkagesResponse(BaseModel):
    data: List[Datum368]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class WebhookDeliveriesLinkagesResponse(BaseModel):
    data: List[Datum371]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class WinBackOfferPricesLinkagesResponse(BaseModel):
    data: List[Datum372]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppsBetaTesterUsagesV1MetricResponse(BaseModel):
    data: List[Datum373]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None
    included: Optional[List[BetaTester]] = None


class BetaPublicLinkUsagesV1MetricResponse(BaseModel):
    data: List[Datum374]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaTesterUsagesV1MetricResponse(BaseModel):
    data: List[Datum375]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaBuildUsagesV1MetricResponse(BaseModel):
    data: List[Datum376]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingAppRequestsV1MetricResponse(BaseModel):
    data: List[Datum377]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingQueueSizesV1MetricResponse(BaseModel):
    data: List[Datum378]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingQueueRequestsV1MetricResponse(BaseModel):
    data: List[Datum379]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingSessionsV1MetricResponse(BaseModel):
    data: List[Datum380]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingBooleanRuleResultsV1MetricResponse(BaseModel):
    data: List[Datum381]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingNumberRuleResultsV1MetricResponse(BaseModel):
    data: List[Datum382]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingRuleErrorsV1MetricResponse(BaseModel):
    data: List[Datum383]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class Error(BaseModel):
    id: Optional[str] = None
    status: str
    code: str
    title: str
    detail: str
    source: Optional[Union[ErrorSourcePointer, ErrorSourceParameter]] = None
    links: Optional[ErrorLinks] = None
    meta: Optional[Dict[str, Any]] = None


class ErrorResponse(BaseModel):
    errors: Optional[List[Error]] = None


class AppMediaAssetState(BaseModel):
    errors: Optional[List[AppMediaStateError]] = None
    warnings: Optional[List[AppMediaStateError]] = None
    state: Optional[
        Literal["AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED"]
    ] = None


class AppMediaPreviewFrameImageState(BaseModel):
    errors: Optional[List[AppMediaStateError]] = None
    warnings: Optional[List[AppMediaStateError]] = None
    state: Optional[Literal["PROCESSING", "COMPLETE", "FAILED"]] = None


class CiFilesAndFoldersRule(BaseModel):
    mode: Optional[
        Literal["START_IF_ANY_FILE_MATCHES", "DO_NOT_START_IF_ALL_FILES_MATCH"]
    ] = None
    matchers: Optional[List[CiStartConditionFileMatcher]] = None


class CiManualTagStartCondition(BaseModel):
    source: Optional[CiTagPatterns] = None


class CiPullRequestStartCondition(BaseModel):
    source: Optional[CiBranchPatterns] = None
    destination: Optional[CiBranchPatterns] = None
    filesAndFoldersRule: Optional[CiFilesAndFoldersRule] = None
    autoCancel: Optional[bool] = None


class CiTagStartCondition(BaseModel):
    source: Optional[CiTagPatterns] = None
    filesAndFoldersRule: Optional[CiFilesAndFoldersRule] = None
    autoCancel: Optional[bool] = None


class CiTestDestination(BaseModel):
    deviceTypeName: Optional[str] = None
    deviceTypeIdentifier: Optional[str] = None
    runtimeName: Optional[str] = None
    runtimeIdentifier: Optional[str] = None
    kind: Optional[CiTestDestinationKind] = None


class DeliveryFileUploadOperation(BaseModel):
    method: Optional[str] = None
    url: Optional[str] = None
    length: Optional[conint(ge=1, le=9007199254740991)] = None
    offset: Optional[conint(ge=0, le=9007199254740991)] = None
    requestHeaders: Optional[List[HttpHeader]] = None
    expiration: Optional[AwareDatetime] = None
    partNumber: Optional[conint(ge=1, le=9007199254740991)] = None
    entityTag: Optional[str] = None


class DiagnosticInsight(BaseModel):
    insightType: Optional[DiagnosticInsightType] = None
    direction: Optional[DiagnosticInsightDirection] = None
    referenceVersions: Optional[List[ReferenceVersion]] = None


class PreviewFrameImage(BaseModel):
    image: Optional[ImageAsset] = None
    state: Optional[AppMediaPreviewFrameImageState] = None


class AlternativeDistributionPackageVersionsResponse(BaseModel):
    data: List[AlternativeDistributionPackageVersion]
    included: Optional[
        List[
            Union[
                AlternativeDistributionPackageVariant,
                AlternativeDistributionPackageDelta,
                AlternativeDistributionPackageModel,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AlternativeDistributionPackageVersionResponse(BaseModel):
    data: AlternativeDistributionPackageVersion
    included: Optional[
        List[
            Union[
                AlternativeDistributionPackageVariant,
                AlternativeDistributionPackageDelta,
                AlternativeDistributionPackageModel,
            ]
        ]
    ] = None
    links: DocumentLinks


class AnalyticsReportRequestsResponse(BaseModel):
    data: List[AnalyticsReportRequest]
    included: Optional[List[AnalyticsReport]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AnalyticsReportRequestResponse(BaseModel):
    data: AnalyticsReportRequest
    included: Optional[List[AnalyticsReport]] = None
    links: DocumentLinks


class AppAvailabilityV2Response(BaseModel):
    data: AppAvailabilityV2
    included: Optional[List[TerritoryAvailability]] = None
    links: DocumentLinks


class Attributes21(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class AppClipAdvancedExperienceImage(BaseModel):
    type: Literal["appClipAdvancedExperienceImages"]
    id: str
    attributes: Optional[Attributes21] = None
    links: Optional[ResourceLinks] = None


class AppClipAdvancedExperienceImageResponse(BaseModel):
    data: AppClipAdvancedExperienceImage
    links: DocumentLinks


class AppClipAdvancedExperiencesResponse(BaseModel):
    data: List[AppClipAdvancedExperience]
    included: Optional[
        List[
            Union[
                AppClipModel,
                AppClipAdvancedExperienceImage,
                AppClipAdvancedExperienceLocalization,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipAdvancedExperienceResponse(BaseModel):
    data: AppClipAdvancedExperience
    included: Optional[
        List[
            Union[
                AppClipModel,
                AppClipAdvancedExperienceImage,
                AppClipAdvancedExperienceLocalization,
            ]
        ]
    ] = None
    links: DocumentLinks


class AppClipAppStoreReviewDetailResponse(BaseModel):
    data: AppClipAppStoreReviewDetail
    included: Optional[List[AppClipDefaultExperienceModel]] = None
    links: DocumentLinks


class AppClipDefaultExperiencesResponse(BaseModel):
    data: List[AppClipDefaultExperienceModel]
    included: Optional[
        List[
            Union[
                AppClipModel,
                AppStoreVersionModel,
                AppClipDefaultExperienceLocalization,
                AppClipAppStoreReviewDetail,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipDefaultExperienceResponse(BaseModel):
    data: AppClipDefaultExperienceModel
    included: Optional[
        List[
            Union[
                AppClipModel,
                AppStoreVersionModel,
                AppClipDefaultExperienceLocalization,
                AppClipAppStoreReviewDetail,
            ]
        ]
    ] = None
    links: DocumentLinks


class AppClipHeaderImageModel(BaseModel):
    type: Literal["appClipHeaderImages"]
    id: str
    attributes: Optional[Attributes21] = None
    relationships: Optional[Relationships22] = None
    links: Optional[ResourceLinks] = None


class AppClipHeaderImageResponse(BaseModel):
    data: AppClipHeaderImageModel
    included: Optional[List[AppClipDefaultExperienceLocalization]] = None
    links: DocumentLinks


class AppClipsResponse(BaseModel):
    data: List[AppClipModel]
    included: Optional[List[Union[AppModel, AppClipDefaultExperienceModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipResponse(BaseModel):
    data: AppClipModel
    included: Optional[List[Union[AppModel, AppClipDefaultExperienceModel]]] = None
    links: DocumentLinks


class AppCustomProductPageLocalizationsResponse(BaseModel):
    data: List[AppCustomProductPageLocalization]
    included: Optional[
        List[Union[AppCustomProductPageVersionModel, AppScreenshotSet, AppPreviewSet]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageLocalizationResponse(BaseModel):
    data: AppCustomProductPageLocalization
    included: Optional[
        List[Union[AppCustomProductPageVersionModel, AppScreenshotSet, AppPreviewSet]]
    ] = None
    links: DocumentLinks


class AppCustomProductPageVersionsResponse(BaseModel):
    data: List[AppCustomProductPageVersionModel]
    included: Optional[
        List[Union[AppCustomProductPageModel, AppCustomProductPageLocalization]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageVersionResponse(BaseModel):
    data: AppCustomProductPageVersionModel
    included: Optional[
        List[Union[AppCustomProductPageModel, AppCustomProductPageLocalization]]
    ] = None
    links: DocumentLinks


class AppCustomProductPagesResponse(BaseModel):
    data: List[AppCustomProductPageModel]
    included: Optional[List[Union[AppModel, AppCustomProductPageVersionModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppCustomProductPageResponse(BaseModel):
    data: AppCustomProductPageModel
    included: Optional[List[Union[AppModel, AppCustomProductPageVersionModel]]] = None
    links: DocumentLinks


class Attributes54(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    assetToken: Optional[str] = None
    downloadUrl: Optional[AnyUrl] = None
    sourceFileChecksum: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class AppEncryptionDeclarationDocument(BaseModel):
    type: Literal["appEncryptionDeclarationDocuments"]
    id: str
    attributes: Optional[Attributes54] = None
    links: Optional[ResourceLinks] = None


class AppEncryptionDeclarationDocumentResponse(BaseModel):
    data: AppEncryptionDeclarationDocument
    links: DocumentLinks


class AppEncryptionDeclarationsResponse(BaseModel):
    data: List[AppEncryptionDeclaration1]
    included: Optional[
        List[Union[AppModel, Build, AppEncryptionDeclarationDocument]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEncryptionDeclarationResponse(BaseModel):
    data: AppEncryptionDeclaration1
    included: Optional[
        List[Union[AppModel, Build, AppEncryptionDeclarationDocument]]
    ] = None
    links: DocumentLinks


class Attributes62(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    assetToken: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None
    appEventAssetType: Optional[AppEventAssetType] = None


class AppEventScreenshot(BaseModel):
    type: Literal["appEventScreenshots"]
    id: str
    attributes: Optional[Attributes62] = None
    relationships: Optional[Relationships38] = None
    links: Optional[ResourceLinks] = None


class AppEventScreenshotsResponse(BaseModel):
    data: List[AppEventScreenshot]
    included: Optional[List[AppEventLocalization]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEventScreenshotResponse(BaseModel):
    data: AppEventScreenshot
    included: Optional[List[AppEventLocalization]] = None
    links: DocumentLinks


class Attributes65(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    previewFrameTimeCode: Optional[str] = None
    videoUrl: Optional[str] = None
    previewFrameImage: Optional[PreviewFrameImage] = None
    previewImage: Optional[ImageAsset] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None
    videoDeliveryState: Optional[AppMediaVideoState] = None
    appEventAssetType: Optional[AppEventAssetType] = None


class AppEventVideoClip(BaseModel):
    type: Literal["appEventVideoClips"]
    id: str
    attributes: Optional[Attributes65] = None
    relationships: Optional[Relationships40] = None
    links: Optional[ResourceLinks] = None


class AppEventVideoClipsResponse(BaseModel):
    data: List[AppEventVideoClip]
    included: Optional[List[AppEventLocalization]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEventVideoClipResponse(BaseModel):
    data: AppEventVideoClip
    included: Optional[List[AppEventLocalization]] = None
    links: DocumentLinks


class AppInfoLocalizationsResponse(BaseModel):
    data: List[AppInfoLocalization]
    included: Optional[List[AppInfoModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppInfoLocalizationResponse(BaseModel):
    data: AppInfoLocalization
    included: Optional[List[AppInfoModel]] = None
    links: DocumentLinks


class AppInfosResponse(BaseModel):
    data: List[AppInfoModel]
    included: Optional[
        List[Union[AppModel, AgeRatingDeclaration, AppInfoLocalization, AppCategory]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppInfoResponse(BaseModel):
    data: AppInfoModel
    included: Optional[
        List[Union[AppModel, AgeRatingDeclaration, AppInfoLocalization, AppCategory]]
    ] = None
    links: DocumentLinks


class Attributes77(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    previewFrameTimeCode: Optional[str] = None
    mimeType: Optional[str] = None
    videoUrl: Optional[str] = None
    previewFrameImage: Optional[PreviewFrameImage] = None
    previewImage: Optional[ImageAsset] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None
    videoDeliveryState: Optional[AppMediaVideoState] = None


class AppPreview(BaseModel):
    type: Literal["appPreviews"]
    id: str
    attributes: Optional[Attributes77] = None
    relationships: Optional[Relationships50] = None
    links: Optional[ResourceLinks] = None


class AppPreviewsResponse(BaseModel):
    data: List[AppPreview]
    included: Optional[List[AppPreviewSet]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPreviewResponse(BaseModel):
    data: AppPreview
    included: Optional[List[AppPreviewSet]] = None
    links: DocumentLinks


class AppPricePointsV3Response(BaseModel):
    data: List[AppPricePointV3]
    included: Optional[List[Union[AppModel, TerritoryModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPricePointV3Response(BaseModel):
    data: AppPricePointV3
    included: Optional[List[Union[AppModel, TerritoryModel]]] = None
    links: DocumentLinks


class AppPriceScheduleResponse(BaseModel):
    data: AppPriceSchedule
    included: Optional[List[Union[AppModel, TerritoryModel, AppPriceV2]]] = None
    links: DocumentLinks


class AppPricesV2Response(BaseModel):
    data: List[AppPriceV2]
    included: Optional[List[Union[AppPricePointV3, TerritoryModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class Attributes84(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    assetToken: Optional[str] = None
    assetType: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class AppScreenshot(BaseModel):
    type: Literal["appScreenshots"]
    id: str
    attributes: Optional[Attributes84] = None
    relationships: Optional[Relationships58] = None
    links: Optional[ResourceLinks] = None


class AppScreenshotsResponse(BaseModel):
    data: List[AppScreenshot]
    included: Optional[List[AppScreenshotSet]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppScreenshotResponse(BaseModel):
    data: AppScreenshot
    included: Optional[List[AppScreenshotSet]] = None
    links: DocumentLinks


class Attributes87(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class AppStoreReviewAttachment(BaseModel):
    type: Literal["appStoreReviewAttachments"]
    id: str
    attributes: Optional[Attributes87] = None
    relationships: Optional[Relationships60] = None
    links: Optional[ResourceLinks] = None


class AppStoreReviewAttachmentsResponse(BaseModel):
    data: List[AppStoreReviewAttachment]
    included: Optional[List[AppStoreReviewDetailModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreReviewAttachmentResponse(BaseModel):
    data: AppStoreReviewAttachment
    included: Optional[List[AppStoreReviewDetailModel]] = None
    links: DocumentLinks


class AppStoreReviewDetailResponse(BaseModel):
    data: AppStoreReviewDetailModel
    included: Optional[List[Union[AppStoreVersionModel, AppStoreReviewAttachment]]] = (
        None
    )
    links: DocumentLinks


class AppStoreVersionExperimentTreatmentLocalizationsResponse(BaseModel):
    data: List[AppStoreVersionExperimentTreatmentLocalizationModel]
    included: Optional[
        List[
            Union[
                AppStoreVersionExperimentTreatmentModel, AppScreenshotSet, AppPreviewSet
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentTreatmentLocalizationResponse(BaseModel):
    data: AppStoreVersionExperimentTreatmentLocalizationModel
    included: Optional[
        List[
            Union[
                AppStoreVersionExperimentTreatmentModel, AppScreenshotSet, AppPreviewSet
            ]
        ]
    ] = None
    links: DocumentLinks


class AppStoreVersionExperimentTreatmentsResponse(BaseModel):
    data: List[AppStoreVersionExperimentTreatmentModel]
    included: Optional[
        List[
            Union[
                AppStoreVersionExperimentModel,
                AppStoreVersionExperimentV2Model,
                AppStoreVersionExperimentTreatmentLocalizationModel,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentTreatmentResponse(BaseModel):
    data: AppStoreVersionExperimentTreatmentModel
    included: Optional[
        List[
            Union[
                AppStoreVersionExperimentModel,
                AppStoreVersionExperimentV2Model,
                AppStoreVersionExperimentTreatmentLocalizationModel,
            ]
        ]
    ] = None
    links: DocumentLinks


class AppStoreVersionExperimentsV2Response(BaseModel):
    data: List[AppStoreVersionExperimentV2Model]
    included: Optional[
        List[
            Union[
                AppModel, AppStoreVersionModel, AppStoreVersionExperimentTreatmentModel
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentV2Response(BaseModel):
    data: AppStoreVersionExperimentV2Model
    included: Optional[
        List[
            Union[
                AppModel, AppStoreVersionModel, AppStoreVersionExperimentTreatmentModel
            ]
        ]
    ] = None
    links: DocumentLinks


class AppStoreVersionExperimentsResponse(BaseModel):
    data: List[AppStoreVersionExperimentModel]
    included: Optional[
        List[Union[AppStoreVersionModel, AppStoreVersionExperimentTreatmentModel]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionExperimentResponse(BaseModel):
    data: AppStoreVersionExperimentModel
    included: Optional[
        List[Union[AppStoreVersionModel, AppStoreVersionExperimentTreatmentModel]]
    ] = None
    links: DocumentLinks


class AppStoreVersionLocalizationsResponse(BaseModel):
    data: List[AppStoreVersionLocalizationModel]
    included: Optional[
        List[Union[AppStoreVersionModel, AppScreenshotSet, AppPreviewSet]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionLocalizationResponse(BaseModel):
    data: AppStoreVersionLocalizationModel
    included: Optional[
        List[Union[AppStoreVersionModel, AppScreenshotSet, AppPreviewSet]]
    ] = None
    links: DocumentLinks


class AppStoreVersionSubmissionResponse(BaseModel):
    data: AppStoreVersionSubmission
    included: Optional[List[AppStoreVersionModel]] = None
    links: DocumentLinks


class AppsResponse(BaseModel):
    data: List[AppModel]
    included: Optional[
        List[
            Union[
                AppEncryptionDeclaration1,
                CiProductModel,
                BetaGroup,
                AppStoreVersionModel,
                PrereleaseVersion,
                BetaAppLocalization,
                Build,
                BetaLicenseAgreementModel,
                BetaAppReviewDetailModel,
                AppInfoModel,
                AppClipModel,
                EndUserLicenseAgreementModel,
                InAppPurchase,
                SubscriptionGroup,
                GameCenterEnabledVersion,
                AppCustomProductPageModel,
                InAppPurchaseV2,
                PromotedPurchase,
                AppEventModel,
                ReviewSubmission,
                SubscriptionGracePeriodModel,
                GameCenterDetailModel,
                AppStoreVersionExperimentV2Model,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppResponse(BaseModel):
    data: AppModel
    included: Optional[
        List[
            Union[
                AppEncryptionDeclaration1,
                CiProductModel,
                BetaGroup,
                AppStoreVersionModel,
                PrereleaseVersion,
                BetaAppLocalization,
                Build,
                BetaLicenseAgreementModel,
                BetaAppReviewDetailModel,
                AppInfoModel,
                AppClipModel,
                EndUserLicenseAgreementModel,
                InAppPurchase,
                SubscriptionGroup,
                GameCenterEnabledVersion,
                AppCustomProductPageModel,
                InAppPurchaseV2,
                PromotedPurchase,
                AppEventModel,
                ReviewSubmission,
                SubscriptionGracePeriodModel,
                GameCenterDetailModel,
                AppStoreVersionExperimentV2Model,
            ]
        ]
    ] = None
    links: DocumentLinks


class Attributes115(BaseModel):
    assetDeliveryState: Optional[AppMediaAssetState] = None
    assetToken: Optional[str] = None
    assetType: Optional[Literal["ASSET", "MANIFEST"]] = None
    fileName: Optional[str] = None
    fileSize: Optional[conint(ge=1, le=9007199254740991)] = None
    sourceFileChecksum: Optional[str] = None
    uploadOperations: Optional[List[DeliveryFileUploadOperation]] = None


class BackgroundAssetUploadFile(BaseModel):
    type: Literal["backgroundAssetUploadFiles"]
    id: str
    attributes: Optional[Attributes115] = None
    links: Optional[ResourceLinks] = None


class BackgroundAssetUploadFilesResponse(BaseModel):
    data: List[BackgroundAssetUploadFile]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BackgroundAssetUploadFileResponse(BaseModel):
    data: BackgroundAssetUploadFile
    links: DocumentLinks


class BackgroundAssetVersionInternalBetaReleaseResponse(BaseModel):
    data: BackgroundAssetVersionInternalBetaRelease
    included: Optional[List[BackgroundAssetVersionModel]] = None
    links: DocumentLinks


class BackgroundAssetVersionsResponse(BaseModel):
    data: List[BackgroundAssetVersionModel]
    included: Optional[
        List[
            Union[BackgroundAssetVersionInternalBetaRelease, BackgroundAssetUploadFile]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BackgroundAssetVersionResponse(BaseModel):
    data: BackgroundAssetVersionModel
    included: Optional[
        List[
            Union[BackgroundAssetVersionInternalBetaRelease, BackgroundAssetUploadFile]
        ]
    ] = None
    links: DocumentLinks


class BetaAppReviewSubmissionsResponse(BaseModel):
    data: List[BetaAppReviewSubmission]
    included: Optional[List[Build]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaAppReviewSubmissionResponse(BaseModel):
    data: BetaAppReviewSubmission
    included: Optional[List[Build]] = None
    links: DocumentLinks


class BetaBuildLocalizationsResponse(BaseModel):
    data: List[BetaBuildLocalization]
    included: Optional[List[Build]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaBuildLocalizationResponse(BaseModel):
    data: BetaBuildLocalization
    included: Optional[List[Build]] = None
    links: DocumentLinks


class BetaFeedbackCrashSubmissionsResponse(BaseModel):
    data: List[BetaFeedbackCrashSubmission]
    included: Optional[List[Union[Build, BetaTester]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaFeedbackCrashSubmissionResponse(BaseModel):
    data: BetaFeedbackCrashSubmission
    included: Optional[List[Union[Build, BetaTester]]] = None
    links: DocumentLinks


class BetaFeedbackScreenshotSubmissionsResponse(BaseModel):
    data: List[BetaFeedbackScreenshotSubmission]
    included: Optional[List[Union[Build, BetaTester]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaFeedbackScreenshotSubmissionResponse(BaseModel):
    data: BetaFeedbackScreenshotSubmission
    included: Optional[List[Union[Build, BetaTester]]] = None
    links: DocumentLinks


class BetaGroupsResponse(BaseModel):
    data: List[BetaGroup]
    included: Optional[
        List[Union[AppModel, Build, BetaTester, BetaRecruitmentCriterion]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaGroupResponse(BaseModel):
    data: BetaGroup
    included: Optional[
        List[Union[AppModel, Build, BetaTester, BetaRecruitmentCriterion]]
    ] = None
    links: DocumentLinks


class BetaTestersResponse(BaseModel):
    data: List[BetaTester]
    included: Optional[List[Union[AppModel, BetaGroup, Build]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BetaTesterResponse(BaseModel):
    data: BetaTester
    included: Optional[List[Union[AppModel, BetaGroup, Build]]] = None
    links: DocumentLinks


class BuildBetaDetailsResponse(BaseModel):
    data: List[BuildBetaDetail]
    included: Optional[List[Build]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildBetaDetailResponse(BaseModel):
    data: BuildBetaDetail
    included: Optional[List[Build]] = None
    links: DocumentLinks


class BuildsResponse(BaseModel):
    data: List[Build]
    included: Optional[
        List[
            Union[
                PrereleaseVersion,
                BetaTester,
                BetaGroup,
                BetaBuildLocalization,
                AppEncryptionDeclaration1,
                BetaAppReviewSubmission,
                AppModel,
                BuildBetaDetail,
                AppStoreVersionModel,
                BuildIcon,
                BuildBundle1,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BuildResponse(BaseModel):
    data: Build
    included: Optional[
        List[
            Union[
                PrereleaseVersion,
                BetaTester,
                BetaGroup,
                BetaBuildLocalization,
                AppEncryptionDeclaration1,
                BetaAppReviewSubmission,
                AppModel,
                BuildBetaDetail,
                AppStoreVersionModel,
                BuildIcon,
                BuildBundle1,
            ]
        ]
    ] = None
    links: DocumentLinks


class BundleIdsResponse(BaseModel):
    data: List[BundleId1]
    included: Optional[List[Union[Profile, BundleIdCapability, AppModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class BundleIdResponse(BaseModel):
    data: BundleId1
    included: Optional[List[Union[Profile, BundleIdCapability, AppModel]]] = None
    links: DocumentLinks


class CertificatesResponse(BaseModel):
    data: List[Certificate]
    included: Optional[List[PassTypeIdModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CertificateResponse(BaseModel):
    data: Certificate
    included: Optional[List[PassTypeIdModel]] = None
    links: DocumentLinks


class CiBuildActionsResponse(BaseModel):
    data: List[CiBuildAction]
    included: Optional[List[CiBuildRun]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiBuildActionResponse(BaseModel):
    data: CiBuildAction
    included: Optional[List[CiBuildRun]] = None
    links: DocumentLinks


class CiMacOsVersionsResponse(BaseModel):
    data: List[CiMacOsVersion]
    included: Optional[List[CiXcodeVersion]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiMacOsVersionResponse(BaseModel):
    data: CiMacOsVersion
    included: Optional[List[CiXcodeVersion]] = None
    links: DocumentLinks


class CiProductsResponse(BaseModel):
    data: List[CiProductModel]
    included: Optional[List[Union[AppModel, BundleId1, ScmRepository]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiProductResponse(BaseModel):
    data: CiProductModel
    included: Optional[List[Union[AppModel, BundleId1, ScmRepository]]] = None
    links: DocumentLinks


class CustomerReviewResponseV1Response(BaseModel):
    data: CustomerReviewResponseV1
    included: Optional[List[CustomerReview]] = None
    links: DocumentLinks


class CustomerReviewSummarizationsResponse(BaseModel):
    data: List[CustomerReviewSummarization]
    included: Optional[List[TerritoryModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class Attributes188(BaseModel):
    diagnosticType: Optional[Literal["DISK_WRITES", "HANGS", "LAUNCHES"]] = None
    signature: Optional[str] = None
    weight: Optional[float] = None
    insight: Optional[DiagnosticInsight] = None


class DiagnosticSignature(BaseModel):
    type: Literal["diagnosticSignatures"]
    id: str
    attributes: Optional[Attributes188] = None
    relationships: Optional[Relationships130] = None
    links: Optional[ResourceLinks] = None


class DiagnosticSignaturesResponse(BaseModel):
    data: List[DiagnosticSignature]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class EndUserLicenseAgreementResponse(BaseModel):
    data: EndUserLicenseAgreementModel
    included: Optional[List[Union[AppModel, TerritoryModel]]] = None
    links: DocumentLinks


class Attributes192(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class GameCenterAchievementImage(BaseModel):
    type: Literal["gameCenterAchievementImages"]
    id: str
    attributes: Optional[Attributes192] = None
    relationships: Optional[Relationships135] = None
    links: Optional[ResourceLinks] = None


class GameCenterAchievementImageResponse(BaseModel):
    data: GameCenterAchievementImage
    included: Optional[List[GameCenterAchievementLocalizationModel]] = None
    links: DocumentLinks


class GameCenterAchievementLocalizationsResponse(BaseModel):
    data: List[GameCenterAchievementLocalizationModel]
    included: Optional[
        List[Union[GameCenterAchievementModel, GameCenterAchievementImage]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAchievementLocalizationResponse(BaseModel):
    data: GameCenterAchievementLocalizationModel
    included: Optional[
        List[Union[GameCenterAchievementModel, GameCenterAchievementImage]]
    ] = None
    links: DocumentLinks


class GameCenterAchievementReleasesResponse(BaseModel):
    data: List[GameCenterAchievementRelease]
    included: Optional[
        List[Union[GameCenterDetailModel, GameCenterAchievementModel]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAchievementReleaseResponse(BaseModel):
    data: GameCenterAchievementRelease
    included: Optional[
        List[Union[GameCenterDetailModel, GameCenterAchievementModel]]
    ] = None
    links: DocumentLinks


class GameCenterAchievementsResponse(BaseModel):
    data: List[GameCenterAchievementModel]
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterAchievementModel,
                GameCenterAchievementLocalizationModel,
                GameCenterAchievementRelease,
                GameCenterActivity,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterAchievementResponse(BaseModel):
    data: GameCenterAchievementModel
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterAchievementModel,
                GameCenterAchievementLocalizationModel,
                GameCenterAchievementRelease,
                GameCenterActivity,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterActivitiesResponse(BaseModel):
    data: List[GameCenterActivity]
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterAchievementModel,
                GameCenterLeaderboard,
                GameCenterActivityVersion,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterActivityResponse(BaseModel):
    data: GameCenterActivity
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterAchievementModel,
                GameCenterLeaderboard,
                GameCenterActivityVersion,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterActivityImage(BaseModel):
    type: Literal["gameCenterActivityImages"]
    id: str
    attributes: Optional[Attributes192] = None
    links: Optional[ResourceLinks] = None


class GameCenterActivityImageResponse(BaseModel):
    data: GameCenterActivityImage
    links: DocumentLinks


class GameCenterActivityLocalizationsResponse(BaseModel):
    data: List[GameCenterActivityLocalization]
    included: Optional[
        List[Union[GameCenterActivityVersion, GameCenterActivityImage]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterActivityLocalizationResponse(BaseModel):
    data: GameCenterActivityLocalization
    included: Optional[
        List[Union[GameCenterActivityVersion, GameCenterActivityImage]]
    ] = None
    links: DocumentLinks


class GameCenterActivityVersionReleasesResponse(BaseModel):
    data: List[GameCenterActivityVersionRelease]
    included: Optional[List[GameCenterActivityVersion]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterActivityVersionReleaseResponse(BaseModel):
    data: GameCenterActivityVersionRelease
    included: Optional[List[GameCenterActivityVersion]] = None
    links: DocumentLinks


class GameCenterActivityVersionsResponse(BaseModel):
    data: List[GameCenterActivityVersion]
    included: Optional[
        List[
            Union[
                GameCenterActivity,
                GameCenterActivityLocalization,
                GameCenterActivityImage,
                GameCenterActivityVersionRelease,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterActivityVersionResponse(BaseModel):
    data: GameCenterActivityVersion
    included: Optional[
        List[
            Union[
                GameCenterActivity,
                GameCenterActivityLocalization,
                GameCenterActivityImage,
                GameCenterActivityVersionRelease,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterChallengeImage(BaseModel):
    type: Literal["gameCenterChallengeImages"]
    id: str
    attributes: Optional[Attributes192] = None
    links: Optional[ResourceLinks] = None


class GameCenterChallengeImageResponse(BaseModel):
    data: GameCenterChallengeImage
    links: DocumentLinks


class GameCenterChallengeLocalizationsResponse(BaseModel):
    data: List[GameCenterChallengeLocalization]
    included: Optional[
        List[Union[GameCenterChallengeVersion, GameCenterChallengeImage]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterChallengeLocalizationResponse(BaseModel):
    data: GameCenterChallengeLocalization
    included: Optional[
        List[Union[GameCenterChallengeVersion, GameCenterChallengeImage]]
    ] = None
    links: DocumentLinks


class GameCenterChallengeVersionReleasesResponse(BaseModel):
    data: List[GameCenterChallengeVersionRelease]
    included: Optional[List[GameCenterChallengeVersion]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterChallengeVersionReleaseResponse(BaseModel):
    data: GameCenterChallengeVersionRelease
    included: Optional[List[GameCenterChallengeVersion]] = None
    links: DocumentLinks


class GameCenterChallengeVersionsResponse(BaseModel):
    data: List[GameCenterChallengeVersion]
    included: Optional[
        List[
            Union[
                GameCenterChallenge,
                GameCenterChallengeLocalization,
                GameCenterChallengeVersionRelease,
                GameCenterChallengeImage,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterChallengeVersionResponse(BaseModel):
    data: GameCenterChallengeVersion
    included: Optional[
        List[
            Union[
                GameCenterChallenge,
                GameCenterChallengeLocalization,
                GameCenterChallengeVersionRelease,
                GameCenterChallengeImage,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterChallengesResponse(BaseModel):
    data: List[GameCenterChallenge]
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterChallengeVersion,
                GameCenterLeaderboard,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterChallengeResponse(BaseModel):
    data: GameCenterChallenge
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterChallengeVersion,
                GameCenterLeaderboard,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterDetailsResponse(BaseModel):
    data: List[GameCenterDetailModel]
    included: Optional[
        List[
            Union[
                AppModel,
                GameCenterAppVersionModel,
                GameCenterGroupModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSet,
                GameCenterAchievementModel,
                GameCenterActivity,
                GameCenterChallenge,
                GameCenterAchievementRelease,
                GameCenterActivityVersionRelease,
                GameCenterChallengeVersionRelease,
                GameCenterLeaderboardRelease,
                GameCenterLeaderboardSetRelease,
                AppStoreVersionModel,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterDetailResponse(BaseModel):
    data: GameCenterDetailModel
    included: Optional[
        List[
            Union[
                AppModel,
                GameCenterAppVersionModel,
                GameCenterGroupModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSet,
                GameCenterAchievementModel,
                GameCenterActivity,
                GameCenterChallenge,
                GameCenterAchievementRelease,
                GameCenterActivityVersionRelease,
                GameCenterChallengeVersionRelease,
                GameCenterLeaderboardRelease,
                GameCenterLeaderboardSetRelease,
                AppStoreVersionModel,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterGroupsResponse(BaseModel):
    data: List[GameCenterGroupModel]
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSet,
                GameCenterAchievementModel,
                GameCenterActivity,
                GameCenterChallenge,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterGroupResponse(BaseModel):
    data: GameCenterGroupModel
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSet,
                GameCenterAchievementModel,
                GameCenterActivity,
                GameCenterChallenge,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterLeaderboardImage(BaseModel):
    type: Literal["gameCenterLeaderboardImages"]
    id: str
    attributes: Optional[Attributes192] = None
    relationships: Optional[Relationships169] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardImageResponse(BaseModel):
    data: GameCenterLeaderboardImage
    included: Optional[List[GameCenterLeaderboardLocalizationModel]] = None
    links: DocumentLinks


class GameCenterLeaderboardLocalizationsResponse(BaseModel):
    data: List[GameCenterLeaderboardLocalizationModel]
    included: Optional[
        List[Union[GameCenterLeaderboard, GameCenterLeaderboardImage]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardLocalizationResponse(BaseModel):
    data: GameCenterLeaderboardLocalizationModel
    included: Optional[
        List[Union[GameCenterLeaderboard, GameCenterLeaderboardImage]]
    ] = None
    links: DocumentLinks


class GameCenterLeaderboardReleasesResponse(BaseModel):
    data: List[GameCenterLeaderboardRelease]
    included: Optional[List[Union[GameCenterDetailModel, GameCenterLeaderboard]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardReleaseResponse(BaseModel):
    data: GameCenterLeaderboardRelease
    included: Optional[List[Union[GameCenterDetailModel, GameCenterLeaderboard]]] = None
    links: DocumentLinks


class GameCenterLeaderboardSetImage(BaseModel):
    type: Literal["gameCenterLeaderboardSetImages"]
    id: str
    attributes: Optional[Attributes192] = None
    relationships: Optional[Relationships175] = None
    links: Optional[ResourceLinks] = None


class GameCenterLeaderboardSetImageResponse(BaseModel):
    data: GameCenterLeaderboardSetImage
    included: Optional[List[GameCenterLeaderboardSetLocalizationModel]] = None
    links: DocumentLinks


class GameCenterLeaderboardSetLocalizationsResponse(BaseModel):
    data: List[GameCenterLeaderboardSetLocalizationModel]
    included: Optional[
        List[Union[GameCenterLeaderboardSet, GameCenterLeaderboardSetImage]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardSetLocalizationResponse(BaseModel):
    data: GameCenterLeaderboardSetLocalizationModel
    included: Optional[
        List[Union[GameCenterLeaderboardSet, GameCenterLeaderboardSetImage]]
    ] = None
    links: DocumentLinks


class GameCenterLeaderboardSetMemberLocalizationsResponse(BaseModel):
    data: List[GameCenterLeaderboardSetMemberLocalization]
    included: Optional[List[Union[GameCenterLeaderboardSet, GameCenterLeaderboard]]] = (
        None
    )
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardSetMemberLocalizationResponse(BaseModel):
    data: GameCenterLeaderboardSetMemberLocalization
    included: Optional[List[Union[GameCenterLeaderboardSet, GameCenterLeaderboard]]] = (
        None
    )
    links: DocumentLinks


class GameCenterLeaderboardSetReleasesResponse(BaseModel):
    data: List[GameCenterLeaderboardSetRelease]
    included: Optional[List[Union[GameCenterDetailModel, GameCenterLeaderboardSet]]] = (
        None
    )
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardSetReleaseResponse(BaseModel):
    data: GameCenterLeaderboardSetRelease
    included: Optional[List[Union[GameCenterDetailModel, GameCenterLeaderboardSet]]] = (
        None
    )
    links: DocumentLinks


class GameCenterLeaderboardSetsResponse(BaseModel):
    data: List[GameCenterLeaderboardSet]
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterLeaderboardSet,
                GameCenterLeaderboardSetLocalizationModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSetRelease,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterLeaderboardSetResponse(BaseModel):
    data: GameCenterLeaderboardSet
    included: Optional[
        List[
            Union[
                GameCenterDetailModel,
                GameCenterGroupModel,
                GameCenterLeaderboardSet,
                GameCenterLeaderboardSetLocalizationModel,
                GameCenterLeaderboard,
                GameCenterLeaderboardSetRelease,
            ]
        ]
    ] = None
    links: DocumentLinks


class GameCenterMatchmakingQueuesResponse(BaseModel):
    data: List[GameCenterMatchmakingQueue]
    included: Optional[List[GameCenterMatchmakingRuleSet]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingQueueResponse(BaseModel):
    data: GameCenterMatchmakingQueue
    included: Optional[List[GameCenterMatchmakingRuleSet]] = None
    links: DocumentLinks


class GameCenterMatchmakingRuleSetTestCreateRequest(BaseModel):
    data: Data458
    included: Optional[
        List[
            Union[
                GameCenterMatchmakingTestPlayerPropertyInlineCreate,
                GameCenterMatchmakingTestRequestInlineCreate,
            ]
        ]
    ] = None


class GameCenterMatchmakingRuleSetsResponse(BaseModel):
    data: List[GameCenterMatchmakingRuleSet]
    included: Optional[
        List[
            Union[
                GameCenterMatchmakingTeam,
                GameCenterMatchmakingRule,
                GameCenterMatchmakingQueue,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class GameCenterMatchmakingRuleSetResponse(BaseModel):
    data: GameCenterMatchmakingRuleSet
    included: Optional[
        List[
            Union[
                GameCenterMatchmakingTeam,
                GameCenterMatchmakingRule,
                GameCenterMatchmakingQueue,
            ]
        ]
    ] = None
    links: DocumentLinks


class Attributes275(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    assetToken: Optional[str] = None
    assetType: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class InAppPurchaseAppStoreReviewScreenshot(BaseModel):
    type: Literal["inAppPurchaseAppStoreReviewScreenshots"]
    id: str
    attributes: Optional[Attributes275] = None
    relationships: Optional[Relationships195] = None
    links: Optional[ResourceLinks] = None


class InAppPurchaseAppStoreReviewScreenshotResponse(BaseModel):
    data: InAppPurchaseAppStoreReviewScreenshot
    included: Optional[List[InAppPurchaseV2]] = None
    links: DocumentLinks


class InAppPurchaseAvailabilityResponse(BaseModel):
    data: InAppPurchaseAvailability
    included: Optional[List[TerritoryModel]] = None
    links: DocumentLinks


class InAppPurchaseContentResponse(BaseModel):
    data: InAppPurchaseContent
    included: Optional[List[InAppPurchaseV2]] = None
    links: DocumentLinks


class InAppPurchaseImagesResponse(BaseModel):
    data: List[InAppPurchaseImage]
    included: Optional[List[InAppPurchaseV2]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseImageResponse(BaseModel):
    data: InAppPurchaseImage
    included: Optional[List[InAppPurchaseV2]] = None
    links: DocumentLinks


class InAppPurchaseLocalizationsResponse(BaseModel):
    data: List[InAppPurchaseLocalization]
    included: Optional[List[InAppPurchaseV2]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseLocalizationResponse(BaseModel):
    data: InAppPurchaseLocalization
    included: Optional[List[InAppPurchaseV2]] = None
    links: DocumentLinks


class InAppPurchasePricePointsResponse(BaseModel):
    data: List[InAppPurchasePricePoint]
    included: Optional[List[TerritoryModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchasePriceScheduleResponse(BaseModel):
    data: InAppPurchasePriceSchedule
    included: Optional[List[Union[TerritoryModel, InAppPurchasePrice]]] = None
    links: DocumentLinks


class InAppPurchasePricesResponse(BaseModel):
    data: List[InAppPurchasePrice]
    included: Optional[List[Union[InAppPurchasePricePoint, TerritoryModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseSubmissionResponse(BaseModel):
    data: InAppPurchaseSubmission
    included: Optional[List[InAppPurchaseV2]] = None
    links: DocumentLinks


class InAppPurchasesV2Response(BaseModel):
    data: List[InAppPurchaseV2]
    included: Optional[
        List[
            Union[
                InAppPurchaseLocalization,
                InAppPurchasePricePoint,
                InAppPurchaseContent,
                InAppPurchaseAppStoreReviewScreenshot,
                PromotedPurchase,
                InAppPurchasePriceSchedule,
                InAppPurchaseAvailability,
                InAppPurchaseImage,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class InAppPurchaseV2Response(BaseModel):
    data: InAppPurchaseV2
    included: Optional[
        List[
            Union[
                InAppPurchaseLocalization,
                InAppPurchasePricePoint,
                InAppPurchaseContent,
                InAppPurchaseAppStoreReviewScreenshot,
                PromotedPurchase,
                InAppPurchasePriceSchedule,
                InAppPurchaseAvailability,
                InAppPurchaseImage,
            ]
        ]
    ] = None
    links: DocumentLinks


class NominationsResponse(BaseModel):
    data: List[Nomination]
    included: Optional[List[Union[AppModel, Actor, AppEventModel, TerritoryModel]]] = (
        None
    )
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class NominationResponse(BaseModel):
    data: Nomination
    included: Optional[List[Union[AppModel, Actor, AppEventModel, TerritoryModel]]] = (
        None
    )
    links: DocumentLinks


class PromotedPurchasesResponse(BaseModel):
    data: List[PromotedPurchase]
    included: Optional[List[Union[InAppPurchaseV2, SubscriptionModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class PromotedPurchaseResponse(BaseModel):
    data: PromotedPurchase
    included: Optional[List[Union[InAppPurchaseV2, SubscriptionModel]]] = None
    links: DocumentLinks


class Attributes321(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class RoutingAppCoverageModel(BaseModel):
    type: Literal["routingAppCoverages"]
    id: str
    attributes: Optional[Attributes321] = None
    relationships: Optional[Relationships229] = None
    links: Optional[ResourceLinks] = None


class RoutingAppCoverageResponse(BaseModel):
    data: RoutingAppCoverageModel
    included: Optional[List[AppStoreVersionModel]] = None
    links: DocumentLinks


class ScmGitReferencesResponse(BaseModel):
    data: List[ScmGitReference]
    included: Optional[List[ScmRepository]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmGitReferenceResponse(BaseModel):
    data: ScmGitReference
    included: Optional[List[ScmRepository]] = None
    links: DocumentLinks


class ScmPullRequestsResponse(BaseModel):
    data: List[ScmPullRequest]
    included: Optional[List[ScmRepository]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class ScmPullRequestResponse(BaseModel):
    data: ScmPullRequest
    included: Optional[List[ScmRepository]] = None
    links: DocumentLinks


class Attributes330(BaseModel):
    fileSize: Optional[int] = None
    fileName: Optional[str] = None
    sourceFileChecksum: Optional[str] = None
    imageAsset: Optional[ImageAsset] = None
    assetToken: Optional[str] = None
    assetType: Optional[str] = None
    uploadOperations: Optional[List[UploadOperation]] = None
    assetDeliveryState: Optional[AppMediaAssetState] = None


class SubscriptionAppStoreReviewScreenshot(BaseModel):
    type: Literal["subscriptionAppStoreReviewScreenshots"]
    id: str
    attributes: Optional[Attributes330] = None
    relationships: Optional[Relationships236] = None
    links: Optional[ResourceLinks] = None


class SubscriptionAppStoreReviewScreenshotResponse(BaseModel):
    data: SubscriptionAppStoreReviewScreenshot
    included: Optional[List[SubscriptionModel]] = None
    links: DocumentLinks


class SubscriptionAvailabilityResponse(BaseModel):
    data: SubscriptionAvailability
    included: Optional[List[TerritoryModel]] = None
    links: DocumentLinks


class SubscriptionGroupLocalizationsResponse(BaseModel):
    data: List[SubscriptionGroupLocalization]
    included: Optional[List[SubscriptionGroup]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionGroupLocalizationResponse(BaseModel):
    data: SubscriptionGroupLocalization
    included: Optional[List[SubscriptionGroup]] = None
    links: DocumentLinks


class SubscriptionGroupsResponse(BaseModel):
    data: List[SubscriptionGroup]
    included: Optional[
        List[Union[SubscriptionModel, SubscriptionGroupLocalization]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionGroupResponse(BaseModel):
    data: SubscriptionGroup
    included: Optional[
        List[Union[SubscriptionModel, SubscriptionGroupLocalization]]
    ] = None
    links: DocumentLinks


class SubscriptionImagesResponse(BaseModel):
    data: List[SubscriptionImage]
    included: Optional[List[SubscriptionModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionImageResponse(BaseModel):
    data: SubscriptionImage
    included: Optional[List[SubscriptionModel]] = None
    links: DocumentLinks


class SubscriptionIntroductoryOffersResponse(BaseModel):
    data: List[SubscriptionIntroductoryOffer]
    included: Optional[
        List[Union[SubscriptionModel, TerritoryModel, SubscriptionPricePointModel]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionIntroductoryOfferResponse(BaseModel):
    data: SubscriptionIntroductoryOffer
    included: Optional[
        List[Union[SubscriptionModel, TerritoryModel, SubscriptionPricePointModel]]
    ] = None
    links: DocumentLinks


class SubscriptionLocalizationsResponse(BaseModel):
    data: List[SubscriptionLocalization]
    included: Optional[List[SubscriptionModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionLocalizationResponse(BaseModel):
    data: SubscriptionLocalization
    included: Optional[List[SubscriptionModel]] = None
    links: DocumentLinks


class SubscriptionOfferCodeCustomCodesResponse(BaseModel):
    data: List[SubscriptionOfferCodeCustomCode]
    included: Optional[List[SubscriptionOfferCode]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodeCustomCodeResponse(BaseModel):
    data: SubscriptionOfferCodeCustomCode
    included: Optional[List[SubscriptionOfferCode]] = None
    links: DocumentLinks


class SubscriptionOfferCodeOneTimeUseCodesResponse(BaseModel):
    data: List[SubscriptionOfferCodeOneTimeUseCode]
    included: Optional[List[SubscriptionOfferCode]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodeOneTimeUseCodeResponse(BaseModel):
    data: SubscriptionOfferCodeOneTimeUseCode
    included: Optional[List[SubscriptionOfferCode]] = None
    links: DocumentLinks


class SubscriptionOfferCodePricesResponse(BaseModel):
    data: List[SubscriptionOfferCodePrice]
    included: Optional[List[Union[TerritoryModel, SubscriptionPricePointModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodesResponse(BaseModel):
    data: List[SubscriptionOfferCode]
    included: Optional[
        List[
            Union[
                SubscriptionModel,
                SubscriptionOfferCodeOneTimeUseCode,
                SubscriptionOfferCodeCustomCode,
                SubscriptionOfferCodePrice,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionOfferCodeResponse(BaseModel):
    data: SubscriptionOfferCode
    included: Optional[
        List[
            Union[
                SubscriptionModel,
                SubscriptionOfferCodeOneTimeUseCode,
                SubscriptionOfferCodeCustomCode,
                SubscriptionOfferCodePrice,
            ]
        ]
    ] = None
    links: DocumentLinks


class SubscriptionPricePointsResponse(BaseModel):
    data: List[SubscriptionPricePointModel]
    included: Optional[List[TerritoryModel]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPricePointResponse(BaseModel):
    data: SubscriptionPricePointModel
    included: Optional[List[TerritoryModel]] = None
    links: DocumentLinks


class SubscriptionPricesResponse(BaseModel):
    data: List[SubscriptionPrice]
    included: Optional[List[Union[TerritoryModel, SubscriptionPricePointModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPriceResponse(BaseModel):
    data: SubscriptionPrice
    included: Optional[List[Union[TerritoryModel, SubscriptionPricePointModel]]] = None
    links: DocumentLinks


class SubscriptionPromotionalOfferPricesResponse(BaseModel):
    data: List[SubscriptionPromotionalOfferPrice]
    included: Optional[List[Union[TerritoryModel, SubscriptionPricePointModel]]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPromotionalOffersResponse(BaseModel):
    data: List[SubscriptionPromotionalOffer]
    included: Optional[
        List[Union[SubscriptionModel, SubscriptionPromotionalOfferPrice]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionPromotionalOfferResponse(BaseModel):
    data: SubscriptionPromotionalOffer
    included: Optional[
        List[Union[SubscriptionModel, SubscriptionPromotionalOfferPrice]]
    ] = None
    links: DocumentLinks


class SubscriptionSubmissionResponse(BaseModel):
    data: SubscriptionSubmission
    included: Optional[List[SubscriptionModel]] = None
    links: DocumentLinks


class SubscriptionsResponse(BaseModel):
    data: List[SubscriptionModel]
    included: Optional[
        List[
            Union[
                SubscriptionLocalization,
                SubscriptionAppStoreReviewScreenshot,
                SubscriptionGroup,
                SubscriptionIntroductoryOffer,
                SubscriptionPromotionalOffer,
                SubscriptionOfferCode,
                SubscriptionPrice,
                PromotedPurchase,
                SubscriptionAvailability,
                WinBackOffer,
                SubscriptionImage,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class SubscriptionResponse(BaseModel):
    data: SubscriptionModel
    included: Optional[
        List[
            Union[
                SubscriptionLocalization,
                SubscriptionAppStoreReviewScreenshot,
                SubscriptionGroup,
                SubscriptionIntroductoryOffer,
                SubscriptionPromotionalOffer,
                SubscriptionOfferCode,
                SubscriptionPrice,
                PromotedPurchase,
                SubscriptionAvailability,
                WinBackOffer,
                SubscriptionImage,
            ]
        ]
    ] = None
    links: DocumentLinks


class WebhookDeliveriesResponse(BaseModel):
    data: List[WebhookDelivery]
    included: Optional[List[WebhookEvent]] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class WebhookDeliveryResponse(BaseModel):
    data: WebhookDelivery
    included: Optional[List[WebhookEvent]] = None
    links: DocumentLinks


class RoutingAppCoverageWithoutIncludesResponse(BaseModel):
    data: RoutingAppCoverageModel
    links: DocumentLinks


class TestConfiguration(BaseModel):
    kind: Optional[Literal["USE_SCHEME_SETTINGS", "SPECIFIC_TEST_PLANS"]] = None
    testPlanName: Optional[str] = None
    testDestinations: Optional[List[CiTestDestination]] = None


class CiAction(BaseModel):
    name: Optional[str] = None
    actionType: Optional[CiActionType] = None
    destination: Optional[
        Literal[
            "ANY_IOS_DEVICE",
            "ANY_IOS_SIMULATOR",
            "ANY_TVOS_DEVICE",
            "ANY_TVOS_SIMULATOR",
            "ANY_WATCHOS_DEVICE",
            "ANY_WATCHOS_SIMULATOR",
            "ANY_MAC",
            "ANY_MAC_CATALYST",
            "ANY_VISIONOS_DEVICE",
            "ANY_VISIONOS_SIMULATOR",
        ]
    ] = None
    buildDistributionAudience: Optional[BuildAudienceType] = None
    testConfiguration: Optional[TestConfiguration] = None
    scheme: Optional[str] = None
    platform: Optional[Literal["MACOS", "IOS", "TVOS", "WATCHOS", "VISIONOS"]] = None
    isRequiredToPass: Optional[bool] = None


class CiBranchStartCondition(BaseModel):
    source: Optional[CiBranchPatterns] = None
    filesAndFoldersRule: Optional[CiFilesAndFoldersRule] = None
    autoCancel: Optional[bool] = None


class AppClipDefaultExperienceLocalizationsResponse(BaseModel):
    data: List[AppClipDefaultExperienceLocalization]
    included: Optional[
        List[Union[AppClipDefaultExperienceModel, AppClipHeaderImageModel]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppClipDefaultExperienceLocalizationResponse(BaseModel):
    data: AppClipDefaultExperienceLocalization
    included: Optional[
        List[Union[AppClipDefaultExperienceModel, AppClipHeaderImageModel]]
    ] = None
    links: DocumentLinks


class AppEventLocalizationsResponse(BaseModel):
    data: List[AppEventLocalization]
    included: Optional[
        List[Union[AppEventModel, AppEventScreenshot, AppEventVideoClip]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppEventLocalizationResponse(BaseModel):
    data: AppEventLocalization
    included: Optional[
        List[Union[AppEventModel, AppEventScreenshot, AppEventVideoClip]]
    ] = None
    links: DocumentLinks


class AppPreviewSetsResponse(BaseModel):
    data: List[AppPreviewSet]
    included: Optional[
        List[
            Union[
                AppStoreVersionLocalizationModel,
                AppCustomProductPageLocalization,
                AppStoreVersionExperimentTreatmentLocalizationModel,
                AppPreview,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppPreviewSetResponse(BaseModel):
    data: AppPreviewSet
    included: Optional[
        List[
            Union[
                AppStoreVersionLocalizationModel,
                AppCustomProductPageLocalization,
                AppStoreVersionExperimentTreatmentLocalizationModel,
                AppPreview,
            ]
        ]
    ] = None
    links: DocumentLinks


class AppScreenshotSetsResponse(BaseModel):
    data: List[AppScreenshotSet]
    included: Optional[
        List[
            Union[
                AppStoreVersionLocalizationModel,
                AppCustomProductPageLocalization,
                AppStoreVersionExperimentTreatmentLocalizationModel,
                AppScreenshot,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppScreenshotSetResponse(BaseModel):
    data: AppScreenshotSet
    included: Optional[
        List[
            Union[
                AppStoreVersionLocalizationModel,
                AppCustomProductPageLocalization,
                AppStoreVersionExperimentTreatmentLocalizationModel,
                AppScreenshot,
            ]
        ]
    ] = None
    links: DocumentLinks


class AppStoreVersionsResponse(BaseModel):
    data: List[AppStoreVersionModel]
    included: Optional[
        List[
            Union[
                AppModel,
                AgeRatingDeclaration,
                AppStoreVersionLocalizationModel,
                Build,
                AppStoreVersionPhasedRelease,
                GameCenterAppVersionModel,
                RoutingAppCoverageModel,
                AppStoreReviewDetailModel,
                AppStoreVersionSubmission,
                AppClipDefaultExperienceModel,
                AppStoreVersionExperimentModel,
                AppStoreVersionExperimentV2Model,
                AlternativeDistributionPackageModel,
            ]
        ]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class AppStoreVersionResponse(BaseModel):
    data: AppStoreVersionModel
    included: Optional[
        List[
            Union[
                AppModel,
                AgeRatingDeclaration,
                AppStoreVersionLocalizationModel,
                Build,
                AppStoreVersionPhasedRelease,
                GameCenterAppVersionModel,
                RoutingAppCoverageModel,
                AppStoreReviewDetailModel,
                AppStoreVersionSubmission,
                AppClipDefaultExperienceModel,
                AppStoreVersionExperimentModel,
                AppStoreVersionExperimentV2Model,
                AlternativeDistributionPackageModel,
            ]
        ]
    ] = None
    links: DocumentLinks


class Attributes177(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    branchStartCondition: Optional[CiBranchStartCondition] = None
    tagStartCondition: Optional[CiTagStartCondition] = None
    pullRequestStartCondition: Optional[CiPullRequestStartCondition] = None
    scheduledStartCondition: Optional[CiScheduledStartCondition] = None
    manualBranchStartCondition: Optional[CiManualBranchStartCondition] = None
    manualTagStartCondition: Optional[CiManualTagStartCondition] = None
    manualPullRequestStartCondition: Optional[CiManualPullRequestStartCondition] = None
    actions: Optional[List[CiAction]] = None
    isEnabled: Optional[bool] = None
    isLockedForEditing: Optional[bool] = None
    clean: Optional[bool] = None
    containerFilePath: Optional[str] = None
    lastModifiedDate: Optional[AwareDatetime] = None


class CiWorkflow(BaseModel):
    type: Literal["ciWorkflows"]
    id: str
    attributes: Optional[Attributes177] = None
    relationships: Optional[Relationships122] = None
    links: Optional[ResourceLinks] = None


class CiWorkflowsResponse(BaseModel):
    data: List[CiWorkflow]
    included: Optional[
        List[Union[CiProductModel, ScmRepository, CiXcodeVersion, CiMacOsVersion]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiWorkflowResponse(BaseModel):
    data: CiWorkflow
    included: Optional[
        List[Union[CiProductModel, ScmRepository, CiXcodeVersion, CiMacOsVersion]]
    ] = None
    links: DocumentLinks


class Attributes178(BaseModel):
    name: str
    description: str
    branchStartCondition: Optional[CiBranchStartCondition] = None
    tagStartCondition: Optional[CiTagStartCondition] = None
    pullRequestStartCondition: Optional[CiPullRequestStartCondition] = None
    scheduledStartCondition: Optional[CiScheduledStartCondition] = None
    manualBranchStartCondition: Optional[CiManualBranchStartCondition] = None
    manualTagStartCondition: Optional[CiManualTagStartCondition] = None
    manualPullRequestStartCondition: Optional[CiManualPullRequestStartCondition] = None
    actions: List[CiAction]
    isEnabled: bool
    isLockedForEditing: Optional[bool] = None
    clean: bool
    containerFilePath: str


class Data290(BaseModel):
    type: Literal["ciWorkflows"]
    attributes: Attributes178
    relationships: Relationships123


class CiWorkflowCreateRequest(BaseModel):
    data: Data290


class Attributes179(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    branchStartCondition: Optional[CiBranchStartCondition] = None
    tagStartCondition: Optional[CiTagStartCondition] = None
    pullRequestStartCondition: Optional[CiPullRequestStartCondition] = None
    scheduledStartCondition: Optional[CiScheduledStartCondition] = None
    manualBranchStartCondition: Optional[CiManualBranchStartCondition] = None
    manualTagStartCondition: Optional[CiManualTagStartCondition] = None
    manualPullRequestStartCondition: Optional[CiManualPullRequestStartCondition] = None
    actions: Optional[List[CiAction]] = None
    isEnabled: Optional[bool] = None
    isLockedForEditing: Optional[bool] = None
    clean: Optional[bool] = None
    containerFilePath: Optional[str] = None


class Data295(BaseModel):
    type: Literal["ciWorkflows"]
    id: str
    attributes: Optional[Attributes179] = None
    relationships: Optional[Relationships124] = None


class CiWorkflowUpdateRequest(BaseModel):
    data: Data295


class CiBuildRunsResponse(BaseModel):
    data: List[CiBuildRun]
    included: Optional[
        List[Union[Build, CiWorkflow, CiProductModel, ScmGitReference, ScmPullRequest]]
    ] = None
    links: PagedDocumentLinks
    meta: Optional[PagingInformation] = None


class CiBuildRunResponse(BaseModel):
    data: CiBuildRun
    included: Optional[
        List[Union[Build, CiWorkflow, CiProductModel, ScmGitReference, ScmPullRequest]]
    ] = None
    links: DocumentLinks


DiagnosticLogCallStackNode.model_rebuild()
