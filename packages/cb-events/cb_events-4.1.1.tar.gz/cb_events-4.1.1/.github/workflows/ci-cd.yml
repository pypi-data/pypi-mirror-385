name: CI/CD

on:
  push:
    branches: [main, "renovate/**"]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  test:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.12", "3.13", "3.14"]
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - run: uv sync --all-groups --frozen

      - run: |
          make format
          make fix
          make lint

      - run: make test-cov

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        with:
          files: ./coverage.xml
          flags: ${{ matrix.python-version }}
          name: coverage-${{ matrix.python-version }}
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - run: uv cache prune --ci

  security:
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - run: uv sync --all-groups --frozen

      - run: make bandit

      - uses: github/codeql-action/upload-sarif@0c5185d061ea8cb82b9c5cd84d2c51a7fc2d9d6b
        continue-on-error: true
        with:
          sarif_file: bandit.sarif
          category: bandit

      - uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          scan-type: fs
          skip-dirs: .git,.github,.venv,docs/_build
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
          exit-code: 0

      - uses: github/codeql-action/upload-sarif@0c5185d061ea8cb82b9c5cd84d2c51a7fc2d9d6b
        continue-on-error: true
        with:
          sarif_file: trivy-results.sarif
          category: trivy

      - run: uv cache prune --ci

  build:
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    outputs:
      released: ${{ steps.version.outputs.released }}
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
      is_prerelease: ${{ steps.version.outputs.is_prerelease }}
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - run: git checkout -B ${{ github.ref_name }}

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - run: uv sync --group build --no-default-groups --frozen

      - id: version
        env:
          GH_TOKEN: none
        run: uv run semantic-release -v version --no-commit --no-tag

      - if: steps.version.outputs.released == 'true'
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: dist
          path: dist/**
          if-no-files-found: error
          retention-days: 2

      - if: steps.version.outputs.released == 'true'
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: uv.lock
          path: uv.lock
          if-no-files-found: error
          retention-days: 2

      - run: uv cache prune --ci

  e2e:
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          ref: ${{ github.sha }}
          fetch-depth: 1

      - if: needs.build.outputs.released == 'true'
        uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        id: download
        with:
          name: dist
          path: ./dist

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - run: uv sync --frozen

      - if: steps.download.outcome == 'success'
        run: |
          uv pip uninstall cb-events
          uv pip install dist/cb_events-*.whl

      - run: make test-e2e

      - run: uv cache prune --ci

  release:
    needs: [build, e2e]
    if: github.ref == 'refs/heads/main' && needs.build.outputs.released == 'true'
    runs-on: ubuntu-24.04
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
    outputs:
      released: ${{ steps.publish.outputs.released }}
      version: ${{ steps.publish.outputs.version }}
      tag: ${{ steps.publish.outputs.tag }}
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - run: git reset --hard ${{ github.sha }}

      - uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - run: uv sync --group build --no-default-groups --frozen

      - uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        with:
          name: dist
          path: dist

      - uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        with:
          name: uv.lock

      - run: git add uv.lock

      - id: publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash .github/workflows/verify_upstream.sh
          uv run semantic-release -v --strict version --skip-build
          uv run semantic-release publish

      - run: uv cache prune --ci

  deploy:
    needs: [build, release]
    if: github.ref == 'refs/heads/main' && needs.release.outputs.released == 'true' && github.repository == 'MountainGod2/cb-events'
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/project/cb-events/
    permissions:
      attestations: write
      contents: read
      id-token: write
    steps:
      - uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        with:
          name: dist
          path: dist

      - uses: pypa/gh-action-pypi-publish@ab69e431e9c9f48a3310be0a56527c679f56e04d
        with:
          packages-dir: dist
          print-hash: true
          verbose: true
          attestations: true

      - uses: actions/attest-build-provenance@ba965ac88abfc6fa49344893ed19e5bf479a07d6
        with:
          subject-path: dist/*
