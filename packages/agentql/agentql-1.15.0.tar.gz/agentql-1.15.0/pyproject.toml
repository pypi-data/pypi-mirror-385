[project]
name = "agentql"
version = "1.15.0"
description = "Tiny Fish AgentQL Python Client"
authors = [{ name = "Tiny Fish", email = "support@agentql.com" }]
license = { text = "MIT" }
readme = "PACKAGE_README.md"
requires-python = ">=3.9,<4.0"
keywords = ["automation", "web-scraping", "playwright", "ai", "testing"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]
dependencies = [
    "playwright>=1.0.0",
    "requests>=2.0.0",
    "pydantic>=2.0.0",
    "httpx>=0.23.0,<1.0.0",
    "pytest-asyncio>=0.21.0",
    "aiofiles>=23.0.0",
    "tf-playwright-stealth>=1.0.0,<2.0.0",
    "typer>=0.7.0",
    "colorama>=0.4.6,<1.0.0",
]

[project.urls]
Homepage = "https://agentql.com"
Repository = "https://github.com/tinyfish-ai/agentql-client"
Documentation = "https://docs.agentql.com"

[project.scripts]
agentql = "agentql._cli._main:app"

[tool.poetry]

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.4"
ruff = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-time = "*"
mockito = "*"
pytest_env = "*"
pytest-asyncio = "*"
html-to-json = "*"
dill = "*"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["test"]
asyncio_default_fixture_loop_scope = "function"
log_cli = true
log_level = "WARNING"
filterwarnings = [
    "ignore::DeprecationWarning:fake_http_header.*",
    "ignore::DeprecationWarning:importlib.resources.*",
]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501"]
exclude = ["script/**"]


[tool.pytest_env]
AGENTQL_API_KEY = "test"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
