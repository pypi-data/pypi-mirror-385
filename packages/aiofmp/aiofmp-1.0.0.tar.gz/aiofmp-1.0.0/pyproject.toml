[project]
name = "aiofmp"
version = "1.0.0"
description = "Asynchronous Financial Modeling Prep API Client with MCP Server"
readme = "README.md"
license = {text = "Apache 2.0"}
requires-python = ">=3.10"
authors = [
    {name = "codemug", email = "u.manshahid@gmail.com"}
]
maintainers = [
    {name = "codemug", email = "u.manshahid@gmail.com"}
]
keywords = [
    "financial",
    "api",
    "async",
    "mcp",
    "model-context-protocol",
    "financial-modeling-prep",
    "stocks",
    "crypto",
    "forex"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Typing :: Typed",
]

dependencies = [
    "aiohttp>=3.12.15",
    "fastmcp>=2.0.0",
    "click>=8.0.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.13.2",
]

[project.urls]
Homepage = "https://github.com/codemug/aiofmp"
Documentation = "https://github.com/codemug/aiofmp#readme"
Repository = "https://github.com/codemug/aiofmp.git"
Issues = "https://github.com/codemug/aiofmp/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.0",
    "pytest-cov>=7.0.0",
    "black>=25.0.0",
    "isort>=6.0.0",
    "mypy>=1.18.0",
    "ruff>=0.13.0",
    "python-semantic-release>=10.4.1",
    "twine>=5.0.0",
]

[project.scripts]
aiofmp-mcp-server = "aiofmp.cli:mcp_server"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py313']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py310"
line-length = 88
fix = false
exclude = ["examples/", "scripts/"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "uv build"
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
upload_to_pypi = false
repository = "https://github.com/codemug/aiofmp"
hvcs = "github"
commit_parser = "conventional"
major_on_zero = false
tag_format = "v{version}"

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.changelog]
exclude_commit_patterns = []
