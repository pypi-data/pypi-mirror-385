import{_ as V,D as y,G as c,v as b,y as u,a as r,I as v,Z as h,w as i,N as C,b as n,x as l,H as E,ap as I,z as j,A as m}from"./main-D4SEGtZa.js";import{A as x,R as N,a as z,b as B,c as L}from"./relation-chips-CYO8Uj7v.js";import{useAdminStore as p}from"./admin-D_7moI8h.js";import{c as f}from"./VSelectionControl-DeWPIIPX.js";import{V as U}from"./VCheckbox-BD1q34CO.js";import{D as O}from"./datetime-column-C0_5m4NM.js";import{a as G}from"./change-password-dialog-CjxNUfnd.js";import{V as k}from"./VCheckboxBtn-CrWaiahS.js";import"./forwardRefs-ChIujdCb.js";import"./VForm-CrcbQXkT.js";import"./VDialog-DqZpNQj0.js";import"./VSelect-E5kKkuai.js";import"./ssrBoot-CUYhwwEr.js";import"./VDivider-DVXAM-o1.js";import"./VTable-DcP-nyBg.js";import"./filter-D8MAlk56.js";import"./confirm-dialog-CYkMojaN.js";const D=["username","isStaff","isActive","groups"];Object.freeze(D);const A={username:"",password:"",passwordConfirm:"",isStaff:!1,isActive:!0,groups:[]};Object.freeze(A);const J={name:"AdminUserCreateUpdateInputs",components:{AdminRelationPicker:x},props:{oldRow:{type:[Object,Boolean],default:!1}},emits:["change"],data(){return{rules:{username:[e=>!!e||"Username is required",e=>!!e&&!this.usernames.has(e.trim())||"Username already used"],password:[e=>!!e||"Password is required"],passwordConfirm:[e=>e===this.row.password||"Passwords must match"]},row:C(this.oldRow||A)}},computed:{...c(p,{groups:e=>e.groups,users:e=>e.users}),usernames(){return this.nameSet(this.users,"username",this.oldRow,!0)}},watch:{row:{handler(e){this.$emit("change",e)},deep:!0},oldRow:{handler(e){this.row=C(e)},deep:!0}},methods:{...y(p,["nameSet"])},UPDATE_KEYS:D,EMPTY_ROW:A},K={key:0};function Y(e,s,g,R,o,S){const d=i("AdminRelationPicker");return u(),b("div",null,[r(f,{modelValue:o.row.username,"onUpdate:modelValue":s[0]||(s[0]=a=>o.row.username=a),autocomplete:"username",label:"Username",rules:o.rules.username,clearable:"",autofocus:"",onKeydown:s[1]||(s[1]=h(a=>e.$refs.password.focus(),["enter"]))},null,8,["modelValue","rules"]),g.oldRow?v("",!0):(u(),b("div",K,[r(f,{ref:"password",modelValue:o.row.password,"onUpdate:modelValue":s[2]||(s[2]=a=>o.row.password=a),autocomplete:"new-password",label:"Password",rules:o.rules.password,clearable:"",type:"password",onKeydown:s[3]||(s[3]=h(a=>e.$refs.passwordConfirm.focus(),["enter"]))},null,8,["modelValue","rules"]),r(f,{ref:"passwordConfirm",modelValue:o.row.passwordConfirm,"onUpdate:modelValue":s[4]||(s[4]=a=>o.row.passwordConfirm=a),autocomplete:"new-password",label:"Confirm Password",rules:o.rules.passwordConfirm,clearable:"",type:"password"},null,8,["modelValue","rules"])])),r(U,{modelValue:o.row.isStaff,"onUpdate:modelValue":s[5]||(s[5]=a=>o.row.isStaff=a),label:"Is Staff"},null,8,["modelValue"]),r(U,{modelValue:o.row.isActive,"onUpdate:modelValue":s[6]||(s[6]=a=>o.row.isActive=a),label:"Is Active"},null,8,["modelValue"]),r(d,{modelValue:o.row.groups,"onUpdate:modelValue":s[7]||(s[7]=a=>o.row.groups=a),label:"Groups",objs:e.groups,"title-key":"name","group-type":""},null,8,["modelValue","objs"])])}const M=V(J,[["render",Y]]),q={name:"AdminUsersTab",components:{AdminTable:L,AdminDeleteRowDialog:B,ChangePasswordDialog:G,AdminCreateUpdateDialog:z,DateTimeColumn:O,RelationChips:N},data(){return{AdminUserCreateUpdateInputs:I(M),headers:[{title:"Username",key:"username",align:"start"},{title:"Staff",key:"isStaff"},{title:"Active",key:"isActive"},{title:"Groups",key:"groups"},{title:"Last Active",key:"lastActive"},{title:"Last Login",key:"lastLogin"},{title:"Joined",key:"dateJoined"},{title:"Actions",key:"actions",sortable:!1}]}},computed:{...c(p,{users:e=>e.users,groups:e=>e.groups}),...c(E,{me:e=>e.user})},mounted(){this.loadTables(["Group","User"])},methods:{...y(p,["loadTables"])}},H={class:"tabHeader"};function F(e,s,g,R,o,S){const d=i("AdminCreateUpdateDialog"),a=i("RelationChips"),w=i("DateTimeColumn"),T=i("ChangePasswordDialog"),_=i("AdminDeleteRowDialog"),P=i("AdminTable");return u(),b("div",null,[n("header",H,[r(d,{table:"User",inputs:o.AdminUserCreateUpdateInputs,"max-width":"20em"},null,8,["inputs"])]),r(P,{"item-title":"username",headers:o.headers,items:e.users},{"no-data":l(()=>[...s[0]||(s[0]=[n("td",{class:"adminNoData",colspan:"100%"},[m(" No Users. "),n("div",null,[m(" This is an error. There should always be at least one Staff user."),n("br"),m(" You should not be able to see this page"),n("br"),m(" You should restart Codex with the CODEX_RESET_ADMIN=1 variable set."),n("br"),m(" See the "),n("a",{href:"https://github.com/ajslater/codex#reset-the-admin-password",target:"_blank"}," README ")])],-1)])]),"item.isStaff":l(({item:t})=>[r(k,{"model-value":t.isStaff,disabled:""},null,8,["model-value"])]),"item.isActive":l(({item:t})=>[r(k,{"model-value":t.isActive,disabled:""},null,8,["model-value"])]),"item.groups":l(({item:t})=>[r(a,{pks:t.groups,objs:e.groups,"title-key":"name","group-type":""},null,8,["pks","objs"])]),"item.lastActive":l(({item:t})=>[r(w,{dttm:t.lastActive},null,8,["dttm"])]),"item.lastLogin":l(({item:t})=>[r(w,{dttm:t.lastLogin},null,8,["dttm"])]),"item.dateJoined":l(({item:t})=>[r(w,{dttm:t.dateJoined},null,8,["dttm"])]),"item.actions":l(({item:t})=>[r(d,{table:"User",inputs:o.AdminUserCreateUpdateInputs,"old-row":t,"max-width":"20em",size:"small",density:"compact"},null,8,["inputs","old-row"]),r(T,{user:t,"is-admin-mode":!0,size:"small",density:"compact"},null,8,["user"]),e.me.id!==t.pk?(u(),j(_,{key:0,table:"User",pk:t.pk,name:t.username,size:"small",density:"compact"},null,8,["pk","name"])):v("",!0)]),_:2},1032,["headers","items"])])}const pe=V(q,[["render",F]]);export{pe as default};
