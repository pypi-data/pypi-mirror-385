[project]
name = "gunicorn-prometheus-exporter"
version = "0.2.4"
description = "A comprehensive Prometheus metrics exporter for Gunicorn WSGI servers with innovative Redis-based storage, YAML configuration support, advanced signal handling, and support for all worker types (sync, thread, eventlet, gevent)"
readme = "README.md"
authors = [
    {name = "Prince Roshan", email = "princekrroshan01@gmail.com"}
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    # License classifier removed per Flit requirements
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"
dependencies = [
    "prometheus-client>=0.20.0",
    "psutil>=5.9.8",
    "gunicorn>=21.2.0",
    "PyYAML>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/Agent-Hellboy/gunicorn-prometheus-exporter"
Documentation = "https://github.com/Agent-Hellboy/gunicorn-prometheus-exporter#readme"
Repository = "https://github.com/Agent-Hellboy/gunicorn-prometheus-exporter.git"
Issues = "https://github.com/Agent-Hellboy/gunicorn-prometheus-exporter/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "xenon>=0.9.0",
    "prospector>=1.10.0",
    "radon>=6.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.5.0",
    "isort>=5.13.0",
    "redis>=4.0.0",
    "PyYAML>=6.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-minify-plugin>=0.7.0",
]
eventlet = [
    "eventlet>=0.33.0",
]
gevent = [
    "gevent>=23.0.0",
]
async = [
    "eventlet>=0.33.0",
    "gevent>=23.0.0",
]
redis = [
    "redis>=4.0.0",
]
all = [
    "eventlet>=0.33.0",
    "gevent>=23.0.0",
    "redis>=4.0.0",
]

[build-system]
requires = ["flit_core>=3.7,<4", "wheel"]
build-backend = "flit_core.buildapi"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["gunicorn_prometheus_exporter*"]

[tool.ruff]
# Same as Black.
line-length = 88

# Assume Python 3.9
target-version = "py39"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = ["E", "F", "I"]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long, handled by formatter
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pylint.messages_control]
disable = [
    "import-error",  # Disable import errors for optional dependencies
    "logging-fstring-interpolation",  # We've fixed these
    "protected-access",  # We've added disable comments
    "unused-argument",  # We've added disable comments
    "access-member-before-definition",  # We've fixed this
    "django-not-configured",  # False positive, not a Django project
    "django-not-available",  # False positive, not a Django project
    "assignment-from-no-return",  # We've added disable comments
    "arguments-renamed",  # We've added disable comments
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_"]

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
# Like isort, sort imports using a single line after the import block.
force-single-line = false

# Like isort, use a consistent import sorting strategy.
combine-as-imports = true

# Like isort, use a consistent import sorting strategy.
force-wrap-aliases = false

# Like isort, use a consistent import sorting strategy.
lines-after-imports = 2

# Like isort, use a consistent import sorting strategy.
lines-between-types = 1

# Like isort, use a consistent import sorting strategy.
known-first-party = ["gunicorn_prometheus_exporter"]
