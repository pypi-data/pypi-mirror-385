[project]
name = "claritycore"
version = "0.0.4"
description = "Next-generation Open Source toolkit for low-level vision. Engineered for state-of-the-art performance in image and video restoration, including Super-Resolution, Denoising, Deblurring, and more."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "torch>=2.7.0",
    "torchvision>=0.22.0",
    "loguru>=0.7.3",
    "hydra-core>=1.3.2"
]

authors = [
    { name = "Aman Urumbekov", email = "amanurumbekov@gmail.com" },
]

keywords = ["computer-vision", "image-restoration", "super-resolution", "denoising", "deblurring", "video-restoration"]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Image Processing",
]

[project.urls]
Homepage = "https://github.com/Bezdarnost/claritycore"
Repository = "https://github.com/Bezdarnost/claritycore"

[project.scripts]
clarity = "claritycore.cli.main:cli_main"
claritycore = "claritycore.cli.main:cli_main"

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pre-commit",
    "yamlfix",
]

# Configuration for the Ruff linter and formatter
[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/ for a full list of rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "UP", # pyupgrade
]

[tool.ruff.format]
quote-style = "double"

[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"
