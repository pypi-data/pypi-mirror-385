name: Semantic Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v7

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@v10.4.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Changelog
      if: steps.release.outputs.released == 'true'
      run: |
        uv run git-changelog --output CHANGELOG.md --template keepachangelog
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CHANGELOG.md
        git commit -m "docs: update changelog for ${{ steps.release.outputs.tag }}" || exit 0
        git push

    - name: Publish to PyPI
      if: steps.release.outputs.released == 'true'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        uv run twine upload dist/*
