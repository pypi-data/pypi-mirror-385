# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: biopb/ome/plate.proto
# Protobuf Python Version: 6.32.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    1,
    '',
    'biopb/ome/plate.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x62iopb/ome/plate.proto\x12\tbiopb.ome\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd6\x02\n\x10PlateAcquisition\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\x12 \n\x0b\x64\x65scription\x18\x03 \x01(\tR\x0b\x64\x65scription\x12\x39\n\nstart_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\tstartTime\x12\x35\n\x08\x65nd_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x07\x65ndTime\x12\x33\n\x13maximum_field_count\x18\x06 \x01(\rH\x00R\x11maximumFieldCount\x88\x01\x01\x12&\n\x0fwell_sample_ids\x18\x07 \x03(\tR\rwellSampleIds\x12%\n\x0e\x61nnotation_ids\x18\x08 \x03(\tR\rannotationIdsB\x16\n\x14_maximum_field_count\"\xb2\x02\n\nWellSample\x12\x19\n\x08image_id\x18\x02 \x01(\tR\x07imageId\x12\"\n\nposition_x\x18\x03 \x01(\x02H\x00R\tpositionX\x88\x01\x01\x12\"\n\nposition_y\x18\x04 \x01(\x02H\x01R\tpositionY\x88\x01\x01\x12(\n\x10positioin_x_unit\x18\x05 \x01(\tR\x0epositioinXUnit\x12(\n\x10positioin_y_unit\x18\x06 \x01(\tR\x0epositioinYUnit\x12\x39\n\ntime_point\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\ttimePoint\x12\x14\n\x05index\x18\x08 \x01(\rR\x05indexB\r\n\x0b_position_xB\r\n\x0b_position_y\"\xfc\x02\n\x04Well\x12\x43\n\x0cwell_samples\x18\x02 \x03(\x0b\x32 .biopb.ome.Well.WellSamplesEntryR\x0bwellSamples\x12\x16\n\x06\x63olumn\x18\x03 \x01(\rR\x06\x63olumn\x12\x10\n\x03row\x18\x04 \x01(\rR\x03row\x12/\n\x13\x65xternal_identifier\x18\x05 \x01(\tR\x12\x65xternalIdentifier\x12\x12\n\x04type\x18\x06 \x01(\tR\x04type\x12\x19\n\x05\x63olor\x18\x07 \x01(\rH\x00R\x05\x63olor\x88\x01\x01\x12\x1d\n\nreagent_id\x18\x08 \x01(\tR\treagentId\x12%\n\x0e\x61nnotation_ids\x18\t \x03(\tR\rannotationIds\x1aU\n\x10WellSamplesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12+\n\x05value\x18\x02 \x01(\x0b\x32\x15.biopb.ome.WellSampleR\x05value:\x02\x38\x01\x42\x08\n\x06_color\"\xdd\x07\n\x05Plate\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\x12 \n\x0b\x64\x65scription\x18\x03 \x01(\tR\x0b\x64\x65scription\x12\x16\n\x06status\x18\x04 \x01(\tR\x06status\x12/\n\x13\x65xternal_identifier\x18\x05 \x01(\tR\x12\x65xternalIdentifier\x12[\n\x18\x43olumn_naming_convention\x18\x06 \x01(\x0e\x32!.biopb.ome.Plate.NamingConventionR\x16\x43olumnNamingConvention\x12U\n\x15row_naming_convention\x18\x07 \x01(\x0e\x32!.biopb.ome.Plate.NamingConventionR\x13rowNamingConvention\x12\"\n\rwell_origin_x\x18\x08 \x01(\x02R\x0bwellOriginX\x12\"\n\rwell_origin_y\x18\t \x01(\x02R\x0bwellOriginY\x12+\n\x12well_origin_x_unit\x18\n \x01(\tR\x0fwellOriginXUnit\x12+\n\x12well_origin_y_unit\x18\x0b \x01(\tR\x0fwellOriginYUnit\x12\x12\n\x04rows\x18\x0c \x01(\rR\x04rows\x12\x18\n\x07\x63olumns\x18\r \x01(\rR\x07\x63olumns\x12\x31\n\x05wells\x18\x0e \x03(\x0b\x32\x1b.biopb.ome.Plate.WellsEntryR\x05wells\x12V\n\x12plate_acquisitions\x18\x0f \x03(\x0b\x32\'.biopb.ome.Plate.PlateAcquisitionsEntryR\x11plateAcquisitions\x12$\n\x0b\x66ield_index\x18\x11 \x01(\rH\x00R\nfieldIndex\x88\x01\x01\x12%\n\x0e\x61nnotation_ids\x18\x12 \x03(\tR\rannotationIds\x1aI\n\nWellsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x0f.biopb.ome.WellR\x05value:\x02\x38\x01\x1a\x61\n\x16PlateAcquisitionsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x31\n\x05value\x18\x02 \x01(\x0b\x32\x1b.biopb.ome.PlateAcquisitionR\x05value:\x02\x38\x01\";\n\x10NamingConvention\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\n\n\x06LETTER\x10\x01\x12\n\n\x06NUMBER\x10\x02\x42\x0e\n\x0c_field_indexB\r\n\tbiopb.omeP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'biopb.ome.plate_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\tbiopb.omeP\001'
  _globals['_WELL_WELLSAMPLESENTRY']._loaded_options = None
  _globals['_WELL_WELLSAMPLESENTRY']._serialized_options = b'8\001'
  _globals['_PLATE_WELLSENTRY']._loaded_options = None
  _globals['_PLATE_WELLSENTRY']._serialized_options = b'8\001'
  _globals['_PLATE_PLATEACQUISITIONSENTRY']._loaded_options = None
  _globals['_PLATE_PLATEACQUISITIONSENTRY']._serialized_options = b'8\001'
  _globals['_PLATEACQUISITION']._serialized_start=70
  _globals['_PLATEACQUISITION']._serialized_end=412
  _globals['_WELLSAMPLE']._serialized_start=415
  _globals['_WELLSAMPLE']._serialized_end=721
  _globals['_WELL']._serialized_start=724
  _globals['_WELL']._serialized_end=1104
  _globals['_WELL_WELLSAMPLESENTRY']._serialized_start=1009
  _globals['_WELL_WELLSAMPLESENTRY']._serialized_end=1094
  _globals['_PLATE']._serialized_start=1107
  _globals['_PLATE']._serialized_end=2096
  _globals['_PLATE_WELLSENTRY']._serialized_start=1847
  _globals['_PLATE_WELLSENTRY']._serialized_end=1920
  _globals['_PLATE_PLATEACQUISITIONSENTRY']._serialized_start=1922
  _globals['_PLATE_PLATEACQUISITIONSENTRY']._serialized_end=2019
  _globals['_PLATE_NAMINGCONVENTION']._serialized_start=2021
  _globals['_PLATE_NAMINGCONVENTION']._serialized_end=2080
# @@protoc_insertion_point(module_scope)
