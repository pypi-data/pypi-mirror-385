{
  "permissions": {
    "allow": [
      "Bash(for file in docs/ERROR_HANDLING_GUIDE.md docs/MIGRATION_v0.10.0.md docs/configuration-guide.md docs/YAML_TASK_FORMAT.md docs/kb-export-guide.md docs/logging-guide.md docs/performance-guide.md docs/backup-guide.md docs/troubleshooting.md)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"✅ $file\")",
      "Bash(else echo \"❌ $file MISSING\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(clauxton:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(pytest:*)",
      "Bash(source .venv/bin/activate)",
      "Bash(timeout 60 pytest:*)",
      "Bash(ls:*)",
      "Bash(mypy:*)",
      "Bash(ruff check:*)",
      "Bash(python -m build:*)",
      "Bash(twine check:*)",
      "Bash(git tag:*)",
      "Bash(for doc in ERROR_HANDLING_GUIDE.md MIGRATION_v0.10.0.md configuration-guide.md YAML_TASK_FORMAT.md kb-export-guide.md logging-guide.md performance-guide.md backup-guide.md troubleshooting.md)",
      "Bash(do:*)",
      "Bash(echo:*)",
      "Bash(git push:*)",
      "Bash(for:*)",
      "Bash(then echo \"✅ $doc\")",
      "Bash(else echo \"❌ $doc MISSING\")",
      "Bash(pip install:*)",
      "Bash(gh:*)",
      "Bash(dist/clauxton-0.10.0-py3-none-any.whl )",
      "Bash(dist/clauxton-0.10.0.tar.gz)",
      "Bash(docs/DEVELOPER_WORKFLOW_GUIDE.md)",
      "Bash(LC_ALL=C grep:*)",
      "Bash(timeout 120 pytest:*)",
      "Bash(find:*)",
      "Bash(CLAUDE.md)",
      "Bash(chmod:*)",
      "Bash(python3:*)",
      "Bash(git pull:*)",
      "Bash(time timeout 120 pytest:*)",
      "Read(//tmp/**)",
      "Bash(timeout 30 pytest:*)",
      "Bash(cat:*)",
      "Bash(coverage report:*)",
      "Bash(python /tmp/analyze_coverage.py:*)",
      "Bash(timeout 90 pytest:*)",
      "Bash(bandit:*)",
      "Bash(pkill:*)",
      "Bash(python:*)",
      "Bash(awk:*)",
      "Bash(if [ -f htmlcov/index.html ])",
      "Bash(then grep -oP 'pc_cov\"\"\"\">.*?%' htmlcov/index.html)",
      "Bash(else echo \"No coverage report found\")",
      "Bash(then grep -oP 'pc_cov\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\">.*?%' htmlcov/index.html)",
      "Bash(timeout 180 pytest:*)",
      "Bash(wait)"
    ],
    "deny": [],
    "ask": []
  }
}
