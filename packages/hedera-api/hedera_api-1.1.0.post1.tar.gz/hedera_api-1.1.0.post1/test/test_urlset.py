# coding: utf-8

"""
    hedera Solution API

    Repository for Active Research Datasets

    The version of the OpenAPI document: 1.0.0
    Contact: eresearch-opensource@unige.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hedera_api_client.models.urlset import Urlset

class TestUrlset(unittest.TestCase):
    """Urlset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Urlset:
        """Test Urlset
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Urlset`
        """
        model = Urlset()
        if include_optional:
            return Urlset(
                any = [
                    None
                    ],
                url = [
                    hedera_api_client.models.t_url.TUrl(
                        loc = '', 
                        lastmod = '', 
                        changefreq = 'ALWAYS', 
                        priority = 1.337, 
                        any = [
                            None
                            ], )
                    ]
            )
        else:
            return Urlset(
                url = [
                    hedera_api_client.models.t_url.TUrl(
                        loc = '', 
                        lastmod = '', 
                        changefreq = 'ALWAYS', 
                        priority = 1.337, 
                        any = [
                            None
                            ], )
                    ],
        )
        """

    def testUrlset(self):
        """Test Urlset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
