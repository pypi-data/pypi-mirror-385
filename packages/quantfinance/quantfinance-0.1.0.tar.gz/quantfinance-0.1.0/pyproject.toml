[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "quantfinance"
version = "0.1.0"
description = "Package Python complet pour la finance quantitative"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Marcel ALOEKPO", email = "marcelaloekpo@gmail.com"}
]
maintainers = [
    {name = "Marcel ALOEKPO", email = "marcelaloekpo@gmail.com"}
]
keywords = [
    "finance",
    "quantitative finance",
    "portfolio optimization",
    "risk management",
    "options pricing",
    "derivatives",
    "black-scholes",
    "var",
    "backtesting"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Office/Business :: Financial :: Investment",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Typing :: Typed"
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=2.5.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pylint>=2.13.0",
    "isort>=5.10.0",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.18.0",
    "myst-parser>=0.17.0",
]
data = [
    "yfinance>=0.2.0",
    "pandas-datareader>=0.10.0",
]
viz = [
    "plotly>=5.0.0",
    "mplfinance>=0.12.0",
]
ml = [
    "scikit-learn>=1.0.0",
    "tensorflow>=2.8.0",
]
all = [
    "quantfinance[dev,docs,data,viz,ml]"
]

[project.urls]
Homepage = "https://github.com/votre-username/quantfinance"
Documentation = "https://quantfinance.readthedocs.io"
Repository = "https://github.com/votre-username/quantfinance"
"Bug Tracker" = "https://github.com/votre-username/quantfinance/issues"
Changelog = "https://github.com/votre-username/quantfinance/blob/main/CHANGELOG.md"

[project.scripts]
quantfinance = "quantfinance.cli:main"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["quantfinance", "quantfinance.pricing", "quantfinance.risk", 
            "quantfinance.portfolio", "quantfinance.utils"]

[tool.setuptools.package-data]
quantfinance = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--tb=short",
    "--cov=quantfinance",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["quantfinance"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0103",  # Invalid name
    "C0114",  # Missing module docstring
    "C0115",  # Missing class docstring
    "C0116",  # Missing function docstring
    "R0913",  # Too many arguments
    "R0914",  # Too many local variables
    "W0212",  # Access to protected member
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "x", "y", "z", "df", "ax"]

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]

# setuptools_scm configuration (recommand√© si tu utilises Git)
[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "no-local-version"
write_to = "quantfinance/_version.py"