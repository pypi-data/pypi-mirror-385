[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aioworldline"
dynamic = ["version"]
description = "Unofficial Worldline portal data retrieving client"
authors = [
    {name = "Oleg Korsak", email = "kamikaze.is.waiting.you@gmail.com"}
]
license = "GPL-3.0"
readme = {file = "README.rst", content-type = "text/x-rst"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python"
]
keywords = []
requires-python = ">=3.13.9,<3.15.0"

dependencies = [
    "aiohttp[speedups]~=3.13.1",
    "pydantic~=2.12.3",
    "pydantic-settings~=2.11.0"
]

[dependency-groups]
dev = [
    "build",
    "pip",
    "pre-commit",
    "pyright",
    "ruff",
    "setuptools",
    "setuptools_scm",
    "wheel",
]
testing = [
    "pytest",
    "pytest-cov",
    "pytest-mock"
]

[project.urls]
Homepage = "https://github.com/kamikaze/aioworldline"
Documentation = "https://github.com/kamikaze/aioworldline/wiki"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]

[tool.setuptools_scm]

[tool.bdist_wheel]
universal = true

[tool.pytest.ini_options]
addopts = [
    "--verbose"
]
norecursedirs = ["dist", "build", ".tox"]
testpaths = ["tests"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py313"

[tool.ruff.analyze]
detect-string-imports = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.format]
exclude = ["*.pyi"]
indent-style = "space"
quote-style = "single"

[tool.pyright]
venvPath = "."
venv = ".venv"
reportMatchNotExhaustive = "error"
reportUnnecessaryComparison = "error"
