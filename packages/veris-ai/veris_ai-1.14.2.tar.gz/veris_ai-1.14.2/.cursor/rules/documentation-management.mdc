---
description: Ensure READMEs function as both a human-friendly guide and an LLM semantic router, while designating source code as the sole source of truth. This document also defines LLM workflows that continuously evolve documentation in response to actual usage patterns.
alwaysApply: false
---

# Documentation Handling Guidelines
Ensure READMEs function as both a human-friendly guide and an LLM semantic router, while designating source code as the sole source of truth. This document also defines LLM workflows that continuously evolve documentation in response to actual usage patterns.

### Dual‑Use Overview

* **Humans**: READMEs must be narrative‑driven, intuitive, and structured for readability, with inline cross‑links to related READMEs or code modules for deeper context.
* **LLM Agents**: Treat these same READMEs as semantic routers and exploration waypoints. Use linked references and tags to dynamically navigate through the documentation web, following trails of dependency and discovering emergent patterns — never treat the README as the ultimate logic source.
* **Shared Goal**: Documentation must actively fight codebase complexity. Instead of growing endlessly, it should simplify, subtract redundancy, and delegate details to lower‑level READMEs in the hierarchy.

---

### When to Update Documentation

Trigger updates upon significant changes including:

* Major features, refactors, or architectural/schematic changes
* Workflow updates or dependencies added/removed
* Changes affecting user interactions or onboarding

**Heuristic**: If the change alters how a human would interact or mentally model the system — or how the LLM navigates it — it calls for a README update.

Updates should simplify where possible: remove outdated or redundant content, and delegate specifics via cross‑links (e.g., *See [Auth Module README](./auth/README.md) for details on authentication flows*).

---

### LLM‑Driven Continuous Documentation

1. **End‑of‑session reflection**: At task completion, the LLM should summarize the work and, if needed, update the README with clarifications or new links to relevant modules.
2. **Parallel instance memory**: Maintain awareness of session context across LLM instances to keep documentation aligned with ongoing workflows.
3. **LLM as thought partner**: Propose not only wording edits but also simplifications and delegation opportunities — e.g., linking to an existing module README rather than duplicating logic.
4. **Complexity management**: Treat every update as a chance to prune. The README should remain a high‑level, navigable entry point, not a catch‑all.
5. **Recursive documentation weaving**: When creating or updating a README, treat it as the entry point to a documentation web. Draft the initial README, then follow every dependency thread—navigating to parent and child READMEs, creating missing pieces, and refining connections. Continue this cyclical exploration until the entire documentation network achieves seamless consistency, with each iteration strengthening the coherence of the whole system.

---

### Structure & Format

Each meaningful workspace or module must include a `README.md` designed to operate like a **hub page** in an IDE‑backed website:

* **Quick Reference**: Purpose, setup, usage, and high‑level architecture.
* **Linked Context**: Cross‑links to deeper child READMEs and parent READMEs, design docs, or code directories.
* **Visual Aids**: Use visual aids (e.g. mermaid diagrams) to as needed to help explain the codebase to humans.


> Example:
> *“For transaction processing, see [Transactions README](./transactions/README.md). For error handling logic, see [Error Handling README](./errors/README.md).”*

The human and LLM share the same document: humans follow the narrative, while the LLM uses references in the LLM to navigate the codebase semantically.

---

### Workflow Roles

#### LLM Responsibilities

* Detect README drift by comparing live code to described behavior.
* Perform updates with an emphasis on pruning duplication and linking to existing READMEs.
* Ensure docs remain aligned with code without ballooning in size.

#### Human Responsibilities

* Diligently read through *ALL* LLM‑driven documentation updates for clarity, accuracy, and usability.
* Refactor prose when needed to keep explanations intuitive.
* Validate that cross‑links resolve correctly and are helpful for navigation.

---

### Key Principles

| Principle                  | Description                                                               |
| -------------------------- | ------------------------------------------------------------------------- |
| **Code is truth**          | Source code is definitive; README is a semantic guide, not the authority. |
| **Documentation evolves**  | Updates happen with real usage, not on a fixed schedule.                  |
| **Simplicity over sprawl** | Fight complexity by pruning, delegating, and cross‑linking.               |
| **One README, two roles**  | The same README serves both humans and LLMs through cross‑referencing.    |
| **Real‑world grounding**   | Updates reflect actual changes in workflows and architecture.             |
| **Human validation**       | LLM documentation edits require thorough human driver review to ensure usability and accuracy.          |
