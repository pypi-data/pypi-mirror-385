from pydantic import BaseModel, ConfigDict as ConfigDict, ValidationInfo as ValidationInfo
from typing import Any, ClassVar

class InputSpec(BaseModel):
    DOMAIN_MAP: ClassVar[dict[str, str]]
    NAMESPACE_MAP: ClassVar[dict[str, list[str]]]
    IDENTIFIER_GUESS: ClassVar[dict[str, list[Any]]]
    parts: list[str] | None
    domain: str | None
    namespace: str | None
    identifiers: str | list[str] | None
    def normalize_domain(cls, v): ...
    def fill_namespace_if_missing(cls, values): ...
    def check_namespace(cls, v, info: ValidationInfo): ...
    def normalize_identifiers(cls, v): ...
    def to_url_path(self) -> str: ...
    @classmethod
    def from_url_path(cls, path: str) -> InputSpec: ...
