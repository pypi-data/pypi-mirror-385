"""{{ model_name }} schemas."""

from pydantic import BaseModel, ConfigDict
from datetime import datetime
from typing import Optional


class {{ model_name }}Base(BaseModel):
    """Base schema for {{ model_name }}."""
    {% for field_name, field_type in fields.items() %}
    {% if field_type in ['str', 'string'] %}
    {{ field_name }}: str
    {% elif field_type in ['int', 'integer'] %}
    {{ field_name }}: int
    {% elif field_type in ['float', 'decimal'] %}
    {{ field_name }}: float
    {% elif field_type in ['bool', 'boolean'] %}
    {{ field_name }}: bool
    {% elif field_type in ['text'] %}
    {{ field_name }}: Optional[str] = None
    {% elif field_type in ['datetime'] %}
    {{ field_name }}: datetime
    {% else %}
    {{ field_name }}: str  # Default to str for unknown types
    {% endif %}
    {% endfor %}


class {{ model_name }}Create({{ model_name }}Base):
    """Schema for creating a {{ model_name }}."""
    pass


class {{ model_name }}Update(BaseModel):
    """Schema for updating a {{ model_name }}."""
    {% for field_name, field_type in fields.items() %}
    {% if field_type in ['str', 'string'] %}
    {{ field_name }}: Optional[str] = None
    {% elif field_type in ['int', 'integer'] %}
    {{ field_name }}: Optional[int] = None
    {% elif field_type in ['float', 'decimal'] %}
    {{ field_name }}: Optional[float] = None
    {% elif field_type in ['bool', 'boolean'] %}
    {{ field_name }}: Optional[bool] = None
    {% elif field_type in ['text'] %}
    {{ field_name }}: Optional[str] = None
    {% elif field_type in ['datetime'] %}
    {{ field_name }}: Optional[datetime] = None
    {% else %}
    {{ field_name }}: Optional[str] = None  # Default to str for unknown types
    {% endif %}
    {% endfor %}


class {{ model_name }}Response({{ model_name }}Base):
    """Schema for {{ model_name }} response."""
    id: int
    created_at: datetime
    updated_at: Optional[datetime] = None

    model_config = ConfigDict(from_attributes=True)
