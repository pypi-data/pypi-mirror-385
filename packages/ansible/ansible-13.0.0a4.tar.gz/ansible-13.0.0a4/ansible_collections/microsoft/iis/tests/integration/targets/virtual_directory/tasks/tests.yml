---
- name: Test site exists, but stopped in case of duplicate web binding
  website:
    name: "{{ test_site_name }}"
    state: stopped
    physical_path: 'C:\inetpub\wwwroot'

- name: Test virtual directory is absent (baseline)
  virtual_directory:
    state: absent
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"

- name: Create test virtual directory (check mode)
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
  register: result_check_mode
  check_mode: yes

- name: Verify test virtual directory (check mode)
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
  register: vdir_info_check_mode

- assert:
    that:
    - 'result_check_mode.changed == true'
    - 'vdir_info_check_mode.exists == false'

- name: Create test virtual directory
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
  register: result

- assert:
    that:
    - 'result.changed == true'

- name: Verify test virtual directory
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
  register: vdir_info

- assert:
    that:
    - 'vdir_info.directories[0].physical_path == test_physical_path'
    - 'vdir_info.directories[0].name == test_vdir_name'
    - 'vdir_info.directories[0].site == test_site_name'
    - 'vdir_info.directories[0].username == ""'

- name: Create test virtual directory (idempotent)
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: Set test virtual directory credentials
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    connect_as: specific_user
    username: "{{ test_user }}"
    password: "{{ test_password }}"
    physical_path: "{{ test_physical_path }}"
  register: result

- assert:
    that:
    - 'result.changed == true'

- name: Verify test virtual directory credentials
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
  register: vdir_info

- assert:
    that:
    - 'vdir_info.directories[0].username == test_user'

- name: Set test virtual directory credentials (idempotent)
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    connect_as: specific_user
    username: "{{ test_user }}"
    password: "{{ test_password }}"
    physical_path: "{{ test_physical_path }}"
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: Create test application temporary directory
  ansible.windows.win_tempfile:
    suffix: ".{{ test_app_name }}"
    state: directory
  register: test_app_tmp_dir

- name: Create new test application
  web_application:
    name: "{{ test_app_name }}"
    site: "{{ test_site_name }}"
    physical_path: "{{ test_app_tmp_dir.path }}"
    state: present

- name: Create application virtual directory and use pass through authentication in check mode
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
    connect_as: pass_through
    application: "{{ test_app_name }}"
  register: result_check_mode
  check_mode: True

- name: Verify application virtual directory with pass through authentication in check mode
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    application: "{{ test_app_name }}"
  register: vdir_info_check_mode

- assert:
    that:
    - 'result_check_mode.changed == true'
    - 'vdir_info_check_mode.exists == false'

- name: Create application virtual directory and use pass through authentication
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
    connect_as: pass_through
    application: "{{ test_app_name }}"
  register: result

- assert:
    that:
    - 'result.changed == true'

- name: Verify application virtual directory with pass through authentication
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    application: "{{ test_app_name }}"
  register: vdir_info

- assert:
    that:
    - 'vdir_info.directories[0].physical_path == test_physical_path'
    - 'vdir_info.directories[0].name == test_vdir_name'
    - 'vdir_info.directories[0].site == test_site_name'
    - vdir_info.directories[0].connect_as == 'pass_through'

- name: Create application virtual directory and use pass through authentication (idempotent)
  virtual_directory:
    state: present
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
    connect_as: pass_through
    application: "{{ test_app_name }}"
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: Delete application virtual directory and use pass through authentication (Check Mode)
  virtual_directory:
    state: absent
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
    connect_as: pass_through
    application: "{{ test_app_name }}"
  register: app_result
  check_mode: True

- name: Verify application virtual directory and use pass through authentication (Check Mode)
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    application: "{{ test_app_name }}"
  register: app_vdir_info

- assert:
    that:
    - 'app_result.changed == true'
    - 'app_vdir_info.exists == true'

- name: Delete application virtual directory and use pass through authentication
  virtual_directory:
    state: absent
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
    connect_as: pass_through
    application: "{{ test_app_name }}"
  register: result

- assert:
    that:
    - 'result.changed == true'

- name: Verify virtual directory with pass through authentication do not exists 
  virtual_directory_info:
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    application: "{{ test_app_name }}"
  register: vdir_info

- assert:
    that:
    - 'vdir_info.changed == false'

- name: Delete virtual directory and use pass through authentication (idempotent)
  virtual_directory:
    state: absent
    site: "{{ test_site_name }}"
    name: "{{ test_vdir_name }}"
    physical_path: "{{ test_physical_path }}"
    connect_as: pass_through
    application: "{{ test_app_name }}"
  register: result

- assert:
    that:
    - 'result.changed == false'
