{"version":3,"file":"7951.a677a4785c502273.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/media-player.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/brands-url.ts"],"sourcesContent":["import type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement, ReactiveElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { dynamicElement } from \"../../common/dom/dynamic-element-directive\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-alert\";\nimport \"../ha-selector/ha-selector\";\nimport type { HaFormDataContainer, HaFormElement, HaFormSchema } from \"./types\";\n\nconst LOAD_ELEMENTS = {\n  boolean: () => import(\"./ha-form-boolean\"),\n  constant: () => import(\"./ha-form-constant\"),\n  float: () => import(\"./ha-form-float\"),\n  grid: () => import(\"./ha-form-grid\"),\n  expandable: () => import(\"./ha-form-expandable\"),\n  integer: () => import(\"./ha-form-integer\"),\n  multi_select: () => import(\"./ha-form-multi_select\"),\n  positive_time_period_dict: () =>\n    import(\"./ha-form-positive_time_period_dict\"),\n  select: () => import(\"./ha-form-select\"),\n  string: () => import(\"./ha-form-string\"),\n  optional_actions: () => import(\"./ha-form-optional_actions\"),\n};\n\nconst getValue = (obj, item) =>\n  obj ? (!item.name || item.flatten ? obj : obj[item.name]) : null;\n\nconst getError = (obj, item) => (obj && item.name ? obj[item.name] : null);\n\nconst getWarning = (obj, item) => (obj && item.name ? obj[item.name] : null);\n\n@customElement(\"ha-form\")\nexport class HaForm extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: readonly HaFormSchema[];\n\n  @property({ attribute: false }) public error?: Record<\n    string,\n    string | string[]\n  >;\n\n  @property({ attribute: false }) public warning?: Record<string, string>;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeError?: (\n    schema: any,\n    error\n  ) => string;\n\n  @property({ attribute: false }) public computeWarning?: (\n    schema: any,\n    warning\n  ) => string;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: any,\n    data: HaFormDataContainer\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: any\n  ) => string | undefined;\n\n  @property({ attribute: false }) public localizeValue?: (\n    key: string\n  ) => string;\n\n  protected getFormProperties(): Record<string, any> {\n    return {};\n  }\n\n  public async focus() {\n    await this.updateComplete;\n    const root = this.renderRoot.querySelector(\".root\");\n    if (!root) {\n      return;\n    }\n    for (const child of root.children) {\n      if (child.tagName !== \"HA-ALERT\") {\n        if (child instanceof ReactiveElement) {\n          // eslint-disable-next-line no-await-in-loop\n          await child.updateComplete;\n        }\n        (child as HTMLElement).focus();\n        break;\n      }\n    }\n  }\n\n  protected willUpdate(changedProps: PropertyValues) {\n    if (changedProps.has(\"schema\") && this.schema) {\n      this.schema.forEach((item) => {\n        if (\"selector\" in item) {\n          return;\n        }\n        LOAD_ELEMENTS[item.type]?.();\n      });\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"root\" part=\"root\">\n        ${this.error && this.error.base\n          ? html`\n              <ha-alert alert-type=\"error\">\n                ${this._computeError(this.error.base, this.schema)}\n              </ha-alert>\n            `\n          : \"\"}\n        ${this.schema.map((item) => {\n          const error = getError(this.error, item);\n          const warning = getWarning(this.warning, item);\n\n          return html`\n            ${error\n              ? html`\n                  <ha-alert own-margin alert-type=\"error\">\n                    ${this._computeError(error, item)}\n                  </ha-alert>\n                `\n              : warning\n                ? html`\n                    <ha-alert own-margin alert-type=\"warning\">\n                      ${this._computeWarning(warning, item)}\n                    </ha-alert>\n                  `\n                : \"\"}\n            ${\"selector\" in item\n              ? html`<ha-selector\n                  .schema=${item}\n                  .hass=${this.hass}\n                  .narrow=${this.narrow}\n                  .name=${item.name}\n                  .selector=${item.selector}\n                  .value=${getValue(this.data, item)}\n                  .label=${this._computeLabel(item, this.data)}\n                  .disabled=${item.disabled || this.disabled || false}\n                  .placeholder=${item.required ? \"\" : item.default}\n                  .helper=${this._computeHelper(item)}\n                  .localizeValue=${this.localizeValue}\n                  .required=${item.required || false}\n                  .context=${this._generateContext(item)}\n                ></ha-selector>`\n              : dynamicElement(this.fieldElementName(item.type), {\n                  schema: item,\n                  data: getValue(this.data, item),\n                  label: this._computeLabel(item, this.data),\n                  helper: this._computeHelper(item),\n                  disabled: this.disabled || item.disabled || false,\n                  hass: this.hass,\n                  localize: this.hass?.localize,\n                  computeLabel: this.computeLabel,\n                  computeHelper: this.computeHelper,\n                  localizeValue: this.localizeValue,\n                  context: this._generateContext(item),\n                  ...this.getFormProperties(),\n                })}\n          `;\n        })}\n      </div>\n    `;\n  }\n\n  protected fieldElementName(type: string): string {\n    return `ha-form-${type}`;\n  }\n\n  private _generateContext(\n    schema: HaFormSchema\n  ): Record<string, any> | undefined {\n    if (!schema.context) {\n      return undefined;\n    }\n\n    const context = {};\n    for (const [context_key, data_key] of Object.entries(schema.context)) {\n      context[context_key] = this.data[data_key];\n    }\n    return context;\n  }\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const root = super.createRenderRoot() as ShadowRoot;\n    // attach it as soon as possible to make sure we fetch all events.\n    this.addValueChangedListener(root);\n    return root;\n  }\n\n  protected addValueChangedListener(element: Element | ShadowRoot) {\n    element.addEventListener(\"value-changed\", (ev) => {\n      ev.stopPropagation();\n      const schema = (ev.target as HaFormElement).schema as HaFormSchema;\n\n      if (ev.target === this) return;\n\n      const newValue =\n        !schema.name || (\"flatten\" in schema && schema.flatten)\n          ? ev.detail.value\n          : { [schema.name]: ev.detail.value };\n\n      this.data = {\n        ...this.data,\n        ...newValue,\n      };\n\n      fireEvent(this, \"value-changed\", {\n        value: this.data,\n      });\n    });\n  }\n\n  private _computeLabel(schema: HaFormSchema, data: HaFormDataContainer) {\n    return this.computeLabel\n      ? this.computeLabel(schema, data)\n      : schema\n        ? schema.name\n        : \"\";\n  }\n\n  private _computeHelper(schema: HaFormSchema) {\n    return this.computeHelper ? this.computeHelper(schema) : \"\";\n  }\n\n  private _computeError(\n    error: string | string[],\n    schema: HaFormSchema | readonly HaFormSchema[]\n  ): string | TemplateResult {\n    if (Array.isArray(error)) {\n      return html`<ul>\n        ${error.map(\n          (err) =>\n            html`<li>\n              ${this.computeError ? this.computeError(err, schema) : err}\n            </li>`\n        )}\n      </ul>`;\n    }\n    return this.computeError ? this.computeError(error, schema) : error;\n  }\n\n  private _computeWarning(\n    warning,\n    schema: HaFormSchema | readonly HaFormSchema[]\n  ) {\n    return this.computeWarning ? this.computeWarning(warning, schema) : warning;\n  }\n\n  static styles = css`\n    .root > * {\n      display: block;\n    }\n    .root > *:not([own-margin]):not(:last-child) {\n      margin-bottom: 24px;\n    }\n    ha-alert[own-margin] {\n      margin-bottom: 4px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form\": HaForm;\n  }\n}\n","import { arrayLiteralIncludes } from \"../common/array/literal-includes\";\n\nexport const UNAVAILABLE = \"unavailable\";\nexport const UNKNOWN = \"unknown\";\nexport const ON = \"on\";\nexport const OFF = \"off\";\n\nexport const UNAVAILABLE_STATES = [UNAVAILABLE, UNKNOWN] as const;\nexport const OFF_STATES = [UNAVAILABLE, UNKNOWN, OFF] as const;\n\nexport const isUnavailableState = arrayLiteralIncludes(UNAVAILABLE_STATES);\nexport const isOffState = arrayLiteralIncludes(OFF_STATES);\n","import {\n  mdiAccountMusic,\n  mdiAccountMusicOutline,\n  mdiAlbum,\n  mdiApplication,\n  mdiDramaMasks,\n  mdiFileMusic,\n  mdiFolder,\n  mdiGamepadVariant,\n  mdiImage,\n  mdiMovie,\n  mdiMusic,\n  mdiPause,\n  mdiPlay,\n  mdiPlaylistMusic,\n  mdiPlayPause,\n  mdiPodcast,\n  mdiPower,\n  mdiRepeat,\n  mdiRepeatOff,\n  mdiRepeatOnce,\n  mdiShuffle,\n  mdiShuffleDisabled,\n  mdiSkipNext,\n  mdiSkipPrevious,\n  mdiStop,\n  mdiTelevisionClassic,\n  mdiVideo,\n  mdiWeb,\n} from \"@mdi/js\";\nimport type {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport { supportsFeature } from \"../common/entity/supports-feature\";\nimport { stateActive } from \"../common/entity/state_active\";\nimport type { MediaPlayerItemId } from \"../components/media-player/ha-media-player-browse\";\nimport type { HomeAssistant, TranslationDict } from \"../types\";\nimport { isUnavailableState } from \"./entity\";\nimport { isTTSMediaSource } from \"./tts\";\n\ninterface MediaPlayerEntityAttributes extends HassEntityAttributeBase {\n  media_content_id?: string;\n  media_content_type?: string;\n  media_artist?: string;\n  media_playlist?: string;\n  media_series_title?: string;\n  media_season?: any;\n  media_episode?: any;\n  app_name?: string;\n  media_position_updated_at?: string | number | Date;\n  media_duration?: number;\n  media_position?: number;\n  media_title?: string;\n  media_channel?: string;\n  icon?: string;\n  entity_picture_local?: string;\n  is_volume_muted?: boolean;\n  volume_level?: number;\n  repeat?: string;\n  shuffle?: boolean;\n  source?: string;\n  source_list?: string[];\n  sound_mode?: string;\n  sound_mode_list?: string[];\n  group_members?: string[];\n}\n\nexport interface MediaPlayerEntity extends HassEntityBase {\n  attributes: MediaPlayerEntityAttributes;\n  state:\n    | \"playing\"\n    | \"paused\"\n    | \"idle\"\n    | \"off\"\n    | \"on\"\n    | \"unavailable\"\n    | \"unknown\"\n    | \"standby\"\n    | \"buffering\";\n}\n\nexport const enum MediaPlayerEntityFeature {\n  PAUSE = 1,\n  SEEK = 2,\n  VOLUME_SET = 4,\n  VOLUME_MUTE = 8,\n  PREVIOUS_TRACK = 16,\n  NEXT_TRACK = 32,\n\n  TURN_ON = 128,\n  TURN_OFF = 256,\n  PLAY_MEDIA = 512,\n  VOLUME_STEP = 1024,\n  SELECT_SOURCE = 2048,\n  STOP = 4096,\n  CLEAR_PLAYLIST = 8192,\n  PLAY = 16384,\n  SHUFFLE_SET = 32768,\n  SELECT_SOUND_MODE = 65536,\n  BROWSE_MEDIA = 131072,\n  REPEAT_SET = 262144,\n  GROUPING = 524288,\n}\n\nexport type MediaPlayerBrowseAction = \"pick\" | \"play\";\n\nexport const BROWSER_PLAYER = \"browser\";\n\nexport type MediaPlayerLayoutType = \"grid\" | \"list\" | \"auto\";\n\nexport interface MediaClassBrowserSetting {\n  icon: string;\n  thumbnail_ratio?: string;\n  layout?: \"grid\";\n  show_list_images?: boolean;\n}\n\nexport const MediaClassBrowserSettings: Record<\n  string,\n  MediaClassBrowserSetting\n> = {\n  album: { icon: mdiAlbum, layout: \"grid\" },\n  app: { icon: mdiApplication, layout: \"grid\", show_list_images: true },\n  artist: { icon: mdiAccountMusic, layout: \"grid\", show_list_images: true },\n  channel: {\n    icon: mdiTelevisionClassic,\n    thumbnail_ratio: \"portrait\",\n    layout: \"grid\",\n    show_list_images: true,\n  },\n  composer: {\n    icon: mdiAccountMusicOutline,\n    layout: \"grid\",\n    show_list_images: true,\n  },\n  contributing_artist: {\n    icon: mdiAccountMusic,\n    layout: \"grid\",\n    show_list_images: true,\n  },\n  directory: { icon: mdiFolder, layout: \"grid\", show_list_images: true },\n  episode: {\n    icon: mdiTelevisionClassic,\n    layout: \"grid\",\n    thumbnail_ratio: \"portrait\",\n    show_list_images: true,\n  },\n  game: {\n    icon: mdiGamepadVariant,\n    layout: \"grid\",\n    thumbnail_ratio: \"portrait\",\n  },\n  genre: { icon: mdiDramaMasks, layout: \"grid\", show_list_images: true },\n  image: { icon: mdiImage, layout: \"grid\", show_list_images: true },\n  movie: {\n    icon: mdiMovie,\n    thumbnail_ratio: \"portrait\",\n    layout: \"grid\",\n    show_list_images: true,\n  },\n  music: { icon: mdiMusic, show_list_images: true },\n  playlist: { icon: mdiPlaylistMusic, layout: \"grid\", show_list_images: true },\n  podcast: { icon: mdiPodcast, layout: \"grid\" },\n  season: {\n    icon: mdiTelevisionClassic,\n    layout: \"grid\",\n    thumbnail_ratio: \"portrait\",\n    show_list_images: true,\n  },\n  track: { icon: mdiFileMusic },\n  tv_show: {\n    icon: mdiTelevisionClassic,\n    layout: \"grid\",\n    thumbnail_ratio: \"portrait\",\n  },\n  url: { icon: mdiWeb },\n  video: { icon: mdiVideo, layout: \"grid\", show_list_images: true },\n};\n\nexport interface MediaPickedEvent {\n  item: MediaPlayerItem;\n  navigateIds: MediaPlayerItemId[];\n}\n\nexport interface MediaPlayerThumbnail {\n  content_type: string;\n  content: string;\n}\n\nexport interface ControlButton {\n  icon: string;\n  // Used as key for action as well as tooltip and aria-label translation key\n  action: keyof TranslationDict[\"ui\"][\"card\"][\"media_player\"];\n}\n\nexport interface MediaPlayerItem {\n  title: string;\n  media_content_type: string;\n  media_content_id: string;\n  media_class: keyof TranslationDict[\"ui\"][\"components\"][\"media-browser\"][\"class\"];\n  children_media_class?: string | null;\n  can_play: boolean;\n  can_expand: boolean;\n  can_search: boolean;\n  thumbnail?: string;\n  iconPath?: string;\n  children?: MediaPlayerItem[];\n  not_shown?: number;\n}\n\nexport const browseMediaPlayer = (\n  hass: HomeAssistant,\n  entityId: string,\n  mediaContentId?: string,\n  mediaContentType?: string\n): Promise<MediaPlayerItem> =>\n  hass.callWS<MediaPlayerItem>({\n    type: \"media_player/browse_media\",\n    entity_id: entityId,\n    media_content_id: mediaContentId,\n    media_content_type: mediaContentType,\n  });\n\nexport const getCurrentProgress = (stateObj: MediaPlayerEntity): number => {\n  let progress = stateObj.attributes.media_position!;\n\n  if (stateObj.state !== \"playing\") {\n    return progress;\n  }\n  progress +=\n    (Date.now() -\n      new Date(stateObj.attributes.media_position_updated_at!).getTime()) /\n    1000.0;\n  // Prevent negative values, so we do not go back to 59:59 at the start\n  // for example if there are slight clock sync deltas between backend and frontend and\n  // therefore media_position_updated_at might be slightly larger than Date.now().\n  return progress < 0 ? 0 : progress;\n};\n\nexport const computeMediaDescription = (\n  stateObj: MediaPlayerEntity\n): string => {\n  let secondaryTitle: string;\n\n  switch (stateObj.attributes.media_content_type) {\n    case \"music\":\n    case \"image\":\n      secondaryTitle = stateObj.attributes.media_artist!;\n      break;\n    case \"playlist\":\n      secondaryTitle =\n        stateObj.attributes.media_playlist || stateObj.attributes.media_artist!;\n      break;\n    case \"tvshow\":\n      secondaryTitle = stateObj.attributes.media_series_title!;\n      if (stateObj.attributes.media_season) {\n        secondaryTitle += \" S\" + stateObj.attributes.media_season;\n\n        if (stateObj.attributes.media_episode) {\n          secondaryTitle += \"E\" + stateObj.attributes.media_episode;\n        }\n      }\n      break;\n    case \"channel\":\n      secondaryTitle = stateObj.attributes.media_channel!;\n      break;\n    default:\n      secondaryTitle = stateObj.attributes.app_name || \"\";\n  }\n\n  return secondaryTitle;\n};\n\nexport const computeMediaControls = (\n  stateObj: MediaPlayerEntity,\n  useExtendedControls = false\n): ControlButton[] | undefined => {\n  if (!stateObj) {\n    return undefined;\n  }\n\n  const state = stateObj.state;\n\n  if (isUnavailableState(state)) {\n    return undefined;\n  }\n\n  if (!stateActive(stateObj)) {\n    return supportsFeature(stateObj, MediaPlayerEntityFeature.TURN_ON)\n      ? [\n          {\n            icon: mdiPower,\n            action: \"turn_on\",\n          },\n        ]\n      : undefined;\n  }\n\n  const buttons: ControlButton[] = [];\n\n  if (supportsFeature(stateObj, MediaPlayerEntityFeature.TURN_OFF)) {\n    buttons.push({\n      icon: mdiPower,\n      action: \"turn_off\",\n    });\n  }\n\n  const assumedState = stateObj.attributes.assumed_state === true;\n  const stateAttr = stateObj.attributes;\n\n  if (\n    (state === \"playing\" || state === \"paused\" || assumedState) &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.SHUFFLE_SET) &&\n    useExtendedControls\n  ) {\n    buttons.push({\n      icon: stateAttr.shuffle === true ? mdiShuffle : mdiShuffleDisabled,\n      action: \"shuffle_set\",\n    });\n  }\n\n  if (\n    (state === \"playing\" || state === \"paused\" || assumedState) &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.PREVIOUS_TRACK)\n  ) {\n    buttons.push({\n      icon: mdiSkipPrevious,\n      action: \"media_previous_track\",\n    });\n  }\n\n  if (\n    !assumedState &&\n    ((state === \"playing\" &&\n      (supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE) ||\n        supportsFeature(stateObj, MediaPlayerEntityFeature.STOP))) ||\n      ((state === \"paused\" || state === \"idle\") &&\n        supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY)) ||\n      (state === \"on\" &&\n        (supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY) ||\n          supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE))))\n  ) {\n    buttons.push({\n      icon:\n        state === \"on\"\n          ? mdiPlayPause\n          : state !== \"playing\"\n            ? mdiPlay\n            : supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)\n              ? mdiPause\n              : mdiStop,\n      action:\n        state !== \"playing\"\n          ? \"media_play\"\n          : supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)\n            ? \"media_pause\"\n            : \"media_stop\",\n    });\n  }\n\n  if (\n    assumedState &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.PLAY)\n  ) {\n    buttons.push({\n      icon: mdiPlay,\n      action: \"media_play\",\n    });\n  }\n\n  if (\n    assumedState &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.PAUSE)\n  ) {\n    buttons.push({\n      icon: mdiPause,\n      action: \"media_pause\",\n    });\n  }\n\n  if (\n    assumedState &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.STOP)\n  ) {\n    buttons.push({\n      icon: mdiStop,\n      action: \"media_stop\",\n    });\n  }\n\n  if (\n    (state === \"playing\" || state === \"paused\" || assumedState) &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.NEXT_TRACK)\n  ) {\n    buttons.push({\n      icon: mdiSkipNext,\n      action: \"media_next_track\",\n    });\n  }\n\n  if (\n    (state === \"playing\" || state === \"paused\" || assumedState) &&\n    supportsFeature(stateObj, MediaPlayerEntityFeature.REPEAT_SET) &&\n    useExtendedControls\n  ) {\n    buttons.push({\n      icon:\n        stateAttr.repeat === \"all\"\n          ? mdiRepeat\n          : stateAttr.repeat === \"one\"\n            ? mdiRepeatOnce\n            : mdiRepeatOff,\n      action: \"repeat_set\",\n    });\n  }\n\n  return buttons.length > 0 ? buttons : undefined;\n};\n\nexport const formatMediaTime = (seconds: number | undefined): string => {\n  if (seconds === undefined || seconds === Infinity) {\n    return \"\";\n  }\n\n  let secondsString = new Date(seconds * 1000).toISOString();\n  secondsString =\n    seconds > 3600\n      ? secondsString.substring(11, 16)\n      : secondsString.substring(14, 19);\n  return secondsString.replace(/^0+/, \"\").padStart(4, \"0\");\n};\n\nexport const cleanupMediaTitle = (title?: string): string | undefined => {\n  if (!title) {\n    return undefined;\n  }\n\n  const index = title.indexOf(\"?authSig=\");\n  let cleanTitle = index > 0 ? title.slice(0, index) : title;\n\n  if (cleanTitle.startsWith(\"http\")) {\n    cleanTitle = decodeURIComponent(cleanTitle.split(\"/\").pop()!);\n  }\n\n  return cleanTitle;\n};\n\n/**\n * Set volume of a media player entity.\n * @param hass Home Assistant object\n * @param entity_id entity ID of media player\n * @param volume_level number between 0..1\n * @returns\n */\nexport const setMediaPlayerVolume = (\n  hass: HomeAssistant,\n  entity_id: string,\n  volume_level: number\n) =>\n  hass.callService(\"media_player\", \"volume_set\", { entity_id, volume_level });\n\nexport const handleMediaControlClick = (\n  hass: HomeAssistant,\n  stateObj: MediaPlayerEntity,\n  action: string\n) =>\n  hass!.callService(\n    \"media_player\",\n    action,\n    action === \"shuffle_set\"\n      ? {\n          entity_id: stateObj!.entity_id,\n          shuffle: !stateObj!.attributes.shuffle,\n        }\n      : action === \"repeat_set\"\n        ? {\n            entity_id: stateObj!.entity_id,\n            repeat:\n              stateObj!.attributes.repeat === \"all\"\n                ? \"one\"\n                : stateObj!.attributes.repeat === \"off\"\n                  ? \"all\"\n                  : \"off\",\n          }\n        : {\n            entity_id: stateObj!.entity_id,\n          }\n  );\n\nexport const mediaPlayerPlayMedia = (\n  hass: HomeAssistant,\n  entity_id: string,\n  media_content_id: string,\n  media_content_type: string,\n  extra: {\n    enqueue?: \"play\" | \"next\" | \"add\" | \"replace\";\n    announce?: boolean;\n  } = {}\n) => {\n  // We set text-to-speech to announce.\n  if (\n    !extra.enqueue &&\n    extra.announce === undefined &&\n    isTTSMediaSource(media_content_id)\n  ) {\n    extra.announce = true;\n  }\n  return hass.callService(\"media_player\", \"play_media\", {\n    entity_id,\n    media_content_id,\n    media_content_type,\n    ...extra,\n  });\n};\n\nexport const mediaPlayerJoin = (\n  hass: HomeAssistant,\n  entity_id: string,\n  group_members: string[]\n) => hass.callService(\"media_player\", \"join\", { group_members }, { entity_id });\n\nexport const mediaPlayerUnjoin = (hass: HomeAssistant, entity_id: string) =>\n  hass.callService(\"media_player\", \"unjoin\", {}, { entity_id });\n","export interface BrandsOptions {\n  domain: string;\n  type: \"icon\" | \"logo\" | \"icon@2x\" | \"logo@2x\";\n  useFallback?: boolean;\n  darkOptimized?: boolean;\n  brand?: boolean;\n}\n\nexport interface HardwareBrandsOptions {\n  category: string;\n  model?: string;\n  manufacturer: string;\n  darkOptimized?: boolean;\n}\n\nexport const brandsUrl = (options: BrandsOptions): string =>\n  `https://brands.home-assistant.io/${options.brand ? \"brands/\" : \"\"}${\n    options.useFallback ? \"_/\" : \"\"\n  }${options.domain}/${options.darkOptimized ? \"dark_\" : \"\"}${\n    options.type\n  }.png`;\n\nexport const hardwareBrandsUrl = (options: HardwareBrandsOptions): string =>\n  `https://brands.home-assistant.io/hardware/${options.category}/${\n    options.darkOptimized ? \"dark_\" : \"\"\n  }${options.manufacturer}${options.model ? `_${options.model}` : \"\"}.png`;\n\nexport const extractDomainFromBrandUrl = (url: string) => url.split(\"/\")[4];\n\nexport const isBrandUrl = (thumbnail: string | \"\"): boolean =>\n  thumbnail.startsWith(\"https://brands.home-assistant.io/\");\n"],"names":["LOAD_ELEMENTS","boolean","constant","float","grid","expandable","e","integer","multi_select","positive_time_period_dict","select","string","optional_actions","getValue","obj","item","name","flatten","HaForm","LitElement","getFormProperties","focus","this","updateComplete","root","renderRoot","querySelector","child","children","tagName","ReactiveElement","willUpdate","changedProps","has","schema","forEach","type","render","html","error","base","_computeError","map","getError","warning","getWarning","_computeWarning","hass","narrow","selector","data","_computeLabel","disabled","required","default","_computeHelper","localizeValue","_generateContext","dynamicElement","fieldElementName","label","helper","localize","computeLabel","computeHelper","context","context_key","data_key","Object","entries","createRenderRoot","addValueChangedListener","element","addEventListener","ev","stopPropagation","target","newValue","detail","value","fireEvent","Array","isArray","err","computeError","computeWarning","args","styles","css","attribute","Boolean","UNAVAILABLE","UNKNOWN","ON","OFF","UNAVAILABLE_STATES","OFF_STATES","isUnavailableState","arrayLiteralIncludes","MediaPlayerEntityFeature","BROWSER_PLAYER","MediaClassBrowserSettings","album","icon","layout","app","show_list_images","artist","mdiAccountMusic","channel","mdiTelevisionClassic","thumbnail_ratio","composer","contributing_artist","directory","episode","game","genre","image","movie","music","playlist","podcast","season","track","tv_show","url","video","browseMediaPlayer","entityId","mediaContentId","mediaContentType","callWS","entity_id","media_content_id","media_content_type","brandsUrl","options","brand","useFallback","domain","darkOptimized","extractDomainFromBrandUrl","split","isBrandUrl","thumbnail","startsWith"],"mappings":"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"}