{"version":3,"file":"2417.85f701b517a8a0c8.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_datetime-form.ts"],"sourcesContent":["import type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type {\n  ComboBoxDataProviderCallback,\n  ComboBoxDataProviderParams,\n} from \"@vaadin/combo-box/vaadin-combo-box-light\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { customIcons } from \"../data/custom_icons\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../types\";\nimport \"./ha-combo-box\";\nimport \"./ha-icon\";\nimport \"./ha-combo-box-item\";\n\ninterface IconItem {\n  icon: string;\n  parts: Set<string>;\n  keywords: string[];\n}\n\ninterface RankedIcon {\n  icon: string;\n  rank: number;\n}\n\nlet ICONS: IconItem[] = [];\nlet ICONS_LOADED = false;\n\nconst loadIcons = async () => {\n  ICONS_LOADED = true;\n\n  const iconList = await import(\"../../build/mdi/iconList.json\");\n  ICONS = iconList.default.map((icon) => ({\n    icon: `mdi:${icon.name}`,\n    parts: new Set(icon.name.split(\"-\")),\n    keywords: icon.keywords,\n  }));\n\n  const customIconLoads: Promise<IconItem[]>[] = [];\n  Object.keys(customIcons).forEach((iconSet) => {\n    customIconLoads.push(loadCustomIconItems(iconSet));\n  });\n  (await Promise.all(customIconLoads)).forEach((customIconItems) => {\n    ICONS.push(...customIconItems);\n  });\n};\n\nconst loadCustomIconItems = async (iconsetPrefix: string) => {\n  try {\n    const getIconList = customIcons[iconsetPrefix].getIconList;\n    if (typeof getIconList !== \"function\") {\n      return [];\n    }\n    const iconList = await getIconList();\n    const customIconItems = iconList.map((icon) => ({\n      icon: `${iconsetPrefix}:${icon.name}`,\n      parts: new Set(icon.name.split(\"-\")),\n      keywords: icon.keywords ?? [],\n    }));\n    return customIconItems;\n  } catch (_err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unable to load icon list for ${iconsetPrefix} iconset`);\n    return [];\n  }\n};\n\nconst rowRenderer: ComboBoxLitRenderer<IconItem | RankedIcon> = (item) => html`\n  <ha-combo-box-item type=\"button\">\n    <ha-icon .icon=${item.icon} slot=\"start\"></ha-icon>\n    ${item.icon}\n  </ha-combo-box-item>\n`;\n\n@customElement(\"ha-icon-picker\")\nexport class HaIconPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean }) public invalid = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        item-value-path=\"icon\"\n        item-label-path=\"icon\"\n        .value=${this._value}\n        allow-custom-value\n        .dataProvider=${ICONS_LOADED ? this._iconProvider : undefined}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .placeholder=${this.placeholder}\n        .errorMessage=${this.errorMessage}\n        .invalid=${this.invalid}\n        .renderer=${rowRenderer}\n        icon\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        ${this._value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this._value || this.placeholder} slot=\"icon\">\n              </ha-icon>\n            `\n          : html`<slot slot=\"icon\" name=\"fallback\"></slot>`}\n      </ha-combo-box>\n    `;\n  }\n\n  // Filter can take a significant chunk of frame (up to 3-5 ms)\n  private _filterIcons = memoizeOne(\n    (filter: string, iconItems: IconItem[] = ICONS) => {\n      if (!filter) {\n        return iconItems;\n      }\n\n      const filteredItems: RankedIcon[] = [];\n      const addIcon = (icon: string, rank: number) =>\n        filteredItems.push({ icon, rank });\n\n      // Filter and rank such that exact matches rank higher, and prefer icon name matches over keywords\n      for (const item of iconItems) {\n        if (item.parts.has(filter)) {\n          addIcon(item.icon, 1);\n        } else if (item.keywords.includes(filter)) {\n          addIcon(item.icon, 2);\n        } else if (item.icon.includes(filter)) {\n          addIcon(item.icon, 3);\n        } else if (item.keywords.some((word) => word.includes(filter))) {\n          addIcon(item.icon, 4);\n        }\n      }\n\n      // Allow preview for custom icon not in list\n      if (filteredItems.length === 0) {\n        addIcon(filter, 0);\n      }\n\n      return filteredItems.sort((itemA, itemB) => itemA.rank - itemB.rank);\n    }\n  );\n\n  private _iconProvider = (\n    params: ComboBoxDataProviderParams,\n    callback: ComboBoxDataProviderCallback<IconItem | RankedIcon>\n  ) => {\n    const filteredItems = this._filterIcons(params.filter.toLowerCase(), ICONS);\n    const iStart = params.page * params.pageSize;\n    const iEnd = iStart + params.pageSize;\n    callback(filteredItems.slice(iStart, iEnd), filteredItems.length);\n  };\n\n  private async _openedChanged(ev: ValueChangedEvent<boolean>) {\n    const opened = ev.detail.value;\n    if (opened && !ICONS_LOADED) {\n      await loadIcons();\n      this.requestUpdate();\n    }\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    this._setValue(ev.detail.value);\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: this._value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  static styles = css`\n    *[slot=\"icon\"] {\n      color: var(--primary-text-color);\n      position: relative;\n      bottom: 2px;\n    }\n    *[slot=\"prefix\"] {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-picker\": HaIconPicker;\n  }\n}\n","import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-radio\";\nimport type { HaRadio } from \"../../../../components/ha-radio\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputDateTime } from \"../../../../data/input_datetime\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_datetime-form\")\nclass HaInputDateTimeForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputDateTime;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _mode!: \"date\" | \"time\" | \"datetime\";\n\n  set item(item: InputDateTime) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._mode =\n        item.has_time && item.has_date\n          ? \"datetime\"\n          : item.has_time\n            ? \"time\"\n            : \"date\";\n      this._item.has_date =\n        !item.has_date && !item.has_time ? true : item.has_date;\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._mode = \"date\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <br />\n        ${this.hass.localize(\"ui.dialogs.helper_settings.input_datetime.mode\")}:\n        <br />\n\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.date\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"date\"\n            .checked=${this._mode === \"date\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.time\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"time\"\n            .checked=${this._mode === \"time\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.datetime\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"datetime\"\n            .checked=${this._mode === \"datetime\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    const mode = (ev.target as HaRadio).value;\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._item,\n        has_time: [\"time\", \"datetime\"].includes(mode),\n        has_date: [\"date\", \"datetime\"].includes(mode),\n      },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_datetime-form\": HaInputDateTimeForm;\n  }\n}\n"],"names":["ICONS","ICONS_LOADED","loadCustomIconItems","getIconList","customIcons","iconsetPrefix","iconList","map","icon","name","parts","Set","split","keywords","_err","console","warn","rowRenderer","item","html","HaIconPicker","LitElement","render","hass","_value","_iconProvider","undefined","label","helper","disabled","required","placeholder","errorMessage","invalid","_openedChanged","_valueChanged","ev","detail","value","default","customIconLoads","Object","keys","forEach","iconSet","push","Promise","all","customIconItems","loadIcons","this","requestUpdate","stopPropagation","_setValue","fireEvent","bubbles","composed","args","_filterIcons","memoizeOne","filter","iconItems","filteredItems","addIcon","rank","has","includes","some","word","length","sort","itemA","itemB","params","callback","toLowerCase","iStart","page","pageSize","iEnd","slice","styles","css","attribute","type","Boolean","HaInputDateTimeForm","_item","_name","_icon","_mode","has_time","has_date","focus","updateComplete","then","shadowRoot","querySelector","localize","_modeChanged","nothing","mode","target","new","configValue","newValue","haStyle"],"mappings":"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"}