{"version":3,"file":"8787.e1f121e63092ef6f.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/translations/blank_before_percent.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-file-upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/file_upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/hassio/common.ts","webpack://knx-frontend/./homeassistant-frontend/src/dialogs/generic/show-dialog-box.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/bytes-to-string.ts","webpack://knx-frontend/./src/version.ts","webpack://knx-frontend/./src/views/info.ts"],"sourcesContent":["import type { FrontendLocaleData } from \"../../data/translation\";\n\n// Logic based on https://en.wikipedia.org/wiki/Percent_sign#Form_and_spacing\nexport const blankBeforePercent = (\n  localeOptions: FrontendLocaleData\n): string => {\n  switch (localeOptions.language) {\n    case \"cs\":\n    case \"de\":\n    case \"fi\":\n    case \"fr\":\n    case \"sk\":\n    case \"sv\":\n      return \" \";\n    default:\n      return \"\";\n  }\n};\n","import Button from \"@home-assistant/webawesome/dist/components/button/button\";\nimport { css, type CSSResultGroup } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\nexport type Appearance = \"accent\" | \"filled\" | \"outlined\" | \"plain\";\n\n/**\n * Home Assistant button component\n *\n * @element ha-button\n * @extends {Button}\n *\n * @summary\n * A stylable button component supporting Home Assistant theming, variants, and appearances based on webawesome button.\n *\n * @slot - Label of the button\n * @slot start - The prefix container (usually for icons).\n * @slot end - The suffix container (usually for icons).\n *\n * @csspart base - The component's base wrapper.\n * @csspart start - The container that wraps the prefix.\n * @csspart label - The button's label.\n * @csspart end - The container that wraps the suffix.\n * @csspart caret - The button's caret icon, an `<sl-icon>` element.\n * @csspart spinner - The spinner that shows when the button is in the loading state.\n *\n * @cssprop --ha-button-height - The height of the button.\n * @cssprop --ha-button-border-radius - The border radius of the button. defaults to `var(--ha-border-radius-pill)`.\n *\n * @attr {(\"small\"|\"medium\")} size - Sets the button size.\n * @attr {(\"brand\"|\"neutral\"|\"danger\"|\"warning\"|\"success\")} variant - Sets the button color variant. \"primary\" is default.\n * @attr {(\"accent\"|\"filled\"|\"plain\")} appearance - Sets the button appearance.\n * @attr {boolean} loading - shows a loading indicator instead of the buttons label and disable buttons click.\n * @attr {boolean} disabled - Disables the button and prevents user interaction.\n */\n@customElement(\"ha-button\")\nexport class HaButton extends Button {\n  variant: \"brand\" | \"neutral\" | \"success\" | \"warning\" | \"danger\" = \"brand\";\n\n  static get styles(): CSSResultGroup {\n    return [\n      Button.styles,\n      css`\n        .button {\n          /* set theme vars */\n          --wa-form-control-padding-inline: 16px;\n          --wa-font-weight-action: var(--ha-font-weight-medium);\n          --wa-form-control-border-radius: var(\n            --ha-button-border-radius,\n            var(--ha-border-radius-pill)\n          );\n\n          --wa-form-control-height: var(\n            --ha-button-height,\n            var(--button-height, 40px)\n          );\n\n          font-size: var(--ha-font-size-m);\n          line-height: 1;\n\n          transition: background-color 0.15s ease-in-out;\n        }\n\n        :host([size=\"small\"]) .button {\n          --wa-form-control-height: var(\n            --ha-button-height,\n            var(--button-height, 32px)\n          );\n          font-size: var(--wa-font-size-s, var(--ha-font-size-m));\n          --wa-form-control-padding-inline: 12px;\n        }\n\n        :host([variant=\"brand\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-primary-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-primary-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-primary-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-primary-loud-hover\n          );\n        }\n\n        :host([variant=\"neutral\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-neutral-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-neutral-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-neutral-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-neutral-loud-hover\n          );\n        }\n\n        :host([variant=\"success\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-success-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-success-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-success-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-success-loud-hover\n          );\n        }\n\n        :host([variant=\"warning\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-warning-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-warning-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-warning-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-warning-loud-hover\n          );\n        }\n\n        :host([variant=\"danger\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-danger-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-danger-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-danger-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-danger-loud-hover\n          );\n        }\n\n        :host([appearance~=\"plain\"]) .button {\n          color: var(--wa-color-on-normal);\n          background-color: transparent;\n        }\n        :host([appearance~=\"plain\"]) .button.disabled {\n          background-color: transparent;\n          color: var(--ha-color-on-disabled-quiet);\n        }\n\n        :host([appearance~=\"outlined\"]) .button.disabled {\n          background-color: transparent;\n          color: var(--ha-color-on-disabled-quiet);\n        }\n\n        @media (hover: hover) {\n          :host([appearance~=\"filled\"])\n            .button:not(.disabled):not(.loading):hover {\n            background-color: var(--button-color-fill-normal-hover);\n          }\n          :host([appearance~=\"accent\"])\n            .button:not(.disabled):not(.loading):hover {\n            background-color: var(--button-color-fill-loud-hover);\n          }\n          :host([appearance~=\"plain\"])\n            .button:not(.disabled):not(.loading):hover {\n            color: var(--wa-color-on-normal);\n          }\n        }\n        :host([appearance~=\"filled\"]) .button {\n          color: var(--wa-color-on-normal);\n          background-color: var(--wa-color-fill-normal);\n          border-color: transparent;\n        }\n        :host([appearance~=\"filled\"])\n          .button:not(.disabled):not(.loading):active {\n          background-color: var(--button-color-fill-normal-active);\n        }\n        :host([appearance~=\"filled\"]) .button.disabled {\n          background-color: var(--ha-color-fill-disabled-normal-resting);\n          color: var(--ha-color-on-disabled-normal);\n        }\n\n        :host([appearance~=\"accent\"]) .button {\n          background-color: var(\n            --wa-color-fill-loud,\n            var(--wa-color-neutral-fill-loud)\n          );\n        }\n        :host([appearance~=\"accent\"])\n          .button:not(.disabled):not(.loading):active {\n          background-color: var(--button-color-fill-loud-active);\n        }\n        :host([appearance~=\"accent\"]) .button.disabled {\n          background-color: var(--ha-color-fill-disabled-loud-resting);\n          color: var(--ha-color-on-disabled-loud);\n        }\n\n        :host([loading]) {\n          pointer-events: none;\n        }\n\n        .button.disabled {\n          opacity: 1;\n        }\n\n        slot[name=\"start\"]::slotted(*) {\n          margin-inline-end: 4px;\n        }\n        slot[name=\"end\"]::slotted(*) {\n          margin-inline-start: 4px;\n        }\n\n        .button.has-start {\n          padding-inline-start: 8px;\n        }\n        .button.has-end {\n          padding-inline-end: 8px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button\": HaButton;\n  }\n}\n","import \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport { mdiDelete, mdiFileUpload } from \"@mdi/js\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-icon-button\";\nimport { blankBeforePercent } from \"../common/translations/blank_before_percent\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { bytesToString } from \"../util/bytes-to-string\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"file-picked\": { files: File[] };\n    \"files-cleared\": undefined;\n  }\n}\n\n@customElement(\"ha-file-upload\")\nexport class HaFileUpload extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property() public accept!: string;\n\n  @property() public icon?: string;\n\n  @property() public label?: string;\n\n  @property() public secondary?: string;\n\n  @property({ attribute: \"uploading-label\" }) public uploadingLabel?: string;\n\n  @property({ attribute: \"delete-label\" }) public deleteLabel?: string;\n\n  @property() public supports?: string;\n\n  @property({ type: Object }) public value?: File | File[] | FileList | string;\n\n  @property({ type: Boolean }) public multiple = false;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public uploading = false;\n\n  @property({ type: Number }) public progress?: number;\n\n  @property({ type: Boolean, attribute: \"auto-open-file-dialog\" })\n  public autoOpenFileDialog = false;\n\n  @state() private _drag = false;\n\n  @query(\"#input\") private _input?: HTMLInputElement;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    if (this.autoOpenFileDialog) {\n      this._openFilePicker();\n    }\n  }\n\n  private get _name() {\n    if (this.value === undefined) {\n      return \"\";\n    }\n    if (typeof this.value === \"string\") {\n      return this.value;\n    }\n    const files =\n      this.value instanceof FileList\n        ? Array.from(this.value)\n        : ensureArray(this.value);\n\n    return files.map((file) => file.name).join(\", \");\n  }\n\n  public render(): TemplateResult {\n    const localize = this.localize || this.hass!.localize;\n    return html`\n      ${this.uploading\n        ? html`<div class=\"container\">\n            <div class=\"uploading\">\n              <span class=\"header\"\n                >${this.uploadingLabel ||\n                (this.value\n                  ? localize(\"ui.components.file-upload.uploading_name\", {\n                      name: this._name,\n                    })\n                  : localize(\"ui.components.file-upload.uploading\"))}</span\n              >\n              ${this.progress\n                ? html`<div class=\"progress\">\n                    ${this.progress}${this.hass &&\n                    blankBeforePercent(this.hass!.locale)}%\n                  </div>`\n                : nothing}\n            </div>\n            <mwc-linear-progress\n              .indeterminate=${!this.progress}\n              .progress=${this.progress ? this.progress / 100 : undefined}\n            ></mwc-linear-progress>\n          </div>`\n        : html`<label\n            for=${this.value ? \"\" : \"input\"}\n            class=\"container ${classMap({\n              dragged: this._drag,\n              multiple: this.multiple,\n              value: Boolean(this.value),\n            })}\"\n            @drop=${this._handleDrop}\n            @dragenter=${this._handleDragStart}\n            @dragover=${this._handleDragStart}\n            @dragleave=${this._handleDragEnd}\n            @dragend=${this._handleDragEnd}\n            >${!this.value\n              ? html`<ha-button\n                    size=\"small\"\n                    appearance=\"filled\"\n                    @click=${this._openFilePicker}\n                  >\n                    <ha-svg-icon\n                      slot=\"start\"\n                      .path=${this.icon || mdiFileUpload}\n                    ></ha-svg-icon>\n                    ${this.label || localize(\"ui.components.file-upload.label\")}\n                  </ha-button>\n                  <span class=\"secondary\"\n                    >${this.secondary ||\n                    localize(\"ui.components.file-upload.secondary\")}</span\n                  >\n                  <span class=\"supports\">${this.supports}</span>`\n              : typeof this.value === \"string\"\n                ? html`<div class=\"row\">\n                    <div class=\"value\" @click=${this._openFilePicker}>\n                      <ha-svg-icon\n                        .path=${this.icon || mdiFileUpload}\n                      ></ha-svg-icon>\n                      ${this.value}\n                    </div>\n                    <ha-icon-button\n                      @click=${this._clearValue}\n                      .label=${this.deleteLabel || localize(\"ui.common.delete\")}\n                      .path=${mdiDelete}\n                    ></ha-icon-button>\n                  </div>`\n                : (this.value instanceof FileList\n                    ? Array.from(this.value)\n                    : ensureArray(this.value)\n                  ).map(\n                    (file) =>\n                      html`<div class=\"row\">\n                        <div class=\"value\" @click=${this._openFilePicker}>\n                          <ha-svg-icon\n                            .path=${this.icon || mdiFileUpload}\n                          ></ha-svg-icon>\n                          ${file.name} - ${bytesToString(file.size)}\n                        </div>\n                        <ha-icon-button\n                          @click=${this._clearValue}\n                          .label=${this.deleteLabel ||\n                          localize(\"ui.common.delete\")}\n                          .path=${mdiDelete}\n                        ></ha-icon-button>\n                      </div>`\n                  )}\n            <input\n              id=\"input\"\n              type=\"file\"\n              class=\"file\"\n              .accept=${this.accept}\n              .multiple=${this.multiple}\n              @change=${this._handleFilePicked}\n          /></label>`}\n    `;\n  }\n\n  private _openFilePicker() {\n    this._input?.click();\n  }\n\n  private _handleDrop(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    if (ev.dataTransfer?.files) {\n      fireEvent(this, \"file-picked\", {\n        files:\n          this.multiple || ev.dataTransfer.files.length === 1\n            ? Array.from(ev.dataTransfer.files)\n            : [ev.dataTransfer.files[0]],\n      });\n    }\n    this._drag = false;\n  }\n\n  private _handleDragStart(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = true;\n  }\n\n  private _handleDragEnd(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = false;\n  }\n\n  private _handleFilePicked(ev) {\n    if (ev.target.files.length === 0) {\n      return;\n    }\n    this.value = ev.target.files;\n    fireEvent(this, \"file-picked\", { files: ev.target.files });\n  }\n\n  private _clearValue(ev: Event) {\n    ev.preventDefault();\n    this._input!.value = \"\";\n    this.value = undefined;\n    fireEvent(this, \"change\");\n    fireEvent(this, \"files-cleared\");\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      height: 240px;\n    }\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--disabled-text-color);\n    }\n    .container {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      border: solid 1px\n        var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n      border-radius: var(--mdc-shape-small, 4px);\n      height: 100%;\n    }\n    .row {\n      display: flex;\n      align-items: center;\n    }\n    label.container {\n      border: dashed 1px\n        var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n      cursor: pointer;\n    }\n    .container .uploading {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      align-items: flex-start;\n      padding: 0 32px;\n      box-sizing: border-box;\n    }\n    :host([disabled]) .container {\n      border-color: var(--disabled-color);\n    }\n    label:hover,\n    label.dragged {\n      border-style: solid;\n    }\n    label.dragged {\n      border-color: var(--primary-color);\n    }\n    .dragged:before {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: var(--primary-color);\n      content: \"\";\n      opacity: var(--dark-divider-opacity);\n      pointer-events: none;\n      border-radius: var(--mdc-shape-small, 4px);\n    }\n    label.value {\n      cursor: default;\n    }\n    label.value.multiple {\n      justify-content: unset;\n      overflow: auto;\n    }\n    .highlight {\n      color: var(--primary-color);\n    }\n    ha-button {\n      margin-bottom: 8px;\n    }\n    .supports {\n      color: var(--secondary-text-color);\n      font-size: var(--ha-font-size-s);\n    }\n    :host([disabled]) .secondary {\n      color: var(--disabled-text-color);\n    }\n    input.file {\n      display: none;\n    }\n    .value {\n      cursor: pointer;\n    }\n    .value ha-svg-icon {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n    ha-button {\n      --mdc-button-outline-color: var(--primary-color);\n      --mdc-icon-button-size: 24px;\n    }\n    mwc-linear-progress {\n      width: 100%;\n      padding: 8px 32px;\n      box-sizing: border-box;\n    }\n    .header {\n      font-weight: var(--ha-font-weight-medium);\n    }\n    .progress {\n      color: var(--secondary-text-color);\n    }\n    button.link {\n      background: none;\n      border: none;\n      padding: 0;\n      font-size: var(--ha-font-size-m);\n      color: var(--primary-color);\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-file-upload\": HaFileUpload;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\nexport const uploadFile = async (hass: HomeAssistant, file: File) => {\n  const fd = new FormData();\n  fd.append(\"file\", file);\n  const resp = await hass.fetchWithAuth(\"/api/file_upload\", {\n    method: \"POST\",\n    body: fd,\n  });\n  if (resp.status === 413) {\n    throw new Error(`Uploaded file is too large (${file.name})`);\n  } else if (resp.status !== 200) {\n    throw new Error(\"Unknown error\");\n  }\n  const data = await resp.json();\n  return data.file_id;\n};\n\nexport const removeFile = async (hass: HomeAssistant, file_id: string) =>\n  hass.callApi(\"DELETE\", \"file_upload\", {\n    file_id,\n  });\n","import { atLeastVersion } from \"../../common/config/version\";\nimport type { HomeAssistant } from \"../../types\";\n\nexport interface HassioResponse<T> {\n  data: T;\n  message?: string;\n  result: \"ok\" | \"error\";\n}\n\nexport interface HassioStats {\n  blk_read: number;\n  blk_write: number;\n  cpu_percent: number;\n  memory_limit: number;\n  memory_percent: number;\n  memory_usage: number;\n  network_rx: number;\n  network_tx: number;\n}\n\nexport const hassioApiResultExtractor = <T>(response: HassioResponse<T>) =>\n  response.data;\n\nexport const extractApiErrorMessage = (error: any): string =>\n  typeof error === \"object\"\n    ? typeof error.body === \"object\"\n      ? error.body.message || \"Unknown error, see supervisor logs\"\n      : error.body || error.message || \"Unknown error, see supervisor logs\"\n    : error;\n\nconst ignoredStatusCodes = new Set([502, 503, 504]);\n\nexport const ignoreSupervisorError = (error): boolean => {\n  if (error && error.status_code && ignoredStatusCodes.has(error.status_code)) {\n    return true;\n  }\n  if (\n    error &&\n    error.message &&\n    (error.message.includes(\"ERR_CONNECTION_CLOSED\") ||\n      error.message.includes(\"ERR_CONNECTION_RESET\"))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const fetchHassioStats = async (\n  hass: HomeAssistant,\n  container: string\n): Promise<HassioStats> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${container}/stats`,\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioStats>>(\n      \"GET\",\n      `hassio/${container}/stats`\n    )\n  );\n};\n","import type { TemplateResult } from \"lit\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogBoxParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n  warning?: boolean;\n}\n\nexport interface AlertDialogParams extends BaseDialogBoxParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogBoxParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n  destructive?: boolean;\n}\n\nexport interface PromptDialogParams extends BaseDialogBoxParams {\n  inputLabel?: string;\n  dismissText?: string;\n  inputType?: string;\n  defaultValue?: string;\n  placeholder?: string;\n  confirm?: (out?: string) => void;\n  cancel?: () => void;\n  inputMin?: number | string;\n  inputMax?: number | string;\n}\n\nexport interface DialogBoxParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () => import(\"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogBoxParams,\n  extra?: {\n    confirmation?: DialogBoxParams[\"confirmation\"];\n    prompt?: DialogBoxParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, {\n    confirmation: true,\n  }) as Promise<boolean>;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","export const bytesToString = (value = 0, decimals = 2): string => {\n  if (value === 0) {\n    return \"0 Bytes\";\n  }\n  const k = 1024;\n  decimals = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  const i = Math.floor(Math.log(value) / Math.log(k));\n  return `${parseFloat((value / k ** i).toFixed(decimals))} ${sizes[i]}`;\n};\n","// This is replaced by git tag name on release. See ReleaseActions.yml\nexport const VERSION = \"2025.10.17.202411\";\n","import { mdiFileUpload } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { css, nothing, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\n\nimport { fireEvent } from \"@ha/common/dom/fire_event\";\nimport \"@ha/components/ha-card\";\nimport \"@ha/layouts/hass-tabs-subpage\";\nimport type { PageNavigation } from \"@ha/layouts/hass-tabs-subpage\";\nimport \"@ha/components/ha-button\";\nimport \"@ha/components/ha-file-upload\";\nimport \"@ha/components/ha-selector/ha-selector-text\";\nimport { uploadFile } from \"@ha/data/file_upload\";\nimport { extractApiErrorMessage } from \"@ha/data/hassio/common\";\nimport { showAlertDialog, showConfirmationDialog } from \"@ha/dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant, Route } from \"@ha/types\";\n\nimport { processProjectFile, removeProjectFile } from \"../services/websocket.service\";\n\nimport type { KNX } from \"../types/knx\";\nimport type { KNXProjectInfo } from \"../types/websocket\";\nimport { KNXLogger } from \"../tools/knx-logger\";\nimport { VERSION } from \"../version\";\n\nconst logger = new KNXLogger(\"info\");\n\n@customElement(\"knx-info\")\nexport class KNXInfo extends LitElement {\n  @property({ type: Object }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public knx!: KNX;\n\n  @property({ type: Boolean, reflect: true }) public narrow!: boolean;\n\n  @property({ type: Object }) public route?: Route;\n\n  @property({ type: Array, reflect: false }) public tabs!: PageNavigation[];\n\n  @state() private _projectPassword?: string;\n\n  @state() private _uploading = false;\n\n  @state() private _projectFile?: File;\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow!}\n        .route=${this.route!}\n        .tabs=${this.tabs}\n        .localizeFunc=${this.knx.localize}\n      >\n        <div class=\"columns\">\n          ${this._renderInfoCard()}\n          ${this.knx.projectInfo ? this._renderProjectDataCard(this.knx.projectInfo) : nothing}\n          ${this._renderProjectUploadCard()}\n        </div>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private _renderInfoCard() {\n    return html` <ha-card class=\"knx-info\">\n      <div class=\"card-content knx-info-section\">\n        <div class=\"knx-content-row header\">${this.knx.localize(\"info_information_header\")}</div>\n\n        <div class=\"knx-content-row\">\n          <div>XKNX Version</div>\n          <div>${this.knx.connectionInfo.version}</div>\n        </div>\n\n        <div class=\"knx-content-row\">\n          <div>KNX-Frontend Version</div>\n          <div>${VERSION}</div>\n        </div>\n\n        <div class=\"knx-content-row\">\n          <div>${this.knx.localize(\"info_connected_to_bus\")}</div>\n          <div>\n            ${this.hass.localize(\n              this.knx.connectionInfo.connected ? \"ui.common.yes\" : \"ui.common.no\",\n            )}\n          </div>\n        </div>\n\n        <div class=\"knx-content-row\">\n          <div>${this.knx.localize(\"info_individual_address\")}</div>\n          <div>${this.knx.connectionInfo.current_address}</div>\n        </div>\n\n        <div class=\"knx-bug-report\">\n          ${this.knx.localize(\"info_issue_tracker\")}\n          <a href=\"https://github.com/XKNX/knx-integration\" target=\"_blank\">xknx/knx-integration</a>\n        </div>\n\n        <div class=\"knx-bug-report\">\n          ${this.knx.localize(\"info_my_knx\")}\n          <a href=\"https://my.knx.org\" target=\"_blank\">my.knx.org</a>\n        </div>\n      </div>\n    </ha-card>`;\n  }\n\n  private _renderProjectDataCard(projectInfo: KNXProjectInfo) {\n    return html`\n      <ha-card class=\"knx-info\">\n          <div class=\"card-content knx-content\">\n            <div class=\"header knx-content-row\">\n              ${this.knx.localize(\"info_project_data_header\")}\n            </div>\n            <div class=\"knx-content-row\">\n              <div>${this.knx.localize(\"info_project_data_name\")}</div>\n              <div>${projectInfo.name}</div>\n            </div>\n            <div class=\"knx-content-row\">\n              <div>${this.knx.localize(\"info_project_data_last_modified\")}</div>\n              <div>${new Date(projectInfo.last_modified).toUTCString()}</div>\n            </div>\n            <div class=\"knx-content-row\">\n              <div>${this.knx.localize(\"info_project_data_tool_version\")}</div>\n              <div>${projectInfo.tool_version}</div>\n            </div>\n            <div class=\"knx-content-row\">\n              <div>${this.knx.localize(\"info_project_data_xknxproject_version\")}</div>\n              <div>${projectInfo.xknxproject_version}</div>\n            </div>\n            <div class=\"knx-button-row\">\n              <ha-button\n                class=\"knx-warning push-right\"\n                @click=${this._removeProject}\n                .disabled=${this._uploading || !this.knx.projectInfo}\n                >\n                ${this.knx.localize(\"info_project_delete\")}\n              </ha-button>\n            </div>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _renderProjectUploadCard() {\n    return html` <ha-card class=\"knx-info\">\n      <div class=\"card-content knx-content\">\n        <div class=\"knx-content-row header\">${this.knx.localize(\"info_project_file_header\")}</div>\n        <div class=\"knx-content-row\">${this.knx.localize(\"info_project_upload_description\")}</div>\n        <div class=\"knx-content-row\">\n          <ha-file-upload\n            .hass=${this.hass}\n            accept=\".knxproj, .knxprojarchive\"\n            .icon=${mdiFileUpload}\n            .label=${this.knx.localize(\"info_project_file\")}\n            .value=${this._projectFile?.name}\n            .uploading=${this._uploading}\n            @file-picked=${this._filePicked}\n          ></ha-file-upload>\n        </div>\n        <div class=\"knx-content-row\">\n          <ha-selector-text\n            .hass=${this.hass}\n            .value=${this._projectPassword || \"\"}\n            .label=${this.hass.localize(\"ui.login-form.password\")}\n            .selector=${{ text: { multiline: false, type: \"password\" } }}\n            .required=${false}\n            @value-changed=${this._passwordChanged}\n          >\n          </ha-selector-text>\n        </div>\n        <div class=\"knx-button-row\">\n          <ha-button\n            class=\"push-right\"\n            @click=${this._uploadFile}\n            .disabled=${this._uploading || !this._projectFile}\n            >${this.hass.localize(\"ui.common.submit\")}</ha-button\n          >\n        </div>\n      </div>\n    </ha-card>`;\n  }\n\n  private _filePicked(ev) {\n    this._projectFile = ev.detail.files[0];\n  }\n\n  private _passwordChanged(ev) {\n    this._projectPassword = ev.detail.value;\n  }\n\n  private async _uploadFile(_ev) {\n    const file = this._projectFile;\n    if (typeof file === \"undefined\") {\n      return;\n    }\n\n    let error: Error | undefined;\n    this._uploading = true;\n    try {\n      const project_file_id = await uploadFile(this.hass, file);\n      await processProjectFile(this.hass, project_file_id, this._projectPassword || \"\");\n    } catch (err: any) {\n      error = err;\n      showAlertDialog(this, {\n        title: \"Upload failed\",\n        text: extractApiErrorMessage(err),\n      });\n    } finally {\n      if (!error) {\n        this._projectFile = undefined;\n        this._projectPassword = undefined;\n      }\n      this._uploading = false;\n      fireEvent(this, \"knx-reload\");\n    }\n  }\n\n  private async _removeProject(_ev) {\n    const confirmed = await showConfirmationDialog(this, {\n      text: this.knx.localize(\"info_project_delete\"),\n    });\n    if (!confirmed) {\n      logger.debug(\"User cancelled deletion\");\n      return;\n    }\n\n    try {\n      await removeProjectFile(this.hass);\n    } catch (err: any) {\n      showAlertDialog(this, {\n        title: \"Deletion failed\",\n        text: extractApiErrorMessage(err),\n      });\n    } finally {\n      fireEvent(this, \"knx-reload\");\n    }\n  }\n\n  static styles = css`\n    .columns {\n      display: flex;\n      justify-content: center;\n    }\n\n    @media screen and (max-width: 1232px) {\n      .columns {\n        flex-direction: column;\n      }\n\n      .knx-button-row {\n        margin-top: 20px;\n      }\n\n      .knx-info {\n        margin-right: 8px;\n      }\n    }\n\n    @media screen and (min-width: 1233px) {\n      .knx-button-row {\n        margin-top: auto;\n      }\n\n      .knx-info {\n        width: 400px;\n      }\n    }\n\n    .knx-info {\n      margin-left: 8px;\n      margin-top: 8px;\n    }\n\n    .knx-content {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      box-sizing: border-box;\n    }\n\n    .knx-content-row {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    }\n\n    .knx-content-row > div:nth-child(2) {\n      margin-left: 1rem;\n    }\n\n    .knx-button-row {\n      display: flex;\n      flex-direction: row;\n      vertical-align: bottom;\n      padding-top: 16px;\n    }\n\n    .push-left {\n      margin-right: auto;\n    }\n\n    .push-right {\n      margin-left: auto;\n    }\n\n    .knx-warning {\n      --mdc-theme-primary: var(--error-color);\n    }\n\n    .knx-project-description {\n      margin-top: -8px;\n      padding: 0px 16px 16px;\n    }\n\n    .knx-delete-project-button {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n    }\n\n    .knx-bug-report {\n      margin-top: 20px;\n\n      a {\n        text-decoration: none;\n      }\n    }\n\n    .header {\n      color: var(--ha-card-header-color, --primary-text-color);\n      font-family: var(--ha-card-header-font-family, inherit);\n      font-size: var(--ha-card-header-font-size, 24px);\n      letter-spacing: -0.012em;\n      line-height: 48px;\n      padding: -4px 16px 16px;\n      display: inline-block;\n      margin-block-start: 0px;\n      margin-block-end: 4px;\n      font-weight: normal;\n    }\n\n    ha-file-upload,\n    ha-selector-text {\n      width: 100%;\n      margin-top: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"knx-info\": KNXInfo;\n  }\n}\n"],"names":["blankBeforePercent","localeOptions","language","HaButton","Button","styles","css","args","variant","mdiDelete","mdiFileUpload","HaFileUpload","LitElement","firstUpdated","changedProperties","super","this","autoOpenFileDialog","_openFilePicker","_name","undefined","value","FileList","Array","from","ensureArray","map","file","name","join","render","localize","hass","html","uploading","uploadingLabel","progress","locale","nothing","classMap","dragged","_drag","multiple","Boolean","_handleDrop","_handleDragStart","_handleDragEnd","icon","_clearValue","deleteLabel","bytesToString","size","label","secondary","supports","accept","_handleFilePicked","_input","click","ev","preventDefault","stopPropagation","dataTransfer","files","fireEvent","length","target","disabled","attribute","type","Object","reflect","Number","uploadFile","fd","FormData","append","resp","fetchWithAuth","method","body","status","Error","json","file_id","removeFile","callApi","hassioApiResultExtractor","response","data","extractApiErrorMessage","error","message","Set","loadGenericDialog","e","showDialogHelper","element","dialogParams","extra","Promise","resolve","origCancel","cancel","origConfirm","confirm","dialogTag","dialogImport","prompt","out","showAlertDialog","showConfirmationDialog","confirmation","showPromptDialog","decimals","i","Math","floor","log","parseFloat","toFixed","VERSION","logger","KNXLogger","KNXInfo","narrow","route","tabs","knx","_renderInfoCard","projectInfo","_renderProjectDataCard","_renderProjectUploadCard","connectionInfo","version","connected","current_address","Date","last_modified","toUTCString","tool_version","xknxproject_version","_removeProject","_uploading","_projectFile","_filePicked","_projectPassword","text","multiline","_passwordChanged","_uploadFile","detail","_ev","project_file_id","processProjectFile","err","title","removeProjectFile","debug"],"mappings":"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"}