{"version":3,"file":"555.481a965cd159fb8f.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-condition.ts"],"sourcesContent":["import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport type { Condition } from \"../../data/automation\";\nimport type { ConditionSelector } from \"../../data/selector\";\nimport \"../../panels/config/automation/condition/ha-automation-condition\";\nimport type HaAutomationCondition from \"../../panels/config/automation/condition/ha-automation-condition\";\nimport type { HomeAssistant } from \"../../types\";\n\n@customElement(\"ha-selector-condition\")\nexport class HaConditionSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public selector!: ConditionSelector;\n\n  @property({ attribute: false }) public value?: Condition;\n\n  @property() public label?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @query(\"ha-automation-condition\")\n  private _conditionElement?: HaAutomationCondition;\n\n  protected render() {\n    return html`\n      ${this.label ? html`<label>${this.label}</label>` : nothing}\n      <ha-automation-condition\n        .disabled=${this.disabled}\n        .conditions=${this.value || []}\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .optionsInSidebar=${!!this.selector.condition?.optionsInSidebar}\n      ></ha-automation-condition>\n    `;\n  }\n\n  public expandAll() {\n    this._conditionElement?.expandAll();\n  }\n\n  public collapseAll() {\n    this._conditionElement?.collapseAll();\n  }\n\n  static styles = css`\n    ha-automation-condition {\n      display: block;\n      margin-bottom: 16px;\n    }\n    label {\n      display: block;\n      margin-bottom: 4px;\n      font-weight: var(--ha-font-weight-medium);\n      color: var(--secondary-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-condition\": HaConditionSelector;\n  }\n}\n"],"names":["HaConditionSelector","LitElement","render","html","label","nothing","disabled","value","hass","narrow","selector","condition","optionsInSidebar","expandAll","this","_conditionElement","collapseAll","args","styles","css","attribute","type","Boolean","reflect"],"mappings":"4RASO,MAAPA,UAAAC,EAAAA,GAgBYC,MAAAA,GACR,OAAAC,EAAAA,EAAA;QACE,KAAAC,MAAAD,EAAAA,EAAA,eAAAC,gBAAAC,EAAAA;;oBAEY,KAAAC;sBACE,KAAAC,OAAA;gBACN,KAAAC;kBACE,KAAAC;8BACU,KAAAC,SAAAC,WAAAC;;KAGxB,CAEOC,SAAAA,GACLC,KAAAC,mBAAAF,WACF,CAEOG,WAAAA,GACLF,KAAAC,mBAAAC,aACF,C,kBAnCK,SAAAC,GAAA,KAAAR,QAAA,OAAAH,UAAA,C,EAAMN,EAAAkB,OAAAC,EAAAA,EAAA;;;;;;;;;;;gCACCC,WAAA,K,uDAEAC,KAAAC,W,yDAEAF,WAAA,K,2DAEAA,WAAA,K,kHAIAC,KAAAC,QAAeC,SAAA,K"}