{"version":3,"file":"2436.1a291c5bc6f8d535.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-boolean.ts"],"sourcesContent":["import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type {\n  HaFormBooleanData,\n  HaFormBooleanSchema,\n  HaFormElement,\n} from \"./types\";\nimport type { HaCheckbox } from \"../ha-checkbox\";\nimport \"../ha-checkbox\";\nimport \"../ha-formfield\";\n\n@customElement(\"ha-form-boolean\")\nexport class HaFormBoolean extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public schema!: HaFormBooleanSchema;\n\n  @property({ attribute: false }) public data!: HaFormBooleanData;\n\n  @property() public label!: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-checkbox\", true) private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-formfield .label=${this.label}>\n        <ha-checkbox\n          .checked=${this.data}\n          .disabled=${this.disabled}\n          @change=${this._valueChanged}\n        ></ha-checkbox>\n        <span slot=\"label\">\n          <p class=\"primary\">${this.label}</p>\n          ${this.helper\n            ? html`<p class=\"secondary\">${this.helper}</p>`\n            : nothing}\n        </span>\n      </ha-formfield>\n    `;\n  }\n\n  private _valueChanged(ev: Event) {\n    fireEvent(this, \"value-changed\", {\n      value: (ev.target as HaCheckbox).checked,\n    });\n  }\n\n  static styles = css`\n    ha-formfield {\n      display: flex;\n      min-height: 56px;\n      align-items: center;\n      --mdc-typography-body2-font-size: 1em;\n    }\n    p {\n      margin: 0;\n    }\n    .secondary {\n      direction: var(--direction);\n      padding-top: 4px;\n      box-sizing: border-box;\n      color: var(--secondary-text-color);\n      font-size: 0.875rem;\n      font-weight: var(\n        --mdc-typography-body2-font-weight,\n        var(--ha-font-weight-normal)\n      );\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-boolean\": HaFormBoolean;\n  }\n}\n"],"names":["HaFormBoolean","LitElement","focus","this","_input","render","html","label","data","disabled","_valueChanged","helper","nothing","ev","fireEvent","value","target","checked","args","styles","css","attribute","type","Boolean"],"mappings":"uOAcO,MAAPA,UAAAC,EAAAA,GAaSC,KAAAA,GACDC,KAAJC,QACED,KAAAC,OAAAF,OAEJ,CAEUG,MAAAA,GACR,OAAAC,EAAAA,EAAA;6BACuB,KAAAC;;qBAER,KAAAC;sBACC,KAAAC;oBACF,KAAAC;;;+BAGW,KAAAH;YACnB,KAAAI,OAAAL,EAAAA,EAAA,6BAAAK,aAAAC,EAAAA;;;KAMR,CAEQF,aAAAA,CAAAG,IACNC,EAAAA,EAAAA,GAAA,sBACEC,MAAAF,EAAAG,OAAAC,SAEJ,C,kBAzCK,SAAAC,GAAA,KAAAT,UAAA,C,EAAMT,EAAAmB,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;gCACCC,WAAA,K,yDAEAA,WAAA,K,4KAMAC,KAAAC,W"}