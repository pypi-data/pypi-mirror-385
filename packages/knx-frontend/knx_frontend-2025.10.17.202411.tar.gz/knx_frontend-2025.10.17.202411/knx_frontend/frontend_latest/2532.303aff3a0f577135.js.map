{"version":3,"file":"2532.303aff3a0f577135.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/entity/ha-entity-attribute-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-attribute.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { LitElement, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../../types\";\nimport \"../ha-combo-box\";\nimport type { HaComboBox } from \"../ha-combo-box\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\ninterface AttributeOption {\n  value: string;\n  label: string;\n}\n\n@customElement(\"ha-entity-attribute-picker\")\nclass HaEntityAttributePicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entityId?: string | string[];\n\n  /**\n   * List of attributes to be hidden.\n   * @type {Array}\n   * @attr hide-attributes\n   */\n  @property({ type: Array, attribute: \"hide-attributes\" })\n  public hideAttributes?: string[];\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean, attribute: \"allow-custom-value\" })\n  public allowCustomValue;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  @state() private _opened = false;\n\n  @query(\"ha-combo-box\", true) private _comboBox!: HaComboBox;\n\n  protected shouldUpdate(changedProps: PropertyValues) {\n    return !(!changedProps.has(\"_opened\") && this._opened);\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      (changedProps.has(\"_opened\") && this._opened) ||\n      changedProps.has(\"entityId\") ||\n      changedProps.has(\"attribute\")\n    ) {\n      const entityIds = this.entityId ? ensureArray(this.entityId) : [];\n      const entitiesOptions = entityIds.map<AttributeOption[]>((entityId) => {\n        const stateObj = this.hass.states[entityId];\n        if (!stateObj) {\n          return [];\n        }\n\n        const attributes = Object.keys(stateObj.attributes).filter(\n          (a) => !this.hideAttributes?.includes(a)\n        );\n\n        return attributes.map((a) => ({\n          value: a,\n          label: this.hass.formatEntityAttributeName(stateObj, a),\n        }));\n      });\n\n      const options: AttributeOption[] = [];\n      const optionsSet = new Set<string>();\n      for (const entityOptions of entitiesOptions) {\n        for (const option of entityOptions) {\n          if (!optionsSet.has(option.value)) {\n            optionsSet.add(option.value);\n            options.push(option);\n          }\n        }\n      }\n\n      (this._comboBox as any).filteredItems = options;\n    }\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        .value=${this.value}\n        .autofocus=${this.autofocus}\n        .label=${this.label ??\n        this.hass.localize(\n          \"ui.components.entity.entity-attribute-picker.attribute\"\n        )}\n        .disabled=${this.disabled || !this.entityId}\n        .required=${this.required}\n        .helper=${this.helper}\n        .allowCustomValue=${this.allowCustomValue}\n        item-id-path=\"value\"\n        item-value-path=\"value\"\n        item-label-path=\"label\"\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n      </ha-combo-box>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-attribute-picker\": HaEntityAttributePicker;\n  }\n}\n","import type { PropertyValues } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { AttributeSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../entity/ha-entity-attribute-picker\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\n\n@customElement(\"ha-selector-attribute\")\nexport class HaSelectorAttribute extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: AttributeSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    filter_entity?: string | string[];\n  };\n\n  protected render() {\n    return html`\n      <ha-entity-attribute-picker\n        .hass=${this.hass}\n        .entityId=${this.selector.attribute?.entity_id ||\n        this.context?.filter_entity}\n        .hideAttributes=${this.selector.attribute?.hide_attributes}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        allow-custom-value\n      ></ha-entity-attribute-picker>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (\n      // No need to filter value if no value\n      !this.value ||\n      // Only adjust value if we used the context\n      this.selector.attribute?.entity_id ||\n      // Only check if context has changed\n      !changedProps.has(\"context\")\n    ) {\n      return;\n    }\n\n    const oldContext = changedProps.get(\"context\") as this[\"context\"];\n\n    if (\n      !this.context ||\n      !oldContext ||\n      oldContext.filter_entity === this.context.filter_entity\n    ) {\n      return;\n    }\n\n    // Validate that that the attribute is still valid for this entity, else unselect.\n    let invalid = false;\n    if (this.context.filter_entity) {\n      const entityIds = ensureArray(this.context.filter_entity);\n\n      invalid = !entityIds.some((entityId) => {\n        const stateObj = this.hass.states[entityId];\n        return (\n          stateObj &&\n          this.value in stateObj.attributes &&\n          stateObj.attributes[this.value] !== undefined\n        );\n      });\n    } else {\n      invalid = this.value !== undefined;\n    }\n\n    if (invalid) {\n      fireEvent(this, \"value-changed\", {\n        value: undefined,\n      });\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-attribute\": HaSelectorAttribute;\n  }\n}\n"],"names":["HaEntityAttributePicker","LitElement","shouldUpdate","changedProps","has","_opened","updated","entitiesOptions","entityId","ensureArray","map","stateObj","hass","states","Object","keys","attributes","filter","a","hideAttributes","includes","value","label","formatEntityAttributeName","options","optionsSet","Set","entityOptions","option","add","push","this","_comboBox","filteredItems","render","html","autofocus","localize","disabled","required","helper","allowCustomValue","_openedChanged","_valueChanged","nothing","_value","ev","detail","stopPropagation","newValue","_setValue","setTimeout","fireEvent","args","attribute","type","Array","Boolean","HaSelectorAttribute","selector","entity_id","context","filter_entity","hide_attributes","super","oldContext","get","invalid","some","undefined"],"mappings":"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"}