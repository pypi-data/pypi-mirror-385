{"version":3,"file":"3776.e0d2eab4ea992cdd.js","sources":["webpack://knx-frontend/./node_modules/@formatjs/intl-listformat/index.js","webpack://knx-frontend/./node_modules/@formatjs/intl-listformat/polyfill-force.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\nfunction validateInstance(instance, method) {\n    if (!(instance instanceof ListFormat)) {\n        throw new TypeError(\"Method Intl.ListFormat.prototype.\".concat(method, \" called on incompatible receiver \").concat(String(instance)));\n    }\n}\n/**\n * https://tc39.es/proposal-intl-list-format/#sec-createstringlistfromiterable\n * @param list list\n */\nfunction stringListFromIterable(list) {\n    if (list === undefined) {\n        return [];\n    }\n    var result = [];\n    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n        var el = list_1[_i];\n        if (typeof el !== 'string') {\n            throw new TypeError(\"array list[\".concat(list.indexOf(el), \"] is not type String\"));\n        }\n        result.push(el);\n    }\n    return result;\n}\nfunction createPartsFromList(internalSlotMap, lf, list) {\n    var size = list.length;\n    if (size === 0) {\n        return [];\n    }\n    if (size === 2) {\n        var pattern = (0, ecma402_abstract_1.getInternalSlot)(internalSlotMap, lf, 'templatePair');\n        var first = { type: 'element', value: list[0] };\n        var second = { type: 'element', value: list[1] };\n        return deconstructPattern(pattern, { '0': first, '1': second });\n    }\n    var last = {\n        type: 'element',\n        value: list[size - 1],\n    };\n    var parts = last;\n    var i = size - 2;\n    while (i >= 0) {\n        var pattern = void 0;\n        if (i === 0) {\n            pattern = (0, ecma402_abstract_1.getInternalSlot)(internalSlotMap, lf, 'templateStart');\n        }\n        else if (i < size - 2) {\n            pattern = (0, ecma402_abstract_1.getInternalSlot)(internalSlotMap, lf, 'templateMiddle');\n        }\n        else {\n            pattern = (0, ecma402_abstract_1.getInternalSlot)(internalSlotMap, lf, 'templateEnd');\n        }\n        var head = { type: 'element', value: list[i] };\n        parts = deconstructPattern(pattern, { '0': head, '1': parts });\n        i--;\n    }\n    return parts;\n}\nfunction deconstructPattern(pattern, placeables) {\n    var patternParts = (0, ecma402_abstract_1.PartitionPattern)(pattern);\n    var result = [];\n    for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n        var patternPart = patternParts_1[_i];\n        var part = patternPart.type;\n        if ((0, ecma402_abstract_1.isLiteralPart)(patternPart)) {\n            result.push({\n                type: 'literal',\n                value: patternPart.value,\n            });\n        }\n        else {\n            (0, ecma402_abstract_1.invariant)(part in placeables, \"\".concat(part, \" is missing from placables\"));\n            var subst = placeables[part];\n            if (Array.isArray(subst)) {\n                result.push.apply(result, subst);\n            }\n            else {\n                result.push(subst);\n            }\n        }\n    }\n    return result;\n}\nvar ListFormat = /** @class */ (function () {\n    function ListFormat(locales, options) {\n        // test262/test/intl402/ListFormat/constructor/constructor/newtarget-undefined.js\n        // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n        var newTarget = this && this instanceof ListFormat ? this.constructor : void 0;\n        if (!newTarget) {\n            throw new TypeError(\"Intl.ListFormat must be called with 'new'\");\n        }\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'initializedListFormat', true);\n        var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);\n        var opt = Object.create(null);\n        var opts = (0, ecma402_abstract_1.GetOptionsObject)(options);\n        var matcher = (0, ecma402_abstract_1.GetOption)(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n        opt.localeMatcher = matcher;\n        var localeData = ListFormat.localeData;\n        var r = (0, intl_localematcher_1.ResolveLocale)(ListFormat.availableLocales, requestedLocales, opt, ListFormat.relevantExtensionKeys, localeData, ListFormat.getDefaultLocale);\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'locale', r.locale);\n        var type = (0, ecma402_abstract_1.GetOption)(opts, 'type', 'string', ['conjunction', 'disjunction', 'unit'], 'conjunction');\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'type', type);\n        var style = (0, ecma402_abstract_1.GetOption)(opts, 'style', 'string', ['long', 'short', 'narrow'], 'long');\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'style', style);\n        var dataLocale = r.dataLocale;\n        var dataLocaleData = localeData[dataLocale];\n        (0, ecma402_abstract_1.invariant)(!!dataLocaleData, \"Missing locale data for \".concat(dataLocale));\n        var dataLocaleTypes = dataLocaleData[type];\n        var templates = dataLocaleTypes[style];\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'templatePair', templates.pair);\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'templateStart', templates.start);\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'templateMiddle', templates.middle);\n        (0, ecma402_abstract_1.setInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'templateEnd', templates.end);\n    }\n    ListFormat.prototype.format = function (elements) {\n        validateInstance(this, 'format');\n        var result = '';\n        var parts = createPartsFromList(ListFormat.__INTERNAL_SLOT_MAP__, this, stringListFromIterable(elements));\n        if (!Array.isArray(parts)) {\n            return parts.value;\n        }\n        for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n            var p = parts_1[_i];\n            result += p.value;\n        }\n        return result;\n    };\n    ListFormat.prototype.formatToParts = function (elements) {\n        validateInstance(this, 'format');\n        var parts = createPartsFromList(ListFormat.__INTERNAL_SLOT_MAP__, this, stringListFromIterable(elements));\n        if (!Array.isArray(parts)) {\n            return [parts];\n        }\n        var result = [];\n        for (var _i = 0, parts_2 = parts; _i < parts_2.length; _i++) {\n            var part = parts_2[_i];\n            result.push(tslib_1.__assign({}, part));\n        }\n        return result;\n    };\n    ListFormat.prototype.resolvedOptions = function () {\n        validateInstance(this, 'resolvedOptions');\n        return {\n            locale: (0, ecma402_abstract_1.getInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'locale'),\n            type: (0, ecma402_abstract_1.getInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'type'),\n            style: (0, ecma402_abstract_1.getInternalSlot)(ListFormat.__INTERNAL_SLOT_MAP__, this, 'style'),\n        };\n    };\n    ListFormat.supportedLocalesOf = function (locales, options) {\n        // test262/test/intl402/ListFormat/constructor/supportedLocalesOf/result-type.js\n        return (0, ecma402_abstract_1.SupportedLocales)(ListFormat.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);\n    };\n    ListFormat.__addLocaleData = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n            var _b = data_1[_a], d = _b.data, locale = _b.locale;\n            var minimizedLocale = new Intl.Locale(locale)\n                .minimize()\n                .toString();\n            ListFormat.localeData[locale] = ListFormat.localeData[minimizedLocale] = d;\n            ListFormat.availableLocales.add(minimizedLocale);\n            ListFormat.availableLocales.add(locale);\n            if (!ListFormat.__defaultLocale) {\n                ListFormat.__defaultLocale = minimizedLocale;\n            }\n        }\n    };\n    ListFormat.getDefaultLocale = function () {\n        return ListFormat.__defaultLocale;\n    };\n    ListFormat.localeData = {};\n    ListFormat.availableLocales = new Set();\n    ListFormat.__defaultLocale = '';\n    ListFormat.relevantExtensionKeys = [];\n    ListFormat.polyfilled = true;\n    ListFormat.__INTERNAL_SLOT_MAP__ = new WeakMap();\n    return ListFormat;\n}());\nexports.default = ListFormat;\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(ListFormat.prototype, Symbol.toStringTag, {\n            value: 'Intl.ListFormat',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    // https://github.com/tc39/test262/blob/master/test/intl402/ListFormat/constructor/length.js\n    Object.defineProperty(ListFormat.prototype.constructor, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/ListFormat/constructor/supportedLocalesOf/length.js\n    Object.defineProperty(ListFormat.supportedLocalesOf, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (e) {\n    // Meta fix so we're test262-compliant, not important\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar _1 = tslib_1.__importDefault(require(\"./\"));\nObject.defineProperty(Intl, 'ListFormat', {\n    value: _1.default,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n});\n"],"names":["Object","defineProperty","exports","value","tslib_1","require","ecma402_abstract_1","intl_localematcher_1","validateInstance","instance","method","ListFormat","TypeError","concat","String","stringListFromIterable","list","undefined","result","_i","list_1","length","el","indexOf","push","createPartsFromList","internalSlotMap","lf","size","deconstructPattern","getInternalSlot","type","parts","i","pattern","placeables","patternParts_1","PartitionPattern","patternPart","part","isLiteralPart","invariant","subst","Array","isArray","apply","locales","options","constructor","setInternalSlot","__INTERNAL_SLOT_MAP__","requestedLocales","CanonicalizeLocaleList","opt","create","opts","GetOptionsObject","matcher","GetOption","localeMatcher","localeData","r","ResolveLocale","availableLocales","relevantExtensionKeys","getDefaultLocale","locale","style","dataLocale","dataLocaleData","templates","pair","start","middle","end","prototype","format","elements","parts_1","formatToParts","parts_2","__assign","resolvedOptions","supportedLocalesOf","SupportedLocales","__addLocaleData","data","arguments","_a","data_1","_b","d","minimizedLocale","Intl","Locale","minimize","toString","add","__defaultLocale","Set","polyfilled","WeakMap","Symbol","toStringTag","writable","enumerable","configurable","e","_1","__importDefault","default"],"mappings":"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"}