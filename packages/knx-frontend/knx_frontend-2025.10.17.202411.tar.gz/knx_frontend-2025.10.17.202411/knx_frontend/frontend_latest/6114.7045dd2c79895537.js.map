{"version":3,"file":"6114.7045dd2c79895537.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/get_states.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/entity/ha-entity-state-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/entity/ha-entity-states-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-state.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity.ts","webpack://knx-frontend/./homeassistant-frontend/src/mixins/subscribe-mixin.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeStateDomain } from \"./compute_state_domain\";\nimport { UNAVAILABLE_STATES } from \"../../data/entity\";\nimport type { HomeAssistant } from \"../../types\";\nimport { computeDomain } from \"./compute_domain\";\nimport { stringCompare } from \"../string/compare\";\n\nexport const FIXED_DOMAIN_STATES = {\n  alarm_control_panel: [\n    \"armed_away\",\n    \"armed_custom_bypass\",\n    \"armed_home\",\n    \"armed_night\",\n    \"armed_vacation\",\n    \"arming\",\n    \"disarmed\",\n    \"disarming\",\n    \"pending\",\n    \"triggered\",\n  ],\n  assist_satellite: [\"idle\", \"listening\", \"responding\", \"processing\"],\n  automation: [\"on\", \"off\"],\n  binary_sensor: [\"on\", \"off\"],\n  button: [],\n  calendar: [\"on\", \"off\"],\n  camera: [\"idle\", \"recording\", \"streaming\"],\n  cover: [\"closed\", \"closing\", \"open\", \"opening\"],\n  device_tracker: [\"home\", \"not_home\"],\n  fan: [\"on\", \"off\"],\n  humidifier: [\"on\", \"off\"],\n  input_boolean: [\"on\", \"off\"],\n  input_button: [],\n  lawn_mower: [\"error\", \"paused\", \"mowing\", \"returning\", \"docked\"],\n  light: [\"on\", \"off\"],\n  lock: [\n    \"jammed\",\n    \"locked\",\n    \"locking\",\n    \"unlocked\",\n    \"unlocking\",\n    \"opening\",\n    \"open\",\n  ],\n  media_player: [\n    \"off\",\n    \"on\",\n    \"idle\",\n    \"playing\",\n    \"paused\",\n    \"standby\",\n    \"buffering\",\n  ],\n  person: [\"home\", \"not_home\"],\n  plant: [\"ok\", \"problem\"],\n  remote: [\"on\", \"off\"],\n  scene: [],\n  schedule: [\"on\", \"off\"],\n  script: [\"on\", \"off\"],\n  siren: [\"on\", \"off\"],\n  sun: [\"above_horizon\", \"below_horizon\"],\n  switch: [\"on\", \"off\"],\n  timer: [\"active\", \"idle\", \"paused\"],\n  update: [\"on\", \"off\"],\n  vacuum: [\"cleaning\", \"docked\", \"error\", \"idle\", \"paused\", \"returning\"],\n  valve: [\"closed\", \"closing\", \"open\", \"opening\"],\n  weather: [\n    \"clear-night\",\n    \"cloudy\",\n    \"exceptional\",\n    \"fog\",\n    \"hail\",\n    \"lightning-rainy\",\n    \"lightning\",\n    \"partlycloudy\",\n    \"pouring\",\n    \"rainy\",\n    \"snowy-rainy\",\n    \"snowy\",\n    \"sunny\",\n    \"windy-variant\",\n    \"windy\",\n  ],\n} as const;\n\nconst FIXED_DOMAIN_ATTRIBUTE_STATES = {\n  alarm_control_panel: {\n    code_format: [\"number\", \"text\"],\n  },\n  binary_sensor: {\n    device_class: [\n      \"battery\",\n      \"battery_charging\",\n      \"co\",\n      \"cold\",\n      \"connectivity\",\n      \"door\",\n      \"garage_door\",\n      \"gas\",\n      \"heat\",\n      \"light\",\n      \"lock\",\n      \"moisture\",\n      \"motion\",\n      \"moving\",\n      \"occupancy\",\n      \"opening\",\n      \"plug\",\n      \"power\",\n      \"presence\",\n      \"problem\",\n      \"running\",\n      \"safety\",\n      \"smoke\",\n      \"sound\",\n      \"tamper\",\n      \"update\",\n      \"vibration\",\n      \"window\",\n    ],\n  },\n  button: {\n    device_class: [\"restart\", \"update\"],\n  },\n  camera: {\n    frontend_stream_type: [\"hls\", \"web_rtc\"],\n  },\n  climate: {\n    hvac_action: [\n      \"off\",\n      \"idle\",\n      \"preheating\",\n      \"defrosting\",\n      \"heating\",\n      \"cooling\",\n      \"drying\",\n      \"fan\",\n    ],\n  },\n  cover: {\n    device_class: [\n      \"awning\",\n      \"blind\",\n      \"curtain\",\n      \"damper\",\n      \"door\",\n      \"garage\",\n      \"gate\",\n      \"shade\",\n      \"shutter\",\n      \"window\",\n    ],\n  },\n  device_tracker: {\n    source_type: [\"bluetooth\", \"bluetooth_le\", \"gps\", \"router\"],\n  },\n  fan: {\n    direction: [\"forward\", \"reverse\"],\n  },\n  humidifier: {\n    device_class: [\"humidifier\", \"dehumidifier\"],\n    action: [\"off\", \"idle\", \"humidifying\", \"drying\"],\n  },\n  media_player: {\n    device_class: [\"tv\", \"speaker\", \"receiver\"],\n    media_content_type: [\n      \"album\",\n      \"app\",\n      \"artist\",\n      \"channel\",\n      \"channels\",\n      \"composer\",\n      \"contributing_artist\",\n      \"episode\",\n      \"game\",\n      \"genre\",\n      \"image\",\n      \"movie\",\n      \"music\",\n      \"playlist\",\n      \"podcast\",\n      \"season\",\n      \"track\",\n      \"tvshow\",\n      \"url\",\n      \"video\",\n    ],\n    repeat: [\"off\", \"one\", \"all\"],\n  },\n  number: {\n    device_class: [\"temperature\"],\n  },\n  sensor: {\n    device_class: [\n      \"apparent_power\",\n      \"aqi\",\n      \"battery\",\n      \"carbon_dioxide\",\n      \"carbon_monoxide\",\n      \"current\",\n      \"date\",\n      \"duration\",\n      \"energy\",\n      \"frequency\",\n      \"gas\",\n      \"humidity\",\n      \"illuminance\",\n      \"monetary\",\n      \"nitrogen_dioxide\",\n      \"nitrogen_monoxide\",\n      \"nitrous_oxide\",\n      \"ozone\",\n      \"ph\",\n      \"pm1\",\n      \"pm10\",\n      \"pm25\",\n      \"power_factor\",\n      \"power\",\n      \"pressure\",\n      \"reactive_power\",\n      \"signal_strength\",\n      \"sulphur_dioxide\",\n      \"temperature\",\n      \"timestamp\",\n      \"volatile_organic_compounds\",\n      \"volatile_organic_compounds_parts\",\n      \"voltage\",\n      \"volume_flow_rate\",\n    ],\n    state_class: [\"measurement\", \"total\", \"total_increasing\"],\n  },\n  switch: {\n    device_class: [\"outlet\", \"switch\"],\n  },\n  update: {\n    device_class: [\"firmware\"],\n  },\n  water_heater: {\n    away_mode: [\"on\", \"off\"],\n  },\n};\n\nexport const getStates = (\n  hass: HomeAssistant,\n  state: HassEntity,\n  attribute: string | undefined = undefined\n): string[] => {\n  const domain = computeStateDomain(state);\n  const result: string[] = [];\n\n  if (!attribute && domain in FIXED_DOMAIN_STATES) {\n    result.push(...FIXED_DOMAIN_STATES[domain]);\n  } else if (\n    attribute &&\n    domain in FIXED_DOMAIN_ATTRIBUTE_STATES &&\n    attribute in FIXED_DOMAIN_ATTRIBUTE_STATES[domain]\n  ) {\n    result.push(...FIXED_DOMAIN_ATTRIBUTE_STATES[domain][attribute]);\n  }\n\n  // Dynamic values based on the entities\n  switch (domain) {\n    case \"climate\":\n      if (!attribute) {\n        result.push(...state.attributes.hvac_modes);\n      } else if (attribute === \"fan_mode\") {\n        result.push(...state.attributes.fan_modes);\n      } else if (attribute === \"preset_mode\") {\n        result.push(...state.attributes.preset_modes);\n      } else if (attribute === \"swing_mode\") {\n        result.push(...state.attributes.swing_modes);\n      }\n      break;\n    case \"device_tracker\":\n    case \"person\":\n      if (!attribute) {\n        result.push(\n          ...Object.entries(hass.states)\n            .filter(\n              ([entityId, stateObj]) =>\n                computeDomain(entityId) === \"zone\" &&\n                entityId !== \"zone.home\" &&\n                stateObj.attributes.friendly_name\n            )\n            .map(([_entityId, stateObj]) => stateObj.attributes.friendly_name!)\n            .sort((zone1, zone2) =>\n              stringCompare(zone1, zone2, hass.locale.language)\n            )\n        );\n      }\n      break;\n    case \"event\":\n      if (attribute === \"event_type\") {\n        result.push(...state.attributes.event_types);\n      }\n      break;\n    case \"fan\":\n      if (attribute === \"preset_mode\") {\n        result.push(...state.attributes.preset_modes);\n      }\n      break;\n    case \"humidifier\":\n      if (attribute === \"mode\") {\n        result.push(...state.attributes.available_modes);\n      }\n      break;\n    case \"input_select\":\n    case \"select\":\n      if (!attribute) {\n        result.push(...state.attributes.options);\n      }\n      break;\n    case \"light\":\n      if (attribute === \"effect\" && state.attributes.effect_list) {\n        result.push(...state.attributes.effect_list);\n      } else if (\n        attribute === \"color_mode\" &&\n        state.attributes.supported_color_modes\n      ) {\n        result.push(...state.attributes.supported_color_modes);\n      }\n      break;\n    case \"media_player\":\n      if (attribute === \"sound_mode\") {\n        result.push(...state.attributes.sound_mode_list);\n      } else if (attribute === \"source\") {\n        result.push(...state.attributes.source_list);\n      }\n      break;\n    case \"remote\":\n      if (attribute === \"current_activity\") {\n        result.push(...state.attributes.activity_list);\n      }\n      break;\n    case \"sensor\":\n      if (!attribute && state.attributes.device_class === \"enum\") {\n        result.push(...state.attributes.options);\n      }\n      break;\n    case \"vacuum\":\n      if (attribute === \"fan_speed\") {\n        result.push(...state.attributes.fan_speed_list);\n      }\n      break;\n    case \"water_heater\":\n      if (!attribute || attribute === \"operation_mode\") {\n        result.push(...state.attributes.operation_list);\n      }\n      break;\n  }\n\n  if (!attribute) {\n    // All entities can have unavailable states\n    result.push(...UNAVAILABLE_STATES);\n  }\n  return [...new Set(result)];\n};\n","import type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { LitElement, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { getStates } from \"../../common/entity/get_states\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../../types\";\nimport \"../ha-combo-box\";\nimport type { HaComboBox } from \"../ha-combo-box\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\ninterface StateOption {\n  value: string;\n  label: string;\n}\n\n@customElement(\"ha-entity-state-picker\")\nclass HaEntityStatePicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entityId?: string | string[];\n\n  @property() public attribute?: string;\n\n  @property({ attribute: false }) public extraOptions?: any[];\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean, attribute: \"allow-custom-value\" })\n  public allowCustomValue;\n\n  @property({ attribute: false })\n  public hideStates?: string[];\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  @property() public helper?: string;\n\n  @state() private _opened = false;\n\n  @query(\"ha-combo-box\", true) private _comboBox!: HaComboBox;\n\n  protected shouldUpdate(changedProps: PropertyValues) {\n    return !(!changedProps.has(\"_opened\") && this._opened);\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      (changedProps.has(\"_opened\") && this._opened) ||\n      changedProps.has(\"entityId\") ||\n      changedProps.has(\"attribute\") ||\n      changedProps.has(\"extraOptions\")\n    ) {\n      const entityIds = this.entityId ? ensureArray(this.entityId) : [];\n\n      const entitiesOptions = entityIds.map<StateOption[]>((entityId) => {\n        const stateObj = this.hass.states[entityId] || {\n          entity_id: entityId,\n          attributes: {},\n        };\n\n        const states = getStates(this.hass, stateObj, this.attribute).filter(\n          (s) => !this.hideStates?.includes(s)\n        );\n\n        return states.map((s) => ({\n          value: s,\n          label: this.attribute\n            ? this.hass.formatEntityAttributeValue(stateObj, this.attribute, s)\n            : this.hass.formatEntityState(stateObj, s),\n        }));\n      });\n\n      const options: StateOption[] = [];\n      const optionsSet = new Set<string>();\n      for (const entityOptions of entitiesOptions) {\n        for (const option of entityOptions) {\n          if (!optionsSet.has(option.value)) {\n            optionsSet.add(option.value);\n            options.push(option);\n          }\n        }\n      }\n\n      if (this.extraOptions) {\n        options.unshift(...this.extraOptions);\n      }\n\n      (this._comboBox as any).filteredItems = options;\n    }\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        .value=${this._value}\n        .autofocus=${this.autofocus}\n        .label=${this.label ??\n        this.hass.localize(\"ui.components.entity.entity-state-picker.state\")}\n        .disabled=${this.disabled || !this.entityId}\n        .required=${this.required}\n        .helper=${this.helper}\n        .allowCustomValue=${this.allowCustomValue}\n        item-id-path=\"value\"\n        item-value-path=\"value\"\n        item-label-path=\"label\"\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n      </ha-combo-box>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: ValueChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-state-picker\": HaEntityStatePicker;\n  }\n}\n","import type { PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { keyed } from \"lit/directives/keyed\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"./ha-entity-state-picker\";\n\n@customElement(\"ha-entity-states-picker\")\nexport class HaEntityStatesPicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public entityId?: string;\n\n  @property() public attribute?: string;\n\n  @property({ attribute: false }) public extraOptions?: any[];\n\n  @property({ type: Boolean, attribute: \"allow-custom-value\" })\n  public allowCustomValue;\n\n  @property() public label?: string;\n\n  @property({ type: Array }) public value?: string[];\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ attribute: false })\n  public hideStates?: string[];\n\n  private _keys: string[] = [];\n\n  private _getKey(index: number) {\n    if (!this._keys[index]) {\n      this._keys[index] = Math.random().toString();\n    }\n    return this._keys[index];\n  }\n\n  protected willUpdate(changedProps: PropertyValues): void {\n    super.willUpdate(changedProps);\n    if (changedProps.has(\"value\")) {\n      this.value = ensureArray(this.value);\n    }\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    const value = this.value || [];\n    const hide = [...(this.hideStates || []), ...value];\n\n    return html`\n      ${repeat(\n        value,\n        (_state, index) => this._getKey(index),\n        (state, index) => html`\n          <div>\n            <ha-entity-state-picker\n              .index=${index}\n              .hass=${this.hass}\n              .entityId=${this.entityId}\n              .attribute=${this.attribute}\n              .extraOptions=${this.extraOptions}\n              .hideStates=${hide.filter((v) => v !== state)}\n              .allowCustomValue=${this.allowCustomValue}\n              .label=${this.label}\n              .value=${state}\n              .disabled=${this.disabled}\n              .helper=${this.disabled && index === value.length - 1\n                ? this.helper\n                : undefined}\n              @value-changed=${this._valueChanged}\n            ></ha-entity-state-picker>\n          </div>\n        `\n      )}\n      <div>\n        ${this.disabled && value.length\n          ? nothing\n          : keyed(\n              value.length,\n              html`<ha-entity-state-picker\n                .hass=${this.hass}\n                .entityId=${this.entityId}\n                .attribute=${this.attribute}\n                .extraOptions=${this.extraOptions}\n                .hideStates=${hide}\n                .allowCustomValue=${this.allowCustomValue}\n                .label=${this.label}\n                .helper=${this.helper}\n                .disabled=${this.disabled}\n                .required=${this.required && !value.length}\n                @value-changed=${this._addValue}\n              ></ha-entity-state-picker>`\n            )}\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const newState = ev.detail.value;\n    const newValue = [...this.value!];\n    const index = (ev.currentTarget as any)?.index;\n    if (index == null) {\n      return;\n    }\n    if (newState === undefined) {\n      newValue.splice(index, 1);\n      this._keys.splice(index, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newValue,\n      });\n      return;\n    }\n    newValue[index] = newState;\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  private _addValue(ev: CustomEvent) {\n    ev.stopPropagation();\n    fireEvent(this, \"value-changed\", {\n      value: [...(this.value || []), ev.detail.value],\n    });\n  }\n\n  static override styles = css`\n    div {\n      margin-top: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-states-picker\": HaEntityStatesPicker;\n  }\n}\n","import { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { StateSelector } from \"../../data/selector\";\nimport { SubscribeMixin } from \"../../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../entity/ha-entity-state-picker\";\nimport \"../entity/ha-entity-states-picker\";\n\n@customElement(\"ha-selector-state\")\nexport class HaSelectorState extends SubscribeMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: StateSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    filter_attribute?: string;\n    filter_entity?: string | string[];\n  };\n\n  protected render() {\n    if (this.selector.state?.multiple) {\n      return html`\n        <ha-entity-states-picker\n          .hass=${this.hass}\n          .entityId=${this.selector.state?.entity_id ||\n          this.context?.filter_entity}\n          .attribute=${this.selector.state?.attribute ||\n          this.context?.filter_attribute}\n          .extraOptions=${this.selector.state?.extra_options}\n          .value=${this.value}\n          .label=${this.label}\n          .helper=${this.helper}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          allow-custom-value\n          .hideStates=${this.selector.state?.hide_states}\n        ></ha-entity-states-picker>\n      `;\n    }\n    return html`\n      <ha-entity-state-picker\n        .hass=${this.hass}\n        .entityId=${this.selector.state?.entity_id ||\n        this.context?.filter_entity}\n        .attribute=${this.selector.state?.attribute ||\n        this.context?.filter_attribute}\n        .extraOptions=${this.selector.state?.extra_options}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        allow-custom-value\n        .hideStates=${this.selector.state?.hide_states}\n      ></ha-entity-state-picker>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-state\": HaSelectorState;\n  }\n}\n","import { arrayLiteralIncludes } from \"../common/array/literal-includes\";\n\nexport const UNAVAILABLE = \"unavailable\";\nexport const UNKNOWN = \"unknown\";\nexport const ON = \"on\";\nexport const OFF = \"off\";\n\nexport const UNAVAILABLE_STATES = [UNAVAILABLE, UNKNOWN] as const;\nexport const OFF_STATES = [UNAVAILABLE, UNKNOWN, OFF] as const;\n\nexport const isUnavailableState = arrayLiteralIncludes(UNAVAILABLE_STATES);\nexport const isOffState = arrayLiteralIncludes(OFF_STATES);\n","import type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport type { PropertyValues, ReactiveElement } from \"lit\";\nimport { property } from \"lit/decorators\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nexport interface HassSubscribeElement {\n  hassSubscribe(): UnsubscribeFunc[];\n}\n\nexport const SubscribeMixin = <T extends Constructor<ReactiveElement>>(\n  superClass: T\n) => {\n  class SubscribeClass extends superClass {\n    @property({ attribute: false }) public hass?: HomeAssistant;\n\n    // we wait with subscribing till these properties are set on the host element\n    protected hassSubscribeRequiredHostProps?: string[];\n\n    private __unsubs?: (UnsubscribeFunc | Promise<UnsubscribeFunc>)[];\n\n    public connectedCallback() {\n      super.connectedCallback();\n      this._checkSubscribed();\n    }\n\n    public disconnectedCallback() {\n      super.disconnectedCallback();\n      if (this.__unsubs) {\n        while (this.__unsubs.length) {\n          const unsub = this.__unsubs.pop()!;\n          if (unsub instanceof Promise) {\n            unsub.then((unsubFunc) => unsubFunc());\n          } else {\n            unsub();\n          }\n        }\n        this.__unsubs = undefined;\n      }\n    }\n\n    protected updated(changedProps: PropertyValues) {\n      super.updated(changedProps);\n      if (changedProps.has(\"hass\")) {\n        this._checkSubscribed();\n        return;\n      }\n      if (!this.hassSubscribeRequiredHostProps) {\n        return;\n      }\n      for (const key of changedProps.keys()) {\n        if (this.hassSubscribeRequiredHostProps.includes(key as string)) {\n          this._checkSubscribed();\n          return;\n        }\n      }\n    }\n\n    protected hassSubscribe(): (UnsubscribeFunc | Promise<UnsubscribeFunc>)[] {\n      return [];\n    }\n\n    private _checkSubscribed(): void {\n      if (\n        this.__unsubs !== undefined ||\n        !(this as unknown as Element).isConnected ||\n        this.hass === undefined ||\n        this.hassSubscribeRequiredHostProps?.some(\n          (prop) => this[prop] === undefined\n        )\n      ) {\n        return;\n      }\n      this.__unsubs = this.hassSubscribe();\n    }\n  }\n  return SubscribeClass;\n};\n"],"names":["FIXED_DOMAIN_STATES","alarm_control_panel","assist_satellite","automation","binary_sensor","button","calendar","camera","cover","device_tracker","fan","humidifier","input_boolean","input_button","lawn_mower","light","lock","media_player","person","plant","remote","scene","schedule","script","siren","sun","switch","timer","update","vacuum","valve","weather","FIXED_DOMAIN_ATTRIBUTE_STATES","code_format","device_class","frontend_stream_type","climate","hvac_action","source_type","direction","action","media_content_type","repeat","number","sensor","state_class","water_heater","away_mode","HaEntityStatePicker","LitElement","shouldUpdate","changedProps","has","_opened","updated","entitiesOptions","entityId","ensureArray","map","stateObj","hass","states","entity_id","attributes","getStates","state","attribute","domain","computeStateDomain","result","push","fan_modes","preset_modes","swing_modes","hvac_modes","Object","entries","filter","computeDomain","friendly_name","_entityId","sort","zone1","zone2","stringCompare","locale","language","event_types","available_modes","options","effect_list","supported_color_modes","sound_mode_list","source_list","activity_list","fan_speed_list","operation_list","UNAVAILABLE_STATES","Set","s","hideStates","includes","value","label","formatEntityAttributeValue","formatEntityState","optionsSet","entityOptions","option","add","this","extraOptions","unshift","_comboBox","filteredItems","render","html","_value","autofocus","localize","disabled","required","helper","allowCustomValue","_openedChanged","_valueChanged","nothing","ev","detail","stopPropagation","newValue","_setValue","setTimeout","fireEvent","args","type","Boolean","HaEntityStatesPicker","_getKey","index","_keys","Math","random","toString","willUpdate","super","hide","_state","v","length","undefined","keyed","_addValue","newState","currentTarget","splice","styles","css","Array","HaSelectorState","SubscribeMixin","selector","multiple","context","filter_entity","filter_attribute","extra_options","hide_states","UNAVAILABLE","UNKNOWN","ON","OFF","OFF_STATES","isUnavailableState","arrayLiteralIncludes","superClass","SubscribeClass","connectedCallback","_checkSubscribed","disconnectedCallback","__unsubs","unsub","pop","Promise","then","unsubFunc","hassSubscribeRequiredHostProps","key","keys","hassSubscribe","isConnected","some","prop"],"mappings":"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"}