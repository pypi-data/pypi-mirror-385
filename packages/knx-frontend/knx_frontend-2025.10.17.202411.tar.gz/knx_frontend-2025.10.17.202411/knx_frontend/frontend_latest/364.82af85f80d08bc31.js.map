{"version":3,"file":"364.82af85f80d08bc31.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-expandable.ts"],"sourcesContent":["import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"./ha-form\";\nimport \"../ha-expansion-panel\";\nimport type {\n  HaFormDataContainer,\n  HaFormElement,\n  HaFormExpandableSchema,\n  HaFormSchema,\n} from \"./types\";\n\n@customElement(\"ha-form-expandable\")\nexport class HaFormExpandable extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: HaFormExpandableSchema;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: HaFormSchema,\n    data?: HaFormDataContainer,\n    options?: { path?: string[] }\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: HaFormSchema,\n    options?: { path?: string[] }\n  ) => string;\n\n  @property({ attribute: false }) public localizeValue?: (\n    key: string\n  ) => string;\n\n  private _renderDescription() {\n    const description = this.computeHelper?.(this.schema);\n    return description ? html`<p>${description}</p>` : nothing;\n  }\n\n  private _computeLabel = (\n    schema: HaFormSchema,\n    data?: HaFormDataContainer,\n    options?: { path?: string[] }\n  ) => {\n    if (!this.computeLabel) return this.computeLabel;\n\n    return this.computeLabel(schema, data, {\n      ...options,\n      path: [...(options?.path || []), this.schema.name],\n    });\n  };\n\n  private _computeHelper = (\n    schema: HaFormSchema,\n    options?: { path?: string[] }\n  ) => {\n    if (!this.computeHelper) return this.computeHelper;\n\n    return this.computeHelper(schema, {\n      ...options,\n      path: [...(options?.path || []), this.schema.name],\n    });\n  };\n\n  protected render() {\n    return html`\n      <ha-expansion-panel outlined .expanded=${Boolean(this.schema.expanded)}>\n        ${this.schema.icon\n          ? html`\n              <ha-icon slot=\"leading-icon\" .icon=${this.schema.icon}></ha-icon>\n            `\n          : this.schema.iconPath\n            ? html`\n                <ha-svg-icon\n                  slot=\"leading-icon\"\n                  .path=${this.schema.iconPath}\n                ></ha-svg-icon>\n              `\n            : nothing}\n        <div\n          slot=\"header\"\n          role=\"heading\"\n          aria-level=${this.schema.headingLevel?.toString() ?? \"3\"}\n        >\n          ${this.schema.title || this.computeLabel?.(this.schema)}\n        </div>\n        <div class=\"content\">\n          ${this._renderDescription()}\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${this.schema.schema}\n            .disabled=${this.disabled}\n            .computeLabel=${this._computeLabel}\n            .computeHelper=${this._computeHelper}\n            .localizeValue=${this.localizeValue}\n          ></ha-form>\n        </div>\n      </ha-expansion-panel>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: flex !important;\n      flex-direction: column;\n    }\n    :host ha-form {\n      display: block;\n    }\n    .content {\n      padding: 12px;\n    }\n    .content p {\n      margin: 0 0 24px;\n    }\n    ha-expansion-panel {\n      display: block;\n      --expansion-panel-content-padding: 0;\n      border-radius: 6px;\n      --ha-card-border-radius: 6px;\n    }\n    ha-svg-icon,\n    ha-icon {\n      color: var(--secondary-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-expandable\": HaFormExpandable;\n  }\n}\n"],"names":["HaFormExpandable","LitElement","_renderDescription","description","computeHelper","schema","html","nothing","render","Boolean","expanded","icon","iconPath","headingLevel","toString","title","computeLabel","hass","data","disabled","_computeLabel","_computeHelper","localizeValue","args","options","this","path","name","styles","css","attribute","type"],"mappings":"6NAaO,MAAPA,UAAAC,EAAAA,GAwBUC,kBAAAA,GACN,MAAAC,EAAA,KAAAC,gBAAA,KAAAC,QACA,OAAAF,EAAAG,EAAAA,EAAA,MAAAH,QAAAI,EAAAA,EACF,CA2BUC,MAAAA,GACR,OAAAF,EAAAA,EAAA;+CACyCG,QAAA,KAAAJ,OAAAK;UACrC,KAAAL,OAAAM,KAAAL,EAAAA,EAAA;mDAEyC,KAAAD,OAAAM;cACrC,KAAAN,OAAAO,SAAAN,EAAAA,EAAA;;;0BAKY,KAAAD,OAAAO;;gBAEVL,EAAAA;;;;uBAKO,KAAAF,OAAAQ,cAAAC,YAAA;;YAEX,KAAAT,OAAAU,OAAA,KAAAC,eAAA,KAAAX;;;YAGA,KAAAH;;oBAEQ,KAAAe;oBACA,KAAAC;sBACE,KAAAb,OAAAA;wBACE,KAAAc;4BACI,KAAAC;6BACC,KAAAC;6BACA,KAAAC;;;;KAKzB,C,kBA1FK,SAAAC,GAAA,KAAAJ,UAAA,OAAAC,cAAA,CAAAf,EAAAa,EAAAM,IAkCEC,KAALT,aAEOS,KAAPT,aAAAX,EAAAa,EAAA,IACEM,EACAE,KAAA,IAAWF,GAAAE,MAAA,GAAsBD,KAAApB,OAAAsB,QAJnC,KAAAX,aAMF,KAAAK,eAAA,CAAAhB,EAAAmB,IAMOC,KAALrB,cAEOqB,KAAPrB,cAAAC,EAAA,IACEmB,EACAE,KAAA,IAAWF,GAAAE,MAAA,GAAsBD,KAAApB,OAAAsB,QAJnC,KAAAvB,a,EA9CSJ,EAAA4B,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;gCACCC,WAAA,K,uDAEAA,WAAA,K,uDAEAA,WAAA,K,yDAEAC,KAAAtB,W,2DAEAqB,WAAA,K,+DAMAA,WAAA,K,gEAKAA,WAAA,K"}