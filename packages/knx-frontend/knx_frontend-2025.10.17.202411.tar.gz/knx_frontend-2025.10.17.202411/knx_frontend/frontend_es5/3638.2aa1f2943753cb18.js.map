{"version":3,"file":"3638.2aa1f2943753cb18.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_boolean-form.ts"],"sourcesContent":["import type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type {\n  ComboBoxDataProviderCallback,\n  ComboBoxDataProviderParams,\n} from \"@vaadin/combo-box/vaadin-combo-box-light\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { customIcons } from \"../data/custom_icons\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../types\";\nimport \"./ha-combo-box\";\nimport \"./ha-icon\";\nimport \"./ha-combo-box-item\";\n\ninterface IconItem {\n  icon: string;\n  parts: Set<string>;\n  keywords: string[];\n}\n\ninterface RankedIcon {\n  icon: string;\n  rank: number;\n}\n\nlet ICONS: IconItem[] = [];\nlet ICONS_LOADED = false;\n\nconst loadIcons = async () => {\n  ICONS_LOADED = true;\n\n  const iconList = await import(\"../../build/mdi/iconList.json\");\n  ICONS = iconList.default.map((icon) => ({\n    icon: `mdi:${icon.name}`,\n    parts: new Set(icon.name.split(\"-\")),\n    keywords: icon.keywords,\n  }));\n\n  const customIconLoads: Promise<IconItem[]>[] = [];\n  Object.keys(customIcons).forEach((iconSet) => {\n    customIconLoads.push(loadCustomIconItems(iconSet));\n  });\n  (await Promise.all(customIconLoads)).forEach((customIconItems) => {\n    ICONS.push(...customIconItems);\n  });\n};\n\nconst loadCustomIconItems = async (iconsetPrefix: string) => {\n  try {\n    const getIconList = customIcons[iconsetPrefix].getIconList;\n    if (typeof getIconList !== \"function\") {\n      return [];\n    }\n    const iconList = await getIconList();\n    const customIconItems = iconList.map((icon) => ({\n      icon: `${iconsetPrefix}:${icon.name}`,\n      parts: new Set(icon.name.split(\"-\")),\n      keywords: icon.keywords ?? [],\n    }));\n    return customIconItems;\n  } catch (_err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unable to load icon list for ${iconsetPrefix} iconset`);\n    return [];\n  }\n};\n\nconst rowRenderer: ComboBoxLitRenderer<IconItem | RankedIcon> = (item) => html`\n  <ha-combo-box-item type=\"button\">\n    <ha-icon .icon=${item.icon} slot=\"start\"></ha-icon>\n    ${item.icon}\n  </ha-combo-box-item>\n`;\n\n@customElement(\"ha-icon-picker\")\nexport class HaIconPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean }) public invalid = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        item-value-path=\"icon\"\n        item-label-path=\"icon\"\n        .value=${this._value}\n        allow-custom-value\n        .dataProvider=${ICONS_LOADED ? this._iconProvider : undefined}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .placeholder=${this.placeholder}\n        .errorMessage=${this.errorMessage}\n        .invalid=${this.invalid}\n        .renderer=${rowRenderer}\n        icon\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        ${this._value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this._value || this.placeholder} slot=\"icon\">\n              </ha-icon>\n            `\n          : html`<slot slot=\"icon\" name=\"fallback\"></slot>`}\n      </ha-combo-box>\n    `;\n  }\n\n  // Filter can take a significant chunk of frame (up to 3-5 ms)\n  private _filterIcons = memoizeOne(\n    (filter: string, iconItems: IconItem[] = ICONS) => {\n      if (!filter) {\n        return iconItems;\n      }\n\n      const filteredItems: RankedIcon[] = [];\n      const addIcon = (icon: string, rank: number) =>\n        filteredItems.push({ icon, rank });\n\n      // Filter and rank such that exact matches rank higher, and prefer icon name matches over keywords\n      for (const item of iconItems) {\n        if (item.parts.has(filter)) {\n          addIcon(item.icon, 1);\n        } else if (item.keywords.includes(filter)) {\n          addIcon(item.icon, 2);\n        } else if (item.icon.includes(filter)) {\n          addIcon(item.icon, 3);\n        } else if (item.keywords.some((word) => word.includes(filter))) {\n          addIcon(item.icon, 4);\n        }\n      }\n\n      // Allow preview for custom icon not in list\n      if (filteredItems.length === 0) {\n        addIcon(filter, 0);\n      }\n\n      return filteredItems.sort((itemA, itemB) => itemA.rank - itemB.rank);\n    }\n  );\n\n  private _iconProvider = (\n    params: ComboBoxDataProviderParams,\n    callback: ComboBoxDataProviderCallback<IconItem | RankedIcon>\n  ) => {\n    const filteredItems = this._filterIcons(params.filter.toLowerCase(), ICONS);\n    const iStart = params.page * params.pageSize;\n    const iEnd = iStart + params.pageSize;\n    callback(filteredItems.slice(iStart, iEnd), filteredItems.length);\n  };\n\n  private async _openedChanged(ev: ValueChangedEvent<boolean>) {\n    const opened = ev.detail.value;\n    if (opened && !ICONS_LOADED) {\n      await loadIcons();\n      this.requestUpdate();\n    }\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    this._setValue(ev.detail.value);\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: this._value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  static styles = css`\n    *[slot=\"icon\"] {\n      color: var(--primary-text-color);\n      position: relative;\n      bottom: 2px;\n    }\n    *[slot=\"prefix\"] {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-picker\": HaIconPicker;\n  }\n}\n","import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputBoolean } from \"../../../../data/input_boolean\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_boolean-form\")\nclass HaInputBooleanForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputBoolean;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  set item(item: InputBoolean) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_boolean-form\": HaInputBooleanForm;\n  }\n}\n"],"names":["ICONS","ICONS_LOADED","loadIcons","iconList","default","map","icon","name","parts","Set","split","keywords","customIconLoads","Object","keys","customIcons","forEach","iconSet","push","loadCustomIconItems","Promise","all","customIconItems","getIconList","iconsetPrefix","_icon$keywords","_err","console","warn","rowRenderer","item","html","_t","_","HaIconPicker","LitElement","render","_t2","hass","_value","_iconProvider","undefined","label","helper","disabled","required","placeholder","errorMessage","invalid","_openedChanged","_valueChanged","_t3","_t4","ev","detail","value","this","requestUpdate","stopPropagation","_setValue","fireEvent","bubbles","composed","args","_filterIcons","memoizeOne","filter","iconItems","filteredItems","addIcon","rank","has","includes","some","word","length","sort","itemA","itemB","params","callback","toLowerCase","iStart","page","pageSize","iEnd","slice","styles","css","_t5","attribute","type","Boolean","HaInputBooleanForm","_item","_name","_icon","focus","updateComplete","then","_this$shadowRoot","shadowRoot","querySelector","localize","nothing","_ev$detail","new","configValue","target","newValue","assign","haStyle"],"mappings":"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"}