{"version":3,"file":"7752.67b85002eb93cbb1.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-check-list-item.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tip.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/media-player/dialog-media-manage.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/media-player/ha-media-upload-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/image_upload.ts"],"sourcesContent":["import { CheckListItemBase } from \"@material/mwc-list/mwc-check-list-item-base\";\nimport { styles as controlStyles } from \"@material/mwc-list/mwc-control-list-item.css\";\nimport { styles } from \"@material/mwc-list/mwc-list-item.css\";\nimport { css, html, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-checkbox\";\n\n@customElement(\"ha-check-list-item\")\nexport class HaCheckListItem extends CheckListItemBase {\n  @property({ type: Boolean, attribute: \"checkbox-disabled\" })\n  checkboxDisabled = false;\n\n  @property({ type: Boolean })\n  indeterminate = false;\n\n  async onChange(event) {\n    super.onChange(event);\n    fireEvent(this, event.type);\n  }\n\n  override render() {\n    const checkboxClasses = {\n      \"mdc-deprecated-list-item__graphic\": this.left,\n      \"mdc-deprecated-list-item__meta\": !this.left,\n    };\n\n    const text = this.renderText();\n    const graphic =\n      this.graphic && this.graphic !== \"control\" && !this.left\n        ? this.renderGraphic()\n        : nothing;\n    const meta = this.hasMeta && this.left ? this.renderMeta() : nothing;\n    const ripple = this.renderRipple();\n\n    return html` ${ripple} ${graphic} ${this.left ? \"\" : text}\n      <span class=${classMap(checkboxClasses)}>\n        <ha-checkbox\n          reducedTouchTarget\n          tabindex=${this.tabindex}\n          .checked=${this.selected}\n          .indeterminate=${this.indeterminate}\n          ?disabled=${this.disabled || this.checkboxDisabled}\n          @change=${this.onChange}\n        >\n        </ha-checkbox>\n      </span>\n      ${this.left ? text : \"\"} ${meta}`;\n  }\n\n  static override styles = [\n    styles,\n    controlStyles,\n    css`\n      :host {\n        --mdc-theme-secondary: var(--primary-color);\n      }\n\n      :host([graphic=\"avatar\"]) .mdc-deprecated-list-item__graphic,\n      :host([graphic=\"medium\"]) .mdc-deprecated-list-item__graphic,\n      :host([graphic=\"large\"]) .mdc-deprecated-list-item__graphic,\n      :host([graphic=\"control\"]) .mdc-deprecated-list-item__graphic {\n        margin-inline-end: var(--mdc-list-item-graphic-margin, 16px);\n        margin-inline-start: 0px;\n        direction: var(--direction);\n      }\n      .mdc-deprecated-list-item__meta {\n        flex-shrink: 0;\n        direction: var(--direction);\n        margin-inline-start: auto;\n        margin-inline-end: 0;\n      }\n      .mdc-deprecated-list-item__graphic {\n        margin-top: var(--check-list-item-graphic-margin-top);\n      }\n      :host([graphic=\"icon\"]) .mdc-deprecated-list-item__graphic {\n        margin-inline-start: 0;\n        margin-inline-end: var(--mdc-list-item-graphic-margin, 32px);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-check-list-item\": HaCheckListItem;\n  }\n}\n","import { mdiLightbulbOutline } from \"@mdi/js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { HomeAssistant } from \"../types\";\n\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-tip\")\nclass HaTip extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  public render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <ha-svg-icon .path=${mdiLightbulbOutline}></ha-svg-icon>\n      <span class=\"prefix\"\n        >${this.hass.localize(\"ui.panel.config.tips.tip\")}</span\n      >\n      <span class=\"text\"><slot></slot></span>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      text-align: center;\n    }\n\n    .text {\n      direction: var(--direction);\n      margin-left: 2px;\n      margin-inline-start: 2px;\n      margin-inline-end: initial;\n      color: var(--secondary-text-color);\n    }\n\n    .prefix {\n      font-weight: var(--ha-font-weight-medium);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tip\": HaTip;\n  }\n}\n","import { animate } from \"@lit-labs/motion\";\n\nimport { mdiClose, mdiDelete } from \"@mdi/js\";\nimport type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { repeat } from \"lit/directives/repeat\";\nimport { isComponentLoaded } from \"../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeRTLDirection } from \"../../common/util/compute_rtl\";\nimport { deleteImage, getIdFromUrl } from \"../../data/image_upload\";\nimport type { MediaPlayerItem } from \"../../data/media-player\";\nimport { MediaClassBrowserSettings } from \"../../data/media-player\";\nimport {\n  browseLocalMediaPlayer,\n  isImageUploadMediaSourceContentId,\n  isLocalMediaSourceContentId,\n  removeLocalMedia,\n} from \"../../data/media_source\";\nimport { showConfirmationDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-button\";\nimport \"../ha-check-list-item\";\nimport \"../ha-dialog\";\nimport \"../ha-dialog-header\";\nimport \"../ha-list\";\nimport \"../ha-spinner\";\nimport \"../ha-svg-icon\";\nimport \"../ha-tip\";\nimport \"./ha-media-player-browse\";\nimport \"./ha-media-upload-button\";\nimport type { MediaManageDialogParams } from \"./show-media-manage-dialog\";\n\n@customElement(\"dialog-media-manage\")\nclass DialogMediaManage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _currentItem?: MediaPlayerItem;\n\n  @state() private _params?: MediaManageDialogParams;\n\n  @state() private _uploading = false;\n\n  @state() private _deleting = false;\n\n  @state() private _selected = new Set<number>();\n\n  private _filesChanged = false;\n\n  public showDialog(params: MediaManageDialogParams): void {\n    this._params = params;\n    this._refreshMedia();\n  }\n\n  public closeDialog() {\n    if (this._filesChanged && this._params!.onClose) {\n      this._params!.onClose();\n    }\n    this._params = undefined;\n    this._currentItem = undefined;\n    this._uploading = false;\n    this._deleting = false;\n    this._filesChanged = false;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    const children =\n      this._currentItem?.children?.filter((child) => !child.can_expand) || [];\n\n    let fileIndex = 0;\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        hideActions\n        flexContent\n        .heading=${this._params.currentItem.title}\n        @closed=${this.closeDialog}\n      >\n        <ha-dialog-header slot=\"heading\">\n          ${this._selected.size === 0\n            ? html`\n                <span slot=\"title\">\n                  ${this.hass.localize(\n                    \"ui.components.media-browser.file_management.title\"\n                  )}\n                </span>\n\n                <ha-media-upload-button\n                  .disabled=${this._deleting}\n                  .hass=${this.hass}\n                  .currentItem=${this._params.currentItem}\n                  @uploading=${this._startUploading}\n                  @media-refresh=${this._doneUploading}\n                  slot=\"actionItems\"\n                ></ha-media-upload-button>\n                ${this._uploading\n                  ? \"\"\n                  : html`\n                      <ha-icon-button\n                        .label=${this.hass.localize(\"ui.common.close\")}\n                        .path=${mdiClose}\n                        dialogAction=\"close\"\n                        slot=\"navigationIcon\"\n                        dir=${computeRTLDirection(this.hass)}\n                      ></ha-icon-button>\n                    `}\n              `\n            : html`\n                <ha-button\n                  variant=\"danger\"\n                  slot=\"navigationIcon\"\n                  .disabled=${this._deleting}\n                  @click=${this._handleDelete}\n                >\n                  <ha-svg-icon .path=${mdiDelete} slot=\"start\"></ha-svg-icon>\n                  ${this.hass.localize(\n                    `ui.components.media-browser.file_management.${\n                      this._deleting ? \"deleting\" : \"delete\"\n                    }`,\n                    { count: this._selected.size }\n                  )}\n                </ha-button>\n\n                ${this._deleting\n                  ? \"\"\n                  : html`\n                      <ha-button\n                        slot=\"actionItems\"\n                        @click=${this._handleDeselectAll}\n                      >\n                        <ha-svg-icon\n                          .path=${mdiClose}\n                          slot=\"start\"\n                        ></ha-svg-icon>\n                        ${this.hass.localize(\n                          `ui.components.media-browser.file_management.deselect_all`\n                        )}\n                      </ha-button>\n                    `}\n              `}\n        </ha-dialog-header>\n        ${!this._currentItem\n          ? html`\n              <div class=\"refresh\">\n                <ha-spinner></ha-spinner>\n              </div>\n            `\n          : !children.length\n            ? html`<div class=\"no-items\">\n                <p>\n                  ${this.hass.localize(\n                    \"ui.components.media-browser.file_management.no_items\"\n                  )}\n                </p>\n                ${this._currentItem?.children?.length\n                  ? html`<span class=\"folders\"\n                      >${this.hass.localize(\n                        \"ui.components.media-browser.file_management.folders_not_supported\"\n                      )}</span\n                    >`\n                  : \"\"}\n              </div>`\n            : html`\n                <ha-list multi @selected=${this._handleSelected}>\n                  ${repeat(\n                    children,\n                    (item) => item.media_content_id,\n                    (item) => {\n                      const icon = html`\n                        <ha-svg-icon\n                          slot=\"graphic\"\n                          .path=${MediaClassBrowserSettings[\n                            item.media_class === \"directory\"\n                              ? item.children_media_class || item.media_class\n                              : item.media_class\n                          ].icon}\n                        ></ha-svg-icon>\n                      `;\n                      return html`\n                        <ha-check-list-item\n                          ${animate({\n                            id: item.media_content_id,\n                            skipInitial: true,\n                          })}\n                          graphic=\"icon\"\n                          .disabled=${this._uploading || this._deleting}\n                          .selected=${this._selected.has(fileIndex++)}\n                          .item=${item}\n                        >\n                          ${icon} ${item.title}\n                        </ha-check-list-item>\n                      `;\n                    }\n                  )}\n                </ha-list>\n              `}\n        ${isComponentLoaded(this.hass, \"hassio\")\n          ? html`<ha-tip .hass=${this.hass}>\n              ${this.hass.localize(\n                \"ui.components.media-browser.file_management.tip_media_storage\",\n                {\n                  storage: html`<a\n                    href=\"/config/storage\"\n                    @click=${this.closeDialog}\n                  >\n                    ${this.hass.localize(\n                      \"ui.components.media-browser.file_management.tip_storage_panel\"\n                    )}</a\n                  >`,\n                }\n              )}\n            </ha-tip>`\n          : nothing}\n      </ha-dialog>\n    `;\n  }\n\n  private _handleSelected(ev) {\n    this._selected = ev.detail.index;\n  }\n\n  private _startUploading() {\n    this._uploading = true;\n    this._filesChanged = true;\n  }\n\n  private _doneUploading() {\n    this._uploading = false;\n    this._refreshMedia();\n  }\n\n  private _handleDeselectAll() {\n    if (this._selected.size) {\n      this._selected = new Set();\n    }\n  }\n\n  private async _handleDelete() {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.media-browser.file_management.confirm_delete\",\n          { count: this._selected.size }\n        ),\n        warning: true,\n      }))\n    ) {\n      return;\n    }\n    this._filesChanged = true;\n    this._deleting = true;\n\n    const toDelete: MediaPlayerItem[] = [];\n    let fileIndex = 0;\n    this._currentItem!.children!.forEach((item) => {\n      if (item.can_expand) {\n        return;\n      }\n      if (this._selected.has(fileIndex++)) {\n        toDelete.push(item);\n      }\n    });\n\n    try {\n      await Promise.all(\n        toDelete.map(async (item) => {\n          if (isLocalMediaSourceContentId(item.media_content_id)) {\n            await removeLocalMedia(this.hass, item.media_content_id);\n          } else if (isImageUploadMediaSourceContentId(item.media_content_id)) {\n            const media_id = getIdFromUrl(item.media_content_id);\n            if (media_id) {\n              await deleteImage(this.hass, media_id);\n            }\n          }\n          this._currentItem = {\n            ...this._currentItem!,\n            children: this._currentItem!.children!.filter((i) => i !== item),\n          };\n        })\n      );\n    } finally {\n      this._deleting = false;\n      this._selected = new Set();\n    }\n  }\n\n  private async _refreshMedia() {\n    this._selected = new Set();\n    this._currentItem = undefined;\n    this._currentItem = await browseLocalMediaPlayer(\n      this.hass,\n      this._params!.currentItem.media_content_id\n    );\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ha-dialog {\n          --dialog-z-index: 9;\n          --dialog-content-padding: 0;\n        }\n\n        @media (min-width: 800px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 800px;\n            --dialog-surface-position: fixed;\n            --dialog-surface-top: 40px;\n            --mdc-dialog-max-height: calc(100vh - 72px);\n          }\n        }\n\n        ha-dialog-header ha-media-upload-button,\n        ha-dialog-header ha-button {\n          --mdc-theme-primary: var(--primary-text-color);\n          margin: 6px;\n          display: block;\n        }\n\n        ha-tip {\n          margin: 16px;\n        }\n\n        .refresh {\n          display: flex;\n          height: 200px;\n          justify-content: center;\n          align-items: center;\n        }\n\n        .no-items {\n          text-align: center;\n          padding: 16px;\n        }\n        .folders {\n          color: var(--secondary-text-color);\n          font-style: italic;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-media-manage\": DialogMediaManage;\n  }\n}\n","import { mdiUpload } from \"@mdi/js\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { MediaPlayerItem } from \"../../data/media-player\";\nimport {\n  isLocalMediaSourceContentId,\n  uploadLocalMedia,\n} from \"../../data/media_source\";\nimport { showAlertDialog } from \"../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-button\";\nimport \"../ha-svg-icon\";\n\ndeclare global {\n  interface HASSDomEvents {\n    uploading: unknown;\n    \"media-refresh\": unknown;\n  }\n}\n\n@customElement(\"ha-media-upload-button\")\nclass MediaUploadButton extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) currentItem?: MediaPlayerItem;\n\n  @state() _uploading = 0;\n\n  protected render() {\n    if (\n      !this.currentItem ||\n      !isLocalMediaSourceContentId(this.currentItem.media_content_id || \"\")\n    ) {\n      return nothing;\n    }\n    return html`\n      <ha-button\n        .disabled=${this._uploading > 0}\n        @click=${this._startUpload}\n        .loading=${this._uploading > 0}\n      >\n        <ha-svg-icon .path=${mdiUpload} slot=\"start\"></ha-svg-icon>\n        ${this._uploading > 0\n          ? this.hass.localize(\n              \"ui.components.media-browser.file_management.uploading\",\n              {\n                count: this._uploading,\n              }\n            )\n          : this.hass.localize(\n              \"ui.components.media-browser.file_management.add_media\"\n            )}\n      </ha-button>\n    `;\n  }\n\n  private async _startUpload() {\n    if (this._uploading > 0) {\n      return;\n    }\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"audio/*,video/*,image/*\";\n    input.multiple = true;\n    input.addEventListener(\n      \"change\",\n      async () => {\n        fireEvent(this, \"uploading\");\n        const files = input.files!;\n        document.body.removeChild(input);\n        const target = this.currentItem!.media_content_id!;\n\n        for (let i = 0; i < files.length; i++) {\n          this._uploading = files.length - i;\n\n          try {\n            // eslint-disable-next-line no-await-in-loop\n            await uploadLocalMedia(this.hass, target, files[i]);\n          } catch (err: any) {\n            showAlertDialog(this, {\n              text: this.hass.localize(\n                \"ui.components.media-browser.file_management.upload_failed\",\n                {\n                  reason: err.message || err,\n                }\n              ),\n            });\n            break;\n          }\n        }\n        this._uploading = 0;\n        fireEvent(this, \"media-refresh\");\n      },\n      { once: true }\n    );\n    // https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n    input.style.display = \"none\";\n    document.body.append(input);\n    input.click();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-media-upload-button\": MediaUploadButton;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\ninterface Image {\n  filesize: number;\n  name: string;\n  uploaded_at: string; // isoformat date\n  content_type: string;\n  id: string;\n}\n\nexport const URL_PREFIX = \"/api/image/serve/\";\nexport const MEDIA_PREFIX = \"media-source://image_upload\";\n\nexport interface ImageMutableParams {\n  name: string;\n}\n\nexport const getIdFromUrl = (url: string): string | undefined => {\n  let id;\n  if (url.startsWith(URL_PREFIX)) {\n    id = url.substring(URL_PREFIX.length);\n    const idx = id.indexOf(\"/\");\n    if (idx >= 0) {\n      id = id.substring(0, idx);\n    }\n  } else if (url.startsWith(MEDIA_PREFIX)) {\n    id = url.substring(MEDIA_PREFIX.length + 1);\n  }\n  return id;\n};\n\nexport const generateImageThumbnailUrl = (\n  mediaId: string,\n  size?: number,\n  original = false\n) => {\n  if (!original && !size) {\n    throw new Error(\"Size must be provided if original is false\");\n  }\n\n  return original\n    ? `/api/image/serve/${mediaId}/original`\n    : `/api/image/serve/${mediaId}/${size}x${size}`;\n};\n\nexport const fetchImages = (hass: HomeAssistant) =>\n  hass.callWS<Image[]>({ type: \"image/list\" });\n\nexport const createImage = async (\n  hass: HomeAssistant,\n  file: File\n): Promise<Image> => {\n  const fd = new FormData();\n  fd.append(\"file\", file);\n  const resp = await hass.fetchWithAuth(\"/api/image/upload\", {\n    method: \"POST\",\n    body: fd,\n  });\n  if (resp.status === 413) {\n    throw new Error(`Uploaded image is too large (${file.name})`);\n  } else if (resp.status !== 200) {\n    throw new Error(\"Unknown error\");\n  }\n  return resp.json();\n};\n\nexport const updateImage = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<ImageMutableParams>\n) =>\n  hass.callWS<Image>({\n    type: \"image/update\",\n    media_id: id,\n    ...updates,\n  });\n\nexport const deleteImage = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"image/delete\",\n    image_id: id,\n  });\n\nexport const getImageData = async (hass: HomeAssistant, url: string) => {\n  const response = await fetch(hass.hassUrl(url));\n\n  if (!response.ok) {\n    throw new Error(\n      `Failed to fetch image: ${\n        response.statusText ? response.statusText : response.status\n      }`\n    );\n  }\n\n  return response.blob();\n};\n"],"names":["HaCheckListItem","CheckListItemBase","onChange","event","super","fireEvent","type","render","checkboxClasses","this","left","text","renderText","graphic","renderGraphic","nothing","meta","hasMeta","renderMeta","ripple","renderRipple","html","_t","_","classMap","tabindex","selected","indeterminate","disabled","checkboxDisabled","args","styles","controlStyles","css","_t2","Boolean","attribute","HaTip","LitElement","hass","localize","mdiClose","mdiDelete","DialogMediaManage","showDialog","params","_params","_refreshMedia","closeDialog","_filesChanged","onClose","undefined","_currentItem","_uploading","_deleting","dialog","localName","_this$_currentItem","_this$_currentItem2","children","filter","child","can_expand","fileIndex","currentItem","title","_selected","size","_startUploading","_doneUploading","_t3","computeRTLDirection","_t4","_handleDelete","count","_t5","_handleDeselectAll","length","_t9","_handleSelected","repeat","item","media_content_id","icon","_t0","MediaClassBrowserSettings","media_class","children_media_class","_t1","animate","id","skipInitial","has","_t7","_t8","_t6","isComponentLoaded","_t10","storage","_t11","ev","detail","index","Set","showConfirmationDialog","warning","toDelete","forEach","push","Promise","all","map","isLocalMediaSourceContentId","removeLocalMedia","isImageUploadMediaSourceContentId","media_id","getIdFromUrl","deleteImage","Object","assign","i","browseLocalMediaPlayer","haStyleDialog","_t12","MediaUploadButton","_startUpload","mdiUpload","input","document","createElement","accept","multiple","addEventListener","files","body","removeChild","target","uploadLocalMedia","err","showAlertDialog","reason","message","once","style","display","append","click","URL_PREFIX","MEDIA_PREFIX","url","startsWith","substring","idx","indexOf","generateImageThumbnailUrl","mediaId","original","Error","createImage","file","fd","FormData","resp","fetchWithAuth","method","status","name","json","callWS","image_id","getImageData","response","fetch","hassUrl","ok","statusText","blob"],"mappings":"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"}