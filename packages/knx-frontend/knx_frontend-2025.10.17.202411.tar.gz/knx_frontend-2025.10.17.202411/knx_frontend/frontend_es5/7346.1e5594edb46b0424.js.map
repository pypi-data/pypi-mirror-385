{"version":3,"file":"7346.1e5594edb46b0424.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-integer.ts"],"sourcesContent":["import type { PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HaCheckbox } from \"../ha-checkbox\";\nimport \"../ha-slider\";\nimport \"../ha-checkbox\";\nimport \"../ha-input-helper-text\";\nimport \"../ha-textfield\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport type {\n  HaFormElement,\n  HaFormIntegerData,\n  HaFormIntegerSchema,\n} from \"./types\";\nimport type { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-integer\")\nexport class HaFormInteger extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormIntegerSchema;\n\n  @property({ attribute: false }) public data?: HaFormIntegerData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield ha-slider\") private _input?:\n    | HaTextField\n    | HTMLInputElement;\n\n  private _lastValue?: HaFormIntegerData;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      this.schema.valueMin !== undefined &&\n      this.schema.valueMax !== undefined &&\n      this.schema.valueMax - this.schema.valueMin < 256\n    ) {\n      return html`\n        <div>\n          ${this.label}\n          <div class=\"flex\">\n            ${!this.schema.required\n              ? html`\n                  <ha-checkbox\n                    @change=${this._handleCheckboxChange}\n                    .checked=${this.data !== undefined}\n                    .disabled=${this.disabled}\n                  ></ha-checkbox>\n                `\n              : \"\"}\n            <ha-slider\n              labeled\n              .value=${this._value}\n              .min=${this.schema.valueMin}\n              .max=${this.schema.valueMax}\n              .disabled=${this.disabled ||\n              (this.data === undefined && !this.schema.required)}\n              @change=${this._valueChanged}\n            ></ha-slider>\n          </div>\n          ${this.helper\n            ? html`<ha-input-helper-text .disabled=${this.disabled}\n                >${this.helper}</ha-input-helper-text\n              >`\n            : \"\"}\n        </div>\n      `;\n    }\n\n    return html`\n      <ha-textfield\n        type=\"number\"\n        inputMode=\"numeric\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\n        \"own-margin\",\n        !(\"valueMin\" in this.schema && \"valueMax\" in this.schema) &&\n          !!this.schema.required\n      );\n    }\n  }\n\n  private get _value() {\n    if (this.data !== undefined) {\n      return this.data;\n    }\n\n    if (!this.schema.required) {\n      return this.schema.valueMin || 0;\n    }\n\n    return (\n      (this.schema.description?.suggested_value !== undefined &&\n        this.schema.description?.suggested_value !== null) ||\n      this.schema.default ||\n      this.schema.valueMin ||\n      0\n    );\n  }\n\n  private _handleCheckboxChange(ev: Event) {\n    const checked = (ev.target as HaCheckbox).checked;\n    let value: HaFormIntegerData | undefined;\n    if (checked) {\n      for (const candidate of [\n        this._lastValue,\n        this.schema.description?.suggested_value as HaFormIntegerData,\n        this.schema.default,\n        0,\n      ]) {\n        if (candidate !== undefined) {\n          value = candidate;\n          break;\n        }\n      }\n    } else {\n      // We track last value so user can disable and enable a field without losing\n      // their value.\n      this._lastValue = this.data;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField | HTMLInputElement;\n    const rawValue = source.value;\n\n    let value: number | undefined;\n\n    if (rawValue !== \"\") {\n      value = parseInt(String(rawValue));\n    }\n\n    if (this.data === value) {\n      // parseInt will drop invalid text at the end, in that case update textfield\n      const newRawValue = value === undefined ? \"\" : String(value);\n      if (source.value !== newRawValue) {\n        source.value = newRawValue;\n      }\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static styles = css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    .flex {\n      display: flex;\n    }\n    ha-slider {\n      flex: 1;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-integer\": HaFormInteger;\n  }\n}\n"],"names":["HaFormInteger","LitElement","focus","this","_input","render","_this$schema$descript","_this$localize","undefined","schema","valueMin","valueMax","html","_t","_","label","required","_t2","_handleCheckboxChange","data","disabled","_value","_valueChanged","helper","_t3","_t4","description","suffix","localize","call","updated","changedProps","has","toggleAttribute","_this$schema$descript2","_this$schema$descript3","suggested_value","default","ev","value","target","checked","candidate","_lastValue","_this$schema$descript4","fireEvent","source","rawValue","parseInt","String","newRawValue","args","styles","css","_t5","attribute","type","Boolean"],"mappings":"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"}