{"version":3,"file":"7568.614cd6a9293c1e3d.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/data-table/dialog-data-table-settings.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-list-item.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-list.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-sortable.ts"],"sourcesContent":["import { mdiDrag, mdiEye, mdiEyeOff } from \"@mdi/js\";\nimport type { CSSResultGroup } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { repeat } from \"lit/directives/repeat\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-button\";\nimport { createCloseHeading } from \"../ha-dialog\";\nimport \"../ha-list\";\nimport \"../ha-list-item\";\nimport \"../ha-sortable\";\nimport type {\n  DataTableColumnContainer,\n  DataTableColumnData,\n} from \"./ha-data-table\";\nimport type { DataTableSettingsDialogParams } from \"./show-dialog-data-table-settings\";\n\n@customElement(\"dialog-data-table-settings\")\nexport class DialogDataTableSettings extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: DataTableSettingsDialogParams;\n\n  @state() private _columnOrder?: string[];\n\n  @state() private _hiddenColumns?: string[];\n\n  public showDialog(params: DataTableSettingsDialogParams) {\n    this._params = params;\n    this._columnOrder = params.columnOrder;\n    this._hiddenColumns = params.hiddenColumns;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  private _sortedColumns = memoizeOne(\n    (\n      columns: DataTableColumnContainer,\n      columnOrder: string[] | undefined,\n      hiddenColumns: string[] | undefined\n    ) =>\n      Object.keys(columns)\n        .filter((col) => !columns[col].hidden)\n        .sort((a, b) => {\n          const orderA = columnOrder?.indexOf(a) ?? -1;\n          const orderB = columnOrder?.indexOf(b) ?? -1;\n          const hiddenA =\n            hiddenColumns?.includes(a) ?? Boolean(columns[a].defaultHidden);\n          const hiddenB =\n            hiddenColumns?.includes(b) ?? Boolean(columns[b].defaultHidden);\n          if (hiddenA !== hiddenB) {\n            return hiddenA ? 1 : -1;\n          }\n          if (orderA !== orderB) {\n            if (orderA === -1) {\n              return 1;\n            }\n            if (orderB === -1) {\n              return -1;\n            }\n          }\n          return orderA - orderB;\n        })\n        .reduce(\n          (arr, key) => {\n            arr.push({ key, ...columns[key] });\n            return arr;\n          },\n          [] as (DataTableColumnData & { key: string })[]\n        )\n  );\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n\n    const localize = this._params.localizeFunc || this.hass.localize;\n\n    const columns = this._sortedColumns(\n      this._params.columns,\n      this._columnOrder,\n      this._hiddenColumns\n    );\n\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          localize(\"ui.components.data-table.settings.header\")\n        )}\n      >\n        <ha-sortable\n          @item-moved=${this._columnMoved}\n          draggable-selector=\".draggable\"\n          handle-selector=\".handle\"\n        >\n          <ha-list>\n            ${repeat(\n              columns,\n              (col) => col.key,\n              (col, _idx) => {\n                const canMove = !col.main && col.moveable !== false;\n                const canHide = !col.main && col.hideable !== false;\n                const isVisible = !(this._columnOrder &&\n                this._columnOrder.includes(col.key)\n                  ? (this._hiddenColumns?.includes(col.key) ??\n                    col.defaultHidden)\n                  : col.defaultHidden);\n\n                return html`<ha-list-item\n                  hasMeta\n                  class=${classMap({\n                    hidden: !isVisible,\n                    draggable: canMove && isVisible,\n                  })}\n                  graphic=\"icon\"\n                  noninteractive\n                  >${col.title || col.label || col.key}\n                  ${canMove && isVisible\n                    ? html`<ha-svg-icon\n                        class=\"handle\"\n                        .path=${mdiDrag}\n                        slot=\"graphic\"\n                      ></ha-svg-icon>`\n                    : nothing}\n                  <ha-icon-button\n                    tabindex=\"0\"\n                    class=\"action\"\n                    .disabled=${!canHide}\n                    .hidden=${!isVisible}\n                    .path=${isVisible ? mdiEye : mdiEyeOff}\n                    slot=\"meta\"\n                    .label=${this.hass!.localize(\n                      `ui.components.data-table.settings.${isVisible ? \"hide\" : \"show\"}`,\n                      { title: typeof col.title === \"string\" ? col.title : \"\" }\n                    )}\n                    .column=${col.key}\n                    @click=${this._toggle}\n                  ></ha-icon-button>\n                </ha-list-item>`;\n              }\n            )}\n          </ha-list>\n        </ha-sortable>\n        <ha-button\n          appearance=\"plain\"\n          slot=\"secondaryAction\"\n          @click=${this._reset}\n          >${localize(\"ui.components.data-table.settings.restore\")}</ha-button\n        >\n        <ha-button slot=\"primaryAction\" @click=${this.closeDialog}>\n          ${localize(\"ui.components.data-table.settings.done\")}\n        </ha-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _columnMoved(ev: CustomEvent): void {\n    ev.stopPropagation();\n    if (!this._params) {\n      return;\n    }\n    const { oldIndex, newIndex } = ev.detail;\n\n    const columns = this._sortedColumns(\n      this._params.columns,\n      this._columnOrder,\n      this._hiddenColumns\n    );\n\n    const columnOrder = columns.map((column) => column.key);\n\n    const option = columnOrder.splice(oldIndex, 1)[0];\n    columnOrder.splice(newIndex, 0, option);\n\n    this._columnOrder = columnOrder;\n\n    this._params!.onUpdate(this._columnOrder, this._hiddenColumns);\n  }\n\n  private _toggle(ev) {\n    if (!this._params) {\n      return;\n    }\n    const column = ev.target.column;\n    const wasHidden = ev.target.hidden;\n\n    const hidden = [\n      ...(this._hiddenColumns ??\n        Object.entries(this._params.columns)\n          .filter(([_key, col]) => col.defaultHidden)\n          .map(([key]) => key)),\n    ];\n\n    if (wasHidden && hidden.includes(column)) {\n      hidden.splice(hidden.indexOf(column), 1);\n    } else if (!wasHidden) {\n      hidden.push(column);\n    }\n\n    const columns = this._sortedColumns(\n      this._params.columns,\n      this._columnOrder,\n      hidden\n    );\n\n    if (!this._columnOrder) {\n      this._columnOrder = columns.map((col) => col.key);\n    } else {\n      const newOrder = this._columnOrder.filter((col) => col !== column);\n\n      // Array.findLastIndex when supported or core-js polyfill\n      const findLastIndex = (\n        arr: any[],\n        fn: (item: any, index: number, arr: any[]) => boolean\n      ) => {\n        for (let i = arr.length - 1; i >= 0; i--) {\n          if (fn(arr[i], i, arr)) return i;\n        }\n        return -1;\n      };\n\n      let lastMoveable = findLastIndex(\n        newOrder,\n        (col) =>\n          col !== column &&\n          !hidden.includes(col) &&\n          !this._params!.columns[col].main &&\n          this._params!.columns[col].moveable !== false\n      );\n\n      if (lastMoveable === -1) {\n        lastMoveable = newOrder.length - 1;\n      }\n\n      columns.forEach((col) => {\n        if (!newOrder.includes(col.key)) {\n          if (col.moveable === false) {\n            newOrder.unshift(col.key);\n          } else {\n            newOrder.splice(lastMoveable + 1, 0, col.key);\n          }\n\n          if (\n            col.key !== column &&\n            col.defaultHidden &&\n            !hidden.includes(col.key)\n          ) {\n            hidden.push(col.key);\n          }\n        }\n      });\n\n      this._columnOrder = newOrder;\n    }\n\n    this._hiddenColumns = hidden;\n\n    this._params!.onUpdate(this._columnOrder, this._hiddenColumns);\n  }\n\n  private _reset() {\n    this._columnOrder = undefined;\n    this._hiddenColumns = undefined;\n\n    this._params!.onUpdate(this._columnOrder, this._hiddenColumns);\n    this.closeDialog();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        ha-dialog {\n          --mdc-dialog-max-width: 500px;\n          --dialog-z-index: 10;\n          --dialog-content-padding: 0 8px;\n        }\n        @media all and (max-width: 451px) {\n          ha-dialog {\n            --vertical-align-dialog: flex-start;\n            --dialog-surface-margin-top: 250px;\n            --ha-dialog-border-radius: 28px 28px 0 0;\n            --mdc-dialog-min-height: calc(100% - 250px);\n            --mdc-dialog-max-height: calc(100% - 250px);\n          }\n        }\n        ha-list-item {\n          --mdc-list-side-padding: 12px;\n          overflow: visible;\n        }\n        .hidden {\n          color: var(--disabled-text-color);\n        }\n        .handle {\n          cursor: move; /* fallback if grab cursor is unsupported */\n          cursor: grab;\n        }\n        .actions {\n          display: flex;\n          flex-direction: row;\n        }\n        ha-icon-button {\n          display: block;\n          margin: -12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-data-table-settings\": DialogDataTableSettings;\n  }\n}\n","import Button from \"@home-assistant/webawesome/dist/components/button/button\";\nimport { css, type CSSResultGroup } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\nexport type Appearance = \"accent\" | \"filled\" | \"outlined\" | \"plain\";\n\n/**\n * Home Assistant button component\n *\n * @element ha-button\n * @extends {Button}\n *\n * @summary\n * A stylable button component supporting Home Assistant theming, variants, and appearances based on webawesome button.\n *\n * @slot - Label of the button\n * @slot start - The prefix container (usually for icons).\n * @slot end - The suffix container (usually for icons).\n *\n * @csspart base - The component's base wrapper.\n * @csspart start - The container that wraps the prefix.\n * @csspart label - The button's label.\n * @csspart end - The container that wraps the suffix.\n * @csspart caret - The button's caret icon, an `<sl-icon>` element.\n * @csspart spinner - The spinner that shows when the button is in the loading state.\n *\n * @cssprop --ha-button-height - The height of the button.\n * @cssprop --ha-button-border-radius - The border radius of the button. defaults to `var(--ha-border-radius-pill)`.\n *\n * @attr {(\"small\"|\"medium\")} size - Sets the button size.\n * @attr {(\"brand\"|\"neutral\"|\"danger\"|\"warning\"|\"success\")} variant - Sets the button color variant. \"primary\" is default.\n * @attr {(\"accent\"|\"filled\"|\"plain\")} appearance - Sets the button appearance.\n * @attr {boolean} loading - shows a loading indicator instead of the buttons label and disable buttons click.\n * @attr {boolean} disabled - Disables the button and prevents user interaction.\n */\n@customElement(\"ha-button\")\nexport class HaButton extends Button {\n  variant: \"brand\" | \"neutral\" | \"success\" | \"warning\" | \"danger\" = \"brand\";\n\n  static get styles(): CSSResultGroup {\n    return [\n      Button.styles,\n      css`\n        .button {\n          /* set theme vars */\n          --wa-form-control-padding-inline: 16px;\n          --wa-font-weight-action: var(--ha-font-weight-medium);\n          --wa-form-control-border-radius: var(\n            --ha-button-border-radius,\n            var(--ha-border-radius-pill)\n          );\n\n          --wa-form-control-height: var(\n            --ha-button-height,\n            var(--button-height, 40px)\n          );\n\n          font-size: var(--ha-font-size-m);\n          line-height: 1;\n\n          transition: background-color 0.15s ease-in-out;\n        }\n\n        :host([size=\"small\"]) .button {\n          --wa-form-control-height: var(\n            --ha-button-height,\n            var(--button-height, 32px)\n          );\n          font-size: var(--wa-font-size-s, var(--ha-font-size-m));\n          --wa-form-control-padding-inline: 12px;\n        }\n\n        :host([variant=\"brand\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-primary-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-primary-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-primary-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-primary-loud-hover\n          );\n        }\n\n        :host([variant=\"neutral\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-neutral-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-neutral-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-neutral-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-neutral-loud-hover\n          );\n        }\n\n        :host([variant=\"success\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-success-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-success-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-success-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-success-loud-hover\n          );\n        }\n\n        :host([variant=\"warning\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-warning-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-warning-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-warning-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-warning-loud-hover\n          );\n        }\n\n        :host([variant=\"danger\"]) {\n          --button-color-fill-normal-active: var(\n            --ha-color-fill-danger-normal-active\n          );\n          --button-color-fill-normal-hover: var(\n            --ha-color-fill-danger-normal-hover\n          );\n          --button-color-fill-loud-active: var(\n            --ha-color-fill-danger-loud-active\n          );\n          --button-color-fill-loud-hover: var(\n            --ha-color-fill-danger-loud-hover\n          );\n        }\n\n        :host([appearance~=\"plain\"]) .button {\n          color: var(--wa-color-on-normal);\n          background-color: transparent;\n        }\n        :host([appearance~=\"plain\"]) .button.disabled {\n          background-color: transparent;\n          color: var(--ha-color-on-disabled-quiet);\n        }\n\n        :host([appearance~=\"outlined\"]) .button.disabled {\n          background-color: transparent;\n          color: var(--ha-color-on-disabled-quiet);\n        }\n\n        @media (hover: hover) {\n          :host([appearance~=\"filled\"])\n            .button:not(.disabled):not(.loading):hover {\n            background-color: var(--button-color-fill-normal-hover);\n          }\n          :host([appearance~=\"accent\"])\n            .button:not(.disabled):not(.loading):hover {\n            background-color: var(--button-color-fill-loud-hover);\n          }\n          :host([appearance~=\"plain\"])\n            .button:not(.disabled):not(.loading):hover {\n            color: var(--wa-color-on-normal);\n          }\n        }\n        :host([appearance~=\"filled\"]) .button {\n          color: var(--wa-color-on-normal);\n          background-color: var(--wa-color-fill-normal);\n          border-color: transparent;\n        }\n        :host([appearance~=\"filled\"])\n          .button:not(.disabled):not(.loading):active {\n          background-color: var(--button-color-fill-normal-active);\n        }\n        :host([appearance~=\"filled\"]) .button.disabled {\n          background-color: var(--ha-color-fill-disabled-normal-resting);\n          color: var(--ha-color-on-disabled-normal);\n        }\n\n        :host([appearance~=\"accent\"]) .button {\n          background-color: var(\n            --wa-color-fill-loud,\n            var(--wa-color-neutral-fill-loud)\n          );\n        }\n        :host([appearance~=\"accent\"])\n          .button:not(.disabled):not(.loading):active {\n          background-color: var(--button-color-fill-loud-active);\n        }\n        :host([appearance~=\"accent\"]) .button.disabled {\n          background-color: var(--ha-color-fill-disabled-loud-resting);\n          color: var(--ha-color-on-disabled-loud);\n        }\n\n        :host([loading]) {\n          pointer-events: none;\n        }\n\n        .button.disabled {\n          opacity: 1;\n        }\n\n        slot[name=\"start\"]::slotted(*) {\n          margin-inline-end: 4px;\n        }\n        slot[name=\"end\"]::slotted(*) {\n          margin-inline-start: 4px;\n        }\n\n        .button.has-start {\n          padding-inline-start: 8px;\n        }\n        .button.has-end {\n          padding-inline-end: 8px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button\": HaButton;\n  }\n}\n","import { ListItemBase } from \"@material/mwc-list/mwc-list-item-base\";\nimport { styles } from \"@material/mwc-list/mwc-list-item.css\";\nimport type { CSSResultGroup } from \"lit\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-list-item\")\nexport class HaListItem extends ListItemBase {\n  protected renderRipple() {\n    if (this.noninteractive) {\n      return \"\";\n    }\n    return super.renderRipple();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      styles,\n      css`\n        :host {\n          padding-left: var(\n            --mdc-list-side-padding-left,\n            var(--mdc-list-side-padding, 20px)\n          );\n          padding-inline-start: var(\n            --mdc-list-side-padding-left,\n            var(--mdc-list-side-padding, 20px)\n          );\n          padding-right: var(\n            --mdc-list-side-padding-right,\n            var(--mdc-list-side-padding, 20px)\n          );\n          padding-inline-end: var(\n            --mdc-list-side-padding-right,\n            var(--mdc-list-side-padding, 20px)\n          );\n        }\n        :host([graphic=\"avatar\"]:not([twoLine])),\n        :host([graphic=\"icon\"]:not([twoLine])) {\n          height: 48px;\n        }\n        span.material-icons:first-of-type {\n          margin-inline-start: 0px !important;\n          margin-inline-end: var(\n            --mdc-list-item-graphic-margin,\n            16px\n          ) !important;\n          direction: var(--direction) !important;\n        }\n        span.material-icons:last-of-type {\n          margin-inline-start: auto !important;\n          margin-inline-end: 0px !important;\n          direction: var(--direction) !important;\n        }\n        .mdc-deprecated-list-item__meta {\n          display: var(--mdc-list-item-meta-display);\n          align-items: center;\n          flex-shrink: 0;\n        }\n        :host([graphic=\"icon\"]:not([twoline]))\n          .mdc-deprecated-list-item__graphic {\n          margin-inline-end: var(\n            --mdc-list-item-graphic-margin,\n            20px\n          ) !important;\n        }\n        :host([multiline-secondary]) {\n          height: auto;\n        }\n        :host([multiline-secondary]) .mdc-deprecated-list-item__text {\n          padding: 8px 0;\n        }\n        :host([multiline-secondary]) .mdc-deprecated-list-item__secondary-text {\n          text-overflow: initial;\n          white-space: normal;\n          overflow: auto;\n          display: inline-block;\n          margin-top: 10px;\n        }\n        :host([multiline-secondary]) .mdc-deprecated-list-item__primary-text {\n          margin-top: 10px;\n        }\n        :host([multiline-secondary])\n          .mdc-deprecated-list-item__secondary-text::before {\n          display: none;\n        }\n        :host([multiline-secondary])\n          .mdc-deprecated-list-item__primary-text::before {\n          display: none;\n        }\n        :host([disabled]) {\n          color: var(--disabled-text-color);\n        }\n        :host([noninteractive]) {\n          pointer-events: unset;\n        }\n      `,\n      // safari workaround - must be explicit\n      document.dir === \"rtl\"\n        ? css`\n            span.material-icons:first-of-type,\n            span.material-icons:last-of-type {\n              direction: rtl !important;\n              --direction: rtl;\n            }\n          `\n        : css``,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-list-item\": HaListItem;\n  }\n}\n","import { ListBase } from \"@material/mwc-list/mwc-list-base\";\nimport { styles } from \"@material/mwc-list/mwc-list.css\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-list\")\nexport class HaList extends ListBase {\n  static styles = styles;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-list\": HaList;\n  }\n}\n","/* eslint-disable lit/prefer-static-styles */\nimport type { PropertyValues } from \"lit\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { SortableEvent } from \"sortablejs\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { SortableInstance } from \"../resources/sortable\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"item-moved\": {\n      oldIndex: number;\n      newIndex: number;\n    };\n    \"item-added\": {\n      index: number;\n      data: any;\n      item: any;\n    };\n    \"item-removed\": {\n      index: number;\n    };\n    \"drag-start\": undefined;\n    \"drag-end\": undefined;\n  }\n}\n\nexport type HaSortableOptions = Omit<\n  SortableInstance.SortableOptions,\n  \"onStart\" | \"onChoose\" | \"onEnd\" | \"onUpdate\" | \"onAdd\" | \"onRemove\"\n>;\n\n@customElement(\"ha-sortable\")\nexport class HaSortable extends LitElement {\n  private _sortable?: SortableInstance;\n\n  @property({ type: Boolean })\n  public disabled = false;\n\n  @property({ type: Boolean, attribute: \"no-style\" })\n  public noStyle = false;\n\n  @property({ type: String, attribute: \"draggable-selector\" })\n  public draggableSelector?: string;\n\n  @property({ type: String, attribute: \"handle-selector\" })\n  public handleSelector?: string;\n\n  /**\n   * Selectors that do not lead to dragging (String or Function)\n   * https://github.com/SortableJS/Sortable?tab=readme-ov-file#filter-option\n   * */\n  @property({ type: String, attribute: \"filter\" })\n  public filter?: string;\n\n  @property({ type: String })\n  public group?: string | SortableInstance.GroupOptions;\n\n  @property({ type: Boolean, attribute: \"invert-swap\" })\n  public invertSwap = false;\n\n  @property({ attribute: false })\n  public options?: HaSortableOptions;\n\n  @property({ type: Boolean })\n  public rollback = true;\n\n  protected updated(changedProperties: PropertyValues<this>) {\n    if (changedProperties.has(\"disabled\")) {\n      if (this.disabled) {\n        this._destroySortable();\n      } else {\n        this._createSortable();\n      }\n    }\n  }\n\n  // Workaround for connectedCallback just after disconnectedCallback (when dragging sortable with sortable children)\n  private _shouldBeDestroy = false;\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    this._shouldBeDestroy = true;\n    setTimeout(() => {\n      if (this._shouldBeDestroy) {\n        this._destroySortable();\n        this._shouldBeDestroy = false;\n      }\n    }, 1);\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._shouldBeDestroy = false;\n    if (this.hasUpdated && !this.disabled) {\n      this._createSortable();\n    }\n  }\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  protected render() {\n    if (this.noStyle) return nothing;\n    return html`\n      <style>\n        .sortable-fallback {\n          display: none !important;\n        }\n\n        .sortable-ghost {\n          box-shadow: 0 0 0 2px var(--primary-color);\n          background: rgba(var(--rgb-primary-color), 0.25);\n          border-radius: 4px;\n          opacity: 0.4;\n        }\n\n        .sortable-drag {\n          border-radius: 4px;\n          opacity: 1;\n          background: var(--card-background-color);\n          box-shadow: 0px 4px 8px 3px #00000026;\n          cursor: grabbing;\n        }\n      </style>\n    `;\n  }\n\n  private async _createSortable() {\n    if (this._sortable) return;\n    const container = this.children[0] as HTMLElement | undefined;\n\n    if (!container) return;\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const Sortable = (await import(\"../resources/sortable\")).default;\n\n    const options: SortableInstance.Options = {\n      scroll: true,\n      // Force the autoscroll fallback because it works better than the native one\n      forceAutoScrollFallback: true,\n      scrollSpeed: 20,\n      animation: 150,\n      ...this.options,\n      onChoose: this._handleChoose,\n      onStart: this._handleStart,\n      onEnd: this._handleEnd,\n      onUpdate: this._handleUpdate,\n      onAdd: this._handleAdd,\n      onRemove: this._handleRemove,\n    };\n\n    if (this.draggableSelector) {\n      options.draggable = this.draggableSelector;\n    }\n    if (this.handleSelector) {\n      options.handle = this.handleSelector;\n    }\n    if (this.invertSwap !== undefined) {\n      options.invertSwap = this.invertSwap;\n    }\n    if (this.group) {\n      options.group = this.group;\n    }\n    if (this.filter) {\n      options.filter = this.filter;\n    }\n\n    this._sortable = new Sortable(container, options);\n  }\n\n  private _handleUpdate = (evt) => {\n    fireEvent(this, \"item-moved\", {\n      newIndex: evt.newIndex,\n      oldIndex: evt.oldIndex,\n    });\n  };\n\n  private _handleAdd = (evt) => {\n    fireEvent(this, \"item-added\", {\n      index: evt.newIndex,\n      data: evt.item.sortableData,\n      item: evt.item,\n    });\n  };\n\n  private _handleRemove = (evt) => {\n    fireEvent(this, \"item-removed\", { index: evt.oldIndex });\n  };\n\n  private _handleEnd = async (evt) => {\n    fireEvent(this, \"drag-end\");\n    // put back in original location\n    if (this.rollback && (evt.item as any).placeholder) {\n      (evt.item as any).placeholder.replaceWith(evt.item);\n      delete (evt.item as any).placeholder;\n    }\n  };\n\n  private _handleStart = () => {\n    fireEvent(this, \"drag-start\");\n  };\n\n  private _handleChoose = (evt: SortableEvent) => {\n    if (!this.rollback) return;\n    (evt.item as any).placeholder = document.createComment(\"sort-placeholder\");\n    evt.item.after((evt.item as any).placeholder);\n  };\n\n  private _destroySortable() {\n    if (!this._sortable) return;\n    this._sortable.destroy();\n    this._sortable = undefined;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-sortable\": HaSortable;\n  }\n}\n"],"names":["DialogDataTableSettings","LitElement","showDialog","params","this","_params","_columnOrder","columnOrder","_hiddenColumns","hiddenColumns","closeDialog","undefined","fireEvent","dialog","localName","render","nothing","localize","localizeFunc","hass","columns","_sortedColumns","html","_t","_","createCloseHeading","_columnMoved","repeat","col","key","_idx","_this$_hiddenColumns$","_this$_hiddenColumns","canMove","main","moveable","canHide","hideable","isVisible","includes","defaultHidden","_t2","classMap","hidden","draggable","title","label","_t3","mdiDrag","mdiEye","mdiEyeOff","_toggle","_reset","ev","stopPropagation","oldIndex","newIndex","detail","map","column","option","splice","onUpdate","_this$_hiddenColumns2","target","wasHidden","Object","entries","filter","_key","indexOf","push","newOrder","lastMoveable","findLastIndex","arr","fn","i","length","forEach","unshift","styles","haStyleDialog","css","_t4","args","memoizeOne","keys","sort","a","b","_columnOrder$indexOf","_columnOrder$indexOf2","_hiddenColumns$includ","_hiddenColumns$includ2","orderA","orderB","hiddenA","Boolean","reduce","assign","attribute","HaButton","Button","variant","HaListItem","ListItemBase","renderRipple","noninteractive","super","document","dir","HaList","ListBase","HaSortable","updated","changedProperties","has","disabled","_destroySortable","_createSortable","disconnectedCallback","_shouldBeDestroy","setTimeout","connectedCallback","hasUpdated","createRenderRoot","noStyle","_sortable","container","children","Sortable","default","options","scroll","forceAutoScrollFallback","scrollSpeed","animation","onChoose","_handleChoose","onStart","_handleStart","onEnd","_handleEnd","_handleUpdate","onAdd","_handleAdd","onRemove","_handleRemove","draggableSelector","handleSelector","handle","invertSwap","group","destroy","rollback","evt","index","data","item","sortableData","placeholder","replaceWith","createComment","after","type","String"],"mappings":"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"}