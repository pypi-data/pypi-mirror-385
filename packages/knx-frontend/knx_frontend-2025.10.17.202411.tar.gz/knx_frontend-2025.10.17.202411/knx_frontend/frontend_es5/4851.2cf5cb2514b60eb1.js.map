{"version":3,"file":"4851.2cf5cb2514b60eb1.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-icon.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-state-icon.ts","webpack://knx-frontend/./node_modules/lit-html/src/directives/private-async-helpers.ts","webpack://knx-frontend/./node_modules/lit-html/src/directives/until.ts"],"sourcesContent":["import type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport type {\n  ComboBoxDataProviderCallback,\n  ComboBoxDataProviderParams,\n} from \"@vaadin/combo-box/vaadin-combo-box-light\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { customIcons } from \"../data/custom_icons\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../types\";\nimport \"./ha-combo-box\";\nimport \"./ha-icon\";\nimport \"./ha-combo-box-item\";\n\ninterface IconItem {\n  icon: string;\n  parts: Set<string>;\n  keywords: string[];\n}\n\ninterface RankedIcon {\n  icon: string;\n  rank: number;\n}\n\nlet ICONS: IconItem[] = [];\nlet ICONS_LOADED = false;\n\nconst loadIcons = async () => {\n  ICONS_LOADED = true;\n\n  const iconList = await import(\"../../build/mdi/iconList.json\");\n  ICONS = iconList.default.map((icon) => ({\n    icon: `mdi:${icon.name}`,\n    parts: new Set(icon.name.split(\"-\")),\n    keywords: icon.keywords,\n  }));\n\n  const customIconLoads: Promise<IconItem[]>[] = [];\n  Object.keys(customIcons).forEach((iconSet) => {\n    customIconLoads.push(loadCustomIconItems(iconSet));\n  });\n  (await Promise.all(customIconLoads)).forEach((customIconItems) => {\n    ICONS.push(...customIconItems);\n  });\n};\n\nconst loadCustomIconItems = async (iconsetPrefix: string) => {\n  try {\n    const getIconList = customIcons[iconsetPrefix].getIconList;\n    if (typeof getIconList !== \"function\") {\n      return [];\n    }\n    const iconList = await getIconList();\n    const customIconItems = iconList.map((icon) => ({\n      icon: `${iconsetPrefix}:${icon.name}`,\n      parts: new Set(icon.name.split(\"-\")),\n      keywords: icon.keywords ?? [],\n    }));\n    return customIconItems;\n  } catch (_err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Unable to load icon list for ${iconsetPrefix} iconset`);\n    return [];\n  }\n};\n\nconst rowRenderer: ComboBoxLitRenderer<IconItem | RankedIcon> = (item) => html`\n  <ha-combo-box-item type=\"button\">\n    <ha-icon .icon=${item.icon} slot=\"start\"></ha-icon>\n    ${item.icon}\n  </ha-combo-box-item>\n`;\n\n@customElement(\"ha-icon-picker\")\nexport class HaIconPicker extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @property({ type: Boolean }) public invalid = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        item-value-path=\"icon\"\n        item-label-path=\"icon\"\n        .value=${this._value}\n        allow-custom-value\n        .dataProvider=${ICONS_LOADED ? this._iconProvider : undefined}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .placeholder=${this.placeholder}\n        .errorMessage=${this.errorMessage}\n        .invalid=${this.invalid}\n        .renderer=${rowRenderer}\n        icon\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        ${this._value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this._value || this.placeholder} slot=\"icon\">\n              </ha-icon>\n            `\n          : html`<slot slot=\"icon\" name=\"fallback\"></slot>`}\n      </ha-combo-box>\n    `;\n  }\n\n  // Filter can take a significant chunk of frame (up to 3-5 ms)\n  private _filterIcons = memoizeOne(\n    (filter: string, iconItems: IconItem[] = ICONS) => {\n      if (!filter) {\n        return iconItems;\n      }\n\n      const filteredItems: RankedIcon[] = [];\n      const addIcon = (icon: string, rank: number) =>\n        filteredItems.push({ icon, rank });\n\n      // Filter and rank such that exact matches rank higher, and prefer icon name matches over keywords\n      for (const item of iconItems) {\n        if (item.parts.has(filter)) {\n          addIcon(item.icon, 1);\n        } else if (item.keywords.includes(filter)) {\n          addIcon(item.icon, 2);\n        } else if (item.icon.includes(filter)) {\n          addIcon(item.icon, 3);\n        } else if (item.keywords.some((word) => word.includes(filter))) {\n          addIcon(item.icon, 4);\n        }\n      }\n\n      // Allow preview for custom icon not in list\n      if (filteredItems.length === 0) {\n        addIcon(filter, 0);\n      }\n\n      return filteredItems.sort((itemA, itemB) => itemA.rank - itemB.rank);\n    }\n  );\n\n  private _iconProvider = (\n    params: ComboBoxDataProviderParams,\n    callback: ComboBoxDataProviderCallback<IconItem | RankedIcon>\n  ) => {\n    const filteredItems = this._filterIcons(params.filter.toLowerCase(), ICONS);\n    const iStart = params.page * params.pageSize;\n    const iEnd = iStart + params.pageSize;\n    callback(filteredItems.slice(iStart, iEnd), filteredItems.length);\n  };\n\n  private async _openedChanged(ev: ValueChangedEvent<boolean>) {\n    const opened = ev.detail.value;\n    if (opened && !ICONS_LOADED) {\n      await loadIcons();\n      this.requestUpdate();\n    }\n  }\n\n  private _valueChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    this._setValue(ev.detail.value);\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: this._value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  static styles = css`\n    *[slot=\"icon\"] {\n      color: var(--primary-text-color);\n      position: relative;\n      bottom: 2px;\n    }\n    *[slot=\"prefix\"] {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-picker\": HaIconPicker;\n  }\n}\n","import { html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { entityIcon } from \"../../data/icons\";\nimport type { IconSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-icon-picker\";\nimport \"../ha-state-icon\";\n\n@customElement(\"ha-selector-icon\")\nexport class HaIconSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: IconSelector;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    icon_entity?: string;\n  };\n\n  protected render() {\n    const iconEntity = this.context?.icon_entity;\n\n    const stateObj = iconEntity ? this.hass.states[iconEntity] : undefined;\n\n    const placeholder =\n      this.selector.icon?.placeholder ||\n      stateObj?.attributes.icon ||\n      (stateObj && until(entityIcon(this.hass, stateObj)));\n\n    return html`\n      <ha-icon-picker\n        .hass=${this.hass}\n        .label=${this.label}\n        .value=${this.value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        .helper=${this.helper}\n        .placeholder=${this.selector.icon?.placeholder ?? placeholder}\n        @value-changed=${this._valueChanged}\n      >\n        ${!placeholder && stateObj\n          ? html`\n              <ha-state-icon\n                slot=\"fallback\"\n                .hass=${this.hass}\n                .stateObj=${stateObj}\n              ></ha-state-icon>\n            `\n          : nothing}\n      </ha-icon-picker>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    fireEvent(this, \"value-changed\", { value: ev.detail.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-icon\": HaIconSelector;\n  }\n}\n","import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { until } from \"lit/directives/until\";\nimport { computeStateDomain } from \"../common/entity/compute_state_domain\";\nimport {\n  DEFAULT_DOMAIN_ICON,\n  entityIcon,\n  FALLBACK_DOMAIN_ICONS,\n} from \"../data/icons\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-state-icon\")\nexport class HaStateIcon extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @property({ attribute: false }) public stateValue?: string;\n\n  @property() public icon?: string;\n\n  protected render() {\n    const overrideIcon =\n      this.icon ||\n      (this.stateObj && this.hass?.entities[this.stateObj.entity_id]?.icon) ||\n      this.stateObj?.attributes.icon;\n    if (overrideIcon) {\n      return html`<ha-icon .icon=${overrideIcon}></ha-icon>`;\n    }\n    if (!this.stateObj) {\n      return nothing;\n    }\n    if (!this.hass) {\n      return this._renderFallback();\n    }\n    const icon = entityIcon(this.hass, this.stateObj, this.stateValue).then(\n      (icn) => {\n        if (icn) {\n          return html`<ha-icon .icon=${icn}></ha-icon>`;\n        }\n        return this._renderFallback();\n      }\n    );\n    return html`${until(icon)}`;\n  }\n\n  private _renderFallback() {\n    const domain = computeStateDomain(this.stateObj!);\n\n    return html`\n      <ha-svg-icon\n        .path=${FALLBACK_DOMAIN_ICONS[domain] || DEFAULT_DOMAIN_ICON}\n      ></ha-svg-icon>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-icon\": HaStateIcon;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>): unknown {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n"],"names":["ICONS","ICONS_LOADED","loadIcons","iconList","default","map","icon","name","parts","Set","split","keywords","customIconLoads","Object","keys","customIcons","forEach","iconSet","push","loadCustomIconItems","Promise","all","customIconItems","getIconList","iconsetPrefix","_icon$keywords","_err","console","warn","rowRenderer","item","html","_t","_","HaIconPicker","LitElement","render","_t2","hass","_value","_iconProvider","undefined","label","helper","disabled","required","placeholder","errorMessage","invalid","_openedChanged","_valueChanged","_t3","_t4","ev","detail","value","this","requestUpdate","stopPropagation","_setValue","fireEvent","bubbles","composed","args","_filterIcons","memoizeOne","filter","iconItems","filteredItems","addIcon","rank","has","includes","some","word","length","sort","itemA","itemB","params","callback","toLowerCase","iStart","page","pageSize","iEnd","slice","styles","css","_t5","attribute","type","Boolean","HaIconSelector","_this$context","_this$selector$icon","_this$selector$icon$p","_this$selector$icon2","iconEntity","context","icon_entity","stateObj","states","selector","attributes","until","entityIcon","nothing","reflect","HaStateIcon","_this$hass","_this$stateObj","overrideIcon","entities","entity_id","_renderFallback","stateValue","then","icn","domain","computeStateDomain","FALLBACK_DOMAIN_ICONS","DEFAULT_DOMAIN_ICON","s","disconnect","G","reconnect","t","deref","constructor","i","get","Y","pause","_this$Y","Z","resume","_this$Z","call","n","h","c","_s$find","find","update","e","_$Cbt","r","o","_$CK","_$CX","isConnected","disconnected","_$Cwt","resolve","indexOf","setValue","reconnected","arguments","m"],"mappings":"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"}