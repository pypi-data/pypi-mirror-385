{"version":3,"file":"2747.3181a2872d524aaf.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/decorators/storage.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/buttons/ha-progress-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/dialogs/tts-try/dialog-tts-try.ts"],"sourcesContent":["import type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport type { ReactiveElement } from \"lit\";\n\ntype Callback = (oldValue: any, newValue: any) => void;\n\ntype ReactiveStorageElement = ReactiveElement & {\n  __unbsubLocalStorage: UnsubscribeFunc | undefined;\n  __initialized: boolean;\n};\n\nclass StorageClass {\n  constructor(store = window.localStorage) {\n    this.storage = store;\n    if (this.storage !== window.localStorage) {\n      // storage events only work for localStorage\n      return;\n    }\n    window.addEventListener(\"storage\", (ev: StorageEvent) => {\n      if (ev.key && this.hasKey(ev.key)) {\n        this._storage[ev.key] = ev.newValue\n          ? JSON.parse(ev.newValue)\n          : ev.newValue;\n        if (this._listeners[ev.key]) {\n          this._listeners[ev.key].forEach((listener) =>\n            listener(\n              ev.oldValue ? JSON.parse(ev.oldValue) : ev.oldValue,\n              this._storage[ev.key!]\n            )\n          );\n        }\n      }\n    });\n  }\n\n  public storage: globalThis.Storage;\n\n  private _storage: Record<string, any> = {};\n\n  private _listeners: Record<string, Callback[]> = {};\n\n  public addFromStorage(storageKey: any): void {\n    if (!this._storage[storageKey]) {\n      const data = this.storage.getItem(storageKey);\n      if (data) {\n        this._storage[storageKey] = JSON.parse(data);\n      }\n    }\n  }\n\n  public subscribeChanges(\n    storageKey: string,\n    callback: Callback\n  ): UnsubscribeFunc {\n    if (this._listeners[storageKey]) {\n      this._listeners[storageKey].push(callback);\n    } else {\n      this._listeners[storageKey] = [callback];\n    }\n    return () => {\n      this.unsubscribeChanges(storageKey, callback);\n    };\n  }\n\n  public unsubscribeChanges(storageKey: string, callback: Callback) {\n    if (!(storageKey in this._listeners)) {\n      return;\n    }\n    const index = this._listeners[storageKey].indexOf(callback);\n    if (index !== -1) {\n      this._listeners[storageKey].splice(index, 1);\n    }\n  }\n\n  public hasKey(storageKey: string): any {\n    return storageKey in this._storage;\n  }\n\n  public getValue(storageKey: string): any {\n    return this._storage[storageKey];\n  }\n\n  public setValue(storageKey: string, value: any): any {\n    const oldValue = this._storage[storageKey];\n    this._storage[storageKey] = value;\n    try {\n      if (value === undefined) {\n        this.storage.removeItem(storageKey);\n      } else {\n        this.storage.setItem(storageKey, JSON.stringify(value));\n      }\n    } catch (_err: any) {\n      // Safari in private mode doesn't allow localstorage\n    } finally {\n      if (this._listeners[storageKey]) {\n        this._listeners[storageKey].forEach((listener) =>\n          listener(oldValue, value)\n        );\n      }\n    }\n  }\n}\n\nconst storages: Record<string, StorageClass> = {};\n\nexport function storage(options: {\n  key?: string;\n  storage?: \"localStorage\" | \"sessionStorage\";\n  subscribe?: boolean;\n  state?: boolean;\n  serializer?: (value: any) => any;\n  deserializer?: (value: any) => any;\n}) {\n  return <ElemClass extends ReactiveElement>(\n    proto: ElemClass,\n    propertyKey: string\n  ) => {\n    if (typeof propertyKey === \"object\") {\n      throw new Error(\"This decorator does not support this compilation type.\");\n    }\n\n    const storageName = options.storage || \"localStorage\";\n\n    let storageInstance: StorageClass;\n    if (storageName && storageName in storages) {\n      storageInstance = storages[storageName];\n    } else {\n      storageInstance = new StorageClass(window[storageName]);\n      storages[storageName] = storageInstance;\n    }\n\n    const storageKey = options.key || String(propertyKey);\n\n    storageInstance.addFromStorage(storageKey);\n\n    const subscribeChanges =\n      options.subscribe !== false\n        ? (el: ReactiveElement): UnsubscribeFunc =>\n            storageInstance.subscribeChanges(\n              storageKey!,\n              (oldValue, _newValue) => {\n                el.requestUpdate(propertyKey, oldValue);\n              }\n            )\n        : undefined;\n\n    const getValue = (): any =>\n      storageInstance.hasKey(storageKey!)\n        ? options.deserializer\n          ? options.deserializer(storageInstance.getValue(storageKey!))\n          : storageInstance.getValue(storageKey!)\n        : undefined;\n\n    const setValue = (el: ReactiveElement, value: any) => {\n      let oldValue: unknown | undefined;\n      if (options.state) {\n        oldValue = getValue();\n      }\n      storageInstance.setValue(\n        storageKey!,\n        options.serializer ? options.serializer(value) : value\n      );\n      if (options.state) {\n        el.requestUpdate(propertyKey, oldValue);\n      }\n    };\n\n    // @ts-ignore\n    const performUpdate = proto.performUpdate;\n    // @ts-ignore\n    proto.performUpdate = function () {\n      (this as unknown as ReactiveStorageElement).__initialized = true;\n      performUpdate.call(this);\n    };\n\n    if (options.subscribe) {\n      const connectedCallback = proto.connectedCallback;\n      const disconnectedCallback = proto.disconnectedCallback;\n\n      proto.connectedCallback = function () {\n        connectedCallback.call(this);\n        const el = this as unknown as ReactiveStorageElement;\n        if (!el.__unbsubLocalStorage) {\n          el.__unbsubLocalStorage = subscribeChanges?.(this);\n        }\n      };\n      proto.disconnectedCallback = function () {\n        disconnectedCallback.call(this);\n        const el = this as unknown as ReactiveStorageElement;\n        el.__unbsubLocalStorage?.();\n        el.__unbsubLocalStorage = undefined;\n      };\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(proto, propertyKey);\n    let newDescriptor: PropertyDescriptor;\n    if (descriptor === undefined) {\n      newDescriptor = {\n        get(this: ReactiveStorageElement) {\n          return getValue();\n        },\n        set(this: ReactiveStorageElement, value) {\n          // Don't set the initial value if we have a value in localStorage\n          if (this.__initialized || getValue() === undefined) {\n            setValue(this, value);\n          }\n        },\n        configurable: true,\n        enumerable: true,\n      };\n    } else {\n      const oldSetter = descriptor.set;\n      newDescriptor = {\n        ...descriptor,\n        get(this: ReactiveStorageElement) {\n          return getValue();\n        },\n        set(this: ReactiveStorageElement, value) {\n          // Don't set the initial value if we have a value in localStorage\n          if (this.__initialized || getValue() === undefined) {\n            setValue(this, value);\n          }\n          oldSetter?.call(this, value);\n        },\n      };\n    }\n    Object.defineProperty(proto, propertyKey, newDescriptor);\n  };\n}\n","import { mdiAlertOctagram, mdiCheckBold } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../ha-button\";\nimport type { Appearance } from \"../ha-button\";\nimport \"../ha-spinner\";\nimport \"../ha-svg-icon\";\n\n@customElement(\"ha-progress-button\")\nexport class HaProgressButton extends LitElement {\n  @property() public label?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean, reflect: true }) public progress = false;\n\n  @property() appearance: Appearance = \"accent\";\n\n  @property({ attribute: false }) public iconPath?: string;\n\n  @property() variant: \"brand\" | \"danger\" | \"neutral\" | \"warning\" | \"success\" =\n    \"brand\";\n\n  @state() private _result?: \"success\" | \"error\";\n\n  public render(): TemplateResult {\n    const appearance =\n      this.progress || this._result ? \"accent\" : this.appearance;\n\n    return html`\n      <ha-button\n        .appearance=${appearance}\n        .disabled=${this.disabled}\n        .loading=${this.progress}\n        .variant=${this._result === \"success\"\n          ? \"success\"\n          : this._result === \"error\"\n            ? \"danger\"\n            : this.variant}\n        class=${classMap({\n          result: !!this._result,\n          success: this._result === \"success\",\n          error: this._result === \"error\",\n        })}\n      >\n        ${this.iconPath\n          ? html`<ha-svg-icon\n              .path=${this.iconPath}\n              slot=\"start\"\n            ></ha-svg-icon>`\n          : nothing}\n\n        <slot>${this.label}</slot>\n      </ha-button>\n      ${!this._result\n        ? nothing\n        : html`\n            <div class=\"progress\">\n              ${this._result === \"success\"\n                ? html`<ha-svg-icon .path=${mdiCheckBold}></ha-svg-icon>`\n                : this._result === \"error\"\n                  ? html`<ha-svg-icon .path=${mdiAlertOctagram}></ha-svg-icon>`\n                  : nothing}\n            </div>\n          `}\n    `;\n  }\n\n  public actionSuccess(): void {\n    this._setResult(\"success\");\n  }\n\n  public actionError(): void {\n    this._setResult(\"error\");\n  }\n\n  private _setResult(result: \"success\" | \"error\"): void {\n    this._result = result;\n    setTimeout(() => {\n      this._result = undefined;\n    }, 2000);\n  }\n\n  static styles = css`\n    :host {\n      outline: none;\n      display: inline-block;\n      position: relative;\n    }\n\n    :host([progress]) {\n      pointer-events: none;\n    }\n\n    .progress {\n      bottom: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n\n    ha-button {\n      width: 100%;\n    }\n\n    ha-button.result::part(start),\n    ha-button.result::part(end),\n    ha-button.result::part(label),\n    ha-button.result::part(caret),\n    ha-button.result::part(spinner) {\n      visibility: hidden;\n    }\n\n    ha-svg-icon {\n      color: var(--white-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-progress-button\": HaProgressButton;\n  }\n}\n","import { mdiPlayCircleOutline } from \"@mdi/js\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { storage } from \"../../common/decorators/storage\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../../components/buttons/ha-progress-button\";\nimport { createCloseHeading } from \"../../components/ha-dialog\";\nimport \"../../components/ha-textarea\";\nimport type { HaTextArea } from \"../../components/ha-textarea\";\nimport { convertTextToSpeech } from \"../../data/tts\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { showAlertDialog } from \"../generic/show-dialog-box\";\nimport type { TTSTryDialogParams } from \"./show-dialog-tts-try\";\n\n@customElement(\"dialog-tts-try\")\nexport class TTSTryDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _loadingExample = false;\n\n  @state() private _params?: TTSTryDialogParams;\n\n  @state() private _valid = false;\n\n  @query(\"#message\") private _messageInput?: HaTextArea;\n\n  @storage({\n    key: \"ttsTryMessages\",\n    state: false,\n    subscribe: false,\n  })\n  private _messages?: Record<string, string>;\n\n  public showDialog(params: TTSTryDialogParams) {\n    this._params = params;\n    this._valid = Boolean(this._defaultMessage);\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  private get _defaultMessage() {\n    const language = this._params!.language?.substring(0, 2);\n    const userLanguage = this.hass.locale.language.substring(0, 2);\n    // Load previous message in the right language\n    if (language && this._messages?.[language]) {\n      return this._messages[language];\n    }\n    // Only display example message if it's interface language\n    if (language === userLanguage) {\n      return this.hass.localize(\"ui.dialogs.tts-try.message_example\");\n    }\n    return \"\";\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(\"ui.dialogs.tts-try.header\")\n        )}\n      >\n        <ha-textarea\n          autogrow\n          id=\"message\"\n          .label=${this.hass.localize(\"ui.dialogs.tts-try.message\")}\n          .placeholder=${this.hass.localize(\n            \"ui.dialogs.tts-try.message_placeholder\"\n          )}\n          .value=${this._defaultMessage}\n          @input=${this._inputChanged}\n          ?dialogInitialFocus=${!this._defaultMessage}\n        >\n        </ha-textarea>\n\n        <ha-progress-button\n          .progress=${this._loadingExample}\n          ?dialogInitialFocus=${Boolean(this._defaultMessage)}\n          slot=\"primaryAction\"\n          @click=${this._playExample}\n          .disabled=${!this._valid}\n          .iconPath=${mdiPlayCircleOutline}\n        >\n          ${this.hass.localize(\"ui.dialogs.tts-try.play\")}\n        </ha-progress-button>\n      </ha-dialog>\n    `;\n  }\n\n  private async _inputChanged() {\n    this._valid = Boolean(this._messageInput?.value);\n  }\n\n  private async _playExample() {\n    const message = this._messageInput?.value;\n    if (!message) {\n      return;\n    }\n\n    const platform = this._params!.engine;\n    const language = this._params!.language;\n    const voice = this._params!.voice;\n\n    if (language) {\n      this._messages = {\n        ...this._messages,\n        [language.substring(0, 2)]: message,\n      };\n    }\n\n    this._loadingExample = true;\n\n    const audio = new Audio();\n    audio.play();\n\n    let url;\n    try {\n      const result = await convertTextToSpeech(this.hass, {\n        platform,\n        message,\n        language,\n        options: { voice },\n      });\n      url = result.path;\n    } catch (err: any) {\n      this._loadingExample = false;\n      showAlertDialog(this, {\n        text: `Unable to load example. ${err.error || err.body || err}`,\n        warning: true,\n      });\n      return;\n    }\n    audio.src = url;\n    audio.addEventListener(\"canplaythrough\", () => audio.play());\n    audio.addEventListener(\"playing\", () => {\n      this._loadingExample = false;\n    });\n    audio.addEventListener(\"error\", () => {\n      showAlertDialog(this, { title: \"Error playing audio.\" });\n      this._loadingExample = false;\n    });\n  }\n\n  static styles = [\n    haStyleDialog,\n    css`\n      ha-dialog {\n        --mdc-dialog-max-width: 500px;\n      }\n      ha-textarea,\n      ha-select {\n        width: 100%;\n      }\n      ha-select {\n        margin-top: 8px;\n      }\n      .loading {\n        height: 36px;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-tts-try\": TTSTryDialog;\n  }\n}\n"],"names":["StorageClass","addFromStorage","storageKey","this","_storage","data","storage","getItem","JSON","parse","subscribeChanges","callback","_listeners","push","unsubscribeChanges","index","indexOf","splice","hasKey","getValue","setValue","value","oldValue","undefined","removeItem","setItem","stringify","_err","forEach","listener","constructor","store","window","localStorage","addEventListener","ev","key","newValue","storages","options","proto","propertyKey","Error","storageName","storageInstance","String","subscribe","el","_newValue","requestUpdate","deserializer","state","serializer","performUpdate","__initialized","call","connectedCallback","disconnectedCallback","__unbsubLocalStorage","_el$__unbsubLocalStor","descriptor","Object","getOwnPropertyDescriptor","newDescriptor","get","set","configurable","enumerable","oldSetter","assign","defineProperty","HaProgressButton","LitElement","render","appearance","progress","_result","html","_t","_","disabled","variant","classMap","result","success","error","iconPath","_t2","nothing","label","_t3","_t4","mdiCheckBold","_t5","mdiAlertOctagram","actionSuccess","_setResult","actionError","setTimeout","args","styles","css","_t6","type","Boolean","reflect","attribute","TTSTryDialog","showDialog","params","_params","_valid","_defaultMessage","closeDialog","fireEvent","dialog","localName","_this$_params$languag","_this$_messages","language","substring","userLanguage","hass","locale","_messages","localize","createCloseHeading","_inputChanged","_loadingExample","_playExample","mdiPlayCircleOutline","_this$_messageInput","_messageInput","_this$_messageInput2","message","platform","engine","voice","audio","Audio","url","play","convertTextToSpeech","path","err","showAlertDialog","text","body","warning","src","title","haStyleDialog"],"mappings":"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"}