{"version":3,"file":"1092.92af2e56a7c4c0cd.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/translations/blank_before_percent.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-file-upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-picture-upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/media-player/show-media-browser-dialog.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/image_upload.ts","webpack://knx-frontend/./homeassistant-frontend/src/dialogs/image-cropper-dialog/show-image-cropper-dialog.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/bytes-to-string.ts"],"sourcesContent":["import type { FrontendLocaleData } from \"../../data/translation\";\n\n// Logic based on https://en.wikipedia.org/wiki/Percent_sign#Form_and_spacing\nexport const blankBeforePercent = (\n  localeOptions: FrontendLocaleData\n): string => {\n  switch (localeOptions.language) {\n    case \"cs\":\n    case \"de\":\n    case \"fi\":\n    case \"fr\":\n    case \"sk\":\n    case \"sv\":\n      return \" \";\n    default:\n      return \"\";\n  }\n};\n","import \"@material/mwc-linear-progress/mwc-linear-progress\";\nimport { mdiDelete, mdiFileUpload } from \"@mdi/js\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-icon-button\";\nimport { blankBeforePercent } from \"../common/translations/blank_before_percent\";\nimport { ensureArray } from \"../common/array/ensure-array\";\nimport { bytesToString } from \"../util/bytes-to-string\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"file-picked\": { files: File[] };\n    \"files-cleared\": undefined;\n  }\n}\n\n@customElement(\"ha-file-upload\")\nexport class HaFileUpload extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property() public accept!: string;\n\n  @property() public icon?: string;\n\n  @property() public label?: string;\n\n  @property() public secondary?: string;\n\n  @property({ attribute: \"uploading-label\" }) public uploadingLabel?: string;\n\n  @property({ attribute: \"delete-label\" }) public deleteLabel?: string;\n\n  @property() public supports?: string;\n\n  @property({ type: Object }) public value?: File | File[] | FileList | string;\n\n  @property({ type: Boolean }) public multiple = false;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public uploading = false;\n\n  @property({ type: Number }) public progress?: number;\n\n  @property({ type: Boolean, attribute: \"auto-open-file-dialog\" })\n  public autoOpenFileDialog = false;\n\n  @state() private _drag = false;\n\n  @query(\"#input\") private _input?: HTMLInputElement;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    if (this.autoOpenFileDialog) {\n      this._openFilePicker();\n    }\n  }\n\n  private get _name() {\n    if (this.value === undefined) {\n      return \"\";\n    }\n    if (typeof this.value === \"string\") {\n      return this.value;\n    }\n    const files =\n      this.value instanceof FileList\n        ? Array.from(this.value)\n        : ensureArray(this.value);\n\n    return files.map((file) => file.name).join(\", \");\n  }\n\n  public render(): TemplateResult {\n    const localize = this.localize || this.hass!.localize;\n    return html`\n      ${this.uploading\n        ? html`<div class=\"container\">\n            <div class=\"uploading\">\n              <span class=\"header\"\n                >${this.uploadingLabel ||\n                (this.value\n                  ? localize(\"ui.components.file-upload.uploading_name\", {\n                      name: this._name,\n                    })\n                  : localize(\"ui.components.file-upload.uploading\"))}</span\n              >\n              ${this.progress\n                ? html`<div class=\"progress\">\n                    ${this.progress}${this.hass &&\n                    blankBeforePercent(this.hass!.locale)}%\n                  </div>`\n                : nothing}\n            </div>\n            <mwc-linear-progress\n              .indeterminate=${!this.progress}\n              .progress=${this.progress ? this.progress / 100 : undefined}\n            ></mwc-linear-progress>\n          </div>`\n        : html`<label\n            for=${this.value ? \"\" : \"input\"}\n            class=\"container ${classMap({\n              dragged: this._drag,\n              multiple: this.multiple,\n              value: Boolean(this.value),\n            })}\"\n            @drop=${this._handleDrop}\n            @dragenter=${this._handleDragStart}\n            @dragover=${this._handleDragStart}\n            @dragleave=${this._handleDragEnd}\n            @dragend=${this._handleDragEnd}\n            >${!this.value\n              ? html`<ha-button\n                    size=\"small\"\n                    appearance=\"filled\"\n                    @click=${this._openFilePicker}\n                  >\n                    <ha-svg-icon\n                      slot=\"start\"\n                      .path=${this.icon || mdiFileUpload}\n                    ></ha-svg-icon>\n                    ${this.label || localize(\"ui.components.file-upload.label\")}\n                  </ha-button>\n                  <span class=\"secondary\"\n                    >${this.secondary ||\n                    localize(\"ui.components.file-upload.secondary\")}</span\n                  >\n                  <span class=\"supports\">${this.supports}</span>`\n              : typeof this.value === \"string\"\n                ? html`<div class=\"row\">\n                    <div class=\"value\" @click=${this._openFilePicker}>\n                      <ha-svg-icon\n                        .path=${this.icon || mdiFileUpload}\n                      ></ha-svg-icon>\n                      ${this.value}\n                    </div>\n                    <ha-icon-button\n                      @click=${this._clearValue}\n                      .label=${this.deleteLabel || localize(\"ui.common.delete\")}\n                      .path=${mdiDelete}\n                    ></ha-icon-button>\n                  </div>`\n                : (this.value instanceof FileList\n                    ? Array.from(this.value)\n                    : ensureArray(this.value)\n                  ).map(\n                    (file) =>\n                      html`<div class=\"row\">\n                        <div class=\"value\" @click=${this._openFilePicker}>\n                          <ha-svg-icon\n                            .path=${this.icon || mdiFileUpload}\n                          ></ha-svg-icon>\n                          ${file.name} - ${bytesToString(file.size)}\n                        </div>\n                        <ha-icon-button\n                          @click=${this._clearValue}\n                          .label=${this.deleteLabel ||\n                          localize(\"ui.common.delete\")}\n                          .path=${mdiDelete}\n                        ></ha-icon-button>\n                      </div>`\n                  )}\n            <input\n              id=\"input\"\n              type=\"file\"\n              class=\"file\"\n              .accept=${this.accept}\n              .multiple=${this.multiple}\n              @change=${this._handleFilePicked}\n          /></label>`}\n    `;\n  }\n\n  private _openFilePicker() {\n    this._input?.click();\n  }\n\n  private _handleDrop(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    if (ev.dataTransfer?.files) {\n      fireEvent(this, \"file-picked\", {\n        files:\n          this.multiple || ev.dataTransfer.files.length === 1\n            ? Array.from(ev.dataTransfer.files)\n            : [ev.dataTransfer.files[0]],\n      });\n    }\n    this._drag = false;\n  }\n\n  private _handleDragStart(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = true;\n  }\n\n  private _handleDragEnd(ev: DragEvent) {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this._drag = false;\n  }\n\n  private _handleFilePicked(ev) {\n    if (ev.target.files.length === 0) {\n      return;\n    }\n    this.value = ev.target.files;\n    fireEvent(this, \"file-picked\", { files: ev.target.files });\n  }\n\n  private _clearValue(ev: Event) {\n    ev.preventDefault();\n    this._input!.value = \"\";\n    this.value = undefined;\n    fireEvent(this, \"change\");\n    fireEvent(this, \"files-cleared\");\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      height: 240px;\n    }\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--disabled-text-color);\n    }\n    .container {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      border: solid 1px\n        var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n      border-radius: var(--mdc-shape-small, 4px);\n      height: 100%;\n    }\n    .row {\n      display: flex;\n      align-items: center;\n    }\n    label.container {\n      border: dashed 1px\n        var(--mdc-text-field-idle-line-color, rgba(0, 0, 0, 0.42));\n      cursor: pointer;\n    }\n    .container .uploading {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      align-items: flex-start;\n      padding: 0 32px;\n      box-sizing: border-box;\n    }\n    :host([disabled]) .container {\n      border-color: var(--disabled-color);\n    }\n    label:hover,\n    label.dragged {\n      border-style: solid;\n    }\n    label.dragged {\n      border-color: var(--primary-color);\n    }\n    .dragged:before {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: var(--primary-color);\n      content: \"\";\n      opacity: var(--dark-divider-opacity);\n      pointer-events: none;\n      border-radius: var(--mdc-shape-small, 4px);\n    }\n    label.value {\n      cursor: default;\n    }\n    label.value.multiple {\n      justify-content: unset;\n      overflow: auto;\n    }\n    .highlight {\n      color: var(--primary-color);\n    }\n    ha-button {\n      margin-bottom: 8px;\n    }\n    .supports {\n      color: var(--secondary-text-color);\n      font-size: var(--ha-font-size-s);\n    }\n    :host([disabled]) .secondary {\n      color: var(--disabled-text-color);\n    }\n    input.file {\n      display: none;\n    }\n    .value {\n      cursor: pointer;\n    }\n    .value ha-svg-icon {\n      margin-right: 8px;\n      margin-inline-end: 8px;\n      margin-inline-start: initial;\n    }\n    ha-button {\n      --mdc-button-outline-color: var(--primary-color);\n      --mdc-icon-button-size: 24px;\n    }\n    mwc-linear-progress {\n      width: 100%;\n      padding: 8px 32px;\n      box-sizing: border-box;\n    }\n    .header {\n      font-weight: var(--ha-font-weight-medium);\n    }\n    .progress {\n      color: var(--secondary-text-color);\n    }\n    button.link {\n      background: none;\n      border: none;\n      padding: 0;\n      font-size: var(--ha-font-size-m);\n      color: var(--primary-color);\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-file-upload\": HaFileUpload;\n  }\n}\n","import { mdiImagePlus } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport type { MediaPickedEvent } from \"../data/media-player\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { haStyle } from \"../resources/styles\";\nimport {\n  MEDIA_PREFIX,\n  getIdFromUrl,\n  createImage,\n  generateImageThumbnailUrl,\n  getImageData,\n} from \"../data/image_upload\";\nimport { showAlertDialog } from \"../dialogs/generic/show-dialog-box\";\nimport type { CropOptions } from \"../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport { showImageCropperDialog } from \"../dialogs/image-cropper-dialog/show-image-cropper-dialog\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-button\";\nimport \"./ha-file-upload\";\nimport { showMediaBrowserDialog } from \"./media-player/show-media-browser-dialog\";\n\n@customElement(\"ha-picture-upload\")\nexport class HaPictureUpload extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public value: string | null = null;\n\n  @property() public label?: string;\n\n  @property() public secondary?: string;\n\n  @property() public supports?: string;\n\n  @property({ attribute: false }) public currentImageAltText?: string;\n\n  @property({ type: Boolean }) public crop = false;\n\n  @property({ type: Boolean, attribute: \"select-media\" }) public selectMedia =\n    false;\n\n  @property({ attribute: false }) public cropOptions?: CropOptions;\n\n  @property({ type: Boolean }) public original = false;\n\n  @property({ type: Number }) public size = 512;\n\n  @state() private _uploading = false;\n\n  public render(): TemplateResult {\n    if (!this.value) {\n      const secondary =\n        this.secondary ||\n        (this.selectMedia\n          ? html`${this.hass.localize(\n              \"ui.components.picture-upload.secondary\",\n              {\n                select_media: html`<button\n                  class=\"link\"\n                  @click=${this._chooseMedia}\n                >\n                  ${this.hass.localize(\n                    \"ui.components.picture-upload.select_media\"\n                  )}\n                </button>`,\n              }\n            )}`\n          : undefined);\n\n      return html`\n        <ha-file-upload\n          .hass=${this.hass}\n          .icon=${mdiImagePlus}\n          .label=${this.label ||\n          this.hass.localize(\"ui.components.picture-upload.label\")}\n          .secondary=${secondary}\n          .supports=${this.supports ||\n          this.hass.localize(\"ui.components.picture-upload.supported_formats\")}\n          .uploading=${this._uploading}\n          @file-picked=${this._handleFilePicked}\n          @change=${this._handleFileCleared}\n          accept=\"image/png, image/jpeg, image/gif\"\n        ></ha-file-upload>\n      `;\n    }\n    return html`<div class=\"center-vertical\">\n      <div class=\"value\">\n        <img\n          .src=${this.value}\n          alt=${this.currentImageAltText ||\n          this.hass.localize(\"ui.components.picture-upload.current_image_alt\")}\n        />\n        <div>\n          <ha-button\n            appearance=\"plain\"\n            size=\"small\"\n            variant=\"danger\"\n            @click=${this._handleChangeClick}\n          >\n            ${this.hass.localize(\"ui.components.picture-upload.clear_picture\")}\n          </ha-button>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  private _handleChangeClick() {\n    this.value = null;\n    fireEvent(this, \"change\");\n  }\n\n  private async _handleFilePicked(ev) {\n    const file = ev.detail.files[0];\n    if (this.crop) {\n      this._cropFile(file);\n    } else {\n      this._uploadFile(file);\n    }\n  }\n\n  private async _handleFileCleared() {\n    this.value = null;\n  }\n\n  private async _cropFile(file: File, mediaId?: string) {\n    if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.picture-upload.unsupported_format\"\n        ),\n      });\n      return;\n    }\n    showImageCropperDialog(this, {\n      file,\n      options: this.cropOptions || {\n        round: false,\n        aspectRatio: NaN,\n      },\n      croppedCallback: (croppedFile) => {\n        if (mediaId && croppedFile === file) {\n          this.value = generateImageThumbnailUrl(\n            mediaId,\n            this.size,\n            this.original\n          );\n          fireEvent(this, \"change\");\n        } else {\n          this._uploadFile(croppedFile);\n        }\n      },\n    });\n  }\n\n  private async _uploadFile(file: File) {\n    if (![\"image/png\", \"image/jpeg\", \"image/gif\"].includes(file.type)) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.components.picture-upload.unsupported_format\"\n        ),\n      });\n      return;\n    }\n    this._uploading = true;\n    try {\n      const media = await createImage(this.hass, file);\n      this.value = generateImageThumbnailUrl(\n        media.id,\n        this.size,\n        this.original\n      );\n      fireEvent(this, \"change\");\n    } catch (err: any) {\n      showAlertDialog(this, {\n        text: err.toString(),\n      });\n    } finally {\n      this._uploading = false;\n    }\n  }\n\n  private _chooseMedia = () => {\n    showMediaBrowserDialog(this, {\n      action: \"pick\",\n      entityId: \"browser\",\n      navigateIds: [\n        { media_content_id: undefined, media_content_type: undefined },\n        {\n          media_content_id: MEDIA_PREFIX,\n          media_content_type: \"app\",\n        },\n      ],\n      minimumNavigateLevel: 2,\n      mediaPickedCallback: async (pickedMedia: MediaPickedEvent) => {\n        const mediaId = getIdFromUrl(pickedMedia.item.media_content_id);\n        if (mediaId) {\n          if (this.crop) {\n            const url = generateImageThumbnailUrl(mediaId, undefined, true);\n            let data;\n            try {\n              data = await getImageData(this.hass, url);\n            } catch (err: any) {\n              showAlertDialog(this, {\n                text: err.toString(),\n              });\n              return;\n            }\n            const metadata = {\n              type: pickedMedia.item.media_content_type,\n            };\n            const file = new File([data], pickedMedia.item.title, metadata);\n            this._cropFile(file, mediaId);\n          } else {\n            this.value = generateImageThumbnailUrl(\n              mediaId,\n              this.size,\n              this.original\n            );\n            fireEvent(this, \"change\");\n          }\n        }\n      },\n    });\n  };\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: block;\n          height: 240px;\n        }\n        ha-file-upload {\n          height: 100%;\n        }\n        .center-vertical {\n          display: flex;\n          align-items: center;\n          height: 100%;\n        }\n        .value {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        img {\n          max-width: 100%;\n          max-height: 200px;\n          margin-bottom: 4px;\n          border-radius: var(--file-upload-image-border-radius);\n          transition: opacity 0.3s;\n          opacity: var(--picture-opacity, 1);\n        }\n        img:hover {\n          opacity: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-picture-upload\": HaPictureUpload;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport type {\n  MediaPickedEvent,\n  MediaPlayerBrowseAction,\n} from \"../../data/media-player\";\nimport type { MediaPlayerItemId } from \"./ha-media-player-browse\";\n\nexport interface MediaPlayerBrowseDialogParams {\n  action: MediaPlayerBrowseAction;\n  entityId?: string;\n  mediaPickedCallback: (pickedMedia: MediaPickedEvent) => void;\n  navigateIds?: MediaPlayerItemId[];\n  minimumNavigateLevel?: number;\n  accept?: string[];\n  defaultId?: string;\n  defaultType?: string;\n}\n\nexport const showMediaBrowserDialog = (\n  element: HTMLElement,\n  dialogParams: MediaPlayerBrowseDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-media-player-browse\",\n    dialogImport: () => import(\"./dialog-media-player-browse\"),\n    dialogParams,\n  });\n};\n","import type { HomeAssistant } from \"../types\";\n\ninterface Image {\n  filesize: number;\n  name: string;\n  uploaded_at: string; // isoformat date\n  content_type: string;\n  id: string;\n}\n\nexport const URL_PREFIX = \"/api/image/serve/\";\nexport const MEDIA_PREFIX = \"media-source://image_upload\";\n\nexport interface ImageMutableParams {\n  name: string;\n}\n\nexport const getIdFromUrl = (url: string): string | undefined => {\n  let id;\n  if (url.startsWith(URL_PREFIX)) {\n    id = url.substring(URL_PREFIX.length);\n    const idx = id.indexOf(\"/\");\n    if (idx >= 0) {\n      id = id.substring(0, idx);\n    }\n  } else if (url.startsWith(MEDIA_PREFIX)) {\n    id = url.substring(MEDIA_PREFIX.length + 1);\n  }\n  return id;\n};\n\nexport const generateImageThumbnailUrl = (\n  mediaId: string,\n  size?: number,\n  original = false\n) => {\n  if (!original && !size) {\n    throw new Error(\"Size must be provided if original is false\");\n  }\n\n  return original\n    ? `/api/image/serve/${mediaId}/original`\n    : `/api/image/serve/${mediaId}/${size}x${size}`;\n};\n\nexport const fetchImages = (hass: HomeAssistant) =>\n  hass.callWS<Image[]>({ type: \"image/list\" });\n\nexport const createImage = async (\n  hass: HomeAssistant,\n  file: File\n): Promise<Image> => {\n  const fd = new FormData();\n  fd.append(\"file\", file);\n  const resp = await hass.fetchWithAuth(\"/api/image/upload\", {\n    method: \"POST\",\n    body: fd,\n  });\n  if (resp.status === 413) {\n    throw new Error(`Uploaded image is too large (${file.name})`);\n  } else if (resp.status !== 200) {\n    throw new Error(\"Unknown error\");\n  }\n  return resp.json();\n};\n\nexport const updateImage = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<ImageMutableParams>\n) =>\n  hass.callWS<Image>({\n    type: \"image/update\",\n    media_id: id,\n    ...updates,\n  });\n\nexport const deleteImage = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"image/delete\",\n    image_id: id,\n  });\n\nexport const getImageData = async (hass: HomeAssistant, url: string) => {\n  const response = await fetch(hass.hassUrl(url));\n\n  if (!response.ok) {\n    throw new Error(\n      `Failed to fetch image: ${\n        response.statusText ? response.statusText : response.status\n      }`\n    );\n  }\n\n  return response.blob();\n};\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface CropOptions {\n  round: boolean;\n  type?: \"image/jpeg\" | \"image/png\";\n  quality?: number;\n  aspectRatio?: number;\n}\n\nexport interface HaImageCropperDialogParams {\n  file: File;\n  options: CropOptions;\n  croppedCallback: (file: File) => void;\n}\n\nconst loadImageCropperDialog = () => import(\"./image-cropper-dialog\");\n\nexport const showImageCropperDialog = (\n  element: HTMLElement,\n  dialogParams: HaImageCropperDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"image-cropper-dialog\",\n    dialogImport: loadImageCropperDialog,\n    dialogParams,\n  });\n};\n","export const bytesToString = (value = 0, decimals = 2): string => {\n  if (value === 0) {\n    return \"0 Bytes\";\n  }\n  const k = 1024;\n  decimals = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  const i = Math.floor(Math.log(value) / Math.log(k));\n  return `${parseFloat((value / k ** i).toFixed(decimals))} ${sizes[i]}`;\n};\n"],"names":["blankBeforePercent","localeOptions","language","mdiDelete","mdiFileUpload","HaFileUpload","LitElement","firstUpdated","changedProperties","super","this","autoOpenFileDialog","_openFilePicker","_name","undefined","value","FileList","Array","from","ensureArray","map","file","name","join","render","localize","hass","html","_t","_","uploading","_t2","uploadingLabel","progress","_t3","locale","nothing","_t4","classMap","dragged","_drag","multiple","Boolean","_handleDrop","_handleDragStart","_handleDragEnd","_t6","icon","_clearValue","deleteLabel","_t7","bytesToString","size","_t5","label","secondary","supports","accept","_handleFilePicked","_this$_input","_input","click","ev","_ev$dataTransfer","preventDefault","stopPropagation","dataTransfer","files","fireEvent","length","target","args","disabled","styles","css","_t8","attribute","type","Object","reflect","Number","HaPictureUpload","selectMedia","select_media","_chooseMedia","mdiImagePlus","_uploading","_handleFileCleared","currentImageAltText","_handleChangeClick","detail","crop","_cropFile","_uploadFile","mediaId","includes","showImageCropperDialog","options","cropOptions","round","aspectRatio","NaN","croppedCallback","croppedFile","generateImageThumbnailUrl","original","showAlertDialog","text","media","createImage","id","err","toString","haStyle","showMediaBrowserDialog","action","entityId","navigateIds","media_content_id","media_content_type","MEDIA_PREFIX","minimumNavigateLevel","mediaPickedCallback","getIdFromUrl","pickedMedia","item","url","data","getImageData","metadata","File","title","element","dialogParams","dialogTag","dialogImport","URL_PREFIX","startsWith","substring","idx","indexOf","Error","fd","FormData","append","resp","fetchWithAuth","method","body","status","json","deleteImage","callWS","image_id","response","fetch","hassUrl","ok","statusText","blob","loadImageCropperDialog","decimals","i","Math","floor","log","parseFloat","toFixed"],"mappings":"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"}