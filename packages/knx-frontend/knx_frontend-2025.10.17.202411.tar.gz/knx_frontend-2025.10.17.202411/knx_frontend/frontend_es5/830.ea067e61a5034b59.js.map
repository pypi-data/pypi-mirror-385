{"version":3,"file":"830.ea067e61a5034b59.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/seconds_to_duration.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/timer.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/duration_to_seconds.ts","webpack://knx-frontend/./homeassistant-frontend/src/state-display/ha-timer-remaining-time.ts"],"sourcesContent":["const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport default function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","import type {\n  HassEntity,\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\nimport durationToSeconds from \"../common/datetime/duration_to_seconds\";\nimport secondsToDuration from \"../common/datetime/seconds_to_duration\";\nimport type { HomeAssistant } from \"../types\";\n\nexport type TimerEntity = HassEntityBase & {\n  attributes: HassEntityAttributeBase & {\n    duration: string;\n    remaining: string;\n    restore: boolean;\n  };\n};\n\nexport interface DurationDict {\n  hours?: number | string;\n  minutes?: number | string;\n  seconds?: number | string;\n}\n\nexport interface Timer {\n  id: string;\n  name: string;\n  icon?: string;\n  duration?: string | number | DurationDict;\n  restore?: boolean;\n}\n\nexport interface TimerMutableParams {\n  name: string;\n  icon: string;\n  duration: string | number | DurationDict;\n  restore: boolean;\n}\n\nexport const fetchTimer = (hass: HomeAssistant) =>\n  hass.callWS<Timer[]>({ type: \"timer/list\" });\n\nexport const createTimer = (hass: HomeAssistant, values: TimerMutableParams) =>\n  hass.callWS<Timer>({\n    type: \"timer/create\",\n    ...values,\n  });\n\nexport const updateTimer = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<TimerMutableParams>\n) =>\n  hass.callWS<Timer>({\n    type: \"timer/update\",\n    timer_id: id,\n    ...updates,\n  });\n\nexport const deleteTimer = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"timer/delete\",\n    timer_id: id,\n  });\n\nexport const timerTimeRemaining = (\n  stateObj: HassEntity\n): undefined | number => {\n  if (!stateObj.attributes.remaining) {\n    return undefined;\n  }\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const finishes = new Date(stateObj.attributes.finishes_at).getTime();\n    timeRemaining = Math.max((finishes - now) / 1000, 0);\n  }\n\n  return timeRemaining;\n};\n\nexport const computeDisplayTimer = (\n  hass: HomeAssistant,\n  stateObj: HassEntity,\n  timeRemaining?: number\n): string | null => {\n  if (!stateObj) {\n    return null;\n  }\n\n  if (stateObj.state === \"idle\" || timeRemaining === 0) {\n    return hass.formatEntityState(stateObj);\n  }\n\n  let display = secondsToDuration(timeRemaining || 0) || \"0\";\n\n  if (stateObj.state === \"paused\") {\n    display = `${display} (${hass.formatEntityState(stateObj)})`;\n  }\n\n  return display;\n};\n","export default function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import type { HassEntity } from \"home-assistant-js-websocket\";\nimport type { PropertyValues } from \"lit\";\nimport { ReactiveElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { computeDisplayTimer, timerTimeRemaining } from \"../data/timer\";\nimport type { HomeAssistant } from \"../types\";\n\n@customElement(\"ha-timer-remaining-time\")\nclass HaTimerRemainingTime extends ReactiveElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj!: HassEntity;\n\n  @state() private timeRemaining?: number;\n\n  private _updateRemaining: any;\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  protected update(changedProps: PropertyValues) {\n    super.update(changedProps);\n    this.innerHTML =\n      computeDisplayTimer(this.hass, this.stateObj, this.timeRemaining) ?? \"-\";\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.stateObj) {\n      this._startInterval(this.stateObj);\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._clearInterval();\n  }\n\n  protected willUpdate(changedProp: PropertyValues): void {\n    super.willUpdate(changedProp);\n    if (changedProp.has(\"stateObj\")) {\n      this._startInterval(this.stateObj);\n    }\n  }\n\n  private _clearInterval() {\n    if (this._updateRemaining) {\n      clearInterval(this._updateRemaining);\n      this._updateRemaining = null;\n    }\n  }\n\n  private _startInterval(stateObj: HassEntity) {\n    this._clearInterval();\n    this._calculateRemaining(stateObj);\n\n    if (stateObj.state === \"active\") {\n      this._updateRemaining = setInterval(\n        () => this._calculateRemaining(this.stateObj),\n        1000\n      );\n    }\n  }\n\n  private _calculateRemaining(stateObj: HassEntity) {\n    this.timeRemaining = timerTimeRemaining(stateObj);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-timer-remaining-time\": HaTimerRemainingTime;\n  }\n}\n"],"names":["leftPad","num","secondsToDuration","d","h","Math","floor","m","s","createTimer","hass","values","callWS","Object","assign","type","timerTimeRemaining","stateObj","attributes","remaining","timeRemaining","duration","parts","split","map","Number","durationToSeconds","state","now","Date","getTime","finishes","finishes_at","max","computeDisplayTimer","formatEntityState","display","HaTimerRemainingTime","ReactiveElement","createRenderRoot","this","update","changedProps","_computeDisplayTimer","super","innerHTML","connectedCallback","_startInterval","disconnectedCallback","_clearInterval","willUpdate","changedProp","has","_updateRemaining","clearInterval","_calculateRemaining","setInterval","attribute"],"mappings":"oJAAA,MAAAA,EAAAC,GAAAA,EAAA,OAAAA,IAAAA,EAEe,SAAfC,EAAAC,GACE,MAAAC,EAAAC,KAAAC,MAAAH,EAAA,MACAI,EAAAF,KAAAC,MAAAH,EAAA,SACAK,EAAAH,KAAAC,MAAAH,EAAA,SAEA,OAAAC,EAAA,EACS,GAAPA,KAAAJ,EAAAO,MAAAP,EAAAQ,KAEFD,EAAA,EACS,GAAPA,KAAAP,EAAAQ,KAEFA,EAAA,EACS,GAAPA,EAEK,IACT,C,mJCqBO,MAGPC,EAAAA,CAAAC,EAAAC,IAAAD,EAAAE,OAAAC,OAAAC,OAAA,CAEIC,KAAA,gBACAJ,IAoBJK,EAAAC,IAGE,IAAAA,EAAAC,WAAAC,UACE,OAEF,IAAAC,ECtEa,SAAfC,GACE,MAAAC,EAAAD,EAAAE,MAAA,KAAAC,IAAAC,QACA,YAAAH,EAAA,MAAAA,EAAA,GAAAA,EAAA,EACF,CDmEEI,CAAAT,EAAAC,WAAAC,WAEA,cAAAF,EAAAU,MAAA,CACE,MAAAC,GAAA,IAAAC,MAAAC,UACAC,EAAA,IAAAF,KAAAZ,EAAAC,WAAAc,aAAAF,UACAV,EAAAf,KAAA4B,KAAAF,EAAAH,GAAA,MACF,CAEA,OAAAR,CAAA,EAGFc,EAAAA,CAAAxB,EAAAO,EAAAG,KAKE,IAAAH,EACE,OAAO,KAGT,YAAAA,EAAAU,OAAA,IAAAP,EACE,OAAAV,EAAAyB,kBAAAlB,GAGF,IAAAmB,GAAAlC,EAAAA,EAAAA,GAAAkB,GAAA,QAMA,MAJA,WAAAH,EAAAU,QACES,EAAA,GAAAA,MAAA1B,EAAAyB,kBAAAlB,OAGFmB,CAAA,C,+EE7FF,MAAAC,UAAAC,EAAAA,GAUYC,gBAAAA,GACR,OAAOC,IACT,CAEUC,MAAAA,CAAAC,GAAA,IAAAC,EACRC,MAAAH,OAAAC,GACAF,KAAAK,UAAA,QAAAF,GAAAT,EAAAA,EAAAA,IAAAM,KAAA9B,KAAA8B,KAAAvB,SAAAuB,KAAApB,sBAAA,IAAAuB,EAAAA,EAAA,GAEF,CAEAG,iBAAAA,GACEF,MAAAE,oBACIN,KAAJvB,UACEuB,KAAAO,eAAAP,KAAAvB,SAEJ,CAEA+B,oBAAAA,GACEJ,MAAAI,uBACAR,KAAAS,gBACF,CAEUC,UAAAA,CAAAC,GACRP,MAAAM,WAAAC,GACAA,EAAAC,IAAA,aACEZ,KAAAO,eAAAP,KAAAvB,SAEJ,CAEQgC,cAAAA,GACFT,KAAJa,mBACEC,cAAA,KAAAD,kBACAb,KAAAa,iBAAA,KAEJ,CAEQN,cAAAA,CAAA9B,GACNuB,KAAAS,iBACAT,KAAAe,oBAAAtC,GAEA,WAAAA,EAAAU,QACEa,KAAAa,iBAAAG,aAAA,IAAAhB,KAAAe,oBAAAf,KAAAvB,WAAA,KAKJ,CAEQsC,mBAAAA,CAAAtC,GACNuB,KAAApB,eAAAJ,EAAAA,EAAAA,IAAAC,EACF,G,2BA1DYwC,WAAA,K,uDAEAA,WAAA,K"}