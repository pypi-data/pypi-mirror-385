{"version":3,"file":"2500.c1561fa1008331b5.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-select.ts"],"sourcesContent":["import memoizeOne from \"memoize-one\";\nimport type { TemplateResult } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../../types\";\nimport type {\n  HaFormElement,\n  HaFormSelectData,\n  HaFormSelectSchema,\n} from \"./types\";\nimport type { SelectSelector } from \"../../data/selector\";\nimport \"../ha-selector/ha-selector-select\";\n\n@customElement(\"ha-form-select\")\nexport class HaFormSelect extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public schema!: HaFormSelectSchema;\n\n  @property({ attribute: false }) public data!: HaFormSelectData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ attribute: false })\n  public localizeValue?: (key: string) => string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  private _selectSchema = memoizeOne(\n    (schema: HaFormSelectSchema): SelectSelector => ({\n      select: {\n        translation_key: schema.name,\n        options: schema.options.map((option) => ({\n          value: option[0],\n          label: option[1],\n        })),\n      },\n    })\n  );\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-selector-select\n        .hass=${this.hass}\n        .value=${this.data}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.schema.required || false}\n        .selector=${this._selectSchema(this.schema)}\n        .localizeValue=${this.localizeValue}\n        @value-changed=${this._valueChanged}\n      ></ha-selector-select>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    let value: string | undefined = ev.detail.value;\n\n    if (value === this.data) {\n      return;\n    }\n\n    if (value === \"\") {\n      value = undefined;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-select\": HaFormSelect;\n  }\n}\n"],"names":["HaFormSelect","LitElement","render","html","_t","_","hass","data","label","helper","disabled","schema","required","_selectSchema","localizeValue","_valueChanged","ev","stopPropagation","value","detail","undefined","fireEvent","args","memoizeOne","select","translation_key","name","options","map","option","attribute","type","Boolean"],"mappings":"kWAeO,MAAPA,UAAAC,EAAAA,GA4BYC,MAAAA,GACR,OAAAC,EAAAA,EAAAA,IAAAC,IAAAA,EAAAC,CAAA;;gBAAA;iBAAA;iBAAA;kBAAA;oBAAA;oBAAA;oBAAA;yBAAA;yBAAA;;OAEU,KAAAC,KACC,KAAAC,KACA,KAAAC,MACC,KAAAC,OACE,KAAAC,SACA,KAAAC,OAAAC,WAAA,EACA,KAAAC,cAAA,KAAAF,QACK,KAAAG,cACA,KAAAC,cAGrB,CAEQA,aAAAA,CAAAC,GACNA,EAAAC,kBACA,IAAAC,EAAAF,EAAAG,OAAAD,MAEAA,IAAA,KAAAX,OAIA,KAAAW,IACEA,OAAAE,IAGFC,EAAAA,EAAAA,GAAA,sBACEH,UAEJ,C,kBA3DK,SAAAI,GAAA,KAAAZ,UAAA,OAAAG,eAAAU,EAAAA,EAAAA,IAAAZ,IAAA,CAkBDa,OAAA,CACEC,gBAAAd,EAAAe,KACAC,QAAAhB,EAAAgB,QAAAC,KAAAC,IAAA,CACEX,MAAAW,EAAA,GACArB,MAAAqB,EAAA,W,8BArBIC,WAAA,K,uDAEAA,WAAA,K,yDAEAA,WAAA,K,4KAMAA,WAAA,K,gEAGAC,KAAAC,W"}