{"version":3,"file":"1679.95d7802504bd7d45.js","sources":["webpack://knx-frontend/./node_modules/@material/mwc-checkbox/mwc-checkbox.ts","webpack://knx-frontend/./node_modules/@material/mwc-list/mwc-check-list-item-base.ts","webpack://knx-frontend/./node_modules/@material/mwc-list/mwc-control-list-item.css.ts","webpack://knx-frontend/./node_modules/@lit-labs/motion/src/animate-controller.ts","webpack://knx-frontend/./node_modules/@lit-labs/motion/src/animate.ts","webpack://knx-frontend/./node_modules/@lit-labs/motion/src/position.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {CheckboxBase} from './mwc-checkbox-base.js';\nimport {styles} from './mwc-checkbox.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-checkbox': Checkbox;\n  }\n}\n\n/** @soyCompatible */\n@customElement('mwc-checkbox')\nexport class Checkbox extends CheckboxBase {\n  static override styles = [styles];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport '@material/mwc-checkbox/mwc-checkbox.js';\n\nimport {Checkbox} from '@material/mwc-checkbox/mwc-checkbox.js';\nimport {html} from 'lit';\nimport {property, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {GraphicType, ListItemBase} from './mwc-list-item-base.js';\n\nexport class CheckListItemBase extends ListItemBase {\n  @query('slot') protected override slotElement!: HTMLSlotElement|null;\n  @query('mwc-checkbox') protected checkboxElement!: Checkbox;\n\n  @property({type: Boolean}) left = false;\n  @property({type: String, reflect: true})\n  override graphic: GraphicType = 'control';\n\n  override render() {\n    const checkboxClasses = {\n      'mdc-deprecated-list-item__graphic': this.left,\n      'mdc-deprecated-list-item__meta': !this.left,\n    };\n\n    const text = this.renderText();\n    const graphic = this.graphic && this.graphic !== 'control' && !this.left ?\n        this.renderGraphic() :\n        html``;\n    const meta = this.hasMeta && this.left ? this.renderMeta() : html``;\n    const ripple = this.renderRipple();\n\n    return html`\n      ${ripple}\n      ${graphic}\n      ${this.left ? '' : text}\n      <span class=${classMap(checkboxClasses)}>\n        <mwc-checkbox\n            reducedTouchTarget\n            tabindex=${this.tabindex}\n            .checked=${this.selected}\n            ?disabled=${this.disabled}\n            @change=${this.onChange}>\n        </mwc-checkbox>\n      </span>\n      ${this.left ? text : ''}\n      ${meta}`;\n  }\n\n  protected async onChange(evt: Event) {\n    const checkbox = evt.target as Checkbox;\n    const changeFromProp = this.selected === checkbox.checked;\n\n    if (!changeFromProp) {\n      this._skipPropRequest = true;\n      this.selected = checkbox.checked;\n      await this.updateComplete;\n      this._skipPropRequest = false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`:host(:not([twoline])){height:56px}:host(:not([left])) .mdc-deprecated-list-item__meta{height:40px;width:40px}`;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ReactiveControllerHost} from 'lit';\nimport {Animate, Options} from './animate.js';\n\nexport const controllerMap = new WeakMap<\n  ReactiveControllerHost,\n  AnimateController\n>();\n\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport class AnimateController {\n  host: ReactiveControllerHost;\n  defaultOptions: Options;\n  startPaused = false;\n  disabled = false;\n  onComplete?: () => void;\n\n  constructor(\n    host: ReactiveControllerHost,\n    options: {\n      defaultOptions?: Options;\n      startPaused?: boolean;\n      disabled?: boolean;\n      onComplete?: () => void;\n    }\n  ) {\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n\n  /**\n   * Set of active `animate()` directives in the host component\n   */\n  clients = new Set<Animate>();\n\n  protected pendingComplete = false;\n\n  async add(animate: Animate) {\n    this.clients.add(animate);\n    if (this.startPaused) {\n      animate.webAnimation?.pause();\n    }\n    this.pendingComplete = true;\n    await animate.finished;\n    if (this.pendingComplete && !this.isAnimating) {\n      this.pendingComplete = false;\n      this.onComplete?.();\n    }\n  }\n\n  remove(animate: Animate) {\n    this.clients.delete(animate);\n  }\n\n  /**\n   * Pauses all animations running in the host component.\n   */\n  pause() {\n    this.clients.forEach((f) => f.webAnimation?.pause());\n  }\n\n  /**\n   * Plays all active animations in the host component.\n   */\n  play() {\n    this.clients.forEach((f) => f.webAnimation?.play());\n  }\n\n  cancel() {\n    this.clients.forEach((f) => f.webAnimation?.cancel());\n    this.clients.clear();\n  }\n\n  finish() {\n    this.clients.forEach((f) => f.webAnimation?.finish());\n    this.clients.clear();\n  }\n\n  /**\n   * Toggles the play/pause state of all active `animate()` animations in the host component.\n   */\n  togglePlay() {\n    if (this.isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Returns true if the host component has any active `animate()` animations.\n   */\n  get isAnimating() {\n    return this.clients.size > 0;\n  }\n\n  /**\n   * Returns true if the host component has any playing `animate()` animations.\n   */\n  get isPlaying() {\n    return Array.from(this.clients).some(\n      (a) => a.webAnimation?.playState === 'running'\n    );\n  }\n\n  async finished() {\n    await Promise.all(Array.from(this.clients).map((f) => f.finished));\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ReactiveControllerHost} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {controllerMap} from './animate-controller.js';\nexport {AnimateController} from './animate-controller.js';\n\nexport type CSSValues = {\n  [index: string]: string | number;\n};\n\nexport type CSSPropertiesList = string[];\n\n// zIndex for \"in\" animations\nlet z = 0;\n\nconst disconnectedProps = new Map<unknown, CSSValues>();\nconst renderedHosts = new WeakSet<ReactiveControllerHost>();\n\nexport type Options = {\n  // Options used for the animation\n  keyframeOptions?: KeyframeAnimationOptions;\n  // List of css properties to animate\n  properties?: CSSPropertiesList;\n  // if `true`, the `animate` is disabled\n  disabled?: boolean;\n  // Callback run to produce a value which is dirty checked to determine if animation should run.\n  guard?: () => unknown;\n  // Id for this `animate`; used to link to other `animate`s via e.g. `inId`\n  id?: unknown;\n  // Set to the `animate` id to map to when rendering \"in\"\n  inId?: unknown;\n  // Keyframes to use when animating \"in\"\n  in?: Keyframe[];\n  // Keyframes to use when animating \"out\"\n  out?: Keyframe[];\n  // Set to true to match DOM position when animating \"out\"\n  stabilizeOut?: boolean;\n  // Skips animation when initially rendering\n  skipInitial?: boolean;\n  // Callback run when the `animate` animation starts\n  onStart?: (animate: Animate) => void;\n  // Callback run when the animation is complete\n  onComplete?: (animate: Animate) => void;\n  // Callback run to modify frames used to animate\n  onFrames?: (animate: Animate) => Keyframe[] | undefined;\n};\n\nexport const animationFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{transform: 'translateY(100%) scale(0)', opacity: 0}];\nexport const flyAbove = [{transform: 'translateY(-100%) scale(0)', opacity: 0}];\nexport const flyLeft = [{transform: 'translateX(-100%) scale(0)', opacity: 0}];\nexport const flyRight = [{transform: 'translateX(100%) scale(0)', opacity: 0}];\nexport const none = [{}];\nexport const fadeOut = [{opacity: 0}];\nexport const fade = fadeOut;\nexport const fadeIn = [{opacity: 0}, {opacity: 1}];\nexport const fadeInSlow = [\n  {opacity: 0},\n  {opacity: 0.25, offset: 0.75},\n  {opacity: 1},\n];\n\nconst diffOp = (a: number, b: number) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a: number, b: number) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n\n// Computes a transform given a before and after input for given properties.\nexport const transformProps: {\n  [p: string]: (\n    a: number,\n    b: number\n  ) => {\n    value?: number;\n    transform?: string;\n    overrideFrom?: {[k: string]: string};\n  };\n} = {\n  left: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `translateX(${value}px)`;\n    return {value, transform};\n  },\n  top: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `translateY(${value}px)`;\n    return {value, transform};\n  },\n  width: (a: number, b: number) => {\n    let override: {} | undefined = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of width.\n    if (b === 0) {\n      b = 1;\n      override = {width: '1px'};\n    }\n    const value = quotientOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `scaleX(${value})`;\n    return {value, overrideFrom: override, transform};\n  },\n  height: (a: number, b: number) => {\n    let override: {} | undefined = undefined;\n    // 'To' values of 0 would cause `value` to be Infinity. Instead we override\n    // `b` to be 1 and add 1px as an override of height.\n    if (b === 0) {\n      b = 1;\n      override = {height: '1px'};\n    }\n    const value = quotientOp(a, b);\n    const transform =\n      value == null || isNaN(value) ? undefined : `scaleY(${value})`;\n    return {value, overrideFrom: override, transform};\n  },\n};\n\nexport const defaultKeyframeOptions: KeyframeAnimationOptions = {\n  duration: 333,\n  easing: `ease-in-out`,\n};\n\nexport const defaultCssProperties: CSSPropertiesList = [\n  'left',\n  'top',\n  'width',\n  'height',\n  'opacity',\n  'color',\n  'background',\n];\n\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value: unknown, previous: unknown) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (\n      Array.isArray(previous) &&\n      previous.length === value.length &&\n      value.every((v, i) => v === (previous as Array<unknown>)[i])\n    ) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap = new WeakMap<Node, Animate>();\n\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  private _hostHasUpdated = false;\n  private _host?: ReactiveControllerHost;\n  private _fromValues?: CSSValues;\n  private _parentNode: Element | null = null;\n  private _nextSibling: Node | null = null;\n  private _shouldAnimate = true;\n  private _previousValue: unknown;\n  private _styles?: string | undefined | null;\n  element!: HTMLElement;\n\n  shouldLog = false;\n  animatingProperties?: CSSValues;\n  frames?: Keyframe[];\n  webAnimation?: Animation;\n  options!: Options;\n  optionsOrCallback?: (() => Options) | Options;\n\n  finished!: Promise<void>;\n  private _resolveFinished?: () => void;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type === PartType.CHILD) {\n      throw new Error(\n        'The `animate` directive must be used in attribute position.'\n      );\n    }\n    this.createFinished();\n  }\n\n  createFinished() {\n    this.resolveFinished?.();\n    this.finished = new Promise((r) => {\n      this._resolveFinished = r;\n    });\n  }\n\n  async resolveFinished() {\n    this._resolveFinished?.();\n    this._resolveFinished = undefined;\n  }\n\n  render(_options?: (() => Options) | Options) {\n    return nothing;\n  }\n\n  getController() {\n    return controllerMap.get(this._host!);\n  }\n\n  isDisabled() {\n    return this.options.disabled || this.getController()?.disabled;\n  }\n\n  override update(part: AttributePart, [options]: Parameters<this['render']>) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      this._host = part.options?.host as ReactiveControllerHost;\n      this._host.addController(this);\n      this._host.updateComplete.then((_) => (this._hostHasUpdated = true));\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options as Options);\n    }\n    return this.render(options);\n  }\n\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  private _setOptions(options?: Options) {\n    options = options ?? {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options,\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions,\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    options!.properties ??= defaultCssProperties;\n    this.options = options;\n  }\n\n  // Measures and returns metrics for the element's bounding box and styling\n  private _measure() {\n    const props: CSSValues = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties!.forEach((p) => {\n      const v =\n        bounds[p as keyof typeof bounds] ??\n        (!transformProps[p as keyof typeof transformProps]\n          ? computedStyle[p as keyof CSSStyleDeclaration]\n          : undefined);\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n\n  // Returns true if a `animate` should be started.\n  private _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate =\n      this._hostHasUpdated &&\n      !this.isDisabled() &&\n      !this.isAnimating() &&\n      dirty &&\n      this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode =\n        this._parentNode ?? (this.element.parentNode as Element);\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n\n  async hostUpdated() {\n    if (\n      !this._shouldAnimate ||\n      !this.element.isConnected ||\n      (this.options.skipInitial && !this.isHostRendered)\n    ) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames: Keyframe[] | undefined;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions,\n      ancestors\n    );\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {from, to} = this._applyAncestorAdjustments(\n        this._fromValues,\n        toValues,\n        ancestors\n      );\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {from, to} = this._applyAncestorAdjustments(\n          disconnected!,\n          toValues,\n          ancestors\n        );\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in\n          ? [\n              {...this.options.in[0], ...frames![0]},\n              ...this.options.in.slice(1),\n              frames![1],\n            ]\n          : frames;\n        // adjust z so always on top...\n        z++;\n        frames!.forEach((f) => (f['zIndex'] = z));\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    noAwait(this.animate(frames, animationOptions));\n  }\n\n  resetStyles() {\n    if (this._styles !== undefined) {\n      this.element.setAttribute('style', this._styles ?? '');\n      this._styles = undefined;\n    }\n  }\n\n  commitStyles() {\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.webAnimation as any)?.commitStyles();\n    this.webAnimation?.cancel();\n  }\n\n  override reconnected() {}\n\n  // Experimental animate out functionality.\n  override async disconnected() {\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues!);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if (this._parentNode?.isConnected) {\n      // put element back in DOM\n      const ref =\n        this._nextSibling && this._nextSibling.parentNode === this._parentNode\n          ? this._nextSibling\n          : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left =\n          (this._fromValues!['left'] as number) - (shifted['left'] as number);\n        const top =\n          (this._fromValues!['top'] as number) - (shifted['top'] as number);\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions\n    );\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n\n  prepare() {\n    this.createFinished();\n  }\n\n  start() {\n    this.options.onStart?.(this);\n  }\n\n  didFinish(didAnimate: boolean) {\n    if (didAnimate) {\n      this.options.onComplete?.(this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n\n  private _getAncestors() {\n    const ancestors = [];\n    for (\n      let p: Node | null | undefined = this.element.parentNode;\n      p;\n      p = p?.parentNode\n    ) {\n      const a = nodeToAnimateMap.get(p!);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n\n  protected get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host!);\n    if (!hostRendered) {\n      this._host!.updateComplete.then(() => {\n        renderedHosts.add(this._host!);\n      });\n    }\n    return hostRendered;\n  }\n\n  private _calculateKeyframeOptions(\n    options: KeyframeAnimationOptions | undefined,\n    ancestors: Animate[] = this._getAncestors()\n  ) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {...defaultKeyframeOptions};\n    ancestors.forEach((a) =>\n      Object.assign(keyframeOptions, a.options.keyframeOptions)\n    );\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n\n  // Adjust position based on ancestor scaling.\n  private _applyAncestorAdjustments(\n    from: CSSValues,\n    to: CSSValues,\n    ancestors: Animate[]\n  ) {\n    from = {...from};\n    to = {...to};\n    const ancestorProps = ancestors\n      .map((a) => a.animatingProperties)\n      .filter((a) => a !== undefined) as CSSValues[];\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps.length > 0) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach((a) => {\n        if (a['width']) {\n          dScaleX = dScaleX / (a['width'] as number);\n        }\n        if (a['height']) {\n          dScaleY = dScaleY / (a['height'] as number);\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from['left'] !== undefined && to['left'] !== undefined) {\n        from['left'] = dScaleX * (from['left'] as number);\n        to['left'] = dScaleX * (to['left'] as number);\n      }\n      if (from['top'] !== undefined && to['top'] !== undefined) {\n        from['top'] = dScaleY * (from['top'] as number);\n        to['top'] = dScaleY * (to['top'] as number);\n      }\n    }\n    return {from, to};\n  }\n\n  protected calculateKeyframes(from: CSSValues, to: CSSValues, center = false) {\n    const fromFrame: Keyframe = {};\n    const toFrame: Keyframe = {};\n    let hasFrames = false;\n    const props: CSSValues = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p as keyof typeof transformProps];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f as number, t as number);\n        if (op.transform !== undefined) {\n          props[p] = op.value!;\n          hasFrames = true;\n          fromFrame['transform'] = `${fromFrame['transform'] ?? ''} ${\n            op['transform']\n          }`;\n          if (op.overrideFrom !== undefined) {\n            Object.assign(fromFrame, op.overrideFrom);\n          }\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame['transformOrigin'] = toFrame['transformOrigin'] = center\n      ? 'center center'\n      : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n\n  protected async animate(\n    frames: Keyframe[] | undefined,\n    options = this.options.keyframeOptions\n  ) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        noAwait(controller?.add(this));\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller?.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n\n  protected isAnimating() {\n    return (\n      this.webAnimation?.playState === 'running' || this.webAnimation?.pending\n    );\n  }\n\n  log(message: string, data?: unknown) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n\n/**\n * Used in an async function to mark a promise that we're deliberately not\n * awaiting.\n */\nfunction noAwait(_p: null | undefined | Promise<unknown>) {}\n\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * keyframeOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {LitElement} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\n\ninterface Positionables {\n  readonly bottom: number;\n  readonly height: number;\n  readonly left: number;\n  readonly right: number;\n  readonly top: number;\n  readonly width: number;\n}\n\ntype Ref = {value: HTMLElement};\nexport type TargetCallbackOrRef = (() => HTMLElement) | Ref;\n\nexport type Positions = Array<keyof Positionables>;\n\nconst positionedPoints = ['top', 'right', 'bottom', 'left'];\n\nexport class Position extends AsyncDirective {\n  private _host?: LitElement;\n  private _element?: Element;\n  private _targetCallbackOrRef!: TargetCallbackOrRef;\n  private _positions?: Positions;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type !== PartType.ELEMENT) {\n      throw new Error(\n        'The `position` directive must be used in attribute position.'\n      );\n    }\n  }\n\n  render(_targetCallbackOrRef: TargetCallbackOrRef, _positions: Positions) {\n    return nothing;\n  }\n\n  override update(\n    part: AttributePart,\n    [target, positions]: Parameters<this['render']>\n  ) {\n    if (this._host === undefined) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n    }\n    this._element = part.element;\n    this._targetCallbackOrRef = target;\n    this._positions = positions ?? ['left', 'top', 'width', 'height'];\n    return this.render(target, positions);\n  }\n\n  hostUpdated() {\n    this._position();\n  }\n\n  private _position() {\n    const target =\n      typeof this._targetCallbackOrRef === 'function'\n        ? this._targetCallbackOrRef()\n        : this._targetCallbackOrRef?.value;\n    const parent = target.offsetParent;\n    if (target === undefined || !parent) {\n      return;\n    }\n    const tr = target.getBoundingClientRect();\n    const pr = parent.getBoundingClientRect();\n    this._positions?.forEach((p) => {\n      const x = positionedPoints.includes(p) ? tr[p] - pr[p] : tr[p];\n      (this._element as HTMLElement).style[p] = `${x}px`;\n    });\n  }\n}\n\n/**\n * Positions and sizes the element on which the `position()` directive is used\n * relative to the given target element.\n */\nexport const position = directive(Position);\n"],"names":["Checkbox","CheckboxBase","styles","__decorate","customElement","CheckListItemBase","ListItemBase","render","checkboxClasses","this","left","text","renderText","graphic","renderGraphic","html","_t","_","meta","hasMeta","renderMeta","_t2","ripple","renderRipple","_t3","classMap","tabindex","selected","disabled","onChange","evt","checkbox","target","checked","_skipPropRequest","updateComplete","constructor","query","property","type","Boolean","String","reflect","css","i","WeakMap","o","r","Map","n","WeakSet","a","Promise","t","requestAnimationFrame","g","s","w","N","value","transform","isNaN","top","width","e","overrideFrom","height","A","duration","easing","b","j","x","createFinished","_this$resolveFinished","resolveFinished","call","finished","l","_this$l","getController","h","u","isDisabled","_this$getController","options","update","_t$options","host","addController","then","element","set","optionsOrCallback","p","_t$properties","Object","assign","defaultOptions","keyframeOptions","properties","m","getBoundingClientRect","getComputedStyle","forEach","_i$e","Number","v","guard","Array","isArray","length","every","isAnimating","isConnected","from","hostUpdate","_this$i","parentNode","nextSibling","hostUpdated","skipInitial","isHostRendered","prepare","O","to","log","calculateKeyframes","get","inId","delete","in","slice","zIndex","animate","resetStyles","_this$P","P","setAttribute","commitStyles","_this$webAnimation","_this$webAnimation2","getAttribute","webAnimation","cancel","reconnected","disconnected","_this$i2","id","out","insertBefore","stabilizeOut","position","style","remove","start","_this$options$onStart","_this$options","onStart","didFinish","_this$options$onCompl","_this$options2","onComplete","animatingProperties","frames","_i","push","has","add","map","filter","_e$transform","transformOrigin","onFrames","_this$webAnimation3","_this$webAnimation4","playState","pending","shouldLog","console","super","Error","F","S","C","$","_this$C","_this$F","offsetParent","includes"],"mappings":"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"}