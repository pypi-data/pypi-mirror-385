{"version":3,"file":"3627.527499929a9f5ec1.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-string.ts"],"sourcesContent":["import { mdiEye, mdiEyeOff } from \"@mdi/js\";\nimport type { PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport \"../ha-icon-button\";\nimport \"../ha-textfield\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport type {\n  HaFormElement,\n  HaFormStringData,\n  HaFormStringSchema,\n} from \"./types\";\nimport type {\n  LocalizeFunc,\n  LocalizeKeys,\n} from \"../../common/translations/localize\";\n\nconst MASKED_FIELDS = [\"password\", \"secret\", \"token\"];\n\n@customElement(\"ha-form-string\")\nexport class HaFormString extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public localizeBaseKey =\n    \"ui.components.selectors.text\";\n\n  @property({ attribute: false }) public schema!: HaFormStringSchema;\n\n  @property() public data!: HaFormStringData;\n\n  @property() public label!: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @state() protected unmaskedPassword = false;\n\n  @query(\"ha-textfield\") private _input?: HaTextField;\n\n  public focus(): void {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-textfield\n        .type=${!this.isPassword\n          ? this.stringType\n          : this.unmaskedPassword\n            ? \"text\"\n            : \"password\"}\n        .label=${this.label}\n        .value=${this.data || \"\"}\n        .helper=${this.helper}\n        helperPersistent\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .name=${this.schema.name}\n        .autocomplete=${this.schema.autocomplete}\n        .suffix=${this.isPassword\n          ? // reserve some space for the icon.\n            html`<div style=\"width: 24px\"></div>`\n          : this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n        @change=${this._valueChanged}\n      ></ha-textfield>\n      ${this.renderIcon()}\n    `;\n  }\n\n  protected renderIcon() {\n    if (!this.isPassword) return nothing;\n    return html`\n      <ha-icon-button\n        .label=${this.localize?.(\n          `${this.localizeBaseKey}.${\n            this.unmaskedPassword ? \"hide_password\" : \"show_password\"\n          }` as LocalizeKeys\n        )}\n        @click=${this.toggleUnmaskedPassword}\n        .path=${this.unmaskedPassword ? mdiEyeOff : mdiEye}\n      ></ha-icon-button>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\"own-margin\", !!this.schema.required);\n    }\n  }\n\n  protected toggleUnmaskedPassword(): void {\n    this.unmaskedPassword = !this.unmaskedPassword;\n  }\n\n  protected _valueChanged(ev: Event): void {\n    let value: string | undefined = (ev.target as HaTextField).value;\n    if (this.data === value) {\n      return;\n    }\n    if (value === \"\" && !this.schema.required) {\n      value = undefined;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  protected get stringType(): string {\n    if (this.schema.format) {\n      if ([\"email\", \"url\"].includes(this.schema.format)) {\n        return this.schema.format;\n      }\n      if (this.schema.format === \"fqdnurl\") {\n        return \"url\";\n      }\n    }\n    return \"text\";\n  }\n\n  protected get isPassword(): boolean {\n    return MASKED_FIELDS.some((field) => this.schema.name.includes(field));\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      position: relative;\n    }\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    ha-textfield {\n      display: block;\n    }\n    ha-icon-button {\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      inset-inline-start: initial;\n      inset-inline-end: 8px;\n      --mdc-icon-button-size: 40px;\n      --mdc-icon-size: 20px;\n      color: var(--secondary-text-color);\n      direction: var(--direction);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-string\": HaFormString;\n  }\n}\n"],"names":["MASKED_FIELDS","HaFormString","LitElement","focus","this","_input","render","_this$schema$descript","_this$localize","html","_t","_","isPassword","unmaskedPassword","stringType","label","data","helper","disabled","schema","required","name","autocomplete","_t2","description","suffix","localize","call","undefined","_valueChanged","renderIcon","_this$localize2","_t3","localizeBaseKey","toggleUnmaskedPassword","nothing","updated","changedProps","has","toggleAttribute","ev","value","target","fireEvent","format","includes","some","field","args","styles","css","_t4","attribute","type","Boolean"],"mappings":"wTAkBAA,EAAA,CAAuB,WAAY,SAAU,SAGtC,MAAPC,UAAAC,EAAAA,GAoBSC,KAAAA,GACDC,KAAJC,QACED,KAAAC,OAAAF,OAEJ,CAEUG,MAAAA,GAAA,IAAAC,EAAAC,EACR,OAAAC,EAAAA,EAAAA,IAAAC,IAAAA,EAAAC,CAAA;;gBAAA;iBAAA;iBAAA;kBAAA;;oBAAA;oBAAA;wBAAA;gBAAA;wBAAA;kBAAA;6BAAA;iBAAA;kBAAA;;QAAA;OAEU,KAAAC,WAAA,KAAAC,iBAAA,uBAAAC,WAKC,KAAAC,MACA,KAAAC,MAAA,GACC,KAAAC,OAEE,KAAAC,SACA,KAAAC,OAAAC,SACI,KAAAD,OAAAC,SACR,KAAAD,OAAAE,KACQ,KAAAF,OAAAG,aACN,KAAAV,YAAAH,EAAAA,EAAAA,IAAAc,IAAAA,EAAAZ,CAAA,4CAAAJ,EAAA,KAAAY,OAAAK,mBAAA,IAAAjB,OAAA,EAAAA,EAAAkB,OAIW,KAAAN,OAAAC,SAAA,QAAAZ,EAAA,KAAAkB,gBAAA,IAAAlB,OAAA,EAAAA,EAAAmB,KAAA,sCAAAC,EAGZ,KAAAC,cACC,KAAAA,cAEV,KAAAC,aAEJ,CAEUA,UAAAA,GAAA,IAAAC,EACR,OAAK3B,KAALQ,YACAH,EAAAA,EAAAA,IAAAuB,IAAAA,EAAArB,CAAA;;iBAAA;iBAAA;gBAAA;;OAEW,QAFXoB,EAEW,KAAAL,gBAAA,IAAAK,OAAA,EAAAA,EAAAJ,KAAA,aAAAM,mBAAA,KAAApB,iBAAA,mCAKA,KAAAqB,uBACD,KAAArB,iB,wzBATVsB,EAAAA,EAYF,CAEUC,OAAAA,CAAAC,GACRA,EAAAC,IAAA,WACElC,KAAAmC,gBAAA,eAAAnC,KAAAe,OAAAC,SAEJ,CAEUc,sBAAAA,GACR9B,KAAAS,kBAAAT,KAAAS,gBACF,CAEUgB,aAAAA,CAAAW,GACR,IAAAC,EAAAD,EAAAE,OAAAD,MACIrC,KAAJY,OAAAyB,IAGA,KAAAA,GAAA,KAAAtB,OAAAC,WACEqB,OAAAb,IAEFe,EAAAA,EAAAA,GAAA,sBACEF,UAEJ,CAEA,cAAA3B,GACE,GAAIV,KAAJe,OAAAyB,OAAA,CACE,GAAI,CAAC,QAAS,OAAMC,SAAA,KAAA1B,OAAAyB,QAClB,OAAOxC,KAAPe,OAAAyB,OAEF,eAAIxC,KAAJe,OAAAyB,OACE,MAAO,KAEX,CACA,MAAO,MACT,CAEA,cAAAhC,GACE,OAAAZ,EAAA8C,MAAAC,GAAA,KAAA5B,OAAAE,KAAAwB,SAAAE,IACF,C,kBA7GK,SAAAC,GAAA,KAAAf,gBAAA,oCAAAf,UAAA,OAAAL,kBAAA,C,EAAMZ,EAAAgD,QAAAC,EAAAA,EAAAA,IAAAC,IAAAA,EAAAxC,CAAA;;;;;;;;;;;;;;;;;;;;;;kCACCyC,WAAA,K,2DAEAA,WAAA,K,kEAGAA,WAAA,K,uOAQAC,KAAAC,W"}