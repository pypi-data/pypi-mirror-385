{"version":3,"file":"742.dc4d963867b60577.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-float.ts"],"sourcesContent":["import type { TemplateResult, PropertyValues } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HaTextField } from \"../ha-textfield\";\nimport \"../ha-textfield\";\nimport type {\n  HaFormElement,\n  HaFormFloatData,\n  HaFormFloatSchema,\n} from \"./types\";\nimport type { LocalizeFunc } from \"../../common/translations/localize\";\n\n@customElement(\"ha-form-float\")\nexport class HaFormFloat extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public localize?: LocalizeFunc;\n\n  @property({ attribute: false }) public schema!: HaFormFloatSchema;\n\n  @property({ attribute: false }) public data!: HaFormFloatData;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @query(\"ha-textfield\") private _input?: HaTextField;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-textfield\n        type=\"number\"\n        inputMode=\"decimal\"\n        step=\"any\"\n        .label=${this.label}\n        .helper=${this.helper}\n        helperPersistent\n        .value=${this.data !== undefined ? this.data : \"\"}\n        .disabled=${this.disabled}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        .suffix=${this.schema.description?.suffix}\n        .validationMessage=${this.schema.required\n          ? this.localize?.(\"ui.common.error_required\")\n          : undefined}\n        @input=${this._valueChanged}\n      ></ha-textfield>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    if (changedProps.has(\"schema\")) {\n      this.toggleAttribute(\"own-margin\", !!this.schema.required);\n    }\n  }\n\n  private _valueChanged(ev: Event) {\n    const source = ev.target as HaTextField;\n    const rawValue = source.value.replace(\",\", \".\");\n\n    let value: number | undefined;\n\n    if (rawValue.endsWith(\".\")) {\n      return;\n    }\n\n    // Allow user to start typing a negative value\n    if (rawValue === \"-\") {\n      return;\n    }\n\n    if (rawValue !== \"\") {\n      value = parseFloat(rawValue);\n      if (isNaN(value)) {\n        value = undefined;\n      }\n    }\n\n    // Detect anything changed\n    if (this.data === value) {\n      return;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  static styles = css`\n    :host([own-margin]) {\n      margin-bottom: 5px;\n    }\n    ha-textfield {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-float\": HaFormFloat;\n  }\n}\n"],"names":["HaFormFloat","LitElement","focus","this","_input","render","html","label","helper","undefined","data","disabled","schema","required","description","suffix","localize","_valueChanged","updated","changedProps","has","toggleAttribute","ev","rawValue","target","value","replace","endsWith","parseFloat","isNaN","fireEvent","args","styles","css","attribute","type","Boolean"],"mappings":"0NAcO,MAAPA,UAAAC,EAAAA,GAeSC,KAAAA,GACDC,KAAJC,QACED,KAAAC,OAAAF,OAEJ,CAEUG,MAAAA,GACR,OAAAC,EAAAA,EAAA;;;;;iBAKW,KAAAC;kBACC,KAAAC;;sBAEDC,IAAA,KAAAC,KAAA,KAAAA,KAAA;oBACG,KAAAC;oBACA,KAAAC,OAAAC;wBACI,KAAAD,OAAAC;kBACN,KAAAD,OAAAE,aAAAC;6BACW,KAAAH,OAAAC,SAAA,KAAAG,WAAA,iCAAAP;iBAGZ,KAAAQ;;KAGb,CAEUC,OAAAA,CAAAC,GACRA,EAAAC,IAAA,WACEjB,KAAAkB,gBAAA,eAAAlB,KAAAS,OAAAC,SAEJ,CAEQI,aAAAA,CAAAK,GACN,MACAC,EADAD,EAAAE,OACAC,MAAAC,QAAA,SAEA,IAAAD,EAEAF,EAAAI,SAAA,MAKA,MAAAJ,IAIA,KAAAA,IACEE,EAAAG,WAAAL,GACAM,MAAAJ,KACEA,OAAAhB,IAKAN,KAAJO,OAAAe,IAIAK,EAAAA,EAAAA,GAAA,sBACEL,UAEJ,C,kBA/EK,SAAAM,GAAA,KAAApB,UAAA,C,EAAMX,EAAAgC,OAAAC,EAAAA,EAAA;;;;;;;gCACCC,WAAA,K,2DAEAA,WAAA,K,yDAEAA,WAAA,K,4KAMAC,KAAAC,W"}