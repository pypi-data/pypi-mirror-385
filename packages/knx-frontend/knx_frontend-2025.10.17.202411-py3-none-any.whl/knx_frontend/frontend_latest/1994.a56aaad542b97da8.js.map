{"version":3,"file":"1994.a56aaad542b97da8.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-button-group.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-button-toolbar.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tooltip.ts"],"sourcesContent":["import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-icon-button-group\")\nexport class HaIconButtonGroup extends LitElement {\n  protected render(): TemplateResult {\n    return html`<slot></slot>`;\n  }\n\n  static styles = css`\n    :host {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      height: 48px;\n      border-radius: 28px;\n      background-color: rgba(139, 145, 151, 0.1);\n      box-sizing: border-box;\n      width: auto;\n      padding: 0;\n    }\n    ::slotted(.separator) {\n      background-color: rgba(var(--rgb-primary-text-color), 0.15);\n      width: 1px;\n      margin: 0 1px;\n      height: 40px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button-group\": HaIconButtonGroup;\n  }\n}\n","import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, queryAll } from \"lit/decorators\";\nimport \"./ha-icon\";\nimport \"./ha-icon-button\";\nimport type { HaIconButton } from \"./ha-icon-button\";\nimport \"./ha-icon-button-group\";\nimport \"./ha-tooltip\";\n\nexport interface HaIconButtonToolbarItem {\n  [key: string]: any;\n  path: string;\n  label: string;\n  id?: string;\n  disabled?: boolean;\n  tooltip?: string;\n  action?: (e: Event) => any;\n}\n\n@customElement(\"ha-icon-button-toolbar\")\nexport class HaIconButtonToolbar extends LitElement {\n  @property({ type: Array, attribute: false })\n  public items: (HaIconButtonToolbarItem | string)[] = [];\n\n  @queryAll(\"ha-icon-button\") private _buttons?: HaIconButton[];\n\n  // Returns all toolbar buttons, or undefined if there are none.\n  // Optionally returns only those with matching selector.\n  public findToolbarButtons(selector = \"\"): HaIconButton[] | undefined {\n    // Search for all toolbar buttons\n    const toolbarButtons = this._buttons?.filter((button) =>\n      button.classList.contains(\"icon-toolbar-button\")\n    );\n    if (!toolbarButtons || !toolbarButtons.length) return undefined;\n    if (!selector.length) return toolbarButtons;\n    // Filter by user class if provided\n    const classButtons = toolbarButtons.filter((button) =>\n      button.querySelector(selector)\n    );\n    return classButtons.length ? classButtons : undefined;\n  }\n\n  // Returns a toolbar button based on the provided id.\n  // Will return undefined if not found.\n  public findToolbarButtonById(id): HaIconButton | undefined {\n    // Find the specified id\n    const element = this.shadowRoot?.getElementById(id);\n    if (!element || element.localName !== \"ha-icon-button\") return undefined;\n    return element as HaIconButton;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-icon-button-group class=\"icon-toolbar-buttongroup\">\n        ${this.items.map((item) =>\n          typeof item === \"string\"\n            ? html`<div class=\"icon-toolbar-divider\" role=\"separator\"></div>`\n            : html`<ha-tooltip\n                  .disabled=${!item.tooltip}\n                  .for=${item.id ?? \"icon-button-\" + item.label}\n                  >${item.tooltip ?? \"\"}</ha-tooltip\n                >\n                <ha-icon-button\n                  class=\"icon-toolbar-button\"\n                  .id=${item.id ?? \"icon-button-\" + item.label}\n                  @click=${item.action}\n                  .label=${item.label}\n                  .path=${item.path}\n                  .disabled=${item.disabled ?? false}\n                ></ha-icon-button>`\n        )}\n      </ha-icon-button-group>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      position: absolute;\n      top: 0px;\n      width: 100%;\n      display: flex;\n      flex-direction: row-reverse;\n      background-color: var(\n        --icon-button-toolbar-color,\n        var(--secondary-background-color, whitesmoke)\n      );\n      --icon-button-toolbar-height: 32px;\n      --icon-button-toolbar-button: calc(\n        var(--icon-button-toolbar-height) - 4px\n      );\n      --icon-button-toolbar-icon: calc(\n        var(--icon-button-toolbar-height) - 10px\n      );\n    }\n\n    .icon-toolbar-divider {\n      height: var(--icon-button-toolbar-icon);\n      margin: 0px 4px;\n      border: 0.5px solid\n        var(--divider-color, var(--secondary-text-color, transparent));\n    }\n\n    .icon-toolbar-buttongroup {\n      background-color: transparent;\n      padding-right: 4px;\n      height: var(--icon-button-toolbar-height);\n      gap: 8px;\n    }\n\n    .icon-toolbar-button {\n      color: var(--secondary-text-color);\n      --mdc-icon-button-size: var(--icon-button-toolbar-button);\n      --mdc-icon-size: var(--icon-button-toolbar-icon);\n      /* Ensure button is clickable on iOS */\n      cursor: pointer;\n      -webkit-tap-highlight-color: transparent;\n      touch-action: manipulation;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button-toolbar\": HaIconButtonToolbar;\n  }\n}\n","import Tooltip from \"@home-assistant/webawesome/dist/components/tooltip/tooltip\";\nimport { css } from \"lit\";\nimport type { CSSResultGroup } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-tooltip\")\nexport class HaTooltip extends Tooltip {\n  /** The amount of time to wait before showing the tooltip when the user mouses in. */\n  @property({ attribute: \"show-delay\", type: Number }) showDelay = 150;\n\n  /** The amount of time to wait before hiding the tooltip when the user mouses out.. */\n  @property({ attribute: \"hide-delay\", type: Number }) hideDelay = 400;\n\n  static get styles(): CSSResultGroup {\n    return [\n      Tooltip.styles,\n      css`\n        :host {\n          --wa-tooltip-background-color: var(--secondary-background-color);\n          --wa-tooltip-color: var(--primary-text-color);\n          --wa-tooltip-font-family: var(\n            --ha-tooltip-font-family,\n            var(--ha-font-family-body)\n          );\n          --wa-tooltip-font-size: var(\n            --ha-tooltip-font-size,\n            var(--ha-font-size-s)\n          );\n          --wa-tooltip-font-weight: var(\n            --ha-tooltip-font-weight,\n            var(--ha-font-weight-normal)\n          );\n          --wa-tooltip-line-height: var(\n            --ha-tooltip-line-height,\n            var(--ha-line-height-condensed)\n          );\n          --wa-tooltip-padding: 8px;\n          --wa-tooltip-border-radius: var(--ha-tooltip-border-radius, 4px);\n          --wa-tooltip-arrow-size: var(--ha-tooltip-arrow-size, 8px);\n          --wa-z-index-tooltip: var(--ha-tooltip-z-index, 1000);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tooltip\": HaTooltip;\n  }\n}\n"],"names":["HaIconButtonGroup","LitElement","render","html","styles","css","HaIconButtonToolbar","findToolbarButtons","selector","toolbarButtons","_buttons","filter","button","classList","contains","length","classButtons","querySelector","undefined","findToolbarButtonById","id","element","shadowRoot","getElementById","localName","items","map","item","tooltip","label","action","path","disabled","args","type","Array","attribute","HaTooltip","Tooltip","showDelay","hideDelay","Number"],"mappings":"8MAKO,MAAPA,UAAAC,EAAAA,GACYC,MAAAA,GACR,OAAAC,EAAAA,EAAA,eACF,EAHWH,EAAAI,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;8QCeN,MAAPC,UAAAL,EAAAA,GAQSM,kBAAAA,CAAAC,EAAA,IAEL,MAAAC,EAAA,KAAAC,UAAAC,QAAAC,GAAAA,EAAAC,UAAAC,SAAA,yBAGA,IAAAL,IAAAA,EAAAM,OAAA,OACA,IAAAP,EAAAO,OAAA,OAAAN,EAEA,MAAAO,EAAAP,EAAAE,QAAAC,GAAAA,EAAAK,cAAAT,KAGA,OAAAQ,EAAAD,OAAAC,OAAAE,CACF,CAIOC,qBAAAA,CAAAC,GAEL,MAAAC,EAAA,KAAAC,YAAAC,eAAAH,GACA,GAAAC,GAAA,mBAAAA,EAAAG,UACA,OAAAH,CACF,CAEUnB,MAAAA,GACR,OAAAC,EAAAA,EAAA;;UAEI,KAAAsB,MAAAC,KAAAC,GAAA,iBAAAA,EAAAxB,EAAAA,EAAA,4DAAAA,EAAAA,EAAA;+BAIoBwB,EAAAC;yBACLD,EAAAP,IAAA,eAAAO,EAAAE;qBACJF,EAAAC,SAAA;;;;wBAIGD,EAAAP,IAAA,eAAAO,EAAAE;2BACGF,EAAAG;2BACAH,EAAAE;0BACDF,EAAAI;8BACIJ,EAAAK,WAAA;;;KAK1B,C,kBArDK,SAAAC,GAAA,KAAAR,MAAA,E,EAAMnB,EAAAF,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCACC6B,KAAAC,MAAaC,WAAA,K,qUCfpB,MAAPC,UAAAC,EAAAA,EAOE,iBAAAlC,GACE,MAAO,CACLkC,EAAAA,EAAAA,OACAjC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;QA2BJ,C,kBArCK,SAAA4B,GAAA,KAAAM,UAAA,SAAAC,UAAA,G,8BAEOJ,UAAA,aAAyBF,KAAAO,U,4DAGzBL,UAAA,aAAyBF,KAAAO,U"}