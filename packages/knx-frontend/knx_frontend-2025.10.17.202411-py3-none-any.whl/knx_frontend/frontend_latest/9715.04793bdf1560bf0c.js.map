{"version":3,"file":"9715.04793bdf1560bf0c.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-template.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/documentation-url.ts","webpack://knx-frontend/./homeassistant-frontend/src/util/toast.ts"],"sourcesContent":["import { css, html, nothing, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../../types\";\nimport { documentationUrl } from \"../../util/documentation-url\";\nimport \"../ha-code-editor\";\nimport \"../ha-input-helper-text\";\nimport \"../ha-alert\";\n\nconst WARNING_STRINGS = [\"template:\", \"sensor:\", \"state:\", \"trigger: template\"];\n\n@customElement(\"ha-selector-template\")\nexport class HaTemplateSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @state() private warn: string | undefined = undefined;\n\n  protected render() {\n    return html`\n      ${this.warn\n        ? html`<ha-alert alert-type=\"warning\"\n            >${this.hass.localize(\n              \"ui.components.selectors.template.yaml_warning\",\n              { string: this.warn }\n            )}\n            <br />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=${documentationUrl(\n                this.hass,\n                \"/docs/configuration/templating/\"\n              )}\n              >${this.hass.localize(\n                \"ui.components.selectors.template.learn_more\"\n              )}</a\n            ></ha-alert\n          >`\n        : nothing}\n      ${this.label\n        ? html`<p>${this.label}${this.required ? \"*\" : \"\"}</p>`\n        : nothing}\n      <ha-code-editor\n        mode=\"jinja2\"\n        .hass=${this.hass}\n        .value=${this.value}\n        .readOnly=${this.disabled}\n        autofocus\n        autocomplete-entities\n        autocomplete-icons\n        @value-changed=${this._handleChange}\n        dir=\"ltr\"\n        linewrap\n      ></ha-code-editor>\n      ${this.helper\n        ? html`<ha-input-helper-text .disabled=${this.disabled}\n            >${this.helper}</ha-input-helper-text\n          >`\n        : nothing}\n    `;\n  }\n\n  private _handleChange(ev) {\n    ev.stopPropagation();\n    let value = ev.target.value;\n    if (this.value === value) {\n      return;\n    }\n    this.warn = WARNING_STRINGS.find((str) => value.includes(str));\n    if (value === \"\" && !this.required) {\n      value = undefined;\n    }\n    fireEvent(this, \"value-changed\", { value });\n  }\n\n  static styles = css`\n    p {\n      margin-top: 0;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-template\": HaTemplateSelector;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\nexport const documentationUrl = (hass: HomeAssistant, path: string) =>\n  `https://${\n    hass.config.version.includes(\"b\")\n      ? \"rc\"\n      : hass.config.version.includes(\"dev\")\n        ? \"next\"\n        : \"www\"\n  }.home-assistant.io${path}`;\n","import { fireEvent } from \"../common/dom/fire_event\";\nimport type { ShowToastParams } from \"../managers/notification-manager\";\n\nexport const showToast = (el: HTMLElement, params: ShowToastParams) =>\n  fireEvent(el, \"hass-notification\", params);\n"],"names":["WARNING_STRINGS","HaTemplateSelector","LitElement","render","html","warn","hass","localize","string","documentationUrl","nothing","label","required","value","disabled","_handleChange","helper","ev","stopPropagation","target","this","find","str","includes","undefined","fireEvent","args","styles","css","attribute","type","Boolean","path","config","version","showToast","el","params"],"mappings":"wUASA,MAAAA,EAAA,CAAyB,YAAa,UAAW,SAAU,qBAGpD,MAAPC,UAAAC,EAAAA,GAeYC,MAAAA,GACR,OAAAC,EAAAA,EAAA;QACE,KAAAC,KAAAD,EAAAA,EAAA;eAEO,KAAAE,KAAAC,SAAA,iDAEGC,OAAA,KAAAH;;;;;sBAMGI,EAAAA,EAAAA,GAAA,KAAAH,KAAA;iBAIJ,KAAAA,KAAAC,SAAA;;aAIJG,EAAAA;QAEL,KAAAC,MAAAP,EAAAA,EAAA,WAAAO,QAAA,KAAAC,SAAA,aAAAF,EAAAA;;;gBAKQ,KAAAJ;iBACC,KAAAO;oBACG,KAAAC;;;;yBAIK,KAAAC;;;;QAIjB,KAAAC,OAAAZ,EAAAA,EAAA,wCAAAU;eAEO,KAAAE;aACFN,EAAAA;KAGT,CAEQK,aAAAA,CAAAE,GACNA,EAAAC,kBACA,IAAAL,EAAAI,EAAAE,OAAAN,MACIO,KAAJP,QAAAA,IAGAO,KAAAf,KAAAL,EAAAqB,MAAAC,GAAAT,EAAAU,SAAAD,KACA,KAAAT,GAAA,KAAAD,WACEC,OAAAW,IAEFC,EAAAA,EAAAA,GAAA,sBAAmCZ,UACrC,C,kBAvEK,SAAAa,GAAA,KAAAZ,UAAA,OAAAF,UAAA,OAAAP,UAAAmB,C,EAAMvB,EAAA0B,OAAAC,EAAAA,EAAA;;;;gCACCC,WAAA,K,sOAQAC,KAAAC,W,2DAEAD,KAAAC,W,+MCrBP,MAAPtB,EAAAA,CAAAH,EAAA0B,IAAA,WAAA1B,EAAA2B,OAAAC,QAAAX,SAAA,UAAAjB,EAAA2B,OAAAC,QAAAX,SAAA,wCAAAS,G,wDCCO,MAAPG,EAAAA,CAAAC,EAAAC,KAAAZ,EAAAA,EAAAA,GAAAW,EAAA,oBAAAC,E"}