{"version":3,"file":"4641.ea990a4a0ce02a33.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/state_active.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-media.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/media-player/show-media-browser-dialog.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/auth.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { isUnavailableState, OFF, UNAVAILABLE } from \"../../data/entity\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport function stateActive(stateObj: HassEntity, state?: string): boolean {\n  const domain = computeDomain(stateObj.entity_id);\n  const compareState = state !== undefined ? state : stateObj?.state;\n\n  if ([\"button\", \"event\", \"input_button\", \"scene\"].includes(domain)) {\n    return compareState !== UNAVAILABLE;\n  }\n\n  if (isUnavailableState(compareState)) {\n    return false;\n  }\n\n  // The \"off\" check is relevant for most domains, but there are exceptions\n  // such as \"alert\" where \"off\" is still a somewhat active state and\n  // therefore gets a custom color and \"idle\" is instead the state that\n  // matches what most other domains consider inactive.\n  if (compareState === OFF && domain !== \"alert\") {\n    return false;\n  }\n\n  // Custom cases\n  switch (domain) {\n    case \"alarm_control_panel\":\n      return compareState !== \"disarmed\";\n    case \"alert\":\n      // \"on\" and \"off\" are active, as \"off\" just means alert was acknowledged but is still active\n      return compareState !== \"idle\";\n    case \"cover\":\n      return compareState !== \"closed\";\n    case \"device_tracker\":\n    case \"person\":\n      return compareState !== \"not_home\";\n    case \"lawn_mower\":\n      return [\"mowing\", \"error\"].includes(compareState);\n    case \"lock\":\n      return compareState !== \"locked\";\n    case \"media_player\":\n      return compareState !== \"standby\";\n    case \"vacuum\":\n      return ![\"idle\", \"docked\", \"paused\"].includes(compareState);\n    case \"valve\":\n      return compareState !== \"closed\";\n    case \"plant\":\n      return compareState === \"problem\";\n    case \"group\":\n      return [\"on\", \"home\", \"open\", \"locked\", \"problem\"].includes(compareState);\n    case \"timer\":\n      return compareState === \"active\";\n    case \"camera\":\n      return compareState === \"streaming\";\n  }\n\n  return true;\n}\n","import { mdiPlayBox, mdiPlus } from \"@mdi/js\";\nimport type { PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { supportsFeature } from \"../../common/entity/supports-feature\";\nimport { getSignedPath } from \"../../data/auth\";\nimport type { MediaPickedEvent } from \"../../data/media-player\";\nimport {\n  MediaClassBrowserSettings,\n  MediaPlayerEntityFeature,\n} from \"../../data/media-player\";\nimport type { MediaSelector, MediaSelectorValue } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport { brandsUrl, extractDomainFromBrandUrl } from \"../../util/brands-url\";\nimport \"../ha-alert\";\nimport \"../ha-form/ha-form\";\nimport type { SchemaUnion } from \"../ha-form/types\";\nimport { showMediaBrowserDialog } from \"../media-player/show-media-browser-dialog\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\n\nconst MANUAL_SCHEMA = [\n  { name: \"media_content_id\", required: false, selector: { text: {} } },\n  { name: \"media_content_type\", required: false, selector: { text: {} } },\n] as const;\n\nconst INCLUDE_DOMAINS = [\"media_player\"];\n\nconst EMPTY_FORM = {};\n\n@customElement(\"ha-selector-media\")\nexport class HaMediaSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: MediaSelector;\n\n  @property({ attribute: false }) public value?: MediaSelectorValue;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean, reflect: true }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    filter_entity?: string | string[];\n  };\n\n  @state() private _thumbnailUrl?: string | null;\n\n  private _contextEntities: string[] | undefined;\n\n  private get _hasAccept(): boolean {\n    return !!this.selector?.media?.accept?.length;\n  }\n\n  willUpdate(changedProps: PropertyValues<this>) {\n    if (changedProps.has(\"context\")) {\n      if (!this._hasAccept) {\n        this._contextEntities = ensureArray(this.context?.filter_entity);\n      }\n    }\n\n    if (changedProps.has(\"value\")) {\n      const thumbnail = this.value?.metadata?.thumbnail;\n      const oldThumbnail = (changedProps.get(\"value\") as this[\"value\"])\n        ?.metadata?.thumbnail;\n      if (thumbnail === oldThumbnail) {\n        return;\n      }\n      if (thumbnail && thumbnail.startsWith(\"/\")) {\n        this._thumbnailUrl = undefined;\n        // Thumbnails served by local API require authentication\n        getSignedPath(this.hass, thumbnail).then((signedPath) => {\n          this._thumbnailUrl = signedPath.path;\n        });\n      } else if (\n        thumbnail &&\n        thumbnail.startsWith(\"https://brands.home-assistant.io\")\n      ) {\n        // The backend is not aware of the theme used by the users,\n        // so we rewrite the URL to show a proper icon\n        this._thumbnailUrl = brandsUrl({\n          domain: extractDomainFromBrandUrl(thumbnail),\n          type: \"icon\",\n          useFallback: true,\n          darkOptimized: this.hass.themes?.darkMode,\n        });\n      } else {\n        this._thumbnailUrl = thumbnail;\n      }\n    }\n  }\n\n  protected render() {\n    const entityId = this._getActiveEntityId();\n\n    const stateObj = entityId ? this.hass.states[entityId] : undefined;\n\n    const supportsBrowse =\n      !entityId ||\n      (stateObj &&\n        supportsFeature(stateObj, MediaPlayerEntityFeature.BROWSE_MEDIA));\n\n    return html`\n      ${this._hasAccept ||\n      (this._contextEntities && this._contextEntities.length <= 1)\n        ? nothing\n        : html`\n            <ha-entity-picker\n              .hass=${this.hass}\n              .value=${entityId}\n              .label=${this.label ||\n              this.hass.localize(\n                \"ui.components.selectors.media.pick_media_player\"\n              )}\n              .disabled=${this.disabled}\n              .helper=${this.helper}\n              .required=${this.required}\n              .hideClearIcon=${!!this._contextEntities}\n              .includeDomains=${INCLUDE_DOMAINS}\n              .includeEntities=${this._contextEntities}\n              .allowCustomEntity=${!this._contextEntities}\n              @value-changed=${this._entityChanged}\n            ></ha-entity-picker>\n          `}\n      ${!supportsBrowse\n        ? html`\n            <ha-alert>\n              ${this.hass.localize(\n                \"ui.components.selectors.media.browse_not_supported\"\n              )}\n            </ha-alert>\n            <ha-form\n              .hass=${this.hass}\n              .data=${this.value || EMPTY_FORM}\n              .schema=${MANUAL_SCHEMA}\n              .computeLabel=${this._computeLabelCallback}\n              .computeHelper=${this._computeHelperCallback}\n            ></ha-form>\n          `\n        : html`\n            <ha-card\n              outlined\n              tabindex=\"0\"\n              role=\"button\"\n              aria-label=${!this.value?.media_content_id\n                ? this.hass.localize(\"ui.components.selectors.media.pick_media\")\n                : this.value.metadata?.title || this.value.media_content_id}\n              @click=${this._pickMedia}\n              @keydown=${this._handleKeyDown}\n              class=${this.disabled || (!entityId && !this._hasAccept)\n                ? \"disabled\"\n                : \"\"}\n            >\n              <div class=\"content-container\">\n                <div class=\"thumbnail\">\n                  ${this.value?.metadata?.thumbnail\n                    ? html`\n                        <div\n                          class=\"${classMap({\n                            \"centered-image\":\n                              !!this.value.metadata.media_class &&\n                              [\"app\", \"directory\"].includes(\n                                this.value.metadata.media_class\n                              ),\n                          })}\n                          image\"\n                          style=${this._thumbnailUrl\n                            ? `background-image: url(${this._thumbnailUrl});`\n                            : \"\"}\n                        ></div>\n                      `\n                    : html`\n                        <div class=\"icon-holder image\">\n                          <ha-svg-icon\n                            class=\"folder\"\n                            .path=${!this.value?.media_content_id\n                              ? mdiPlus\n                              : this.value?.metadata?.media_class\n                                ? MediaClassBrowserSettings[\n                                    this.value.metadata.media_class ===\n                                    \"directory\"\n                                      ? this.value.metadata\n                                          .children_media_class ||\n                                        this.value.metadata.media_class\n                                      : this.value.metadata.media_class\n                                  ].icon\n                                : mdiPlayBox}\n                          ></ha-svg-icon>\n                        </div>\n                      `}\n                </div>\n                <div class=\"title\">\n                  ${!this.value?.media_content_id\n                    ? this.hass.localize(\n                        \"ui.components.selectors.media.pick_media\"\n                      )\n                    : this.value.metadata?.title || this.value.media_content_id}\n                </div>\n              </div>\n            </ha-card>\n          `}\n    `;\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<typeof MANUAL_SCHEMA>\n  ): string =>\n    this.hass.localize(`ui.components.selectors.media.${schema.name}`);\n\n  private _computeHelperCallback = (\n    schema: SchemaUnion<typeof MANUAL_SCHEMA>\n  ): string =>\n    this.hass.localize(`ui.components.selectors.media.${schema.name}_detail`);\n\n  private _entityChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    if (!this._hasAccept && this.context?.filter_entity) {\n      fireEvent(this, \"value-changed\", {\n        value: {\n          media_content_id: \"\",\n          media_content_type: \"\",\n          metadata: {\n            browse_entity_id: ev.detail.value,\n          },\n        },\n      });\n    } else {\n      fireEvent(this, \"value-changed\", {\n        value: {\n          entity_id: ev.detail.value,\n          media_content_id: \"\",\n          media_content_type: \"\",\n        },\n      });\n    }\n  }\n\n  private _pickMedia() {\n    showMediaBrowserDialog(this, {\n      action: \"pick\",\n      entityId: this._getActiveEntityId(),\n      navigateIds: this.value?.metadata?.navigateIds,\n      accept: this.selector.media?.accept,\n      defaultId: this.value?.media_content_id,\n      defaultType: this.value?.media_content_type,\n      mediaPickedCallback: (pickedMedia: MediaPickedEvent) => {\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.value,\n            media_content_id: pickedMedia.item.media_content_id,\n            media_content_type: pickedMedia.item.media_content_type,\n            metadata: {\n              title: pickedMedia.item.title,\n              thumbnail: pickedMedia.item.thumbnail,\n              media_class: pickedMedia.item.media_class,\n              children_media_class: pickedMedia.item.children_media_class,\n              navigateIds: pickedMedia.navigateIds?.map((id) => ({\n                media_content_type: id.media_content_type,\n                media_content_id: id.media_content_id,\n              })),\n              ...(!this._hasAccept && this.context?.filter_entity\n                ? { browse_entity_id: this._getActiveEntityId() }\n                : {}),\n            },\n          },\n        });\n      },\n    });\n  }\n\n  private _getActiveEntityId(): string | undefined {\n    const metaId = this.value?.metadata?.browse_entity_id;\n    return (\n      this.value?.entity_id ||\n      (metaId && this._contextEntities?.includes(metaId) && metaId) ||\n      this._contextEntities?.[0]\n    );\n  }\n\n  private _handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === \"Enter\" || ev.key === \" \") {\n      ev.preventDefault();\n      this._pickMedia();\n    }\n  }\n\n  static styles = css`\n    ha-entity-picker {\n      display: block;\n      margin-bottom: 16px;\n    }\n    ha-alert {\n      display: block;\n      margin-bottom: 16px;\n    }\n    ha-card {\n      position: relative;\n      width: 100%;\n      box-sizing: border-box;\n      cursor: pointer;\n      transition: background-color 180ms ease-in-out;\n      min-height: 56px;\n    }\n    ha-card:hover:not(.disabled),\n    ha-card:focus:not(.disabled) {\n      background-color: var(--state-icon-hover-color, rgba(0, 0, 0, 0.04));\n    }\n    ha-card:focus {\n      outline: none;\n    }\n    ha-card.disabled {\n      pointer-events: none;\n      color: var(--disabled-text-color);\n    }\n    .content-container {\n      display: flex;\n      align-items: center;\n      padding: 8px;\n      gap: 12px;\n    }\n    ha-card .thumbnail {\n      width: 40px;\n      height: 40px;\n      flex-shrink: 0;\n      position: relative;\n      box-sizing: border-box;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    ha-card .image {\n      border-radius: 8px;\n    }\n    .folder {\n      --mdc-icon-size: 24px;\n    }\n    .title {\n      font-size: var(--ha-font-size-m);\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      line-height: 1.4;\n      flex: 1;\n      min-width: 0;\n    }\n    .image {\n      position: absolute;\n      top: 0;\n      right: 0;\n      left: 0;\n      bottom: 0;\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n    }\n    .centered-image {\n      margin: 4px;\n      background-size: contain;\n    }\n    .icon-holder {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-media\": HaMediaSelector;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport type {\n  MediaPickedEvent,\n  MediaPlayerBrowseAction,\n} from \"../../data/media-player\";\nimport type { MediaPlayerItemId } from \"./ha-media-player-browse\";\n\nexport interface MediaPlayerBrowseDialogParams {\n  action: MediaPlayerBrowseAction;\n  entityId?: string;\n  mediaPickedCallback: (pickedMedia: MediaPickedEvent) => void;\n  navigateIds?: MediaPlayerItemId[];\n  minimumNavigateLevel?: number;\n  accept?: string[];\n  defaultId?: string;\n  defaultType?: string;\n}\n\nexport const showMediaBrowserDialog = (\n  element: HTMLElement,\n  dialogParams: MediaPlayerBrowseDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-media-player-browse\",\n    dialogImport: () => import(\"./dialog-media-player-browse\"),\n    dialogParams,\n  });\n};\n","import type { HaFormSchema } from \"../components/ha-form/types\";\nimport type { HomeAssistant } from \"../types\";\nimport type { RefreshTokenType } from \"./refresh_token\";\n\nexport interface AuthUrlSearchParams {\n  client_id?: string;\n  redirect_uri?: string;\n  state?: string;\n}\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n  users?: Record<string, string>;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = __HASS_URL__;\n\nexport const autocompleteLoginFields = (schema: HaFormSchema[]) =>\n  schema.map((field) => {\n    if (field.type !== \"string\") return field;\n    switch (field.name) {\n      case \"username\":\n        return { ...field, autocomplete: \"username\", autofocus: true };\n      case \"password\":\n        return { ...field, autocomplete: \"current-password\" };\n      case \"code\":\n        return { ...field, autocomplete: \"one-time-code\", autofocus: true };\n      default:\n        return field;\n    }\n  });\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createLoginFlow = (\n  client_id: string | undefined,\n  redirect_uri: string | undefined,\n  handler: (string | null)[]\n) =>\n  fetch(\"/auth/login_flow\", {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify({\n      client_id,\n      handler,\n      redirect_uri,\n    }),\n  });\n\nexport const submitLoginFlow = (flow_id: string, data: Record<string, any>) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify(data),\n  });\n\nexport const deleteLoginFlow = (flow_id) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"DELETE\",\n    credentials: \"same-origin\",\n  });\n\nexport const redirectWithAuthCode = (\n  url: string,\n  authCode: string,\n  oauth2State: string | undefined,\n  storeToken: boolean\n) => {\n  // OAuth 2: 3.1.2 we need to retain query component of a redirect URI\n  if (!url.includes(\"?\")) {\n    url += \"?\";\n  } else if (!url.endsWith(\"&\")) {\n    url += \"&\";\n  }\n\n  url += `code=${encodeURIComponent(authCode)}`;\n\n  if (oauth2State) {\n    url += `&state=${encodeURIComponent(oauth2State)}`;\n  }\n  if (storeToken) {\n    url += `&storeToken=true`;\n  }\n\n  document.location.assign(url);\n};\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n\nexport const changePassword = (\n  hass: HomeAssistant,\n  current_password: string,\n  new_password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/change_password\",\n    current_password,\n    new_password,\n  });\n\nexport const adminChangePassword = (\n  hass: HomeAssistant,\n  userId: string,\n  password: string\n) =>\n  hass.callWS<undefined>({\n    type: \"config/auth_provider/homeassistant/admin_change_password\",\n    user_id: userId,\n    password,\n  });\n\nexport const adminChangeUsername = (\n  hass: HomeAssistant,\n  userId: string,\n  username: string\n) =>\n  hass.callWS<undefined>({\n    type: \"config/auth_provider/homeassistant/admin_change_username\",\n    user_id: userId,\n    username,\n  });\n\nexport const deleteAllRefreshTokens = (\n  hass: HomeAssistant,\n  token_type?: RefreshTokenType,\n  delete_current_token?: boolean\n) =>\n  hass.callWS({\n    type: \"auth/delete_all_refresh_tokens\",\n    token_type,\n    delete_current_token,\n  });\n"],"names":["stateActive","stateObj","state","domain","computeDomain","entity_id","compareState","undefined","includes","UNAVAILABLE","isUnavailableState","OFF","MANUAL_SCHEMA","name","required","selector","text","INCLUDE_DOMAINS","EMPTY_FORM","HaMediaSelector","LitElement","_hasAccept","this","media","accept","length","willUpdate","changedProps","has","_contextEntities","ensureArray","context","filter_entity","thumbnail","value","metadata","oldThumbnail","get","startsWith","_thumbnailUrl","getSignedPath","hass","then","signedPath","path","brandsUrl","extractDomainFromBrandUrl","type","useFallback","darkOptimized","themes","darkMode","render","entityId","_getActiveEntityId","states","supportsBrowse","supportsFeature","MediaPlayerEntityFeature","html","nothing","label","localize","disabled","helper","_entityChanged","media_content_id","title","_pickMedia","_handleKeyDown","classMap","media_class","MediaClassBrowserSettings","children_media_class","icon","_computeLabelCallback","_computeHelperCallback","ev","stopPropagation","fireEvent","media_content_type","browse_entity_id","detail","showMediaBrowserDialog","action","navigateIds","defaultId","defaultType","mediaPickedCallback","pickedMedia","item","map","id","metaId","key","preventDefault","args","schema","styles","css","attribute","Boolean","reflect","element","dialogParams","dialogTag","dialogImport","autocompleteLoginFields","field","autocomplete","autofocus","callWS"],"mappings":"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"}