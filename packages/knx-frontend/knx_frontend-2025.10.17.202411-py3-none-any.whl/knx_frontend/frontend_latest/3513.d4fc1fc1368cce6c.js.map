{"version":3,"file":"3513.d4fc1fc1368cce6c.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-qr-code.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-qr-code.ts"],"sourcesContent":["import type { PropertyValues } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport QRCode from \"qrcode\";\nimport \"./ha-alert\";\nimport { rgb2hex } from \"../common/color/convert-color\";\n\n@customElement(\"ha-qr-code\")\nexport class HaQrCode extends LitElement {\n  @property() public data?: string;\n\n  @property({ attribute: \"error-correction-level\" })\n  public errorCorrectionLevel: \"low\" | \"medium\" | \"quartile\" | \"high\" =\n    \"medium\";\n\n  @property({ type: Number })\n  public width = 4;\n\n  @property({ type: Number })\n  public scale = 4;\n\n  @property({ type: Number })\n  public margin = 4;\n\n  @property({ attribute: false, type: Number })\n  public maskPattern?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n  @property({ attribute: \"center-image\" }) public centerImage?: string;\n\n  @state() private _error?: string;\n\n  @query(\"canvas\") private _canvas?: HTMLCanvasElement;\n\n  protected willUpdate(changedProperties: PropertyValues): void {\n    super.willUpdate(changedProperties);\n    if (\n      (changedProperties.has(\"data\") ||\n        changedProperties.has(\"scale\") ||\n        changedProperties.has(\"width\") ||\n        changedProperties.has(\"margin\") ||\n        changedProperties.has(\"maskPattern\") ||\n        changedProperties.has(\"errorCorrectionLevel\")) &&\n      this._error\n    ) {\n      this._error = undefined;\n    }\n  }\n\n  updated(changedProperties: PropertyValues) {\n    const canvas = this._canvas;\n    if (\n      canvas &&\n      this.data &&\n      (changedProperties.has(\"data\") ||\n        changedProperties.has(\"scale\") ||\n        changedProperties.has(\"width\") ||\n        changedProperties.has(\"margin\") ||\n        changedProperties.has(\"maskPattern\") ||\n        changedProperties.has(\"errorCorrectionLevel\") ||\n        changedProperties.has(\"centerImage\"))\n    ) {\n      const computedStyles = getComputedStyle(this);\n      const textRgb = computedStyles.getPropertyValue(\n        \"--rgb-primary-text-color\"\n      );\n      const backgroundRgb = computedStyles.getPropertyValue(\n        \"--rgb-card-background-color\"\n      );\n      const textHex = rgb2hex(\n        textRgb.split(\",\").map((a) => parseInt(a, 10)) as [\n          number,\n          number,\n          number,\n        ]\n      );\n      const backgroundHex = rgb2hex(\n        backgroundRgb.split(\",\").map((a) => parseInt(a, 10)) as [\n          number,\n          number,\n          number,\n        ]\n      );\n\n      QRCode.toCanvas(canvas, this.data, {\n        errorCorrectionLevel:\n          this.errorCorrectionLevel || (this.centerImage ? \"Q\" : \"M\"),\n        width: this.width,\n        scale: this.scale,\n        margin: this.margin,\n        maskPattern: this.maskPattern,\n        color: {\n          light: backgroundHex,\n          dark: textHex,\n        },\n      }).catch((err) => {\n        this._error = err.message;\n      });\n\n      if (this.centerImage) {\n        const context = this._canvas!.getContext(\"2d\");\n        const imageObj = new Image();\n        imageObj.src = this.centerImage;\n        imageObj.onload = () => {\n          context?.drawImage(\n            imageObj,\n            canvas.width * 0.375,\n            canvas.height * 0.375,\n            canvas.width / 4,\n            canvas.height / 4\n          );\n        };\n      }\n    }\n  }\n\n  render() {\n    if (!this.data) {\n      return nothing;\n    }\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n    return html`<canvas></canvas>`;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-qr-code\": HaQrCode;\n  }\n}\n","import { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { QRCodeSelector } from \"../../data/selector\";\nimport \"../ha-qr-code\";\n\n@customElement(\"ha-selector-qr_code\")\nexport class HaSelectorQRCode extends LitElement {\n  @property({ attribute: false }) public selector!: QRCodeSelector;\n\n  protected render() {\n    return html`<ha-qr-code\n      .data=${this.selector.qr_code?.data}\n      .scale=${this.selector.qr_code?.scale}\n      .errorCorrectionLevel=${this.selector.qr_code?.error_correction_level}\n      .centerImage=${this.selector.qr_code?.center_image}\n    ></ha-qr-code>`;\n  }\n\n  static styles = css`\n    ha-qr-code {\n      text-align: center;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-qr_code\": HaSelectorQRCode;\n  }\n}\n"],"names":["HaQrCode","LitElement","willUpdate","changedProperties","super","has","_error","this","undefined","updated","canvas","_canvas","data","computedStyles","getComputedStyle","textRgb","getPropertyValue","backgroundRgb","textHex","rgb2hex","split","map","a","parseInt","backgroundHex","QRCode","errorCorrectionLevel","centerImage","width","scale","margin","maskPattern","color","light","dark","catch","err","message","context","getContext","imageObj","Image","src","onload","drawImage","height","render","html","nothing","args","styles","css","attribute","type","Number","HaSelectorQRCode","selector","qr_code","error_correction_level","center_image"],"mappings":"sOAQO,MAAPA,UAAAC,EAAAA,GAyBYC,UAAAA,CAAAC,GACRC,MAAAF,WAAAC,IACAA,EAAAE,IAAA,SAAAF,EAAAE,IAAA,UAAAF,EAAAE,IAAA,UAAAF,EAAAE,IAAA,WAAAF,EAAAE,IAAA,gBAAAF,EAAAE,IAAA,+BAAAC,SASEC,KAAAD,YAAAE,EAEJ,CAEAC,OAAAA,CAAAN,GACE,MAAAO,EAAA,KAAAC,QACA,GAAAD,GAAA,KAAAE,OAAAT,EAAAE,IAAA,SAAAF,EAAAE,IAAA,UAAAF,EAAAE,IAAA,UAAAF,EAAAE,IAAA,WAAAF,EAAAE,IAAA,gBAAAF,EAAAE,IAAA,yBAAAF,EAAAE,IAAA,iBAWE,MAAAQ,EAAAC,iBAAA,MACAC,EAAAF,EAAAG,iBAAA,4BAGAC,EAAAJ,EAAAG,iBAAA,+BAGAE,GAAAC,EAAAA,EAAAA,IAAAJ,EAAAK,MAAA,KAAAC,KAAAC,GAAAC,SAAAD,EAAA,OAOAE,GAAAL,EAAAA,EAAAA,IAAAF,EAAAG,MAAA,KAAAC,KAAAC,GAAAC,SAAAD,EAAA,OAuBA,GAfAG,EAAAA,SAAAf,EAAA,KAAAE,KAAA,CACEc,qBAAA,KAAAA,uBAAA,KAAAC,YAAA,SAEAC,MAAA,KAAAA,MACAC,MAAA,KAAAA,MACAC,OAAA,KAAAA,OACAC,YAAA,KAAAA,YACAC,MAAA,CACEC,MAAAT,EACAU,KAAAhB,KAEJiB,OAAAC,IACE7B,KAAAD,OAAA8B,EAAAC,OAAA,IAGE9B,KAAJoB,YAAA,CACE,MAAAW,EAAA,KAAA3B,QAAA4B,WAAA,MACAC,EAAA,IAAAC,MACAD,EAAAE,IAAA,KAAAf,YACAa,EAAAG,OAAA,KACEL,GAAAM,UAAAJ,EAAA,KAAA9B,EAAAkB,MAAA,KAAAlB,EAAAmC,OAAAnC,EAAAkB,MAAA,EAAAlB,EAAAmC,OAAA,GAQJ,CACF,CACF,CAEAC,MAAAA,GACE,OAAKvC,KAALK,KAGIL,KAAJD,OACEyC,EAAAA,EAAA,qCAAAzC,oBAEFyC,EAAAA,EAAA,oBALEC,EAAAA,EAMJ,C,kBAnHK,SAAAC,GAAA,KAAAvB,qBAAA,cAAAE,MAAA,OAAAC,MAAA,OAAAC,OAAA,C,EAAM9B,EAAAkD,OAAAC,EAAAA,EAAA;;;;yFAGCC,UAAA,4B,uEAIAC,KAAAC,U,wDAGAD,KAAAC,U,wDAGAD,KAAAC,U,yDAGAF,WAAA,EAAkBC,KAAAC,U,8DAGlBF,UAAA,kB,2TCrBP,MAAPG,UAAAtD,EAAAA,GAGY6C,MAAAA,GACR,OAAAC,EAAAA,EAAA;cACQ,KAAAS,SAAAC,SAAA7C;eACC,KAAA4C,SAAAC,SAAA5B;8BACe,KAAA2B,SAAAC,SAAAC;qBACT,KAAAF,SAAAC,SAAAE;mBAEjB,EAVWJ,EAAAL,OAAAC,EAAAA,EAAA;;;;gCACCC,WAAA,K"}