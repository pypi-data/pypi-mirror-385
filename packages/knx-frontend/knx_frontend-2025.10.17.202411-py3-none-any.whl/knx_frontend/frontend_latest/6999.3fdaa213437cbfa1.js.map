{"version":3,"file":"6999.3fdaa213437cbfa1.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/compute_state_name.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-stt-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-stt.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/stt.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateNameFromEntityAttributes = (\n  entityId: string,\n  attributes: Record<string, any>\n): string =>\n  attributes.friendly_name === undefined\n    ? computeObjectId(entityId).replace(/_/g, \" \")\n    : (attributes.friendly_name ?? \"\").toString();\n\nexport const computeStateName = (stateObj: HassEntity): string =>\n  computeStateNameFromEntityAttributes(stateObj.entity_id, stateObj.attributes);\n","import type { PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stopPropagation } from \"../common/dom/stop_propagation\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\nimport type { STTEngine } from \"../data/stt\";\nimport { listSTTEngines } from \"../data/stt\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-list-item\";\nimport \"./ha-select\";\nimport type { HaSelect } from \"./ha-select\";\nimport { computeDomain } from \"../common/entity/compute_domain\";\n\nconst NONE = \"__NONE_OPTION__\";\n\n@customElement(\"ha-stt-picker\")\nexport class HaSTTPicker extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public language?: string;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @state() _engines?: STTEngine[];\n\n  protected render() {\n    if (!this._engines) {\n      return nothing;\n    }\n\n    let value = this.value;\n    if (!value && this.required) {\n      for (const entity of Object.values(this.hass.entities)) {\n        if (\n          entity.platform === \"cloud\" &&\n          computeDomain(entity.entity_id) === \"stt\"\n        ) {\n          value = entity.entity_id;\n          break;\n        }\n      }\n\n      if (!value) {\n        for (const sttEngine of this._engines) {\n          if (sttEngine?.supported_languages?.length !== 0) {\n            value = sttEngine.engine_id;\n            break;\n          }\n        }\n      }\n    }\n    if (!value) {\n      value = NONE;\n    }\n\n    return html`\n      <ha-select\n        .label=${this.label ||\n        this.hass!.localize(\"ui.components.stt-picker.stt\")}\n        .value=${value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        @selected=${this._changed}\n        @closed=${stopPropagation}\n        fixedMenuPosition\n        naturalMenuWidth\n      >\n        ${!this.required\n          ? html`<ha-list-item .value=${NONE}>\n              ${this.hass!.localize(\"ui.components.stt-picker.none\")}\n            </ha-list-item>`\n          : nothing}\n        ${this._engines.map((engine) => {\n          if (engine.deprecated && engine.engine_id !== value) {\n            return nothing;\n          }\n          let label: string;\n          if (engine.engine_id.includes(\".\")) {\n            const stateObj = this.hass!.states[engine.engine_id];\n            label = stateObj ? computeStateName(stateObj) : engine.engine_id;\n          } else {\n            label = engine.name || engine.engine_id;\n          }\n          return html`<ha-list-item\n            .value=${engine.engine_id}\n            .disabled=${engine.supported_languages?.length === 0}\n          >\n            ${label}\n          </ha-list-item>`;\n        })}\n      </ha-select>\n    `;\n  }\n\n  protected willUpdate(changedProperties: PropertyValues<this>): void {\n    super.willUpdate(changedProperties);\n    if (!this.hasUpdated) {\n      this._updateEngines();\n    } else if (changedProperties.has(\"language\")) {\n      this._debouncedUpdateEngines();\n    }\n  }\n\n  private _debouncedUpdateEngines = debounce(() => this._updateEngines(), 500);\n\n  private async _updateEngines() {\n    this._engines = (\n      await listSTTEngines(\n        this.hass,\n        this.language,\n        this.hass.config.country || undefined\n      )\n    ).providers;\n\n    if (!this.value) {\n      return;\n    }\n\n    const selectedEngine = this._engines.find(\n      (engine) => engine.engine_id === this.value\n    );\n\n    fireEvent(this, \"supported-languages-changed\", {\n      value: selectedEngine?.supported_languages,\n    });\n\n    if (!selectedEngine || selectedEngine.supported_languages?.length === 0) {\n      this.value = undefined;\n      fireEvent(this, \"value-changed\", { value: this.value });\n    }\n  }\n\n  static styles = css`\n    ha-select {\n      width: 100%;\n    }\n  `;\n\n  private _changed(ev): void {\n    const target = ev.target as HaSelect;\n    if (\n      !this.hass ||\n      target.value === \"\" ||\n      target.value === this.value ||\n      (this.value === undefined && target.value === NONE)\n    ) {\n      return;\n    }\n    this.value = target.value === NONE ? undefined : target.value;\n    fireEvent(this, \"value-changed\", { value: this.value });\n    fireEvent(this, \"supported-languages-changed\", {\n      value: this._engines!.find((engine) => engine.engine_id === this.value)\n        ?.supported_languages,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-stt-picker\": HaSTTPicker;\n  }\n}\n","import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { STTSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-stt-picker\";\n\n@customElement(\"ha-selector-stt\")\nexport class HaSTTSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: STTSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    language?: string;\n  };\n\n  protected render() {\n    return html`<ha-stt-picker\n      .hass=${this.hass}\n      .value=${this.value}\n      .label=${this.label}\n      .helper=${this.helper}\n      .language=${this.selector.stt?.language || this.context?.language}\n      .disabled=${this.disabled}\n      .required=${this.required}\n    ></ha-stt-picker>`;\n  }\n\n  static styles = css`\n    ha-stt-picker {\n      width: 100%;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-stt\": HaSTTSelector;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\n\nexport interface SpeechMetadata {\n  language: string;\n  format: \"wav\" | \"ogg\";\n  codec: \"pcm\" | \"opus\";\n  bit_rate: 8 | 16 | 24 | 32;\n  sample_rate:\n    | 8000\n    | 11000\n    | 16000\n    | 18900\n    | 22000\n    | 32000\n    | 37800\n    | 44100\n    | 48000;\n  channel: 1 | 2;\n}\n\nexport interface STTEngine {\n  engine_id: string;\n  supported_languages?: string[];\n  name?: string;\n  deprecated: boolean;\n}\n\nexport const listSTTEngines = (\n  hass: HomeAssistant,\n  language?: string,\n  country?: string\n): Promise<{ providers: STTEngine[] }> =>\n  hass.callWS({\n    type: \"stt/engine/list\",\n    language,\n    country,\n  });\n"],"names":["computeStateName","stateObj","computeStateNameFromEntityAttributes","entityId","entity_id","undefined","attributes","friendly_name","computeObjectId","replace","toString","NONE","HaSTTPicker","LitElement","render","this","_engines","nothing","value","required","entity","Object","values","hass","entities","platform","computeDomain","sttEngine","supported_languages","length","engine_id","html","label","localize","disabled","_changed","stopPropagation","map","engine","deprecated","includes","states","name","willUpdate","changedProperties","super","hasUpdated","has","_debouncedUpdateEngines","_updateEngines","listSTTEngines","language","config","country","providers","selectedEngine","find","fireEvent","ev","target","args","debounce","styles","css","attribute","type","Boolean","reflect","HaSTTSelector","helper","selector","stt","context","callWS"],"mappings":"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"}