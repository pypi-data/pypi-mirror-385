{"version":3,"file":"3656.682a5769aa2ac139.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-dialog-date-picker.ts"],"sourcesContent":["import \"app-datepicker\";\nimport { format } from \"date-fns\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { nextRender } from \"../common/util/render-status\";\nimport { haStyleDialog } from \"../resources/styles\";\nimport type { HomeAssistant } from \"../types\";\nimport type { DatePickerDialogParams } from \"./ha-date-input\";\nimport \"./ha-dialog\";\nimport \"./ha-button\";\n\n@customElement(\"ha-dialog-date-picker\")\nexport class HaDialogDatePicker extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public value?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property() public label?: string;\n\n  @state() private _params?: DatePickerDialogParams;\n\n  @state() private _value?: string;\n\n  public async showDialog(params: DatePickerDialogParams): Promise<void> {\n    // app-datepicker has a bug, that it removes its handlers when disconnected, but doesn't add them back when reconnected.\n    // So we need to wait for the next render to make sure the element is removed and re-created so the handlers are added.\n    await nextRender();\n    this._params = params;\n    this._value = params.value;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  render() {\n    if (!this._params) {\n      return nothing;\n    }\n    return html`<ha-dialog open @closed=${this.closeDialog}>\n      <app-datepicker\n        .value=${this._value}\n        .min=${this._params.min}\n        .max=${this._params.max}\n        .locale=${this._params.locale}\n        @datepicker-value-updated=${this._valueChanged}\n        .firstDayOfWeek=${this._params.firstWeekday}\n      ></app-datepicker>\n      ${this._params.canClear\n        ? html`<ha-button\n            slot=\"secondaryAction\"\n            @click=${this._clear}\n            variant=\"danger\"\n            appearance=\"plain\"\n          >\n            ${this.hass.localize(\"ui.dialogs.date-picker.clear\")}\n          </ha-button>`\n        : nothing}\n      <ha-button\n        appearance=\"plain\"\n        slot=\"secondaryAction\"\n        @click=${this._setToday}\n      >\n        ${this.hass.localize(\"ui.dialogs.date-picker.today\")}\n      </ha-button>\n      <ha-button\n        appearance=\"plain\"\n        slot=\"primaryAction\"\n        dialogaction=\"cancel\"\n        class=\"cancel-btn\"\n      >\n        ${this.hass.localize(\"ui.common.cancel\")}\n      </ha-button>\n      <ha-button slot=\"primaryAction\" @click=${this._setValue}>\n        ${this.hass.localize(\"ui.common.ok\")}\n      </ha-button>\n    </ha-dialog>`;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this._value = ev.detail.value;\n  }\n\n  private _clear() {\n    this._params?.onChange(undefined);\n    this.closeDialog();\n  }\n\n  private _setToday() {\n    const today = new Date();\n    this._value = format(today, \"yyyy-MM-dd\");\n  }\n\n  private _setValue() {\n    if (!this._value) {\n      // Date picker opens to today if value is undefined. If user click OK\n      // without changing the date, should return todays date, not undefined.\n      this._setToday();\n    }\n    this._params?.onChange(this._value!);\n    this.closeDialog();\n  }\n\n  static styles = [\n    haStyleDialog,\n    css`\n      ha-dialog {\n        --dialog-content-padding: 0;\n        --justify-action-buttons: space-between;\n      }\n      app-datepicker {\n        --app-datepicker-accent-color: var(--primary-color);\n        --app-datepicker-bg-color: transparent;\n        --app-datepicker-color: var(--primary-text-color);\n        --app-datepicker-disabled-day-color: var(--disabled-text-color);\n        --app-datepicker-focused-day-color: var(--text-primary-color);\n        --app-datepicker-focused-year-bg-color: var(--primary-color);\n        --app-datepicker-selector-color: var(--secondary-text-color);\n        --app-datepicker-separator-color: var(--divider-color);\n        --app-datepicker-weekday-color: var(--secondary-text-color);\n      }\n      app-datepicker::part(calendar-day):focus {\n        outline: none;\n      }\n      app-datepicker::part(body) {\n        direction: ltr;\n      }\n      @media all and (min-width: 450px) {\n        ha-dialog {\n          --mdc-dialog-min-width: 300px;\n        }\n      }\n      @media all and (max-width: 450px), all and (max-height: 500px) {\n        app-datepicker {\n          width: 100%;\n        }\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog-date-picker\": HaDialogDatePicker;\n  }\n}\n"],"names":["HaDialogDatePicker","LitElement","showDialog","params","nextRender","this","_params","_value","value","closeDialog","undefined","fireEvent","dialog","localName","render","html","min","max","locale","_valueChanged","firstWeekday","canClear","_clear","hass","localize","nothing","_setToday","_setValue","ev","detail","onChange","today","Date","format","args","disabled","styles","haStyleDialog","css","attribute","type","Boolean"],"mappings":"iWAaO,MAAPA,UAAAC,EAAAA,GAaE,gBAAAC,CAAAC,SAGEC,EAAAA,EAAAA,KACAC,KAAAC,QAAAH,EACAE,KAAAE,OAAAJ,EAAAK,KACF,CAEOC,WAAAA,GACLJ,KAAAC,aAAAI,GACAC,EAAAA,EAAAA,GAAA,sBAAmCC,OAAA,KAAAC,WACrC,CAEAC,MAAAA,GACE,OAAKT,KAALC,QAGAS,EAAAA,EAAA,gCAAAN;;iBAEW,KAAAF;eACF,KAAAD,QAAAU;eACA,KAAAV,QAAAW;kBACG,KAAAX,QAAAY;oCACkB,KAAAC;0BACV,KAAAb,QAAAc;;QAElB,KAAAd,QAAAe,SAAAN,EAAAA,EAAA;;qBAGa,KAAAO;;;;cAIP,KAAAC,KAAAC,SAAA;wBACUC,EAAAA;;;;iBAKP,KAAAC;;UAEP,KAAAH,KAAAC,SAAA;;;;;;;;UAQA,KAAAD,KAAAC,SAAA;;+CAEqC,KAAAG;UACrC,KAAAJ,KAAAC,SAAA;;kBArCFC,EAAAA,EAwCJ,CAEQN,aAAAA,CAAAS,GACNvB,KAAAE,OAAAqB,EAAAC,OAAArB,KACF,CAEQc,MAAAA,GACNjB,KAAAC,SAAAwB,cAAApB,GACAL,KAAAI,aACF,CAEQiB,SAAAA,GACN,MAAAK,EAAA,IAAAC,KACA3B,KAAAE,QAAA0B,EAAAA,EAAAA,IAAAF,EAAA,aACF,CAEQJ,SAAAA,GACDtB,KAALE,QAGEF,KAAAqB,YAEFrB,KAAAC,SAAAwB,SAAAzB,KAAAE,QACAF,KAAAI,aACF,C,kBA5FK,SAAAyB,GAAA,KAAAC,UAAA,C,EAAMnC,EAAAoC,OAAA,CA+FTC,EAAAA,GACAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCA/FUC,WAAA,K,iHAIAC,KAAAC,W"}