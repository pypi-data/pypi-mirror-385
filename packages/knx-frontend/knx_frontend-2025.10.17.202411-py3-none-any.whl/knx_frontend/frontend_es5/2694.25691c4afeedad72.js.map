{"version":3,"file":"2694.25691c4afeedad72.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/array/ensure-array.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/config/is_component_loaded.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/decorators/restore-scroll.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/util/throttle.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-button-arrow-prev.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/persistent_notification.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-menu-button.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-svg-icon.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/config/can_show_page.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-ripple.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tab.ts","webpack://knx-frontend/./homeassistant-frontend/src/layouts/hass-tabs-subpage.ts","webpack://knx-frontend/./homeassistant-frontend/src/resources/styles.ts"],"sourcesContent":["type NonNullUndefined<T> = T extends undefined\n  ? never\n  : T extends null\n    ? never\n    : T;\n\n/**\n * Ensure that the input is an array or wrap it in an array\n * @param value - The value to ensure is an array\n */\nexport function ensureArray(value: undefined): undefined;\nexport function ensureArray(value: null): null;\nexport function ensureArray<T>(\n  value: T | T[] | readonly T[]\n): NonNullUndefined<T>[];\nexport function ensureArray(value) {\n  if (value === undefined || value === null || Array.isArray(value)) {\n    return value;\n  }\n  return [value];\n}\n","import type { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport const isComponentLoaded = (\n  hass: HomeAssistant,\n  component: string\n): boolean => hass && hass.config.components.includes(component);\n","import type { ReactiveElement } from \"lit\";\nimport { throttle } from \"../util/throttle\";\n\nconst throttleReplaceState = throttle((value) => {\n  history.replaceState({ scrollPosition: value }, \"\");\n}, 300);\n\nexport function restoreScroll(selector: string) {\n  return <ElemClass extends ReactiveElement>(\n    proto: ElemClass,\n    propertyKey: string\n  ) => {\n    if (typeof propertyKey === \"object\") {\n      throw new Error(\"This decorator does not support this compilation type.\");\n    }\n\n    const connectedCallback = proto.connectedCallback;\n    proto.connectedCallback = function () {\n      connectedCallback.call(this);\n\n      const scrollPos = this[propertyKey];\n\n      if (scrollPos) {\n        this.updateComplete.then(() => {\n          const target = this.renderRoot.querySelector(selector);\n          if (!target) {\n            return;\n          }\n          setTimeout(() => {\n            target.scrollTop = scrollPos;\n          }, 0);\n        });\n      }\n    };\n\n    const descriptor = Object.getOwnPropertyDescriptor(proto, propertyKey);\n    let newDescriptor: PropertyDescriptor;\n    if (descriptor === undefined) {\n      newDescriptor = {\n        get(this: ReactiveElement) {\n          return (\n            this[`__${String(propertyKey)}`] || history.state?.scrollPosition\n          );\n        },\n        set(this: ReactiveElement, value) {\n          throttleReplaceState(value);\n          this[`__${String(propertyKey)}`] = value;\n        },\n        configurable: true,\n        enumerable: true,\n      };\n    } else {\n      const oldSetter = descriptor.set;\n      newDescriptor = {\n        ...descriptor,\n        set(this: ReactiveElement, value) {\n          throttleReplaceState(value);\n          this[`__${String(propertyKey)}`] = value;\n          oldSetter?.call(this, value);\n        },\n      };\n    }\n    Object.defineProperty(proto, propertyKey, newDescriptor);\n  };\n}\n","// From: underscore.js https://github.com/jashkenas/underscore/blob/master/underscore.js\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `false for leading`. To disable execution on the trailing edge, ditto.\nexport const throttle = <T extends any[]>(\n  func: (...args: T) => void,\n  wait: number,\n  leading = true,\n  trailing = true\n) => {\n  let timeout: number | undefined;\n  let previous = 0;\n  const throttledFunc = (...args: T): void => {\n    const later = () => {\n      previous = leading === false ? 0 : Date.now();\n      timeout = undefined;\n      func(...args);\n    };\n    const now = Date.now();\n    if (!previous && leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      previous = now;\n      func(...args);\n    } else if (!timeout && trailing !== false) {\n      timeout = window.setTimeout(later, remaining);\n    }\n  };\n  throttledFunc.cancel = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n    previous = 0;\n  };\n  return throttledFunc;\n};\n","import { mdiArrowLeft, mdiArrowRight } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-icon-button-arrow-prev\")\nexport class HaIconButtonArrowPrev extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property() public label?: string;\n\n  @state() private _icon =\n    mainWindow.document.dir === \"rtl\" ? mdiArrowRight : mdiArrowLeft;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-icon-button\n        .disabled=${this.disabled}\n        .label=${this.label || this.hass?.localize(\"ui.common.back\") || \"Back\"}\n        .path=${this._icon}\n      ></ha-icon-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button-arrow-prev\": HaIconButtonArrowPrev;\n  }\n}\n","import \"@material/mwc-icon-button\";\nimport type { IconButton } from \"@material/mwc-icon-button\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-icon-button\")\nexport class HaIconButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  // SVG icon path (if you need a non SVG icon instead, use the provided slot to pass an <ha-icon> in)\n  @property({ type: String }) path?: string;\n\n  // Label that is used for ARIA support and as tooltip\n  @property({ type: String }) label?: string;\n\n  // These should always be set as properties, not attributes,\n  // so that only the <button> element gets the attribute\n  @property({ type: String, attribute: \"aria-haspopup\" })\n  override ariaHasPopup!: IconButton[\"ariaHasPopup\"];\n\n  @property({ attribute: \"hide-title\", type: Boolean }) hideTitle = false;\n\n  @query(\"mwc-icon-button\", true) private _button?: IconButton;\n\n  public override focus() {\n    this._button?.focus();\n  }\n\n  static shadowRootOptions: ShadowRootInit = {\n    mode: \"open\",\n    delegatesFocus: true,\n  };\n\n  protected render(): TemplateResult {\n    return html`\n      <mwc-icon-button\n        aria-label=${ifDefined(this.label)}\n        title=${ifDefined(this.hideTitle ? undefined : this.label)}\n        aria-haspopup=${ifDefined(this.ariaHasPopup)}\n        .disabled=${this.disabled}\n      >\n        ${this.path\n          ? html`<ha-svg-icon .path=${this.path}></ha-svg-icon>`\n          : html`<slot></slot>`}\n      </mwc-icon-button>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      outline: none;\n    }\n    :host([disabled]) {\n      pointer-events: none;\n    }\n    mwc-icon-button {\n      --mdc-theme-on-primary: currentColor;\n      --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button\": HaIconButton;\n  }\n}\n","import type {\n  Connection,\n  HassEntity,\n  UnsubscribeFunc,\n} from \"home-assistant-js-websocket\";\n\nexport interface PersitentNotificationEntity extends HassEntity {\n  notification_id?: string;\n  created_at?: string;\n  title?: string;\n  message?: string;\n}\n\nexport interface PersistentNotification {\n  created_at: string;\n  message: string;\n  notification_id: string;\n  title: string;\n  status: \"read\" | \"unread\";\n}\n\nexport type PersistentNotifications = Record<string, PersistentNotification>;\n\nexport interface PersistentNotificationMessage {\n  type: \"added\" | \"removed\" | \"current\" | \"updated\";\n  notifications: PersistentNotifications;\n}\n\nexport const subscribeNotifications = (\n  conn: Connection,\n  onChange: (notifications: PersistentNotification[]) => void\n): UnsubscribeFunc => {\n  const params = {\n    type: \"persistent_notification/subscribe\",\n  };\n  const stream = new NotificationStream();\n  const subscription = conn.subscribeMessage<PersistentNotificationMessage>(\n    (message) => onChange(stream.processMessage(message)),\n    params\n  );\n  return () => {\n    subscription.then((unsub) => unsub?.());\n  };\n};\n\nclass NotificationStream {\n  notifications: PersistentNotifications;\n\n  constructor() {\n    this.notifications = {};\n  }\n\n  processMessage(\n    streamMessage: PersistentNotificationMessage\n  ): PersistentNotification[] {\n    if (streamMessage.type === \"removed\") {\n      for (const notificationId of Object.keys(streamMessage.notifications)) {\n        delete this.notifications[notificationId];\n      }\n    } else {\n      this.notifications = {\n        ...this.notifications,\n        ...streamMessage.notifications,\n      };\n    }\n    return Object.values(this.notifications);\n  }\n}\n","import { mdiMenu } from \"@mdi/js\";\nimport type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { subscribeNotifications } from \"../data/persistent_notification\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-menu-button\")\nclass HaMenuButton extends LitElement {\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _hasNotifications = false;\n\n  @state() private _show = false;\n\n  private _alwaysVisible = false;\n\n  private _attachNotifOnConnect = false;\n\n  private _unsubNotifications?: UnsubscribeFunc;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this._attachNotifOnConnect) {\n      this._attachNotifOnConnect = false;\n      this._subscribeNotifications();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubNotifications) {\n      this._attachNotifOnConnect = true;\n      this._unsubNotifications();\n      this._unsubNotifications = undefined;\n    }\n  }\n\n  protected render() {\n    if (!this._show) {\n      return nothing;\n    }\n    const hasNotifications =\n      this._hasNotifications &&\n      (this.narrow || this.hass.dockedSidebar === \"always_hidden\");\n    return html`\n      <ha-icon-button\n        .label=${this.hass.localize(\"ui.sidebar.sidebar_toggle\")}\n        .path=${mdiMenu}\n        @click=${this._toggleMenu}\n      ></ha-icon-button>\n      ${hasNotifications ? html`<div class=\"dot\"></div>` : \"\"}\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    if (!this.hassio) {\n      return;\n    }\n    // This component is used on Hass.io too, but Hass.io might run the UI\n    // on older frontends too, that don't have an always visible menu button\n    // in the sidebar.\n    this._alwaysVisible =\n      (Number((window.parent as any).frontendVersion) || 0) < 20190710;\n  }\n\n  protected willUpdate(changedProps) {\n    super.willUpdate(changedProps);\n\n    if (!changedProps.has(\"narrow\") && !changedProps.has(\"hass\")) {\n      return;\n    }\n\n    const oldHass = changedProps.has(\"hass\")\n      ? (changedProps.get(\"hass\") as HomeAssistant | undefined)\n      : this.hass;\n    const oldNarrow = changedProps.has(\"narrow\")\n      ? (changedProps.get(\"narrow\") as boolean | undefined)\n      : this.narrow;\n\n    const oldShowButton =\n      oldNarrow || oldHass?.dockedSidebar === \"always_hidden\";\n    const showButton =\n      this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n\n    if (this.hasUpdated && oldShowButton === showButton) {\n      return;\n    }\n\n    this._show = showButton || this._alwaysVisible;\n\n    if (!showButton) {\n      if (this._unsubNotifications) {\n        this._unsubNotifications();\n        this._unsubNotifications = undefined;\n      }\n      return;\n    }\n\n    this._subscribeNotifications();\n  }\n\n  private _subscribeNotifications() {\n    if (this._unsubNotifications) {\n      throw new Error(\"Already subscribed\");\n    }\n    this._unsubNotifications = subscribeNotifications(\n      this.hass.connection,\n      (notifications) => {\n        this._hasNotifications = notifications.length > 0;\n      }\n    );\n  }\n\n  private _toggleMenu(): void {\n    fireEvent(this, \"hass-toggle-menu\");\n  }\n\n  static styles = css`\n    :host {\n      position: relative;\n    }\n    .dot {\n      pointer-events: none;\n      position: absolute;\n      background-color: var(--accent-color);\n      width: 12px;\n      height: 12px;\n      top: 9px;\n      right: 7px;\n      inset-inline-end: 7px;\n      inset-inline-start: initial;\n      border-radius: 50%;\n      border: 2px solid var(--app-header-background-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-menu-button\": HaMenuButton;\n  }\n}\n","import type { SVGTemplateResult } from \"lit\";\nimport { css, LitElement, nothing, svg } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-svg-icon\")\nexport class HaSvgIcon extends LitElement {\n  @property() public path?: string;\n\n  @property({ attribute: false }) public secondaryPath?: string;\n\n  @property({ attribute: false }) public viewBox?: string;\n\n  protected render(): SVGTemplateResult {\n    return svg`\n    <svg\n      viewBox=${this.viewBox || \"0 0 24 24\"}\n      preserveAspectRatio=\"xMidYMid meet\"\n      focusable=\"false\"\n      role=\"img\"\n      aria-hidden=\"true\"\n    >\n      <g>\n        ${\n          this.path\n            ? svg`<path class=\"primary-path\" d=${this.path}></path>`\n            : nothing\n        }\n        ${\n          this.secondaryPath\n            ? svg`<path class=\"secondary-path\" d=${this.secondaryPath}></path>`\n            : nothing\n        }\n      </g>\n    </svg>`;\n  }\n\n  static styles = css`\n    :host {\n      display: var(--ha-icon-display, inline-flex);\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      vertical-align: middle;\n      fill: var(--icon-primary-color, currentcolor);\n      width: var(--mdc-icon-size, 24px);\n      height: var(--mdc-icon-size, 24px);\n    }\n    svg {\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      display: block;\n    }\n    path.primary-path {\n      opacity: var(--icon-primary-opactity, 1);\n    }\n    path.secondary-path {\n      fill: var(--icon-secondary-color, currentcolor);\n      opacity: var(--icon-secondary-opactity, 0.5);\n    }\n  `;\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-svg-icon\": HaSvgIcon;\n  }\n}\n","import type { PageNavigation } from \"../../layouts/hass-tabs-subpage\";\nimport type { HomeAssistant } from \"../../types\";\nimport { ensureArray } from \"../array/ensure-array\";\nimport { isComponentLoaded } from \"./is_component_loaded\";\n\nexport const canShowPage = (hass: HomeAssistant, page: PageNavigation) =>\n  (isCore(page) || isLoadedIntegration(hass, page)) &&\n  !hideAdvancedPage(hass, page) &&\n  isNotLoadedIntegration(hass, page);\n\nexport const isLoadedIntegration = (\n  hass: HomeAssistant,\n  page: PageNavigation\n) =>\n  !page.component ||\n  ensureArray(page.component).some((integration) =>\n    isComponentLoaded(hass, integration)\n  );\n\nexport const isNotLoadedIntegration = (\n  hass: HomeAssistant,\n  page: PageNavigation\n) =>\n  !page.not_component ||\n  !ensureArray(page.not_component).some((integration) =>\n    isComponentLoaded(hass, integration)\n  );\n\nexport const isCore = (page: PageNavigation) => page.core;\nexport const isAdvancedPage = (page: PageNavigation) => page.advancedOnly;\nexport const userWantsAdvanced = (hass: HomeAssistant) =>\n  hass.userData?.showAdvanced;\nexport const hideAdvancedPage = (hass: HomeAssistant, page: PageNavigation) =>\n  isAdvancedPage(page) && !userWantsAdvanced(hass);\n","import { AttachableController } from \"@material/web/internal/controller/attachable-controller\";\nimport { Ripple } from \"@material/web/ripple/internal/ripple\";\nimport { styles } from \"@material/web/ripple/internal/ripple-styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-ripple\")\nexport class HaRipple extends Ripple {\n  private readonly attachableTouchController = new AttachableController(\n    this,\n    this._onTouchControlChange.bind(this)\n  );\n\n  attach(control: HTMLElement) {\n    super.attach(control);\n    this.attachableTouchController.attach(control);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    // @ts-ignore\n    this.hovered = false;\n    // @ts-ignore\n    this.pressed = false;\n  }\n\n  detach() {\n    super.detach();\n    this.attachableTouchController.detach();\n  }\n\n  private _handleTouchEnd = () => {\n    if (!this.disabled) {\n      // @ts-ignore\n      super.endPressAnimation();\n    }\n  };\n\n  private _onTouchControlChange(\n    prev: HTMLElement | null,\n    next: HTMLElement | null\n  ) {\n    // Add touchend event to clean ripple on touch devices using action handler\n    prev?.removeEventListener(\"touchend\", this._handleTouchEnd);\n    next?.addEventListener(\"touchend\", this._handleTouchEnd);\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --md-ripple-hover-opacity: var(--ha-ripple-hover-opacity, 0.08);\n        --md-ripple-pressed-opacity: var(--ha-ripple-pressed-opacity, 0.12);\n        --md-ripple-hover-color: var(\n          --ha-ripple-hover-color,\n          var(--ha-ripple-color, var(--secondary-text-color))\n        );\n        --md-ripple-pressed-color: var(\n          --ha-ripple-pressed-color,\n          var(--ha-ripple-color, var(--secondary-text-color))\n        );\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-ripple\": HaRipple;\n  }\n}\n","import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport \"./ha-ripple\";\n\n@customElement(\"ha-tab\")\nexport class HaTab extends LitElement {\n  @property({ type: Boolean, reflect: true }) public active = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property() public name?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div\n        tabindex=\"0\"\n        role=\"tab\"\n        aria-selected=${this.active}\n        aria-label=${ifDefined(this.name)}\n        @keydown=${this._handleKeyDown}\n      >\n        ${this.narrow ? html`<slot name=\"icon\"></slot>` : \"\"}\n        <span class=\"name\">${this.name}</span>\n        <ha-ripple></ha-ripple>\n      </div>\n    `;\n  }\n\n  private _handleKeyDown(ev: KeyboardEvent): void {\n    if (ev.key === \"Enter\") {\n      (ev.target as HTMLElement).click();\n    }\n  }\n\n  static styles = css`\n    div {\n      padding: 0 32px;\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n      box-sizing: border-box;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: var(--header-height);\n      cursor: pointer;\n      position: relative;\n      outline: none;\n    }\n\n    .name {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n    }\n\n    :host([active]) {\n      color: var(--primary-color);\n    }\n\n    :host(:not([narrow])[active]) div {\n      border-bottom: 2px solid var(--primary-color);\n    }\n\n    :host([narrow]) {\n      min-width: 0;\n      display: flex;\n      justify-content: center;\n      overflow: hidden;\n    }\n\n    :host([narrow]) div {\n      padding: 0 4px;\n    }\n\n    div:focus-visible:before {\n      position: absolute;\n      display: block;\n      content: \"\";\n      inset: 0;\n      background-color: var(--secondary-text-color);\n      opacity: 0.08;\n    }\n  `;\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tab\": HaTab;\n  }\n}\n","import type { CSSResultGroup, PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, eventOptions, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { canShowPage } from \"../common/config/can_show_page\";\nimport { goBack } from \"../common/navigate\";\nimport { restoreScroll } from \"../common/decorators/restore-scroll\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-svg-icon\";\nimport \"../components/ha-tab\";\nimport { haStyleScrollbar } from \"../resources/styles\";\nimport type { HomeAssistant, Route } from \"../types\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string | string[];\n  name?: string;\n  not_component?: string | string[];\n  core?: boolean;\n  advancedOnly?: boolean;\n  iconPath?: string;\n  description?: string;\n  iconColor?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public supervisor = false;\n\n  @property({ attribute: false }) public localizeFunc?: LocalizeFunc;\n\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  @property({ attribute: false }) public backCallback?: () => void;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public tabs!: PageNavigation[];\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean, reflect: true, attribute: \"is-wide\" })\n  public isWide = false;\n\n  @property({ type: Boolean }) public pane = false;\n\n  /**\n   * Do we need to add padding for a fab.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean, attribute: \"has-fab\" }) public hasFab = false;\n\n  @state() private _activeTab?: PageNavigation;\n\n  // @ts-ignore\n  @restoreScroll(\".content\") private _savedScrollPos?: number;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      _components,\n      _language,\n      _userData,\n      _narrow,\n      localizeFunc\n    ) => {\n      const shownTabs = tabs.filter((page) => canShowPage(this.hass, page));\n\n      if (shownTabs.length < 2) {\n        if (shownTabs.length === 1) {\n          const page = shownTabs[0];\n          return [\n            page.translationKey ? localizeFunc(page.translationKey) : page.name,\n          ];\n        }\n        return [\"\"];\n      }\n\n      return shownTabs.map(\n        (page) => html`\n          <a href=${page.path}>\n            <ha-tab\n              .hass=${this.hass}\n              .active=${page.path === activeTab?.path}\n              .narrow=${this.narrow}\n              .name=${page.translationKey\n                ? localizeFunc(page.translationKey)\n                : page.name}\n            >\n              ${page.iconPath\n                ? html`<ha-svg-icon\n                    slot=\"icon\"\n                    .path=${page.iconPath}\n                  ></ha-svg-icon>`\n                : \"\"}\n            </ha-tab>\n          </a>\n        `\n      );\n    }\n  );\n\n  public willUpdate(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        `${this.route.prefix}${this.route.path}`.includes(tab.path)\n      );\n    }\n    super.willUpdate(changedProperties);\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.config.components,\n      this.hass.language,\n      this.hass.userData,\n      this.narrow,\n      this.localizeFunc || this.hass.localize\n    );\n    const showTabs = tabs.length > 1;\n    return html`\n      <div class=\"toolbar\">\n        <slot name=\"toolbar\">\n          <div class=\"toolbar-content\">\n            ${this.mainPage || (!this.backPath && history.state?.root)\n              ? html`\n                  <ha-menu-button\n                    .hassio=${this.supervisor}\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                `\n              : this.backPath\n                ? html`\n                    <a href=${this.backPath}>\n                      <ha-icon-button-arrow-prev\n                        .hass=${this.hass}\n                      ></ha-icon-button-arrow-prev>\n                    </a>\n                  `\n                : html`\n                    <ha-icon-button-arrow-prev\n                      .hass=${this.hass}\n                      @click=${this._backTapped}\n                    ></ha-icon-button-arrow-prev>\n                  `}\n            ${this.narrow || !showTabs\n              ? html`<div class=\"main-title\">\n                  <slot name=\"header\">${!showTabs ? tabs[0] : \"\"}</slot>\n                </div>`\n              : \"\"}\n            ${showTabs && !this.narrow\n              ? html`<div id=\"tabbar\">${tabs}</div>`\n              : \"\"}\n            <div id=\"toolbar-icon\">\n              <slot name=\"toolbar-icon\"></slot>\n            </div>\n          </div>\n        </slot>\n        ${showTabs && this.narrow\n          ? html`<div id=\"tabbar\" class=\"bottom-bar\">${tabs}</div>`\n          : \"\"}\n      </div>\n      <div\n        class=${classMap({ container: true, tabs: showTabs && this.narrow })}\n      >\n        ${this.pane\n          ? html`<div class=\"pane\">\n              <div class=\"shadow-container\"></div>\n              <div class=\"ha-scrollbar\">\n                <slot name=\"pane\"></slot>\n              </div>\n            </div>`\n          : nothing}\n        <div\n          class=\"content ha-scrollbar ${classMap({ tabs: showTabs })}\"\n          @scroll=${this._saveScrollPos}\n        >\n          <slot></slot>\n          ${this.hasFab ? html`<div class=\"fab-bottom-space\"></div>` : nothing}\n        </div>\n      </div>\n      <div id=\"fab\" class=${classMap({ tabs: showTabs })}>\n        <slot name=\"fab\"></slot>\n      </div>\n    `;\n  }\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  private _backTapped(): void {\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    goBack();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleScrollbar,\n      css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n\n        :host([narrow]) {\n          width: 100%;\n          position: fixed;\n        }\n\n        .container {\n          display: flex;\n          height: calc(\n            100% - var(--header-height, 0px) - var(--safe-area-inset-top, 0px)\n          );\n        }\n\n        ha-menu-button {\n          margin-right: 24px;\n          margin-inline-end: 24px;\n          margin-inline-start: initial;\n        }\n\n        .toolbar {\n          font-size: var(--ha-font-size-xl);\n          height: calc(\n            var(--header-height, 0px) + var(--safe-area-inset-top, 0px)\n          );\n          padding-top: var(--safe-area-inset-top);\n          padding-right: var(--safe-area-inset-right);\n          background-color: var(--sidebar-background-color);\n          font-weight: var(--ha-font-weight-normal);\n          border-bottom: 1px solid var(--divider-color);\n          box-sizing: border-box;\n        }\n        :host([narrow]) .toolbar {\n          padding-left: var(--safe-area-inset-left);\n        }\n        .toolbar-content {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n          height: 100%;\n          box-sizing: border-box;\n        }\n        :host([narrow]) .toolbar-content {\n          padding: 4px;\n        }\n        .toolbar a {\n          color: var(--sidebar-text-color);\n          text-decoration: none;\n        }\n        .bottom-bar a {\n          width: 25%;\n        }\n\n        #tabbar {\n          display: flex;\n          font-size: var(--ha-font-size-m);\n          overflow: hidden;\n        }\n\n        #tabbar > a {\n          overflow: hidden;\n          max-width: 45%;\n        }\n\n        #tabbar.bottom-bar {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          padding: 0 16px;\n          box-sizing: border-box;\n          background-color: var(--sidebar-background-color);\n          border-top: 1px solid var(--divider-color);\n          justify-content: space-around;\n          z-index: 2;\n          font-size: var(--ha-font-size-s);\n          width: 100%;\n          padding-bottom: var(--safe-area-inset-bottom);\n        }\n\n        #tabbar:not(.bottom-bar) {\n          flex: 1;\n          justify-content: center;\n        }\n\n        :host(:not([narrow])) #toolbar-icon {\n          min-width: 40px;\n        }\n\n        ha-menu-button,\n        ha-icon-button-arrow-prev,\n        ::slotted([slot=\"toolbar-icon\"]) {\n          display: flex;\n          flex-shrink: 0;\n          pointer-events: auto;\n          color: var(--sidebar-icon-color);\n        }\n\n        .main-title {\n          flex: 1;\n          max-height: var(--header-height);\n          line-height: var(--ha-line-height-normal);\n          color: var(--sidebar-text-color);\n          margin: var(--main-title-margin, var(--margin-title));\n        }\n\n        .content {\n          position: relative;\n          width: 100%;\n          margin-right: var(--safe-area-inset-right);\n          margin-inline-end: var(--safe-area-inset-right);\n          margin-bottom: var(--safe-area-inset-bottom);\n          overflow: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n        :host([narrow]) .content {\n          margin-left: var(--safe-area-inset-left);\n          margin-inline-start: var(--safe-area-inset-left);\n        }\n        :host([narrow]) .content.tabs {\n          /* Bottom bar reuses header height */\n          margin-bottom: calc(\n            var(--header-height, 0px) + var(--safe-area-inset-bottom, 0px)\n          );\n        }\n\n        .content .fab-bottom-space {\n          height: calc(64px + var(--safe-area-inset-bottom, 0px));\n        }\n\n        :host([narrow]) .content.tabs .fab-bottom-space {\n          height: calc(80px + var(--safe-area-inset-bottom, 0px));\n        }\n\n        #fab {\n          position: fixed;\n          right: calc(16px + var(--safe-area-inset-right, 0px));\n          inset-inline-end: calc(16px + var(--safe-area-inset-right));\n          inset-inline-start: initial;\n          bottom: calc(16px + var(--safe-area-inset-bottom, 0px));\n          z-index: 1;\n          display: flex;\n          flex-wrap: wrap;\n          justify-content: flex-end;\n          gap: 8px;\n        }\n        :host([narrow]) #fab.tabs {\n          bottom: calc(84px + var(--safe-area-inset-bottom, 0px));\n        }\n        #fab[is-wide] {\n          bottom: 24px;\n          right: 24px;\n          inset-inline-end: 24px;\n          inset-inline-start: initial;\n        }\n\n        .pane {\n          border-right: 1px solid var(--divider-color);\n          border-inline-end: 1px solid var(--divider-color);\n          border-inline-start: initial;\n          box-sizing: border-box;\n          display: flex;\n          flex: 0 0 var(--sidepane-width, 250px);\n          width: var(--sidepane-width, 250px);\n          flex-direction: column;\n          position: relative;\n        }\n        .pane .ha-scrollbar {\n          flex: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import { css } from \"lit\";\n\nexport const buttonLinkStyle = css`\n  button.link {\n    background: none;\n    color: inherit;\n    border: none;\n    padding: 0;\n    font: inherit;\n    text-align: left;\n    text-decoration: underline;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport const haStyle = css`\n  :host {\n    font-family: var(--ha-font-family-body);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    font-size: var(--ha-font-size-m);\n    font-weight: var(--ha-font-weight-normal);\n    line-height: var(--ha-line-height-normal);\n  }\n\n  app-header div[sticky] {\n    height: 48px;\n  }\n\n  app-toolbar [main-title] {\n    margin-left: 20px;\n    margin-inline-start: 20px;\n    margin-inline-end: initial;\n  }\n\n  h1 {\n    font-family: var(--ha-font-family-heading);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    font-size: var(--ha-font-size-2xl);\n    font-weight: var(--ha-font-weight-normal);\n    line-height: var(--ha-line-height-condensed);\n  }\n\n  h2 {\n    font-family: var(--ha-font-family-body);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: var(--ha-font-size-xl);\n    font-weight: var(--ha-font-weight-medium);\n    line-height: var(--ha-line-height-normal);\n  }\n\n  h3 {\n    font-family: var(--ha-font-family-body);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    font-size: var(--ha-font-size-l);\n    font-weight: var(--ha-font-weight-normal);\n    line-height: var(--ha-line-height-normal);\n  }\n\n  a {\n    color: var(--primary-color);\n  }\n\n  .secondary {\n    color: var(--secondary-text-color);\n  }\n\n  .error {\n    color: var(--error-color);\n  }\n\n  .warning {\n    color: var(--error-color);\n  }\n\n  ${buttonLinkStyle}\n\n  .card-actions a {\n    text-decoration: none;\n  }\n\n  .card-actions .warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n\n  .layout.horizontal,\n  .layout.vertical {\n    display: flex;\n  }\n  .layout.inline {\n    display: inline-flex;\n  }\n  .layout.horizontal {\n    flex-direction: row;\n  }\n  .layout.vertical {\n    flex-direction: column;\n  }\n  .layout.wrap {\n    flex-wrap: wrap;\n  }\n  .layout.no-wrap {\n    flex-wrap: nowrap;\n  }\n  .layout.center,\n  .layout.center-center {\n    align-items: center;\n  }\n  .layout.bottom {\n    align-items: flex-end;\n  }\n  .layout.center-justified,\n  .layout.center-center {\n    justify-content: center;\n  }\n  .flex {\n    flex: 1;\n    flex-basis: 0.000000001px;\n  }\n  .flex-auto {\n    flex: 1 1 auto;\n  }\n  .flex-none {\n    flex: none;\n  }\n  .layout.justified {\n    justify-content: space-between;\n  }\n`;\n\nexport const haStyleDialog = css`\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px;\n    --mdc-dialog-max-width: min(600px, 95vw);\n    --justify-action-buttons: space-between;\n  }\n\n  ha-dialog .form {\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--primary-color);\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 450px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: 100vw;\n      --mdc-dialog-max-width: 100vw;\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertical-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0;\n    }\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\n\nexport const haStyleScrollbar = css`\n  .ha-scrollbar::-webkit-scrollbar {\n    width: 0.4rem;\n    height: 0.4rem;\n  }\n\n  .ha-scrollbar::-webkit-scrollbar-thumb {\n    -webkit-border-radius: 4px;\n    border-radius: 4px;\n    background: var(--scrollbar-thumb-color);\n  }\n\n  .ha-scrollbar {\n    overflow-y: auto;\n    scrollbar-color: var(--scrollbar-thumb-color) transparent;\n    scrollbar-width: thin;\n  }\n`;\n\nexport const baseEntrypointStyles = css`\n  body {\n    background-color: var(--primary-background-color);\n    color: var(--primary-text-color);\n    height: calc(100vh - 32px);\n    width: 100vw;\n  }\n`;\n"],"names":["ensureArray","value","Array","isArray","isComponentLoaded","hass","component","config","components","includes","throttleReplaceState","throttle","history","replaceState","scrollPosition","restoreScroll","selector","proto","propertyKey","Error","connectedCallback","call","scrollPos","this","updateComplete","then","target","renderRoot","querySelector","setTimeout","scrollTop","descriptor","Object","getOwnPropertyDescriptor","newDescriptor","undefined","get","_history$state","String","state","set","configurable","enumerable","oldSetter","assign","defineProperty","func","wait","leading","trailing","timeout","previous","throttledFunc","args","later","Date","now","remaining","clearTimeout","window","cancel","HaIconButtonArrowPrev","LitElement","render","_this$hass","html","_t","_","disabled","label","localize","_icon","mainWindow","attribute","type","Boolean","HaIconButton","focus","_this$_button","_button","ifDefined","hideTitle","ariaHasPopup","path","_t2","_t3","shadowRootOptions","mode","delegatesFocus","styles","css","_t4","reflect","NotificationStream","processMessage","streamMessage","notificationId","keys","notifications","values","constructor","HaMenuButton","super","_attachNotifOnConnect","_subscribeNotifications","disconnectedCallback","_unsubNotifications","_show","nothing","hasNotifications","_hasNotifications","narrow","dockedSidebar","_toggleMenu","firstUpdated","changedProps","hassio","_alwaysVisible","Number","parent","frontendVersion","willUpdate","has","oldHass","oldShowButton","showButton","hasUpdated","subscribeNotifications","conn","onChange","stream","subscription","subscribeMessage","message","unsub","connection","length","fireEvent","HaSvgIcon","svg","viewBox","secondaryPath","isLoadedIntegration","page","some","integration","isNotLoadedIntegration","not_component","isCore","core","hideAdvancedPage","advancedOnly","isAdvancedPage","_hass$userData","userData","showAdvanced","userWantsAdvanced","HaRipple","Ripple","attach","control","attachableTouchController","hovered","pressed","detach","_onTouchControlChange","prev","next","removeEventListener","_handleTouchEnd","addEventListener","AttachableController","bind","endPressAnimation","HaTab","active","name","_handleKeyDown","ev","key","click","HassTabsSubpage","changedProperties","_activeTab","tabs","find","tab","route","prefix","_getTabs","language","localizeFunc","showTabs","mainPage","backPath","root","supervisor","_backTapped","_t5","_t6","_t7","classMap","container","pane","_t8","_saveScrollPos","hasFab","_t9","e","_savedScrollPos","backCallback","goBack","haStyleScrollbar","_t0","isWide","memoizeOne","activeTab","_components","_language","_userData","_narrow","shownTabs","filter","canShowPage","translationKey","map","_t1","iconPath","_t10","passive","buttonLinkStyle","haStyle","haStyleDialog"],"mappings":"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"}