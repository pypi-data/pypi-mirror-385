{"version":3,"file":"9972.14041bb9ae3215c6.js","sources":["webpack://knx-frontend/./node_modules/@material/web/chips/internal/assist-chip.ts","webpack://knx-frontend/./node_modules/@material/web/chips/internal/assist-styles.ts","webpack://knx-frontend/./node_modules/@material/web/chips/internal/elevated-styles.ts","webpack://knx-frontend/./node_modules/date-fns/parseISO.js","webpack://knx-frontend/./node_modules/home-assistant-js-websocket/dist/config.js","webpack://knx-frontend/./node_modules/lit-html/src/directives/private-async-helpers.ts","webpack://knx-frontend/./node_modules/lit-html/src/directives/until.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../elevation/elevation.js';\n\nimport {html, nothing} from 'lit';\nimport {property} from 'lit/decorators.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\n\nimport {Chip} from './chip.js';\n\n/**\n * An assist chip component.\n */\nexport class AssistChip extends Chip {\n  @property({type: Boolean}) elevated = false;\n  @property() href = '';\n  /**\n   * The filename to use when downloading the linked resource.\n   * If not specified, the browser will determine a filename.\n   * This is only applicable when the chip is used as a link (`href` is set).\n   */\n  @property() download = '';\n  @property() target: '_blank' | '_parent' | '_self' | '_top' | '' = '';\n\n  protected get primaryId() {\n    return this.href ? 'link' : 'button';\n  }\n\n  protected override get rippleDisabled() {\n    // Link chips cannot be disabled\n    return !this.href && (this.disabled || this.softDisabled);\n  }\n\n  protected override getContainerClasses() {\n    return {\n      ...super.getContainerClasses(),\n      // Link chips cannot be disabled\n      disabled: !this.href && (this.disabled || this.softDisabled),\n      elevated: this.elevated,\n      link: !!this.href,\n    };\n  }\n\n  protected override renderPrimaryAction(content: unknown) {\n    const {ariaLabel} = this as ARIAMixinStrict;\n    if (this.href) {\n      return html`\n        <a\n          class=\"primary action\"\n          id=\"link\"\n          aria-label=${ariaLabel || nothing}\n          href=${this.href}\n          download=${this.download || nothing}\n          target=${this.target || nothing}\n          >${content}</a\n        >\n      `;\n    }\n\n    return html`\n      <button\n        class=\"primary action\"\n        id=\"button\"\n        aria-label=${ariaLabel || nothing}\n        aria-disabled=${this.softDisabled || nothing}\n        ?disabled=${this.disabled && !this.alwaysFocusable}\n        type=\"button\"\n        >${content}</button\n      >\n    `;\n  }\n\n  protected override renderOutline() {\n    if (this.elevated) {\n      return html`<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n\n    return super.renderOutline();\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/assist-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_container-height: var(--md-assist-chip-container-height, 32px);--_disabled-label-text-color: var(--md-assist-chip-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-assist-chip-disabled-label-text-opacity, 0.38);--_elevated-container-color: var(--md-assist-chip-elevated-container-color, var(--md-sys-color-surface-container-low, #f7f2fa));--_elevated-container-elevation: var(--md-assist-chip-elevated-container-elevation, 1);--_elevated-container-shadow-color: var(--md-assist-chip-elevated-container-shadow-color, var(--md-sys-color-shadow, #000));--_elevated-disabled-container-color: var(--md-assist-chip-elevated-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_elevated-disabled-container-elevation: var(--md-assist-chip-elevated-disabled-container-elevation, 0);--_elevated-disabled-container-opacity: var(--md-assist-chip-elevated-disabled-container-opacity, 0.12);--_elevated-focus-container-elevation: var(--md-assist-chip-elevated-focus-container-elevation, 1);--_elevated-hover-container-elevation: var(--md-assist-chip-elevated-hover-container-elevation, 2);--_elevated-pressed-container-elevation: var(--md-assist-chip-elevated-pressed-container-elevation, 1);--_focus-label-text-color: var(--md-assist-chip-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-assist-chip-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-color: var(--md-assist-chip-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-assist-chip-hover-state-layer-opacity, 0.08);--_label-text-color: var(--md-assist-chip-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-font: var(--md-assist-chip-label-text-font, var(--md-sys-typescale-label-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-assist-chip-label-text-line-height, var(--md-sys-typescale-label-large-line-height, 1.25rem));--_label-text-size: var(--md-assist-chip-label-text-size, var(--md-sys-typescale-label-large-size, 0.875rem));--_label-text-weight: var(--md-assist-chip-label-text-weight, var(--md-sys-typescale-label-large-weight, var(--md-ref-typeface-weight-medium, 500)));--_pressed-label-text-color: var(--md-assist-chip-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-color: var(--md-assist-chip-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-opacity: var(--md-assist-chip-pressed-state-layer-opacity, 0.12);--_disabled-outline-color: var(--md-assist-chip-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-assist-chip-disabled-outline-opacity, 0.12);--_focus-outline-color: var(--md-assist-chip-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_outline-color: var(--md-assist-chip-outline-color, var(--md-sys-color-outline, #79747e));--_outline-width: var(--md-assist-chip-outline-width, 1px);--_disabled-leading-icon-color: var(--md-assist-chip-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-assist-chip-disabled-leading-icon-opacity, 0.38);--_focus-leading-icon-color: var(--md-assist-chip-focus-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_hover-leading-icon-color: var(--md-assist-chip-hover-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_leading-icon-color: var(--md-assist-chip-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_icon-size: var(--md-assist-chip-icon-size, 18px);--_pressed-leading-icon-color: var(--md-assist-chip-pressed-leading-icon-color, var(--md-sys-color-primary, #6750a4));--_container-shape-start-start: var(--md-assist-chip-container-shape-start-start, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-start-end: var(--md-assist-chip-container-shape-start-end, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-end: var(--md-assist-chip-container-shape-end-end, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_container-shape-end-start: var(--md-assist-chip-container-shape-end-start, var(--md-assist-chip-container-shape, var(--md-sys-shape-corner-small, 8px)));--_leading-space: var(--md-assist-chip-leading-space, 16px);--_trailing-space: var(--md-assist-chip-trailing-space, 16px);--_icon-label-space: var(--md-assist-chip-icon-label-space, 8px);--_with-leading-icon-leading-space: var(--md-assist-chip-with-leading-icon-leading-space, 8px)}@media(forced-colors: active){.link .outline{border-color:ActiveText}}\n`;\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./chips/internal/elevated-styles.css.\nimport {css} from 'lit';\nexport const styles = css`.elevated{--md-elevation-level: var(--_elevated-container-elevation);--md-elevation-shadow-color: var(--_elevated-container-shadow-color)}.elevated::before{background:var(--_elevated-container-color)}.elevated:hover{--md-elevation-level: var(--_elevated-hover-container-elevation)}.elevated:focus-within{--md-elevation-level: var(--_elevated-focus-container-elevation)}.elevated:active{--md-elevation-level: var(--_elevated-pressed-container-elevation)}.elevated.disabled{--md-elevation-level: var(--_elevated-disabled-container-elevation)}.elevated.disabled::before{background:var(--_elevated-disabled-container-color);opacity:var(--_elevated-disabled-container-opacity)}@media(forced-colors: active){.elevated md-elevation{border:1px solid CanvasText}.elevated.disabled md-elevation{border-color:GrayText}}\n`;\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { getCollection } from \"./collection.js\";\nimport { getConfig } from \"./commands.js\";\nfunction processComponentLoaded(state, event) {\n    if (state === undefined)\n        return null;\n    return {\n        components: state.components.concat(event.data.component),\n    };\n}\nconst fetchConfig = (conn) => getConfig(conn);\nconst subscribeUpdates = (conn, store) => Promise.all([\n    conn.subscribeEvents(store.action(processComponentLoaded), \"component_loaded\"),\n    conn.subscribeEvents(() => fetchConfig(conn).then((config) => store.setState(config, true)), \"core_config_updated\"),\n]).then((unsubs) => () => unsubs.forEach((unsub) => unsub()));\nexport const configColl = (conn) => getCollection(conn, \"_cnf\", fetchConfig, subscribeUpdates);\nexport const subscribeConfig = (conn, onChange) => configColl(conn).subscribe(onChange);\nexport const STATE_NOT_RUNNING = \"NOT_RUNNING\";\nexport const STATE_STARTING = \"STARTING\";\nexport const STATE_RUNNING = \"RUNNING\";\nexport const STATE_STOPPING = \"STOPPING\";\nexport const STATE_FINAL_WRITE = \"FINAL_WRITE\";\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>): unknown {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n"],"names":["AssistChip","Chip","primaryId","this","href","rippleDisabled","disabled","softDisabled","getContainerClasses","Object","assign","super","elevated","link","renderPrimaryAction","content","ariaLabel","html","_t","_","nothing","download","target","_t2","alwaysFocusable","renderOutline","_t3","constructor","__decorate","property","type","Boolean","styles","css","parseISO","argument","options","_options$additionalDi","invalidDate","constructFrom","in","NaN","additionalDigits","dateStrings","dateString","array","split","patterns","dateTimeDelimiter","timeString","length","test","date","timeZoneDelimiter","substr","token","timezone","exec","time","replace","splitDateString","parseYearResult","regex","RegExp","captures","match","year","restDateString","parseInt","century","slice","parseYear","Date","dateRegex","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","parseDate","isNaN","timestamp","offset","timeRegex","hours","parseTimeUnit","minutes","seconds","validateTime","millisecondsInHour","millisecondsInMinute","parseTime","tmpDate","result","toDate","setFullYear","getUTCFullYear","getUTCMonth","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","sign","_hours","validateTimezone","parseTimezone","value","parseFloat","STATE_NOT_RUNNING","s","disconnect","G","reconnect","t","deref","i","get","Y","pause","_this$Y","Promise","Z","resume","_this$Z","call","n","then","h","c","render","_s$find","find","update","e","_$Cbt","r","o","_$CK","_$CX","isConnected","disconnected","_$Cwt","resolve","indexOf","setValue","reconnected","arguments","m"],"mappings":"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"}