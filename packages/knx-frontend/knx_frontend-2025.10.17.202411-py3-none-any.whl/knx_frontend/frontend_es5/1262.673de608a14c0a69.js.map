{"version":3,"file":"1262.673de608a14c0a69.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-addon-picker.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-addon.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/supervisor/common.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/hassio/addon.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/hassio/common.ts"],"sourcesContent":["import type { ComboBoxLitRenderer } from \"@vaadin/combo-box/lit\";\nimport { html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { stringCompare } from \"../common/string/compare\";\nimport type { HassioAddonInfo } from \"../data/hassio/addon\";\nimport { fetchHassioAddonsInfo } from \"../data/hassio/addon\";\nimport type { HomeAssistant, ValueChangedEvent } from \"../types\";\nimport \"./ha-alert\";\nimport \"./ha-combo-box\";\nimport type { HaComboBox } from \"./ha-combo-box\";\nimport \"./ha-combo-box-item\";\n\nconst rowRenderer: ComboBoxLitRenderer<HassioAddonInfo> = (item) => html`\n  <ha-combo-box-item type=\"button\">\n    <span slot=\"headline\">${item.name}</span>\n    <span slot=\"supporting-text\">${item.slug}</span>\n    ${item.icon\n      ? html`\n          <img\n            alt=\"\"\n            slot=\"start\"\n            .src=\"/api/hassio/addons/${item.slug}/icon\"\n          />\n        `\n      : nothing}\n  </ha-combo-box-item>\n`;\n\n@customElement(\"ha-addon-picker\")\nclass HaAddonPicker extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value = \"\";\n\n  @property() public helper?: string;\n\n  @state() private _addons?: HassioAddonInfo[];\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = false;\n\n  @query(\"ha-combo-box\") private _comboBox!: HaComboBox;\n\n  @state() private _error?: string;\n\n  public open() {\n    this._comboBox?.open();\n  }\n\n  public focus() {\n    this._comboBox?.focus();\n  }\n\n  protected firstUpdated() {\n    this._getAddons();\n  }\n\n  protected render() {\n    if (this._error) {\n      return html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`;\n    }\n    if (!this._addons) {\n      return nothing;\n    }\n    return html`\n      <ha-combo-box\n        .hass=${this.hass}\n        .label=${this.label === undefined && this.hass\n          ? this.hass.localize(\"ui.components.addon-picker.addon\")\n          : this.label}\n        .value=${this._value}\n        .required=${this.required}\n        .disabled=${this.disabled}\n        .helper=${this.helper}\n        .renderer=${rowRenderer}\n        .items=${this._addons}\n        item-value-path=\"slug\"\n        item-id-path=\"slug\"\n        item-label-path=\"name\"\n        @value-changed=${this._addonChanged}\n      ></ha-combo-box>\n    `;\n  }\n\n  private async _getAddons() {\n    try {\n      if (isComponentLoaded(this.hass, \"hassio\")) {\n        const addonsInfo = await fetchHassioAddonsInfo(this.hass);\n        this._addons = addonsInfo.addons\n          .filter((addon) => addon.version)\n          .sort((a, b) =>\n            stringCompare(a.name, b.name, this.hass.locale.language)\n          );\n      } else {\n        this._error = this.hass.localize(\n          \"ui.components.addon-picker.error.no_supervisor\"\n        );\n      }\n    } catch (_err: any) {\n      this._error = this.hass.localize(\n        \"ui.components.addon-picker.error.fetch_addons\"\n      );\n    }\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _addonChanged(ev: ValueChangedEvent<string>) {\n    ev.stopPropagation();\n    const newValue = ev.detail.value;\n\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-addon-picker\": HaAddonPicker;\n  }\n}\n","import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { AddonSelector } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-addon-picker\";\n\n@customElement(\"ha-selector-addon\")\nexport class HaAddonSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: AddonSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  protected render() {\n    return html`<ha-addon-picker\n      .hass=${this.hass}\n      .value=${this.value}\n      .label=${this.label}\n      .helper=${this.helper}\n      .disabled=${this.disabled}\n      .required=${this.required}\n      allow-custom-entity\n    ></ha-addon-picker>`;\n  }\n\n  static styles = css`\n    ha-addon-picker {\n      width: 100%;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-addon\": HaAddonSelector;\n  }\n}\n","import { atLeastVersion } from \"../../common/config/version\";\nimport type { HomeAssistant } from \"../../types\";\nimport type { HassioResponse } from \"../hassio/common\";\nimport { hassioApiResultExtractor } from \"../hassio/common\";\n\nexport interface SupervisorApiCallOptions {\n  method?: \"get\" | \"post\" | \"delete\";\n  data?: Record<string, any>;\n  timeout?: number;\n}\n\nexport const supervisorApiCall = async <T>(\n  hass: HomeAssistant,\n  endpoint: string,\n  options?: SupervisorApiCallOptions\n): Promise<T> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    // Websockets was added in 2021.2.4\n    return hass.callWS<T>({\n      type: \"supervisor/api\",\n      endpoint,\n      method: options?.method || \"get\",\n      timeout: options?.timeout ?? null,\n      data: options?.data,\n    });\n  }\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<T>>(\n      // @ts-ignore\n      (options.method || \"get\").toUpperCase(),\n      `hassio${endpoint}`,\n      options?.data\n    )\n  );\n};\n","import { atLeastVersion } from \"../../common/config/version\";\nimport type { HaFormSchema } from \"../../components/ha-form/types\";\nimport type { HomeAssistant, TranslationDict } from \"../../types\";\nimport { supervisorApiCall } from \"../supervisor/common\";\nimport type { StoreAddonDetails } from \"../supervisor/store\";\nimport type { Supervisor, SupervisorArch } from \"../supervisor/supervisor\";\nimport type { HassioResponse } from \"./common\";\nimport { extractApiErrorMessage, hassioApiResultExtractor } from \"./common\";\n\nexport type AddonCapability = Exclude<\n  keyof TranslationDict[\"supervisor\"][\"addon\"][\"dashboard\"][\"capability\"],\n  \"label\" | \"role\" | \"stages\"\n>;\nexport type AddonStage = \"stable\" | \"experimental\" | \"deprecated\";\nexport type AddonAppArmour = \"disable\" | \"default\" | \"profile\";\nexport type AddonRole = \"default\" | \"homeassistant\" | \"manager\" | \"admin\";\nexport type AddonStartup =\n  | \"initialize\"\n  | \"system\"\n  | \"services\"\n  | \"application\"\n  | \"once\";\nexport type AddonState =\n  | \"startup\"\n  | \"started\"\n  | \"stopped\"\n  | \"unknown\"\n  | \"error\"\n  | null;\nexport type AddonRepository = \"core\" | \"local\" | string;\n\ninterface AddonFieldTranslation {\n  name?: string;\n  description?: string;\n  fields?: Record<string, AddonFieldTranslation>;\n}\n\ninterface AddonTranslations {\n  network?: Record<string, string>;\n  configuration?: Record<string, AddonFieldTranslation>;\n}\n\nexport interface HassioAddonInfo {\n  advanced: boolean;\n  available: boolean;\n  build: boolean;\n  description: string;\n  detached: boolean;\n  homeassistant: string;\n  icon: boolean;\n  installed: boolean;\n  logo: boolean;\n  name: string;\n  repository: AddonRepository;\n  slug: string;\n  stage: AddonStage;\n  state: AddonState;\n  update_available: boolean;\n  url: string | null;\n  version_latest: string;\n  version: string;\n}\n\nexport interface HassioAddonDetails extends HassioAddonInfo {\n  apparmor: AddonAppArmour;\n  arch: SupervisorArch[];\n  audio_input: null | string;\n  audio_output: null | string;\n  audio: boolean;\n  auth_api: boolean;\n  auto_uart: boolean;\n  auto_update: boolean;\n  boot: \"auto\" | \"manual\";\n  changelog: boolean;\n  devices: string[];\n  devicetree: boolean;\n  discovery: string[];\n  docker_api: boolean;\n  documentation: boolean;\n  full_access: boolean;\n  gpio: boolean;\n  hassio_api: boolean;\n  hassio_role: AddonRole;\n  hostname: string;\n  homeassistant_api: boolean;\n  host_dbus: boolean;\n  host_ipc: boolean;\n  host_network: boolean;\n  host_pid: boolean;\n  ingress_entry: null | string;\n  ingress_panel: boolean;\n  ingress_url: null | string;\n  ingress: boolean;\n  ip_address: string;\n  kernel_modules: boolean;\n  long_description: null | string;\n  machine: any;\n  network_description: null | Record<string, string>;\n  network: null | Record<string, number>;\n  options: Record<string, unknown>;\n  privileged: any;\n  protected: boolean;\n  rating: \"1-8\";\n  schema: HaFormSchema[] | null;\n  services_role: string[];\n  signed: boolean;\n  slug: string;\n  startup: AddonStartup;\n  stdin: boolean;\n  system_managed: boolean;\n  system_managed_config_entry: string | null;\n  translations: Record<string, AddonTranslations>;\n  watchdog: null | boolean;\n  webui: null | string;\n}\n\nexport interface HassioAddonsInfo {\n  addons: HassioAddonInfo[];\n  repositories: HassioAddonRepository[];\n}\n\nexport interface HassioAddonSetSecurityParams {\n  protected?: boolean;\n}\n\nexport interface HassioAddonRepository {\n  slug: string;\n  name: string;\n  source: string;\n  url: string;\n  maintainer: string;\n}\n\nexport interface HassioAddonSetOptionParams {\n  audio_input?: string | null;\n  audio_output?: string | null;\n  options?: Record<string, unknown> | null;\n  boot?: \"auto\" | \"manual\";\n  auto_update?: boolean;\n  ingress_panel?: boolean;\n  network?: Record<string, unknown> | null;\n  watchdog?: boolean;\n}\n\nexport const reloadHassioAddons = async (hass: HomeAssistant) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/addons/reload\",\n      method: \"post\",\n    });\n    return;\n  }\n  await hass.callApi<HassioResponse<void>>(\"POST\", `hassio/addons/reload`);\n};\n\nexport const fetchHassioAddonsInfo = async (\n  hass: HomeAssistant\n): Promise<HassioAddonsInfo> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: \"/addons\",\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioAddonsInfo>>(\"GET\", `hassio/addons`)\n  );\n};\n\nexport const fetchHassioAddonInfo = async (\n  hass: HomeAssistant,\n  slug: string\n): Promise<HassioAddonDetails> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/info`,\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioAddonDetails>>(\n      \"GET\",\n      `hassio/addons/${slug}/info`\n    )\n  );\n};\n\nexport const fetchHassioAddonChangelog = async (\n  hass: HomeAssistant,\n  slug: string\n) => hass.callApi<string>(\"GET\", `hassio/addons/${slug}/changelog`);\n\nexport const fetchHassioAddonLogs = async (hass: HomeAssistant, slug: string) =>\n  hass.callApi<string>(\"GET\", `hassio/addons/${slug}/logs`);\n\nexport const fetchHassioAddonDocumentation = async (\n  hass: HomeAssistant,\n  slug: string\n) => hass.callApi<string>(\"GET\", `hassio/addons/${slug}/documentation`);\n\nexport const setHassioAddonOption = async (\n  hass: HomeAssistant,\n  slug: string,\n  data: HassioAddonSetOptionParams\n) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    const response = await hass.callWS<HassioResponse<any>>({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/options`,\n      method: \"post\",\n      data,\n    });\n\n    if (response.result === \"error\") {\n      throw Error(extractApiErrorMessage(response));\n    }\n    return response;\n  }\n\n  return hass.callApi<HassioResponse<any>>(\n    \"POST\",\n    `hassio/addons/${slug}/options`,\n    data\n  );\n};\n\nexport const validateHassioAddonOption = async (\n  hass: HomeAssistant,\n  slug: string,\n  data?: any\n): Promise<{ message: string; valid: boolean }> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/options/validate`,\n      method: \"post\",\n      data,\n    });\n  }\n\n  return (\n    await hass.callApi<HassioResponse<{ message: string; valid: boolean }>>(\n      \"POST\",\n      `hassio/addons/${slug}/options/validate`\n    )\n  ).data;\n};\n\nexport const startHassioAddon = async (hass: HomeAssistant, slug: string) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/start`,\n      method: \"post\",\n      timeout: null,\n    });\n  }\n\n  return hass.callApi<string>(\"POST\", `hassio/addons/${slug}/start`);\n};\n\nexport const stopHassioAddon = async (hass: HomeAssistant, slug: string) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/stop`,\n      method: \"post\",\n      timeout: null,\n    });\n  }\n\n  return hass.callApi<string>(\"POST\", `hassio/addons/${slug}/stop`);\n};\n\nexport const setHassioAddonSecurity = async (\n  hass: HomeAssistant,\n  slug: string,\n  data: HassioAddonSetSecurityParams\n) => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/security`,\n      method: \"post\",\n      data,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/addons/${slug}/security`,\n    data\n  );\n};\n\nexport const installHassioAddon = async (\n  hass: HomeAssistant,\n  slug: string\n): Promise<void> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/install`,\n      method: \"post\",\n      timeout: null,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/addons/${slug}/install`\n  );\n};\n\nexport const updateHassioAddon = async (\n  hass: HomeAssistant,\n  slug: string,\n  backup: boolean\n): Promise<void> => {\n  if (atLeastVersion(hass.config.version, 2025, 2, 0)) {\n    await hass.callWS({\n      type: \"hassio/update/addon\",\n      addon: slug,\n      backup: backup,\n    });\n    return;\n  }\n\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/store/addons/${slug}/update`,\n      method: \"post\",\n      timeout: null,\n      data: { backup },\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/addons/${slug}/update`,\n    { backup }\n  );\n};\n\nexport const restartHassioAddon = async (\n  hass: HomeAssistant,\n  slug: string\n): Promise<void> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/restart`,\n      method: \"post\",\n      timeout: null,\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/addons/${slug}/restart`\n  );\n};\n\nexport const uninstallHassioAddon = async (\n  hass: HomeAssistant,\n  slug: string,\n  removeData: boolean\n): Promise<void> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    await hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/uninstall`,\n      method: \"post\",\n      timeout: null,\n      data: { remove_config: removeData },\n    });\n    return;\n  }\n\n  await hass.callApi<HassioResponse<void>>(\n    \"POST\",\n    `hassio/addons/${slug}/uninstall`,\n    { remove_config: removeData }\n  );\n};\n\nexport const fetchAddonInfo = (\n  hass: HomeAssistant,\n  supervisor: Supervisor,\n  addonSlug: string\n): Promise<HassioAddonDetails | StoreAddonDetails> =>\n  supervisorApiCall(\n    hass,\n    !supervisor.addon?.addons.find((addon) => addon.slug === addonSlug)\n      ? `/store/addons/${addonSlug}` // Use /store/addons when add-on is not installed\n      : `/addons/${addonSlug}/info` // Use /addons when add-on is installed\n  );\n\nexport const rebuildLocalAddon = async (\n  hass: HomeAssistant,\n  slug: string\n): Promise<void> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS<undefined>({\n      type: \"supervisor/api\",\n      endpoint: `/addons/${slug}/rebuild`,\n      method: \"post\",\n      timeout: null,\n    });\n  }\n  return (\n    await hass.callApi<HassioResponse<void>>(\n      \"POST\",\n      `hassio/addons/${slug}rebuild`\n    )\n  ).data;\n};\n","import { atLeastVersion } from \"../../common/config/version\";\nimport type { HomeAssistant } from \"../../types\";\n\nexport interface HassioResponse<T> {\n  data: T;\n  message?: string;\n  result: \"ok\" | \"error\";\n}\n\nexport interface HassioStats {\n  blk_read: number;\n  blk_write: number;\n  cpu_percent: number;\n  memory_limit: number;\n  memory_percent: number;\n  memory_usage: number;\n  network_rx: number;\n  network_tx: number;\n}\n\nexport const hassioApiResultExtractor = <T>(response: HassioResponse<T>) =>\n  response.data;\n\nexport const extractApiErrorMessage = (error: any): string =>\n  typeof error === \"object\"\n    ? typeof error.body === \"object\"\n      ? error.body.message || \"Unknown error, see supervisor logs\"\n      : error.body || error.message || \"Unknown error, see supervisor logs\"\n    : error;\n\nconst ignoredStatusCodes = new Set([502, 503, 504]);\n\nexport const ignoreSupervisorError = (error): boolean => {\n  if (error && error.status_code && ignoredStatusCodes.has(error.status_code)) {\n    return true;\n  }\n  if (\n    error &&\n    error.message &&\n    (error.message.includes(\"ERR_CONNECTION_CLOSED\") ||\n      error.message.includes(\"ERR_CONNECTION_RESET\"))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const fetchHassioStats = async (\n  hass: HomeAssistant,\n  container: string\n): Promise<HassioStats> => {\n  if (atLeastVersion(hass.config.version, 2021, 2, 4)) {\n    return hass.callWS({\n      type: \"supervisor/api\",\n      endpoint: `/${container}/stats`,\n      method: \"get\",\n    });\n  }\n\n  return hassioApiResultExtractor(\n    await hass.callApi<HassioResponse<HassioStats>>(\n      \"GET\",\n      `hassio/${container}/stats`\n    )\n  );\n};\n"],"names":["rowRenderer","item","html","_t","_","name","slug","icon","_t2","nothing","HaAddonPicker","LitElement","open","_this$_comboBox","this","_comboBox","focus","_this$_comboBox2","firstUpdated","_getAddons","render","_error","_t3","_addons","_t4","hass","undefined","label","localize","_value","required","disabled","helper","_addonChanged","isComponentLoaded","addonsInfo","fetchHassioAddonsInfo","addons","filter","addon","version","sort","a","b","stringCompare","locale","language","_err","value","ev","stopPropagation","newValue","detail","_setValue","setTimeout","fireEvent","args","type","Boolean","HaAddonSelector","styles","css","attribute","atLeastVersion","config","callWS","endpoint","method","hassioApiResultExtractor","callApi","startHassioAddon","timeout","installHassioAddon","response","data","extractApiErrorMessage","error","body","message","Set"],"mappings":"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"}