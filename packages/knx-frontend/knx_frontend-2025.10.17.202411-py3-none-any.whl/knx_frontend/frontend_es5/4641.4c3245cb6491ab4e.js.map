{"version":3,"file":"4641.4c3245cb6491ab4e.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/entity/state_active.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-selector/ha-selector-media.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/media-player/show-media-browser-dialog.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/auth.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/entity.ts"],"sourcesContent":["import type { HassEntity } from \"home-assistant-js-websocket\";\nimport { isUnavailableState, OFF, UNAVAILABLE } from \"../../data/entity\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport function stateActive(stateObj: HassEntity, state?: string): boolean {\n  const domain = computeDomain(stateObj.entity_id);\n  const compareState = state !== undefined ? state : stateObj?.state;\n\n  if ([\"button\", \"event\", \"input_button\", \"scene\"].includes(domain)) {\n    return compareState !== UNAVAILABLE;\n  }\n\n  if (isUnavailableState(compareState)) {\n    return false;\n  }\n\n  // The \"off\" check is relevant for most domains, but there are exceptions\n  // such as \"alert\" where \"off\" is still a somewhat active state and\n  // therefore gets a custom color and \"idle\" is instead the state that\n  // matches what most other domains consider inactive.\n  if (compareState === OFF && domain !== \"alert\") {\n    return false;\n  }\n\n  // Custom cases\n  switch (domain) {\n    case \"alarm_control_panel\":\n      return compareState !== \"disarmed\";\n    case \"alert\":\n      // \"on\" and \"off\" are active, as \"off\" just means alert was acknowledged but is still active\n      return compareState !== \"idle\";\n    case \"cover\":\n      return compareState !== \"closed\";\n    case \"device_tracker\":\n    case \"person\":\n      return compareState !== \"not_home\";\n    case \"lawn_mower\":\n      return [\"mowing\", \"error\"].includes(compareState);\n    case \"lock\":\n      return compareState !== \"locked\";\n    case \"media_player\":\n      return compareState !== \"standby\";\n    case \"vacuum\":\n      return ![\"idle\", \"docked\", \"paused\"].includes(compareState);\n    case \"valve\":\n      return compareState !== \"closed\";\n    case \"plant\":\n      return compareState === \"problem\";\n    case \"group\":\n      return [\"on\", \"home\", \"open\", \"locked\", \"problem\"].includes(compareState);\n    case \"timer\":\n      return compareState === \"active\";\n    case \"camera\":\n      return compareState === \"streaming\";\n  }\n\n  return true;\n}\n","import { mdiPlayBox, mdiPlus } from \"@mdi/js\";\nimport type { PropertyValues } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { supportsFeature } from \"../../common/entity/supports-feature\";\nimport { getSignedPath } from \"../../data/auth\";\nimport type { MediaPickedEvent } from \"../../data/media-player\";\nimport {\n  MediaClassBrowserSettings,\n  MediaPlayerEntityFeature,\n} from \"../../data/media-player\";\nimport type { MediaSelector, MediaSelectorValue } from \"../../data/selector\";\nimport type { HomeAssistant } from \"../../types\";\nimport { brandsUrl, extractDomainFromBrandUrl } from \"../../util/brands-url\";\nimport \"../ha-alert\";\nimport \"../ha-form/ha-form\";\nimport type { SchemaUnion } from \"../ha-form/types\";\nimport { showMediaBrowserDialog } from \"../media-player/show-media-browser-dialog\";\nimport { ensureArray } from \"../../common/array/ensure-array\";\n\nconst MANUAL_SCHEMA = [\n  { name: \"media_content_id\", required: false, selector: { text: {} } },\n  { name: \"media_content_type\", required: false, selector: { text: {} } },\n] as const;\n\nconst INCLUDE_DOMAINS = [\"media_player\"];\n\nconst EMPTY_FORM = {};\n\n@customElement(\"ha-selector-media\")\nexport class HaMediaSelector extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public selector!: MediaSelector;\n\n  @property({ attribute: false }) public value?: MediaSelectorValue;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean, reflect: true }) public disabled = false;\n\n  @property({ type: Boolean, reflect: true }) public required = true;\n\n  @property({ attribute: false }) public context?: {\n    filter_entity?: string | string[];\n  };\n\n  @state() private _thumbnailUrl?: string | null;\n\n  private _contextEntities: string[] | undefined;\n\n  private get _hasAccept(): boolean {\n    return !!this.selector?.media?.accept?.length;\n  }\n\n  willUpdate(changedProps: PropertyValues<this>) {\n    if (changedProps.has(\"context\")) {\n      if (!this._hasAccept) {\n        this._contextEntities = ensureArray(this.context?.filter_entity);\n      }\n    }\n\n    if (changedProps.has(\"value\")) {\n      const thumbnail = this.value?.metadata?.thumbnail;\n      const oldThumbnail = (changedProps.get(\"value\") as this[\"value\"])\n        ?.metadata?.thumbnail;\n      if (thumbnail === oldThumbnail) {\n        return;\n      }\n      if (thumbnail && thumbnail.startsWith(\"/\")) {\n        this._thumbnailUrl = undefined;\n        // Thumbnails served by local API require authentication\n        getSignedPath(this.hass, thumbnail).then((signedPath) => {\n          this._thumbnailUrl = signedPath.path;\n        });\n      } else if (\n        thumbnail &&\n        thumbnail.startsWith(\"https://brands.home-assistant.io\")\n      ) {\n        // The backend is not aware of the theme used by the users,\n        // so we rewrite the URL to show a proper icon\n        this._thumbnailUrl = brandsUrl({\n          domain: extractDomainFromBrandUrl(thumbnail),\n          type: \"icon\",\n          useFallback: true,\n          darkOptimized: this.hass.themes?.darkMode,\n        });\n      } else {\n        this._thumbnailUrl = thumbnail;\n      }\n    }\n  }\n\n  protected render() {\n    const entityId = this._getActiveEntityId();\n\n    const stateObj = entityId ? this.hass.states[entityId] : undefined;\n\n    const supportsBrowse =\n      !entityId ||\n      (stateObj &&\n        supportsFeature(stateObj, MediaPlayerEntityFeature.BROWSE_MEDIA));\n\n    return html`\n      ${this._hasAccept ||\n      (this._contextEntities && this._contextEntities.length <= 1)\n        ? nothing\n        : html`\n            <ha-entity-picker\n              .hass=${this.hass}\n              .value=${entityId}\n              .label=${this.label ||\n              this.hass.localize(\n                \"ui.components.selectors.media.pick_media_player\"\n              )}\n              .disabled=${this.disabled}\n              .helper=${this.helper}\n              .required=${this.required}\n              .hideClearIcon=${!!this._contextEntities}\n              .includeDomains=${INCLUDE_DOMAINS}\n              .includeEntities=${this._contextEntities}\n              .allowCustomEntity=${!this._contextEntities}\n              @value-changed=${this._entityChanged}\n            ></ha-entity-picker>\n          `}\n      ${!supportsBrowse\n        ? html`\n            <ha-alert>\n              ${this.hass.localize(\n                \"ui.components.selectors.media.browse_not_supported\"\n              )}\n            </ha-alert>\n            <ha-form\n              .hass=${this.hass}\n              .data=${this.value || EMPTY_FORM}\n              .schema=${MANUAL_SCHEMA}\n              .computeLabel=${this._computeLabelCallback}\n              .computeHelper=${this._computeHelperCallback}\n            ></ha-form>\n          `\n        : html`\n            <ha-card\n              outlined\n              tabindex=\"0\"\n              role=\"button\"\n              aria-label=${!this.value?.media_content_id\n                ? this.hass.localize(\"ui.components.selectors.media.pick_media\")\n                : this.value.metadata?.title || this.value.media_content_id}\n              @click=${this._pickMedia}\n              @keydown=${this._handleKeyDown}\n              class=${this.disabled || (!entityId && !this._hasAccept)\n                ? \"disabled\"\n                : \"\"}\n            >\n              <div class=\"content-container\">\n                <div class=\"thumbnail\">\n                  ${this.value?.metadata?.thumbnail\n                    ? html`\n                        <div\n                          class=\"${classMap({\n                            \"centered-image\":\n                              !!this.value.metadata.media_class &&\n                              [\"app\", \"directory\"].includes(\n                                this.value.metadata.media_class\n                              ),\n                          })}\n                          image\"\n                          style=${this._thumbnailUrl\n                            ? `background-image: url(${this._thumbnailUrl});`\n                            : \"\"}\n                        ></div>\n                      `\n                    : html`\n                        <div class=\"icon-holder image\">\n                          <ha-svg-icon\n                            class=\"folder\"\n                            .path=${!this.value?.media_content_id\n                              ? mdiPlus\n                              : this.value?.metadata?.media_class\n                                ? MediaClassBrowserSettings[\n                                    this.value.metadata.media_class ===\n                                    \"directory\"\n                                      ? this.value.metadata\n                                          .children_media_class ||\n                                        this.value.metadata.media_class\n                                      : this.value.metadata.media_class\n                                  ].icon\n                                : mdiPlayBox}\n                          ></ha-svg-icon>\n                        </div>\n                      `}\n                </div>\n                <div class=\"title\">\n                  ${!this.value?.media_content_id\n                    ? this.hass.localize(\n                        \"ui.components.selectors.media.pick_media\"\n                      )\n                    : this.value.metadata?.title || this.value.media_content_id}\n                </div>\n              </div>\n            </ha-card>\n          `}\n    `;\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<typeof MANUAL_SCHEMA>\n  ): string =>\n    this.hass.localize(`ui.components.selectors.media.${schema.name}`);\n\n  private _computeHelperCallback = (\n    schema: SchemaUnion<typeof MANUAL_SCHEMA>\n  ): string =>\n    this.hass.localize(`ui.components.selectors.media.${schema.name}_detail`);\n\n  private _entityChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    if (!this._hasAccept && this.context?.filter_entity) {\n      fireEvent(this, \"value-changed\", {\n        value: {\n          media_content_id: \"\",\n          media_content_type: \"\",\n          metadata: {\n            browse_entity_id: ev.detail.value,\n          },\n        },\n      });\n    } else {\n      fireEvent(this, \"value-changed\", {\n        value: {\n          entity_id: ev.detail.value,\n          media_content_id: \"\",\n          media_content_type: \"\",\n        },\n      });\n    }\n  }\n\n  private _pickMedia() {\n    showMediaBrowserDialog(this, {\n      action: \"pick\",\n      entityId: this._getActiveEntityId(),\n      navigateIds: this.value?.metadata?.navigateIds,\n      accept: this.selector.media?.accept,\n      defaultId: this.value?.media_content_id,\n      defaultType: this.value?.media_content_type,\n      mediaPickedCallback: (pickedMedia: MediaPickedEvent) => {\n        fireEvent(this, \"value-changed\", {\n          value: {\n            ...this.value,\n            media_content_id: pickedMedia.item.media_content_id,\n            media_content_type: pickedMedia.item.media_content_type,\n            metadata: {\n              title: pickedMedia.item.title,\n              thumbnail: pickedMedia.item.thumbnail,\n              media_class: pickedMedia.item.media_class,\n              children_media_class: pickedMedia.item.children_media_class,\n              navigateIds: pickedMedia.navigateIds?.map((id) => ({\n                media_content_type: id.media_content_type,\n                media_content_id: id.media_content_id,\n              })),\n              ...(!this._hasAccept && this.context?.filter_entity\n                ? { browse_entity_id: this._getActiveEntityId() }\n                : {}),\n            },\n          },\n        });\n      },\n    });\n  }\n\n  private _getActiveEntityId(): string | undefined {\n    const metaId = this.value?.metadata?.browse_entity_id;\n    return (\n      this.value?.entity_id ||\n      (metaId && this._contextEntities?.includes(metaId) && metaId) ||\n      this._contextEntities?.[0]\n    );\n  }\n\n  private _handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === \"Enter\" || ev.key === \" \") {\n      ev.preventDefault();\n      this._pickMedia();\n    }\n  }\n\n  static styles = css`\n    ha-entity-picker {\n      display: block;\n      margin-bottom: 16px;\n    }\n    ha-alert {\n      display: block;\n      margin-bottom: 16px;\n    }\n    ha-card {\n      position: relative;\n      width: 100%;\n      box-sizing: border-box;\n      cursor: pointer;\n      transition: background-color 180ms ease-in-out;\n      min-height: 56px;\n    }\n    ha-card:hover:not(.disabled),\n    ha-card:focus:not(.disabled) {\n      background-color: var(--state-icon-hover-color, rgba(0, 0, 0, 0.04));\n    }\n    ha-card:focus {\n      outline: none;\n    }\n    ha-card.disabled {\n      pointer-events: none;\n      color: var(--disabled-text-color);\n    }\n    .content-container {\n      display: flex;\n      align-items: center;\n      padding: 8px;\n      gap: 12px;\n    }\n    ha-card .thumbnail {\n      width: 40px;\n      height: 40px;\n      flex-shrink: 0;\n      position: relative;\n      box-sizing: border-box;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    ha-card .image {\n      border-radius: 8px;\n    }\n    .folder {\n      --mdc-icon-size: 24px;\n    }\n    .title {\n      font-size: var(--ha-font-size-m);\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      line-height: 1.4;\n      flex: 1;\n      min-width: 0;\n    }\n    .image {\n      position: absolute;\n      top: 0;\n      right: 0;\n      left: 0;\n      bottom: 0;\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n    }\n    .centered-image {\n      margin: 4px;\n      background-size: contain;\n    }\n    .icon-holder {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-media\": HaMediaSelector;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport type {\n  MediaPickedEvent,\n  MediaPlayerBrowseAction,\n} from \"../../data/media-player\";\nimport type { MediaPlayerItemId } from \"./ha-media-player-browse\";\n\nexport interface MediaPlayerBrowseDialogParams {\n  action: MediaPlayerBrowseAction;\n  entityId?: string;\n  mediaPickedCallback: (pickedMedia: MediaPickedEvent) => void;\n  navigateIds?: MediaPlayerItemId[];\n  minimumNavigateLevel?: number;\n  accept?: string[];\n  defaultId?: string;\n  defaultType?: string;\n}\n\nexport const showMediaBrowserDialog = (\n  element: HTMLElement,\n  dialogParams: MediaPlayerBrowseDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-media-player-browse\",\n    dialogImport: () => import(\"./dialog-media-player-browse\"),\n    dialogParams,\n  });\n};\n","import type { HaFormSchema } from \"../components/ha-form/types\";\nimport type { HomeAssistant } from \"../types\";\nimport type { RefreshTokenType } from \"./refresh_token\";\n\nexport interface AuthUrlSearchParams {\n  client_id?: string;\n  redirect_uri?: string;\n  state?: string;\n}\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n  users?: Record<string, string>;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = __HASS_URL__;\n\nexport const autocompleteLoginFields = (schema: HaFormSchema[]) =>\n  schema.map((field) => {\n    if (field.type !== \"string\") return field;\n    switch (field.name) {\n      case \"username\":\n        return { ...field, autocomplete: \"username\", autofocus: true };\n      case \"password\":\n        return { ...field, autocomplete: \"current-password\" };\n      case \"code\":\n        return { ...field, autocomplete: \"one-time-code\", autofocus: true };\n      default:\n        return field;\n    }\n  });\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createLoginFlow = (\n  client_id: string | undefined,\n  redirect_uri: string | undefined,\n  handler: (string | null)[]\n) =>\n  fetch(\"/auth/login_flow\", {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify({\n      client_id,\n      handler,\n      redirect_uri,\n    }),\n  });\n\nexport const submitLoginFlow = (flow_id: string, data: Record<string, any>) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    body: JSON.stringify(data),\n  });\n\nexport const deleteLoginFlow = (flow_id) =>\n  fetch(`/auth/login_flow/${flow_id}`, {\n    method: \"DELETE\",\n    credentials: \"same-origin\",\n  });\n\nexport const redirectWithAuthCode = (\n  url: string,\n  authCode: string,\n  oauth2State: string | undefined,\n  storeToken: boolean\n) => {\n  // OAuth 2: 3.1.2 we need to retain query component of a redirect URI\n  if (!url.includes(\"?\")) {\n    url += \"?\";\n  } else if (!url.endsWith(\"&\")) {\n    url += \"&\";\n  }\n\n  url += `code=${encodeURIComponent(authCode)}`;\n\n  if (oauth2State) {\n    url += `&state=${encodeURIComponent(oauth2State)}`;\n  }\n  if (storeToken) {\n    url += `&storeToken=true`;\n  }\n\n  document.location.assign(url);\n};\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n\nexport const changePassword = (\n  hass: HomeAssistant,\n  current_password: string,\n  new_password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/change_password\",\n    current_password,\n    new_password,\n  });\n\nexport const adminChangePassword = (\n  hass: HomeAssistant,\n  userId: string,\n  password: string\n) =>\n  hass.callWS<undefined>({\n    type: \"config/auth_provider/homeassistant/admin_change_password\",\n    user_id: userId,\n    password,\n  });\n\nexport const adminChangeUsername = (\n  hass: HomeAssistant,\n  userId: string,\n  username: string\n) =>\n  hass.callWS<undefined>({\n    type: \"config/auth_provider/homeassistant/admin_change_username\",\n    user_id: userId,\n    username,\n  });\n\nexport const deleteAllRefreshTokens = (\n  hass: HomeAssistant,\n  token_type?: RefreshTokenType,\n  delete_current_token?: boolean\n) =>\n  hass.callWS({\n    type: \"auth/delete_all_refresh_tokens\",\n    token_type,\n    delete_current_token,\n  });\n","import { arrayLiteralIncludes } from \"../common/array/literal-includes\";\n\nexport const UNAVAILABLE = \"unavailable\";\nexport const UNKNOWN = \"unknown\";\nexport const ON = \"on\";\nexport const OFF = \"off\";\n\nexport const UNAVAILABLE_STATES = [UNAVAILABLE, UNKNOWN] as const;\nexport const OFF_STATES = [UNAVAILABLE, UNKNOWN, OFF] as const;\n\nexport const isUnavailableState = arrayLiteralIncludes(UNAVAILABLE_STATES);\nexport const isOffState = arrayLiteralIncludes(OFF_STATES);\n"],"names":["stateActive","stateObj","state","domain","computeDomain","entity_id","compareState","undefined","includes","UNAVAILABLE","isUnavailableState","OFF","MANUAL_SCHEMA","name","required","selector","text","INCLUDE_DOMAINS","EMPTY_FORM","HaMediaSelector","LitElement","_hasAccept","_this$selector","media","accept","length","willUpdate","changedProps","_this$context","has","this","_contextEntities","ensureArray","context","filter_entity","_this$value","_changedProps$get","thumbnail","value","metadata","get","startsWith","_thumbnailUrl","getSignedPath","hass","then","signedPath","path","_this$hass$themes","brandsUrl","extractDomainFromBrandUrl","type","useFallback","darkOptimized","themes","darkMode","render","_this$value2","_this$value$metadata","_this$value3","_this$value4","_this$value5","_this$value6","_this$value$metadata2","entityId","_getActiveEntityId","states","supportsBrowse","supportsFeature","MediaPlayerEntityFeature","html","_t","_","nothing","_t2","label","localize","disabled","helper","_entityChanged","_t4","media_content_id","title","_pickMedia","_handleKeyDown","_t5","classMap","media_class","_t6","MediaClassBrowserSettings","children_media_class","icon","_t3","_computeLabelCallback","_computeHelperCallback","ev","_this$context2","stopPropagation","fireEvent","media_content_type","browse_entity_id","detail","_this$value7","_this$selector$media","_this$value8","_this$value9","showMediaBrowserDialog","action","navigateIds","defaultId","defaultType","mediaPickedCallback","pickedMedia","_pickedMedia$navigate","_this$context3","Object","assign","item","map","id","_this$value0","_this$value1","_this$_contextEntitie","_this$_contextEntitie2","metaId","key","preventDefault","args","schema","styles","css","_t7","attribute","Boolean","reflect","element","dialogParams","dialogTag","dialogImport","autocompleteLoginFields","field","autocomplete","autofocus","callWS","UNKNOWN","ON","UNAVAILABLE_STATES","OFF_STATES","arrayLiteralIncludes"],"mappings":"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"}