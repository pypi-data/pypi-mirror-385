# Conway's Life Game (ライフゲーム)
# 5x5のグリッドで3世代実行

# セルの状態を取得（境界外は0）
セル取得 = 入力 盤面, 行, 列 に対し {
    もし 行 が 0 より小さい ならば、{
        0が答え
    }
    もし 列 が 0 より小さい ならば、{
        0が答え
    }
    もし 行 が 5 以上 ならば、{
        0が答え
    }
    もし 列 が 5 以上 ならば、{
        0が答え
    }
    # 2次元配列アクセス: board[row * 5 + col]
    インデックス = 足し算(掛け算(行, 5), 列)
    盤面[インデックス]が答え
}

# 隣接する生きているセルの数をカウント
隣接カウント = 入力 盤面, 行, 列 に対し {
    カウント = 0
    
    # 8方向をチェック
    # 上
    カウント = 足し算(カウント, セル取得(盤面, 引き算(行, 1), 引き算(列, 1)))
    カウント = 足し算(カウント, セル取得(盤面, 引き算(行, 1), 列))
    カウント = 足し算(カウント, セル取得(盤面, 引き算(行, 1), 足し算(列, 1)))
    
    # 左右
    カウント = 足し算(カウント, セル取得(盤面, 行, 引き算(列, 1)))
    カウント = 足し算(カウント, セル取得(盤面, 行, 足し算(列, 1)))
    
    # 下
    カウント = 足し算(カウント, セル取得(盤面, 足し算(行, 1), 引き算(列, 1)))
    カウント = 足し算(カウント, セル取得(盤面, 足し算(行, 1), 列))
    カウント = 足し算(カウント, セル取得(盤面, 足し算(行, 1), 足し算(列, 1)))
    
    カウントが答え
}

# 次の世代を計算
次世代計算 = 入力 現在盤面 に対し {
    新盤面 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    行 = 0
    
    5回、くり返す {
        列 = 0
        5回、くり返す {
            現在セル = セル取得(現在盤面, 行, 列)
            隣接数 = 隣接カウント(現在盤面, 行, 列)
            インデックス = 足し算(掛け算(行, 5), 列)
            
            # ライフゲームのルール
            もし 現在セル が 1 ならば、{
                # 生きているセル
                もし 隣接数 が 2 ならば、{
                    新盤面[インデックス] = 1  # 生存
                }
                もし 隣接数 が 3 ならば、{
                    新盤面[インデックス] = 1  # 生存
                }
            }
            そうでなければ、{
                # 死んでいるセル
                もし 隣接数 が 3 ならば、{
                    新盤面[インデックス] = 1  # 誕生
                }
            }
            
            列を増やす
        }
        行を増やす
    }
    
    新盤面が答え
}

# 必要な補助関数
足し算 = 入力 X, Y に対し {
    Y回、くり返す {
        Xを増やす
    }
    Xが答え
}

引き算 = 入力 X, Y に対し {
    Y回、くり返す {
        Xを減らす
    }
    Xが答え
}

掛け算 = 入力 X, Y に対し {
    結果 = 0
    Y回、くり返す {
        結果 = 足し算(結果, X)
    }
    結果が答え
}

# 初期パターン（グライダー）
# [0,0,0,0,0]  □□□□□
# [0,1,0,0,0]  □■□□□
# [0,0,1,1,0]  □□■■□
# [0,1,1,0,0]  □■■□□
# [0,0,0,0,0]  □□□□□
盤面0 = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]

# 各世代の状態
盤面0
盤面1 = 次世代計算(盤面0)
盤面1
盤面2 = 次世代計算(盤面1)
盤面2
盤面3 = 次世代計算(盤面2)
盤面3