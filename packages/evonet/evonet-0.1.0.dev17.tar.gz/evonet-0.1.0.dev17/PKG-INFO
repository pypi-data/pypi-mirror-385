Metadata-Version: 2.4
Name: evonet
Version: 0.1.0.dev17
Summary: Evolvable neural network core for integration with EvoLib
Author-email: EvoLib <evolib@dismail.de>
License: MIT License
        
        Copyright (c) 2025 EvoLib
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.24
Requires-Dist: pyyaml>=6.0
Requires-Dist: pandas>=2.3.0
Requires-Dist: pydantic<3.0,>=2.7
Requires-Dist: graphviz>=0.20.1
Requires-Dist: matplotlib
Provides-Extra: dev
Requires-Dist: mypy; extra == "dev"
Requires-Dist: types-PyYAML; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"
Requires-Dist: myst-parser; extra == "docs"
Dynamic: license-file

# EvoNet
[![Code Quality & Tests](https://github.com/EvoLib/evo-net/actions/workflows/ci.yml/badge.svg)](https://github.com/EvoLib/evo-net/actions/workflows/ci.yml)
[![License: MIT](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)
[![Project Status: Alpha](https://img.shields.io/badge/status-alpha-orange.svg)](https://github.com/EvoLib/evo-net)

**EvoNet** is a modular and evolvable neural network core designed for integration with [EvoLib](https://github.com/EvoLib/evo-lib).
It supports dynamic topologies, recurrent connections, per-neuron activation, and structural evolution – with a strong emphasis on **clarity**, **transparency**, and **didactic value**.

---

## Features

- **Layer-based but flexible** – allows skip connections, cycles, and recurrent paths
- **Typed neuron roles and connection types** (`NeuronRole`, `ConnectionType`)
- **Topology-aware mutation system** – add/remove neurons and connections, mutate weights, change activations
- **Per-neuron activation functions** – configurable, extensible, evolvable
- **1-step recurrent state logic** – avoids multi-pass stabilization
- **Topology can grow at runtime** – with `add_neuron`, `add_connection`, `split_connection`
- **Debug-friendly architecture** – explicit IDs, labels, roles, directional graphs
- **Designed for evolutionary learning** – mutation, crossover, speciation ready
- **Lightweight & extensible** – pure Python, NumPy-based, no hard dependencies

---

> ⚠️ **This project is in early development (alpha)**. Interfaces and structure may change.

---

## Quick Example

```python
from evonet.core import Nnet

net = Nnet()
net.add_layer()  # Input
net.add_layer()  # Output

net.add_neuron(layer_idx=0, activation="linear", lable="in")
net.add_neuron(layer_idx=1, activation="linear", bias=0.5, lable="out", connect_layer=True)

print(net.calc([1.0]))
```

## License

MIT License - see [MIT License](https://github.com/EvoLib/evo-net/tree/main/LICENSE).

