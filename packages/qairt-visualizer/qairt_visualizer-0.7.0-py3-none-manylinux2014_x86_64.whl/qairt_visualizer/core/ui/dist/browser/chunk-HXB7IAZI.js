import"./chunk-43LQFSHA.js";var n={};n.Archive=class{static open(t){let i=t instanceof Uint8Array?new n.BinaryReader(t):t;if(i&&i.length>512){let e=i.peek(512),h=e.map((s,r)=>r>=148&&r<156?32:s).reduce((s,r)=>s+r,0),o=parseInt(Array.from(e.slice(148,156)).map(s=>String.fromCharCode(s)).join("").split("\0").shift(),8);if(!isNaN(o)&&h===o)return new n.Archive(i)}return null}constructor(t){this._entries=new Map;let i=t.position;for(;t.position<t.length;){let e=new n.Entry(t);if((e.type==="0"||e.type==="1"||e.type==="2")&&this._entries.set(e.name,e.stream),t.position+512>t.length||t.peek(512).every(h=>h===0))break}t.seek(i)}get entries(){return this._entries}};n.Entry=class{constructor(t){let i=t.read(512),e=new n.BinaryReader(i),h=i.map((r,a)=>a>=148&&a<156?32:r).reduce((r,a)=>r+a,0),o="";for(let r=148;r<156&&i[r]!==0;r++)o+=String.fromCharCode(i[r]);if(o=parseInt(o,8),isNaN(o)||h!==o)throw new n.Error("Invalid tar archive.");this._name=e.string(100),e.string(8),e.string(8),e.string(8);let s=e.size();e.string(12),e.string(8),this._type=e.string(1),e.string(100),e.string(6)==="ustar"&&(e.string(2),e.string(32),e.string(32),e.string(8),e.string(8),this._name=e.string(155)+this._name),this._stream=t.stream(s),t.read(s%512===0?0:512-s%512)}get type(){return this._type}get name(){return this._name}get stream(){return this._stream}};n.BinaryReader=class{constructor(t){this._buffer=t,this._length=t.length,this._position=0,this._view=new DataView(t.buffer,t.byteOffset,t.byteLength)}get position(){return this._position}get length(){return this._length}create(t){return new n.BinaryReader(t)}stream(t){return this.create(this.read(t))}seek(t){this._position=t>=0?t:this._length+t}skip(t){this._position+=t}peek(t){if(this._position===0&&t===void 0)return this._buffer;let i=this._position;this.skip(t===void 0?this._length-this._position:t);let e=this._position;return this.seek(i),this._buffer.subarray(i,e)}read(t){if(this._position===0&&t===void 0)return this._position=this._length,this._buffer;let i=this._position;return this.skip(t===void 0?this._length-this._position:t),this._buffer.subarray(i,this._position)}string(t){let i=this.read(t),e=0,h="";for(let o=0;o<t;o++){let s=i[e++];if(s===0)break;h+=String.fromCharCode(s)}return h}size(){let t=this.read(12);if(t[0]&128){t[0]&=127;let e=0n;for(let h of t)if(e=e<<8n|BigInt(h),e>BigInt(Number.MAX_SAFE_INTEGER))throw new n.Error("Tar entry size exceeds safe integer.");return e.toNumber()}let i=String.fromCharCode(...t);return parseInt(i.trim()||"0",8)}};n.Error=class extends Error{constructor(t){super(t),this.name="tar Error"}};var c=n.Archive;export{c as Archive};
