# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/evaluatr',
                'doc_host': 'https://franckalbinet.github.io',
                'git_url': 'https://github.com/franckalbinet/evaluatr',
                'lib_path': 'evaluatr'},
  'syms': { 'evaluatr.downloaders': { 'evaluatr.downloaders.download_doc': ('downloaders.html#download_doc', 'evaluatr/downloaders.py'),
                                      'evaluatr.downloaders.download_docs': ('downloaders.html#download_docs', 'evaluatr/downloaders.py'),
                                      'evaluatr.downloaders.extract_fname': ('downloaders.html#extract_fname', 'evaluatr/downloaders.py'),
                                      'evaluatr.downloaders.flatten_evals_id_doc': ( 'downloaders.html#flatten_evals_id_doc',
                                                                                     'evaluatr/downloaders.py'),
                                      'evaluatr.downloaders.mk_dirs': ('downloaders.html#mk_dirs', 'evaluatr/downloaders.py')},
            'evaluatr.enrichr': { 'evaluatr.enrichr.FixHeadingHierarchy': ('enrichr.html#fixheadinghierarchy', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.HeadingResult': ('enrichr.html#headingresult', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.ImageRelevance': ('enrichr.html#imagerelevance', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.ImgRef': ('enrichr.html#imgref', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.ImgRef.__repr__': ('enrichr.html#imgref.__repr__', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.MarkdownPage': ('enrichr.html#markdownpage', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.MarkdownPage.__init__': ('enrichr.html#markdownpage.__init__', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.MarkdownPage.classify_imgs': ( 'enrichr.html#markdownpage.classify_imgs',
                                                                                   'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.MarkdownPage.describe_imgs': ( 'enrichr.html#markdownpage.describe_imgs',
                                                                                   'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.MarkdownPage.find_img_refs': ( 'enrichr.html#markdownpage.find_img_refs',
                                                                                   'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.MarkdownPage.replace_imgs_with_desc': ( 'enrichr.html#markdownpage.replace_imgs_with_desc',
                                                                                            'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.apply_all_corrections': ('enrichr.html#apply_all_corrections', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.apply_corrections_to_page': ( 'enrichr.html#apply_corrections_to_page',
                                                                                  'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.copy_page_to_enriched': ('enrichr.html#copy_page_to_enriched', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.describe_img': ('enrichr.html#describe_img', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.enrich_images': ('enrichr.html#enrich_images', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.fix_doc_hdgs': ('enrichr.html#fix_doc_hdgs', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.fix_md': ('enrichr.html#fix_md', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.format_hdgs': ('enrichr.html#format_hdgs', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.get_hdgs': ('enrichr.html#get_hdgs', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.get_hdgs_with_pages': ('enrichr.html#get_hdgs_with_pages', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.group_corrections_by_page': ( 'enrichr.html#group_corrections_by_page',
                                                                                  'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.has_images': ('enrichr.html#has_images', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.md_plus_evaluation': ('enrichr.html#md_plus_evaluation', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.process_single_page': ('enrichr.html#process_single_page', 'evaluatr/enrichr.py'),
                                  'evaluatr.enrichr.setup_enhanced_dir': ('enrichr.html#setup_enhanced_dir', 'evaluatr/enrichr.py')},
            'evaluatr.frameworks': { 'evaluatr.frameworks.EvalData': ('frameworks.html#evaldata', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.EvalData.__init__': ( 'frameworks.html#evaldata.__init__',
                                                                                'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.EvalData._load_all': ( 'frameworks.html#evaldata._load_all',
                                                                                 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.EvalDict': ('frameworks.html#evaldict', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.EvalDict.__init__': ( 'frameworks.html#evaldict.__init__',
                                                                                'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.EvalDict.__repr__': ( 'frameworks.html#evaldict.__repr__',
                                                                                'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.Framework': ('frameworks.html#framework', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.Framework.__str__': ( 'frameworks.html#framework.__str__',
                                                                                'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.FrameworkCat': ('frameworks.html#frameworkcat', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.FrameworkCat.__str__': ( 'frameworks.html#frameworkcat.__str__',
                                                                                   'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.FrameworkInfo': ('frameworks.html#frameworkinfo', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.FrameworkInfo.__init__': ( 'frameworks.html#frameworkinfo.__init__',
                                                                                     'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData': ('frameworks.html#iomevaldata', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.__init__': ( 'frameworks.html#iomevaldata.__init__',
                                                                                   'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.gcm_objectives': ( 'frameworks.html#iomevaldata.gcm_objectives',
                                                                                         'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.gcm_objectives_small': ( 'frameworks.html#iomevaldata.gcm_objectives_small',
                                                                                               'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.gcm_srf_lut': ( 'frameworks.html#iomevaldata.gcm_srf_lut',
                                                                                      'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.srf_crosscutting_priorities': ( 'frameworks.html#iomevaldata.srf_crosscutting_priorities',
                                                                                                      'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.srf_enablers': ( 'frameworks.html#iomevaldata.srf_enablers',
                                                                                       'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.srf_gcm_lut': ( 'frameworks.html#iomevaldata.srf_gcm_lut',
                                                                                      'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.IOMEvalData.srf_objectives': ( 'frameworks.html#iomevaldata.srf_objectives',
                                                                                         'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.evalify': ('frameworks.html#evalify', 'evaluatr/frameworks.py'),
                                     'evaluatr.frameworks.find_srf_output_by_id': ( 'frameworks.html#find_srf_output_by_id',
                                                                                    'evaluatr/frameworks.py')},
            'evaluatr.mappr': { 'evaluatr.mappr.CoreSectionsOutput': ('mappr.html#coresectionsoutput', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.EvidenceLocation': ('mappr.html#evidencelocation', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator': ('mappr.html#pipelineorchestrator', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.__init__': ( 'mappr.html#pipelineorchestrator.__init__',
                                                                                  'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator._tag_kwargs': ( 'mappr.html#pipelineorchestrator._tag_kwargs',
                                                                                     'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.get_combined_context': ( 'mappr.html#pipelineorchestrator.get_combined_context',
                                                                                              'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.get_filtered_srf_outputs': ( 'mappr.html#pipelineorchestrator.get_filtered_srf_outputs',
                                                                                                  'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.get_stage1_context': ( 'mappr.html#pipelineorchestrator.get_stage1_context',
                                                                                            'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.identify_sections': ( 'mappr.html#pipelineorchestrator.identify_sections',
                                                                                           'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.process_themes_batch': ( 'mappr.html#pipelineorchestrator.process_themes_batch',
                                                                                              'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.run_stage1': ( 'mappr.html#pipelineorchestrator.run_stage1',
                                                                                    'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.run_stage2': ( 'mappr.html#pipelineorchestrator.run_stage2',
                                                                                    'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineOrchestrator.run_stage3': ( 'mappr.html#pipelineorchestrator.run_stage3',
                                                                                    'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineResults': ('mappr.html#pipelineresults', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineResults.__call__': ('mappr.html#pipelineresults.__call__', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.PipelineResults.__init__': ('mappr.html#pipelineresults.__init__', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.SectionsCache': ('mappr.html#sectionscache', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.Stage': ('mappr.html#stage', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.Stage.__str__': ('mappr.html#stage.__str__', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.TagResult': ('mappr.html#tagresult', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.TaggingResult': ('mappr.html#taggingresult', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.TaggingResult.__init__': ('mappr.html#taggingresult.__init__', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.ThemeTaggingCache': ('mappr.html#themetaggingcache', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.ThemeTaggingOutput': ('mappr.html#themetaggingoutput', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.TraceContext': ('mappr.html#tracecontext', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.TraceContext.__init__': ('mappr.html#tracecontext.__init__', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.TraceContext.__repr__': ('mappr.html#tracecontext.__repr__', 'evaluatr/mappr.py'),
                                'evaluatr.mappr._build_base_data': ('mappr.html#_build_base_data', 'evaluatr/mappr.py'),
                                'evaluatr.mappr._format_console_msg': ('mappr.html#_format_console_msg', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.extract_core_content': ('mappr.html#extract_core_content', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.find_enriched_path': ('mappr.html#find_enriched_path', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.find_section_path': ('mappr.html#find_section_path', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.flatten_sections': ('mappr.html#flatten_sections', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.format_crosscutting_theme': ('mappr.html#format_crosscutting_theme', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.format_enabler_theme': ('mappr.html#format_enabler_theme', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.format_gcm_theme': ('mappr.html#format_gcm_theme', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.format_srf_output': ('mappr.html#format_srf_output', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.format_toc_for_llm': ('mappr.html#format_toc_for_llm', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.get_content_tool': ('mappr.html#get_content_tool', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.get_filtered_srf_output_ids': ( 'mappr.html#get_filtered_srf_output_ids',
                                                                                'evaluatr/mappr.py'),
                                'evaluatr.mappr.get_from_cache': ('mappr.html#get_from_cache', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.identify_core_sections': ('mappr.html#identify_core_sections', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.limit': ('mappr.html#limit', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.load_report': ('mappr.html#load_report', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.log_analysis_event': ('mappr.html#log_analysis_event', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.parse_force_refresh': ('mappr.html#parse_force_refresh', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.parse_response': ('mappr.html#parse_response', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.run_selected_stages': ('mappr.html#run_selected_stages', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.setup_logger': ('mappr.html#setup_logger', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.setup_trace_logging': ('mappr.html#setup_trace_logging', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.store_in_cache': ('mappr.html#store_in_cache', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.tag_evaluation': ('mappr.html#tag_evaluation', 'evaluatr/mappr.py'),
                                'evaluatr.mappr.tag_theme': ('mappr.html#tag_theme', 'evaluatr/mappr.py')},
            'evaluatr.ocr': { 'evaluatr.ocr.clean_pdf_name': ('ocr.html#clean_pdf_name', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.create_batch_ocr_job': ('ocr.html#create_batch_ocr_job', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.download_and_parse_results': ('ocr.html#download_and_parse_results', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.get_doc_subtype': ('ocr.html#get_doc_subtype', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.get_pdfs_and_dir': ('ocr.html#get_pdfs_and_dir', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.ocr_evaluation': ('ocr.html#ocr_evaluation', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.process_all_reports_batch': ('ocr.html#process_all_reports_batch', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.process_batch_results': ('ocr.html#process_batch_results', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.process_single_evaluation_batch': ( 'ocr.html#process_single_evaluation_batch',
                                                                                'evaluatr/ocr.py'),
                              'evaluatr.ocr.save_page_images': ('ocr.html#save_page_images', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.setup_output_dirs': ('ocr.html#setup_output_dirs', 'evaluatr/ocr.py'),
                              'evaluatr.ocr.submit_and_monitor_batch_job': ('ocr.html#submit_and_monitor_batch_job', 'evaluatr/ocr.py')},
            'evaluatr.readers': { 'evaluatr.readers.EvalReader': ('readers.html#evalreader', 'evaluatr/readers.py'),
                                  'evaluatr.readers.EvalReader.__call__': ('readers.html#evalreader.__call__', 'evaluatr/readers.py'),
                                  'evaluatr.readers.EvalReader.__init__': ('readers.html#evalreader.__init__', 'evaluatr/readers.py'),
                                  'evaluatr.readers.EvalReader.read': ('readers.html#evalreader.read', 'evaluatr/readers.py'),
                                  'evaluatr.readers.EvalReader.tfm': ('readers.html#evalreader.tfm', 'evaluatr/readers.py'),
                                  'evaluatr.readers.EvalReader.to_json': ('readers.html#evalreader.to_json', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader': ('readers.html#iomreporeader', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader.__init__': ('readers.html#iomreporeader.__init__', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader._mk_docs': ('readers.html#iomreporeader._mk_docs', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader._mk_id': ('readers.html#iomreporeader._mk_id', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader.read': ('readers.html#iomreporeader.read', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader.tfm': ('readers.html#iomreporeader.tfm', 'evaluatr/readers.py'),
                                  'evaluatr.readers.IOMRepoReader.to_json': ('readers.html#iomreporeader.to_json', 'evaluatr/readers.py'),
                                  'evaluatr.readers.iom_input_cfg': ('readers.html#iom_input_cfg', 'evaluatr/readers.py'),
                                  'evaluatr.readers.load_evals': ('readers.html#load_evals', 'evaluatr/readers.py')}}}
