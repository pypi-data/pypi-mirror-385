[build-system]
requires = ["hatchling", "PyYAML", "typing-extensions"]
build-backend = "hatchling.build"

[project]
name = "coordinated-workers"
version = "v2.1.0"
authors = [
    { name = "michaeldmitry", email = "33381599+michaeldmitry@users.noreply.github.com" },
]
description = "Shared abstractions to simplify the creation and management of charms following the coordinator-worker pattern."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
dependencies = [
#    NOTE: always replicate any changes in dependencies to Coordinator and Worker tester charms
#          as they should always match this
    "crossplane",
    "ops[tracing]",
    "pydantic",
    "lightkube>=v0.15.4",
    # charms.tls_certificates_interface.v4.tls_certificates
    "cryptography",
    "charmed-service-mesh-helpers>=0.2.0",
    "lightkube-extensions",
    "cosl>=1.3.1",
]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Development Status :: 4 - Beta",
    "Typing :: Typed",
]
[dependency-groups]
dev = [
    # UNIT TESTS
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "ops[testing]",
    # LINTING
    "pyright",
    "ruff",
    # INTEGRATION TESTS
    "jubilant",
    "pytest-jubilant",
    "sh",
    "tenacity",
    "juju-doctor"
]
[project.urls]
"Homepage" = "https://github.com/canonical/cos-coordinated-workers"
"Bug Tracker" = "https://github.com/canonical/cos-coordinated-workers/issues"

[package]
include = ["py.typed"]

# Testing tools configuration
[tool.coverage.run]
branch = true
parallel = true
source = ["src"]
omit = ["tests/**", "lib/**"]

[tool.coverage.report]
show_missing = true


# Linting tools configuration
[tool.ruff]
line-length = 99
exclude = ["__pycache__", "*.egg_info", ".github", ".venv"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001"]
extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "E402",
]
ignore = ["E501", "D107"]
per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104"] }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.pyright]
include = ["src"]

extraPaths = ["lib", "src/coordinated_workers", "probes"]
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportIncompatibleMethodOverride = false
reportImportCycles = false
reportTypeCommentUsage = false

[tool.hatch.metadata]
# allow git+ dependencies in pyproject
allow-direct-references = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
log_format = "%(asctime)s %(levelname)-9s %(module)s:%(filename)s:%(lineno)d %(message)s"
