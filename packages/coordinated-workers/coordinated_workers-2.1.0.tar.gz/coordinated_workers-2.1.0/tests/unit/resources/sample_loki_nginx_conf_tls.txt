worker_processes 5;
error_log /dev/stderr error;
pid /tmp/nginx.pid;
worker_rlimit_nofile 8192;
events {
    worker_connections 4096;
}
http {
    upstream read {
        zone read_zone 64k;
        server worker-address:3100 resolve;
    }
    upstream write {
        zone write_zone 64k;
        server worker-address:3100 resolve;
    }
    upstream all {
        zone all_zone 64k;
        server worker-address:3100 resolve;
    }
    upstream backend {
        zone backend_zone 64k;
        server worker-address:3100 resolve;
    }
    upstream worker {
        zone worker_zone 64k;
        server worker-address:3100 resolve;
    }
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local]  $status "$request" $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    map $status $loggable {
        ~^[23] 0;
        default 1;
    }
    access_log /dev/stderr;
    sendfile on;
    tcp_nopush on;
    resolver 198.18.0.0;
    map $http_x_scope_orgid $ensured_x_scope_orgid {
        default $http_x_scope_orgid;
        '' anonymous;
    }
    proxy_read_timeout 300;
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        proxy_set_header X-Scope-OrgID $ensured_x_scope_orgid;
        server_name localhost;
        ssl_certificate /etc/nginx/certs/server.cert;
        ssl_certificate_key /etc/nginx/certs/server.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        location = / {
            return 200 "'OK'";
            auth_basic off;
        }
        location = /status {
            stub_status;
        }
        location = /loki/api/v1/push {
            set $backend https://write;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location = /loki/api/v1/rules {
            set $backend https://backend;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location = /prometheus {
            set $backend https://backend;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location = /api/v1/rules {
            set $backend https://backend/loki/api/v1/rules;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location = /loki/api/v1/tail {
            set $backend https://read;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location ~ /loki/api/.* {
            set $backend https://read;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
        }
        location = /loki/api/v1/format_query {
            set $backend https://worker;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location = /loki/api/v1/status/buildinfo {
            set $backend https://worker;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
        location = /ring {
            set $backend https://worker;
            proxy_pass $backend;
            proxy_connect_timeout 5s;
        }
    }
}