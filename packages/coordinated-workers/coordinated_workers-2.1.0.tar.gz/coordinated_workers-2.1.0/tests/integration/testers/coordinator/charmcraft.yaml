# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.
name: coordinator-tester
description: tester charm for the Coordinator
summary: tester charm for the Coordinator
type: charm
platforms:
  ubuntu@24.04:amd64:

#config:

provides:
  cluster:
    interface: cluster
    description: |
      Coordinator's relation to Worker
  grafana-dashboard:
    optional: true
    interface: grafana_dashboard
    description: |
      Forwards the built-in grafana dashboard(s) for monitoring Tempo.
  metrics-endpoint:
    optional: true
    interface: prometheus_scrape
    description: |
      Exposes the Prometheus metrics endpoint providing telemetry about the
      Tempo instance.
  provide-cmr-mesh:
    interface: cross_model_mesh

requires:
  s3:
    interface: s3
    limit: 1
    description: |
      Obtains access to the s3 bucket for data storage. The charm needs this integration to work.
  self-charm-tracing:
    optional: true
    interface: tracing
    description: |
      Integration to enable Tempo to send its own charm traces to another Tempo instance.
    limit: 1
  self-workload-tracing:
    optional: true
    interface: tracing
    description: |
      Integration to enable Tempo to send its own workload traces to another Tempo instance.
    limit: 1
  logging:
    optional: true
    interface: loki_push_api
    description: |
      Integration with Loki to push Tempo logs to the observability stack.
  certificates:
    optional: true
    interface: tls-certificates
    limit: 1
    description: |
      Certificate and key files for securing Tempo internal and external
      communications with TLS.
  receive-datasource:
    optional: true
    interface: grafana_datasource_exchange
    description: |
      Integration to share with other COS components this charm's datasources, and receive theirs.
  catalogue:
    optional: true
    interface: catalogue
    description: |
      Integration to help users discover Tempo's UI, providing visibility into Tempo's cluster members and their health status.
  service-mesh:
    limit: 1
    interface: service_mesh
  require-cmr-mesh:
    interface: cross_model_mesh

containers:
  nginx:
    resource: nginx-image
  nginx-prometheus-exporter:
    resource: nginx-prometheus-exporter-image

resources:
  nginx-image:
    type: oci-image
    description: OCI image for nginx
    upstream-source: ghcr.io/canonical/nginx@sha256:6415a2c5f25f1d313c87315a681bdc84be80f3c79c304c6744737f9b34207993 # 1.27.5 rock
  nginx-prometheus-exporter-image:
    type: oci-image
    description: OCI image for nginx-prometheus-exporter
    upstream-source: nginx/nginx-prometheus-exporter:1.1.0
parts:
  charm:
    plugin: uv
    source: .
    build-packages: [git] # handy for git+ dependencies during development
    build-snaps: [astral-uv]
