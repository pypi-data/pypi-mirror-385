[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "brokle"
dynamic = ["version"]
description = "Brokle Platform Python SDK for intelligent LLM routing, caching, and observability"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Brokle Platform", email = "support@brokle.com"}
]
maintainers = [
    {name = "Brokle Platform", email = "support@brokle.com"}
]
keywords = ["ai", "llm", "brokle", "openai", "observability", "routing", "caching", "drop-in", "decorator", "patterns"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation>=0.41b0",
    "opentelemetry-exporter-otlp>=1.20.0",
    "opentelemetry-semantic-conventions>=0.41b0",
    "opentelemetry-propagator-b3>=1.20.0",
    "opentelemetry-propagator-jaeger>=1.20.0",
    "opentelemetry-propagator-aws-xray>=1.0.0",
    "typing-extensions>=4.0.0",
    "python-dotenv>=1.0.0",
    "backoff>=2.2.1",
    "python-ulid>=2.0.0",
]

[project.optional-dependencies]
openai = [
    "openai>=1.0.0",
    "wrapt>=1.15.0",
]
anthropic = [
    "anthropic>=0.5.0",
]
google = [
    "google-generativeai>=0.3.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]
all = [
    "openai>=1.0.0",
    "wrapt>=1.15.0",
    "anthropic>=0.5.0",
    "google-generativeai>=0.3.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/brokle-ai/brokle-python"
Documentation = "https://docs.brokle.com/sdk/python"
Repository = "https://github.com/brokle-ai/brokle-python"
"Bug Tracker" = "https://github.com/brokle-ai/brokle-python/issues"
Changelog = "https://github.com/brokle-ai/brokle-python/blob/main/CHANGELOG.md"

[tool.setuptools.dynamic]
version = {attr = "brokle._version.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["brokle*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
brokle = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "anthropic.*",
    "google.*",
    "wrapt.*",
    "backoff.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=brokle",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["brokle"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
