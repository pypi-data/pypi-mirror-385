WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT    = _{ "//" ~ (!"\n" ~ ANY)* | "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

duper       = _{ SOI ~ duper_trunk ~ EOI }
duper_value = _{ SOI ~ described_value ~ EOI }

duper_trunk =  { identifier ~ "(" ~ (object | array) ~ ")" | object | array }
identifier  = @{ UPPERCASE_LETTER ~ (("-" | "_")? ~ LETTER | NUMBER)* }

described_value =  { identifier ~ "(" ~ value ~ ")" | value }
value           = _{ object | array | tuple | string | raw_string | bytes | raw_bytes | float | integer | boolean | null }

object    =  {
    "{" ~ ","? ~ "}"
  | "{" ~ pair ~ ("," ~ pair)* ~ ","? ~ "}"
}
pair      =  { key ~ ":" ~ described_value }
key       = _{ string | raw_string | plain_key }
plain_key = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

tuple = {
    "()"
  | "(" ~ "," ~ ")"
  | "(" ~ described_value ~ ("," ~ described_value)* ~ ","? ~ ")"
}

array = {
    "[" ~ ","? ~ "]"
  | "[" ~ described_value ~ ("," ~ described_value)* ~ ","? ~ "]"
}

inner = @{ char* }
char  =  {
    !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
  | "\\" ~ ("x" ~ ASCII_HEX_DIGIT{2})
  | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

string = ${ "\"" ~ inner ~ "\"" }

bytes = ${ "b\"" ~ inner ~ "\"" }

raw_string          = ${
    "r" ~ PUSH("#"*) ~ "\"" ~ raw_string_interior ~ "\"" ~ POP
}
raw_string_interior = @{ (!("\"" ~ PEEK) ~ ANY)* }

raw_bytes          = ${
    "br" ~ PUSH("#"*) ~ "\"" ~ raw_bytes_interior ~ "\"" ~ POP
}
raw_bytes_interior = @{ (!("\"" ~ PEEK) ~ ANY)* }

integer         =  { hex_integer | octal_integer | binary_integer | decimal_integer }
decimal_integer = @{ ("+" | "-")? ~ decimal_digits }
decimal_digits  =  { "0" | ASCII_NONZERO_DIGIT ~ ("_"? ~ ASCII_DIGIT)* }
hex_integer     = @{ "0x" ~ hex_digits }
hex_digits      =  { ASCII_HEX_DIGIT ~ ("_"? ~ ASCII_HEX_DIGIT)* }
octal_integer   = @{ "0o" ~ octal_digits }
octal_digits    =  { ASCII_OCT_DIGIT ~ ("_"? ~ ASCII_OCT_DIGIT)* }
binary_integer  = @{ "0b" ~ binary_digits }
binary_digits   =  { ASCII_BIN_DIGIT ~ ("_"? ~ ASCII_BIN_DIGIT)* }

float    = @{
    ("+" | "-")? ~ ("0" | ASCII_NONZERO_DIGIT ~ ("_"? ~ ASCII_DIGIT)*) ~ ((decimal ~ exponent?) | (decimal? ~ exponent))
}
decimal  =  { "." ~ ASCII_DIGIT ~ ("_"? ~ ASCII_DIGIT)* ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT ~ ("_"? ~ ASCII_DIGIT)*)? }
exponent =  { ^"e" ~ ("+" | "-")? ~ ASCII_DIGIT ~ ("_"? ~ ASCII_DIGIT)* }

boolean = { "true" | "false" }

null = { "null" }
