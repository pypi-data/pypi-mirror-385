[project]
name = "storyteller-ai"
description = "A storyteller project - where your imagination meets state-of-the-art AI creativity."
readme = "README.rst"
version = "0.0.1"
dependencies = [
    "fal-client",
    "langchain",
    "langchain-community",
    "langchain-core",
    "langchain-openai",
    "sentence-transformers",
    "traitlets",
    "vega-datasets",
    "markdown",
    "httpx",
    "openai",
    "openpyxl",
    "pandoc",
    "protobuf",
    "pyarrow",
    "pydantic",
    "fastapi",
    "google-cloud-secret-manager",
    "google-crc32c",
    "google-genai",
    "itsdangerous",
    "httpx",
    "anywidget",
    "authlib",
    "pypandoc",
    "cloudpathlib[gs]",
    "Pillow",
    "marimo",
    "altair",
    "python-dotenv",
    "python-multipart",
    "reportlab",
    "starlette",
    "tiktoken",
]
authors = [
    {name = "Artur Barseghyan", email = "artur.barseghyan@gmail.com"},
    {name = "Dale Richardson", email = "artur.barseghyan@gmail.com"},
]
maintainers = [
    {name = "Artur Barseghyan", email = "artur.barseghyan@gmail.com"},
    {name = "Dale Richardson", email = "artur.barseghyan@gmail.com"},
]
license = "MIT"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python",
    "Topic :: Software Development",
]
keywords = ["storyteller", "ai", "storyteller-ai"]

[project.urls]
Homepage = "https://github.com/storyteller-project/storyteller"
Issues = "https://github.com/storyteller-project/storyteller/issues"
Documentation = "https://storyteller.readthedocs.io/"
Repository = "https://github.com/storyteller-project/storyteller"
Changelog = "https://storyteller.readthedocs.io/en/latest/changelog.html"

[project.optional-dependencies]
all = ["fake.py[dev,test,docs]"]
dev = [
    "build",
    "detect-secrets",
    "doc8",
    "IPython",
    "mypy",
    "pkginfo",
    "pydoclint",
    "ruff",
    "twine",
    "uv",
    "wheel",
]
test = [
    "fake.py",
    "pytest",
    "pytest-cov",
    "pytest-codeblock",
]
docs = [
    "sphinx<6.0",
    "pygments",
    "sphinx-autobuild",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-no-pragma",
    "sphinx-design",
    "sphinx-revealjs",

]


[tool.black]
line-length = 90
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
  | migrations
  | wetty
  | .venv
)/
'''

# Build system information below.
# NOTE: You don't need this in your own Black configuration.
[build-system]
requires = ["setuptools>=41.0", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"
combine_as_imports = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 90
known_first_party = ["playground"]
known_third_party = []
skip = ["wsgi.py", ".venv/", "wetty"]

[tool.ruff]
line-length = 90

# Enable Pyflakes `E` and `F` codes by default.
lint.select = ["E", "F"]
lint.ignore = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    ".venv",
    "docs",
    "wetty",
]
lint.per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9.
target-version = "py39"

[tool.doc8]
ignore-path = ["_build/", "wetty", ".venv",]
quiet = true
--max-line-length = 80

[tool.pytest.ini_options]
minversion = "0.6.7"
addopts = [
    "-ra",
    "-vvv",
    "-q",
    "--cov=playground",
    "--ignore=.tox",
    "--ignore=requirements",
    "--ignore=release",
    "--ignore=tmp",
    "--capture=no",
]
testpaths = [
    "**/*.py",
]
pythonpath = ["."]

[tool.coverage.run]
relative_files = true
omit = [
    ".tox/*",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "@overload",
]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = [
    '^_build',
    '^wetty',
    '^\.venv'
]
