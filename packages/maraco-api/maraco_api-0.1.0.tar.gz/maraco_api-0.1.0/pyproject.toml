[build-system]
requires = ["setuptools>=61.0", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "maraco-api"
version = "0.1.0"
description = "Marine Acoustic Classification API - CPU-optimized marine sound classification"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MarACO Team", email = "contact@maraco.ai"}
]
maintainers = [
    {name = "MarACO Team", email = "contact@maraco.ai"}
]
keywords = [
    "marine", "acoustic", "classification", "machine learning", "audio", 
    "whale", "sonar", "ocean", "bioacoustics", "marine biology",
    "sound detection", "audio analysis", "marine monitoring"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Natural Language :: English",
    "Environment :: Console",
    "Environment :: Web Environment",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "librosa>=0.9.0",
    "soundfile>=0.10.0",
    "joblib>=1.1.0",
    "pydub>=0.25.0",
    "resampy>=0.3.0",
    "xgboost>=1.6.0",
    "imbalanced-learn>=0.8.0",
    "pandas>=1.3.0",
    "h5py>=3.6.0",
    "tqdm>=4.62.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
web = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://maraco.ai"
Documentation = "https://maraco-api.readthedocs.io/"
Repository = "https://github.com/maraco-ai/maraco-api"
"Bug Reports" = "https://github.com/maraco-ai/maraco-api/issues"
"Source" = "https://github.com/maraco-ai/maraco-api"

[project.scripts]
maraco-train = "maraco.training.train_model:main"
maraco-validate = "maraco.training.validate_model:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["maraco*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
maraco = [
    "models/*.json",
    "config/*.yaml",
    "config/*.json",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
