Metadata-Version: 2.4
Name: maraco-api
Version: 0.1.0
Summary: Marine Acoustic Classification API - CPU-optimized marine sound classification
Home-page: https://github.com/maraco/maraco-api
Author: MarACO Team
Author-email: MarACO Team <contact@maraco.ai>
Maintainer-email: MarACO Team <contact@maraco.ai>
License: MIT
Project-URL: Homepage, https://maraco.ai
Project-URL: Documentation, https://maraco-api.readthedocs.io/
Project-URL: Repository, https://github.com/maraco-ai/maraco-api
Project-URL: Bug Reports, https://github.com/maraco-ai/maraco-api/issues
Project-URL: Source, https://github.com/maraco-ai/maraco-api
Keywords: marine,acoustic,classification,machine learning,audio,whale,sonar,ocean,bioacoustics,marine biology,sound detection,audio analysis,marine monitoring
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Multimedia :: Sound/Audio :: Analysis
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Natural Language :: English
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.21.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: scikit-learn>=1.0.0
Requires-Dist: librosa>=0.9.0
Requires-Dist: soundfile>=0.10.0
Requires-Dist: joblib>=1.1.0
Requires-Dist: pydub>=0.25.0
Requires-Dist: resampy>=0.3.0
Requires-Dist: xgboost>=1.6.0
Requires-Dist: imbalanced-learn>=0.8.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: h5py>=3.6.0
Requires-Dist: tqdm>=4.62.0
Requires-Dist: click>=8.0.0
Requires-Dist: pyyaml>=6.0
Provides-Extra: web
Requires-Dist: fastapi>=0.104.0; extra == "web"
Requires-Dist: uvicorn[standard]>=0.24.0; extra == "web"
Requires-Dist: python-multipart>=0.0.6; extra == "web"
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=5.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=5.0.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.0.0; extra == "docs"
Requires-Dist: myst-parser>=0.18.0; extra == "docs"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# MarACO - Marine Acoustic Classification API

A Python package for marine acoustic sound classification optimized for CPU usage with balanced speed and accuracy.

## Features

- **Fast Classification**: <200ms per 5-second audio clip on CPU
- **High Accuracy**: >90% accuracy on marine acoustic sounds
- **Noise Reduction**: Built-in noise reduction and audio preprocessing
- **Multiple Classes**: Fin Whale, Humpback Whale, Right Whale, Sonar, Vessels, Explosions, Physical Noise
- **Easy Integration**: Simple API for quick integration into your projects
- **CPU Optimized**: Designed specifically for CPU-only environments

## Installation

```bash
pip install maraco-api
```

## Quick Start

```python
from maraco import MarineAcousticClassifier

# Initialize classifier
classifier = MarineAcousticClassifier()

# Classify a single audio file
result = classifier.predict("audio_file.wav")
print(f"Class: {result['class']}, Confidence: {result['confidence']:.2f}")

# Batch processing
results = classifier.predict_batch(["file1.wav", "file2.wav"])
for result in results:
    print(f"File: {result['filename']}, Class: {result['class']}")
```

## Supported Audio Formats

- WAV, AIFF, MP3, FLAC
- Sample rates: 600Hz - 48kHz (automatically resampled)
- Duration: 1-30 seconds (optimal: 2-5 seconds)

## Performance

- **Processing Speed**: <200ms per clip
- **Memory Usage**: <500MB RAM
- **Model Size**: <50MB
- **Accuracy**: >90% on test data

## License

MIT License
