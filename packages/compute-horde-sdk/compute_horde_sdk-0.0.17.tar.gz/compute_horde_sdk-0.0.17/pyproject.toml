[project]
name = "compute-horde-sdk"
requires-python = ">=3.10,<3.13"  # bittensor doesn't work on 3.13+
keywords = []
license = {text = "MIT"}
readme = "README.md"
version = "0.0.17"
authors = [
    {name = "Reef Technologies", email = "opensource@reef.pl"},
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "asgiref>=3.8.0,<4",
    "pydantic<3,>=2.3",
    "httpx>=0.26.0",
    "cryptography>=42.0.8",
    "aiohttp>=3.12.0",
    "bittensor-wallet~=4.0",
    "tenacity>=9.0.0,<10.0.0",
    "huggingface-hub[hf_transfer]>=0.26.1",
    "async-timeout>=4.0,<5.0; python_version < '3.11'",
    "backports.strenum; python_version < '3.11'"
]

[project.urls]
"Source" = "https://github.com/backend-developers-ltd/compute-horde-sdk"
"Issue Tracker" = "https://github.com/backend-developers-ltd/compute-horde-sdk/issues"

[project.optional-dependencies]
fallback = [
    "build",
    "wheel",
    "setuptools",
    "skypilot[runpod]>=0.8.1,<0.9.0",
    "gpustat<1.1",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[dependency-groups]
format = [
    "ruff",
    "nox==2025.05.01",
]
lint = [
    "ruff",
    "codespell[toml]",
]
release = [
    "towncrier>=23.11.0,<24",
]
type_check = [
    "django-stubs[compatible-mypy]",
    "djangorestframework-stubs[compatible-mypy]>=3.15.1",
    "mypy",
    "types-freezegun",
    "types-python-dateutil",
    "types-requests",
]
test = [
    "pytest>=8.2.1",
    "pytest-asyncio>=0.24.0",
    "responses>=0.25.0",
    "freezegun>=1.5.1",
    "faker>=33.1.0",
    "pytest-django>=4.9.0",
    "pytest-apiver",
    "pytest-xdist",
    "pytest-httpx>=0.35.0",
]
docs = [
    "sphinx>=8.1.0",
    "sphinx-multiversion>=0.2.4",
    "sphinx-rtd-theme>=3.0.2",
]

[tool.pytest.ini_options]
pythonpath = ["."]  # allow for `import tests` in test files
target_package_name = "compute_horde_sdk"  # required by pytest-apiver
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "D",
    "E", "F", "I", "UP",
    "TC005",
]
ignore = [
    "D100", "D105", "D107", "D200", "D202", "D203", "D205", "D212", "D400", "D401", "D415",
    "D101", "D102", "D103", "D104", # TODO remove once we have docstring for all public methods
    "UP038",  # this is plain stupid!
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/**" = ["D", "F403", "F405"]

[tool.codespell]
skip = "*.min.js,pdm.lock,build"
ignore-words-list = "datas"

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
title_format = "## [{version}](https://github.com/backend-developers-ltd/compute-horde-sdk/releases/tag/v{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/backend-developers-ltd/compute-horde-sdk/issues/{issue})"

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Doc"
showcontent = true

[[tool.towncrier.type]]
directory = "infrastructure"
name = "Infrastructure"
showcontent = true

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = [
    "bittensor",
    "nox",
    "pytest",
    "runpod",
    "sky.*",
    "tests.*",
]
ignore_missing_imports = true
