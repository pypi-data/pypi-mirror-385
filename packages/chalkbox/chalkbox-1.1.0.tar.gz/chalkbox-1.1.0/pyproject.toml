[tool.poetry]
name = "chalkbox"
version = "1.1.0"
description = "A batteries-included CLI UI kit on top of Rich"
authors = [
    "Robin Schulz <bulletinmybeard@gmail.com>"
]
readme = "README.md"
packages = [{include = "chalkbox"}]
include = ["CHANGELOG.md"]
license = "MIT"
homepage = "https://github.com/bulletinmybeard/chalkbox"
repository = "https://github.com/bulletinmybeard/chalkbox"
keywords = ["cli", "ui", "rich", "terminal", "console"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.12"
rich = "^14.2.0"
toml = "^0.10.2"
psutil = "^5.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
mypy = "^1.7.0"
ruff = "^0.1.9"
pytest-cov = "^4.1.0"
types-toml = "^0.10.8"
bandit = "^1.8.6"
mdformat = "^0.7.22"
mdformat-gfm = "^0.4.1"
mdformat-tables = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".git",
    ".venv",
    "venv",
    "build",
    "dist",
    "__pycache__",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
    "S",      # flake8-bandit (security)
]
ignore = [
    "E501",   # Line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603", "S607"]  # Allow assert, subprocess in tests
"demos/*" = ["S311", "S603", "S607"]  # Allow pseudo-random generators, subprocess in demos

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["chalkbox"]
known-third-party = ["rich", "psutil"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_defs = true
check_untyped_defs = true
exclude = [
    ".venv/",
    "venv/",
    "build/",
    "dist/",
    "demos/",
]

[tool.mdformat]
wrap = 100          # Match Python line length
number = false      # Don't auto-number lists
end_of_line = "lf"  # Unix line endings
